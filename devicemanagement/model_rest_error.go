/*
WEM Public API Guide

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package devicemanagement

import (
	"encoding/json"
)

// checks if the RestError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestError{}

// RestError struct for RestError
type RestError struct {
	Type string `json:"type"`
	Detail string `json:"detail"`
	Parameters []RestErrorParametersInner `json:"parameters,omitempty"`
}

// NewRestError instantiates a new RestError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestError(type_ string, detail string) *RestError {
	this := RestError{}
	this.Type = type_
	this.Detail = detail
	return &this
}

// NewRestErrorWithDefaults instantiates a new RestError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestErrorWithDefaults() *RestError {
	this := RestError{}
	return &this
}

// GetType returns the Type field value
func (o *RestError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RestError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RestError) SetType(v string) {
	o.Type = v
}

// GetDetail returns the Detail field value
func (o *RestError) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *RestError) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *RestError) SetDetail(v string) {
	o.Detail = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *RestError) GetParameters() []RestErrorParametersInner {
	if o == nil || IsNil(o.Parameters) {
		var ret []RestErrorParametersInner
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestError) GetParametersOk() ([]RestErrorParametersInner, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *RestError) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []RestErrorParametersInner and assigns it to the Parameters field.
func (o *RestError) SetParameters(v []RestErrorParametersInner) {
	o.Parameters = v
}

func (o RestError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["detail"] = o.Detail
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableRestError struct {
	value *RestError
	isSet bool
}

func (v NullableRestError) Get() *RestError {
	return v.value
}

func (v *NullableRestError) Set(val *RestError) {
	v.value = val
	v.isSet = true
}

func (v NullableRestError) IsSet() bool {
	return v.isSet
}

func (v *NullableRestError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestError(val *RestError) *NullableRestError {
	return &NullableRestError{value: val, isSet: true}
}

func (v NullableRestError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


