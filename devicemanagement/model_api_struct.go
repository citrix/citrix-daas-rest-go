/*
WEM Public API Guide

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package devicemanagement

import (
	"encoding/json"
)

// checks if the ApiStruct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiStruct{}

// ApiStruct struct for ApiStruct
type ApiStruct struct {
	Path           *string `json:"path,omitempty"`
	Method         *string `json:"method,omitempty"`
	Function       *string `json:"function,omitempty"`
	ControllerName *string `json:"controllerName,omitempty"`
	AuthLevel      *string `json:"authLevel,omitempty"`
}

// NewApiStruct instantiates a new ApiStruct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiStruct() *ApiStruct {
	this := ApiStruct{}
	return &this
}

// NewApiStructWithDefaults instantiates a new ApiStruct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiStructWithDefaults() *ApiStruct {
	this := ApiStruct{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ApiStruct) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStruct) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ApiStruct) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ApiStruct) SetPath(v string) {
	o.Path = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ApiStruct) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStruct) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ApiStruct) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ApiStruct) SetMethod(v string) {
	o.Method = &v
}

// GetFunction returns the Function field value if set, zero value otherwise.
func (o *ApiStruct) GetFunction() string {
	if o == nil || IsNil(o.Function) {
		var ret string
		return ret
	}
	return *o.Function
}

// GetFunctionOk returns a tuple with the Function field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStruct) GetFunctionOk() (*string, bool) {
	if o == nil || IsNil(o.Function) {
		return nil, false
	}
	return o.Function, true
}

// HasFunction returns a boolean if a field has been set.
func (o *ApiStruct) HasFunction() bool {
	if o != nil && !IsNil(o.Function) {
		return true
	}

	return false
}

// SetFunction gets a reference to the given string and assigns it to the Function field.
func (o *ApiStruct) SetFunction(v string) {
	o.Function = &v
}

// GetControllerName returns the ControllerName field value if set, zero value otherwise.
func (o *ApiStruct) GetControllerName() string {
	if o == nil || IsNil(o.ControllerName) {
		var ret string
		return ret
	}
	return *o.ControllerName
}

// GetControllerNameOk returns a tuple with the ControllerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStruct) GetControllerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ControllerName) {
		return nil, false
	}
	return o.ControllerName, true
}

// HasControllerName returns a boolean if a field has been set.
func (o *ApiStruct) HasControllerName() bool {
	if o != nil && !IsNil(o.ControllerName) {
		return true
	}

	return false
}

// SetControllerName gets a reference to the given string and assigns it to the ControllerName field.
func (o *ApiStruct) SetControllerName(v string) {
	o.ControllerName = &v
}

// GetAuthLevel returns the AuthLevel field value if set, zero value otherwise.
func (o *ApiStruct) GetAuthLevel() string {
	if o == nil || IsNil(o.AuthLevel) {
		var ret string
		return ret
	}
	return *o.AuthLevel
}

// GetAuthLevelOk returns a tuple with the AuthLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStruct) GetAuthLevelOk() (*string, bool) {
	if o == nil || IsNil(o.AuthLevel) {
		return nil, false
	}
	return o.AuthLevel, true
}

// HasAuthLevel returns a boolean if a field has been set.
func (o *ApiStruct) HasAuthLevel() bool {
	if o != nil && !IsNil(o.AuthLevel) {
		return true
	}

	return false
}

// SetAuthLevel gets a reference to the given string and assigns it to the AuthLevel field.
func (o *ApiStruct) SetAuthLevel(v string) {
	o.AuthLevel = &v
}

func (o ApiStruct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiStruct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Function) {
		toSerialize["function"] = o.Function
	}
	if !IsNil(o.ControllerName) {
		toSerialize["controllerName"] = o.ControllerName
	}
	if !IsNil(o.AuthLevel) {
		toSerialize["authLevel"] = o.AuthLevel
	}
	return toSerialize, nil
}

type NullableApiStruct struct {
	value *ApiStruct
	isSet bool
}

func (v NullableApiStruct) Get() *ApiStruct {
	return v.value
}

func (v *NullableApiStruct) Set(val *ApiStruct) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStruct) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStruct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStruct(val *ApiStruct) *NullableApiStruct {
	return &NullableApiStruct{value: val, isSet: true}
}

func (v NullableApiStruct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStruct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
