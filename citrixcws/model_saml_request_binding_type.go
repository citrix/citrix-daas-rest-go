/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
	"fmt"
)

// SamlRequestBindingType the model 'SamlRequestBindingType'
type SamlRequestBindingType string

// List of SamlRequestBindingType
const (
	SAMLREQUESTBINDINGTYPE_HTTP_POST     SamlRequestBindingType = "HttpPost"
	SAMLREQUESTBINDINGTYPE_HTTP_REDIRECT SamlRequestBindingType = "HttpRedirect"
)

// All allowed values of SamlRequestBindingType enum
var AllowedSamlRequestBindingTypeEnumValues = []SamlRequestBindingType{
	"HttpPost",
	"HttpRedirect",
}

func (v *SamlRequestBindingType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SamlRequestBindingType(value)
	for _, existing := range AllowedSamlRequestBindingTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SamlRequestBindingType", value)
}

// NewSamlRequestBindingTypeFromValue returns a pointer to a valid SamlRequestBindingType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSamlRequestBindingTypeFromValue(v string) (*SamlRequestBindingType, error) {
	ev := SamlRequestBindingType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SamlRequestBindingType: valid values are %v", v, AllowedSamlRequestBindingTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SamlRequestBindingType) IsValid() bool {
	for _, existing := range AllowedSamlRequestBindingTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SamlRequestBindingType value
func (v SamlRequestBindingType) Ptr() *SamlRequestBindingType {
	return &v
}

type NullableSamlRequestBindingType struct {
	value *SamlRequestBindingType
	isSet bool
}

func (v NullableSamlRequestBindingType) Get() *SamlRequestBindingType {
	return v.value
}

func (v *NullableSamlRequestBindingType) Set(val *SamlRequestBindingType) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlRequestBindingType) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlRequestBindingType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlRequestBindingType(val *SamlRequestBindingType) *NullableSamlRequestBindingType {
	return &NullableSamlRequestBindingType{value: val, isSet: true}
}

func (v NullableSamlRequestBindingType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlRequestBindingType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
