/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the UpdatedCustomerModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatedCustomerModel{}

// UpdatedCustomerModel struct for UpdatedCustomerModel
type UpdatedCustomerModel struct {
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	AuthDomainNames []string `json:"authDomainNames,omitempty"`
	AuthDomains []AuthDomainModel `json:"authDomains,omitempty"`
	Aliases []AliasModel `json:"aliases,omitempty"`
}

// NewUpdatedCustomerModel instantiates a new UpdatedCustomerModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatedCustomerModel() *UpdatedCustomerModel {
	this := UpdatedCustomerModel{}
	return &this
}

// NewUpdatedCustomerModelWithDefaults instantiates a new UpdatedCustomerModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatedCustomerModelWithDefaults() *UpdatedCustomerModel {
	this := UpdatedCustomerModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatedCustomerModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatedCustomerModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UpdatedCustomerModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UpdatedCustomerModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UpdatedCustomerModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UpdatedCustomerModel) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatedCustomerModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatedCustomerModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdatedCustomerModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdatedCustomerModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdatedCustomerModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdatedCustomerModel) UnsetName() {
	o.Name.Unset()
}

// GetAuthDomainNames returns the AuthDomainNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatedCustomerModel) GetAuthDomainNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AuthDomainNames
}

// GetAuthDomainNamesOk returns a tuple with the AuthDomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatedCustomerModel) GetAuthDomainNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthDomainNames) {
		return nil, false
	}
	return o.AuthDomainNames, true
}

// HasAuthDomainNames returns a boolean if a field has been set.
func (o *UpdatedCustomerModel) HasAuthDomainNames() bool {
	if o != nil && IsNil(o.AuthDomainNames) {
		return true
	}

	return false
}

// SetAuthDomainNames gets a reference to the given []string and assigns it to the AuthDomainNames field.
func (o *UpdatedCustomerModel) SetAuthDomainNames(v []string) {
	o.AuthDomainNames = v
}

// GetAuthDomains returns the AuthDomains field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatedCustomerModel) GetAuthDomains() []AuthDomainModel {
	if o == nil {
		var ret []AuthDomainModel
		return ret
	}
	return o.AuthDomains
}

// GetAuthDomainsOk returns a tuple with the AuthDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatedCustomerModel) GetAuthDomainsOk() ([]AuthDomainModel, bool) {
	if o == nil || IsNil(o.AuthDomains) {
		return nil, false
	}
	return o.AuthDomains, true
}

// HasAuthDomains returns a boolean if a field has been set.
func (o *UpdatedCustomerModel) HasAuthDomains() bool {
	if o != nil && IsNil(o.AuthDomains) {
		return true
	}

	return false
}

// SetAuthDomains gets a reference to the given []AuthDomainModel and assigns it to the AuthDomains field.
func (o *UpdatedCustomerModel) SetAuthDomains(v []AuthDomainModel) {
	o.AuthDomains = v
}

// GetAliases returns the Aliases field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatedCustomerModel) GetAliases() []AliasModel {
	if o == nil {
		var ret []AliasModel
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatedCustomerModel) GetAliasesOk() ([]AliasModel, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *UpdatedCustomerModel) HasAliases() bool {
	if o != nil && IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []AliasModel and assigns it to the Aliases field.
func (o *UpdatedCustomerModel) SetAliases(v []AliasModel) {
	o.Aliases = v
}

func (o UpdatedCustomerModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatedCustomerModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.AuthDomainNames != nil {
		toSerialize["authDomainNames"] = o.AuthDomainNames
	}
	if o.AuthDomains != nil {
		toSerialize["authDomains"] = o.AuthDomains
	}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	return toSerialize, nil
}

type NullableUpdatedCustomerModel struct {
	value *UpdatedCustomerModel
	isSet bool
}

func (v NullableUpdatedCustomerModel) Get() *UpdatedCustomerModel {
	return v.value
}

func (v *NullableUpdatedCustomerModel) Set(val *UpdatedCustomerModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatedCustomerModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatedCustomerModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatedCustomerModel(val *UpdatedCustomerModel) *NullableUpdatedCustomerModel {
	return &NullableUpdatedCustomerModel{value: val, isSet: true}
}

func (v NullableUpdatedCustomerModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatedCustomerModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


