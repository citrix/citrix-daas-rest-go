/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the SamlCertInfoModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlCertInfoModel{}

// SamlCertInfoModel struct for SamlCertInfoModel
type SamlCertInfoModel struct {
	NotAfter   string         `json:"notAfter"`
	PublicKey  string         `json:"publicKey"`
	CommonName NullableString `json:"commonName,omitempty"`
}

type _SamlCertInfoModel SamlCertInfoModel

// NewSamlCertInfoModel instantiates a new SamlCertInfoModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlCertInfoModel(notAfter string, publicKey string) *SamlCertInfoModel {
	this := SamlCertInfoModel{}
	this.NotAfter = notAfter
	this.PublicKey = publicKey
	return &this
}

// NewSamlCertInfoModelWithDefaults instantiates a new SamlCertInfoModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlCertInfoModelWithDefaults() *SamlCertInfoModel {
	this := SamlCertInfoModel{}
	return &this
}

// GetNotAfter returns the NotAfter field value
func (o *SamlCertInfoModel) GetNotAfter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value
// and a boolean to check if the value has been set.
func (o *SamlCertInfoModel) GetNotAfterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotAfter, true
}

// SetNotAfter sets field value
func (o *SamlCertInfoModel) SetNotAfter(v string) {
	o.NotAfter = v
}

// GetPublicKey returns the PublicKey field value
func (o *SamlCertInfoModel) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *SamlCertInfoModel) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *SamlCertInfoModel) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SamlCertInfoModel) GetCommonName() string {
	if o == nil || IsNil(o.CommonName.Get()) {
		var ret string
		return ret
	}
	return *o.CommonName.Get()
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SamlCertInfoModel) GetCommonNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommonName.Get(), o.CommonName.IsSet()
}

// HasCommonName returns a boolean if a field has been set.
func (o *SamlCertInfoModel) HasCommonName() bool {
	if o != nil && o.CommonName.IsSet() {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given NullableString and assigns it to the CommonName field.
func (o *SamlCertInfoModel) SetCommonName(v string) {
	o.CommonName.Set(&v)
}

// SetCommonNameNil sets the value for CommonName to be an explicit nil
func (o *SamlCertInfoModel) SetCommonNameNil() {
	o.CommonName.Set(nil)
}

// UnsetCommonName ensures that no value is present for CommonName, not even an explicit nil
func (o *SamlCertInfoModel) UnsetCommonName() {
	o.CommonName.Unset()
}

func (o SamlCertInfoModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlCertInfoModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notAfter"] = o.NotAfter
	toSerialize["publicKey"] = o.PublicKey
	if o.CommonName.IsSet() {
		toSerialize["commonName"] = o.CommonName.Get()
	}
	return toSerialize, nil
}

type NullableSamlCertInfoModel struct {
	value *SamlCertInfoModel
	isSet bool
}

func (v NullableSamlCertInfoModel) Get() *SamlCertInfoModel {
	return v.value
}

func (v *NullableSamlCertInfoModel) Set(val *SamlCertInfoModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlCertInfoModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlCertInfoModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlCertInfoModel(val *SamlCertInfoModel) *NullableSamlCertInfoModel {
	return &NullableSamlCertInfoModel{value: val, isSet: true}
}

func (v NullableSamlCertInfoModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlCertInfoModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
