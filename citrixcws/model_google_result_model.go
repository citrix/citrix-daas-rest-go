/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the GoogleResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleResultModel{}

// GoogleResultModel struct for GoogleResultModel
type GoogleResultModel struct {
	DomainNames []string `json:"domainNames,omitempty"`
	ValidCredentials *bool `json:"validCredentials,omitempty"`
}

// NewGoogleResultModel instantiates a new GoogleResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleResultModel() *GoogleResultModel {
	this := GoogleResultModel{}
	return &this
}

// NewGoogleResultModelWithDefaults instantiates a new GoogleResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleResultModelWithDefaults() *GoogleResultModel {
	this := GoogleResultModel{}
	return &this
}

// GetDomainNames returns the DomainNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoogleResultModel) GetDomainNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoogleResultModel) GetDomainNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainNames) {
		return nil, false
	}
	return o.DomainNames, true
}

// HasDomainNames returns a boolean if a field has been set.
func (o *GoogleResultModel) HasDomainNames() bool {
	if o != nil && IsNil(o.DomainNames) {
		return true
	}

	return false
}

// SetDomainNames gets a reference to the given []string and assigns it to the DomainNames field.
func (o *GoogleResultModel) SetDomainNames(v []string) {
	o.DomainNames = v
}

// GetValidCredentials returns the ValidCredentials field value if set, zero value otherwise.
func (o *GoogleResultModel) GetValidCredentials() bool {
	if o == nil || IsNil(o.ValidCredentials) {
		var ret bool
		return ret
	}
	return *o.ValidCredentials
}

// GetValidCredentialsOk returns a tuple with the ValidCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleResultModel) GetValidCredentialsOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidCredentials) {
		return nil, false
	}
	return o.ValidCredentials, true
}

// HasValidCredentials returns a boolean if a field has been set.
func (o *GoogleResultModel) HasValidCredentials() bool {
	if o != nil && !IsNil(o.ValidCredentials) {
		return true
	}

	return false
}

// SetValidCredentials gets a reference to the given bool and assigns it to the ValidCredentials field.
func (o *GoogleResultModel) SetValidCredentials(v bool) {
	o.ValidCredentials = &v
}

func (o GoogleResultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainNames != nil {
		toSerialize["domainNames"] = o.DomainNames
	}
	if !IsNil(o.ValidCredentials) {
		toSerialize["validCredentials"] = o.ValidCredentials
	}
	return toSerialize, nil
}

type NullableGoogleResultModel struct {
	value *GoogleResultModel
	isSet bool
}

func (v NullableGoogleResultModel) Get() *GoogleResultModel {
	return v.value
}

func (v *NullableGoogleResultModel) Set(val *GoogleResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleResultModel(val *GoogleResultModel) *NullableGoogleResultModel {
	return &NullableGoogleResultModel{value: val, isSet: true}
}

func (v NullableGoogleResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


