/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the OktaResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OktaResultModel{}

// OktaResultModel struct for OktaResultModel
type OktaResultModel struct {
	ValidApiToken     *bool `json:"validApiToken,omitempty"`
	ValidClientId     *bool `json:"validClientId,omitempty"`
	ValidClientSecret *bool `json:"validClientSecret,omitempty"`
	ValidDomain       *bool `json:"validDomain,omitempty"`
}

// NewOktaResultModel instantiates a new OktaResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOktaResultModel() *OktaResultModel {
	this := OktaResultModel{}
	return &this
}

// NewOktaResultModelWithDefaults instantiates a new OktaResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOktaResultModelWithDefaults() *OktaResultModel {
	this := OktaResultModel{}
	return &this
}

// GetValidApiToken returns the ValidApiToken field value if set, zero value otherwise.
func (o *OktaResultModel) GetValidApiToken() bool {
	if o == nil || IsNil(o.ValidApiToken) {
		var ret bool
		return ret
	}
	return *o.ValidApiToken
}

// GetValidApiTokenOk returns a tuple with the ValidApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaResultModel) GetValidApiTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidApiToken) {
		return nil, false
	}
	return o.ValidApiToken, true
}

// HasValidApiToken returns a boolean if a field has been set.
func (o *OktaResultModel) HasValidApiToken() bool {
	if o != nil && !IsNil(o.ValidApiToken) {
		return true
	}

	return false
}

// SetValidApiToken gets a reference to the given bool and assigns it to the ValidApiToken field.
func (o *OktaResultModel) SetValidApiToken(v bool) {
	o.ValidApiToken = &v
}

// GetValidClientId returns the ValidClientId field value if set, zero value otherwise.
func (o *OktaResultModel) GetValidClientId() bool {
	if o == nil || IsNil(o.ValidClientId) {
		var ret bool
		return ret
	}
	return *o.ValidClientId
}

// GetValidClientIdOk returns a tuple with the ValidClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaResultModel) GetValidClientIdOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidClientId) {
		return nil, false
	}
	return o.ValidClientId, true
}

// HasValidClientId returns a boolean if a field has been set.
func (o *OktaResultModel) HasValidClientId() bool {
	if o != nil && !IsNil(o.ValidClientId) {
		return true
	}

	return false
}

// SetValidClientId gets a reference to the given bool and assigns it to the ValidClientId field.
func (o *OktaResultModel) SetValidClientId(v bool) {
	o.ValidClientId = &v
}

// GetValidClientSecret returns the ValidClientSecret field value if set, zero value otherwise.
func (o *OktaResultModel) GetValidClientSecret() bool {
	if o == nil || IsNil(o.ValidClientSecret) {
		var ret bool
		return ret
	}
	return *o.ValidClientSecret
}

// GetValidClientSecretOk returns a tuple with the ValidClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaResultModel) GetValidClientSecretOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidClientSecret) {
		return nil, false
	}
	return o.ValidClientSecret, true
}

// HasValidClientSecret returns a boolean if a field has been set.
func (o *OktaResultModel) HasValidClientSecret() bool {
	if o != nil && !IsNil(o.ValidClientSecret) {
		return true
	}

	return false
}

// SetValidClientSecret gets a reference to the given bool and assigns it to the ValidClientSecret field.
func (o *OktaResultModel) SetValidClientSecret(v bool) {
	o.ValidClientSecret = &v
}

// GetValidDomain returns the ValidDomain field value if set, zero value otherwise.
func (o *OktaResultModel) GetValidDomain() bool {
	if o == nil || IsNil(o.ValidDomain) {
		var ret bool
		return ret
	}
	return *o.ValidDomain
}

// GetValidDomainOk returns a tuple with the ValidDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OktaResultModel) GetValidDomainOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidDomain) {
		return nil, false
	}
	return o.ValidDomain, true
}

// HasValidDomain returns a boolean if a field has been set.
func (o *OktaResultModel) HasValidDomain() bool {
	if o != nil && !IsNil(o.ValidDomain) {
		return true
	}

	return false
}

// SetValidDomain gets a reference to the given bool and assigns it to the ValidDomain field.
func (o *OktaResultModel) SetValidDomain(v bool) {
	o.ValidDomain = &v
}

func (o OktaResultModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OktaResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ValidApiToken) {
		toSerialize["validApiToken"] = o.ValidApiToken
	}
	if !IsNil(o.ValidClientId) {
		toSerialize["validClientId"] = o.ValidClientId
	}
	if !IsNil(o.ValidClientSecret) {
		toSerialize["validClientSecret"] = o.ValidClientSecret
	}
	if !IsNil(o.ValidDomain) {
		toSerialize["validDomain"] = o.ValidDomain
	}
	return toSerialize, nil
}

type NullableOktaResultModel struct {
	value *OktaResultModel
	isSet bool
}

func (v NullableOktaResultModel) Get() *OktaResultModel {
	return v.value
}

func (v *NullableOktaResultModel) Set(val *OktaResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOktaResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOktaResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOktaResultModel(val *OktaResultModel) *NullableOktaResultModel {
	return &NullableOktaResultModel{value: val, isSet: true}
}

func (v NullableOktaResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOktaResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
