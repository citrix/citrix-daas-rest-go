/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the AuthDomainModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthDomainModel{}

// AuthDomainModel struct for AuthDomainModel
type AuthDomainModel struct {
	Extensions     map[string]interface{} `json:"extensions,omitempty"`
	IdpDisplayName NullableString         `json:"idpDisplayName,omitempty"`
	IdpProperties  map[string]string      `json:"idpProperties,omitempty"`
	IdpType        NullableString         `json:"idpType,omitempty"`
	Name           NullableString         `json:"name,omitempty"`
	Product        NullableString         `json:"product,omitempty"`
}

// NewAuthDomainModel instantiates a new AuthDomainModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthDomainModel() *AuthDomainModel {
	this := AuthDomainModel{}
	return &this
}

// NewAuthDomainModelWithDefaults instantiates a new AuthDomainModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthDomainModelWithDefaults() *AuthDomainModel {
	this := AuthDomainModel{}
	return &this
}

// GetExtensions returns the Extensions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetExtensions() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extensions) {
		return map[string]interface{}{}, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *AuthDomainModel) HasExtensions() bool {
	if o != nil && !IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given map[string]interface{} and assigns it to the Extensions field.
func (o *AuthDomainModel) SetExtensions(v map[string]interface{}) {
	o.Extensions = v
}

// GetIdpDisplayName returns the IdpDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetIdpDisplayName() string {
	if o == nil || IsNil(o.IdpDisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.IdpDisplayName.Get()
}

// GetIdpDisplayNameOk returns a tuple with the IdpDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetIdpDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdpDisplayName.Get(), o.IdpDisplayName.IsSet()
}

// HasIdpDisplayName returns a boolean if a field has been set.
func (o *AuthDomainModel) HasIdpDisplayName() bool {
	if o != nil && o.IdpDisplayName.IsSet() {
		return true
	}

	return false
}

// SetIdpDisplayName gets a reference to the given NullableString and assigns it to the IdpDisplayName field.
func (o *AuthDomainModel) SetIdpDisplayName(v string) {
	o.IdpDisplayName.Set(&v)
}

// SetIdpDisplayNameNil sets the value for IdpDisplayName to be an explicit nil
func (o *AuthDomainModel) SetIdpDisplayNameNil() {
	o.IdpDisplayName.Set(nil)
}

// UnsetIdpDisplayName ensures that no value is present for IdpDisplayName, not even an explicit nil
func (o *AuthDomainModel) UnsetIdpDisplayName() {
	o.IdpDisplayName.Unset()
}

// GetIdpProperties returns the IdpProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetIdpProperties() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.IdpProperties
}

// GetIdpPropertiesOk returns a tuple with the IdpProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetIdpPropertiesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.IdpProperties) {
		return nil, false
	}
	return &o.IdpProperties, true
}

// HasIdpProperties returns a boolean if a field has been set.
func (o *AuthDomainModel) HasIdpProperties() bool {
	if o != nil && !IsNil(o.IdpProperties) {
		return true
	}

	return false
}

// SetIdpProperties gets a reference to the given map[string]string and assigns it to the IdpProperties field.
func (o *AuthDomainModel) SetIdpProperties(v map[string]string) {
	o.IdpProperties = v
}

// GetIdpType returns the IdpType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetIdpType() string {
	if o == nil || IsNil(o.IdpType.Get()) {
		var ret string
		return ret
	}
	return *o.IdpType.Get()
}

// GetIdpTypeOk returns a tuple with the IdpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetIdpTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdpType.Get(), o.IdpType.IsSet()
}

// HasIdpType returns a boolean if a field has been set.
func (o *AuthDomainModel) HasIdpType() bool {
	if o != nil && o.IdpType.IsSet() {
		return true
	}

	return false
}

// SetIdpType gets a reference to the given NullableString and assigns it to the IdpType field.
func (o *AuthDomainModel) SetIdpType(v string) {
	o.IdpType.Set(&v)
}

// SetIdpTypeNil sets the value for IdpType to be an explicit nil
func (o *AuthDomainModel) SetIdpTypeNil() {
	o.IdpType.Set(nil)
}

// UnsetIdpType ensures that no value is present for IdpType, not even an explicit nil
func (o *AuthDomainModel) UnsetIdpType() {
	o.IdpType.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AuthDomainModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AuthDomainModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *AuthDomainModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AuthDomainModel) UnsetName() {
	o.Name.Unset()
}

// GetProduct returns the Product field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthDomainModel) GetProduct() string {
	if o == nil || IsNil(o.Product.Get()) {
		var ret string
		return ret
	}
	return *o.Product.Get()
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthDomainModel) GetProductOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Product.Get(), o.Product.IsSet()
}

// HasProduct returns a boolean if a field has been set.
func (o *AuthDomainModel) HasProduct() bool {
	if o != nil && o.Product.IsSet() {
		return true
	}

	return false
}

// SetProduct gets a reference to the given NullableString and assigns it to the Product field.
func (o *AuthDomainModel) SetProduct(v string) {
	o.Product.Set(&v)
}

// SetProductNil sets the value for Product to be an explicit nil
func (o *AuthDomainModel) SetProductNil() {
	o.Product.Set(nil)
}

// UnsetProduct ensures that no value is present for Product, not even an explicit nil
func (o *AuthDomainModel) UnsetProduct() {
	o.Product.Unset()
}

func (o AuthDomainModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthDomainModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Extensions != nil {
		toSerialize["extensions"] = o.Extensions
	}
	if o.IdpDisplayName.IsSet() {
		toSerialize["idpDisplayName"] = o.IdpDisplayName.Get()
	}
	if o.IdpProperties != nil {
		toSerialize["idpProperties"] = o.IdpProperties
	}
	if o.IdpType.IsSet() {
		toSerialize["idpType"] = o.IdpType.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Product.IsSet() {
		toSerialize["product"] = o.Product.Get()
	}
	return toSerialize, nil
}

type NullableAuthDomainModel struct {
	value *AuthDomainModel
	isSet bool
}

func (v NullableAuthDomainModel) Get() *AuthDomainModel {
	return v.value
}

func (v *NullableAuthDomainModel) Set(val *AuthDomainModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthDomainModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthDomainModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthDomainModel(val *AuthDomainModel) *NullableAuthDomainModel {
	return &NullableAuthDomainModel{value: val, isSet: true}
}

func (v NullableAuthDomainModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthDomainModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
