/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
	"fmt"
)

// SamlSignRequestType the model 'SamlSignRequestType'
type SamlSignRequestType string

// List of SamlSignRequestType
const (
	SAMLSIGNREQUESTTYPE_YES SamlSignRequestType = "Yes"
	SAMLSIGNREQUESTTYPE_NO  SamlSignRequestType = "No"
)

// All allowed values of SamlSignRequestType enum
var AllowedSamlSignRequestTypeEnumValues = []SamlSignRequestType{
	"Yes",
	"No",
}

func (v *SamlSignRequestType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SamlSignRequestType(value)
	for _, existing := range AllowedSamlSignRequestTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SamlSignRequestType", value)
}

// NewSamlSignRequestTypeFromValue returns a pointer to a valid SamlSignRequestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSamlSignRequestTypeFromValue(v string) (*SamlSignRequestType, error) {
	ev := SamlSignRequestType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SamlSignRequestType: valid values are %v", v, AllowedSamlSignRequestTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SamlSignRequestType) IsValid() bool {
	for _, existing := range AllowedSamlSignRequestTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SamlSignRequestType value
func (v SamlSignRequestType) Ptr() *SamlSignRequestType {
	return &v
}

type NullableSamlSignRequestType struct {
	value *SamlSignRequestType
	isSet bool
}

func (v NullableSamlSignRequestType) Get() *SamlSignRequestType {
	return v.value
}

func (v *NullableSamlSignRequestType) Set(val *SamlSignRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlSignRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlSignRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlSignRequestType(val *SamlSignRequestType) *NullableSamlSignRequestType {
	return &NullableSamlSignRequestType{value: val, isSet: true}
}

func (v NullableSamlSignRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlSignRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
