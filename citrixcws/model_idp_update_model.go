/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the IdpUpdateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdpUpdateModel{}

// IdpUpdateModel struct for IdpUpdateModel
type IdpUpdateModel struct {
	AdOtpDetails   *AdOtpConnectionModel `json:"adOtpDetails,omitempty"`
	AuthDomainName NullableString        `json:"authDomainName,omitempty"`
	Nickname       NullableString        `json:"nickname,omitempty"`
}

// NewIdpUpdateModel instantiates a new IdpUpdateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdpUpdateModel() *IdpUpdateModel {
	this := IdpUpdateModel{}
	return &this
}

// NewIdpUpdateModelWithDefaults instantiates a new IdpUpdateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdpUpdateModelWithDefaults() *IdpUpdateModel {
	this := IdpUpdateModel{}
	return &this
}

// GetAdOtpDetails returns the AdOtpDetails field value if set, zero value otherwise.
func (o *IdpUpdateModel) GetAdOtpDetails() AdOtpConnectionModel {
	if o == nil || IsNil(o.AdOtpDetails) {
		var ret AdOtpConnectionModel
		return ret
	}
	return *o.AdOtpDetails
}

// GetAdOtpDetailsOk returns a tuple with the AdOtpDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpUpdateModel) GetAdOtpDetailsOk() (*AdOtpConnectionModel, bool) {
	if o == nil || IsNil(o.AdOtpDetails) {
		return nil, false
	}
	return o.AdOtpDetails, true
}

// HasAdOtpDetails returns a boolean if a field has been set.
func (o *IdpUpdateModel) HasAdOtpDetails() bool {
	if o != nil && !IsNil(o.AdOtpDetails) {
		return true
	}

	return false
}

// SetAdOtpDetails gets a reference to the given AdOtpConnectionModel and assigns it to the AdOtpDetails field.
func (o *IdpUpdateModel) SetAdOtpDetails(v AdOtpConnectionModel) {
	o.AdOtpDetails = &v
}

// GetAuthDomainName returns the AuthDomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdpUpdateModel) GetAuthDomainName() string {
	if o == nil || IsNil(o.AuthDomainName.Get()) {
		var ret string
		return ret
	}
	return *o.AuthDomainName.Get()
}

// GetAuthDomainNameOk returns a tuple with the AuthDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdpUpdateModel) GetAuthDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthDomainName.Get(), o.AuthDomainName.IsSet()
}

// HasAuthDomainName returns a boolean if a field has been set.
func (o *IdpUpdateModel) HasAuthDomainName() bool {
	if o != nil && o.AuthDomainName.IsSet() {
		return true
	}

	return false
}

// SetAuthDomainName gets a reference to the given NullableString and assigns it to the AuthDomainName field.
func (o *IdpUpdateModel) SetAuthDomainName(v string) {
	o.AuthDomainName.Set(&v)
}

// SetAuthDomainNameNil sets the value for AuthDomainName to be an explicit nil
func (o *IdpUpdateModel) SetAuthDomainNameNil() {
	o.AuthDomainName.Set(nil)
}

// UnsetAuthDomainName ensures that no value is present for AuthDomainName, not even an explicit nil
func (o *IdpUpdateModel) UnsetAuthDomainName() {
	o.AuthDomainName.Unset()
}

// GetNickname returns the Nickname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdpUpdateModel) GetNickname() string {
	if o == nil || IsNil(o.Nickname.Get()) {
		var ret string
		return ret
	}
	return *o.Nickname.Get()
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdpUpdateModel) GetNicknameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nickname.Get(), o.Nickname.IsSet()
}

// HasNickname returns a boolean if a field has been set.
func (o *IdpUpdateModel) HasNickname() bool {
	if o != nil && o.Nickname.IsSet() {
		return true
	}

	return false
}

// SetNickname gets a reference to the given NullableString and assigns it to the Nickname field.
func (o *IdpUpdateModel) SetNickname(v string) {
	o.Nickname.Set(&v)
}

// SetNicknameNil sets the value for Nickname to be an explicit nil
func (o *IdpUpdateModel) SetNicknameNil() {
	o.Nickname.Set(nil)
}

// UnsetNickname ensures that no value is present for Nickname, not even an explicit nil
func (o *IdpUpdateModel) UnsetNickname() {
	o.Nickname.Unset()
}

func (o IdpUpdateModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdpUpdateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdOtpDetails) {
		toSerialize["adOtpDetails"] = o.AdOtpDetails
	}
	if o.AuthDomainName.IsSet() {
		toSerialize["authDomainName"] = o.AuthDomainName.Get()
	}
	if o.Nickname.IsSet() {
		toSerialize["nickname"] = o.Nickname.Get()
	}
	return toSerialize, nil
}

type NullableIdpUpdateModel struct {
	value *IdpUpdateModel
	isSet bool
}

func (v NullableIdpUpdateModel) Get() *IdpUpdateModel {
	return v.value
}

func (v *NullableIdpUpdateModel) Set(val *IdpUpdateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpUpdateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpUpdateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpUpdateModel(val *IdpUpdateModel) *NullableIdpUpdateModel {
	return &NullableIdpUpdateModel{value: val, isSet: true}
}

func (v NullableIdpUpdateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpUpdateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
