/*
Citrix.CloudServices.Cws.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixcws

import (
	"encoding/json"
)

// checks if the AdOtpConnectionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdOtpConnectionModel{}

// AdOtpConnectionModel struct for AdOtpConnectionModel
type AdOtpConnectionModel struct {
	MultipleDevices *bool `json:"multipleDevices,omitempty"`
	NotificationsEnabled *bool `json:"notificationsEnabled,omitempty"`
	NotificationsTime *int32 `json:"notificationsTime,omitempty"`
}

// NewAdOtpConnectionModel instantiates a new AdOtpConnectionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdOtpConnectionModel() *AdOtpConnectionModel {
	this := AdOtpConnectionModel{}
	return &this
}

// NewAdOtpConnectionModelWithDefaults instantiates a new AdOtpConnectionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdOtpConnectionModelWithDefaults() *AdOtpConnectionModel {
	this := AdOtpConnectionModel{}
	return &this
}

// GetMultipleDevices returns the MultipleDevices field value if set, zero value otherwise.
func (o *AdOtpConnectionModel) GetMultipleDevices() bool {
	if o == nil || IsNil(o.MultipleDevices) {
		var ret bool
		return ret
	}
	return *o.MultipleDevices
}

// GetMultipleDevicesOk returns a tuple with the MultipleDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdOtpConnectionModel) GetMultipleDevicesOk() (*bool, bool) {
	if o == nil || IsNil(o.MultipleDevices) {
		return nil, false
	}
	return o.MultipleDevices, true
}

// HasMultipleDevices returns a boolean if a field has been set.
func (o *AdOtpConnectionModel) HasMultipleDevices() bool {
	if o != nil && !IsNil(o.MultipleDevices) {
		return true
	}

	return false
}

// SetMultipleDevices gets a reference to the given bool and assigns it to the MultipleDevices field.
func (o *AdOtpConnectionModel) SetMultipleDevices(v bool) {
	o.MultipleDevices = &v
}

// GetNotificationsEnabled returns the NotificationsEnabled field value if set, zero value otherwise.
func (o *AdOtpConnectionModel) GetNotificationsEnabled() bool {
	if o == nil || IsNil(o.NotificationsEnabled) {
		var ret bool
		return ret
	}
	return *o.NotificationsEnabled
}

// GetNotificationsEnabledOk returns a tuple with the NotificationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdOtpConnectionModel) GetNotificationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NotificationsEnabled) {
		return nil, false
	}
	return o.NotificationsEnabled, true
}

// HasNotificationsEnabled returns a boolean if a field has been set.
func (o *AdOtpConnectionModel) HasNotificationsEnabled() bool {
	if o != nil && !IsNil(o.NotificationsEnabled) {
		return true
	}

	return false
}

// SetNotificationsEnabled gets a reference to the given bool and assigns it to the NotificationsEnabled field.
func (o *AdOtpConnectionModel) SetNotificationsEnabled(v bool) {
	o.NotificationsEnabled = &v
}

// GetNotificationsTime returns the NotificationsTime field value if set, zero value otherwise.
func (o *AdOtpConnectionModel) GetNotificationsTime() int32 {
	if o == nil || IsNil(o.NotificationsTime) {
		var ret int32
		return ret
	}
	return *o.NotificationsTime
}

// GetNotificationsTimeOk returns a tuple with the NotificationsTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdOtpConnectionModel) GetNotificationsTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.NotificationsTime) {
		return nil, false
	}
	return o.NotificationsTime, true
}

// HasNotificationsTime returns a boolean if a field has been set.
func (o *AdOtpConnectionModel) HasNotificationsTime() bool {
	if o != nil && !IsNil(o.NotificationsTime) {
		return true
	}

	return false
}

// SetNotificationsTime gets a reference to the given int32 and assigns it to the NotificationsTime field.
func (o *AdOtpConnectionModel) SetNotificationsTime(v int32) {
	o.NotificationsTime = &v
}

func (o AdOtpConnectionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdOtpConnectionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultipleDevices) {
		toSerialize["multipleDevices"] = o.MultipleDevices
	}
	if !IsNil(o.NotificationsEnabled) {
		toSerialize["notificationsEnabled"] = o.NotificationsEnabled
	}
	if !IsNil(o.NotificationsTime) {
		toSerialize["notificationsTime"] = o.NotificationsTime
	}
	return toSerialize, nil
}

type NullableAdOtpConnectionModel struct {
	value *AdOtpConnectionModel
	isSet bool
}

func (v NullableAdOtpConnectionModel) Get() *AdOtpConnectionModel {
	return v.value
}

func (v *NullableAdOtpConnectionModel) Set(val *AdOtpConnectionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdOtpConnectionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdOtpConnectionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdOtpConnectionModel(val *AdOtpConnectionModel) *NullableAdOtpConnectionModel {
	return &NullableAdOtpConnectionModel{value: val, isSet: true}
}

func (v NullableAdOtpConnectionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdOtpConnectionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


