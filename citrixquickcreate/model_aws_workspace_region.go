/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsWorkspaceRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsWorkspaceRegion{}

// AwsWorkspaceRegion struct for AwsWorkspaceRegion
type AwsWorkspaceRegion struct {
	// The code of the region
	RegionCode NullableString `json:"regionCode,omitempty"`
	// The name of the region
	RegionName NullableString `json:"regionName,omitempty"`
	// The availability zone Ids supported by the region
	SupportedAzIds NullableString `json:"supportedAzIds,omitempty"`
}

// NewAwsWorkspaceRegion instantiates a new AwsWorkspaceRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsWorkspaceRegion() *AwsWorkspaceRegion {
	this := AwsWorkspaceRegion{}
	return &this
}

// NewAwsWorkspaceRegionWithDefaults instantiates a new AwsWorkspaceRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsWorkspaceRegionWithDefaults() *AwsWorkspaceRegion {
	this := AwsWorkspaceRegion{}
	return &this
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsWorkspaceRegion) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode.Get()) {
		var ret string
		return ret
	}
	return *o.RegionCode.Get()
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsWorkspaceRegion) GetRegionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionCode.Get(), o.RegionCode.IsSet()
}

// HasRegionCode returns a boolean if a field has been set.
func (o *AwsWorkspaceRegion) HasRegionCode() bool {
	if o != nil && o.RegionCode.IsSet() {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given NullableString and assigns it to the RegionCode field.
func (o *AwsWorkspaceRegion) SetRegionCode(v string) {
	o.RegionCode.Set(&v)
}
// SetRegionCodeNil sets the value for RegionCode to be an explicit nil
func (o *AwsWorkspaceRegion) SetRegionCodeNil() {
	o.RegionCode.Set(nil)
}

// UnsetRegionCode ensures that no value is present for RegionCode, not even an explicit nil
func (o *AwsWorkspaceRegion) UnsetRegionCode() {
	o.RegionCode.Unset()
}

// GetRegionName returns the RegionName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsWorkspaceRegion) GetRegionName() string {
	if o == nil || IsNil(o.RegionName.Get()) {
		var ret string
		return ret
	}
	return *o.RegionName.Get()
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsWorkspaceRegion) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegionName.Get(), o.RegionName.IsSet()
}

// HasRegionName returns a boolean if a field has been set.
func (o *AwsWorkspaceRegion) HasRegionName() bool {
	if o != nil && o.RegionName.IsSet() {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given NullableString and assigns it to the RegionName field.
func (o *AwsWorkspaceRegion) SetRegionName(v string) {
	o.RegionName.Set(&v)
}
// SetRegionNameNil sets the value for RegionName to be an explicit nil
func (o *AwsWorkspaceRegion) SetRegionNameNil() {
	o.RegionName.Set(nil)
}

// UnsetRegionName ensures that no value is present for RegionName, not even an explicit nil
func (o *AwsWorkspaceRegion) UnsetRegionName() {
	o.RegionName.Unset()
}

// GetSupportedAzIds returns the SupportedAzIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsWorkspaceRegion) GetSupportedAzIds() string {
	if o == nil || IsNil(o.SupportedAzIds.Get()) {
		var ret string
		return ret
	}
	return *o.SupportedAzIds.Get()
}

// GetSupportedAzIdsOk returns a tuple with the SupportedAzIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsWorkspaceRegion) GetSupportedAzIdsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportedAzIds.Get(), o.SupportedAzIds.IsSet()
}

// HasSupportedAzIds returns a boolean if a field has been set.
func (o *AwsWorkspaceRegion) HasSupportedAzIds() bool {
	if o != nil && o.SupportedAzIds.IsSet() {
		return true
	}

	return false
}

// SetSupportedAzIds gets a reference to the given NullableString and assigns it to the SupportedAzIds field.
func (o *AwsWorkspaceRegion) SetSupportedAzIds(v string) {
	o.SupportedAzIds.Set(&v)
}
// SetSupportedAzIdsNil sets the value for SupportedAzIds to be an explicit nil
func (o *AwsWorkspaceRegion) SetSupportedAzIdsNil() {
	o.SupportedAzIds.Set(nil)
}

// UnsetSupportedAzIds ensures that no value is present for SupportedAzIds, not even an explicit nil
func (o *AwsWorkspaceRegion) UnsetSupportedAzIds() {
	o.SupportedAzIds.Unset()
}

func (o AwsWorkspaceRegion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsWorkspaceRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RegionCode.IsSet() {
		toSerialize["regionCode"] = o.RegionCode.Get()
	}
	if o.RegionName.IsSet() {
		toSerialize["regionName"] = o.RegionName.Get()
	}
	if o.SupportedAzIds.IsSet() {
		toSerialize["supportedAzIds"] = o.SupportedAzIds.Get()
	}
	return toSerialize, nil
}

type NullableAwsWorkspaceRegion struct {
	value *AwsWorkspaceRegion
	isSet bool
}

func (v NullableAwsWorkspaceRegion) Get() *AwsWorkspaceRegion {
	return v.value
}

func (v *NullableAwsWorkspaceRegion) Set(val *AwsWorkspaceRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsWorkspaceRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsWorkspaceRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsWorkspaceRegion(val *AwsWorkspaceRegion) *NullableAwsWorkspaceRegion {
	return &NullableAwsWorkspaceRegion{value: val, isSet: true}
}

func (v NullableAwsWorkspaceRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsWorkspaceRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


