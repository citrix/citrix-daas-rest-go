/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsEdcAmiImageBootMode the model 'AwsEdcAmiImageBootMode'
type AwsEdcAmiImageBootMode string

// List of AwsEdcAmiImageBootMode
const (
	AWSEDCAMIIMAGEBOOTMODE_LEGACYBIOS AwsEdcAmiImageBootMode = "LEGACYBIOS"
	AWSEDCAMIIMAGEBOOTMODE_UEFI AwsEdcAmiImageBootMode = "UEFI"
)

// All allowed values of AwsEdcAmiImageBootMode enum
var AllowedAwsEdcAmiImageBootModeEnumValues = []AwsEdcAmiImageBootMode{
	"LEGACYBIOS",
	"UEFI",
}

func (v *AwsEdcAmiImageBootMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsEdcAmiImageBootMode(value)
	for _, existing := range AllowedAwsEdcAmiImageBootModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsEdcAmiImageBootMode", value)
}

// NewAwsEdcAmiImageBootModeFromValue returns a pointer to a valid AwsEdcAmiImageBootMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsEdcAmiImageBootModeFromValue(v string) (*AwsEdcAmiImageBootMode, error) {
	ev := AwsEdcAmiImageBootMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsEdcAmiImageBootMode: valid values are %v", v, AllowedAwsEdcAmiImageBootModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsEdcAmiImageBootMode) IsValid() bool {
	for _, existing := range AllowedAwsEdcAmiImageBootModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsEdcAmiImageBootMode value
func (v AwsEdcAmiImageBootMode) Ptr() *AwsEdcAmiImageBootMode {
	return &v
}

type NullableAwsEdcAmiImageBootMode struct {
	value *AwsEdcAmiImageBootMode
	isSet bool
}

func (v NullableAwsEdcAmiImageBootMode) Get() *AwsEdcAmiImageBootMode {
	return v.value
}

func (v *NullableAwsEdcAmiImageBootMode) Set(val *AwsEdcAmiImageBootMode) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcAmiImageBootMode) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcAmiImageBootMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcAmiImageBootMode(val *AwsEdcAmiImageBootMode) *NullableAwsEdcAmiImageBootMode {
	return &NullableAwsEdcAmiImageBootMode{value: val, isSet: true}
}

func (v NullableAwsEdcAmiImageBootMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcAmiImageBootMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

