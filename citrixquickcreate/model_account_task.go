/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AccountTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountTask{}

// AccountTask Enumerable of AccountTask
type AccountTask struct {
	TaskBase
	Operation NullableAccountTaskOperationType `json:"operation"`
	// Account Id this task is working on
	AccountId NullableString `json:"accountId,omitempty"`
}

// NewAccountTask instantiates a new AccountTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTask(operation NullableAccountTaskOperationType, taskType TaskType) *AccountTask {
	this := AccountTask{}
	this.TaskType = taskType
	return &this
}

// NewAccountTaskWithDefaults instantiates a new AccountTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTaskWithDefaults() *AccountTask {
	this := AccountTask{}
	return &this
}

// GetOperation returns the Operation field value
// If the value is explicit nil, the zero value for AccountTaskOperationType will be returned
func (o *AccountTask) GetOperation() AccountTaskOperationType {
	if o == nil || o.Operation.Get() == nil {
		var ret AccountTaskOperationType
		return ret
	}

	return *o.Operation.Get()
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountTask) GetOperationOk() (*AccountTaskOperationType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operation.Get(), o.Operation.IsSet()
}

// SetOperation sets field value
func (o *AccountTask) SetOperation(v AccountTaskOperationType) {
	o.Operation.Set(&v)
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountTask) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountTask) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccountTask) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *AccountTask) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *AccountTask) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *AccountTask) UnsetAccountId() {
	o.AccountId.Unset()
}

func (o AccountTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTaskBase, errTaskBase := json.Marshal(o.TaskBase)
	if errTaskBase != nil {
		return map[string]interface{}{}, errTaskBase
	}
	errTaskBase = json.Unmarshal([]byte(serializedTaskBase), &toSerialize)
	if errTaskBase != nil {
		return map[string]interface{}{}, errTaskBase
	}
	toSerialize["operation"] = o.Operation.Get()
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	return toSerialize, nil
}

type NullableAccountTask struct {
	value *AccountTask
	isSet bool
}

func (v NullableAccountTask) Get() *AccountTask {
	return v.value
}

func (v *NullableAccountTask) Set(val *AccountTask) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTask) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTask(val *AccountTask) *NullableAccountTask {
	return &NullableAccountTask{value: val, isSet: true}
}

func (v NullableAccountTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


