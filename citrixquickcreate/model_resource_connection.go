/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the ResourceConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceConnection{}

// ResourceConnection Resource connection
type ResourceConnection struct {
	// The type of provider associated with the account
	AccountType AccountType `json:"accountType"`
	// The ID of the account
	AccountId NullableString `json:"accountId,omitempty"`
	// The Id of the connection
	ConnectionId string `json:"connectionId"`
	// The name of the connection
	Name string `json:"name"`
	// The state of connection
	ConnectionState NullableConnectionState `json:"connectionState,omitempty"`
	// Zone id
	ZoneId NullableString `json:"zoneId,omitempty"`
	// Resource Location Id
	ResourceLocationId NullableString `json:"resourceLocationId,omitempty"`
	// Tasks currently being performed on the connection
	ActiveTasks []GetTaskAsync200Response `json:"activeTasks,omitempty"`
	// Indicates whether the resource connection is Citrix managed
	CitrixManaged         bool                        `json:"citrixManaged"`
	AssociatedDeployments []AssociatedDeployment      `json:"associatedDeployments,omitempty"`
	Warnings              []ResourceConnectionWarning `json:"warnings,omitempty"`
}

type _ResourceConnection ResourceConnection

// NewResourceConnection instantiates a new ResourceConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConnection(accountType AccountType, connectionId string, name string, citrixManaged bool) *ResourceConnection {
	this := ResourceConnection{}
	this.AccountType = accountType
	this.ConnectionId = connectionId
	this.Name = name
	this.CitrixManaged = citrixManaged
	return &this
}

// NewResourceConnectionWithDefaults instantiates a new ResourceConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConnectionWithDefaults() *ResourceConnection {
	this := ResourceConnection{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *ResourceConnection) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *ResourceConnection) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *ResourceConnection) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *ResourceConnection) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *ResourceConnection) SetAccountId(v string) {
	o.AccountId.Set(&v)
}

// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *ResourceConnection) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *ResourceConnection) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetConnectionId returns the ConnectionId field value
func (o *ResourceConnection) GetConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
func (o *ResourceConnection) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionId, true
}

// SetConnectionId sets field value
func (o *ResourceConnection) SetConnectionId(v string) {
	o.ConnectionId = v
}

// GetName returns the Name field value
func (o *ResourceConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceConnection) SetName(v string) {
	o.Name = v
}

// GetConnectionState returns the ConnectionState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetConnectionState() ConnectionState {
	if o == nil || IsNil(o.ConnectionState.Get()) {
		var ret ConnectionState
		return ret
	}
	return *o.ConnectionState.Get()
}

// GetConnectionStateOk returns a tuple with the ConnectionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetConnectionStateOk() (*ConnectionState, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionState.Get(), o.ConnectionState.IsSet()
}

// HasConnectionState returns a boolean if a field has been set.
func (o *ResourceConnection) HasConnectionState() bool {
	if o != nil && o.ConnectionState.IsSet() {
		return true
	}

	return false
}

// SetConnectionState gets a reference to the given NullableConnectionState and assigns it to the ConnectionState field.
func (o *ResourceConnection) SetConnectionState(v ConnectionState) {
	o.ConnectionState.Set(&v)
}

// SetConnectionStateNil sets the value for ConnectionState to be an explicit nil
func (o *ResourceConnection) SetConnectionStateNil() {
	o.ConnectionState.Set(nil)
}

// UnsetConnectionState ensures that no value is present for ConnectionState, not even an explicit nil
func (o *ResourceConnection) UnsetConnectionState() {
	o.ConnectionState.Unset()
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneId.Get()
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneId.Get(), o.ZoneId.IsSet()
}

// HasZoneId returns a boolean if a field has been set.
func (o *ResourceConnection) HasZoneId() bool {
	if o != nil && o.ZoneId.IsSet() {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given NullableString and assigns it to the ZoneId field.
func (o *ResourceConnection) SetZoneId(v string) {
	o.ZoneId.Set(&v)
}

// SetZoneIdNil sets the value for ZoneId to be an explicit nil
func (o *ResourceConnection) SetZoneIdNil() {
	o.ZoneId.Set(nil)
}

// UnsetZoneId ensures that no value is present for ZoneId, not even an explicit nil
func (o *ResourceConnection) UnsetZoneId() {
	o.ZoneId.Unset()
}

// GetResourceLocationId returns the ResourceLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetResourceLocationId() string {
	if o == nil || IsNil(o.ResourceLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceLocationId.Get()
}

// GetResourceLocationIdOk returns a tuple with the ResourceLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetResourceLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceLocationId.Get(), o.ResourceLocationId.IsSet()
}

// HasResourceLocationId returns a boolean if a field has been set.
func (o *ResourceConnection) HasResourceLocationId() bool {
	if o != nil && o.ResourceLocationId.IsSet() {
		return true
	}

	return false
}

// SetResourceLocationId gets a reference to the given NullableString and assigns it to the ResourceLocationId field.
func (o *ResourceConnection) SetResourceLocationId(v string) {
	o.ResourceLocationId.Set(&v)
}

// SetResourceLocationIdNil sets the value for ResourceLocationId to be an explicit nil
func (o *ResourceConnection) SetResourceLocationIdNil() {
	o.ResourceLocationId.Set(nil)
}

// UnsetResourceLocationId ensures that no value is present for ResourceLocationId, not even an explicit nil
func (o *ResourceConnection) UnsetResourceLocationId() {
	o.ResourceLocationId.Unset()
}

// GetActiveTasks returns the ActiveTasks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetActiveTasks() []GetTaskAsync200Response {
	if o == nil {
		var ret []GetTaskAsync200Response
		return ret
	}
	return o.ActiveTasks
}

// GetActiveTasksOk returns a tuple with the ActiveTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetActiveTasksOk() ([]GetTaskAsync200Response, bool) {
	if o == nil || IsNil(o.ActiveTasks) {
		return nil, false
	}
	return o.ActiveTasks, true
}

// HasActiveTasks returns a boolean if a field has been set.
func (o *ResourceConnection) HasActiveTasks() bool {
	if o != nil && !IsNil(o.ActiveTasks) {
		return true
	}

	return false
}

// SetActiveTasks gets a reference to the given []GetTaskAsync200Response and assigns it to the ActiveTasks field.
func (o *ResourceConnection) SetActiveTasks(v []GetTaskAsync200Response) {
	o.ActiveTasks = v
}

// GetCitrixManaged returns the CitrixManaged field value
func (o *ResourceConnection) GetCitrixManaged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value
// and a boolean to check if the value has been set.
func (o *ResourceConnection) GetCitrixManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CitrixManaged, true
}

// SetCitrixManaged sets field value
func (o *ResourceConnection) SetCitrixManaged(v bool) {
	o.CitrixManaged = v
}

// GetAssociatedDeployments returns the AssociatedDeployments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetAssociatedDeployments() []AssociatedDeployment {
	if o == nil {
		var ret []AssociatedDeployment
		return ret
	}
	return o.AssociatedDeployments
}

// GetAssociatedDeploymentsOk returns a tuple with the AssociatedDeployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetAssociatedDeploymentsOk() ([]AssociatedDeployment, bool) {
	if o == nil || IsNil(o.AssociatedDeployments) {
		return nil, false
	}
	return o.AssociatedDeployments, true
}

// HasAssociatedDeployments returns a boolean if a field has been set.
func (o *ResourceConnection) HasAssociatedDeployments() bool {
	if o != nil && !IsNil(o.AssociatedDeployments) {
		return true
	}

	return false
}

// SetAssociatedDeployments gets a reference to the given []AssociatedDeployment and assigns it to the AssociatedDeployments field.
func (o *ResourceConnection) SetAssociatedDeployments(v []AssociatedDeployment) {
	o.AssociatedDeployments = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnection) GetWarnings() []ResourceConnectionWarning {
	if o == nil {
		var ret []ResourceConnectionWarning
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnection) GetWarningsOk() ([]ResourceConnectionWarning, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ResourceConnection) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []ResourceConnectionWarning and assigns it to the Warnings field.
func (o *ResourceConnection) SetWarnings(v []ResourceConnectionWarning) {
	o.Warnings = v
}

func (o ResourceConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountType"] = o.AccountType
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	toSerialize["connectionId"] = o.ConnectionId
	toSerialize["name"] = o.Name
	if o.ConnectionState.IsSet() {
		toSerialize["connectionState"] = o.ConnectionState.Get()
	}
	if o.ZoneId.IsSet() {
		toSerialize["zoneId"] = o.ZoneId.Get()
	}
	if o.ResourceLocationId.IsSet() {
		toSerialize["resourceLocationId"] = o.ResourceLocationId.Get()
	}
	if o.ActiveTasks != nil {
		toSerialize["activeTasks"] = o.ActiveTasks
	}
	toSerialize["citrixManaged"] = o.CitrixManaged
	if o.AssociatedDeployments != nil {
		toSerialize["associatedDeployments"] = o.AssociatedDeployments
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableResourceConnection struct {
	value *ResourceConnection
	isSet bool
}

func (v NullableResourceConnection) Get() *ResourceConnection {
	return v.value
}

func (v *NullableResourceConnection) Set(val *ResourceConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConnection(val *ResourceConnection) *NullableResourceConnection {
	return &NullableResourceConnection{value: val, isSet: true}
}

func (v NullableResourceConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
