/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsAccountResourceType Types of resources that can be located from an AWS account
type AwsAccountResourceType string

// List of AwsAccountResourceType
const (
	AWSACCOUNTRESOURCETYPE_DIRECTORY AwsAccountResourceType = "AWS_DIRECTORY"
	AWSACCOUNTRESOURCETYPE_VPC AwsAccountResourceType = "AWS_VPC"
	AWSACCOUNTRESOURCETYPE_SUBNET AwsAccountResourceType = "AWS_SUBNET"
	AWSACCOUNTRESOURCETYPE_SECGROUP AwsAccountResourceType = "AWS_SECGROUP"
	AWSACCOUNTRESOURCETYPE_CIDRRANGE AwsAccountResourceType = "AWS_CIDRRANGE"
	AWSACCOUNTRESOURCETYPE_AMI AwsAccountResourceType = "AWS_AMI"
	AWSACCOUNTRESOURCETYPE_REGIONS AwsAccountResourceType = "AWS_REGIONS"
	AWSACCOUNTRESOURCETYPE_BYOL_REGISTRATION AwsAccountResourceType = "AWS_BYOL_REGISTRATION"
	AWSACCOUNTRESOURCETYPE_CITRIXIAMUSER AwsAccountResourceType = "AWS_CITRIXIAMUSER"
	AWSACCOUNTRESOURCETYPE_CLOUDFORMATION AwsAccountResourceType = "AWS_CLOUDFORMATION"
	AWSACCOUNTRESOURCETYPE_EC2_INSTANCE_TYPE AwsAccountResourceType = "AWS_EC2_INSTANCE_TYPE"
	AWSACCOUNTRESOURCETYPE_EC2_KEY_PAIR AwsAccountResourceType = "AWS_EC2_KEY_PAIR"
)

// All allowed values of AwsAccountResourceType enum
var AllowedAwsAccountResourceTypeEnumValues = []AwsAccountResourceType{
	"AWS_DIRECTORY",
	"AWS_VPC",
	"AWS_SUBNET",
	"AWS_SECGROUP",
	"AWS_CIDRRANGE",
	"AWS_AMI",
	"AWS_REGIONS",
	"AWS_BYOL_REGISTRATION",
	"AWS_CITRIXIAMUSER",
	"AWS_CLOUDFORMATION",
	"AWS_EC2_INSTANCE_TYPE",
	"AWS_EC2_KEY_PAIR",
}

func (v *AwsAccountResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsAccountResourceType(value)
	for _, existing := range AllowedAwsAccountResourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsAccountResourceType", value)
}

// NewAwsAccountResourceTypeFromValue returns a pointer to a valid AwsAccountResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsAccountResourceTypeFromValue(v string) (*AwsAccountResourceType, error) {
	ev := AwsAccountResourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsAccountResourceType: valid values are %v", v, AllowedAwsAccountResourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsAccountResourceType) IsValid() bool {
	for _, existing := range AllowedAwsAccountResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsAccountResourceType value
func (v AwsAccountResourceType) Ptr() *AwsAccountResourceType {
	return &v
}

type NullableAwsAccountResourceType struct {
	value *AwsAccountResourceType
	isSet bool
}

func (v NullableAwsAccountResourceType) Get() *AwsAccountResourceType {
	return v.value
}

func (v *NullableAwsAccountResourceType) Set(val *AwsAccountResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsAccountResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsAccountResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsAccountResourceType(val *AwsAccountResourceType) *NullableAwsAccountResourceType {
	return &NullableAwsAccountResourceType{value: val, isSet: true}
}

func (v NullableAwsAccountResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsAccountResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

