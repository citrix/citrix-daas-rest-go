/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AddAwsEdcWorkspace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAwsEdcWorkspace{}

// AddAwsEdcWorkspace Configuration for individual workspace
type AddAwsEdcWorkspace struct {
	// Username associated with workspace
	Username NullableString `json:"username,omitempty"`
	// Size of operating system volume
	RootVolumeSize *int32 `json:"rootVolumeSize,omitempty"`
	// Size of user storage volume
	UserVolumeSize *int32 `json:"userVolumeSize,omitempty"`
	RunningMode NullableAwsEdcWorkspaceRunningMode `json:"runningMode,omitempty"`
}

// NewAddAwsEdcWorkspace instantiates a new AddAwsEdcWorkspace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAwsEdcWorkspace() *AddAwsEdcWorkspace {
	this := AddAwsEdcWorkspace{}
	return &this
}

// NewAddAwsEdcWorkspaceWithDefaults instantiates a new AddAwsEdcWorkspace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAwsEdcWorkspaceWithDefaults() *AddAwsEdcWorkspace {
	this := AddAwsEdcWorkspace{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddAwsEdcWorkspace) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddAwsEdcWorkspace) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *AddAwsEdcWorkspace) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *AddAwsEdcWorkspace) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *AddAwsEdcWorkspace) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *AddAwsEdcWorkspace) UnsetUsername() {
	o.Username.Unset()
}

// GetRootVolumeSize returns the RootVolumeSize field value if set, zero value otherwise.
func (o *AddAwsEdcWorkspace) GetRootVolumeSize() int32 {
	if o == nil || IsNil(o.RootVolumeSize) {
		var ret int32
		return ret
	}
	return *o.RootVolumeSize
}

// GetRootVolumeSizeOk returns a tuple with the RootVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAwsEdcWorkspace) GetRootVolumeSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.RootVolumeSize) {
		return nil, false
	}
	return o.RootVolumeSize, true
}

// HasRootVolumeSize returns a boolean if a field has been set.
func (o *AddAwsEdcWorkspace) HasRootVolumeSize() bool {
	if o != nil && !IsNil(o.RootVolumeSize) {
		return true
	}

	return false
}

// SetRootVolumeSize gets a reference to the given int32 and assigns it to the RootVolumeSize field.
func (o *AddAwsEdcWorkspace) SetRootVolumeSize(v int32) {
	o.RootVolumeSize = &v
}

// GetUserVolumeSize returns the UserVolumeSize field value if set, zero value otherwise.
func (o *AddAwsEdcWorkspace) GetUserVolumeSize() int32 {
	if o == nil || IsNil(o.UserVolumeSize) {
		var ret int32
		return ret
	}
	return *o.UserVolumeSize
}

// GetUserVolumeSizeOk returns a tuple with the UserVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAwsEdcWorkspace) GetUserVolumeSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.UserVolumeSize) {
		return nil, false
	}
	return o.UserVolumeSize, true
}

// HasUserVolumeSize returns a boolean if a field has been set.
func (o *AddAwsEdcWorkspace) HasUserVolumeSize() bool {
	if o != nil && !IsNil(o.UserVolumeSize) {
		return true
	}

	return false
}

// SetUserVolumeSize gets a reference to the given int32 and assigns it to the UserVolumeSize field.
func (o *AddAwsEdcWorkspace) SetUserVolumeSize(v int32) {
	o.UserVolumeSize = &v
}

// GetRunningMode returns the RunningMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddAwsEdcWorkspace) GetRunningMode() AwsEdcWorkspaceRunningMode {
	if o == nil || IsNil(o.RunningMode.Get()) {
		var ret AwsEdcWorkspaceRunningMode
		return ret
	}
	return *o.RunningMode.Get()
}

// GetRunningModeOk returns a tuple with the RunningMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddAwsEdcWorkspace) GetRunningModeOk() (*AwsEdcWorkspaceRunningMode, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunningMode.Get(), o.RunningMode.IsSet()
}

// HasRunningMode returns a boolean if a field has been set.
func (o *AddAwsEdcWorkspace) HasRunningMode() bool {
	if o != nil && o.RunningMode.IsSet() {
		return true
	}

	return false
}

// SetRunningMode gets a reference to the given NullableAwsEdcWorkspaceRunningMode and assigns it to the RunningMode field.
func (o *AddAwsEdcWorkspace) SetRunningMode(v AwsEdcWorkspaceRunningMode) {
	o.RunningMode.Set(&v)
}
// SetRunningModeNil sets the value for RunningMode to be an explicit nil
func (o *AddAwsEdcWorkspace) SetRunningModeNil() {
	o.RunningMode.Set(nil)
}

// UnsetRunningMode ensures that no value is present for RunningMode, not even an explicit nil
func (o *AddAwsEdcWorkspace) UnsetRunningMode() {
	o.RunningMode.Unset()
}

func (o AddAwsEdcWorkspace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAwsEdcWorkspace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if !IsNil(o.RootVolumeSize) {
		toSerialize["rootVolumeSize"] = o.RootVolumeSize
	}
	if !IsNil(o.UserVolumeSize) {
		toSerialize["userVolumeSize"] = o.UserVolumeSize
	}
	if o.RunningMode.IsSet() {
		toSerialize["runningMode"] = o.RunningMode.Get()
	}
	return toSerialize, nil
}

type NullableAddAwsEdcWorkspace struct {
	value *AddAwsEdcWorkspace
	isSet bool
}

func (v NullableAddAwsEdcWorkspace) Get() *AddAwsEdcWorkspace {
	return v.value
}

func (v *NullableAddAwsEdcWorkspace) Set(val *AddAwsEdcWorkspace) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAwsEdcWorkspace) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAwsEdcWorkspace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAwsEdcWorkspace(val *AddAwsEdcWorkspace) *NullableAddAwsEdcWorkspace {
	return &NullableAddAwsEdcWorkspace{value: val, isSet: true}
}

func (v NullableAddAwsEdcWorkspace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAwsEdcWorkspace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


