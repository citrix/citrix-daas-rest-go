/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the UpdateAwsEdcAccountCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAwsEdcAccountCredentials{}

// UpdateAwsEdcAccountCredentials struct for UpdateAwsEdcAccountCredentials
type UpdateAwsEdcAccountCredentials struct {
	UpdateAccount
	// The ID of Access Key associated with the account
	AwsAccessKeyId NullableString `json:"awsAccessKeyId,omitempty"`
	// The secret associated with access key for the account
	AwsSecretAccessKey NullableString `json:"awsSecretAccessKey,omitempty"`
	// The ARN of the role to assume
	AwsRoleArn NullableString `json:"awsRoleArn,omitempty"`
}

// NewUpdateAwsEdcAccountCredentials instantiates a new UpdateAwsEdcAccountCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAwsEdcAccountCredentials(accountOperationType UpdateAccountOperationType) *UpdateAwsEdcAccountCredentials {
	this := UpdateAwsEdcAccountCredentials{}
	this.AccountOperationType = accountOperationType
	return &this
}

// NewUpdateAwsEdcAccountCredentialsWithDefaults instantiates a new UpdateAwsEdcAccountCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAwsEdcAccountCredentialsWithDefaults() *UpdateAwsEdcAccountCredentials {
	this := UpdateAwsEdcAccountCredentials{}
	return &this
}

// GetAwsAccessKeyId returns the AwsAccessKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAwsEdcAccountCredentials) GetAwsAccessKeyId() string {
	if o == nil || IsNil(o.AwsAccessKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.AwsAccessKeyId.Get()
}

// GetAwsAccessKeyIdOk returns a tuple with the AwsAccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAwsEdcAccountCredentials) GetAwsAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsAccessKeyId.Get(), o.AwsAccessKeyId.IsSet()
}

// HasAwsAccessKeyId returns a boolean if a field has been set.
func (o *UpdateAwsEdcAccountCredentials) HasAwsAccessKeyId() bool {
	if o != nil && o.AwsAccessKeyId.IsSet() {
		return true
	}

	return false
}

// SetAwsAccessKeyId gets a reference to the given NullableString and assigns it to the AwsAccessKeyId field.
func (o *UpdateAwsEdcAccountCredentials) SetAwsAccessKeyId(v string) {
	o.AwsAccessKeyId.Set(&v)
}
// SetAwsAccessKeyIdNil sets the value for AwsAccessKeyId to be an explicit nil
func (o *UpdateAwsEdcAccountCredentials) SetAwsAccessKeyIdNil() {
	o.AwsAccessKeyId.Set(nil)
}

// UnsetAwsAccessKeyId ensures that no value is present for AwsAccessKeyId, not even an explicit nil
func (o *UpdateAwsEdcAccountCredentials) UnsetAwsAccessKeyId() {
	o.AwsAccessKeyId.Unset()
}

// GetAwsSecretAccessKey returns the AwsSecretAccessKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAwsEdcAccountCredentials) GetAwsSecretAccessKey() string {
	if o == nil || IsNil(o.AwsSecretAccessKey.Get()) {
		var ret string
		return ret
	}
	return *o.AwsSecretAccessKey.Get()
}

// GetAwsSecretAccessKeyOk returns a tuple with the AwsSecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAwsEdcAccountCredentials) GetAwsSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsSecretAccessKey.Get(), o.AwsSecretAccessKey.IsSet()
}

// HasAwsSecretAccessKey returns a boolean if a field has been set.
func (o *UpdateAwsEdcAccountCredentials) HasAwsSecretAccessKey() bool {
	if o != nil && o.AwsSecretAccessKey.IsSet() {
		return true
	}

	return false
}

// SetAwsSecretAccessKey gets a reference to the given NullableString and assigns it to the AwsSecretAccessKey field.
func (o *UpdateAwsEdcAccountCredentials) SetAwsSecretAccessKey(v string) {
	o.AwsSecretAccessKey.Set(&v)
}
// SetAwsSecretAccessKeyNil sets the value for AwsSecretAccessKey to be an explicit nil
func (o *UpdateAwsEdcAccountCredentials) SetAwsSecretAccessKeyNil() {
	o.AwsSecretAccessKey.Set(nil)
}

// UnsetAwsSecretAccessKey ensures that no value is present for AwsSecretAccessKey, not even an explicit nil
func (o *UpdateAwsEdcAccountCredentials) UnsetAwsSecretAccessKey() {
	o.AwsSecretAccessKey.Unset()
}

// GetAwsRoleArn returns the AwsRoleArn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAwsEdcAccountCredentials) GetAwsRoleArn() string {
	if o == nil || IsNil(o.AwsRoleArn.Get()) {
		var ret string
		return ret
	}
	return *o.AwsRoleArn.Get()
}

// GetAwsRoleArnOk returns a tuple with the AwsRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAwsEdcAccountCredentials) GetAwsRoleArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsRoleArn.Get(), o.AwsRoleArn.IsSet()
}

// HasAwsRoleArn returns a boolean if a field has been set.
func (o *UpdateAwsEdcAccountCredentials) HasAwsRoleArn() bool {
	if o != nil && o.AwsRoleArn.IsSet() {
		return true
	}

	return false
}

// SetAwsRoleArn gets a reference to the given NullableString and assigns it to the AwsRoleArn field.
func (o *UpdateAwsEdcAccountCredentials) SetAwsRoleArn(v string) {
	o.AwsRoleArn.Set(&v)
}
// SetAwsRoleArnNil sets the value for AwsRoleArn to be an explicit nil
func (o *UpdateAwsEdcAccountCredentials) SetAwsRoleArnNil() {
	o.AwsRoleArn.Set(nil)
}

// UnsetAwsRoleArn ensures that no value is present for AwsRoleArn, not even an explicit nil
func (o *UpdateAwsEdcAccountCredentials) UnsetAwsRoleArn() {
	o.AwsRoleArn.Unset()
}

func (o UpdateAwsEdcAccountCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAwsEdcAccountCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedUpdateAccount, errUpdateAccount := json.Marshal(o.UpdateAccount)
	if errUpdateAccount != nil {
		return map[string]interface{}{}, errUpdateAccount
	}
	errUpdateAccount = json.Unmarshal([]byte(serializedUpdateAccount), &toSerialize)
	if errUpdateAccount != nil {
		return map[string]interface{}{}, errUpdateAccount
	}
	if o.AwsAccessKeyId.IsSet() {
		toSerialize["awsAccessKeyId"] = o.AwsAccessKeyId.Get()
	}
	if o.AwsSecretAccessKey.IsSet() {
		toSerialize["awsSecretAccessKey"] = o.AwsSecretAccessKey.Get()
	}
	if o.AwsRoleArn.IsSet() {
		toSerialize["awsRoleArn"] = o.AwsRoleArn.Get()
	}
	return toSerialize, nil
}

type NullableUpdateAwsEdcAccountCredentials struct {
	value *UpdateAwsEdcAccountCredentials
	isSet bool
}

func (v NullableUpdateAwsEdcAccountCredentials) Get() *UpdateAwsEdcAccountCredentials {
	return v.value
}

func (v *NullableUpdateAwsEdcAccountCredentials) Set(val *UpdateAwsEdcAccountCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAwsEdcAccountCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAwsEdcAccountCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAwsEdcAccountCredentials(val *UpdateAwsEdcAccountCredentials) *NullableUpdateAwsEdcAccountCredentials {
	return &NullableUpdateAwsEdcAccountCredentials{value: val, isSet: true}
}

func (v NullableUpdateAwsEdcAccountCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAwsEdcAccountCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


