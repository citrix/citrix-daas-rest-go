/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsEdcAccountResourceFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEdcAccountResourceFile{}

// AwsEdcAccountResourceFile Represents a resource associated with an account that can be saved as a file
type AwsEdcAccountResourceFile struct {
	AwsEdcAccountResource
	// The file data as an array of bytes
	FileContent NullableString `json:"fileContent,omitempty"`
	// Suggested file name
	FileName NullableString `json:"fileName,omitempty"`
	// The type of content in the file
	ContentType NullableString `json:"contentType,omitempty"`
}

// NewAwsEdcAccountResourceFile instantiates a new AwsEdcAccountResourceFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEdcAccountResourceFile(accountType AccountType) *AwsEdcAccountResourceFile {
	this := AwsEdcAccountResourceFile{}
	this.AccountType = accountType
	return &this
}

// NewAwsEdcAccountResourceFileWithDefaults instantiates a new AwsEdcAccountResourceFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEdcAccountResourceFileWithDefaults() *AwsEdcAccountResourceFile {
	this := AwsEdcAccountResourceFile{}
	return &this
}

// GetFileContent returns the FileContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceFile) GetFileContent() string {
	if o == nil || IsNil(o.FileContent.Get()) {
		var ret string
		return ret
	}
	return *o.FileContent.Get()
}

// GetFileContentOk returns a tuple with the FileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceFile) GetFileContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileContent.Get(), o.FileContent.IsSet()
}

// HasFileContent returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceFile) HasFileContent() bool {
	if o != nil && o.FileContent.IsSet() {
		return true
	}

	return false
}

// SetFileContent gets a reference to the given NullableString and assigns it to the FileContent field.
func (o *AwsEdcAccountResourceFile) SetFileContent(v string) {
	o.FileContent.Set(&v)
}
// SetFileContentNil sets the value for FileContent to be an explicit nil
func (o *AwsEdcAccountResourceFile) SetFileContentNil() {
	o.FileContent.Set(nil)
}

// UnsetFileContent ensures that no value is present for FileContent, not even an explicit nil
func (o *AwsEdcAccountResourceFile) UnsetFileContent() {
	o.FileContent.Unset()
}

// GetFileName returns the FileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceFile) GetFileName() string {
	if o == nil || IsNil(o.FileName.Get()) {
		var ret string
		return ret
	}
	return *o.FileName.Get()
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceFile) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileName.Get(), o.FileName.IsSet()
}

// HasFileName returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceFile) HasFileName() bool {
	if o != nil && o.FileName.IsSet() {
		return true
	}

	return false
}

// SetFileName gets a reference to the given NullableString and assigns it to the FileName field.
func (o *AwsEdcAccountResourceFile) SetFileName(v string) {
	o.FileName.Set(&v)
}
// SetFileNameNil sets the value for FileName to be an explicit nil
func (o *AwsEdcAccountResourceFile) SetFileNameNil() {
	o.FileName.Set(nil)
}

// UnsetFileName ensures that no value is present for FileName, not even an explicit nil
func (o *AwsEdcAccountResourceFile) UnsetFileName() {
	o.FileName.Unset()
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceFile) GetContentType() string {
	if o == nil || IsNil(o.ContentType.Get()) {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceFile) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceFile) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *AwsEdcAccountResourceFile) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *AwsEdcAccountResourceFile) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *AwsEdcAccountResourceFile) UnsetContentType() {
	o.ContentType.Unset()
}

func (o AwsEdcAccountResourceFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEdcAccountResourceFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAwsEdcAccountResource, errAwsEdcAccountResource := json.Marshal(o.AwsEdcAccountResource)
	if errAwsEdcAccountResource != nil {
		return map[string]interface{}{}, errAwsEdcAccountResource
	}
	errAwsEdcAccountResource = json.Unmarshal([]byte(serializedAwsEdcAccountResource), &toSerialize)
	if errAwsEdcAccountResource != nil {
		return map[string]interface{}{}, errAwsEdcAccountResource
	}
	if o.FileContent.IsSet() {
		toSerialize["fileContent"] = o.FileContent.Get()
	}
	if o.FileName.IsSet() {
		toSerialize["fileName"] = o.FileName.Get()
	}
	if o.ContentType.IsSet() {
		toSerialize["contentType"] = o.ContentType.Get()
	}
	return toSerialize, nil
}

type NullableAwsEdcAccountResourceFile struct {
	value *AwsEdcAccountResourceFile
	isSet bool
}

func (v NullableAwsEdcAccountResourceFile) Get() *AwsEdcAccountResourceFile {
	return v.value
}

func (v *NullableAwsEdcAccountResourceFile) Set(val *AwsEdcAccountResourceFile) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcAccountResourceFile) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcAccountResourceFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcAccountResourceFile(val *AwsEdcAccountResourceFile) *NullableAwsEdcAccountResourceFile {
	return &NullableAwsEdcAccountResourceFile{value: val, isSet: true}
}

func (v NullableAwsEdcAccountResourceFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcAccountResourceFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


