/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AddResourceConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddResourceConnection{}

// AddResourceConnection Adds resource connection
type AddResourceConnection struct {
	// The type of provider associated with the account
	AccountType AccountType `json:"accountType"`
	// The name of the resource connection to create
	Name string `json:"name"`
	// Zone id
	ZoneId NullableString `json:"zoneId,omitempty"`
	// The ID of the CC resource location  Ignored if ZoneId is specified
	ResourceLocationId NullableString `json:"resourceLocationId,omitempty"`
	// The ID of the resource connection to be added
	ConnectionId NullableString `json:"connectionId,omitempty"`
}

type _AddResourceConnection AddResourceConnection

// NewAddResourceConnection instantiates a new AddResourceConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddResourceConnection(accountType AccountType, name string) *AddResourceConnection {
	this := AddResourceConnection{}
	this.AccountType = accountType
	this.Name = name
	return &this
}

// NewAddResourceConnectionWithDefaults instantiates a new AddResourceConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddResourceConnectionWithDefaults() *AddResourceConnection {
	this := AddResourceConnection{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *AddResourceConnection) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *AddResourceConnection) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *AddResourceConnection) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetName returns the Name field value
func (o *AddResourceConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddResourceConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddResourceConnection) SetName(v string) {
	o.Name = v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddResourceConnection) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneId.Get()
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddResourceConnection) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneId.Get(), o.ZoneId.IsSet()
}

// HasZoneId returns a boolean if a field has been set.
func (o *AddResourceConnection) HasZoneId() bool {
	if o != nil && o.ZoneId.IsSet() {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given NullableString and assigns it to the ZoneId field.
func (o *AddResourceConnection) SetZoneId(v string) {
	o.ZoneId.Set(&v)
}

// SetZoneIdNil sets the value for ZoneId to be an explicit nil
func (o *AddResourceConnection) SetZoneIdNil() {
	o.ZoneId.Set(nil)
}

// UnsetZoneId ensures that no value is present for ZoneId, not even an explicit nil
func (o *AddResourceConnection) UnsetZoneId() {
	o.ZoneId.Unset()
}

// GetResourceLocationId returns the ResourceLocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddResourceConnection) GetResourceLocationId() string {
	if o == nil || IsNil(o.ResourceLocationId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceLocationId.Get()
}

// GetResourceLocationIdOk returns a tuple with the ResourceLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddResourceConnection) GetResourceLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceLocationId.Get(), o.ResourceLocationId.IsSet()
}

// HasResourceLocationId returns a boolean if a field has been set.
func (o *AddResourceConnection) HasResourceLocationId() bool {
	if o != nil && o.ResourceLocationId.IsSet() {
		return true
	}

	return false
}

// SetResourceLocationId gets a reference to the given NullableString and assigns it to the ResourceLocationId field.
func (o *AddResourceConnection) SetResourceLocationId(v string) {
	o.ResourceLocationId.Set(&v)
}

// SetResourceLocationIdNil sets the value for ResourceLocationId to be an explicit nil
func (o *AddResourceConnection) SetResourceLocationIdNil() {
	o.ResourceLocationId.Set(nil)
}

// UnsetResourceLocationId ensures that no value is present for ResourceLocationId, not even an explicit nil
func (o *AddResourceConnection) UnsetResourceLocationId() {
	o.ResourceLocationId.Unset()
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddResourceConnection) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectionId.Get()
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddResourceConnection) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionId.Get(), o.ConnectionId.IsSet()
}

// HasConnectionId returns a boolean if a field has been set.
func (o *AddResourceConnection) HasConnectionId() bool {
	if o != nil && o.ConnectionId.IsSet() {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given NullableString and assigns it to the ConnectionId field.
func (o *AddResourceConnection) SetConnectionId(v string) {
	o.ConnectionId.Set(&v)
}

// SetConnectionIdNil sets the value for ConnectionId to be an explicit nil
func (o *AddResourceConnection) SetConnectionIdNil() {
	o.ConnectionId.Set(nil)
}

// UnsetConnectionId ensures that no value is present for ConnectionId, not even an explicit nil
func (o *AddResourceConnection) UnsetConnectionId() {
	o.ConnectionId.Unset()
}

func (o AddResourceConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddResourceConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountType"] = o.AccountType
	toSerialize["name"] = o.Name
	if o.ZoneId.IsSet() {
		toSerialize["zoneId"] = o.ZoneId.Get()
	}
	if o.ResourceLocationId.IsSet() {
		toSerialize["resourceLocationId"] = o.ResourceLocationId.Get()
	}
	if o.ConnectionId.IsSet() {
		toSerialize["connectionId"] = o.ConnectionId.Get()
	}
	return toSerialize, nil
}

type NullableAddResourceConnection struct {
	value *AddResourceConnection
	isSet bool
}

func (v NullableAddResourceConnection) Get() *AddResourceConnection {
	return v.value
}

func (v *NullableAddResourceConnection) Set(val *AddResourceConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableAddResourceConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableAddResourceConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddResourceConnection(val *AddResourceConnection) *NullableAddResourceConnection {
	return &NullableAddResourceConnection{value: val, isSet: true}
}

func (v NullableAddResourceConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddResourceConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
