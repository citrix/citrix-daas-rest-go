/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsEdcWorkspaceCompute the model 'AwsEdcWorkspaceCompute'
type AwsEdcWorkspaceCompute string

// List of AwsEdcWorkspaceCompute
const (
	AWSEDCWORKSPACECOMPUTE_GRAPHICS AwsEdcWorkspaceCompute = "GRAPHICS"
	AWSEDCWORKSPACECOMPUTE_GRAPHICSPRO AwsEdcWorkspaceCompute = "GRAPHICSPRO"
	AWSEDCWORKSPACECOMPUTE_GRAPHICS_G4_DN AwsEdcWorkspaceCompute = "GRAPHICS_G4DN"
	AWSEDCWORKSPACECOMPUTE_GRAPHICSPRO_G4_DN AwsEdcWorkspaceCompute = "GRAPHICSPRO_G4DN"
	AWSEDCWORKSPACECOMPUTE_PERFORMANCE AwsEdcWorkspaceCompute = "PERFORMANCE"
	AWSEDCWORKSPACECOMPUTE_POWER AwsEdcWorkspaceCompute = "POWER"
	AWSEDCWORKSPACECOMPUTE_POWERPRO AwsEdcWorkspaceCompute = "POWERPRO"
	AWSEDCWORKSPACECOMPUTE_STANDARD AwsEdcWorkspaceCompute = "STANDARD"
	AWSEDCWORKSPACECOMPUTE_VALUE AwsEdcWorkspaceCompute = "VALUE"
)

// All allowed values of AwsEdcWorkspaceCompute enum
var AllowedAwsEdcWorkspaceComputeEnumValues = []AwsEdcWorkspaceCompute{
	"GRAPHICS",
	"GRAPHICSPRO",
	"GRAPHICS_G4DN",
	"GRAPHICSPRO_G4DN",
	"PERFORMANCE",
	"POWER",
	"POWERPRO",
	"STANDARD",
	"VALUE",
}

func (v *AwsEdcWorkspaceCompute) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsEdcWorkspaceCompute(value)
	for _, existing := range AllowedAwsEdcWorkspaceComputeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsEdcWorkspaceCompute", value)
}

// NewAwsEdcWorkspaceComputeFromValue returns a pointer to a valid AwsEdcWorkspaceCompute
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsEdcWorkspaceComputeFromValue(v string) (*AwsEdcWorkspaceCompute, error) {
	ev := AwsEdcWorkspaceCompute(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsEdcWorkspaceCompute: valid values are %v", v, AllowedAwsEdcWorkspaceComputeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsEdcWorkspaceCompute) IsValid() bool {
	for _, existing := range AllowedAwsEdcWorkspaceComputeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsEdcWorkspaceCompute value
func (v AwsEdcWorkspaceCompute) Ptr() *AwsEdcWorkspaceCompute {
	return &v
}

type NullableAwsEdcWorkspaceCompute struct {
	value *AwsEdcWorkspaceCompute
	isSet bool
}

func (v NullableAwsEdcWorkspaceCompute) Get() *AwsEdcWorkspaceCompute {
	return v.value
}

func (v *NullableAwsEdcWorkspaceCompute) Set(val *AwsEdcWorkspaceCompute) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcWorkspaceCompute) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcWorkspaceCompute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcWorkspaceCompute(val *AwsEdcWorkspaceCompute) *NullableAwsEdcWorkspaceCompute {
	return &NullableAwsEdcWorkspaceCompute{value: val, isSet: true}
}

func (v NullableAwsEdcWorkspaceCompute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcWorkspaceCompute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

