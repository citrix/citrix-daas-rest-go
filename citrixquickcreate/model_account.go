/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the Account type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Account{}

// Account Account
type Account struct {
	AccountType AccountType `json:"accountType"`
	// ID of the account
	AccountId NullableString `json:"accountId,omitempty"`
	// Name of the account
	Name NullableString `json:"name,omitempty"`
	AccountState *AccountState `json:"accountState,omitempty"`
	AssociatedDeployments []AssociatedDeployment `json:"associatedDeployments,omitempty"`
	AssociatedResourceConnections []AssociatedResourceConnection `json:"associatedResourceConnections,omitempty"`
	AssociatedImages []AssociatedImage `json:"associatedImages,omitempty"`
	// Indicates whether the account is Citrix managed
	CitrixManaged *bool `json:"citrixManaged,omitempty"`
	// The error message for account
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// Warnings and errors associated with the account
	Warnings []AccountWarning `json:"warnings,omitempty"`
}

// NewAccount instantiates a new Account object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccount(accountType AccountType) *Account {
	this := Account{}
	this.AccountType = accountType
	return &this
}

// NewAccountWithDefaults instantiates a new Account object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountWithDefaults() *Account {
	this := Account{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *Account) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *Account) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *Account) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *Account) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *Account) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *Account) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *Account) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *Account) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *Account) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *Account) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *Account) UnsetName() {
	o.Name.Unset()
}

// GetAccountState returns the AccountState field value if set, zero value otherwise.
func (o *Account) GetAccountState() AccountState {
	if o == nil || IsNil(o.AccountState) {
		var ret AccountState
		return ret
	}
	return *o.AccountState
}

// GetAccountStateOk returns a tuple with the AccountState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetAccountStateOk() (*AccountState, bool) {
	if o == nil || IsNil(o.AccountState) {
		return nil, false
	}
	return o.AccountState, true
}

// HasAccountState returns a boolean if a field has been set.
func (o *Account) HasAccountState() bool {
	if o != nil && !IsNil(o.AccountState) {
		return true
	}

	return false
}

// SetAccountState gets a reference to the given AccountState and assigns it to the AccountState field.
func (o *Account) SetAccountState(v AccountState) {
	o.AccountState = &v
}

// GetAssociatedDeployments returns the AssociatedDeployments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetAssociatedDeployments() []AssociatedDeployment {
	if o == nil {
		var ret []AssociatedDeployment
		return ret
	}
	return o.AssociatedDeployments
}

// GetAssociatedDeploymentsOk returns a tuple with the AssociatedDeployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetAssociatedDeploymentsOk() ([]AssociatedDeployment, bool) {
	if o == nil || IsNil(o.AssociatedDeployments) {
		return nil, false
	}
	return o.AssociatedDeployments, true
}

// HasAssociatedDeployments returns a boolean if a field has been set.
func (o *Account) HasAssociatedDeployments() bool {
	if o != nil && IsNil(o.AssociatedDeployments) {
		return true
	}

	return false
}

// SetAssociatedDeployments gets a reference to the given []AssociatedDeployment and assigns it to the AssociatedDeployments field.
func (o *Account) SetAssociatedDeployments(v []AssociatedDeployment) {
	o.AssociatedDeployments = v
}

// GetAssociatedResourceConnections returns the AssociatedResourceConnections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetAssociatedResourceConnections() []AssociatedResourceConnection {
	if o == nil {
		var ret []AssociatedResourceConnection
		return ret
	}
	return o.AssociatedResourceConnections
}

// GetAssociatedResourceConnectionsOk returns a tuple with the AssociatedResourceConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetAssociatedResourceConnectionsOk() ([]AssociatedResourceConnection, bool) {
	if o == nil || IsNil(o.AssociatedResourceConnections) {
		return nil, false
	}
	return o.AssociatedResourceConnections, true
}

// HasAssociatedResourceConnections returns a boolean if a field has been set.
func (o *Account) HasAssociatedResourceConnections() bool {
	if o != nil && IsNil(o.AssociatedResourceConnections) {
		return true
	}

	return false
}

// SetAssociatedResourceConnections gets a reference to the given []AssociatedResourceConnection and assigns it to the AssociatedResourceConnections field.
func (o *Account) SetAssociatedResourceConnections(v []AssociatedResourceConnection) {
	o.AssociatedResourceConnections = v
}

// GetAssociatedImages returns the AssociatedImages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetAssociatedImages() []AssociatedImage {
	if o == nil {
		var ret []AssociatedImage
		return ret
	}
	return o.AssociatedImages
}

// GetAssociatedImagesOk returns a tuple with the AssociatedImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetAssociatedImagesOk() ([]AssociatedImage, bool) {
	if o == nil || IsNil(o.AssociatedImages) {
		return nil, false
	}
	return o.AssociatedImages, true
}

// HasAssociatedImages returns a boolean if a field has been set.
func (o *Account) HasAssociatedImages() bool {
	if o != nil && IsNil(o.AssociatedImages) {
		return true
	}

	return false
}

// SetAssociatedImages gets a reference to the given []AssociatedImage and assigns it to the AssociatedImages field.
func (o *Account) SetAssociatedImages(v []AssociatedImage) {
	o.AssociatedImages = v
}

// GetCitrixManaged returns the CitrixManaged field value if set, zero value otherwise.
func (o *Account) GetCitrixManaged() bool {
	if o == nil || IsNil(o.CitrixManaged) {
		var ret bool
		return ret
	}
	return *o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Account) GetCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixManaged) {
		return nil, false
	}
	return o.CitrixManaged, true
}

// HasCitrixManaged returns a boolean if a field has been set.
func (o *Account) HasCitrixManaged() bool {
	if o != nil && !IsNil(o.CitrixManaged) {
		return true
	}

	return false
}

// SetCitrixManaged gets a reference to the given bool and assigns it to the CitrixManaged field.
func (o *Account) SetCitrixManaged(v bool) {
	o.CitrixManaged = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Account) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *Account) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *Account) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *Account) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Account) GetWarnings() []AccountWarning {
	if o == nil {
		var ret []AccountWarning
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Account) GetWarningsOk() ([]AccountWarning, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *Account) HasWarnings() bool {
	if o != nil && IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []AccountWarning and assigns it to the Warnings field.
func (o *Account) SetWarnings(v []AccountWarning) {
	o.Warnings = v
}

func (o Account) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Account) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountType"] = o.AccountType
	if o.AccountId.IsSet() {
		toSerialize["accountId"] = o.AccountId.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.AccountState) {
		toSerialize["accountState"] = o.AccountState
	}
	if o.AssociatedDeployments != nil {
		toSerialize["associatedDeployments"] = o.AssociatedDeployments
	}
	if o.AssociatedResourceConnections != nil {
		toSerialize["associatedResourceConnections"] = o.AssociatedResourceConnections
	}
	if o.AssociatedImages != nil {
		toSerialize["associatedImages"] = o.AssociatedImages
	}
	if !IsNil(o.CitrixManaged) {
		toSerialize["citrixManaged"] = o.CitrixManaged
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableAccount struct {
	value *Account
	isSet bool
}

func (v NullableAccount) Get() *Account {
	return v.value
}

func (v *NullableAccount) Set(val *Account) {
	v.value = val
	v.isSet = true
}

func (v NullableAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccount(val *Account) *NullableAccount {
	return &NullableAccount{value: val, isSet: true}
}

func (v NullableAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


