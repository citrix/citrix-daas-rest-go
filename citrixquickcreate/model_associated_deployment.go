/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AssociatedDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociatedDeployment{}

// AssociatedDeployment struct for AssociatedDeployment
type AssociatedDeployment struct {
	// Deployment Id
	DeploymentId NullableString `json:"deploymentId,omitempty"`
	// Deployment Name
	DeploymentName NullableString `json:"deploymentName,omitempty"`
}

// NewAssociatedDeployment instantiates a new AssociatedDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociatedDeployment() *AssociatedDeployment {
	this := AssociatedDeployment{}
	return &this
}

// NewAssociatedDeploymentWithDefaults instantiates a new AssociatedDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociatedDeploymentWithDefaults() *AssociatedDeployment {
	this := AssociatedDeployment{}
	return &this
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssociatedDeployment) GetDeploymentId() string {
	if o == nil || IsNil(o.DeploymentId.Get()) {
		var ret string
		return ret
	}
	return *o.DeploymentId.Get()
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssociatedDeployment) GetDeploymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentId.Get(), o.DeploymentId.IsSet()
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *AssociatedDeployment) HasDeploymentId() bool {
	if o != nil && o.DeploymentId.IsSet() {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given NullableString and assigns it to the DeploymentId field.
func (o *AssociatedDeployment) SetDeploymentId(v string) {
	o.DeploymentId.Set(&v)
}

// SetDeploymentIdNil sets the value for DeploymentId to be an explicit nil
func (o *AssociatedDeployment) SetDeploymentIdNil() {
	o.DeploymentId.Set(nil)
}

// UnsetDeploymentId ensures that no value is present for DeploymentId, not even an explicit nil
func (o *AssociatedDeployment) UnsetDeploymentId() {
	o.DeploymentId.Unset()
}

// GetDeploymentName returns the DeploymentName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssociatedDeployment) GetDeploymentName() string {
	if o == nil || IsNil(o.DeploymentName.Get()) {
		var ret string
		return ret
	}
	return *o.DeploymentName.Get()
}

// GetDeploymentNameOk returns a tuple with the DeploymentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssociatedDeployment) GetDeploymentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentName.Get(), o.DeploymentName.IsSet()
}

// HasDeploymentName returns a boolean if a field has been set.
func (o *AssociatedDeployment) HasDeploymentName() bool {
	if o != nil && o.DeploymentName.IsSet() {
		return true
	}

	return false
}

// SetDeploymentName gets a reference to the given NullableString and assigns it to the DeploymentName field.
func (o *AssociatedDeployment) SetDeploymentName(v string) {
	o.DeploymentName.Set(&v)
}

// SetDeploymentNameNil sets the value for DeploymentName to be an explicit nil
func (o *AssociatedDeployment) SetDeploymentNameNil() {
	o.DeploymentName.Set(nil)
}

// UnsetDeploymentName ensures that no value is present for DeploymentName, not even an explicit nil
func (o *AssociatedDeployment) UnsetDeploymentName() {
	o.DeploymentName.Unset()
}

func (o AssociatedDeployment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociatedDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentId.IsSet() {
		toSerialize["deploymentId"] = o.DeploymentId.Get()
	}
	if o.DeploymentName.IsSet() {
		toSerialize["deploymentName"] = o.DeploymentName.Get()
	}
	return toSerialize, nil
}

type NullableAssociatedDeployment struct {
	value *AssociatedDeployment
	isSet bool
}

func (v NullableAssociatedDeployment) Get() *AssociatedDeployment {
	return v.value
}

func (v *NullableAssociatedDeployment) Set(val *AssociatedDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociatedDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociatedDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociatedDeployment(val *AssociatedDeployment) *NullableAssociatedDeployment {
	return &NullableAssociatedDeployment{value: val, isSet: true}
}

func (v NullableAssociatedDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociatedDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
