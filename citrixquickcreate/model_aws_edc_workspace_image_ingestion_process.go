/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsEdcWorkspaceImageIngestionProcess the model 'AwsEdcWorkspaceImageIngestionProcess'
type AwsEdcWorkspaceImageIngestionProcess string

// List of AwsEdcWorkspaceImageIngestionProcess
const (
	AWSEDCWORKSPACEIMAGEINGESTIONPROCESS_REGULAR_BYOP AwsEdcWorkspaceImageIngestionProcess = "BYOL_REGULAR_BYOP"
	AWSEDCWORKSPACEIMAGEINGESTIONPROCESS_GRAPHICS_G4_DN_BYOP AwsEdcWorkspaceImageIngestionProcess = "BYOL_GRAPHICS_G4DN_BYOP"
)

// All allowed values of AwsEdcWorkspaceImageIngestionProcess enum
var AllowedAwsEdcWorkspaceImageIngestionProcessEnumValues = []AwsEdcWorkspaceImageIngestionProcess{
	"BYOL_REGULAR_BYOP",
	"BYOL_GRAPHICS_G4DN_BYOP",
}

func (v *AwsEdcWorkspaceImageIngestionProcess) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsEdcWorkspaceImageIngestionProcess(value)
	for _, existing := range AllowedAwsEdcWorkspaceImageIngestionProcessEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsEdcWorkspaceImageIngestionProcess", value)
}

// NewAwsEdcWorkspaceImageIngestionProcessFromValue returns a pointer to a valid AwsEdcWorkspaceImageIngestionProcess
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsEdcWorkspaceImageIngestionProcessFromValue(v string) (*AwsEdcWorkspaceImageIngestionProcess, error) {
	ev := AwsEdcWorkspaceImageIngestionProcess(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsEdcWorkspaceImageIngestionProcess: valid values are %v", v, AllowedAwsEdcWorkspaceImageIngestionProcessEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsEdcWorkspaceImageIngestionProcess) IsValid() bool {
	for _, existing := range AllowedAwsEdcWorkspaceImageIngestionProcessEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsEdcWorkspaceImageIngestionProcess value
func (v AwsEdcWorkspaceImageIngestionProcess) Ptr() *AwsEdcWorkspaceImageIngestionProcess {
	return &v
}

type NullableAwsEdcWorkspaceImageIngestionProcess struct {
	value *AwsEdcWorkspaceImageIngestionProcess
	isSet bool
}

func (v NullableAwsEdcWorkspaceImageIngestionProcess) Get() *AwsEdcWorkspaceImageIngestionProcess {
	return v.value
}

func (v *NullableAwsEdcWorkspaceImageIngestionProcess) Set(val *AwsEdcWorkspaceImageIngestionProcess) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcWorkspaceImageIngestionProcess) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcWorkspaceImageIngestionProcess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcWorkspaceImageIngestionProcess(val *AwsEdcWorkspaceImageIngestionProcess) *NullableAwsEdcWorkspaceImageIngestionProcess {
	return &NullableAwsEdcWorkspaceImageIngestionProcess{value: val, isSet: true}
}

func (v NullableAwsEdcWorkspaceImageIngestionProcess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcWorkspaceImageIngestionProcess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

