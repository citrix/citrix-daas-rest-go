/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// ResourceConnectionTaskOperationType Resource connection tasks
type ResourceConnectionTaskOperationType string

// List of ResourceConnectionTaskOperationType
const (
	RESOURCECONNECTIONTASKOPERATIONTYPE_ADD_CONNECTION ResourceConnectionTaskOperationType = "ADD_CONNECTION"
	RESOURCECONNECTIONTASKOPERATIONTYPE_ADD_CONNECTORS ResourceConnectionTaskOperationType = "ADD_CONNECTORS"
	RESOURCECONNECTIONTASKOPERATIONTYPE_ADD_CONNECTOR_APPLIANCES ResourceConnectionTaskOperationType = "ADD_CONNECTOR_APPLIANCES"
	RESOURCECONNECTIONTASKOPERATIONTYPE_REMOVE_CONNECTION ResourceConnectionTaskOperationType = "REMOVE_CONNECTION"
)

// All allowed values of ResourceConnectionTaskOperationType enum
var AllowedResourceConnectionTaskOperationTypeEnumValues = []ResourceConnectionTaskOperationType{
	"ADD_CONNECTION",
	"ADD_CONNECTORS",
	"ADD_CONNECTOR_APPLIANCES",
	"REMOVE_CONNECTION",
}

func (v *ResourceConnectionTaskOperationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ResourceConnectionTaskOperationType(value)
	for _, existing := range AllowedResourceConnectionTaskOperationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ResourceConnectionTaskOperationType", value)
}

// NewResourceConnectionTaskOperationTypeFromValue returns a pointer to a valid ResourceConnectionTaskOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewResourceConnectionTaskOperationTypeFromValue(v string) (*ResourceConnectionTaskOperationType, error) {
	ev := ResourceConnectionTaskOperationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ResourceConnectionTaskOperationType: valid values are %v", v, AllowedResourceConnectionTaskOperationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ResourceConnectionTaskOperationType) IsValid() bool {
	for _, existing := range AllowedResourceConnectionTaskOperationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ResourceConnectionTaskOperationType value
func (v ResourceConnectionTaskOperationType) Ptr() *ResourceConnectionTaskOperationType {
	return &v
}

type NullableResourceConnectionTaskOperationType struct {
	value *ResourceConnectionTaskOperationType
	isSet bool
}

func (v NullableResourceConnectionTaskOperationType) Get() *ResourceConnectionTaskOperationType {
	return v.value
}

func (v *NullableResourceConnectionTaskOperationType) Set(val *ResourceConnectionTaskOperationType) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConnectionTaskOperationType) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConnectionTaskOperationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConnectionTaskOperationType(val *ResourceConnectionTaskOperationType) *NullableResourceConnectionTaskOperationType {
	return &NullableResourceConnectionTaskOperationType{value: val, isSet: true}
}

func (v NullableResourceConnectionTaskOperationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConnectionTaskOperationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

