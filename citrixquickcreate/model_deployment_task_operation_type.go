/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// DeploymentTaskOperationType Deployment tasks
type DeploymentTaskOperationType string

// List of DeploymentTaskOperationType
const (
	DEPLOYMENTTASKOPERATIONTYPE_CREATE_DEPLOYMENT            DeploymentTaskOperationType = "CREATE_DEPLOYMENT"
	DEPLOYMENTTASKOPERATIONTYPE_ADD_MACHINES                 DeploymentTaskOperationType = "ADD_MACHINES"
	DEPLOYMENTTASKOPERATIONTYPE_REMOVE_MACHINES              DeploymentTaskOperationType = "REMOVE_MACHINES"
	DEPLOYMENTTASKOPERATIONTYPE_UPDATE_MACHINES              DeploymentTaskOperationType = "UPDATE_MACHINES"
	DEPLOYMENTTASKOPERATIONTYPE_UPDATE_IMAGE                 DeploymentTaskOperationType = "UPDATE_IMAGE"
	DEPLOYMENTTASKOPERATIONTYPE_UPDATE_DEPLOYMENT_PROPERTIES DeploymentTaskOperationType = "UPDATE_DEPLOYMENT_PROPERTIES"
	DEPLOYMENTTASKOPERATIONTYPE_DELETE_DEPLOYMENT            DeploymentTaskOperationType = "DELETE_DEPLOYMENT"
	DEPLOYMENTTASKOPERATIONTYPE_UPDATE_DEPLOYMENT_IMAGE      DeploymentTaskOperationType = "UPDATE_DEPLOYMENT_IMAGE"
	DEPLOYMENTTASKOPERATIONTYPE_SAVE_AS_IMAGE                DeploymentTaskOperationType = "SAVE_AS_IMAGE"
	DEPLOYMENTTASKOPERATIONTYPE_SYNC_MACHINES                DeploymentTaskOperationType = "SYNC_MACHINES"
)

// All allowed values of DeploymentTaskOperationType enum
var AllowedDeploymentTaskOperationTypeEnumValues = []DeploymentTaskOperationType{
	"CREATE_DEPLOYMENT",
	"ADD_MACHINES",
	"REMOVE_MACHINES",
	"UPDATE_MACHINES",
	"UPDATE_IMAGE",
	"UPDATE_DEPLOYMENT_PROPERTIES",
	"DELETE_DEPLOYMENT",
	"UPDATE_DEPLOYMENT_IMAGE",
	"SAVE_AS_IMAGE",
	"SYNC_MACHINES",
}

func (v *DeploymentTaskOperationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeploymentTaskOperationType(value)
	for _, existing := range AllowedDeploymentTaskOperationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeploymentTaskOperationType", value)
}

// NewDeploymentTaskOperationTypeFromValue returns a pointer to a valid DeploymentTaskOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeploymentTaskOperationTypeFromValue(v string) (*DeploymentTaskOperationType, error) {
	ev := DeploymentTaskOperationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeploymentTaskOperationType: valid values are %v", v, AllowedDeploymentTaskOperationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeploymentTaskOperationType) IsValid() bool {
	for _, existing := range AllowedDeploymentTaskOperationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeploymentTaskOperationType value
func (v DeploymentTaskOperationType) Ptr() *DeploymentTaskOperationType {
	return &v
}

type NullableDeploymentTaskOperationType struct {
	value *DeploymentTaskOperationType
	isSet bool
}

func (v NullableDeploymentTaskOperationType) Get() *DeploymentTaskOperationType {
	return v.value
}

func (v *NullableDeploymentTaskOperationType) Set(val *DeploymentTaskOperationType) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentTaskOperationType) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentTaskOperationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentTaskOperationType(val *DeploymentTaskOperationType) *NullableDeploymentTaskOperationType {
	return &NullableDeploymentTaskOperationType{value: val, isSet: true}
}

func (v NullableDeploymentTaskOperationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentTaskOperationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
