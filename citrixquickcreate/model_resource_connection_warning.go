/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the ResourceConnectionWarning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceConnectionWarning{}

// ResourceConnectionWarning struct for ResourceConnectionWarning
type ResourceConnectionWarning struct {
	// Type of resource connection warning
	WarningType *ResourceConnectionWarningType `json:"warningType,omitempty"`
	// Id of the warning
	Id NullableString `json:"id,omitempty"`
	// The warning message
	Warning NullableString `json:"warning,omitempty"`
	// ID of the task the warning was created by
	TaskId NullableString `json:"taskId,omitempty"`
	// Indicates if the warning should be treated as an error
	IsError *bool `json:"isError,omitempty"`
	// Indicates if the warning message can be cleared out by the user
	IsDismissible *bool `json:"isDismissible,omitempty"`
	// ID of the transaction the warning was created by
	TransactionId NullableString `json:"transactionId,omitempty"`
}

// NewResourceConnectionWarning instantiates a new ResourceConnectionWarning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConnectionWarning() *ResourceConnectionWarning {
	this := ResourceConnectionWarning{}
	return &this
}

// NewResourceConnectionWarningWithDefaults instantiates a new ResourceConnectionWarning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConnectionWarningWithDefaults() *ResourceConnectionWarning {
	this := ResourceConnectionWarning{}
	return &this
}

// GetWarningType returns the WarningType field value if set, zero value otherwise.
func (o *ResourceConnectionWarning) GetWarningType() ResourceConnectionWarningType {
	if o == nil || IsNil(o.WarningType) {
		var ret ResourceConnectionWarningType
		return ret
	}
	return *o.WarningType
}

// GetWarningTypeOk returns a tuple with the WarningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionWarning) GetWarningTypeOk() (*ResourceConnectionWarningType, bool) {
	if o == nil || IsNil(o.WarningType) {
		return nil, false
	}
	return o.WarningType, true
}

// HasWarningType returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasWarningType() bool {
	if o != nil && !IsNil(o.WarningType) {
		return true
	}

	return false
}

// SetWarningType gets a reference to the given ResourceConnectionWarningType and assigns it to the WarningType field.
func (o *ResourceConnectionWarning) SetWarningType(v ResourceConnectionWarningType) {
	o.WarningType = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionWarning) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionWarning) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ResourceConnectionWarning) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *ResourceConnectionWarning) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ResourceConnectionWarning) UnsetId() {
	o.Id.Unset()
}

// GetWarning returns the Warning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionWarning) GetWarning() string {
	if o == nil || IsNil(o.Warning.Get()) {
		var ret string
		return ret
	}
	return *o.Warning.Get()
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionWarning) GetWarningOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Warning.Get(), o.Warning.IsSet()
}

// HasWarning returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasWarning() bool {
	if o != nil && o.Warning.IsSet() {
		return true
	}

	return false
}

// SetWarning gets a reference to the given NullableString and assigns it to the Warning field.
func (o *ResourceConnectionWarning) SetWarning(v string) {
	o.Warning.Set(&v)
}

// SetWarningNil sets the value for Warning to be an explicit nil
func (o *ResourceConnectionWarning) SetWarningNil() {
	o.Warning.Set(nil)
}

// UnsetWarning ensures that no value is present for Warning, not even an explicit nil
func (o *ResourceConnectionWarning) UnsetWarning() {
	o.Warning.Unset()
}

// GetTaskId returns the TaskId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionWarning) GetTaskId() string {
	if o == nil || IsNil(o.TaskId.Get()) {
		var ret string
		return ret
	}
	return *o.TaskId.Get()
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionWarning) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskId.Get(), o.TaskId.IsSet()
}

// HasTaskId returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasTaskId() bool {
	if o != nil && o.TaskId.IsSet() {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given NullableString and assigns it to the TaskId field.
func (o *ResourceConnectionWarning) SetTaskId(v string) {
	o.TaskId.Set(&v)
}

// SetTaskIdNil sets the value for TaskId to be an explicit nil
func (o *ResourceConnectionWarning) SetTaskIdNil() {
	o.TaskId.Set(nil)
}

// UnsetTaskId ensures that no value is present for TaskId, not even an explicit nil
func (o *ResourceConnectionWarning) UnsetTaskId() {
	o.TaskId.Unset()
}

// GetIsError returns the IsError field value if set, zero value otherwise.
func (o *ResourceConnectionWarning) GetIsError() bool {
	if o == nil || IsNil(o.IsError) {
		var ret bool
		return ret
	}
	return *o.IsError
}

// GetIsErrorOk returns a tuple with the IsError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionWarning) GetIsErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.IsError) {
		return nil, false
	}
	return o.IsError, true
}

// HasIsError returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasIsError() bool {
	if o != nil && !IsNil(o.IsError) {
		return true
	}

	return false
}

// SetIsError gets a reference to the given bool and assigns it to the IsError field.
func (o *ResourceConnectionWarning) SetIsError(v bool) {
	o.IsError = &v
}

// GetIsDismissible returns the IsDismissible field value if set, zero value otherwise.
func (o *ResourceConnectionWarning) GetIsDismissible() bool {
	if o == nil || IsNil(o.IsDismissible) {
		var ret bool
		return ret
	}
	return *o.IsDismissible
}

// GetIsDismissibleOk returns a tuple with the IsDismissible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConnectionWarning) GetIsDismissibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDismissible) {
		return nil, false
	}
	return o.IsDismissible, true
}

// HasIsDismissible returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasIsDismissible() bool {
	if o != nil && !IsNil(o.IsDismissible) {
		return true
	}

	return false
}

// SetIsDismissible gets a reference to the given bool and assigns it to the IsDismissible field.
func (o *ResourceConnectionWarning) SetIsDismissible(v bool) {
	o.IsDismissible = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionWarning) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionId.Get()
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionWarning) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionId.Get(), o.TransactionId.IsSet()
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ResourceConnectionWarning) HasTransactionId() bool {
	if o != nil && o.TransactionId.IsSet() {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given NullableString and assigns it to the TransactionId field.
func (o *ResourceConnectionWarning) SetTransactionId(v string) {
	o.TransactionId.Set(&v)
}

// SetTransactionIdNil sets the value for TransactionId to be an explicit nil
func (o *ResourceConnectionWarning) SetTransactionIdNil() {
	o.TransactionId.Set(nil)
}

// UnsetTransactionId ensures that no value is present for TransactionId, not even an explicit nil
func (o *ResourceConnectionWarning) UnsetTransactionId() {
	o.TransactionId.Unset()
}

func (o ResourceConnectionWarning) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceConnectionWarning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WarningType) {
		toSerialize["warningType"] = o.WarningType
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Warning.IsSet() {
		toSerialize["warning"] = o.Warning.Get()
	}
	if o.TaskId.IsSet() {
		toSerialize["taskId"] = o.TaskId.Get()
	}
	if !IsNil(o.IsError) {
		toSerialize["isError"] = o.IsError
	}
	if !IsNil(o.IsDismissible) {
		toSerialize["isDismissible"] = o.IsDismissible
	}
	if o.TransactionId.IsSet() {
		toSerialize["transactionId"] = o.TransactionId.Get()
	}
	return toSerialize, nil
}

type NullableResourceConnectionWarning struct {
	value *ResourceConnectionWarning
	isSet bool
}

func (v NullableResourceConnectionWarning) Get() *ResourceConnectionWarning {
	return v.value
}

func (v *NullableResourceConnectionWarning) Set(val *ResourceConnectionWarning) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConnectionWarning) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConnectionWarning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConnectionWarning(val *ResourceConnectionWarning) *NullableResourceConnectionWarning {
	return &NullableResourceConnectionWarning{value: val, isSet: true}
}

func (v NullableResourceConnectionWarning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConnectionWarning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
