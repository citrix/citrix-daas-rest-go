/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the ActiveConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActiveConnection{}

// ActiveConnection struct for ActiveConnection
type ActiveConnection struct {
	// AAD TenantId to connect/disconnect
	TenantId NullableString `json:"tenantId,omitempty"`
}

// NewActiveConnection instantiates a new ActiveConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActiveConnection() *ActiveConnection {
	this := ActiveConnection{}
	return &this
}

// NewActiveConnectionWithDefaults instantiates a new ActiveConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActiveConnectionWithDefaults() *ActiveConnection {
	this := ActiveConnection{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActiveConnection) GetTenantId() string {
	if o == nil || IsNil(o.TenantId.Get()) {
		var ret string
		return ret
	}
	return *o.TenantId.Get()
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActiveConnection) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TenantId.Get(), o.TenantId.IsSet()
}

// HasTenantId returns a boolean if a field has been set.
func (o *ActiveConnection) HasTenantId() bool {
	if o != nil && o.TenantId.IsSet() {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given NullableString and assigns it to the TenantId field.
func (o *ActiveConnection) SetTenantId(v string) {
	o.TenantId.Set(&v)
}
// SetTenantIdNil sets the value for TenantId to be an explicit nil
func (o *ActiveConnection) SetTenantIdNil() {
	o.TenantId.Set(nil)
}

// UnsetTenantId ensures that no value is present for TenantId, not even an explicit nil
func (o *ActiveConnection) UnsetTenantId() {
	o.TenantId.Unset()
}

func (o ActiveConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActiveConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId.IsSet() {
		toSerialize["tenantId"] = o.TenantId.Get()
	}
	return toSerialize, nil
}

type NullableActiveConnection struct {
	value *ActiveConnection
	isSet bool
}

func (v NullableActiveConnection) Get() *ActiveConnection {
	return v.value
}

func (v *NullableActiveConnection) Set(val *ActiveConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableActiveConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableActiveConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActiveConnection(val *ActiveConnection) *NullableActiveConnection {
	return &NullableActiveConnection{value: val, isSet: true}
}

func (v NullableActiveConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActiveConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


