/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the InitiateDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiateDeployment{}

// InitiateDeployment Initiates deployment
type InitiateDeployment struct {
	// The type of provider associated with the account
	AccountType AccountType `json:"accountType"`
	// Hosting Connection Id
	ConnectionId   string `json:"connectionId"`
	DeploymentName string `json:"deploymentName"`
}

type _InitiateDeployment InitiateDeployment

// NewInitiateDeployment instantiates a new InitiateDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateDeployment(accountType AccountType, connectionId string, deploymentName string) *InitiateDeployment {
	this := InitiateDeployment{}
	this.AccountType = accountType
	this.ConnectionId = connectionId
	this.DeploymentName = deploymentName
	return &this
}

// NewInitiateDeploymentWithDefaults instantiates a new InitiateDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateDeploymentWithDefaults() *InitiateDeployment {
	this := InitiateDeployment{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *InitiateDeployment) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *InitiateDeployment) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *InitiateDeployment) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetConnectionId returns the ConnectionId field value
func (o *InitiateDeployment) GetConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
func (o *InitiateDeployment) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionId, true
}

// SetConnectionId sets field value
func (o *InitiateDeployment) SetConnectionId(v string) {
	o.ConnectionId = v
}

// GetDeploymentName returns the DeploymentName field value
func (o *InitiateDeployment) GetDeploymentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentName
}

// GetDeploymentNameOk returns a tuple with the DeploymentName field value
// and a boolean to check if the value has been set.
func (o *InitiateDeployment) GetDeploymentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentName, true
}

// SetDeploymentName sets field value
func (o *InitiateDeployment) SetDeploymentName(v string) {
	o.DeploymentName = v
}

func (o InitiateDeployment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiateDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountType"] = o.AccountType
	toSerialize["connectionId"] = o.ConnectionId
	toSerialize["deploymentName"] = o.DeploymentName
	return toSerialize, nil
}

type NullableInitiateDeployment struct {
	value *InitiateDeployment
	isSet bool
}

func (v NullableInitiateDeployment) Get() *InitiateDeployment {
	return v.value
}

func (v *NullableInitiateDeployment) Set(val *InitiateDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateDeployment(val *InitiateDeployment) *NullableInitiateDeployment {
	return &NullableInitiateDeployment{value: val, isSet: true}
}

func (v NullableInitiateDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
