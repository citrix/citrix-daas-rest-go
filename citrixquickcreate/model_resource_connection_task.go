/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the ResourceConnectionTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceConnectionTask{}

// ResourceConnectionTask Deployment Task Configuration
type ResourceConnectionTask struct {
	TaskBase
	Operation NullableResourceConnectionTaskOperationType `json:"operation,omitempty"`
	// The ResourceConnectionId this task is working on
	ResourceConnectionId NullableString `json:"resourceConnectionId,omitempty"`
}

// NewResourceConnectionTask instantiates a new ResourceConnectionTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConnectionTask(taskType TaskType) *ResourceConnectionTask {
	this := ResourceConnectionTask{}
	this.TaskType = taskType
	return &this
}

// NewResourceConnectionTaskWithDefaults instantiates a new ResourceConnectionTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConnectionTaskWithDefaults() *ResourceConnectionTask {
	this := ResourceConnectionTask{}
	return &this
}

// GetOperation returns the Operation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionTask) GetOperation() ResourceConnectionTaskOperationType {
	if o == nil || IsNil(o.Operation.Get()) {
		var ret ResourceConnectionTaskOperationType
		return ret
	}
	return *o.Operation.Get()
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionTask) GetOperationOk() (*ResourceConnectionTaskOperationType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operation.Get(), o.Operation.IsSet()
}

// HasOperation returns a boolean if a field has been set.
func (o *ResourceConnectionTask) HasOperation() bool {
	if o != nil && o.Operation.IsSet() {
		return true
	}

	return false
}

// SetOperation gets a reference to the given NullableResourceConnectionTaskOperationType and assigns it to the Operation field.
func (o *ResourceConnectionTask) SetOperation(v ResourceConnectionTaskOperationType) {
	o.Operation.Set(&v)
}
// SetOperationNil sets the value for Operation to be an explicit nil
func (o *ResourceConnectionTask) SetOperationNil() {
	o.Operation.Set(nil)
}

// UnsetOperation ensures that no value is present for Operation, not even an explicit nil
func (o *ResourceConnectionTask) UnsetOperation() {
	o.Operation.Unset()
}

// GetResourceConnectionId returns the ResourceConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConnectionTask) GetResourceConnectionId() string {
	if o == nil || IsNil(o.ResourceConnectionId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceConnectionId.Get()
}

// GetResourceConnectionIdOk returns a tuple with the ResourceConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConnectionTask) GetResourceConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceConnectionId.Get(), o.ResourceConnectionId.IsSet()
}

// HasResourceConnectionId returns a boolean if a field has been set.
func (o *ResourceConnectionTask) HasResourceConnectionId() bool {
	if o != nil && o.ResourceConnectionId.IsSet() {
		return true
	}

	return false
}

// SetResourceConnectionId gets a reference to the given NullableString and assigns it to the ResourceConnectionId field.
func (o *ResourceConnectionTask) SetResourceConnectionId(v string) {
	o.ResourceConnectionId.Set(&v)
}
// SetResourceConnectionIdNil sets the value for ResourceConnectionId to be an explicit nil
func (o *ResourceConnectionTask) SetResourceConnectionIdNil() {
	o.ResourceConnectionId.Set(nil)
}

// UnsetResourceConnectionId ensures that no value is present for ResourceConnectionId, not even an explicit nil
func (o *ResourceConnectionTask) UnsetResourceConnectionId() {
	o.ResourceConnectionId.Unset()
}

func (o ResourceConnectionTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceConnectionTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTaskBase, errTaskBase := json.Marshal(o.TaskBase)
	if errTaskBase != nil {
		return map[string]interface{}{}, errTaskBase
	}
	errTaskBase = json.Unmarshal([]byte(serializedTaskBase), &toSerialize)
	if errTaskBase != nil {
		return map[string]interface{}{}, errTaskBase
	}
	if o.Operation.IsSet() {
		toSerialize["operation"] = o.Operation.Get()
	}
	if o.ResourceConnectionId.IsSet() {
		toSerialize["resourceConnectionId"] = o.ResourceConnectionId.Get()
	}
	return toSerialize, nil
}

type NullableResourceConnectionTask struct {
	value *ResourceConnectionTask
	isSet bool
}

func (v NullableResourceConnectionTask) Get() *ResourceConnectionTask {
	return v.value
}

func (v *NullableResourceConnectionTask) Set(val *ResourceConnectionTask) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConnectionTask) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConnectionTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConnectionTask(val *ResourceConnectionTask) *NullableResourceConnectionTask {
	return &NullableResourceConnectionTask{value: val, isSet: true}
}

func (v NullableResourceConnectionTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConnectionTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


