/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// UpdateAccountOperationType the model 'UpdateAccountOperationType'
type UpdateAccountOperationType string

// List of UpdateAccountOperationType
const (
	UPDATEACCOUNTOPERATIONTYPE_RENAME_ACCOUNT                     UpdateAccountOperationType = "RenameAccount"
	UPDATEACCOUNTOPERATIONTYPE_UPDATE_AWS_EDC_ACCOUNT_CREDENTIALS UpdateAccountOperationType = "UpdateAwsEdcAccountCredentials"
)

// All allowed values of UpdateAccountOperationType enum
var AllowedUpdateAccountOperationTypeEnumValues = []UpdateAccountOperationType{
	"RenameAccount",
	"UpdateAwsEdcAccountCredentials",
}

func (v *UpdateAccountOperationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UpdateAccountOperationType(value)
	for _, existing := range AllowedUpdateAccountOperationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UpdateAccountOperationType", value)
}

// NewUpdateAccountOperationTypeFromValue returns a pointer to a valid UpdateAccountOperationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUpdateAccountOperationTypeFromValue(v string) (*UpdateAccountOperationType, error) {
	ev := UpdateAccountOperationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for UpdateAccountOperationType: valid values are %v", v, AllowedUpdateAccountOperationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UpdateAccountOperationType) IsValid() bool {
	for _, existing := range AllowedUpdateAccountOperationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to UpdateAccountOperationType value
func (v UpdateAccountOperationType) Ptr() *UpdateAccountOperationType {
	return &v
}

type NullableUpdateAccountOperationType struct {
	value *UpdateAccountOperationType
	isSet bool
}

func (v NullableUpdateAccountOperationType) Get() *UpdateAccountOperationType {
	return v.value
}

func (v *NullableUpdateAccountOperationType) Set(val *UpdateAccountOperationType) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountOperationType) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountOperationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountOperationType(val *UpdateAccountOperationType) *NullableUpdateAccountOperationType {
	return &NullableUpdateAccountOperationType{value: val, isSet: true}
}

func (v NullableUpdateAccountOperationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountOperationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
