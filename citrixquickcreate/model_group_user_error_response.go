/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the GroupUserErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GroupUserErrorResponse{}

// GroupUserErrorResponse Group User Error Response
type GroupUserErrorResponse struct {
	// User errors
	UserErrors []ResponseDetailsLicenseAssignmentEx `json:"userErrors,omitempty"`
}

// NewGroupUserErrorResponse instantiates a new GroupUserErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUserErrorResponse() *GroupUserErrorResponse {
	this := GroupUserErrorResponse{}
	return &this
}

// NewGroupUserErrorResponseWithDefaults instantiates a new GroupUserErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUserErrorResponseWithDefaults() *GroupUserErrorResponse {
	this := GroupUserErrorResponse{}
	return &this
}

// GetUserErrors returns the UserErrors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupUserErrorResponse) GetUserErrors() []ResponseDetailsLicenseAssignmentEx {
	if o == nil {
		var ret []ResponseDetailsLicenseAssignmentEx
		return ret
	}
	return o.UserErrors
}

// GetUserErrorsOk returns a tuple with the UserErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupUserErrorResponse) GetUserErrorsOk() ([]ResponseDetailsLicenseAssignmentEx, bool) {
	if o == nil || IsNil(o.UserErrors) {
		return nil, false
	}
	return o.UserErrors, true
}

// HasUserErrors returns a boolean if a field has been set.
func (o *GroupUserErrorResponse) HasUserErrors() bool {
	if o != nil && !IsNil(o.UserErrors) {
		return true
	}

	return false
}

// SetUserErrors gets a reference to the given []ResponseDetailsLicenseAssignmentEx and assigns it to the UserErrors field.
func (o *GroupUserErrorResponse) SetUserErrors(v []ResponseDetailsLicenseAssignmentEx) {
	o.UserErrors = v
}

func (o GroupUserErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GroupUserErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.UserErrors != nil {
		toSerialize["userErrors"] = o.UserErrors
	}
	return toSerialize, nil
}

type NullableGroupUserErrorResponse struct {
	value *GroupUserErrorResponse
	isSet bool
}

func (v NullableGroupUserErrorResponse) Get() *GroupUserErrorResponse {
	return v.value
}

func (v *NullableGroupUserErrorResponse) Set(val *GroupUserErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUserErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUserErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUserErrorResponse(val *GroupUserErrorResponse) *NullableGroupUserErrorResponse {
	return &NullableGroupUserErrorResponse{value: val, isSet: true}
}

func (v NullableGroupUserErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUserErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
