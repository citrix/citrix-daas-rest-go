/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsEdcDeploymentMachine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEdcDeploymentMachine{}

// AwsEdcDeploymentMachine Configuration for individual workspace
type AwsEdcDeploymentMachine struct {
	DeploymentMachine
	// Workspace Id
	WorkspaceId NullableString `json:"workspaceId,omitempty"`
	// Username associated with workspace
	Username NullableString `json:"username,omitempty"`
	// Size of operating system volume
	RootVolumeSize NullableInt32 `json:"rootVolumeSize,omitempty"`
	// Size of user storage volume
	UserVolumeSize NullableInt32 `json:"userVolumeSize,omitempty"`
	// Is operating system volume encrypted
	RootVolumeEncrypted *bool `json:"rootVolumeEncrypted,omitempty"`
	// Is user storage volume encrypted
	UserVolumeEncrypted *bool `json:"userVolumeEncrypted,omitempty"`
	ComputeType NullableAwsEdcWorkspaceCompute `json:"computeType,omitempty"`
	RunningMode NullableAwsEdcWorkspaceRunningMode `json:"runningMode,omitempty"`
	WorkspaceStatus NullableAwsEdcWorkspaceState `json:"workspaceStatus,omitempty"`
	// Error Message
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
}

// NewAwsEdcDeploymentMachine instantiates a new AwsEdcDeploymentMachine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEdcDeploymentMachine(accountType AccountType) *AwsEdcDeploymentMachine {
	this := AwsEdcDeploymentMachine{}
	this.AccountType = accountType
	return &this
}

// NewAwsEdcDeploymentMachineWithDefaults instantiates a new AwsEdcDeploymentMachine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEdcDeploymentMachineWithDefaults() *AwsEdcDeploymentMachine {
	this := AwsEdcDeploymentMachine{}
	return &this
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetWorkspaceId() string {
	if o == nil || IsNil(o.WorkspaceId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkspaceId.Get()
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetWorkspaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkspaceId.Get(), o.WorkspaceId.IsSet()
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId.IsSet() {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given NullableString and assigns it to the WorkspaceId field.
func (o *AwsEdcDeploymentMachine) SetWorkspaceId(v string) {
	o.WorkspaceId.Set(&v)
}
// SetWorkspaceIdNil sets the value for WorkspaceId to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetWorkspaceIdNil() {
	o.WorkspaceId.Set(nil)
}

// UnsetWorkspaceId ensures that no value is present for WorkspaceId, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetWorkspaceId() {
	o.WorkspaceId.Unset()
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *AwsEdcDeploymentMachine) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetUsername() {
	o.Username.Unset()
}

// GetRootVolumeSize returns the RootVolumeSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetRootVolumeSize() int32 {
	if o == nil || IsNil(o.RootVolumeSize.Get()) {
		var ret int32
		return ret
	}
	return *o.RootVolumeSize.Get()
}

// GetRootVolumeSizeOk returns a tuple with the RootVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetRootVolumeSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RootVolumeSize.Get(), o.RootVolumeSize.IsSet()
}

// HasRootVolumeSize returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasRootVolumeSize() bool {
	if o != nil && o.RootVolumeSize.IsSet() {
		return true
	}

	return false
}

// SetRootVolumeSize gets a reference to the given NullableInt32 and assigns it to the RootVolumeSize field.
func (o *AwsEdcDeploymentMachine) SetRootVolumeSize(v int32) {
	o.RootVolumeSize.Set(&v)
}
// SetRootVolumeSizeNil sets the value for RootVolumeSize to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetRootVolumeSizeNil() {
	o.RootVolumeSize.Set(nil)
}

// UnsetRootVolumeSize ensures that no value is present for RootVolumeSize, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetRootVolumeSize() {
	o.RootVolumeSize.Unset()
}

// GetUserVolumeSize returns the UserVolumeSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetUserVolumeSize() int32 {
	if o == nil || IsNil(o.UserVolumeSize.Get()) {
		var ret int32
		return ret
	}
	return *o.UserVolumeSize.Get()
}

// GetUserVolumeSizeOk returns a tuple with the UserVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetUserVolumeSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserVolumeSize.Get(), o.UserVolumeSize.IsSet()
}

// HasUserVolumeSize returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasUserVolumeSize() bool {
	if o != nil && o.UserVolumeSize.IsSet() {
		return true
	}

	return false
}

// SetUserVolumeSize gets a reference to the given NullableInt32 and assigns it to the UserVolumeSize field.
func (o *AwsEdcDeploymentMachine) SetUserVolumeSize(v int32) {
	o.UserVolumeSize.Set(&v)
}
// SetUserVolumeSizeNil sets the value for UserVolumeSize to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetUserVolumeSizeNil() {
	o.UserVolumeSize.Set(nil)
}

// UnsetUserVolumeSize ensures that no value is present for UserVolumeSize, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetUserVolumeSize() {
	o.UserVolumeSize.Unset()
}

// GetRootVolumeEncrypted returns the RootVolumeEncrypted field value if set, zero value otherwise.
func (o *AwsEdcDeploymentMachine) GetRootVolumeEncrypted() bool {
	if o == nil || IsNil(o.RootVolumeEncrypted) {
		var ret bool
		return ret
	}
	return *o.RootVolumeEncrypted
}

// GetRootVolumeEncryptedOk returns a tuple with the RootVolumeEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsEdcDeploymentMachine) GetRootVolumeEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.RootVolumeEncrypted) {
		return nil, false
	}
	return o.RootVolumeEncrypted, true
}

// HasRootVolumeEncrypted returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasRootVolumeEncrypted() bool {
	if o != nil && !IsNil(o.RootVolumeEncrypted) {
		return true
	}

	return false
}

// SetRootVolumeEncrypted gets a reference to the given bool and assigns it to the RootVolumeEncrypted field.
func (o *AwsEdcDeploymentMachine) SetRootVolumeEncrypted(v bool) {
	o.RootVolumeEncrypted = &v
}

// GetUserVolumeEncrypted returns the UserVolumeEncrypted field value if set, zero value otherwise.
func (o *AwsEdcDeploymentMachine) GetUserVolumeEncrypted() bool {
	if o == nil || IsNil(o.UserVolumeEncrypted) {
		var ret bool
		return ret
	}
	return *o.UserVolumeEncrypted
}

// GetUserVolumeEncryptedOk returns a tuple with the UserVolumeEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsEdcDeploymentMachine) GetUserVolumeEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.UserVolumeEncrypted) {
		return nil, false
	}
	return o.UserVolumeEncrypted, true
}

// HasUserVolumeEncrypted returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasUserVolumeEncrypted() bool {
	if o != nil && !IsNil(o.UserVolumeEncrypted) {
		return true
	}

	return false
}

// SetUserVolumeEncrypted gets a reference to the given bool and assigns it to the UserVolumeEncrypted field.
func (o *AwsEdcDeploymentMachine) SetUserVolumeEncrypted(v bool) {
	o.UserVolumeEncrypted = &v
}

// GetComputeType returns the ComputeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetComputeType() AwsEdcWorkspaceCompute {
	if o == nil || IsNil(o.ComputeType.Get()) {
		var ret AwsEdcWorkspaceCompute
		return ret
	}
	return *o.ComputeType.Get()
}

// GetComputeTypeOk returns a tuple with the ComputeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetComputeTypeOk() (*AwsEdcWorkspaceCompute, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputeType.Get(), o.ComputeType.IsSet()
}

// HasComputeType returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasComputeType() bool {
	if o != nil && o.ComputeType.IsSet() {
		return true
	}

	return false
}

// SetComputeType gets a reference to the given NullableAwsEdcWorkspaceCompute and assigns it to the ComputeType field.
func (o *AwsEdcDeploymentMachine) SetComputeType(v AwsEdcWorkspaceCompute) {
	o.ComputeType.Set(&v)
}
// SetComputeTypeNil sets the value for ComputeType to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetComputeTypeNil() {
	o.ComputeType.Set(nil)
}

// UnsetComputeType ensures that no value is present for ComputeType, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetComputeType() {
	o.ComputeType.Unset()
}

// GetRunningMode returns the RunningMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetRunningMode() AwsEdcWorkspaceRunningMode {
	if o == nil || IsNil(o.RunningMode.Get()) {
		var ret AwsEdcWorkspaceRunningMode
		return ret
	}
	return *o.RunningMode.Get()
}

// GetRunningModeOk returns a tuple with the RunningMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetRunningModeOk() (*AwsEdcWorkspaceRunningMode, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunningMode.Get(), o.RunningMode.IsSet()
}

// HasRunningMode returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasRunningMode() bool {
	if o != nil && o.RunningMode.IsSet() {
		return true
	}

	return false
}

// SetRunningMode gets a reference to the given NullableAwsEdcWorkspaceRunningMode and assigns it to the RunningMode field.
func (o *AwsEdcDeploymentMachine) SetRunningMode(v AwsEdcWorkspaceRunningMode) {
	o.RunningMode.Set(&v)
}
// SetRunningModeNil sets the value for RunningMode to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetRunningModeNil() {
	o.RunningMode.Set(nil)
}

// UnsetRunningMode ensures that no value is present for RunningMode, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetRunningMode() {
	o.RunningMode.Unset()
}

// GetWorkspaceStatus returns the WorkspaceStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetWorkspaceStatus() AwsEdcWorkspaceState {
	if o == nil || IsNil(o.WorkspaceStatus.Get()) {
		var ret AwsEdcWorkspaceState
		return ret
	}
	return *o.WorkspaceStatus.Get()
}

// GetWorkspaceStatusOk returns a tuple with the WorkspaceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetWorkspaceStatusOk() (*AwsEdcWorkspaceState, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkspaceStatus.Get(), o.WorkspaceStatus.IsSet()
}

// HasWorkspaceStatus returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasWorkspaceStatus() bool {
	if o != nil && o.WorkspaceStatus.IsSet() {
		return true
	}

	return false
}

// SetWorkspaceStatus gets a reference to the given NullableAwsEdcWorkspaceState and assigns it to the WorkspaceStatus field.
func (o *AwsEdcDeploymentMachine) SetWorkspaceStatus(v AwsEdcWorkspaceState) {
	o.WorkspaceStatus.Set(&v)
}
// SetWorkspaceStatusNil sets the value for WorkspaceStatus to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetWorkspaceStatusNil() {
	o.WorkspaceStatus.Set(nil)
}

// UnsetWorkspaceStatus ensures that no value is present for WorkspaceStatus, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetWorkspaceStatus() {
	o.WorkspaceStatus.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcDeploymentMachine) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcDeploymentMachine) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AwsEdcDeploymentMachine) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *AwsEdcDeploymentMachine) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *AwsEdcDeploymentMachine) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *AwsEdcDeploymentMachine) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

func (o AwsEdcDeploymentMachine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEdcDeploymentMachine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedDeploymentMachine, errDeploymentMachine := json.Marshal(o.DeploymentMachine)
	if errDeploymentMachine != nil {
		return map[string]interface{}{}, errDeploymentMachine
	}
	errDeploymentMachine = json.Unmarshal([]byte(serializedDeploymentMachine), &toSerialize)
	if errDeploymentMachine != nil {
		return map[string]interface{}{}, errDeploymentMachine
	}
	if o.WorkspaceId.IsSet() {
		toSerialize["workspaceId"] = o.WorkspaceId.Get()
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.RootVolumeSize.IsSet() {
		toSerialize["rootVolumeSize"] = o.RootVolumeSize.Get()
	}
	if o.UserVolumeSize.IsSet() {
		toSerialize["userVolumeSize"] = o.UserVolumeSize.Get()
	}
	if !IsNil(o.RootVolumeEncrypted) {
		toSerialize["rootVolumeEncrypted"] = o.RootVolumeEncrypted
	}
	if !IsNil(o.UserVolumeEncrypted) {
		toSerialize["userVolumeEncrypted"] = o.UserVolumeEncrypted
	}
	if o.ComputeType.IsSet() {
		toSerialize["computeType"] = o.ComputeType.Get()
	}
	if o.RunningMode.IsSet() {
		toSerialize["runningMode"] = o.RunningMode.Get()
	}
	if o.WorkspaceStatus.IsSet() {
		toSerialize["workspaceStatus"] = o.WorkspaceStatus.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	return toSerialize, nil
}

type NullableAwsEdcDeploymentMachine struct {
	value *AwsEdcDeploymentMachine
	isSet bool
}

func (v NullableAwsEdcDeploymentMachine) Get() *AwsEdcDeploymentMachine {
	return v.value
}

func (v *NullableAwsEdcDeploymentMachine) Set(val *AwsEdcDeploymentMachine) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcDeploymentMachine) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcDeploymentMachine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcDeploymentMachine(val *AwsEdcDeploymentMachine) *NullableAwsEdcDeploymentMachine {
	return &NullableAwsEdcDeploymentMachine{value: val, isSet: true}
}

func (v NullableAwsEdcDeploymentMachine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcDeploymentMachine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


