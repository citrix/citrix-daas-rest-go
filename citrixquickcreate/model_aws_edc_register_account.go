/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsEdcRegisterAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEdcRegisterAccount{}

// AwsEdcRegisterAccount struct for AwsEdcRegisterAccount
type AwsEdcRegisterAccount struct {
	RegisterAccount
	// Cidr range used for registration
	CidrRange NullableString `json:"cidrRange,omitempty"`
}

type _AwsEdcRegisterAccount AwsEdcRegisterAccount

// NewAwsEdcRegisterAccount instantiates a new AwsEdcRegisterAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEdcRegisterAccount(accountType AccountType) *AwsEdcRegisterAccount {
	this := AwsEdcRegisterAccount{}
	this.AccountType = accountType
	return &this
}

// NewAwsEdcRegisterAccountWithDefaults instantiates a new AwsEdcRegisterAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEdcRegisterAccountWithDefaults() *AwsEdcRegisterAccount {
	this := AwsEdcRegisterAccount{}
	return &this
}

// GetCidrRange returns the CidrRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcRegisterAccount) GetCidrRange() string {
	if o == nil || IsNil(o.CidrRange.Get()) {
		var ret string
		return ret
	}
	return *o.CidrRange.Get()
}

// GetCidrRangeOk returns a tuple with the CidrRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcRegisterAccount) GetCidrRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrRange.Get(), o.CidrRange.IsSet()
}

// HasCidrRange returns a boolean if a field has been set.
func (o *AwsEdcRegisterAccount) HasCidrRange() bool {
	if o != nil && o.CidrRange.IsSet() {
		return true
	}

	return false
}

// SetCidrRange gets a reference to the given NullableString and assigns it to the CidrRange field.
func (o *AwsEdcRegisterAccount) SetCidrRange(v string) {
	o.CidrRange.Set(&v)
}

// SetCidrRangeNil sets the value for CidrRange to be an explicit nil
func (o *AwsEdcRegisterAccount) SetCidrRangeNil() {
	o.CidrRange.Set(nil)
}

// UnsetCidrRange ensures that no value is present for CidrRange, not even an explicit nil
func (o *AwsEdcRegisterAccount) UnsetCidrRange() {
	o.CidrRange.Unset()
}

func (o AwsEdcRegisterAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEdcRegisterAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedRegisterAccount, errRegisterAccount := json.Marshal(o.RegisterAccount)
	if errRegisterAccount != nil {
		return map[string]interface{}{}, errRegisterAccount
	}
	errRegisterAccount = json.Unmarshal([]byte(serializedRegisterAccount), &toSerialize)
	if errRegisterAccount != nil {
		return map[string]interface{}{}, errRegisterAccount
	}
	if o.CidrRange.IsSet() {
		toSerialize["cidrRange"] = o.CidrRange.Get()
	}
	return toSerialize, nil
}

type NullableAwsEdcRegisterAccount struct {
	value *AwsEdcRegisterAccount
	isSet bool
}

func (v NullableAwsEdcRegisterAccount) Get() *AwsEdcRegisterAccount {
	return v.value
}

func (v *NullableAwsEdcRegisterAccount) Set(val *AwsEdcRegisterAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcRegisterAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcRegisterAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcRegisterAccount(val *AwsEdcRegisterAccount) *NullableAwsEdcRegisterAccount {
	return &NullableAwsEdcRegisterAccount{value: val, isSet: true}
}

func (v NullableAwsEdcRegisterAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcRegisterAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
