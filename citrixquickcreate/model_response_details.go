/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the ResponseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseDetails{}

// ResponseDetails Details about the failure
type ResponseDetails struct {
	// Once of the error codes listed in the ErrorCode enum
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// Description about the error
	ErrorDescription NullableString `json:"errorDescription,omitempty"`
}

// NewResponseDetails instantiates a new ResponseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseDetails() *ResponseDetails {
	this := ResponseDetails{}
	return &this
}

// NewResponseDetailsWithDefaults instantiates a new ResponseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseDetailsWithDefaults() *ResponseDetails {
	this := ResponseDetails{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ResponseDetails) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseDetails) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ResponseDetails) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *ResponseDetails) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseDetails) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorDescription.Get()
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseDetails) GetErrorDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorDescription.Get(), o.ErrorDescription.IsSet()
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *ResponseDetails) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription.IsSet() {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given NullableString and assigns it to the ErrorDescription field.
func (o *ResponseDetails) SetErrorDescription(v string) {
	o.ErrorDescription.Set(&v)
}
// SetErrorDescriptionNil sets the value for ErrorDescription to be an explicit nil
func (o *ResponseDetails) SetErrorDescriptionNil() {
	o.ErrorDescription.Set(nil)
}

// UnsetErrorDescription ensures that no value is present for ErrorDescription, not even an explicit nil
func (o *ResponseDetails) UnsetErrorDescription() {
	o.ErrorDescription.Unset()
}

func (o ResponseDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDescription.IsSet() {
		toSerialize["errorDescription"] = o.ErrorDescription.Get()
	}
	return toSerialize, nil
}

type NullableResponseDetails struct {
	value *ResponseDetails
	isSet bool
}

func (v NullableResponseDetails) Get() *ResponseDetails {
	return v.value
}

func (v *NullableResponseDetails) Set(val *ResponseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseDetails(val *ResponseDetails) *NullableResponseDetails {
	return &NullableResponseDetails{value: val, isSet: true}
}

func (v NullableResponseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


