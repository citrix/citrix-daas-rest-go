/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the InitiateAwsEdcDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InitiateAwsEdcDeployment{}

// InitiateAwsEdcDeployment struct for InitiateAwsEdcDeployment
type InitiateAwsEdcDeployment struct {
	InitiateDeployment
	// Image Id
	ImageId string `json:"imageId"`
	// Performance size for bundle creation
	ComputeType *AwsEdcWorkspaceCompute `json:"computeType,omitempty"`
	// Size of operating system volume for bundle creation
	RootVolumeSize *int32 `json:"rootVolumeSize,omitempty"`
	// Size of user storage volume for bundle creation
	UserVolumeSize *int32 `json:"userVolumeSize,omitempty"`
	// Is root and user storage volume encrypted
	VolumesEncrypted NullableBool `json:"volumesEncrypted,omitempty"`
	// Volume encryption key
	VolumesEncryptionKey NullableString `json:"volumesEncryptionKey,omitempty"`
	// Running mode to apply to all workspaces
	RunningMode NullableAwsEdcWorkspaceRunningMode `json:"runningMode,omitempty"`
	// Power Configuration for AWS Deployment
	ScaleSettings NullableScaleSettings `json:"scaleSettings,omitempty"`
	// Should workspaces be decoupled from the user during creation
	UserDecoupledWorkspaces NullableBool `json:"userDecoupledWorkspaces,omitempty"`
	// Configuration for individual workspace
	Workspaces []AddAwsEdcWorkspace `json:"workspaces,omitempty"`
}

type _InitiateAwsEdcDeployment InitiateAwsEdcDeployment

// NewInitiateAwsEdcDeployment instantiates a new InitiateAwsEdcDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInitiateAwsEdcDeployment(imageId string, accountType AccountType, connectionId string, deploymentName string) *InitiateAwsEdcDeployment {
	this := InitiateAwsEdcDeployment{}
	this.AccountType = accountType
	this.ConnectionId = connectionId
	this.DeploymentName = deploymentName
	return &this
}

// NewInitiateAwsEdcDeploymentWithDefaults instantiates a new InitiateAwsEdcDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInitiateAwsEdcDeploymentWithDefaults() *InitiateAwsEdcDeployment {
	this := InitiateAwsEdcDeployment{}
	return &this
}

// GetImageId returns the ImageId field value
func (o *InitiateAwsEdcDeployment) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *InitiateAwsEdcDeployment) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *InitiateAwsEdcDeployment) SetImageId(v string) {
	o.ImageId = v
}

// GetComputeType returns the ComputeType field value if set, zero value otherwise.
func (o *InitiateAwsEdcDeployment) GetComputeType() AwsEdcWorkspaceCompute {
	if o == nil || IsNil(o.ComputeType) {
		var ret AwsEdcWorkspaceCompute
		return ret
	}
	return *o.ComputeType
}

// GetComputeTypeOk returns a tuple with the ComputeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAwsEdcDeployment) GetComputeTypeOk() (*AwsEdcWorkspaceCompute, bool) {
	if o == nil || IsNil(o.ComputeType) {
		return nil, false
	}
	return o.ComputeType, true
}

// HasComputeType returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasComputeType() bool {
	if o != nil && !IsNil(o.ComputeType) {
		return true
	}

	return false
}

// SetComputeType gets a reference to the given AwsEdcWorkspaceCompute and assigns it to the ComputeType field.
func (o *InitiateAwsEdcDeployment) SetComputeType(v AwsEdcWorkspaceCompute) {
	o.ComputeType = &v
}

// GetRootVolumeSize returns the RootVolumeSize field value if set, zero value otherwise.
func (o *InitiateAwsEdcDeployment) GetRootVolumeSize() int32 {
	if o == nil || IsNil(o.RootVolumeSize) {
		var ret int32
		return ret
	}
	return *o.RootVolumeSize
}

// GetRootVolumeSizeOk returns a tuple with the RootVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAwsEdcDeployment) GetRootVolumeSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.RootVolumeSize) {
		return nil, false
	}
	return o.RootVolumeSize, true
}

// HasRootVolumeSize returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasRootVolumeSize() bool {
	if o != nil && !IsNil(o.RootVolumeSize) {
		return true
	}

	return false
}

// SetRootVolumeSize gets a reference to the given int32 and assigns it to the RootVolumeSize field.
func (o *InitiateAwsEdcDeployment) SetRootVolumeSize(v int32) {
	o.RootVolumeSize = &v
}

// GetUserVolumeSize returns the UserVolumeSize field value if set, zero value otherwise.
func (o *InitiateAwsEdcDeployment) GetUserVolumeSize() int32 {
	if o == nil || IsNil(o.UserVolumeSize) {
		var ret int32
		return ret
	}
	return *o.UserVolumeSize
}

// GetUserVolumeSizeOk returns a tuple with the UserVolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InitiateAwsEdcDeployment) GetUserVolumeSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.UserVolumeSize) {
		return nil, false
	}
	return o.UserVolumeSize, true
}

// HasUserVolumeSize returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasUserVolumeSize() bool {
	if o != nil && !IsNil(o.UserVolumeSize) {
		return true
	}

	return false
}

// SetUserVolumeSize gets a reference to the given int32 and assigns it to the UserVolumeSize field.
func (o *InitiateAwsEdcDeployment) SetUserVolumeSize(v int32) {
	o.UserVolumeSize = &v
}

// GetVolumesEncrypted returns the VolumesEncrypted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetVolumesEncrypted() bool {
	if o == nil || IsNil(o.VolumesEncrypted.Get()) {
		var ret bool
		return ret
	}
	return *o.VolumesEncrypted.Get()
}

// GetVolumesEncryptedOk returns a tuple with the VolumesEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetVolumesEncryptedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumesEncrypted.Get(), o.VolumesEncrypted.IsSet()
}

// HasVolumesEncrypted returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasVolumesEncrypted() bool {
	if o != nil && o.VolumesEncrypted.IsSet() {
		return true
	}

	return false
}

// SetVolumesEncrypted gets a reference to the given NullableBool and assigns it to the VolumesEncrypted field.
func (o *InitiateAwsEdcDeployment) SetVolumesEncrypted(v bool) {
	o.VolumesEncrypted.Set(&v)
}

// SetVolumesEncryptedNil sets the value for VolumesEncrypted to be an explicit nil
func (o *InitiateAwsEdcDeployment) SetVolumesEncryptedNil() {
	o.VolumesEncrypted.Set(nil)
}

// UnsetVolumesEncrypted ensures that no value is present for VolumesEncrypted, not even an explicit nil
func (o *InitiateAwsEdcDeployment) UnsetVolumesEncrypted() {
	o.VolumesEncrypted.Unset()
}

// GetVolumesEncryptionKey returns the VolumesEncryptionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetVolumesEncryptionKey() string {
	if o == nil || IsNil(o.VolumesEncryptionKey.Get()) {
		var ret string
		return ret
	}
	return *o.VolumesEncryptionKey.Get()
}

// GetVolumesEncryptionKeyOk returns a tuple with the VolumesEncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetVolumesEncryptionKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumesEncryptionKey.Get(), o.VolumesEncryptionKey.IsSet()
}

// HasVolumesEncryptionKey returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasVolumesEncryptionKey() bool {
	if o != nil && o.VolumesEncryptionKey.IsSet() {
		return true
	}

	return false
}

// SetVolumesEncryptionKey gets a reference to the given NullableString and assigns it to the VolumesEncryptionKey field.
func (o *InitiateAwsEdcDeployment) SetVolumesEncryptionKey(v string) {
	o.VolumesEncryptionKey.Set(&v)
}

// SetVolumesEncryptionKeyNil sets the value for VolumesEncryptionKey to be an explicit nil
func (o *InitiateAwsEdcDeployment) SetVolumesEncryptionKeyNil() {
	o.VolumesEncryptionKey.Set(nil)
}

// UnsetVolumesEncryptionKey ensures that no value is present for VolumesEncryptionKey, not even an explicit nil
func (o *InitiateAwsEdcDeployment) UnsetVolumesEncryptionKey() {
	o.VolumesEncryptionKey.Unset()
}

// GetRunningMode returns the RunningMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetRunningMode() AwsEdcWorkspaceRunningMode {
	if o == nil || IsNil(o.RunningMode.Get()) {
		var ret AwsEdcWorkspaceRunningMode
		return ret
	}
	return *o.RunningMode.Get()
}

// GetRunningModeOk returns a tuple with the RunningMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetRunningModeOk() (*AwsEdcWorkspaceRunningMode, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunningMode.Get(), o.RunningMode.IsSet()
}

// HasRunningMode returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasRunningMode() bool {
	if o != nil && o.RunningMode.IsSet() {
		return true
	}

	return false
}

// SetRunningMode gets a reference to the given NullableAwsEdcWorkspaceRunningMode and assigns it to the RunningMode field.
func (o *InitiateAwsEdcDeployment) SetRunningMode(v AwsEdcWorkspaceRunningMode) {
	o.RunningMode.Set(&v)
}

// SetRunningModeNil sets the value for RunningMode to be an explicit nil
func (o *InitiateAwsEdcDeployment) SetRunningModeNil() {
	o.RunningMode.Set(nil)
}

// UnsetRunningMode ensures that no value is present for RunningMode, not even an explicit nil
func (o *InitiateAwsEdcDeployment) UnsetRunningMode() {
	o.RunningMode.Unset()
}

// GetScaleSettings returns the ScaleSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetScaleSettings() ScaleSettings {
	if o == nil || IsNil(o.ScaleSettings.Get()) {
		var ret ScaleSettings
		return ret
	}
	return *o.ScaleSettings.Get()
}

// GetScaleSettingsOk returns a tuple with the ScaleSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetScaleSettingsOk() (*ScaleSettings, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScaleSettings.Get(), o.ScaleSettings.IsSet()
}

// HasScaleSettings returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasScaleSettings() bool {
	if o != nil && o.ScaleSettings.IsSet() {
		return true
	}

	return false
}

// SetScaleSettings gets a reference to the given NullableScaleSettings and assigns it to the ScaleSettings field.
func (o *InitiateAwsEdcDeployment) SetScaleSettings(v ScaleSettings) {
	o.ScaleSettings.Set(&v)
}

// SetScaleSettingsNil sets the value for ScaleSettings to be an explicit nil
func (o *InitiateAwsEdcDeployment) SetScaleSettingsNil() {
	o.ScaleSettings.Set(nil)
}

// UnsetScaleSettings ensures that no value is present for ScaleSettings, not even an explicit nil
func (o *InitiateAwsEdcDeployment) UnsetScaleSettings() {
	o.ScaleSettings.Unset()
}

// GetUserDecoupledWorkspaces returns the UserDecoupledWorkspaces field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetUserDecoupledWorkspaces() bool {
	if o == nil || IsNil(o.UserDecoupledWorkspaces.Get()) {
		var ret bool
		return ret
	}
	return *o.UserDecoupledWorkspaces.Get()
}

// GetUserDecoupledWorkspacesOk returns a tuple with the UserDecoupledWorkspaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetUserDecoupledWorkspacesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserDecoupledWorkspaces.Get(), o.UserDecoupledWorkspaces.IsSet()
}

// HasUserDecoupledWorkspaces returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasUserDecoupledWorkspaces() bool {
	if o != nil && o.UserDecoupledWorkspaces.IsSet() {
		return true
	}

	return false
}

// SetUserDecoupledWorkspaces gets a reference to the given NullableBool and assigns it to the UserDecoupledWorkspaces field.
func (o *InitiateAwsEdcDeployment) SetUserDecoupledWorkspaces(v bool) {
	o.UserDecoupledWorkspaces.Set(&v)
}

// SetUserDecoupledWorkspacesNil sets the value for UserDecoupledWorkspaces to be an explicit nil
func (o *InitiateAwsEdcDeployment) SetUserDecoupledWorkspacesNil() {
	o.UserDecoupledWorkspaces.Set(nil)
}

// UnsetUserDecoupledWorkspaces ensures that no value is present for UserDecoupledWorkspaces, not even an explicit nil
func (o *InitiateAwsEdcDeployment) UnsetUserDecoupledWorkspaces() {
	o.UserDecoupledWorkspaces.Unset()
}

// GetWorkspaces returns the Workspaces field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InitiateAwsEdcDeployment) GetWorkspaces() []AddAwsEdcWorkspace {
	if o == nil {
		var ret []AddAwsEdcWorkspace
		return ret
	}
	return o.Workspaces
}

// GetWorkspacesOk returns a tuple with the Workspaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InitiateAwsEdcDeployment) GetWorkspacesOk() ([]AddAwsEdcWorkspace, bool) {
	if o == nil || IsNil(o.Workspaces) {
		return nil, false
	}
	return o.Workspaces, true
}

// HasWorkspaces returns a boolean if a field has been set.
func (o *InitiateAwsEdcDeployment) HasWorkspaces() bool {
	if o != nil && !IsNil(o.Workspaces) {
		return true
	}

	return false
}

// SetWorkspaces gets a reference to the given []AddAwsEdcWorkspace and assigns it to the Workspaces field.
func (o *InitiateAwsEdcDeployment) SetWorkspaces(v []AddAwsEdcWorkspace) {
	o.Workspaces = v
}

func (o InitiateAwsEdcDeployment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InitiateAwsEdcDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedInitiateDeployment, errInitiateDeployment := json.Marshal(o.InitiateDeployment)
	if errInitiateDeployment != nil {
		return map[string]interface{}{}, errInitiateDeployment
	}
	errInitiateDeployment = json.Unmarshal([]byte(serializedInitiateDeployment), &toSerialize)
	if errInitiateDeployment != nil {
		return map[string]interface{}{}, errInitiateDeployment
	}
	toSerialize["imageId"] = o.ImageId
	if !IsNil(o.ComputeType) {
		toSerialize["computeType"] = o.ComputeType
	}
	if !IsNil(o.RootVolumeSize) {
		toSerialize["rootVolumeSize"] = o.RootVolumeSize
	}
	if !IsNil(o.UserVolumeSize) {
		toSerialize["userVolumeSize"] = o.UserVolumeSize
	}
	if o.VolumesEncrypted.IsSet() {
		toSerialize["volumesEncrypted"] = o.VolumesEncrypted.Get()
	}
	if o.VolumesEncryptionKey.IsSet() {
		toSerialize["volumesEncryptionKey"] = o.VolumesEncryptionKey.Get()
	}
	if o.RunningMode.IsSet() {
		toSerialize["runningMode"] = o.RunningMode.Get()
	}
	if o.ScaleSettings.IsSet() {
		toSerialize["scaleSettings"] = o.ScaleSettings.Get()
	}
	if o.UserDecoupledWorkspaces.IsSet() {
		toSerialize["userDecoupledWorkspaces"] = o.UserDecoupledWorkspaces.Get()
	}
	if o.Workspaces != nil {
		toSerialize["workspaces"] = o.Workspaces
	}
	return toSerialize, nil
}

type NullableInitiateAwsEdcDeployment struct {
	value *InitiateAwsEdcDeployment
	isSet bool
}

func (v NullableInitiateAwsEdcDeployment) Get() *InitiateAwsEdcDeployment {
	return v.value
}

func (v *NullableInitiateAwsEdcDeployment) Set(val *InitiateAwsEdcDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableInitiateAwsEdcDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableInitiateAwsEdcDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInitiateAwsEdcDeployment(val *InitiateAwsEdcDeployment) *NullableInitiateAwsEdcDeployment {
	return &NullableInitiateAwsEdcDeployment{value: val, isSet: true}
}

func (v NullableInitiateAwsEdcDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInitiateAwsEdcDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
