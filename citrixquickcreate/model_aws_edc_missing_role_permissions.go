/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsEdcMissingRolePermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEdcMissingRolePermissions{}

// AwsEdcMissingRolePermissions struct for AwsEdcMissingRolePermissions
type AwsEdcMissingRolePermissions struct {
	// Determines whether the permissions are Allowed or Denied
	Effect NullableString `json:"effect,omitempty"`
	// List of permissions
	Action []string `json:"action,omitempty"`
	// Target resources for the permissions
	Resource NullableString `json:"resource,omitempty"`
	Condition NullableAwsEdcMissingRolePermissionsCondition `json:"condition,omitempty"`
}

// NewAwsEdcMissingRolePermissions instantiates a new AwsEdcMissingRolePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEdcMissingRolePermissions() *AwsEdcMissingRolePermissions {
	this := AwsEdcMissingRolePermissions{}
	return &this
}

// NewAwsEdcMissingRolePermissionsWithDefaults instantiates a new AwsEdcMissingRolePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEdcMissingRolePermissionsWithDefaults() *AwsEdcMissingRolePermissions {
	this := AwsEdcMissingRolePermissions{}
	return &this
}

// GetEffect returns the Effect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcMissingRolePermissions) GetEffect() string {
	if o == nil || IsNil(o.Effect.Get()) {
		var ret string
		return ret
	}
	return *o.Effect.Get()
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcMissingRolePermissions) GetEffectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Effect.Get(), o.Effect.IsSet()
}

// HasEffect returns a boolean if a field has been set.
func (o *AwsEdcMissingRolePermissions) HasEffect() bool {
	if o != nil && o.Effect.IsSet() {
		return true
	}

	return false
}

// SetEffect gets a reference to the given NullableString and assigns it to the Effect field.
func (o *AwsEdcMissingRolePermissions) SetEffect(v string) {
	o.Effect.Set(&v)
}
// SetEffectNil sets the value for Effect to be an explicit nil
func (o *AwsEdcMissingRolePermissions) SetEffectNil() {
	o.Effect.Set(nil)
}

// UnsetEffect ensures that no value is present for Effect, not even an explicit nil
func (o *AwsEdcMissingRolePermissions) UnsetEffect() {
	o.Effect.Unset()
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcMissingRolePermissions) GetAction() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcMissingRolePermissions) GetActionOk() ([]string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AwsEdcMissingRolePermissions) HasAction() bool {
	if o != nil && IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given []string and assigns it to the Action field.
func (o *AwsEdcMissingRolePermissions) SetAction(v []string) {
	o.Action = v
}

// GetResource returns the Resource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcMissingRolePermissions) GetResource() string {
	if o == nil || IsNil(o.Resource.Get()) {
		var ret string
		return ret
	}
	return *o.Resource.Get()
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcMissingRolePermissions) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resource.Get(), o.Resource.IsSet()
}

// HasResource returns a boolean if a field has been set.
func (o *AwsEdcMissingRolePermissions) HasResource() bool {
	if o != nil && o.Resource.IsSet() {
		return true
	}

	return false
}

// SetResource gets a reference to the given NullableString and assigns it to the Resource field.
func (o *AwsEdcMissingRolePermissions) SetResource(v string) {
	o.Resource.Set(&v)
}
// SetResourceNil sets the value for Resource to be an explicit nil
func (o *AwsEdcMissingRolePermissions) SetResourceNil() {
	o.Resource.Set(nil)
}

// UnsetResource ensures that no value is present for Resource, not even an explicit nil
func (o *AwsEdcMissingRolePermissions) UnsetResource() {
	o.Resource.Unset()
}

// GetCondition returns the Condition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcMissingRolePermissions) GetCondition() AwsEdcMissingRolePermissionsCondition {
	if o == nil || IsNil(o.Condition.Get()) {
		var ret AwsEdcMissingRolePermissionsCondition
		return ret
	}
	return *o.Condition.Get()
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcMissingRolePermissions) GetConditionOk() (*AwsEdcMissingRolePermissionsCondition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Condition.Get(), o.Condition.IsSet()
}

// HasCondition returns a boolean if a field has been set.
func (o *AwsEdcMissingRolePermissions) HasCondition() bool {
	if o != nil && o.Condition.IsSet() {
		return true
	}

	return false
}

// SetCondition gets a reference to the given NullableAwsEdcMissingRolePermissionsCondition and assigns it to the Condition field.
func (o *AwsEdcMissingRolePermissions) SetCondition(v AwsEdcMissingRolePermissionsCondition) {
	o.Condition.Set(&v)
}
// SetConditionNil sets the value for Condition to be an explicit nil
func (o *AwsEdcMissingRolePermissions) SetConditionNil() {
	o.Condition.Set(nil)
}

// UnsetCondition ensures that no value is present for Condition, not even an explicit nil
func (o *AwsEdcMissingRolePermissions) UnsetCondition() {
	o.Condition.Unset()
}

func (o AwsEdcMissingRolePermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEdcMissingRolePermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Effect.IsSet() {
		toSerialize["effect"] = o.Effect.Get()
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Resource.IsSet() {
		toSerialize["resource"] = o.Resource.Get()
	}
	if o.Condition.IsSet() {
		toSerialize["condition"] = o.Condition.Get()
	}
	return toSerialize, nil
}

type NullableAwsEdcMissingRolePermissions struct {
	value *AwsEdcMissingRolePermissions
	isSet bool
}

func (v NullableAwsEdcMissingRolePermissions) Get() *AwsEdcMissingRolePermissions {
	return v.value
}

func (v *NullableAwsEdcMissingRolePermissions) Set(val *AwsEdcMissingRolePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcMissingRolePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcMissingRolePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcMissingRolePermissions(val *AwsEdcMissingRolePermissions) *NullableAwsEdcMissingRolePermissions {
	return &NullableAwsEdcMissingRolePermissions{value: val, isSet: true}
}

func (v NullableAwsEdcMissingRolePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcMissingRolePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


