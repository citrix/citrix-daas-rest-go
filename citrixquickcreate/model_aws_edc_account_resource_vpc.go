/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AwsEdcAccountResourceVpc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsEdcAccountResourceVpc{}

// AwsEdcAccountResourceVpc struct for AwsEdcAccountResourceVpc
type AwsEdcAccountResourceVpc struct {
	AwsEdcAccountResource
	// Vpc Id
	VpcId NullableString `json:"vpcId,omitempty"`
	// Vpc Status  Enum values AVAILABLE, PENDING
	Status NullableAwsEdcVpcState `json:"status,omitempty"`
	// Vpc Tenancy  Enum values DEFAULT, DEDICATED, HOST
	VpcTenancy NullableAwsEdcVpcTenancy `json:"vpcTenancy,omitempty"`
	// Vpc CIDR Block
	CidrBlock NullableString `json:"cidrBlock,omitempty"`
	// Vpc Tags
	Tags []Tag `json:"tags,omitempty"`
}

type _AwsEdcAccountResourceVpc AwsEdcAccountResourceVpc

// NewAwsEdcAccountResourceVpc instantiates a new AwsEdcAccountResourceVpc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsEdcAccountResourceVpc(resourceType AwsAccountResourceType, accountType AccountType) *AwsEdcAccountResourceVpc {
	this := AwsEdcAccountResourceVpc{}
	this.ResourceType = resourceType
	this.AccountType = accountType
	return &this
}

// NewAwsEdcAccountResourceVpcWithDefaults instantiates a new AwsEdcAccountResourceVpc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsEdcAccountResourceVpcWithDefaults() *AwsEdcAccountResourceVpc {
	this := AwsEdcAccountResourceVpc{}
	return &this
}

// GetVpcId returns the VpcId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceVpc) GetVpcId() string {
	if o == nil || IsNil(o.VpcId.Get()) {
		var ret string
		return ret
	}
	return *o.VpcId.Get()
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceVpc) GetVpcIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcId.Get(), o.VpcId.IsSet()
}

// HasVpcId returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceVpc) HasVpcId() bool {
	if o != nil && o.VpcId.IsSet() {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given NullableString and assigns it to the VpcId field.
func (o *AwsEdcAccountResourceVpc) SetVpcId(v string) {
	o.VpcId.Set(&v)
}

// SetVpcIdNil sets the value for VpcId to be an explicit nil
func (o *AwsEdcAccountResourceVpc) SetVpcIdNil() {
	o.VpcId.Set(nil)
}

// UnsetVpcId ensures that no value is present for VpcId, not even an explicit nil
func (o *AwsEdcAccountResourceVpc) UnsetVpcId() {
	o.VpcId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceVpc) GetStatus() AwsEdcVpcState {
	if o == nil || IsNil(o.Status.Get()) {
		var ret AwsEdcVpcState
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceVpc) GetStatusOk() (*AwsEdcVpcState, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceVpc) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableAwsEdcVpcState and assigns it to the Status field.
func (o *AwsEdcAccountResourceVpc) SetStatus(v AwsEdcVpcState) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *AwsEdcAccountResourceVpc) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *AwsEdcAccountResourceVpc) UnsetStatus() {
	o.Status.Unset()
}

// GetVpcTenancy returns the VpcTenancy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceVpc) GetVpcTenancy() AwsEdcVpcTenancy {
	if o == nil || IsNil(o.VpcTenancy.Get()) {
		var ret AwsEdcVpcTenancy
		return ret
	}
	return *o.VpcTenancy.Get()
}

// GetVpcTenancyOk returns a tuple with the VpcTenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceVpc) GetVpcTenancyOk() (*AwsEdcVpcTenancy, bool) {
	if o == nil {
		return nil, false
	}
	return o.VpcTenancy.Get(), o.VpcTenancy.IsSet()
}

// HasVpcTenancy returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceVpc) HasVpcTenancy() bool {
	if o != nil && o.VpcTenancy.IsSet() {
		return true
	}

	return false
}

// SetVpcTenancy gets a reference to the given NullableAwsEdcVpcTenancy and assigns it to the VpcTenancy field.
func (o *AwsEdcAccountResourceVpc) SetVpcTenancy(v AwsEdcVpcTenancy) {
	o.VpcTenancy.Set(&v)
}

// SetVpcTenancyNil sets the value for VpcTenancy to be an explicit nil
func (o *AwsEdcAccountResourceVpc) SetVpcTenancyNil() {
	o.VpcTenancy.Set(nil)
}

// UnsetVpcTenancy ensures that no value is present for VpcTenancy, not even an explicit nil
func (o *AwsEdcAccountResourceVpc) UnsetVpcTenancy() {
	o.VpcTenancy.Unset()
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceVpc) GetCidrBlock() string {
	if o == nil || IsNil(o.CidrBlock.Get()) {
		var ret string
		return ret
	}
	return *o.CidrBlock.Get()
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceVpc) GetCidrBlockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrBlock.Get(), o.CidrBlock.IsSet()
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceVpc) HasCidrBlock() bool {
	if o != nil && o.CidrBlock.IsSet() {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given NullableString and assigns it to the CidrBlock field.
func (o *AwsEdcAccountResourceVpc) SetCidrBlock(v string) {
	o.CidrBlock.Set(&v)
}

// SetCidrBlockNil sets the value for CidrBlock to be an explicit nil
func (o *AwsEdcAccountResourceVpc) SetCidrBlockNil() {
	o.CidrBlock.Set(nil)
}

// UnsetCidrBlock ensures that no value is present for CidrBlock, not even an explicit nil
func (o *AwsEdcAccountResourceVpc) UnsetCidrBlock() {
	o.CidrBlock.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AwsEdcAccountResourceVpc) GetTags() []Tag {
	if o == nil {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AwsEdcAccountResourceVpc) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AwsEdcAccountResourceVpc) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *AwsEdcAccountResourceVpc) SetTags(v []Tag) {
	o.Tags = v
}

func (o AwsEdcAccountResourceVpc) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsEdcAccountResourceVpc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedAwsEdcAccountResource, errAwsEdcAccountResource := json.Marshal(o.AwsEdcAccountResource)
	if errAwsEdcAccountResource != nil {
		return map[string]interface{}{}, errAwsEdcAccountResource
	}
	errAwsEdcAccountResource = json.Unmarshal([]byte(serializedAwsEdcAccountResource), &toSerialize)
	if errAwsEdcAccountResource != nil {
		return map[string]interface{}{}, errAwsEdcAccountResource
	}
	if o.VpcId.IsSet() {
		toSerialize["vpcId"] = o.VpcId.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.VpcTenancy.IsSet() {
		toSerialize["vpcTenancy"] = o.VpcTenancy.Get()
	}
	if o.CidrBlock.IsSet() {
		toSerialize["cidrBlock"] = o.CidrBlock.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableAwsEdcAccountResourceVpc struct {
	value *AwsEdcAccountResourceVpc
	isSet bool
}

func (v NullableAwsEdcAccountResourceVpc) Get() *AwsEdcAccountResourceVpc {
	return v.value
}

func (v *NullableAwsEdcAccountResourceVpc) Set(val *AwsEdcAccountResourceVpc) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcAccountResourceVpc) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcAccountResourceVpc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcAccountResourceVpc(val *AwsEdcAccountResourceVpc) *NullableAwsEdcAccountResourceVpc {
	return &NullableAwsEdcAccountResourceVpc{value: val, isSet: true}
}

func (v NullableAwsEdcAccountResourceVpc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcAccountResourceVpc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
