/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the RegisterAwsEdcAccountTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegisterAwsEdcAccountTask{}

// RegisterAwsEdcAccountTask struct for RegisterAwsEdcAccountTask
type RegisterAwsEdcAccountTask struct {
	InitiateAccountTask
	// The Cidr range used in the BYOL registration
	CidrRange string `json:"cidrRange"`
}

type _RegisterAwsEdcAccountTask RegisterAwsEdcAccountTask

// NewRegisterAwsEdcAccountTask instantiates a new RegisterAwsEdcAccountTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegisterAwsEdcAccountTask(cidrRange string, accountType AccountType) *RegisterAwsEdcAccountTask {
	this := RegisterAwsEdcAccountTask{}
	this.AccountType = accountType
	return &this
}

// NewRegisterAwsEdcAccountTaskWithDefaults instantiates a new RegisterAwsEdcAccountTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegisterAwsEdcAccountTaskWithDefaults() *RegisterAwsEdcAccountTask {
	this := RegisterAwsEdcAccountTask{}
	return &this
}

// GetCidrRange returns the CidrRange field value
func (o *RegisterAwsEdcAccountTask) GetCidrRange() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CidrRange
}

// GetCidrRangeOk returns a tuple with the CidrRange field value
// and a boolean to check if the value has been set.
func (o *RegisterAwsEdcAccountTask) GetCidrRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CidrRange, true
}

// SetCidrRange sets field value
func (o *RegisterAwsEdcAccountTask) SetCidrRange(v string) {
	o.CidrRange = v
}

func (o RegisterAwsEdcAccountTask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegisterAwsEdcAccountTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedInitiateAccountTask, errInitiateAccountTask := json.Marshal(o.InitiateAccountTask)
	if errInitiateAccountTask != nil {
		return map[string]interface{}{}, errInitiateAccountTask
	}
	errInitiateAccountTask = json.Unmarshal([]byte(serializedInitiateAccountTask), &toSerialize)
	if errInitiateAccountTask != nil {
		return map[string]interface{}{}, errInitiateAccountTask
	}
	toSerialize["cidrRange"] = o.CidrRange
	return toSerialize, nil
}

type NullableRegisterAwsEdcAccountTask struct {
	value *RegisterAwsEdcAccountTask
	isSet bool
}

func (v NullableRegisterAwsEdcAccountTask) Get() *RegisterAwsEdcAccountTask {
	return v.value
}

func (v *NullableRegisterAwsEdcAccountTask) Set(val *RegisterAwsEdcAccountTask) {
	v.value = val
	v.isSet = true
}

func (v NullableRegisterAwsEdcAccountTask) IsSet() bool {
	return v.isSet
}

func (v *NullableRegisterAwsEdcAccountTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegisterAwsEdcAccountTask(val *RegisterAwsEdcAccountTask) *NullableRegisterAwsEdcAccountTask {
	return &NullableRegisterAwsEdcAccountTask{value: val, isSet: true}
}

func (v NullableRegisterAwsEdcAccountTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegisterAwsEdcAccountTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
