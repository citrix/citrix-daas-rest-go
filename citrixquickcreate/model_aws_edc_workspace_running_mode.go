/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsEdcWorkspaceRunningMode the model 'AwsEdcWorkspaceRunningMode'
type AwsEdcWorkspaceRunningMode string

// List of AwsEdcWorkspaceRunningMode
const (
	AWSEDCWORKSPACERUNNINGMODE_ALWAYS_ON AwsEdcWorkspaceRunningMode = "ALWAYS_ON"
	AWSEDCWORKSPACERUNNINGMODE_AUTO_STOP AwsEdcWorkspaceRunningMode = "AUTO_STOP"
	AWSEDCWORKSPACERUNNINGMODE_MANUAL    AwsEdcWorkspaceRunningMode = "MANUAL"
)

// All allowed values of AwsEdcWorkspaceRunningMode enum
var AllowedAwsEdcWorkspaceRunningModeEnumValues = []AwsEdcWorkspaceRunningMode{
	"ALWAYS_ON",
	"AUTO_STOP",
	"MANUAL",
}

func (v *AwsEdcWorkspaceRunningMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsEdcWorkspaceRunningMode(value)
	for _, existing := range AllowedAwsEdcWorkspaceRunningModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsEdcWorkspaceRunningMode", value)
}

// NewAwsEdcWorkspaceRunningModeFromValue returns a pointer to a valid AwsEdcWorkspaceRunningMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsEdcWorkspaceRunningModeFromValue(v string) (*AwsEdcWorkspaceRunningMode, error) {
	ev := AwsEdcWorkspaceRunningMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsEdcWorkspaceRunningMode: valid values are %v", v, AllowedAwsEdcWorkspaceRunningModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsEdcWorkspaceRunningMode) IsValid() bool {
	for _, existing := range AllowedAwsEdcWorkspaceRunningModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsEdcWorkspaceRunningMode value
func (v AwsEdcWorkspaceRunningMode) Ptr() *AwsEdcWorkspaceRunningMode {
	return &v
}

type NullableAwsEdcWorkspaceRunningMode struct {
	value *AwsEdcWorkspaceRunningMode
	isSet bool
}

func (v NullableAwsEdcWorkspaceRunningMode) Get() *AwsEdcWorkspaceRunningMode {
	return v.value
}

func (v *NullableAwsEdcWorkspaceRunningMode) Set(val *AwsEdcWorkspaceRunningMode) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcWorkspaceRunningMode) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcWorkspaceRunningMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcWorkspaceRunningMode(val *AwsEdcWorkspaceRunningMode) *NullableAwsEdcWorkspaceRunningMode {
	return &NullableAwsEdcWorkspaceRunningMode{value: val, isSet: true}
}

func (v NullableAwsEdcWorkspaceRunningMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcWorkspaceRunningMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
