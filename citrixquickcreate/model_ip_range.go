/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the IpRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpRange{}

// IpRange struct for IpRange
type IpRange struct {
	CidrIp NullableString `json:"cidrIp,omitempty"`
	Description NullableString `json:"description,omitempty"`
}

// NewIpRange instantiates a new IpRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpRange() *IpRange {
	this := IpRange{}
	return &this
}

// NewIpRangeWithDefaults instantiates a new IpRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpRangeWithDefaults() *IpRange {
	this := IpRange{}
	return &this
}

// GetCidrIp returns the CidrIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpRange) GetCidrIp() string {
	if o == nil || IsNil(o.CidrIp.Get()) {
		var ret string
		return ret
	}
	return *o.CidrIp.Get()
}

// GetCidrIpOk returns a tuple with the CidrIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpRange) GetCidrIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CidrIp.Get(), o.CidrIp.IsSet()
}

// HasCidrIp returns a boolean if a field has been set.
func (o *IpRange) HasCidrIp() bool {
	if o != nil && o.CidrIp.IsSet() {
		return true
	}

	return false
}

// SetCidrIp gets a reference to the given NullableString and assigns it to the CidrIp field.
func (o *IpRange) SetCidrIp(v string) {
	o.CidrIp.Set(&v)
}
// SetCidrIpNil sets the value for CidrIp to be an explicit nil
func (o *IpRange) SetCidrIpNil() {
	o.CidrIp.Set(nil)
}

// UnsetCidrIp ensures that no value is present for CidrIp, not even an explicit nil
func (o *IpRange) UnsetCidrIp() {
	o.CidrIp.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IpRange) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IpRange) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *IpRange) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *IpRange) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *IpRange) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *IpRange) UnsetDescription() {
	o.Description.Unset()
}

func (o IpRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrIp.IsSet() {
		toSerialize["cidrIp"] = o.CidrIp.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

type NullableIpRange struct {
	value *IpRange
	isSet bool
}

func (v NullableIpRange) Get() *IpRange {
	return v.value
}

func (v *NullableIpRange) Set(val *IpRange) {
	v.value = val
	v.isSet = true
}

func (v NullableIpRange) IsSet() bool {
	return v.isSet
}

func (v *NullableIpRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpRange(val *IpRange) *NullableIpRange {
	return &NullableIpRange{value: val, isSet: true}
}

func (v NullableIpRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


