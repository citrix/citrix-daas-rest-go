/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
	"fmt"
)

// AwsEdcWorkspaceImageTenancy the model 'AwsEdcWorkspaceImageTenancy'
type AwsEdcWorkspaceImageTenancy string

// List of AwsEdcWorkspaceImageTenancy
const (
	AWSEDCWORKSPACEIMAGETENANCY_DEDICATED AwsEdcWorkspaceImageTenancy = "DEDICATED"
	AWSEDCWORKSPACEIMAGETENANCY_DEFAULT AwsEdcWorkspaceImageTenancy = "DEFAULT"
)

// All allowed values of AwsEdcWorkspaceImageTenancy enum
var AllowedAwsEdcWorkspaceImageTenancyEnumValues = []AwsEdcWorkspaceImageTenancy{
	"DEDICATED",
	"DEFAULT",
}

func (v *AwsEdcWorkspaceImageTenancy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsEdcWorkspaceImageTenancy(value)
	for _, existing := range AllowedAwsEdcWorkspaceImageTenancyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsEdcWorkspaceImageTenancy", value)
}

// NewAwsEdcWorkspaceImageTenancyFromValue returns a pointer to a valid AwsEdcWorkspaceImageTenancy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsEdcWorkspaceImageTenancyFromValue(v string) (*AwsEdcWorkspaceImageTenancy, error) {
	ev := AwsEdcWorkspaceImageTenancy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsEdcWorkspaceImageTenancy: valid values are %v", v, AllowedAwsEdcWorkspaceImageTenancyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsEdcWorkspaceImageTenancy) IsValid() bool {
	for _, existing := range AllowedAwsEdcWorkspaceImageTenancyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsEdcWorkspaceImageTenancy value
func (v AwsEdcWorkspaceImageTenancy) Ptr() *AwsEdcWorkspaceImageTenancy {
	return &v
}

type NullableAwsEdcWorkspaceImageTenancy struct {
	value *AwsEdcWorkspaceImageTenancy
	isSet bool
}

func (v NullableAwsEdcWorkspaceImageTenancy) Get() *AwsEdcWorkspaceImageTenancy {
	return v.value
}

func (v *NullableAwsEdcWorkspaceImageTenancy) Set(val *AwsEdcWorkspaceImageTenancy) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsEdcWorkspaceImageTenancy) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsEdcWorkspaceImageTenancy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsEdcWorkspaceImageTenancy(val *AwsEdcWorkspaceImageTenancy) *NullableAwsEdcWorkspaceImageTenancy {
	return &NullableAwsEdcWorkspaceImageTenancy{value: val, isSet: true}
}

func (v NullableAwsEdcWorkspaceImageTenancy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsEdcWorkspaceImageTenancy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

