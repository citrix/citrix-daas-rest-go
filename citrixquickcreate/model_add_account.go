/*
Quick Create Service for DaaS Quick Deploy with AWS WorkSpaces Core - Tech Preview

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: DaaSTechPreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickcreate

import (
	"encoding/json"
)

// checks if the AddAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAccount{}

// AddAccount Adds account
type AddAccount struct {
	AccountType AccountType `json:"accountType"`
	// The name of the account to create
	Name string `json:"name"`
}

// NewAddAccount instantiates a new AddAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAccount(accountType AccountType, name string) *AddAccount {
	this := AddAccount{}
	this.AccountType = accountType
	this.Name = name
	return &this
}

// NewAddAccountWithDefaults instantiates a new AddAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAccountWithDefaults() *AddAccount {
	this := AddAccount{}
	return &this
}

// GetAccountType returns the AccountType field value
func (o *AddAccount) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *AddAccount) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *AddAccount) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetName returns the Name field value
func (o *AddAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddAccount) SetName(v string) {
	o.Name = v
}

func (o AddAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountType"] = o.AccountType
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableAddAccount struct {
	value *AddAccount
	isSet bool
}

func (v NullableAddAccount) Get() *AddAccount {
	return v.value
}

func (v *NullableAddAccount) Set(val *AddAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAccount(val *AddAccount) *NullableAddAccount {
	return &NullableAddAccount{value: val, isSet: true}
}

func (v NullableAddAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


