/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreStorageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreStorageModel{}

// BackupRestoreStorageModel struct for BackupRestoreStorageModel
type BackupRestoreStorageModel struct {
	// Path to local file storage
	FileSpecificationBlobStorage NullableString `json:"FileSpecificationBlobStorage,omitempty"`
	BackupRestoreCloudStorage *BackupRestoreCloudStorage `json:"BackupRestoreCloudStorage,omitempty"`
	PrimaryStorage *BackupRestoreBlobStorage `json:"PrimaryStorage,omitempty"`
	SecondaryStorage *BackupRestoreBlobStorage `json:"SecondaryStorage,omitempty"`
}

// NewBackupRestoreStorageModel instantiates a new BackupRestoreStorageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreStorageModel() *BackupRestoreStorageModel {
	this := BackupRestoreStorageModel{}
	return &this
}

// NewBackupRestoreStorageModelWithDefaults instantiates a new BackupRestoreStorageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreStorageModelWithDefaults() *BackupRestoreStorageModel {
	this := BackupRestoreStorageModel{}
	return &this
}

// GetFileSpecificationBlobStorage returns the FileSpecificationBlobStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreStorageModel) GetFileSpecificationBlobStorage() string {
	if o == nil || IsNil(o.FileSpecificationBlobStorage.Get()) {
		var ret string
		return ret
	}
	return *o.FileSpecificationBlobStorage.Get()
}

// GetFileSpecificationBlobStorageOk returns a tuple with the FileSpecificationBlobStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreStorageModel) GetFileSpecificationBlobStorageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileSpecificationBlobStorage.Get(), o.FileSpecificationBlobStorage.IsSet()
}

// HasFileSpecificationBlobStorage returns a boolean if a field has been set.
func (o *BackupRestoreStorageModel) HasFileSpecificationBlobStorage() bool {
	if o != nil && o.FileSpecificationBlobStorage.IsSet() {
		return true
	}

	return false
}

// SetFileSpecificationBlobStorage gets a reference to the given NullableString and assigns it to the FileSpecificationBlobStorage field.
func (o *BackupRestoreStorageModel) SetFileSpecificationBlobStorage(v string) {
	o.FileSpecificationBlobStorage.Set(&v)
}
// SetFileSpecificationBlobStorageNil sets the value for FileSpecificationBlobStorage to be an explicit nil
func (o *BackupRestoreStorageModel) SetFileSpecificationBlobStorageNil() {
	o.FileSpecificationBlobStorage.Set(nil)
}

// UnsetFileSpecificationBlobStorage ensures that no value is present for FileSpecificationBlobStorage, not even an explicit nil
func (o *BackupRestoreStorageModel) UnsetFileSpecificationBlobStorage() {
	o.FileSpecificationBlobStorage.Unset()
}

// GetBackupRestoreCloudStorage returns the BackupRestoreCloudStorage field value if set, zero value otherwise.
func (o *BackupRestoreStorageModel) GetBackupRestoreCloudStorage() BackupRestoreCloudStorage {
	if o == nil || IsNil(o.BackupRestoreCloudStorage) {
		var ret BackupRestoreCloudStorage
		return ret
	}
	return *o.BackupRestoreCloudStorage
}

// GetBackupRestoreCloudStorageOk returns a tuple with the BackupRestoreCloudStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreStorageModel) GetBackupRestoreCloudStorageOk() (*BackupRestoreCloudStorage, bool) {
	if o == nil || IsNil(o.BackupRestoreCloudStorage) {
		return nil, false
	}
	return o.BackupRestoreCloudStorage, true
}

// HasBackupRestoreCloudStorage returns a boolean if a field has been set.
func (o *BackupRestoreStorageModel) HasBackupRestoreCloudStorage() bool {
	if o != nil && !IsNil(o.BackupRestoreCloudStorage) {
		return true
	}

	return false
}

// SetBackupRestoreCloudStorage gets a reference to the given BackupRestoreCloudStorage and assigns it to the BackupRestoreCloudStorage field.
func (o *BackupRestoreStorageModel) SetBackupRestoreCloudStorage(v BackupRestoreCloudStorage) {
	o.BackupRestoreCloudStorage = &v
}

// GetPrimaryStorage returns the PrimaryStorage field value if set, zero value otherwise.
func (o *BackupRestoreStorageModel) GetPrimaryStorage() BackupRestoreBlobStorage {
	if o == nil || IsNil(o.PrimaryStorage) {
		var ret BackupRestoreBlobStorage
		return ret
	}
	return *o.PrimaryStorage
}

// GetPrimaryStorageOk returns a tuple with the PrimaryStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreStorageModel) GetPrimaryStorageOk() (*BackupRestoreBlobStorage, bool) {
	if o == nil || IsNil(o.PrimaryStorage) {
		return nil, false
	}
	return o.PrimaryStorage, true
}

// HasPrimaryStorage returns a boolean if a field has been set.
func (o *BackupRestoreStorageModel) HasPrimaryStorage() bool {
	if o != nil && !IsNil(o.PrimaryStorage) {
		return true
	}

	return false
}

// SetPrimaryStorage gets a reference to the given BackupRestoreBlobStorage and assigns it to the PrimaryStorage field.
func (o *BackupRestoreStorageModel) SetPrimaryStorage(v BackupRestoreBlobStorage) {
	o.PrimaryStorage = &v
}

// GetSecondaryStorage returns the SecondaryStorage field value if set, zero value otherwise.
func (o *BackupRestoreStorageModel) GetSecondaryStorage() BackupRestoreBlobStorage {
	if o == nil || IsNil(o.SecondaryStorage) {
		var ret BackupRestoreBlobStorage
		return ret
	}
	return *o.SecondaryStorage
}

// GetSecondaryStorageOk returns a tuple with the SecondaryStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreStorageModel) GetSecondaryStorageOk() (*BackupRestoreBlobStorage, bool) {
	if o == nil || IsNil(o.SecondaryStorage) {
		return nil, false
	}
	return o.SecondaryStorage, true
}

// HasSecondaryStorage returns a boolean if a field has been set.
func (o *BackupRestoreStorageModel) HasSecondaryStorage() bool {
	if o != nil && !IsNil(o.SecondaryStorage) {
		return true
	}

	return false
}

// SetSecondaryStorage gets a reference to the given BackupRestoreBlobStorage and assigns it to the SecondaryStorage field.
func (o *BackupRestoreStorageModel) SetSecondaryStorage(v BackupRestoreBlobStorage) {
	o.SecondaryStorage = &v
}

func (o BackupRestoreStorageModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreStorageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FileSpecificationBlobStorage.IsSet() {
		toSerialize["FileSpecificationBlobStorage"] = o.FileSpecificationBlobStorage.Get()
	}
	if !IsNil(o.BackupRestoreCloudStorage) {
		toSerialize["BackupRestoreCloudStorage"] = o.BackupRestoreCloudStorage
	}
	if !IsNil(o.PrimaryStorage) {
		toSerialize["PrimaryStorage"] = o.PrimaryStorage
	}
	if !IsNil(o.SecondaryStorage) {
		toSerialize["SecondaryStorage"] = o.SecondaryStorage
	}
	return toSerialize, nil
}

type NullableBackupRestoreStorageModel struct {
	value *BackupRestoreStorageModel
	isSet bool
}

func (v NullableBackupRestoreStorageModel) Get() *BackupRestoreStorageModel {
	return v.value
}

func (v *NullableBackupRestoreStorageModel) Set(val *BackupRestoreStorageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreStorageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreStorageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreStorageModel(val *BackupRestoreStorageModel) *NullableBackupRestoreStorageModel {
	return &NullableBackupRestoreStorageModel{value: val, isSet: true}
}

func (v NullableBackupRestoreStorageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreStorageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


