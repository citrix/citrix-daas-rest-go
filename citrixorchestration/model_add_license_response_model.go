/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AddLicenseResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddLicenseResponseModel{}

// AddLicenseResponseModel Response model for Adding license.
type AddLicenseResponseModel struct {
	// Indicate if the license file is imported successfully.
	IsLicenseImported *bool `json:"IsLicenseImported,omitempty"`
}

// NewAddLicenseResponseModel instantiates a new AddLicenseResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddLicenseResponseModel() *AddLicenseResponseModel {
	this := AddLicenseResponseModel{}
	return &this
}

// NewAddLicenseResponseModelWithDefaults instantiates a new AddLicenseResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddLicenseResponseModelWithDefaults() *AddLicenseResponseModel {
	this := AddLicenseResponseModel{}
	return &this
}

// GetIsLicenseImported returns the IsLicenseImported field value if set, zero value otherwise.
func (o *AddLicenseResponseModel) GetIsLicenseImported() bool {
	if o == nil || IsNil(o.IsLicenseImported) {
		var ret bool
		return ret
	}
	return *o.IsLicenseImported
}

// GetIsLicenseImportedOk returns a tuple with the IsLicenseImported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddLicenseResponseModel) GetIsLicenseImportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLicenseImported) {
		return nil, false
	}
	return o.IsLicenseImported, true
}

// HasIsLicenseImported returns a boolean if a field has been set.
func (o *AddLicenseResponseModel) HasIsLicenseImported() bool {
	if o != nil && !IsNil(o.IsLicenseImported) {
		return true
	}

	return false
}

// SetIsLicenseImported gets a reference to the given bool and assigns it to the IsLicenseImported field.
func (o *AddLicenseResponseModel) SetIsLicenseImported(v bool) {
	o.IsLicenseImported = &v
}

func (o AddLicenseResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddLicenseResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsLicenseImported) {
		toSerialize["IsLicenseImported"] = o.IsLicenseImported
	}
	return toSerialize, nil
}

type NullableAddLicenseResponseModel struct {
	value *AddLicenseResponseModel
	isSet bool
}

func (v NullableAddLicenseResponseModel) Get() *AddLicenseResponseModel {
	return v.value
}

func (v *NullableAddLicenseResponseModel) Set(val *AddLicenseResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLicenseResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLicenseResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLicenseResponseModel(val *AddLicenseResponseModel) *NullableAddLicenseResponseModel {
	return &NullableAddLicenseResponseModel{value: val, isSet: true}
}

func (v NullableAddLicenseResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLicenseResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


