/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"time"
)

// checks if the EnrollmentRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentRequestModel{}

// EnrollmentRequestModel Request object for Enrollments.
type EnrollmentRequestModel struct {
	// Gets or sets the name used to more easily identify this VDA enrollment token.
	TokenName string `json:"TokenName"`
	// Gets or sets the name of the user to whom this VDA enrollment token meta data object is issued.
	IssuedToUser NullableString `json:"IssuedToUser,omitempty"`
	// Gets or sets the date this VDA enrollment token expires.
	ExpirationDate NullableTime `json:"ExpirationDate,omitempty"`
	// Gets or sets the UTC date before which this VDA enrollment token will not be valid.
	NotValidBeforeDate NullableTime `json:"NotValidBeforeDate,omitempty"`
	// Gets or sets the number of machines this VDA enrollment token allows to be added to the catalog.
	NumMachinesAllowed *int32 `json:"NumMachinesAllowed,omitempty"`
	// Gets or sets the Catalog Id that this VDA enrollment token allows machines to be added to.
	CatalogId string `json:"CatalogId"`
	// Gets or sets the HostConnectionId  which will be  used to determine how to handle power management.
	HostConnectionId NullableString `json:"HostConnectionId,omitempty"`
}

// NewEnrollmentRequestModel instantiates a new EnrollmentRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentRequestModel(tokenName string, catalogId string) *EnrollmentRequestModel {
	this := EnrollmentRequestModel{}
	this.TokenName = tokenName
	this.CatalogId = catalogId
	return &this
}

// NewEnrollmentRequestModelWithDefaults instantiates a new EnrollmentRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentRequestModelWithDefaults() *EnrollmentRequestModel {
	this := EnrollmentRequestModel{}
	return &this
}

// GetTokenName returns the TokenName field value
func (o *EnrollmentRequestModel) GetTokenName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value
// and a boolean to check if the value has been set.
func (o *EnrollmentRequestModel) GetTokenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenName, true
}

// SetTokenName sets field value
func (o *EnrollmentRequestModel) SetTokenName(v string) {
	o.TokenName = v
}

// GetIssuedToUser returns the IssuedToUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentRequestModel) GetIssuedToUser() string {
	if o == nil || IsNil(o.IssuedToUser.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedToUser.Get()
}

// GetIssuedToUserOk returns a tuple with the IssuedToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentRequestModel) GetIssuedToUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedToUser.Get(), o.IssuedToUser.IsSet()
}

// HasIssuedToUser returns a boolean if a field has been set.
func (o *EnrollmentRequestModel) HasIssuedToUser() bool {
	if o != nil && o.IssuedToUser.IsSet() {
		return true
	}

	return false
}

// SetIssuedToUser gets a reference to the given NullableString and assigns it to the IssuedToUser field.
func (o *EnrollmentRequestModel) SetIssuedToUser(v string) {
	o.IssuedToUser.Set(&v)
}
// SetIssuedToUserNil sets the value for IssuedToUser to be an explicit nil
func (o *EnrollmentRequestModel) SetIssuedToUserNil() {
	o.IssuedToUser.Set(nil)
}

// UnsetIssuedToUser ensures that no value is present for IssuedToUser, not even an explicit nil
func (o *EnrollmentRequestModel) UnsetIssuedToUser() {
	o.IssuedToUser.Unset()
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentRequestModel) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate.Get()
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentRequestModel) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpirationDate.Get(), o.ExpirationDate.IsSet()
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *EnrollmentRequestModel) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate.IsSet() {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given NullableTime and assigns it to the ExpirationDate field.
func (o *EnrollmentRequestModel) SetExpirationDate(v time.Time) {
	o.ExpirationDate.Set(&v)
}
// SetExpirationDateNil sets the value for ExpirationDate to be an explicit nil
func (o *EnrollmentRequestModel) SetExpirationDateNil() {
	o.ExpirationDate.Set(nil)
}

// UnsetExpirationDate ensures that no value is present for ExpirationDate, not even an explicit nil
func (o *EnrollmentRequestModel) UnsetExpirationDate() {
	o.ExpirationDate.Unset()
}

// GetNotValidBeforeDate returns the NotValidBeforeDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentRequestModel) GetNotValidBeforeDate() time.Time {
	if o == nil || IsNil(o.NotValidBeforeDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NotValidBeforeDate.Get()
}

// GetNotValidBeforeDateOk returns a tuple with the NotValidBeforeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentRequestModel) GetNotValidBeforeDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotValidBeforeDate.Get(), o.NotValidBeforeDate.IsSet()
}

// HasNotValidBeforeDate returns a boolean if a field has been set.
func (o *EnrollmentRequestModel) HasNotValidBeforeDate() bool {
	if o != nil && o.NotValidBeforeDate.IsSet() {
		return true
	}

	return false
}

// SetNotValidBeforeDate gets a reference to the given NullableTime and assigns it to the NotValidBeforeDate field.
func (o *EnrollmentRequestModel) SetNotValidBeforeDate(v time.Time) {
	o.NotValidBeforeDate.Set(&v)
}
// SetNotValidBeforeDateNil sets the value for NotValidBeforeDate to be an explicit nil
func (o *EnrollmentRequestModel) SetNotValidBeforeDateNil() {
	o.NotValidBeforeDate.Set(nil)
}

// UnsetNotValidBeforeDate ensures that no value is present for NotValidBeforeDate, not even an explicit nil
func (o *EnrollmentRequestModel) UnsetNotValidBeforeDate() {
	o.NotValidBeforeDate.Unset()
}

// GetNumMachinesAllowed returns the NumMachinesAllowed field value if set, zero value otherwise.
func (o *EnrollmentRequestModel) GetNumMachinesAllowed() int32 {
	if o == nil || IsNil(o.NumMachinesAllowed) {
		var ret int32
		return ret
	}
	return *o.NumMachinesAllowed
}

// GetNumMachinesAllowedOk returns a tuple with the NumMachinesAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentRequestModel) GetNumMachinesAllowedOk() (*int32, bool) {
	if o == nil || IsNil(o.NumMachinesAllowed) {
		return nil, false
	}
	return o.NumMachinesAllowed, true
}

// HasNumMachinesAllowed returns a boolean if a field has been set.
func (o *EnrollmentRequestModel) HasNumMachinesAllowed() bool {
	if o != nil && !IsNil(o.NumMachinesAllowed) {
		return true
	}

	return false
}

// SetNumMachinesAllowed gets a reference to the given int32 and assigns it to the NumMachinesAllowed field.
func (o *EnrollmentRequestModel) SetNumMachinesAllowed(v int32) {
	o.NumMachinesAllowed = &v
}

// GetCatalogId returns the CatalogId field value
func (o *EnrollmentRequestModel) GetCatalogId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value
// and a boolean to check if the value has been set.
func (o *EnrollmentRequestModel) GetCatalogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CatalogId, true
}

// SetCatalogId sets field value
func (o *EnrollmentRequestModel) SetCatalogId(v string) {
	o.CatalogId = v
}

// GetHostConnectionId returns the HostConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentRequestModel) GetHostConnectionId() string {
	if o == nil || IsNil(o.HostConnectionId.Get()) {
		var ret string
		return ret
	}
	return *o.HostConnectionId.Get()
}

// GetHostConnectionIdOk returns a tuple with the HostConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentRequestModel) GetHostConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostConnectionId.Get(), o.HostConnectionId.IsSet()
}

// HasHostConnectionId returns a boolean if a field has been set.
func (o *EnrollmentRequestModel) HasHostConnectionId() bool {
	if o != nil && o.HostConnectionId.IsSet() {
		return true
	}

	return false
}

// SetHostConnectionId gets a reference to the given NullableString and assigns it to the HostConnectionId field.
func (o *EnrollmentRequestModel) SetHostConnectionId(v string) {
	o.HostConnectionId.Set(&v)
}
// SetHostConnectionIdNil sets the value for HostConnectionId to be an explicit nil
func (o *EnrollmentRequestModel) SetHostConnectionIdNil() {
	o.HostConnectionId.Set(nil)
}

// UnsetHostConnectionId ensures that no value is present for HostConnectionId, not even an explicit nil
func (o *EnrollmentRequestModel) UnsetHostConnectionId() {
	o.HostConnectionId.Unset()
}

func (o EnrollmentRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["TokenName"] = o.TokenName
	if o.IssuedToUser.IsSet() {
		toSerialize["IssuedToUser"] = o.IssuedToUser.Get()
	}
	if o.ExpirationDate.IsSet() {
		toSerialize["ExpirationDate"] = o.ExpirationDate.Get()
	}
	if o.NotValidBeforeDate.IsSet() {
		toSerialize["NotValidBeforeDate"] = o.NotValidBeforeDate.Get()
	}
	if !IsNil(o.NumMachinesAllowed) {
		toSerialize["NumMachinesAllowed"] = o.NumMachinesAllowed
	}
	toSerialize["CatalogId"] = o.CatalogId
	if o.HostConnectionId.IsSet() {
		toSerialize["HostConnectionId"] = o.HostConnectionId.Get()
	}
	return toSerialize, nil
}

type NullableEnrollmentRequestModel struct {
	value *EnrollmentRequestModel
	isSet bool
}

func (v NullableEnrollmentRequestModel) Get() *EnrollmentRequestModel {
	return v.value
}

func (v *NullableEnrollmentRequestModel) Set(val *EnrollmentRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentRequestModel(val *EnrollmentRequestModel) *NullableEnrollmentRequestModel {
	return &NullableEnrollmentRequestModel{value: val, isSet: true}
}

func (v NullableEnrollmentRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


