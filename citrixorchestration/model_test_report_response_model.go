/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the TestReportResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestReportResponseModel{}

// TestReportResponseModel The test report object.
type TestReportResponseModel struct {
	TestType *TestType `json:"TestType,omitempty"`
	// The owner of the test report
	CreatedBy NullableString `json:"CreatedBy,omitempty"`
	// The time of the test report created
	ReportTime NullableString `json:"ReportTime,omitempty"`
	// The formatted time of the test report created RFC 3339 compatible format.
	FormattedReportTime NullableString `json:"FormattedReportTime,omitempty"`
	// The test results
	TestResults []TestReportResultModel `json:"TestResults,omitempty"`
}

// NewTestReportResponseModel instantiates a new TestReportResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestReportResponseModel() *TestReportResponseModel {
	this := TestReportResponseModel{}
	return &this
}

// NewTestReportResponseModelWithDefaults instantiates a new TestReportResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestReportResponseModelWithDefaults() *TestReportResponseModel {
	this := TestReportResponseModel{}
	return &this
}

// GetTestType returns the TestType field value if set, zero value otherwise.
func (o *TestReportResponseModel) GetTestType() TestType {
	if o == nil || IsNil(o.TestType) {
		var ret TestType
		return ret
	}
	return *o.TestType
}

// GetTestTypeOk returns a tuple with the TestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResponseModel) GetTestTypeOk() (*TestType, bool) {
	if o == nil || IsNil(o.TestType) {
		return nil, false
	}
	return o.TestType, true
}

// HasTestType returns a boolean if a field has been set.
func (o *TestReportResponseModel) HasTestType() bool {
	if o != nil && !IsNil(o.TestType) {
		return true
	}

	return false
}

// SetTestType gets a reference to the given TestType and assigns it to the TestType field.
func (o *TestReportResponseModel) SetTestType(v TestType) {
	o.TestType = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestReportResponseModel) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestReportResponseModel) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *TestReportResponseModel) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *TestReportResponseModel) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *TestReportResponseModel) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *TestReportResponseModel) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetReportTime returns the ReportTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestReportResponseModel) GetReportTime() string {
	if o == nil || IsNil(o.ReportTime.Get()) {
		var ret string
		return ret
	}
	return *o.ReportTime.Get()
}

// GetReportTimeOk returns a tuple with the ReportTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestReportResponseModel) GetReportTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReportTime.Get(), o.ReportTime.IsSet()
}

// HasReportTime returns a boolean if a field has been set.
func (o *TestReportResponseModel) HasReportTime() bool {
	if o != nil && o.ReportTime.IsSet() {
		return true
	}

	return false
}

// SetReportTime gets a reference to the given NullableString and assigns it to the ReportTime field.
func (o *TestReportResponseModel) SetReportTime(v string) {
	o.ReportTime.Set(&v)
}
// SetReportTimeNil sets the value for ReportTime to be an explicit nil
func (o *TestReportResponseModel) SetReportTimeNil() {
	o.ReportTime.Set(nil)
}

// UnsetReportTime ensures that no value is present for ReportTime, not even an explicit nil
func (o *TestReportResponseModel) UnsetReportTime() {
	o.ReportTime.Unset()
}

// GetFormattedReportTime returns the FormattedReportTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestReportResponseModel) GetFormattedReportTime() string {
	if o == nil || IsNil(o.FormattedReportTime.Get()) {
		var ret string
		return ret
	}
	return *o.FormattedReportTime.Get()
}

// GetFormattedReportTimeOk returns a tuple with the FormattedReportTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestReportResponseModel) GetFormattedReportTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedReportTime.Get(), o.FormattedReportTime.IsSet()
}

// HasFormattedReportTime returns a boolean if a field has been set.
func (o *TestReportResponseModel) HasFormattedReportTime() bool {
	if o != nil && o.FormattedReportTime.IsSet() {
		return true
	}

	return false
}

// SetFormattedReportTime gets a reference to the given NullableString and assigns it to the FormattedReportTime field.
func (o *TestReportResponseModel) SetFormattedReportTime(v string) {
	o.FormattedReportTime.Set(&v)
}
// SetFormattedReportTimeNil sets the value for FormattedReportTime to be an explicit nil
func (o *TestReportResponseModel) SetFormattedReportTimeNil() {
	o.FormattedReportTime.Set(nil)
}

// UnsetFormattedReportTime ensures that no value is present for FormattedReportTime, not even an explicit nil
func (o *TestReportResponseModel) UnsetFormattedReportTime() {
	o.FormattedReportTime.Unset()
}

// GetTestResults returns the TestResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestReportResponseModel) GetTestResults() []TestReportResultModel {
	if o == nil {
		var ret []TestReportResultModel
		return ret
	}
	return o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestReportResponseModel) GetTestResultsOk() ([]TestReportResultModel, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *TestReportResponseModel) HasTestResults() bool {
	if o != nil && IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given []TestReportResultModel and assigns it to the TestResults field.
func (o *TestReportResponseModel) SetTestResults(v []TestReportResultModel) {
	o.TestResults = v
}

func (o TestReportResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestReportResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TestType) {
		toSerialize["TestType"] = o.TestType
	}
	if o.CreatedBy.IsSet() {
		toSerialize["CreatedBy"] = o.CreatedBy.Get()
	}
	if o.ReportTime.IsSet() {
		toSerialize["ReportTime"] = o.ReportTime.Get()
	}
	if o.FormattedReportTime.IsSet() {
		toSerialize["FormattedReportTime"] = o.FormattedReportTime.Get()
	}
	if o.TestResults != nil {
		toSerialize["TestResults"] = o.TestResults
	}
	return toSerialize, nil
}

type NullableTestReportResponseModel struct {
	value *TestReportResponseModel
	isSet bool
}

func (v NullableTestReportResponseModel) Get() *TestReportResponseModel {
	return v.value
}

func (v *NullableTestReportResponseModel) Set(val *TestReportResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestReportResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestReportResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestReportResponseModel(val *TestReportResponseModel) *NullableTestReportResponseModel {
	return &NullableTestReportResponseModel{value: val, isSet: true}
}

func (v NullableTestReportResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestReportResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


