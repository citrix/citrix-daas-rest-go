/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityUpdateUserRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityUpdateUserRequestModel{}

// IdentityUpdateUserRequestModel Update a user account via Identity service
type IdentityUpdateUserRequestModel struct {
	// Old account password, used when changing the account password.
	OldPassword NullableString `json:"OldPassword,omitempty"`
	// New account password, used when changing the account password.
	NewPassword NullableString `json:"NewPassword,omitempty"`
	AccountPasswordFormat *IdentityPasswordFormat `json:"AccountPasswordFormat,omitempty"`
}

// NewIdentityUpdateUserRequestModel instantiates a new IdentityUpdateUserRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUpdateUserRequestModel() *IdentityUpdateUserRequestModel {
	this := IdentityUpdateUserRequestModel{}
	return &this
}

// NewIdentityUpdateUserRequestModelWithDefaults instantiates a new IdentityUpdateUserRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUpdateUserRequestModelWithDefaults() *IdentityUpdateUserRequestModel {
	this := IdentityUpdateUserRequestModel{}
	return &this
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityUpdateUserRequestModel) GetOldPassword() string {
	if o == nil || IsNil(o.OldPassword.Get()) {
		var ret string
		return ret
	}
	return *o.OldPassword.Get()
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityUpdateUserRequestModel) GetOldPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldPassword.Get(), o.OldPassword.IsSet()
}

// HasOldPassword returns a boolean if a field has been set.
func (o *IdentityUpdateUserRequestModel) HasOldPassword() bool {
	if o != nil && o.OldPassword.IsSet() {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given NullableString and assigns it to the OldPassword field.
func (o *IdentityUpdateUserRequestModel) SetOldPassword(v string) {
	o.OldPassword.Set(&v)
}
// SetOldPasswordNil sets the value for OldPassword to be an explicit nil
func (o *IdentityUpdateUserRequestModel) SetOldPasswordNil() {
	o.OldPassword.Set(nil)
}

// UnsetOldPassword ensures that no value is present for OldPassword, not even an explicit nil
func (o *IdentityUpdateUserRequestModel) UnsetOldPassword() {
	o.OldPassword.Unset()
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityUpdateUserRequestModel) GetNewPassword() string {
	if o == nil || IsNil(o.NewPassword.Get()) {
		var ret string
		return ret
	}
	return *o.NewPassword.Get()
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityUpdateUserRequestModel) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewPassword.Get(), o.NewPassword.IsSet()
}

// HasNewPassword returns a boolean if a field has been set.
func (o *IdentityUpdateUserRequestModel) HasNewPassword() bool {
	if o != nil && o.NewPassword.IsSet() {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given NullableString and assigns it to the NewPassword field.
func (o *IdentityUpdateUserRequestModel) SetNewPassword(v string) {
	o.NewPassword.Set(&v)
}
// SetNewPasswordNil sets the value for NewPassword to be an explicit nil
func (o *IdentityUpdateUserRequestModel) SetNewPasswordNil() {
	o.NewPassword.Set(nil)
}

// UnsetNewPassword ensures that no value is present for NewPassword, not even an explicit nil
func (o *IdentityUpdateUserRequestModel) UnsetNewPassword() {
	o.NewPassword.Unset()
}

// GetAccountPasswordFormat returns the AccountPasswordFormat field value if set, zero value otherwise.
func (o *IdentityUpdateUserRequestModel) GetAccountPasswordFormat() IdentityPasswordFormat {
	if o == nil || IsNil(o.AccountPasswordFormat) {
		var ret IdentityPasswordFormat
		return ret
	}
	return *o.AccountPasswordFormat
}

// GetAccountPasswordFormatOk returns a tuple with the AccountPasswordFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUpdateUserRequestModel) GetAccountPasswordFormatOk() (*IdentityPasswordFormat, bool) {
	if o == nil || IsNil(o.AccountPasswordFormat) {
		return nil, false
	}
	return o.AccountPasswordFormat, true
}

// HasAccountPasswordFormat returns a boolean if a field has been set.
func (o *IdentityUpdateUserRequestModel) HasAccountPasswordFormat() bool {
	if o != nil && !IsNil(o.AccountPasswordFormat) {
		return true
	}

	return false
}

// SetAccountPasswordFormat gets a reference to the given IdentityPasswordFormat and assigns it to the AccountPasswordFormat field.
func (o *IdentityUpdateUserRequestModel) SetAccountPasswordFormat(v IdentityPasswordFormat) {
	o.AccountPasswordFormat = &v
}

func (o IdentityUpdateUserRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityUpdateUserRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OldPassword.IsSet() {
		toSerialize["OldPassword"] = o.OldPassword.Get()
	}
	if o.NewPassword.IsSet() {
		toSerialize["NewPassword"] = o.NewPassword.Get()
	}
	if !IsNil(o.AccountPasswordFormat) {
		toSerialize["AccountPasswordFormat"] = o.AccountPasswordFormat
	}
	return toSerialize, nil
}

type NullableIdentityUpdateUserRequestModel struct {
	value *IdentityUpdateUserRequestModel
	isSet bool
}

func (v NullableIdentityUpdateUserRequestModel) Get() *IdentityUpdateUserRequestModel {
	return v.value
}

func (v *NullableIdentityUpdateUserRequestModel) Set(val *IdentityUpdateUserRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUpdateUserRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUpdateUserRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUpdateUserRequestModel(val *IdentityUpdateUserRequestModel) *NullableIdentityUpdateUserRequestModel {
	return &NullableIdentityUpdateUserRequestModel{value: val, isSet: true}
}

func (v NullableIdentityUpdateUserRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUpdateUserRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


