openapi: 3.0.1
info:
  title: Citrix Virtual Apps and Desktops REST API TECHPREVIEW
  version: techpreview
servers:
- url: /citrix/orchestration/api
security:
- BearerAuth: []
paths:
  /techpreview/{customerid}/{siteid}/$batch:
    post:
      description: |-
        Perform a batch request.  This allows the client to submit more than one request
        at a time.  The requests may be performed in parallel and may not have any
        dependencies between them.  The result will be returned once all requests have
        completed.
      operationId: BatchTP_DoBatchRequest
      parameters:
      - description: The customer Id.
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site Id.
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the batch request will be processed as a background\
          \ task.\nThis is recommended, since a batch request that takes more than\n\
          90 seconds to execute may time out, and results may be lost.\nThe task will\
          \ have JobType Batch.\nThe SubJobs will correspond to the\nitems in the\
          \ batch request.\nWhen the task is complete it will redirect to\nGetJobResults.\n\
          The job's Parameters will contain no properties.\n            "
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequestModel'
        description: List of requests that the server should perform in parallel.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseModel'
          description: "Batch response model.  Responses may come in any order within\n\
            the response model, and should be correlated with requests via\nthe Reference\
            \ property.\n            "
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform a batch request.
      tags:
      - BatchTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/$GetHypervisor:
    post:
      operationId: HypervisorsTP_GetHypervisorWithoutConnection
      parameters:
      - description: 'Async request to get the hypervisor. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
        description: Details of how to connect to the hypervisor to enumerate resources
          from it.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorDetailResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
          x-expectedSchemas:
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailAWSResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailAzureResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailGCPResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailWOLResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailTraditionalResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailOciResponseModel'
          - description: 'HypervisorDetailResponseModel derived hypervisor instance. '
            schema:
              $ref: '#/definitions/HypervisorDetailResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a hypervisor details without creating persistent connection.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: connectionDetail
  /techpreview/{customerid}/{siteid}/About:
    get:
      operationId: AboutTP_GetAbout
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutModel'
          description: About info.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get About info of this Orchestration instance.
      tags:
      - AboutTP
  /techpreview/{customerid}/{siteid}/Admin/Administrators:
    get:
      description: Get administrators in the site.
      operationId: AdminTP_GetAdminAdministrators
      parameters:
      - description: |-
          The max number of administrators returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the administrators will be fetched as a background task.
          The task will have the JobTypeGetAdminAdministrators
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: Collection of administrators in the site.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators.
      tags:
      - AdminTP
    post:
      description: "Create a new administrator.\n            \nAdministrator objects\
        \ are used to determine what rights, and\ntherefore what permissions a particular\
        \ user has through the various\nSDKs and consoles of the site.\n         \
        \   \nWhen the Enabled flag of an administrator is set to `false`, any\nrights\
        \ of the administrator are ignored by the system when\nperforming permission\
        \ checks.\n            \nOn-prem only."
      operationId: AdminTP_CreateAdminAdministrator
      parameters:
      - description: |-
          If `true`, the admin will be created as a background task.  The task
          will have JobType CreateAdmin.  When the task
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminAdministratorRequestModel'
        description: Details of the admin to create.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new administrator.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Administrators/$PreviewReport:
    post:
      operationId: AdminTP_PreviewAdministratorReport
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminAdministratorRequestModel'
        description: The administrator creation request to preview.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorReportResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get preview report of the administrator.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Administrators/{name}/NamePreview:
    get:
      operationId: AdminTP_GetAdministratorNamePreview
      parameters:
      - description: "Example: domain\\username or domain\\group"
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Ignore name format check. If true,
                      will only check whether AD account available and not conflicting to existing administrators.
                      Note, invalid name will still be reported, only report error message will be changed.
        in: query
        name: ignoreFormatCheck
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorNamePreviewResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get preview report of the administrator user name.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Administrators/{nameOrId}:
    delete:
      operationId: AdminTP_DeleteAdminAdministrator
      parameters:
      - description: Name or Id of the admin to delete.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the admin will be deleted as a background task.
          The task will have JobType DeleteAdmin.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an administrator.
      tags:
      - AdminTP
    get:
      operationId: AdminTP_GetAdminAdministrator
      parameters:
      - description: "Name or id of the administrator.\n             May be specified\
          \ as:\n            \n             * The SID of the admin user or group.\
          \  Note: in directory types\n             other than Active Directory, the\
          \ SID is a\n             computed property, and is not related to any representation\
          \ of that\n             user within Active Directory.  However it can still\
          \ be useful if the\n             user already has a generated SID; for example,\
          \ if copying users from\n             one object to another.\n         \
          \   \n             * `Domain\\User` format.  This implies the directory\
          \ type\n             Active Directory. If the Domain\\User is not\n    \
          \         unique across AD Forests, the call will fail with an ambiguous\
          \ name\n             error, status code 400.\n            \n           \
          \  * `Forest\\Domain\\User` format.  This implies the directory type\n \
          \            Active Directory. This is the preferred form\n            \
          \ of specifying an Active Directory user by name, as the name is\n     \
          \        guaranteed to be unambiguous.\n             "
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModel'
          description: Response Model of this administrator.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single administrator
      tags:
      - AdminTP
    patch:
      description: Update an administrator.
      operationId: AdminTP_UpdateAdminAdministrator
      parameters:
      - description: Name of the admin to update.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the admin will be updated as a background task.  The task
          will have JobType UpdateAdmin.  When the task
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminAdministratorRequestModel'
        description: Updated details of the admin.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an administrator.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Administrators/{nameOrId}/PreviewDeleteConsequence:
    get:
      operationId: AdminTP_GetDeleteAdministratorConsequence
      parameters:
      - description: Name or Id of the admin to delete.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorDeleteConcequenceResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Preview the consequence of deleting an administrator.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Administrators/{nameOrId}/Report:
    get:
      operationId: AdminTP_GetAdministratorReport
      parameters:
      - description: Name or Id of the admin to report.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorReportResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get report of the administrator.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/EffectiveRights:
    get:
      operationId: AdminTP_GetAdminEffectiveRights
      parameters:
      - description: |-
          The max number of admin rights returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Optional ETag response header that was returned on the previous
          query.
        in: header
        name: If-None-Match
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorRightResponseModelCollection'
          description: List of admin rights.
          headers:
            ETag:
              description: A value that is guaranteed to change if the entity may
                change.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the effective rights of the current user.  This is the union of
        all rights of the enabled administrators that the current user matches,
        taking into account group membership.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/PermissionGroups:
    get:
      description: "Get all permission groups.\n            \nPermission groups are\
        \ primarily used to store the localized name for\na group of permissions."
      operationId: AdminTP_GetPredefinedPermissionGroups
      parameters:
      - description: |-
          The max number of predefined permission groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedPermissionGroupResponseModelCollection'
          description: List of permission groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all permission groups.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/PermissionGroups/{id}/Permissions:
    get:
      description: "Get all permissions for a permission group.\n            \nPermission\
        \ groups are primarily used to store the localized name for\na group of permissions."
      operationId: AdminTP_GetPredefinedPermissionsForGroups
      parameters:
      - description: ID of the admin permission group to query.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of predefined permissions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedPermissionResponseModelCollection'
          description: The list of permissions in a permission group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all permissions for a permission group.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Permissions:
    get:
      operationId: AdminTP_GetPredefinedPermissions
      parameters:
      - description: |-
          The max number of predefined permissions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedPermissionResponseModelCollection'
          description: List of predefined permissions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all predefined permissions.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Roles:
    get:
      description: Gets all the admin roles defined in the site.
      operationId: AdminTP_GetAdminRoles
      parameters:
      - description: |-
          The max number of admin roles returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponseModelCollection'
          description: List of admin roles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get admin roles.
      tags:
      - AdminTP
    post:
      description: |-
        Create a new custom admin role.  Roles represent a job function,
        such as 'help desk administrator', and contain a list of permissions
        that are required to perform that job function.

        Roles and Scopes combine when assigned to admin, defining the Rights
        that the admin has within the site.
      operationId: AdminTP_CreateAdminRole
      parameters:
      - description: |-
          If `true`, the admin role will be created as a background task.  The
          task will have JobType CreateAdminRole.  When
          the task is complete it will redirect to
          GetAdminRole.
          The job Parameters will contain properties:

          * _Name_ - Name of the admin role being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRoleRequestModel'
        description: Details of the admin role to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new admin role.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Roles/{name}:
    head:
      description: |-
        If the name is found to be available, this returns 404 Not Found. If the name
        is not available (i.e. an application group with the name was found), this
        returns 204 No Content.
      operationId: AdminTP_CheckRoleNameExists
      parameters:
      - description: Name of the role.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of role by name.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Roles/{nameOrId}:
    delete:
      description: |-
        Delete an admin role.

        You cannot remove built-in roles.

        An error will be produced if the role being removed is currently
        assigned to an administrator unless you specify the `force` query
        parameter.  When `force` is specified, any rights that reference the
        role are also removed.
      operationId: AdminTP_DeleteAdminRole
      parameters:
      - description: Name or ID of the admin role to delete.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Allow removal of roles that are still in use.
        in: query
        name: force
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          If `true`, the admin role will be deleted as a background task.  The
          task will have JobType DeleteAdminRole.  When
          * _NameOrId_ - Name or ID of the admin role being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an admin role.
      tags:
      - AdminTP
    get:
      description: Gets the details for a single admin role within the site.
      operationId: AdminTP_GetAdminRole
      parameters:
      - description: Name or ID of the admin role.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponseModel'
          description: The admin role details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a single admin role.
      tags:
      - AdminTP
    patch:
      description: |-
        Update an admin role.  An admin role is a collection of permissions,
        typically enabling an admin persona.  For example an admin may need
        to both read and control sessions in order to perform a help desk
        function.
        Roles and Scopes combine when assigned to admin, defining the Rights
        that the admin has within the site.

        You cannot modify built-in roles.
      operationId: AdminTP_UpdateAdminRole
      parameters:
      - description: Name or ID of the admin role to update.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the admin scope will be updated as a background task.
          The task will have JobType UpdateAdminRole.
          When the task is complete it will redirect to
          GetAdminRole.
          The job Parameters will contain properties:
          * _NameOrId_ - Name or ID of the admin role being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAdminRoleRequestModel'
        description: Updated details of the admin role.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an admin role.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Scopes:
    get:
      description: Gets all the admin scopes defined in the site.
      operationId: AdminTP_GetAdminScopes
      parameters:
      - description: |-
          The max number of admin scopes returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeResponseModelCollection'
          description: List of admin scopes.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get admin scopes.
      tags:
      - AdminTP
    post:
      description: "A scope represents a collection of objects.  Scopes are used to\n\
        \            group objects in a way that is relevant to the organization;\
        \ for\n            example, the set of delivery groups used by the Sales team.\n\
        \            \n            To assign a scope to an administrator, combine\
        \ it with a role and\n            then assign this pair (also known as a 'right')\
        \ to an administrator."
      operationId: AdminTP_CreateAdminScope
      parameters:
      - description: |-
          If `true`, the admin scope will be created as a background task.
          The task will have JobType CreateAdminScope.
          When the task is complete it will redirect to
          GetAdminScopes.
          The job Parameters will contain properties:

          * _Name_ - Name of the admin scope being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminScopeRequestModel'
        description: Details of the admin scope to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new admin scope.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Scopes/{name}:
    head:
      description: |-
        If the name is found to be available, this returns 404 Not Found. If the name
        is not available (i.e. an application group with the name was found), this
        returns 204 No Content.
      operationId: AdminTP_CheckScopeNameExists
      parameters:
      - description: Name of the scope.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of scope by name.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/Admin/Scopes/{nameOrId}:
    delete:
      description: |-
        You cannot remove the built-in `All` scope.

        An error will be produced if the scope being removed is currently
        assigned to an administrator unless you specify the `force` query
        parameter.  When `force` is specified, any rights that reference the
        scope are also removed.
      operationId: AdminTP_DeleteAdminScope
      parameters:
      - description: Name or ID of the admin scope to delete.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Allow removal of scopes that are still in use.
        in: query
        name: force
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          If `true`, the admin scope will be deleted as a background task.
          The task will have JobType DeleteAdminScope.
          When the task is complete it will redirect to
          GetAdminScopes.
          The job Parameters will contain properties:

          * _Name_ - Name of the admin scope being deleted.
          * _Id_ - ID of the admin scope being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an admin scope.
      tags:
      - AdminTP
    get:
      description: Gets the details for a single admin scope within the site.
      operationId: AdminTP_GetAdminScope
      parameters:
      - description: Name or ID of the admin scope.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeResponseModel'
          description: The admin scope details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a single admin scope.
      tags:
      - AdminTP
    patch:
      description: |-
        Update an admin scope.  You cannot modify the built-in `All` scope.

        Changes to an admin scope apply to all admins to whom the scope is
        assigned.
      operationId: AdminTP_UpdateAdminScope
      parameters:
      - description: Name or ID of the admin scope to update.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the admin scope will be updated as a background task.
          The task will have JobType UpdateAdminScope.
          When the task is complete it will redirect to
          GetAdminScope.
          The job Parameters will contain properties:

          * _Name_ - Name of the admin scope being updated.
          * _Id_ - ID of the admin scope being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAdminScopeRequestModel'
        description: Updated details of the admin scope.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an admin scope.
      tags:
      - AdminTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Admin/Scopes/{nameOrId}/ScopedObjects:
    get:
      description: Gets all objects in an admin scope.
      operationId: AdminTP_GetAdminScopedObjects
      parameters:
      - description: Name or ID of the admin scope.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of objects returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedObjectResponseModelCollection'
          description: List of scoped objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the objects in an admin scope.
      tags:
      - AdminTP
  /techpreview/{customerid}/{siteid}/AdminFolders:
    get:
      description: Gets all admin folders within the site.
      operationId: AdminFoldersTP_GetAdminFolders
      parameters:
      - description: |-
          If `true`, the admin folders will be fetched as a background task.
          The task will have JobType GetAdminFolders.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          The max number of admin folders returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFolderResponseModelCollection'
          description: List of admin folders.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get admin folders.
      tags:
      - AdminFoldersTP
    post:
      description: Create an admin folder.
      operationId: AdminFoldersTP_CreateAdminFolder
      parameters:
      - description: |-
          If `true`, the admin folder will be created as a background task.
          The task will have JobType "JobType.CreateAdminFolder".
          When the task is complete it will redirect to
          "GetAdminFolder(string)"
          The job Parameters will contain properties:

          * _Name_ - Name of the folder being created.
          * _Path_ - Path to the folder being created.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminFolderRequestModel'
        description: Details of the admin folder to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFolderResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an admin folder
      tags:
      - AdminFoldersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AdminFolders/{pathOrId}:
    delete:
      description: |-
        Delete an admin folder. An admin folder is not allowed to be deleted
        when it contains any objects.
      operationId: AdminFoldersTP_DeleteAdminFolder
      parameters:
      - description: Name or ID of the admin folder to delete.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Identify which object should be removed from the adminFolder.\n\
          If set to null, then the admin folder will be deleted if it hosts no object\n\
          and no folder metaData with keys AdminFolderObjectIdentifier.\n\nIf set\
          \ to Applications, the applications in the folder will be deleted. The folder\n\
          will be deleted if it do not host other objects(MachineCatalogs, or DeliveryGroup,\n\
          or ApplicationGroups) and no folder metaData with keysAdminFolderObjectIdentifier.;\n\
          If the folder hosts any other objects, then this folder will not be deleted,\n\
          folder metadata with key ContainsApplications will be removed.\n\nIf set\
          \ to MachineCatalogs and this folder still hosts some MachineCatalogs, then\n\
          this folder is not allowed to be deleted; If this folder do not host any\
          \ MachineCatalogs\nbut host other objects(Applications, DeliveryGroups,\
          \ ApplicationGroups), the folder\nmetaData with key ContainsMachineCatalogs\n\
          will be removed; If this folder do not host any objects and no folder metaData\
          \ with\nkeys AdminFolderObjectIdentifier, the folder will be deleted.\n\
          \            \nIf set to DeliveryGroups or ApplicationGroups, have the same\
          \ behavior as set to MachineCatalogs."
        explode: false
        in: query
        name: objectsToRemove
        schema:
          items:
            $ref: '#/components/schemas/AdminFolderObjects'
          nullable: true
          type: array
        style: form
      - description: |-
          If `true`, the admin folder will be deleted as a background task.
          The task will have JobType DeleteAdminFolder.
          When the task is complete it will redirect to GetAdminFolders.
          The job's Parameters will contain properties:

          * _Id_ - ID of the admin folder being deleted,
          * _Path_ - Path of the admin folder being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an admin folder.
      tags:
      - AdminFoldersTP
    get:
      description: Gets the details of a single admin folder.
      operationId: AdminFoldersTP_GetAdminFolder
      parameters:
      - description: Path (URL-encoded) or ID of the admin folder.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFolderResponseModel'
          description: Admin folder details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a single admin folder.
      tags:
      - AdminFoldersTP
    patch:
      description: Update an admin folder's properties.
      operationId: AdminFoldersTP_UpdateAdminFolder
      parameters:
      - description: Path or ID of the admin folder path to update.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the admin folder will be updated as a background task.
          The task will have JobType UpdateAdminFolder.
          When the task is complete it will redirect to
          GetAdminFolder.
          The job's Parameters will contain properties:

          * _Id_ - ID of the admin folder being updated.
          * _Path_ - Path of the admin folder being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAdminFolderRequestModel'
        description: Details of the admin folder to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFolderResponseModel'
          description: The async job or the admin folder.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an admin folder.
      tags:
      - AdminFoldersTP
      x-codegen-request-body-name: folder
  /techpreview/{customerid}/{siteid}/AdminFolders/{pathOrId}/Applications:
    get:
      description: Get a list of all applications in an admin folder.
      operationId: AdminFoldersTP_GetAdminFolderApplications
      parameters:
      - description: Path (URL-encoded) or ID of the admin folder.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, Fetch applications under admin folder will be a background task.
          The task will have JobType GetAdminFolderApplications
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications in the folder.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the applications in an admin folder.
      tags:
      - AdminFoldersTP
  /techpreview/{customerid}/{siteid}/AdminFolders/{pathOrId}/MachineCatalogs:
    get:
      description: Get a list of all machineCatalogs in an admin folder.
      operationId: AdminFoldersTP_GetAdminFolderMachineCatalogs
      parameters:
      - description: Path (URL-encoded) or ID of the admin folder.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          default: 2147483647
          format: int32
          nullable: false
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, Fetch machineCatalogs under admin folder will be a background task.
          The task will have JobType GetAdminFolderMachineCatalogs
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogResponseModelCollection'
          description: List of machineCatalogs in the folder.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machineCatalogs in an admin folder.
      tags:
      - AdminFoldersTP
  /techpreview/{customerid}/{siteid}/AppLibPackageDiscovery/Profiles:
    get:
      operationId: AppLibPackageDiscoveryTP_GetAppLibPackageDiscoveryProfiles
      parameters:
      - description: |-
          If `true`, the appLib package discovery profiles will be fetched as a background task.
          The task will have JobType GetAppLibPackageDiscoveryProfiles.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryProfileResponseModelCollection'
          description: A list of appLib package discovery profiles.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a list of AppLib Package Discovery profiles.
      tags:
      - AppLibPackageDiscoveryTP
    post:
      operationId: AppLibPackageDiscoveryTP_CreateAppLibPackageDiscoveryProfile
      parameters:
      - description: |-
          If `true`, the appLib package discovery profile will be created as a background task.
          The task will have JobType CreateAppLibPackageDiscoveryProfile.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppLibPackageDiscoveryProfileRequestModel'
        description: Request model to create a new AppLib package discovery profile.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryProfileResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an AppLib Package Discovery profile.
      tags:
      - AppLibPackageDiscoveryTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppLibPackageDiscovery/Profiles/{uid}:
    delete:
      operationId: AppLibPackageDiscoveryTP_RemoveAppLibPackageDiscoveryProfile
      parameters:
      - description: Uid of the appLib package discovery profile that need to be removed.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: |-
          If `true`, the appLib package discovery profile will be removed as a background task.
          The task will have JobType RemoveAppLibPackageDiscoveryProfile.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove an AppLib Package Discovery profile.
      tags:
      - AppLibPackageDiscoveryTP
    get:
      operationId: AppLibPackageDiscoveryTP_GetAppLibPackageDiscoveryProfile
      parameters:
      - description: Uid of the appLib package discovery profile that need to be fetched.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: |-
          If `true`, the appLib package discovery profile will be fetched as a background task.
          The task will have JobType GetAppLibPackageDiscoveryProfile.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryProfileResponseModel'
          description: One appLib package discovery profile details.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of an AppLib Package Discovery profile.
      tags:
      - AppLibPackageDiscoveryTP
    patch:
      operationId: AppLibPackageDiscoveryTP_UpdateAppLibPackageDiscoveryProfile
      parameters:
      - description: Uid of the appLib package discovery profile that need to be fetched.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: |-
          If `true`, the appLib package discovery profile will be fetched as a background task.
          The task will have JobType UpdateAppLibPackageDiscoveryProfile.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAppLibPackageDiscoveryProfileRequestModel'
        description: Request model to update a new AppLib package discovery profile.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the specified AppLib Package Discovery profile.
      tags:
      - AppLibPackageDiscoveryTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppLibPackageDiscovery/Profiles/{uid}/LatestSession:
    get:
      operationId: AppLibPackageDiscoveryTP_GetAppLibPackageDiscoveryLatestSessionByProfileId
      parameters:
      - description: The profile id.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryResponseModel'
          description: The latest session for the specified profile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the latest AppLib Package Discovery session for the specified profile
        id.
      tags:
      - AppLibPackageDiscoveryTP
  /techpreview/{customerid}/{siteid}/AppLibPackageDiscovery/Sessions:
    get:
      operationId: AppLibPackageDiscoveryTP_GetAppLibPackageDiscoverySessions
      parameters:
      - description: |-
          If `true`, the appLib package discovery sessions will be fetched as a background task.
          The task will have JobType GetAppLibPackageDiscoveries.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryResponseModelCollection'
          description: A list of AppLib package discovery sessions.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a list of AppLib Package Discovery sessions.
      tags:
      - AppLibPackageDiscoveryTP
    post:
      operationId: AppLibPackageDiscoveryTP_CreateAppLibPackageDiscovery
      parameters:
      - description: |-
          If `true`, the appLib package discovery session will be created as a background task.
          The task will have jobType CreateAppLibPackageDiscovery>
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppLibPackageDiscoveryRequestModel'
        description: Request model to create a new AppLib package discovery session.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create AppLib Package Discovery session
      tags:
      - AppLibPackageDiscoveryTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppLibPackageDiscovery/Sessions/{id}:
    get:
      operationId: AppLibPackageDiscoveryTP_GetAppLibPackageDiscovery
      parameters:
      - description: Guid of the applib package discovery session that need to be
          fetched.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the appLib package discovery session will be created as a background task.
          The task will have jobType GetAppLibPackageDiscovery>
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppLibPackageDiscoveryResponseModel'
          description: ""
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of an AppLib Package Discovery session.
      tags:
      - AppLibPackageDiscoveryTP
  /techpreview/{customerid}/{siteid}/ApplicationFolders:
    get:
      description: Gets all application folders within the site.
      operationId: ApplicationFoldersTP_GetApplicationFolders
      parameters:
      - description: |-
          If `true`, the application folders will be fetched as a background task.
          The task will have JobType GetApplicationFolders.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFolderResponseModelCollection'
          description: List of application folders.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get application folders.
      tags:
      - ApplicationFoldersTP
    post:
      description: Create an application folder.
      operationId: ApplicationFoldersTP_CreateApplicationFolder
      parameters:
      - description: |-
          If `true`, the application folder will be created as a background task.
          The task will have JobType "JobType.CreateApplicationFolder".
          When the task is complete it will redirect to
          "GetApplicationFolder(string)"
          The job Parameters will contain properties:

          * _Name_ - Name of the folder being created.
          * _Path_ - Path to the folder being created.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationFolderRequestModel'
        description: Details of the application folder to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFolderResponseModel'
          description: Application folder details.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an application folder
      tags:
      - ApplicationFoldersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/ApplicationFolders/{path}:
    head:
      description: Check for the existence of an application folder by path.
      operationId: ApplicationFoldersTP_CheckApplicationFolderPathExists
      parameters:
      - description: Path of the application folder.
        in: path
        name: path
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of an application folder by path.
      tags:
      - ApplicationFoldersTP
  /techpreview/{customerid}/{siteid}/ApplicationFolders/{pathOrId}:
    delete:
      description: |-
        Delete an application folder.  Any applications within the application folder
        will also be deleted.
      operationId: ApplicationFoldersTP_DeleteApplicationFolder
      parameters:
      - description: Name or ID of the application folder to delete.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application folder (and associated objects) will be
          deleted as a background task.
          The task will have JobType DeleteApplicationFolder.
          When the task is complete it will redirect to
          GetApplicationFolders.
          The job's Parameters will contain properties:

          * _Id_ - ID of the application folder being deleted,
          * _Path_ - Path of the application folder being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an application folder.
      tags:
      - ApplicationFoldersTP
    get:
      description: Gets the details of a single application folder.
      operationId: ApplicationFoldersTP_GetApplicationFolder
      parameters:
      - description: Path (URL-encoded) or ID of the application folder.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFolderResponseModel'
          description: Application folder details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a single application folder.
      tags:
      - ApplicationFoldersTP
    patch:
      description: Update an application folder's properties.
      operationId: ApplicationFoldersTP_UpdateApplicationFolder
      parameters:
      - description: Path or ID of the application path to update.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application folder will be updated as a background task.
          The task will have JobType UpdateApplicationFolder.
          When the task is complete it will redirect to
          GetApplicationFolder.
          The job's Parameters will contain properties:

          * _Id_ - ID of the application folder being updated.
          * _Path_ - Path of the application folder being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditApplicationFolderRequestModel'
        description: Details of the application folder to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFolderResponseModel'
          description: The async job or the applications folder.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an application folder.
      tags:
      - ApplicationFoldersTP
      x-codegen-request-body-name: folder
  /techpreview/{customerid}/{siteid}/ApplicationFolders/{pathOrId}/Applications:
    get:
      description: Get a list of all applications in an application folder.
      operationId: ApplicationFoldersTP_GetApplicationFolderApplications
      parameters:
      - description: Path (URL-encoded) or ID of the application folder.
        in: path
        name: pathOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, Fetch applications under application folder will be a background task.
          The task will have JobType GetApplicationFolderApplications
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications in the folder.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the applications in an application folder.
      tags:
      - ApplicationFoldersTP
  /techpreview/{customerid}/{siteid}/ApplicationGroups:
    get:
      description: Get all application groups in the site.
      operationId: ApplicationGroupsTP_GetApplicationGroups
      parameters:
      - description: |-
          Optional folder path (URL-encoded) or ID.  If not specified, all applications will
          be returned from all folders.
        in: query
        name: adminFolder
        schema:
          nullable: true
          type: string
      - description: |-
          The max number of application groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional. A filter string containing object fields requested to be returned,
          the requested fields are separated by comma','
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the application groups will be fetched as a background task.
          The task will have JobType GetApplicationGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupResponseModelCollection'
          description: List of application groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get application groups.
      tags:
      - ApplicationGroupsTP
    post:
      operationId: ApplicationGroupsTP_CreateApplicationGroup
      parameters:
      - description: |-
          If `true`, the application group (and associated objects) will be created as a
          background task.
          The task will have JobType CreateApplicationGroup.
          When the task is complete it will redirect to
          GetApplicationGroup.
          The job's Parameters will contain properties:
          * _Name_ - Name of the application group being created.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationGroupRequestModel'
        description: Details of the application group to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupDetailResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an application group.
      tags:
      - ApplicationGroupsTP
      x-codegen-request-body-name: appGroup
  /techpreview/{customerid}/{siteid}/ApplicationGroups/$checkNameExists:
    post:
      description: |-
        If the name is found to be available, this returns 404 Not Found. If the name
        is not available (i.e. an application group with the name was found), this
        returns 204 No Content.
      operationId: ApplicationGroupsTP_TestApplicationGroupExists
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupNameCheckRequestModel'
        description: Request model of application group name.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Test the existence of an application group by name.
      tags:
      - ApplicationGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{name}:
    head:
      description: |-
        If the name is found to be available, this returns 404 Not Found. If the name
        is not available (i.e. an application group with the name was found), this
        returns 204 No Content.
      operationId: ApplicationGroupsTP_CheckApplicationGroupExists
      parameters:
      - description: Name of the application group.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of an application group by name.
      tags:
      - ApplicationGroupsTP
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}:
    delete:
      description: |-
        Delete an application group.  Any applications that exist only within the
        application group will also be deleted.  The impact can be determined
        beforehand by use of the `exclusive` option with
        GetApplicationGroupApplications.
      operationId: ApplicationGroupsTP_DeleteApplicationGroup
      parameters:
      - description: |-
          Name or ID of the application group to delete. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application group (and associated objects) will be deleted as a
          background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an application group.
      tags:
      - ApplicationGroupsTP
    get:
      operationId: ApplicationGroupsTP_GetApplicationGroup
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                       specify the name in this format: {application group folder path plus application group name}.
                       For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Optional filter, removing unspecified properties that otherwise\
          \ would\nhave been sent by the server\n            "
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupDetailResponseModel'
          description: Details of the application group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a single application group.
      tags:
      - ApplicationGroupsTP
    patch:
      description: Update an application group's properties.
      operationId: ApplicationGroupsTP_UpdateApplicationGroup
      parameters:
      - description: |-
          Name or ID of the application group to update. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application group (and associated objects) will be updated as a
          background task.
          The task will have JobType UpdateApplicationGroup.
          When the task is complete it will redirect to
          GetApplicationGroup.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application group being updated.
          * _Name_ - Name of the application group being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditApplicationGroupRequestModel'
        description: Details of the application group to update.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an application group.
      tags:
      - ApplicationGroupsTP
      x-codegen-request-body-name: appGroup
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}/Applications:
    get:
      description: Get all applications in an application group.
      operationId: ApplicationGroupsTP_GetApplicationGroupApplications
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If "true", the applications under the application group will be fetched as a background task.
          The task will have JobType GetApplicationGroupApplications
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get applications in an application group.
      tags:
      - ApplicationGroupsTP
    post:
      operationId: ApplicationGroupsTP_AddApplications
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the applications (and associated objects) will be
          added as a background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAddApplicationsRequestModel'
        description: Details of the applications to add.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add applications to the application group.
      tags:
      - ApplicationGroupsTP
      x-codegen-request-body-name: apps
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}/Applications/{appNameOrId}:
    delete:
      description: |-
        Remove an application from the application group.  If the application is not
        associated with any other application group or delivery group, the application
        will be deleted; otherwise, the application itself will remain in the site.
      operationId: ApplicationGroupsTP_RemoveApplication
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: appNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application will be removed from the application group as a
          background task.
          The task will have JobType RemoveApplicationGroupApplications.
          When the task is complete it will redirect to
          GetApplicationGroupApplications.
          The job's Parameters will contain properties:
          * _ApplicationGroupId_ - ID of the application group.
          * _ApplicationGroupName_ - Name of the application group.
          * _ApplicationId_ - ID of the application.
          * _ApplicationName_ - Name of the application.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove an application from the application group.
      tags:
      - ApplicationGroupsTP
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}/DeliveryGroups:
    get:
      description: |-
        Get all delivery groups which an application group is associated with.

        The  of each
        association specifies the priority of the mapping between the application
        group and delivery group. Lower numbers imply higher priority with zero being
        highest.


        If one association has a higher priority than the other, machines from that
        group will be selected for launching sessions until all machines are at
        maximum load, in maintenance mode, unregistered, or unavailable for any other
        reason. Only when all machines from the higher-priority delivery group are
        unavailable will new connections be routed to the next lowest priority
        delivery group.

        If multiple associations with equal priorities are encountered, session
        launches will be load balanced across all machines in both delivery groups.
        The least-loaded machine across the delivery groups will be chosen.
      operationId: ApplicationGroupsTP_GetApplicationGroupDeliveryGroups
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "If `true`, the delivery groups fetch will run as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupDeliveryGroupResponseModelCollection'
          description: List of delivery groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get delivery groups for an application group.
      tags:
      - ApplicationGroupsTP
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}/Tags:
    get:
      description: |-
        Get the tags associated with an application group.  This includes tags which
        are directly associated with the application group, as well as tags associated
        with delivery groups, machines, or applications that are associated with the
        application group. To find tags that are directly associated with the application
        group only, filter the results to those with
        NumApplicationGroups equal to `1`.
      operationId: ApplicationGroupsTP_GetApplicationGroupTags
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: field to filter response model.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the tags for an application group.
      tags:
      - ApplicationGroupsTP
    put:
      description: |-
        Set the tags associated with an application group.
        Any tag that is not specified will be removed from the application group if it
        was previously associated.
      operationId: ApplicationGroupsTP_SetApplicationGroupTags
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplicationGroups.
          When the task is complete it will redirect to
          GetApplicationGroupTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application group being tagged,
          * _Name_ - Name of the application group being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequestModel'
        description: Tags to set.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the application group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set the tags for an application group.
      tags:
      - ApplicationGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/ApplicationGroups/{nameOrId}/Tags/{tagNameOrId}:
    delete:
      description: |-
        Remove a tag from an application group.  Does not delete the tag, only its
        association to the application group.
      operationId: ApplicationGroupsTP_RemoveApplicationGroupTag
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to remove.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplicationGroups.
          When the task is complete it will redirect to
          GetApplicationGroupTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application group being tagged,
          * _Name_ - Name of the application group being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the application group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a tag from an application group.
      tags:
      - ApplicationGroupsTP
    post:
      operationId: ApplicationGroupsTP_AddApplicationGroupTag
      parameters:
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to add.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplicationGroups.
          When the task is complete it will redirect to
          GetApplicationGroupTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application group being tagged,
          * _Name_ - Name of the application group being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the application group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a tag to an application group.
      tags:
      - ApplicationGroupsTP
  /techpreview/{customerid}/{siteid}/Applications:
    get:
      description: Get all applications in the site.
      operationId: ApplicationsTP_GetApplications
      parameters:
      - description: |-
          Optional folder path (URL-encoded) or ID.  If not specified, all applications will
          be returned from all folders.
        in: query
        name: applicationFolder
        schema:
          nullable: true
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the applications will be fetched as a background task.
          The task will have JobType GetApplications.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all applications.
      tags:
      - ApplicationsTP
    post:
      description: Add request applications to the site.
      operationId: ApplicationsTP_AddApplications
      parameters:
      - description: |-
          If `true`, the applications (and associated objects) will be added as a
          background task.
          The task will have JobType AddApplications.
          When the task is complete it will redirect to
          GetApplications.
          The job's Parameters will contain properties:
          * _NumApplications_ - Number of applications being added.
          * _Name0_ - Name of the first application being added.
          * _Name1_ - Name of the second application being added.
          * _Name{n}_ - ...And so on.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddApplicationsRequestModel'
        description: Details of the applications to add.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add applications to the site.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: apps
  /techpreview/{customerid}/{siteid}/Applications/$discover:
    post:
      operationId: ApplicationsTP_DiscoverApplications
      parameters:
      - description: |-
          If `true`, the search operation will run as a background task.
          The task will have JobType ApplicationsDiscovery
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationDiscoveryRequestModel'
        description: Search request for applications discovery. ApplicationDiscoveryRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDiscoveryResponseModel'
          description: The collection of start menu applications
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Search path for applications to add manually.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Applications/$search:
    post:
      description: |-
        Perform an advanced search for applications.  Note that some combinations
        of search parameters may result in slow performance.
      operationId: ApplicationsTP_DoApplicationSearch
      parameters:
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the applications (and associated objects) will be added as a
          background task.
          The task will have JobType SearchApplications.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for applications.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/Applications/{name}:
    head:
      description: Check for the existence of an application by name.
      operationId: ApplicationsTP_CheckApplicationExists
      parameters:
      - description: |-
          Name or ID of the application to check for. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of an application by name
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}:
    delete:
      description: Delete an application.
      operationId: ApplicationsTP_DeleteApplication
      parameters:
      - description: |-
          Name or ID of the application to delete. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application (and associated objects) will be
          deleted as a background task.
          The task will have JobType DeleteApplication.
          When the task is complete it will redirect to
          GetApplications.
          The job's Parameters will contain properties:

          * _Id_ - ID of the application being deleted,
          * _Name_ - Name of the application being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an application!
      tags:
      - ApplicationsTP
    get:
      description: Get the details of a single application.
      operationId: ApplicationsTP_GetApplication
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDetailResponseModel'
          description: Application details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a single application.
      tags:
      - ApplicationsTP
    patch:
      description: Patch an application.
      operationId: ApplicationsTP_PatchApplication
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application will be updated as a background task.
          The task will have JobType UpdateApplication.
          When the task is complete it will redirect to
          GetApplication.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application being updated,
          * _Name_ - Name of the application being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditApplicationRequestModel'
        description: Properties of the application to modify.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Modify an application.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: app
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/$duplicate:
    post:
      description: |-
        Duplicate an application.  This is equivalent to creating
        a new application with all properties the same as the original,
        but with a new name.
        ------
        This API is preferable to using client-side logic to duplicate the
        application, since it allows forward-compatibility.  As new properties
        and behaviors of applications are added in the future, this API will
        duplicate those properly without needing to update clients.
      operationId: ApplicationsTP_DuplicateApplication
      parameters:
      - description: |-
          Name or ID of the application to duplicate. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application (and associated objects) will be
          duplicated as a background task.
          The task will have JobType AddApplications.
          When the task is complete it will redirect to
          GetApplications.
          The job's Parameters will contain properties:
          * _NumApplications_ - Number of applications being added.  For a duplicate operation, this will always be 1.
          * _Name0_ - Name of the first application being added.  For a duplicate operation, this will be the name of the new duplicate of the original application.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateApplicationRequestModel'
        description: Optional properties controlling how the new application is created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDetailResponseModel'
          description: Details of the newly created application duplicate.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Duplicate an application.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: options
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/Administrators:
    get:
      description: Get the administrators authorized to administer an application.
      operationId: ApplicationsTP_GetApplicationAdministrators
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of administrators returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators authorized to administer an application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/ApplicationGroups:
    get:
      description: Get the application groups associated with an application.
      operationId: ApplicationsTP_GetApplicationApplicationGroups
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of application groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the application groups associated with the application will be fetched as a background task.
          The task will have JobType GetApplicationApplicationGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupResponseModelCollection'
          description: List of application groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get application groups associated with an application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/DeliveryGroups:
    get:
      description: Get the delivery groups associated with an application.
      operationId: ApplicationsTP_GetApplicationDeliveryGroups
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the delivery groups associated with the application will be fetched as a background task.
          The task will have JobType GetApplicationDeliveryGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDeliveryGroupResponseModelCollection'
          description: List of delivery groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get delivery groups associated with an application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/FileTypes:
    get:
      description: |-
        Get the file-type associations for an application.  This is a list of all file
        types which are currently associated with the application, plus all imported
        file types that are related to the application's command line executable.
        -------
        This API is only valid for applications where
        ApplicationType is
        HostedOnDesktop,
        AppV, or
        AppLibraryAppV, or
        Msix, or
        AppAttach
      operationId: ApplicationsTP_GetApplicationFtas
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If true, don't check the status of VDAs before
                      getting the file-type association for the application.
        in: query
        name: skipVdaChecking
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "If 'true', the file types will be gotten as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtaResponseModelCollection'
          description: List of file-type associations.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all file-types for an application.
      tags:
      - ApplicationsTP
    post:
      description: |-
        Enable a file-type association for an application.  Note that if the file-type
        association was not imported, this will cause it to be created.
        To enable multiple file-type associations at once, use

            BatchControllerTP.DoBatchRequest(BatchRequestModel, bool?)

        .
      operationId: ApplicationsTP_EnableApplicationFta
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If true, don't check the status of VDAs before
                      enabling the file-type association for the application.
        in: query
        name: skipVdaChecking
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          If `true`, the file type will be enabled as a background task.
          The task will have JobType ModifyFTA.
          When the task is complete it will redirect to
          GetApplicationFta.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application whose FTA is being modified,
          * _Name_ - Name of the application whose FTA is being modified.
          * _ExtensionName_ - File type extension name being modified.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtaRequestModel'
        description: Details of the file-type association to enable.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Enable a file-type association for an application.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: fta
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/FileTypes/$import:
    post:
      description: |-
        Import file types.  The specified application guides the system to import the
        file types from a machine within one of the delivery groups to which the
        application is associated.  Note that all file types present on the chosen
        machine are imported.  For this reason, importing file types for one
        application may alter the imported file types for other applications.
        This API is only valid for applications where
        ApplicationType is
        HostedOnDesktop.  App-V applications do not
        require their file types to be imported.
      operationId: ApplicationsTP_ImportFileTypes
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the file types will be imported as a background task. This is
          recommended as this operation may cause a power action, turning on a machine
          in order to gather the data. This may take some time to run, and if it exceeds
          90 seconds the request may time out.
          The task will have JobType ImportFTA.
          When the task is complete it will redirect to
          GetApplicationFtas.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application whose FTA is being imported,
          * _Name_ - Name of the application whose FTA is being imported.
          * _MachineId_ - ID of the machine selected, from which the file types are being imported; will be present in Parameters only after a machine is selected.
          * _MachineName_ - Name of the machine selected, from which the file types are being imported; will be present in Parameters only after a machine is selected.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Import file types for the application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/FileTypes/{extensionName}:
    delete:
      description: |-
        Disable a file-type association for an application.  Note that if the
        file-type association was not imported, this will cause it to be deleted.
        To disable multiple file-type associations at once, use

            BatchControllerTP.DoBatchRequest(BatchRequestModel, bool?)

        .
      operationId: ApplicationsTP_DisableApplicationFta
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: File-type extension name to disable.
        in: path
        name: extensionName
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the file type will be disabled as a background task.
          The task will have JobType ModifyFTA.
          When the task is complete it will redirect to
          GetApplicationFta.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application whose FTA is being modified,
          * _Name_ - Name of the application whose FTA is being modified.
          * _ExtensionName_ - File type extension name being modified.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Disable a file-type association for an application.
      tags:
      - ApplicationsTP
    get:
      description: |-
        Get the details for a file-type association for an application.
        ----
        This API is only valid for applications where
        ApplicationType is
        HostedOnDesktop,
        AppV, or
        AppLibraryAppV, or
        Msix, or
        AppAttach
      operationId: ApplicationsTP_GetApplicationFta
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Extension name of the file-type.
        in: path
        name: extensionName
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtaResponseModel'
          description: A single file-type association.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single file-type for an application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/RecommendName:
    get:
      description: |-
        Get an application's recommend name.
        This API will check the application name is already in use or not.
        if application Folder is specified, This API will check the application name in the application folder.
        If it's in use, a new name will be suggested.
      operationId: ApplicationsTP_GetApplicationRecommendName
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the application Folder
        in: query
        name: applicationFolder
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The recommend name of the application
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get an application's recommend name.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/Sessions:
    get:
      description: Get the sessions in which the application is currently running.
      operationId: ApplicationsTP_GetApplicationSessions
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of sessions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the application sessions will be fetched as a background task.
          The task will have JobType GetApplicationSessions.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModelCollection'
          description: List of sessions.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get sessions in which the application is currently running.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/Tags:
    get:
      description: |-
        Get tags associated with an application.  This includes tags which are
        directly associated with the application, as well as tags associated with
        delivery groups, machines, or application groups that are associated with the
        application.  To find only tags directly associated with the application,
        filter the results to those with
        NumApplications equal to `1`.
      operationId: ApplicationsTP_GetApplicationTags
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: field to filter response model.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get tags associated with an application.
      tags:
      - ApplicationsTP
    put:
      description: Set tags associated with an application.
      operationId: ApplicationsTP_SetApplicationTags
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplications.
          When the task is complete it will redirect to
          GetApplicationTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application being tagged,
          * _Name_ - Name of the application being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequestModel'
        description: Details of which tags to set.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set tags associated with an application.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Applications/{nameOrId}/Tags/{tagNameOrId}:
    delete:
      description: |-
        Remove a tag from an application.  Does not delete the tag, only its
        association to the application.
      operationId: ApplicationsTP_RemoveApplicationTags
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to remove.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplications.
          When the task is complete it will redirect to
          GetApplicationTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application being tagged,
          * _Name_ - Name of the application being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a tag from an application.
      tags:
      - ApplicationsTP
    post:
      description: Add a tag to an application.
      operationId: ApplicationsTP_AddApplicationTags
      parameters:
      - description: |-
          Name or ID of the application. If the application is present in an application folder,
                      specify the name in this format: {application folder path plus application name}.
                      For example, FolderName1|FolderName2|ApplicationName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to add.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplications.
          When the task is complete it will redirect to
          GetApplicationTags.
          The job's Parameters will contain properties:
          * _Id_ - ID of the application being tagged,
          * _Name_ - Name of the application being tagged.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of tags associated with the application.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a tag to an application.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/RefreshAppVApplications:
    get:
      operationId: ApplicationsTP_RefreshAppVApplications
      parameters:
      - description: |-
          If `true`, the refresh operation will run as a background task.
          The task will have JobType RefreshAppVApplications.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: The applications that need to be deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Refresh the AppV Applications.
      tags:
      - ApplicationsTP
  /techpreview/{customerid}/{siteid}/Applications/StartMenuApplications:
    post:
      operationId: ApplicationsTP_SearchStartMenuApplications
      parameters:
      - description: |-
          If `true`, the search operation will run as a background task.
          The task will have JobType SearchStartMenuApplications
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchStartMenuApplicationsRequestModel'
        description: Search request for querying start menu applications. SearchStartMenuApplicationsRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMenuApplicationResponseModelCollection'
          description: The collection of start menu applications
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Search Start Menu Applications.
      tags:
      - ApplicationsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppVIsolationGroups:
    get:
      description: Get all App-V IsolationGroups configured in the site.
      operationId: AppVIsolationGroupsTP_GetAppVIsolationGroups
      parameters:
      - in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVIsolationGroupResponseModelCollection'
          description: List of App-V IsolationGroups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the App-V IsolationGroups configured in the site
      tags:
      - AppVIsolationGroupsTP
    post:
      description: Create requested App-V IsolationGroup in the site.
      operationId: AppVIsolationGroupsTP_CreateAppVIsolationGroup
      parameters:
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType CreateAppVIsolationGroup.
          When the task is complete it will redirect to
          GetAppVIsolationGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppVIsolationGroupRequestModel'
        description: Request model of the new IsolationGroup.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an App-V IsolationGroup in the site
      tags:
      - AppVIsolationGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppVIsolationGroups/{nameOrId}:
    delete:
      description: Delete the specified App-V IsolationGroup .
      operationId: AppVIsolationGroupsTP_DeleteAppVIsolationGroup
      parameters:
      - description: Name or UID of an isolationGroup.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType CreateAppVIsolationGroup.
          When the task is complete it will redirect to
          GetAppVIsolationGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an App-V IsolationGroup configured in the site.
      tags:
      - AppVIsolationGroupsTP
    get:
      description: Get the specified App-V IsolationGroups configured in the site.
      operationId: AppVIsolationGroupsTP_GetAppVIsolationGroup
      parameters:
      - description: Name or UID of an isolationGroup.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType GetAppVIsolationGroup.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVIsolationGroupResponseModel'
          description: List of App-V IsolationGroups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the specified App-V IsolationGroups configured in the site
      tags:
      - AppVIsolationGroupsTP
    patch:
      description: Update the requested App-V IsolationGroup in the site.
      operationId: AppVIsolationGroupsTP_UpdateAppVIsolationGroup
      parameters:
      - description: Name or UID of an isolationGroup.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType UpdateAppVIsolationGroup.
          When the task is complete it will redirect to
          GetAppVIsolationGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppVIsolationGroupRequestModel'
        description: request model to update isolationGroup.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the App-V IsolationGroup configured in the site.
      tags:
      - AppVIsolationGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppVPackages:
    get:
      description: Get all App-V packages configured in the site.
      operationId: AppVPackagesTP_GetAppVPackages
      parameters:
      - description: |-
          If `true`, the packages will be fetched as a background task.
          The task will have JobType GetAppVPackages.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVPackageResponseModelCollection'
          description: List of App-V packages.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the App-V packages configured in the site
      tags:
      - AppVPackagesTP
    post:
      description: Import App-V packages to the site.
      operationId: AppVPackagesTP_ImportAppVPackages
      parameters:
      - description: |-
          If `true`, the packages will be imported as a background task.
          The task will have JobType ImportAppVPackages.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppVPackageRequestModel'
        description: Request model that includes packages path.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Import App-V packages to the site
      tags:
      - AppVPackagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}:
    delete:
      description: Removea single App-V package within the site.
      operationId: AppVPackagesTP_RemoveAppVPackage
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Package version guid.
                      If not specified, the first package with the id will be removed.
        in: query
        name: versionId
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType UpdateAppVIsolationGroup.
          When the task is complete it will redirect to
          GetAppVPackages.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a single App-V package within the site
      tags:
      - AppVPackagesTP
    get:
      description: Get the details for a single App-V package within the site.
      operationId: AppVPackagesTP_GetAppVPackage
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the library where the package is present.
        in: query
        name: libraryUid
        schema:
          default: 0
          format: int32
          nullable: false
          type: integer
      - description: |-
          Package version guid. If not specified, return the first
                      package with id.
        in: query
        name: versionId
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVPackageResponseModel'
          description: App-V package details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details for a single App-V package within the site
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/Applications:
    get:
      description: Get App-V applications within an App-V package.
      operationId: AppVPackagesTP_GetAppVPackageApplications
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVApplicationResponseModelCollection'
          description: App-V applications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get App-V applications within an App-V package
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/Applications/{appId}:
    get:
      description: Get details for a single App-V application within an App-V package.
      operationId: AppVPackagesTP_GetAppVPackageApplication
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V application within the package.
        in: path
        name: appId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVApplicationDetailResponseModel'
          description: Details of the App-V application.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details for a single App-V application within an App-V package
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/Applications/{appId}/Icon:
    get:
      description: Get the icon for a single App-V application within an App-V package.
      operationId: AppVPackagesTP_GetAppVPackageApplicationIcon
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V application within the package.
        in: path
        name: appId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`

          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          Optional. If not specified, only the raw icon data will be returned.
          Note that this is typically in ICO format, which some clients cannot
          display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconDataResponseModel'
          description: Icon details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the icon for a single App-V application within an App-V package
        within the site.
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/BrokerApplications:
    get:
      description: Get Broker applications delivered from the App-V package.
      operationId: AppVPackagesTP_GetAppVPackageBrokerApplications
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the library where the package is present.
        in: query
        name: libraryUid
        schema:
          default: 0
          format: int32
          nullable: false
          type: integer
      - description: Package version Id.
        in: query
        name: versionId
        schema:
          nullable: true
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: The required fields.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the applications will be fetched as a background task.
          The task will have JobType GetAppVPackageBrokerApplications.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: Broker applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get Broker applications delivered from the App-V package
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/DeliveryGroups:
    get:
      description: Get delivery groups which contain applications in the App-V package.
      operationId: AppVPackagesTP_GetAppVPackageDeliveryGroups
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the library where the package is present.
        in: query
        name: libraryUid
        schema:
          default: 0
          format: int32
          nullable: false
          type: integer
      - description: |-
          Package version Id. If not specified, all delivery groups
                      that associated with id will be fetched.
        in: query
        name: versionId
        schema:
          nullable: true
          type: string
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: The required fields.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the delivery groups will be fetched as a background task.
          The task will have JobType GetAppVPackageDelveryGroups.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: The delivery groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get delivery groups which contain applications in the App-V package
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVPackages/{id}/Icon:
    get:
      description: Get the icon for a single App-V package within the site.
      operationId: AppVPackagesTP_GetAppVPackageIcon
      parameters:
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`

          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          Optional. If not specified, only the raw icon data will be returned.
          Note that this is typically in ICO format, which some clients cannot
          display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconDataResponseModel'
          description: Icon details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the icon for a single App-V package within the site
      tags:
      - AppVPackagesTP
  /techpreview/{customerid}/{siteid}/AppVServers:
    get:
      description: Get all App-V servers configured in the site.
      operationId: AppVServersTP_GetAppVServers
      parameters:
      - in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVServerResponseModelCollection'
          description: List of App-V servers.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all App-V servers configured in the site
      tags:
      - AppVServersTP
    post:
      description: Import App-V server to the site.
      operationId: AppVServersTP_AddAppVServer
      parameters:
      - description: |-
          If `true`, the server will be added as a background task.
          The task will have JobType AddAppVServer.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAppVServerRequestModel'
        description: Request model that includes AppV server information.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Import App-V server to the site
      tags:
      - AppVServersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages:
    get:
      description: Get the packages from a single App-V server.
      operationId: AppVServersTP_GetAppVServerPackages
      parameters:
      - description: Management Server address of the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVPackageResponseModelCollection'
          description: List of App-V packages.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the packages from a single App-V server
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages/{id}:
    get:
      description: |-
        Get the details for a single App-V package on a server (as opposed
        to within the site).
      operationId: AppVServersTP_GetAppVServerPackage
      parameters:
      - description: |-
          ManagementServer address of
          the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVPackageResponseModel'
          description: App-V package details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details for a single App-V package on a server.
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages/{id}/Applications:
    get:
      description: |-
        Get App-V applications within an App-V package on a server (as
        opposed to within the site).
      operationId: AppVServersTP_GetAppVServerPackageApplications
      parameters:
      - description: Management Server address of the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVApplicationResponseModelCollection'
          description: App-V applications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get App-V applications within an App-V package on a server.
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages/{id}/Applications/{appId}:
    get:
      description: |-
        Get details for a single App-V application on a server (as
        opposed to within the site).
      operationId: AppVServersTP_GetAppVServerPackageApplication
      parameters:
      - description: Management Server address of the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V application within the package.
        in: path
        name: appId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVApplicationDetailResponseModel'
          description: Details of the App-V application.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details for a single App-V application on a server.
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages/{id}/Applications/{appId}/Icon:
    get:
      description: |-
        Get the icon for a single App-V package on a server (as
        opposed to within the site).
      operationId: AppVServersTP_GetAppVServerPackageApplicationIcon
      parameters:
      - description: Management Server address of the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V application within the package.
        in: path
        name: appId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`

          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          Optional. If not specified, only the raw icon data will be returned.
          Note that this is typically in ICO format, which some clients cannot
          display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconDataResponseModel'
          description: Icon details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the icon for a App-V application
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{server}/Packages/{id}/Icon:
    get:
      description: |-
        Get the icon for a single App-V package on a server (as opposed to
        within the site).
      operationId: AppVServersTP_GetAppVServerPackageIcon
      parameters:
      - description: Management Server address of the App-V server.
        in: path
        name: server
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the App-V package.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`

          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          Optional. If not specified, only the raw icon data will be returned.
          Note that this is typically in ICO format, which some clients cannot
          display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconDataResponseModel'
          description: Icon details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the icon for a single App-V package on a server.
      tags:
      - AppVServersTP
  /techpreview/{customerid}/{siteid}/AppVServers/{Uid}:
    delete:
      description: Remove App-V server from the site.
      operationId: AppVServersTP_RemoveAppVServer
      parameters:
      - description: |-
          Uid of the AppV Server.If Uid equal or less than 0,
                      the first AppV Server will be removed.
        in: path
        name: Uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: |-
          If `true`, the server will be removed as a background task.
          The task will have JobType RemoveAppVServer.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove App-V server from the site
      tags:
      - AppVServersTP
    patch:
      description: Update App-V server in the site.
      operationId: AppVServersTP_UpdateAppVServer
      parameters:
      - description: |-
          Uid of the AppV Server. If Uid equal or less than 0,
                      the first AppV Server will be updated.
        in: path
        name: Uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: |-
          If `true`, the server will be updated as a background task.
          The task will have JobType UpdateAppVServer.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppVServerRequestModel'
        description: Request model that includes AppV server information.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update App-V server in the site
      tags:
      - AppVServersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/BackupRestore:
    get:
      operationId: BackupRestoreTP_GetBackups
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupResponseModelCollection'
          description: List of backups
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backups
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/{backupName}:
    delete:
      description: Deletes a backup; note that the backup cannot be pinned
      operationId: BackupRestoreTP_DeleteBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a backup
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/{backupName}/PinBackup:
    post:
      description: Pins a backup so it cannot be manually or automatically deleted
      operationId: BackupRestoreTP_PinBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Pin a backup
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/{backupName}/UnpinBackup:
    post:
      description: Unpins a backup so it can be manually or automatically deleted
      operationId: BackupRestoreTP_UnpinBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Unpin a backup
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/DoBackup:
    post:
      description: |-
        Do backup initiates the backup process; the actual process is asynchronous
        Call the get status Rest API to determine the progress of the backup request
      operationId: BackupRestoreTP_DoBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreDoBackupRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDoBackupResponseModel'
          description: BackupDoBackupResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Do backup
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: backupRequest
  /techpreview/{customerid}/{siteid}/BackupRestore/History:
    delete:
      operationId: BackupRestoreTP_RemoveBackupHistory
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreRemoveHistoryRequestModel'
        description: Start and end date of history entries to remove
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove history entries falling within supplied date range
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: dateRange
    get:
      operationId: BackupRestoreTP_GetAllBackupHistory
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreHistoryResponseModelCollection'
          description: List of operational history
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all backup history
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/History/{uid}:
    get:
      operationId: BackupRestoreTP_GetBackupHistoryForSpecificHistory
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: uid
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreHistoryInformation'
          description: List of operational history
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backup history for a single specific backup
      tags:
      - BackupRestoreTP
    post:
      operationId: BackupRestoreTP_UpdateBckRstrHistoryNotes
      parameters:
      - description: History entry unique identifier
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreUpdateNotesRequestModel'
        description: new notes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update notes in history entry
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: notes
  /techpreview/{customerid}/{siteid}/BackupRestore/History/All/{backupName}:
    get:
      operationId: BackupRestoreTP_GetBackupHistoryForSpecificBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreHistoryResponseModelCollection'
          description: List of operational history
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all backup history for specific backup
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/Information:
    get:
      description: Get backup / restore information
      operationId: BackupRestoreTP_GetInformation
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreInformationResponseModel'
          description: BackupRestoreInformationRequestModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backup / restore information
      tags:
      - BackupRestoreTP
    post:
      description: Set backup / restore information
      operationId: BackupRestoreTP_SetInformation
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreInformationRequestModel'
        description: Request containing BackupRestoreInformationRequestModel values
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set backup / restore information
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/BackupRestore/Members/{backupName}:
    post:
      description: Gets a component's members in a saved backup
      operationId: BackupRestoreTP_GetComponentMembers
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the backp to restore
        in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreGetComponentMemberRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupMembersResponseModelCollection'
          description: ""
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backup Members
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: getMembersRequest
  /techpreview/{customerid}/{siteid}/BackupRestore/Restore/{backupName}:
    post:
      description: |-
        Restore a backup initiates the restore process; the actual process is asynchronous
        Call the get status Rest API to determine the progress of the restore request
      operationId: BackupRestoreTP_RestoreBackup
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: backupName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreRestoreBackupRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRestoreBackupResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Restore a backup
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: restoreRequest
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedule/{uid}:
    delete:
      description: Deletes a backup schedule
      operationId: BackupRestoreTP_DeleteBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete backup schedule
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedules:
    get:
      description: Get backup schedules
      operationId: BackupRestoreTP_GetBackupSchedules
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreScheduleModelCollection'
          description: BackupRestoreStatusResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backup schedules
      tags:
      - BackupRestoreTP
    post:
      description: Set / update existing backup schedule
      operationId: BackupRestoreTP_CreateBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreScheduleRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreScheduleResponseModel'
          description: BackupRestoreStatusResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create backup schedule
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: schedule
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedules/{uid}:
    patch:
      description: Set / update existing backup schedule
      operationId: BackupRestoreTP_ModifyBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreScheduleRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreScheduleResponseModel'
          description: BackupRestoreStatusResponseModel
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Modify backup schedules
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: schedule
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedules/{Uid}:
    get:
      description: Get backup schedules
      operationId: BackupRestoreTP_GetBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: Uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreScheduleModel'
          description: BackupRestoreScheduleModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get single backup schedule
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedules/Disable/{uid}:
    post:
      description: Disables a single backup schedule
      operationId: BackupRestoreTP_DisableBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Disable backup schedule
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/Schedules/Enable/{uid}:
    post:
      description: Enables a single backup schedule
      operationId: BackupRestoreTP_EnableBackupSchedule
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Enable backup schedule
      tags:
      - BackupRestoreTP
  /techpreview/{customerid}/{siteid}/BackupRestore/Status:
    get:
      description: Get backup / restore status
      operationId: BackupRestoreTP_GetCurrentActionStatus
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreStatusResponseModel'
          description: BackupRestoreStatusResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get backup / restore status
      tags:
      - BackupRestoreTP
    post:
      description: Get backup / restore status
      operationId: BackupRestoreTP_SetCurrentActionStatus
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreStatusRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreStatusResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set backup / restore status
      tags:
      - BackupRestoreTP
      x-codegen-request-body-name: callersStatus
  /techpreview/{customerid}/{siteid}/CasEvents:
    post:
      description: Send Event to Cas.
      operationId: CasEventTP_SendCasEvent
      parameters:
      - description: |-
          If `true`, the even will be sent to cas as a background task.
          The task will have JobType "JobType.SendCasEvent".
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasEventRequestModel'
        description: Details of the application folder to create.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Send Event to Cas.
      tags:
      - CasEventTP
      x-codegen-request-body-name: casEventRequest
  /techpreview/{customerid}/{siteid}/ConfigLog/ExportReport:
    post:
      operationId: ConfigLogTP_ExportReportData
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomReportInfoRequestModel'
        description: CustomReportInfoRequest CustomReportInfoRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomReportDataResponseModel'
          description: Custom report string data CustomReportDataResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Export logging report data in the format of csv/html/both.
      tags:
      - ConfigLogTP
      x-codegen-request-body-name: customReportInfoRequestModel
  /techpreview/{customerid}/{siteid}/ConfigLog/GetFirstLogDate:
    get:
      operationId: ConfigLogTP_GetFirstLogDate
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: LogSiteResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get first log date
      tags:
      - ConfigLogTP
  /techpreview/{customerid}/{siteid}/ConfigLog/LoggingSite:
    get:
      operationId: ConfigLogTP_GetLogSite
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSiteResponseModel'
          description: LogSiteResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get logging site details. This on-prem only API.
      tags:
      - ConfigLogTP
    patch:
      operationId: ConfigLogTP_SetLogSite
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSiteRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSiteResponseModel'
          description: LogSiteResponseModel
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update logging site info. This on-prem only API.
      tags:
      - ConfigLogTP
      x-codegen-request-body-name: requestModel
  /techpreview/{customerid}/{siteid}/ConfigLog/Logs:
    delete:
      operationId: ConfigLogTP_DeleteLogs
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete logging event logs. This on-prem only API.
      tags:
      - ConfigLogTP
  /techpreview/{customerid}/{siteid}/ConfigLog/Operations:
    get:
      description: |-
        Get configuration log operations.  This requires the configuration logging
        database to be configured and enabled.
        Results are returned in the order of most-recent to least-recent.
        To specify more complicated search criteria, use
        TO BE ADDED LATER
      operationId: ConfigLogTP_GetOperations
      parameters:
      - description: "Optional; number of days of history to retrieve.\nNote : This\
          \ parameter is exclusive with parameter searchDateOption.\nIf neither is\
          \ specified, all records will be returned.\n            "
        in: query
        name: days
        schema:
          format: int32
          nullable: true
          type: integer
      - description: "Optional; Specific time filters for searching operations\nNote\
          \ : This parameter is exclusive with parameter days.\nIf neither is specified,\
          \ all records will be returned.\n            "
        in: query
        name: searchDateOption
        schema:
          enum:
          - LastMinute
          - Last5Minutes
          - Last30Minutes
          - LastHour
          - Last12Hours
          - Last24Hours
          - Today
          - Yesterday
          - LastMonth
          - LastSixMonths
          - LastThreeMonths
          - Last28Days
          - Last7Days
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/SearchDateOption'
        x-schema:
          $ref: '#/definitions/SearchDateOption'
      - description: "Optional; text pattern to match.  If specified, results will\
          \ include only\nentries where Text contains the given\ncase-insensitive\
          \ pattern.  The pattern may include the wildcard \"*\".\nIf not specified,\
          \ all records will be returned.\n            "
        in: query
        name: text
        schema:
          nullable: true
          type: string
      - description: "Optional; the max number of operations returned by this query.\n\
          If not specified, the server might use a default limit of 250 items.\nIf\
          \ the specified value is larger than 1000, the server might reject the call.\n\
          The default and maximum values depend on server settings.\n            "
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: "The time difference in seconds between browser/local time and\
          \ UTC time.\nIf not specified, it will default to 0.\ne.g. UTC+8, timeDiff=28800;\
          \ UTC-5, timeDiff=-18000\n            "
        in: query
        name: timeDiff
        schema:
          default: 0
          format: int32
          nullable: false
          type: integer
      - description: "If a query cannot be completed, the response will have a\nContinuationToken\
          \ set. To obtain more results\nfrom the query, pass the continuation token\
          \ back into the query to get the\nnext batch of results.\n            "
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "If 'true', the get operations will be executed as a background\
          \ task.\nThe task wil have JobTypeGetOperations.\nWhen the task is complete\
          \ it will redirect to GetJobResults.\n            "
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOperationResponseModelCollection'
          description: List of configuration log operations.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get configuration log operations.
      tags:
      - ConfigLogTP
  /techpreview/{customerid}/{siteid}/ConfigLog/Operations/$search:
    post:
      description: Perform an advanced search for configuration log entries.
      operationId: ConfigLogTP_DoConfigLogSearch
      parameters:
      - description: |-
          The max number of configuration log entries returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set. To obtain more results
          from the query, pass the continuation token back into the query to get the
          next batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the search operations will be executed as a background task.
          The task will have JobType DoOperationSearch.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogOperationSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOperationResponseModelCollection'
          description: List of configuration log entries that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for configuration log entries.
      tags:
      - ConfigLogTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/ConfigLog/Operations/{id}:
    get:
      operationId: ConfigLogTP_GetOperationById
      parameters:
      - description: operation id
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogOperationResponseModel'
          description: an operation log.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single operation log by the id.
      tags:
      - ConfigLogTP
  /techpreview/{customerid}/{siteid}/ConfigLog/Operations/{id}/LowLevelOperations:
    get:
      operationId: ConfigLogTP_GetLowLevelOperations
      parameters:
      - description: id of specified high level operation
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of low level operations returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LowLevelOperationResponseModelCollection'
          description: "A list of low level operations.\n            "
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the detailed low level operations of a high level operation.
      tags:
      - ConfigLogTP
  /techpreview/{customerid}/{siteid}/ConfigurationSlots:
    get:
      operationId: ConfigurationSlotsTP_GetConfigurationSlots
      parameters:
      - description: |-
          The max number of configuration slots returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSlotResponseModelCollection'
          description: List of configuration slots.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of configuration slots.
      tags:
      - ConfigurationSlotsTP
    post:
      operationId: ConfigurationSlotsTP_CreateConfigurationSlot
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationSlotRequestModel'
        description: The create request CreateConfigurationSlotRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSlotResponseModel'
          description: The created configuration slot ConfigurationSlotResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a configuration slot.
      tags:
      - ConfigurationSlotsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/ConfigurationSlots/{nameOrId}:
    delete:
      operationId: ConfigurationSlotsTP_DeleteConfigurationSlot
      parameters:
      - description: Name or id of the configuration slot to be deleted.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a configuration slot.
      tags:
      - ConfigurationSlotsTP
    get:
      operationId: ConfigurationSlotsTP_GetConfigurationSlot
      parameters:
      - description: Name or id of the configuration slot.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSlotResponseModel'
          description: Details of the configuration slot.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single configuration slot.
      tags:
      - ConfigurationSlotsTP
  /techpreview/{customerid}/{siteid}/ConfigurationSlots/{nameOrId}/MachineConfigurations:
    get:
      operationId: ConfigurationSlotsTP_GetConfigurationSlotMachineConfigurations
      parameters:
      - description: Name or id of the configuration slot.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machine configurations returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfigurationResponseModelCollection'
          description: List of machine configurations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get machine configurations associated with a configuration slot.
      tags:
      - ConfigurationSlotsTP
  /techpreview/{customerid}/{siteid}/Databases:
    get:
      operationId: DatabasesTP_GetDatabases
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseModelCollection'
          description: List of databases.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of all databases.
      tags:
      - DatabasesTP
  /techpreview/{customerid}/{siteid}/Databases/{dataStore}:
    get:
      operationId: DatabasesTP_GetDatabase
      parameters:
      - description: Datastore.
        in: path
        name: dataStore
        required: true
        schema:
          enum:
          - Unknown
          - Site
          - Logging
          - Monitor
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/DataStore'
        x-schema:
          $ref: '#/definitions/DataStore'
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseResponseModel'
          description: Database info.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single database.
      tags:
      - DatabasesTP
    patch:
      operationId: DatabasesTP_ChanageDatabase
      parameters:
      - description: Datastore.
        in: path
        name: dataStore
        required: true
        schema:
          enum:
          - Unknown
          - Site
          - Logging
          - Monitor
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/DataStore'
        x-schema:
          $ref: '#/definitions/DataStore'
      - description: |-
          If `true`, the database will be changed in a background task.
          The task will have JobType ChangeDatabase.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseChangePropertiesModel'
        description: Details about the database to change.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: true for success.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Change database action.
      tags:
      - DatabasesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Databases/{dataStore}/$generateDatabaseChangeScript:
    post:
      operationId: DatabasesTP_GenerateDatabaseChangeScript
      parameters:
      - description: Datastore.
        in: path
        name: dataStore
        required: true
        schema:
          enum:
          - Unknown
          - Site
          - Logging
          - Monitor
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/DataStore'
        x-schema:
          $ref: '#/definitions/DataStore'
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseChangeScriptPropertiesModel'
        description: Details about the database to generate change script.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseChangeScriptModelCollection'
          description: sql script in DatabaseChangeScriptModelCollection.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: generate sql script for manually change a database.
      tags:
      - DatabasesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryControllers:
    get:
      operationId: DeliveryControllersTP_GetDeliveryControllers
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryControllerResponseModelCollection'
          description: List of delivery controllers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of delivery controllers that are available to the customer
        and visible to the admin.
      tags:
      - DeliveryControllersTP
  /techpreview/{customerid}/{siteid}/DeliveryControllers/{nameOrId}:
    delete:
      operationId: DeliveryControllersTP_DeleteDeliveryController
      parameters:
      - description: Name or ID of the delivery controller.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Indicates whether the database should be updated when deleting
          controller.
        in: query
        name: updateDatabase
        required: true
        schema:
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: true for success
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a delivery controller
      tags:
      - DeliveryControllersTP
    get:
      operationId: DeliveryControllersTP_GetDeliveryController
      parameters:
      - description: Name or ID of the delivery controller.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryControllerResponseModel'
          description: delivery controller details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details about a single delivery controller.
      tags:
      - DeliveryControllersTP
  /techpreview/{customerid}/{siteid}/DeliveryControllers/{nameOrId}/$generateDeliveryControllerDeleteScript:
    post:
      operationId: DeliveryControllersTP_GenerateDeliveryControllerDeleteScript
      parameters:
      - description: Name or ID of the delivery controller.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the delivery controller delete sql script will be generated in a background task.
          The task will have JobType GenerateDeliveryControllerDeleteScript.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryControllerDeleteScriptModelCollection'
          description: sql script in DeliveryControllerDeleteScriptModelCollection.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the sql script when deleting a delivery controller.
      tags:
      - DeliveryControllersTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroups
      parameters:
      - description: |-
          Optional folder path (URL-encoded) or ID.  If not specified, all delivery groups will
          be returned from all folders.
        in: query
        name: adminFolder
        schema:
          nullable: true
          type: string
      - in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: List of all delivery groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all delivery groups.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_CreateDeliveryGroup
      parameters:
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic delivery group info.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: Async request
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeliveryGroupRequestModel'
        description: The request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: Detail model of the created delivery group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/$checkName:
    post:
      operationId: DeliveryGroupsTP_TestDeliveryGroupExists
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesktopGroupNameCheckRequestModel'
        description: |-
          Name of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Test the existence of a delivery group by name.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/$search:
    post:
      description: |-
        Perform an advanced search for deliveryGroups.  Note that some combinations
        of search parameters may result in slow performance.
      operationId: DeliveryGroupsTP_DoDeliveryGroupSearch
      parameters:
      - description: |-
          If `true`, the delivery groups (and associated objects) will be added as a
          background task.
          The task will have JobType DoDeliveryGroupSearch.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryGroupSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: List of delivery groups that matches the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for deliveryGroups.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{name}:
    head:
      operationId: DeliveryGroupsTP_CheckDeliveryGroupExists
      parameters:
      - description: Name of the delivery group.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a delivery group by name.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}:
    delete:
      operationId: DeliveryGroupsTP_DeleteDeliveryGroup
      parameters:
      - description: |-
          Delivery group name or ID. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Async or not
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: Bypass user assignment check
        in: query
        name: force
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a delivery group.
      tags:
      - DeliveryGroupsTP
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroup
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Optional parameter, removing unspecified properties that otherwise\
          \ would have been sent by the server."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: Detail model of the delivery group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a single delivery group.
      tags:
      - DeliveryGroupsTP
    patch:
      operationId: DeliveryGroupsTP_PatchDeliveryGroup
      parameters:
      - description: |-
          Name or ID of the delivery group to update. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the delivery group (and associated objects) will\
          \ be updated as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDeliveryGroupRequestModel'
        description: Details about the delivery group modifications requested.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Modify a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/$StartRebootCycle:
    post:
      operationId: DeliveryGroupsTP_StartDeliveryGroupRebootCycle
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, reboot cycle will be started as a background task.
          The task will have JobType StartDeliveryGroupRebootCycle.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootCycleRequestModel'
        description: The request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Start a reboot cycle for machines in a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/$test:
    post:
      operationId: DeliveryGroupsTP_TestDeliveryGroup
      parameters:
      - description: |-
          Name or ID of the delivery group to test. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tests will run as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupTestResponseModel'
          description: Delivery group test report.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run tests on a delivery group and create a test report.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Administrators:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsAdministrators
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of administrators returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/AdvancedAccessPolicies:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupAdvancedAccessPolicies
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of advanced access policies returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedAccessPolicyResponseModelCollection'
          description: List of advanced access policies associated with the delivery
            group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the advanced access policies associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_CreateDeliveryGroupAdvancedAccessPolicy
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the advanced access policy will be created as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedAccessPolicyRequestModel'
        description: Details of the advanced access policy to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedAccessPolicyResponseModel'
          description: The created advanced access policy.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create an advanced access policy associated with a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/AdvancedAccessPolicies/{policyId}:
    delete:
      operationId: DeliveryGroupsTP_DeleteDeliveryGroupAdvancedAccessPolicy
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the advanced access policy.
        in: path
        name: policyId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the advanced access policy will be deleted as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an advanced access policy associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupAdvancedAccessPolicy
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the advanced access policy.
        in: path
        name: policyId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedAccessPolicyResponseModel'
          description: Details of the access policy.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details of a single advanced access policy associated with
        a delivery group.
      tags:
      - DeliveryGroupsTP
    patch:
      operationId: DeliveryGroupsTP_PatchDeliveryGroupAdvancedAccessPolicy
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the advanced access policy.
        in: path
        name: policyId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the advanced access policy will be updated as a background\
          \ task. "
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedAccessPolicyRequestModel'
        description: Details of the advanced access policy to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedAccessPolicyResponseModel'
          description: The updated advanced access policy.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an advanced access policy associated with a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/ApplicationGroups:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsApplicationGroups
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of application groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupResponseModelCollection'
          description: List of application groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the application groups associated with a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/ApplicationGroups/{appGroupNameOrId}:
    delete:
      operationId: DeliveryGroupsTP_DoRemoveApplicationGroups
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Name or ID of the application group. If the application group is present in an application group folder,
                      specify the name in this format: {application group folder path plus application group name}.
                      For example, FolderName1|FolderName2|ApplicationGroupName.
        in: path
        name: appGroupNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the application groups will be removed to the delivery group
          as a background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove an application group from a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Applications:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupApplications
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the applications associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_DoAddApplications
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the applications will be added to the delivery group
          as a background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryGroupAddApplicationsRequestModel'
        description: Details about the applications and application groups to add.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add applications and/or application groups to a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Applications/{appNameOrId}:
    delete:
      operationId: DeliveryGroupsTP_DoRemoveApplications
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the application.
        in: path
        name: appNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the applications will be removed to the delivery group
          as a background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove an application from a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Desktops:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsDesktops
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          The max number of desktops returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopResponseModelCollection'
          description: List of desktops.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the published desktops associated with a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/MachineCatalogs:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsMachineCatalogs
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "Optional parameters, removing unspecified properties that otherwise\
          \ would have been sent by the server."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogResponseModelCollection'
          description: List of machine catalogs associated with a delivery group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get machine catalogs associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      description: |-
        Associate a machine catalog with a RemotePC delivery group.  Only supported
        when both the delivery group and the machine catalog have
        IsRemotePC equal to `true`.

        For non-RemotePC delivery groups, the relationship between machine catalog and
        delivery group is implicit.  A machine catalog is considered "associated" with
        a delivery group if there is at least one machine from that catalog associated
        with the delivery group. Adding a machine from a machine catalog to a delivery
        group will cause the machine catalog to be associated with the delivery group.
      operationId: DeliveryGroupsTP_AddDeliveryGroupMachineCatalog
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the api need to return detail info in response model.
                      Set to false will improve performance with return basic delivery group info.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the association will be updated as a background task.
          The task will have JobType UpdateDeliveryGroup.
          When the task is complete it will redirect to
          GetDeliveryGroup.
          The job's Parameters will contain properties:

          * _Id_ - ID of the delivery group being updated.
          * _Name_ - Name of the delivery group being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriorityRefRequestModel'
        description: "The machine catalog to associate.\n\nThe  property must refer\
          \ to a\nmachine catalog with \nequal to `true`.  It may refer to the machine\
          \ catalog by\n or by\n.\n\n\nThe machine catalog must be available to the\
          \ same\n, or a superset of\n to whom the\ndelivery group is available.\n\
          \nThe Priority property determines which\ndelivery group Remote PC automation\
          \ will move a qualifying unconfigured\nmachine into when it registers. Priority\
          \ also determines which delivery group\na machine will be published to when\
          \ a user is assigned to the machine by\nRemote PC automation. Numerically\
          \ lower values indicate a higher priority.\n\nIf a priority value is not\
          \ supplied, then the delivery group association is\nautomatically assigned\
          \ a lower priority than any existing associations.\n\nIf a priority value\
          \ is specified that conflicts with an existing association's\npriority value,\
          \ then the new association is inserted with that value and\nexisting associations\
          \ are renumbered upwards to accommodate it."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: Details of the delivery group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Associate a machine catalog with a RemotePC delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: catalog
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/MachineCatalogs/{catalogNameOrId}:
    delete:
      description: |-
        Disassociate a machine catalog from a RemotePC delivery group.  Only supported
        when IsRemotePC is equal to `true`.

        For non-RemotePC delivery groups, the relationship between machine catalog and
        delivery group is implicit.  A machine catalog is considered "associated" with
        a delivery group if there is at least one machine from that machine catalog
        associated with the delivery group. Removing all machines within a machine
        catalog from a delivery group will cause the machine catalog to be
        disassociated from the delivery group.
      operationId: DeliveryGroupsTP_RemoveDeliveryGroupMachineCatalog
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Name or ID of the machine catalog to associate. If the ctalog is present in a catalog folder,
                      specify the name in this format: {delivery group folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: catalogNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the api need to return detail info in response model.
                      Set to false will improve performance with return basic delivery group info.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the association will be updated as a background task.
          The task will have JobType UpdateDeliveryGroup.
          When the task is complete it will redirect to
          GetDeliveryGroup.
          The job's Parameters will contain properties:

          * _Id_ - ID of the delivery group being updated.
          * _Name_ - Name of the delivery group being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: Details of the delivery group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Disassociate a machine catalog from a RemotePC delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/MachineCatalogs/{id}:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsMachineCatalogDetails
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {delivery group folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogDetailResponseModel'
          description: Details of machine catalog.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details of machine catalog associated with a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Machines:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupMachines
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machines returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResponseModelCollection'
          description: List of machines.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machines associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_DoAddMachines
      parameters:
      - description: |-
          Name or ID of the delivery group to add machines to.
                      If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic delivery group info.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: "If `true`, the machines will be added to the delivery group"
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryGroupAddMachinesRequestModel'
        description: Details of the machines to add.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: Detail model of the delivery group after machines are added
            to.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add machines to a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Machines/{machineNameOrId}:
    delete:
      operationId: DeliveryGroupsTP_DoRemoveMachines
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the machine.
        in: path
        name: machineNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the machines will be removed from the delivery group
          as a background task.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a machine from a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/PowerTimeSchemes:
    get:
      description: Get the power time schemes associated with a delivery group.
      operationId: DeliveryGroupsTP_GetDeliveryGroupPowerTimeSchemes
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of power time schemes returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerTimeSchemeResponseModelCollection'
          description: List of power time schemes.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the power time schemes associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      description: Create a power time scheme for a delivery group.
      operationId: DeliveryGroupsTP_CreateDeliveryGroupPowerTimeScheme
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the power time scheme will be created as a background task.
          The task will have JobType CreatePowerTimeScheme.
          When the task is complete it will redirect to
          GetDeliveryGroupPowerTimeScheme.
          The job's Parameters will contain properties:

          * _Id_ - ID of the delivery group for which a power time scheme is being created,
          * _Name_ - Name of the delivery group for which a power time scheme is being created.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerTimeSchemeRequestModel'
        description: Details of the power time scheme to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerTimeSchemeResponseModel'
          description: Newly created power time scheme.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a power time scheme for a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/PowerTimeSchemes/{schemeNameOrId}:
    delete:
      description: Delete a power time scheme from a delivery group.
      operationId: DeliveryGroupsTP_DeleteDeliveryGroupPowerTimeScheme
      parameters:
      - description: |-
          Name or ID of the delivery group.If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the power time scheme.
        in: path
        name: schemeNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the power time scheme will be deleted as a background task.
          The task will have JobType DeletePowerTimeScheme.
          When the task is complete it will redirect to
          GetDeliveryGroupPowerTimeSchemes.
          The job's Parameters will contain properties:

          *_Id_ - ID of the delivery group for which a power time scheme is being deleted,
          *_Name_ - Name of the delivery group for which a power time scheme is being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a power time scheme from a delivery group.
      tags:
      - DeliveryGroupsTP
    get:
      description: |-
        Get the details about a single power time scheme associated with a delivery
        group.
      operationId: DeliveryGroupsTP_GetDeliveryGroupPowerTimeScheme
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the power time scheme.
        in: path
        name: schemeNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerTimeSchemeResponseModel'
          description: Details about a power time scheme.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the details about a single power time scheme associated with a delivery
        group.
      tags:
      - DeliveryGroupsTP
    patch:
      description: Update a power time scheme for a delivery group.
      operationId: DeliveryGroupsTP_PatchDeliveryGroupPowerTimeScheme
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the power time scheme to update.
        in: path
        name: schemeNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the power time scheme will be updated as a background task.
          The task will have JobType UpdatePowerTimeScheme.
          When the task is complete it will redirect to
          GetDeliveryGroupPowerTimeScheme.
          The job's Parameters will contain properties:

          * _Id_ - ID of the delivery group for which a power time scheme is being updated,
          * _Name_ - Name of the delivery group for which a power time scheme is being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerTimeSchemeRequestModel'
        description: Details of the update request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerTimeSchemeResponseModel'
          description: Updated power time scheme.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a power time scheme for a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/ProjectedAutoscaleMachines:
    get:
      operationId: DeliveryGroupsTP_GetDeiliveryGroupProjectedAutoscaleMachines
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Gets projected Autoscale machines for the period starting at
          the specified date (YYYY-MM-DD) that is based on the time zone of the delivery
          group.
        in: query
        name: fromDate
        schema:
          format: date-time
          nullable: true
          type: string
      - description: Gets projected Autoscale machines for the period consisting of
          the specified number of days.
        in: query
        name: numberOfDays
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectedAutoscaleMachinesResponseModel'
          description: The projected number of machines over the specified period.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Gets the projected number of machines that Autoscale will keep powered
        on over the specified period
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/RebootSchedules:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupRebootSchedules
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of reboot schedules returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootScheduleResponseModelCollection'
          description: List of reboot schedules.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the reboot schedules associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_CreateDeliveryGroupRebootSchedule
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootScheduleRequestModel'
        description: Details of the reboot schedule to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootScheduleResponseModel'
          description: The created reboot schedule.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a reboot schedule for a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/RebootSchedules/{name}:
    head:
      description: |-
        Check for the existence of a reboot schedule by name.  Note that
        reboot schedule names must be unique within the site, so the
        `nameOrId` parameter does not affect whether the reboot schedule
        name is found.

        If the name is found to be available, this returns 404 Not Found.
        If a reboot schedule by that name exists and is associated with the
        specified delivery group, this returns 204 No Content.  If a reboot
        schedule by that name exists and is associated with a different
        delivery group, this returns 303 See Other, and the `Location`
        response header refers to location of the reboot schedule with that
        name.
      operationId: DeliveryGroupsTP_CheckRebootScheduleNameExists
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the reboot schedule.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a reboot schedule by name.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/RebootSchedules/{scheduleNameOrId}:
    delete:
      operationId: DeliveryGroupsTP_DeleteDeliveryGroupRebootSchedule
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the reboot schedule.
        in: path
        name: scheduleNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a reboot schedule from a delivery group.
      tags:
      - DeliveryGroupsTP
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupRebootSchedule
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the reboot schedule.
        in: path
        name: scheduleNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootScheduleResponseModel'
          description: Details about a reboot schedule.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the details about a single reboot schedule associated
        with a delivery group.
      tags:
      - DeliveryGroupsTP
    patch:
      operationId: DeliveryGroupsTP_PatchDeliveryGroupRebootSchedule
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the reboot schedule to update.
        in: path
        name: scheduleNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootScheduleRequestModel'
        description: Details of the update request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootScheduleResponseModel'
          description: The updated reboot schedule.
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a reboot schedule for a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/StartMenuApplications:
    get:
      description: Get the start menu applications from a machine in the delivery
        group.
      operationId: DeliveryGroupsTP_GetDeliveryGroupStartMenuApplications
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: The tag name for restriction.
        in: query
        name: tagRestriction
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the start menu applications will be queried as a background task.
          This is recommended as this operation may cause a power action, turning on a
          machine in order to gather the data. This may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType GetStartMenuApplications.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the delivery group from which start menu applications are being obtained,
          * _Name_ - Name of the delivery group from which start menu applications are being obtained.
          * _MachineId_ - ID of the machine selected, from which the start menu applications are being obtained; will be present in Parameters only after a machine is selected.
          * _MachineName_ - Name of the machine selected, from which the start menu applications are being obtained; will be present in Parameters only after a machine is selected.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMenuApplicationResponseModelCollection'
          description: List of start menu applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the start menu applications from a machine in the delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Tags:
    get:
      description: |-
        Get tags associated with a delivery group.  This includes tags which are
        directly associated with the delivery group, as well as tags associated with
        application groups, machines, or applications that are associated with the
        delivery group.  To find only tags directly associated with the delivery
        group, filter the results to those with
        NumDeliveryGroups equal to `1`.
      operationId: DeliveryGroupsTP_GetDeliveryGroupTags
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Optional parameter, removing unspecified properties that otherwise\
          \ would have been sent by the server."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get tags associated with a delivery group.
      tags:
      - DeliveryGroupsTP
    put:
      operationId: DeliveryGroupsTP_SetDeliveryGroupTags
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequestModel'
        description: Details of the tags to set on the delivery group.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set tags associated with a delivery group.
      tags:
      - DeliveryGroupsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Tags/{tagNameOrId}:
    delete:
      description: |-
        Remove a tag from a delivery group.  Does not delete the tag,
        only its association to the delivery group.
      operationId: DeliveryGroupsTP_RemoveDeliveryGroupTags
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a tag from a delivery group.
      tags:
      - DeliveryGroupsTP
    post:
      operationId: DeliveryGroupsTP_AddDeliveryGroupTags
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to add.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the delivery group.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a tag to a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/TestReport:
    get:
      description: |-
        Get the test report from the last run of
        TestDeliveryGroup.
      operationId: DeliveryGroupsTP_GetDeliveryGroupTestReport
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportResponseModel'
          description: |-
            Last test report.  If no tests have been run, returns a 404
            Not Found.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the most recent test report of a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerid}/{siteid}/DeliveryGroups/{nameOrId}/Usage:
    get:
      operationId: DeliveryGroupsTP_GetDeliveryGroupsUsage
      parameters:
      - description: |-
          Name or ID of the delivery group. If the delivery group is present in a delivery group folder,
                      specify the name in this format: {delivery group folder path plus delivery group name}.
                      For example, FolderName1|FolderName2|DeliveryGroupName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          The max number of usage data items returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopUsageResponseModelCollection'
          description: List of usage data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get usage data about a delivery group.
      tags:
      - DeliveryGroupsTP
  /techpreview/{customerId}/{siteId}/gpo/comparePolicies:
    post:
      operationId: Gpo_ComparePolicies
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: Include defaults in comparison
        in: query
        name: withDefaults
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: guid
                type: string
              title: "Guid[]"
              type: array
        description: Guids of policies
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparisonResponseContract'
          description: Comparison result
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Compare policies.
      tags:
      - Gpo
      x-codegen-request-body-name: targets
  /techpreview/{customerId}/{siteId}/gpo/filterDefinitions:
    get:
      operationId: Gpo_GetFilterDefinitions
      parameters:
      - in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionEnvelopeOfFilterDefinition'
          description: Filter types
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Generate all filter definitions.
      tags:
      - Gpo
  /techpreview/{customerId}/{siteId}/gpo/filters:
    get:
      operationId: Gpo_ReadGpoFilters
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the policy from which filters are read
        in: query
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionEnvelopeOfFilterResponse'
          description: The filters read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read filters defined in a policy.
      tags:
      - Gpo
    post:
      operationId: Gpo_CreateGpoFilter
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the policy to which the new filter belongs
        in: query
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequest'
        description: Filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponse'
          description: The filter created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a filter in a policy.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/filters/{filterGuid}:
    delete:
      operationId: Gpo_DeleteGpoFilter
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the filter to be deleted
        in: path
        name: filterGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an existing filter.
      tags:
      - Gpo
    get:
      operationId: Gpo_ReadGpoFilter
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the filter to be read
        in: path
        name: filterGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponse'
          description: The filter read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read a specific filter.
      tags:
      - Gpo
    patch:
      operationId: Gpo_UpdateGpoFilter
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the filter to be updated
        in: path
        name: filterGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequest'
        description: Filter data. The filter type is ignored
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an existing filter.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/policies:
    get:
      operationId: Gpo_ReadGpoPolicies
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the policy set from which policies are read
        in: query
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "If set to true, settings in the policy are read"
        in: query
        name: withSettings
        schema:
          nullable: true
          type: boolean
      - description: "If set to true, filters in the policy are read"
        in: query
        name: withFilters
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionEnvelopeOfPolicyResponse'
          description: Collection of policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read all policies defined in a policy set.
      tags:
      - Gpo
    post:
      operationId: Gpo_CreateGpoPolicy
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy set in which the new policy is created
        in: query
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequest'
        description: Data for the new policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: The newly created policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new policy.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/policies/{policyGuid}:
    delete:
      operationId: Gpo_DeleteGpoPolicy
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy to be deleted
        in: path
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an existing GPO policy.
      tags:
      - Gpo
    get:
      operationId: Gpo_ReadGpoPolicy
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy to be read
        in: path
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "If set to true, read policy settings"
        in: query
        name: withSettings
        schema:
          nullable: true
          type: boolean
      - description: "If set to true, read policy filters"
        in: query
        name: withFilters
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: The policy read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read a policy.
      tags:
      - Gpo
    patch:
      operationId: Gpo_UpdateGpoPolicy
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy to be updated
        in: path
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyBodyRequest'
        description: New policy data
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a policy. Only the policy body is updated.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/policyPriorities:
    post:
      operationId: Gpo_RankGpoPolicies
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: Guid of the policy set that contains the policies
        in: query
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              title: List`1
              type: array
        description: Guids of the policies to be re-prioritized
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Specify new priority order for all existing policies in a policy set.
      tags:
      - Gpo
      x-codegen-request-body-name: policyGuids
  /techpreview/{customerId}/{siteId}/gpo/policySets:
    get:
      operationId: Gpo_ReadGpoPolicySets
      parameters:
      - in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionEnvelopeOfPolicySetResponse'
          description: The policy sets in the site
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all GPO policy sets in the site.
      tags:
      - Gpo
    post:
      operationId: Gpo_CreateGpoPolicySet
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySetRequest'
        description: Parameters for the new policy set
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySetResponse'
          description: The newly created policy set
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new GPO policy set.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/policySets/{policySetGuid}:
    delete:
      operationId: Gpo_DeleteGpoPolicySet
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the policy set to be deleted
        in: path
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an existing GPO policy set. Policies in the policy set are deleted
        if a policy set is deleted.
      tags:
      - Gpo
    get:
      operationId: Gpo_ReadGpoPolicySet
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy set to read
        in: path
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "If set to true, read the policies in the policy set"
        in: query
        name: withPolicies
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySetResponse'
          description: The policy set read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read a GPO policy set.
      tags:
      - Gpo
    patch:
      description: |-
        The description is provided as an array of strings although only one string is accepted. This is to work
        around the limitation of the orchestration service implementation that allows only a JSON object in the
        body.
      operationId: Gpo_UpdateGpoPolicySet
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: The GUID of the policy set to update
        in: path
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicySetRequest'
        description: New description of the policy set
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an existing GPO policy set.
      tags:
      - Gpo
      x-codegen-request-body-name: request
    put:
      operationId: Gpo_UpdatePolicySetBlob
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: policySetGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the internal data blob for a policy set to the latest data in
        the set.
      tags:
      - Gpo
  /techpreview/{customerId}/{siteId}/gpo/settingDefinitions:
    get:
      operationId: Gpo_GetSettingDefinitions
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Get lean parts of setting definitions, the default is set to\
          \ true"
        in: query
        name: isLean
        schema:
          default: true
          nullable: true
          type: boolean
      - description: "Specify the number of entries to retrieve, the default is all\
          \ entries"
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          nullable: true
          type: integer
      - description: "Specify sort order, default is true"
        in: query
        name: isAscending
        schema:
          default: true
          nullable: true
          type: boolean
      - description: "Specify a regular expression to match the internal setting name.\
          \ The default is match all names.\n            "
        in: query
        name: namePattern
        schema:
          nullable: true
          type: string
      - description: "Specify the target of applying the settings. If it's set to\
          \ true, only user settings are retrieved.\nIf it's set to false, only computer\
          \ settings are retrieved. If not specified, both kinds of settings\nare\
          \ retrieved. The default is to retrieve both kinds of settings.\n      \
          \      "
        in: query
        name: isUserSetting
        schema:
          nullable: true
          type: boolean
      - description: Continuation token from a previous retrieval
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingDefinitionEnvelope'
          description: Setting definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get setting definitions. If isLean is set to true, only basic session information is returned. EnumType,
        VdaVersions, VersionDetails, and Explanation are not retrieved. If limit is set to -1 or a number larger
        than the number of settings available, all entries are retrieved. If limit is set to a positive integer
        smaller than the number of settings available, the specified number of settings are retrieved.
      tags:
      - Gpo
  /techpreview/{customerId}/{siteId}/gpo/settingFullDetail:
    get:
      operationId: Gpo_GetSettingFullDetail
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: Setting name
        in: query
        name: settingName
        required: true
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingDefinition'
          description: All details of the setting definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get full detail of a setting.
      tags:
      - Gpo
  /techpreview/{customerId}/{siteId}/gpo/settings:
    get:
      operationId: Gpo_ReadGpoSettings
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy from which settings are read
        in: query
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionEnvelopeOfSettingResponse'
          description: The settings read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read settings defined in a policy.
      tags:
      - Gpo
    post:
      operationId: Gpo_CreateGpoSetting
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the policy to which the setting belongs
        in: query
        name: policyGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        description: Data for the new setting
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponse'
          description: The newly created setting
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a setting in a policy.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerId}/{siteId}/gpo/settings/{settingGuid}:
    delete:
      operationId: Gpo_DeleteGpoSetting
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the setting to be deleted
        in: path
        name: settingGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a setting.
      tags:
      - Gpo
    get:
      operationId: Gpo_ReadGpoSetting
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the setting to be read
        in: path
        name: settingGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponse'
          description: The setting read
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Read a specific setting.
      tags:
      - Gpo
    patch:
      operationId: Gpo_UpdateGpoSetting
      parameters:
      - description: The customer ID
        in: path
        name: customerId
        required: true
        schema:
          nullable: false
          type: string
      - description: The site ID
        in: path
        name: siteId
        required: true
        schema:
          nullable: false
          type: string
      - description: GUID of the setting to be updated
        in: path
        name: settingGuid
        required: true
        schema:
          format: guid
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequest'
        description: New setting value
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a setting.
      tags:
      - Gpo
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/alldata:
    get:
      operationId: GroupPolicy_RetrieveAllData
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Target locale
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllResponseContract'
          description: AllResponseContract
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "Get all policies, templates, setting definitions and filter definitions"
      tags:
      - GroupPolicy
  /techpreview/{customerid}/{siteid}/groupPolicy/compare:
    get:
      operationId: GroupPolicy_GetComparison
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Locale for returned strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: "Comma-separated list of policies, if null, compare all"
        in: query
        name: targets
        required: true
        schema:
          nullable: true
          type: string
      - description: Include defaults in comparison
        in: query
        name: withDefaults
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparisonResponseContract'
          description: Comparison result
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Compare policies or templates. Templates are currently not supported.
      tags:
      - GroupPolicy
  /techpreview/{customerid}/{siteid}/groupPolicy/filters:
    get:
      operationId: GroupPolicy_GetFilterDefinitions
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - in: query
        name: locale
        schema:
          default: en-US
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterDefinitionContract'
                title: IEnumerable`1
                type: array
          description: Filter types
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all filter definitions.
      tags:
      - GroupPolicy
  /techpreview/{customerid}/{siteid}/groupPolicy/modeling:
    post:
      operationId: GroupPolicy_GetModeling
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Model the specified policy set
        in: query
        name: policySetGuid
        schema:
          format: guid
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelingRequestContract'
        description: Modeling request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelingResponseContract'
                title: IEnumerable`1
                type: array
          description: List of all Policy Modeling
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: GET method for Policy Modeling.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies:
    get:
      operationId: GroupPolicy_RetrievePolicies
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale for the returned strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: True if settings are included in the result
        in: query
        name: withSettings
        required: true
        schema:
          nullable: true
          type: boolean
      - description: True if filters are included in the result
        in: query
        name: withFilters
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PolicyResponseContract'
                title: IEnumerable`1
                type: array
          description: All the policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Erase the local cache and retrieve all policies from the database. Regardless if the load succeeds or fails,
        the local cache is always cleared.
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_CreatePolicy
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Locale for display strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequestContract'
        description: The policy model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponseContract'
          description: "True if policy is successfully created, false if not"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a policy and initialize it with the data provided.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies/{policyName}:
    delete:
      operationId: GroupPolicy_DeletePolicy
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy to be deleted
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True if the delete is successful
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a policy.
      tags:
      - GroupPolicy
    get:
      operationId: GroupPolicy_RetrievePolicy
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: Locale for display strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: True if settings are included in the result
        in: query
        name: withSettings
        required: true
        schema:
          nullable: true
          type: boolean
      - description: True if filters are included in the result
        in: query
        name: withFilters
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponseContract'
          description: The policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieve an existing policy.
      tags:
      - GroupPolicy
    patch:
      operationId: GroupPolicy_UpdatePolicy
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The name of an existing policy
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequestContract'
        description: The new policy data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponseContract'
          description: The updated policy data
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Update an existing policy. If a property is null, the property is not updated. If a collection is not null,
        the entire collection is replaced. This API can be used to rename a policy and raise or lower a policy
        priority.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
    put:
      operationId: GroupPolicy_ReplacePolicy
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The name of an existing policy
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequestContract'
        description: Input data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponseContract'
          description: The new policy data
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Replace an existing policy. The entire policy is replaced, including the name. Priority is ignored and will
        be set to the priority of the existing policy.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies/{policyName}/filters:
    get:
      operationId: GroupPolicy_RetrieveFilters
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilterResponseContract'
                title: IEnumerable`1
                type: array
          description: Filters
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get filters of a policy
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_CreateFilter
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestContract'
        description: New filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseContract'
          description: The filter
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new policy filter
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies/{policyName}/filters/{filterName}:
    delete:
      operationId: GroupPolicy_DeleteFilter
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The filter name
        in: path
        name: filterName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True if filter deleted successfully
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a filter
      tags:
      - GroupPolicy
    get:
      operationId: GroupPolicy_RetrieveFilter
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The filter name
        in: path
        name: filterName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseContract'
          description: The filter data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieve a filter
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_UpdateFilter
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The filter name
        in: path
        name: filterName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestContract'
        description: New filter data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponseContract'
          description: The filter data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a filter
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies/{policyName}/settings:
    get:
      operationId: GroupPolicy_RetrievePolicySettings
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale for the returned strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: Name of policy for which settings are retrieved
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SettingResponseContract'
                title: IEnumerable`1
                type: array
          description: Settings used in the policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get settings of a policy
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_SelectPolicySetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Locale for displayed strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: Name of the policy
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequestContract'
        description: Setting to be selected
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: The configured setting instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Select a setting and configure it for the specified policy.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policies/{policyName}/settings/{settingName}:
    delete:
      operationId: GroupPolicy_DeletePolicySetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True if setting successfully unselected
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Unselect a setting from a policy
      tags:
      - GroupPolicy
    get:
      operationId: GroupPolicy_RetrievePolicySetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the policy
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: The setting data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieve an existing selected policy setting
      tags:
      - GroupPolicy
    patch:
      operationId: GroupPolicy_UpdatePolicySetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The policy name
        in: path
        name: policyName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequestContract'
        description: New setting data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: Updated setting
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a selected policy setting.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/policiestemplates:
    get:
      operationId: GroupPolicy_RetrievePoliciesTemplates
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTemplateResponseContract'
          description: PolicyTemplateResponseContract
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all policies and templates
      tags:
      - GroupPolicy
  /techpreview/{customerid}/{siteid}/groupPolicy/policyPriorities:
    post:
      operationId: GroupPolicy_PrioritizePolicies
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              title: List`1
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Specify new priority order for all existing policies.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: policyNames
  /techpreview/{customerid}/{siteid}/groupPolicy/settings:
    get:
      operationId: GroupPolicy_GetSettingDefinitions
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale for the returned strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SettingDefinitionContract'
                title: IEnumerable`1
                type: array
          description: Global setting definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieve all setting definitions.
      tags:
      - GroupPolicy
  /techpreview/{customerid}/{siteid}/groupPolicy/templates:
    get:
      operationId: GroupPolicy_RetrieveTemplates
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale for strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: Retrieve template settings
        in: query
        name: withSettings
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateResponseContract'
                title: IEnumerable`1
                type: array
          description: templates
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all templates
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_CreateTemplate
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequestContract'
        description: The template model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponseContract'
          description: The template created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a template
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/templates/{templateName}:
    delete:
      operationId: GroupPolicy_DeleteTemplate
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The template name
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: True to force this delete even if the database has been changed
          by another user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True if delete is successful
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a template
      tags:
      - GroupPolicy
      x-codegen-request-body-name: forceDelete
    get:
      operationId: GroupPolicy_RetrieveTemplate
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The template name
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: The locale for strings
        in: query
        name: locale
        required: true
        schema:
          nullable: true
          type: string
      - description: Retrieve template settings
        in: query
        name: withSettings
        required: true
        schema:
          nullable: true
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponseContract'
          description: The template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get one specified template
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_UpdateTemplate
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The template name
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequestContract'
        description: New template data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponseContract'
          description: The updated template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a template
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/templates/{templateName}/settings:
    get:
      operationId: GroupPolicy_RetrieveTemplateSettings
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of template for which settings are retrieved
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SettingResponseContract'
                title: IEnumerable`1
                type: array
          description: Settings used in the policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get settings of a template
      tags:
      - GroupPolicy
    post:
      operationId: GroupPolicy_SelectTemplateSetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the template
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: Force write to database
        in: query
        name: forceWrite
        required: true
        schema:
          nullable: false
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequestContract'
        description: Setting to be selected
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: The configured setting instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Select a setting and configure it for the specified template.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/groupPolicy/templates/{templateName}/settings/{settingName}:
    delete:
      operationId: GroupPolicy_DeleteTemplateSetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The template name
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: Force write to database
        in: query
        name: forceWrite
        required: true
        schema:
          nullable: false
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True if setting successfully unselected
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Unselect a setting from a template
      tags:
      - GroupPolicy
    get:
      operationId: GroupPolicy_RetrieveTemplateSetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the template
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: The setting data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieve an existing selected template setting
      tags:
      - GroupPolicy
    patch:
      operationId: GroupPolicy_UpdateTemplateSetting
      parameters:
      - description: The customer id of the customer making this rest call
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site id of the customer's site making this rest call
        in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: The template name
        in: path
        name: templateName
        required: true
        schema:
          nullable: false
          type: string
      - description: The setting name
        in: path
        name: settingName
        required: true
        schema:
          nullable: false
          type: string
      - description: Force write to database
        in: query
        name: forceWrite
        required: true
        schema:
          nullable: false
          type: boolean
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRequestContract'
        description: New setting data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingResponseContract'
          description: Updated setting
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a selected template setting.
      tags:
      - GroupPolicy
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/hypervisors:
    get:
      description: Get all hypervisors configured in the site.
      operationId: HypervisorsTP_GetHypervisors
      parameters:
      - description: 'Async request to hypervisor. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResponseModelCollection'
          description: List of hypervisors.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the hypervisors.
      tags:
      - HypervisorsTP
    post:
      description: "Create a hypervisor, and optionally a resource pool on the hypervisor."
      operationId: HypervisorsTP_CreateHypervisor
      parameters:
      - description: |-
          If `true`, the hypervisor (and associated objects) will be created as a
          background task.
          The task will have JobType CreateHypervisor.
          When the task is complete it will redirect to
          GetHypervisor.
          The job's Parameters will contain properties:
          * _Name_ - Name of the hypervisor being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHypervisorRequestModel'
        description: Details of the hypervisor to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorDetailResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
          x-expectedSchemas:
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailAWSResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailAzureResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailGCPResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailWOLResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailTraditionalResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailOciResponseModel'
          - description: Details of the hypervisor that was created.
            schema:
              $ref: '#/definitions/HypervisorDetailResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "Create a hypervisor, and optionally a resource pool on the hypervisor."
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/hypervisors/$GetResources:
    post:
      description: |-
        Get the resources within a hypervisor, _without_ creating a
        persistent connection to the hypervisor.  Note: in previous versions
        of the API, a "Hypervisor" was referred to as a "Connection".
        This method is useful while determining the details required to
        create both a hypervisor and a resource pool, but without finalizing
        the creation of either.  The caller is free to browse resources that
        are available before deciding whether and how to proceed.
        A caller can recursively enumerate by:
        * Call with no `path`, and `children` equal to `1`.
        * For each of the result's
          Children where
          IsContainer is
          `true`, call with `path` equal to that item's
          RelativePath and
          `children` equal to `1`.
         * Repeat recursively.
      operationId: HypervisorsTP_GetHypervisorAllResourcesWithoutConnection
      parameters:
      - description: |-
          Path to the resource container within the hypervisor. The path may
          either be a relative path as specified by
          RelativePath, or
          may be a URL-encoded Virtual Apps & Desktops resource path
          starting with `XDHyp:`; for example, as specified by
          XDPath.
        in: query
        name: path
        schema:
          nullable: true
          type: string
      - description: |-
          Specifies the number of levels of children to enumerate.
          Default is `0`, meaning that only the object referred to by `path`
          is returned and its
          Children array will be
          left null.
          A special value of `-1` indicates that the entire resource hierarchy
          should be enumerated.  Use with care!  It may take a very long time
          to enumerate a large number of resources from a hypervisor, and the
          call may time out before completing.
        in: query
        name: children
        schema:
          format: int32
          nullable: true
          type: integer
      - description: "If specified, limits the results to the specified resource type(s)."
        explode: false
        in: query
        name: type
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          By default, items which are tagged by XenDesktop are not shown. Set
          this to `true` to override that behavior.
        in: query
        name: showTagged
        schema:
          nullable: true
          type: boolean
      - description: |-
          If `true`, full details of VMs, snapshots, and templates will be
          retrieved. This can be very time consuming and will reduce the
          performance of the call. May only be used if `path` refers to a VM,
          snapshot, or template resource.
          <!-- Internally this calls Get-HypConfigurationObjectForItem -->
        in: query
        name: detail
        schema:
          nullable: true
          type: boolean
      - description: Async request to get the resources with *path.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
        description: |-
          Details of how to connect to the hypervisor to enumerate resources
          from it.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourceResponseModel'
          description: |-
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
          x-expectedSchemas:
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorAvailabilityZoneResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorGpuTypeResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorSecurityGroupResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorServiceOfferingResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorStorageResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorTemplateResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmSnapshotResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVpcResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorCloudRegionResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorResourceResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get all resources within a hypervisor, _without_ creating a
        persistent connection to the hypervisor.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: connectionDetail
  /techpreview/{customerid}/{siteid}/hypervisors/$ValidateVm:
    post:
      description: Validate a list of hypervisor Vm Path.
      operationId: HypervisorsTP_ValidateVmPath
      parameters:
      - description: |-
          If `true`, the resource pool will be updated as a background task.
          The task will have JobType HypervisorVmValidation.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorVmValidationRequestModel'
        description: A list of Vm path.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorVmValidationResponseModelCollection'
          description: 'Details of the vm path validation results. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Validate a list of hypervisor Vm Path.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: VmPaths
  /techpreview/{customerid}/{siteid}/hypervisors/{name}:
    head:
      description: Check for the existence of a hypervisor by name.
      operationId: HypervisorsTP_CheckHypervisorExists
      parameters:
      - description: Name of the hypervisor.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a hypervisor by name.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}:
    delete:
      operationId: HypervisorsTP_DeleteHypervisor
      parameters:
      - description: 'The hypervisor connection name or id. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If the api call with async type. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a hypervisor and related resource pools.
      tags:
      - HypervisorsTP
    get:
      description: Get the details for a single hypervisor.
      operationId: HypervisorsTP_GetHypervisor
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'Async request to hypervisor. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorDetailResponseModel'
          description: |-
            Hypervisor details.
            or
            Hypervisor details.
            or
            Hypervisor details.
            or
            Hypervisor details.
            or
            Hypervisor details.
            or
            Hypervisor details.
            or
            Hypervisor details.
          x-expectedSchemas:
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailAWSResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailAzureResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailGCPResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailWOLResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailTraditionalResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailOciResponseModel'
          - description: Hypervisor details.
            schema:
              $ref: '#/definitions/HypervisorDetailResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details for a single hypervisor.
      tags:
      - HypervisorsTP
    patch:
      description: Update a hypervisor.
      operationId: HypervisorsTP_PatchHypervisor
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the hypervisor will be updated as a background task.
          The task will have JobType UpdateHypervisor.
          When the task is complete it will redirect to
          GetHypervisor.
          The job's Parameters will contain properties:
          * _Name_ - Name of the hypervisor being updated.
          * _Id_ - ID of the hypervisor being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
        description: |-
          Details of the hypervisor to update.  Note that each type of
          hypervisor requires a different update model:
          * AWS requires a model of
          type EditHypervisorAWSConnectionRequestModel.
          * AzureRM requires a model of
          type EditHypervisorAzureConnectionRequestModel.
          * GoogleCloudPlatform
          requires a model of type
          EditHypervisorGCPConnectionRequestModel.
          * OracleCloudInfrastructure
          requires a model of type
          EditHypervisorOciConnectionRequestModel.
          * All other hypervisor types require a model of type
          EditHypervisorTraditionalConnectionRequestModel.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a hypervisor.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/$resetConnection:
    post:
      operationId: HypervisorsTP_ResetBrokerHypervisorConnection
      parameters:
      - description: 'Hypervisor connection name or id. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Requests the broker hypervisor connection to be reset.
        The connection is dropped, details including credentials refreshed and
        the connection reestablished. The reset request is asynchronous and
        may take a moment to occur.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/Hypervisors/{nameOrId}/$test:
    post:
      description: |-
        Run tests on a hypervisor and create a test report.  Obtain the most
        recent report from
        GetHypervisorTestReport.
      operationId: HypervisorsTP_TestHypervisor
      parameters:
      - description: Name or ID of the hypervisor to test.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tests will run as a background task. This is recommended as the
          tests may take some time to run, and if it exceeds 90 seconds the request may
          time out.
          The task will have JobType TestHypervisor.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the hypervisor being tested,
          * _Name_ - Name of the hypervisor being tested.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorTestResponseModel'
          description: Test response.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run tests on a hypervisor and create a test report.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/administrators:
    get:
      description: Get administrators who can administer a hypervisor.
      operationId: HypervisorsTP_GetHypervisorAdministrators
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async execute. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of administrators returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a hypervisor.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/allResources:
    get:
      description: |-
        Get the resources within a hypervisor.  Note: in previous versions
        of the API, this was referred to as a "Connection".
        A caller can recursively enumerate by:
        * Call with no `path`, and `children` equal to `1`.
        * For each of the result's
          Children where
          IsContainer is
          `true`, call with `path` equal to that item's
          RelativePath and
          `children` equal to `1`.
        * Repeat recursively.
      operationId: HypervisorsTP_GetHypervisorAllResources
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Path to the resource container within the hypervisor. The path may
          either be a relative path as specified by
          RelativePath, or
          may be a URL-encoded XenApp & XenDesktop resource path starting
          with `XDHyp:`; for example, as specified by
          XDPath.
        in: query
        name: path
        schema:
          nullable: true
          type: string
      - description: |-
          Specifies the number of levels of children to enumerate.
          Default is `0`, meaning that only the object referred to by `path`
          is returned and its
          Children array will be left
          null.
          A special value of `-1` indicates that the entire resource hierarchy
          should be enumerated.  Use with care!  It may take a very long time
          to enumerate a large number of resources from a hypervisor, and the
          call may time out before completing.
        in: query
        name: children
        schema:
          format: int32
          nullable: true
          type: integer
      - description: "If specified, limits the results to the specified resource type(s)."
        explode: false
        in: query
        name: type
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          By default, items which are tagged by XenDesktop are not shown. Set
          this to `true` to override that behavior.
        in: query
        name: showTagged
        schema:
          nullable: true
          type: boolean
      - description: |-
          If `true`, full details of VMs, snapshots, and templates will be
          retrieved. This can be very time consuming and will reduce the
          performance of the call. May only be used if `path` refers to a VM,
          snapshot, or template resource.
          <!-- Internally this calls Get-HypConfigurationObjectForItem -->
        in: query
        name: detail
        schema:
          nullable: true
          type: boolean
      - description: Async request to get the resources with *path.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourceResponseModel'
          description: |-
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
          x-expectedSchemas:
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorAvailabilityZoneResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorGpuTypeResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorSecurityGroupResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorServiceOfferingResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorStorageResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorTemplateResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmSnapshotResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVpcResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorCloudRegionResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorResourceResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all resources within a hypervisor.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/connection:
    put:
      operationId: HypervisorsTP_PutBrokerHypervisorConnection
      parameters:
      - description: 'Hypervisor connection name or id. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBrokerHypervisorConnectionRequestModel'
        description: 'EditBrokerHypervisorConnectionRequestModel or derived objects. '
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set the properties on a broker hypervisor connection.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/deletePreview:
    get:
      description: Get the machine catalogs and related info that are using a hypervisor.
      operationId: HypervisorsTP_GetHypervisorDeletePreview
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If execute this API asynchronous. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorDeletePreviewResponseModel'
          description: HypervisorDeletePreviewResponseModel object.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the hypervisor delete preview.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/jobs:
    get:
      description: Get the currently active provisioning jobs that are using a hypervisor.
      operationId: HypervisorsTP_GetHypervisorJobs
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModelCollection'
          description: List of machine catalogs that are using a hypervisor.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the currently active jobs that are using a hypervisor.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/machineCatalogs:
    get:
      description: Get the machine catalogs that are using a hypervisor.
      operationId: HypervisorsTP_GetHypervisorMachineCatalogs
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async execute. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorMachineCatalogResponseModelCollection'
          description: List of machine catalogs that are using a hypervisor.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machine catalogs that are using a hypervisor.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools:
    get:
      description: |-
        Get the list of hypervisor resource pools.  Note: in previous versions of the API,
        resource pools were referred to as "HostingUnits".
      operationId: HypervisorsTP_GetHypervisorResourcePools
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'Async request to get the resource pool. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourcePoolResponseModelCollection'
          description: List of hypervisor resource pools.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of hypervisor resource pools.
      tags:
      - HypervisorsTP
    post:
      description: Create a new resource pool on an existing hypervisor.
      operationId: HypervisorsTP_CreateResourcePool
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the resource pool (and associated objects) will be created as a
          background task.
          The task will have JobType CreateHypervisorResourcePool.
          When the task is complete it will redirect to
          GetHypervisorResourcePool.
          The job's Parameters will contain properties:
          * _Name_ - Name of the resource pool being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
        description: Details of the resource pool to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
          x-expectedSchemas:
          - description: Details of the resource pool that was created.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolAWSDetailResponseModel'
          - description: Details of the resource pool that was created.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolAzureDetailResponseModel'
          - description: Details of the resource pool that was created.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolGcpDetailResponseModel'
          - description: Details of the resource pool that was created.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolTraditionalDetailResponseModel'
          - description: Details of the resource pool that was created.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolDetailResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new resource pool on an existing hypervisor.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{name}:
    head:
      description: |-
        Check for the existence of a resource pool by name.  Note that
        resource pool names must be unique within the site, so the
        `nameOrId` parameter does not affect whether the resource pool name
        is found.
        If the name is found to be available, this returns 404 Not Found.
        If a resource pool by that name exists and is associated with the
        specified hypervisor, this returns 204 No Content.  If a resource
        pool by that name exists and is associated with a different
        hypervisor, this returns 303 See Other, and the `Location` response
        header refers to location of the resource pool with that name.
      operationId: HypervisorsTP_CheckHypervisorResourcePoolExists
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name of the resource pool.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a resource pool by name.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}:
    delete:
      operationId: HypervisorsTP_DeleteHypervisorResourcePool
      parameters:
      - description: 'The name or id of hypervisor. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'The hypervisor resource pool id. '
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If the api call with async type. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a hypervisor resource pool.
      tags:
      - HypervisorsTP
    get:
      description: |-
        Get details about a hypervisor resource pool.  Note: in previous versions of
        the API, resource pools were referred to as "HostingUnits".
      operationId: HypervisorsTP_GetHypervisorResourcePool
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'Async request to get the resource pool. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
          description: |-
            Details about the hypervisor resource pool.
            or
            Details about the hypervisor resource pool.
            or
            Details about the hypervisor resource pool.
            or
            Details about the hypervisor resource pool.
            or
            Details about the hypervisor resource pool.
          x-expectedSchemas:
          - description: Details about the hypervisor resource pool.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolAWSDetailResponseModel'
          - description: Details about the hypervisor resource pool.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolAzureDetailResponseModel'
          - description: Details about the hypervisor resource pool.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolGcpDetailResponseModel'
          - description: Details about the hypervisor resource pool.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolTraditionalDetailResponseModel'
          - description: Details about the hypervisor resource pool.
            schema:
              $ref: '#/definitions/HypervisorResourcePoolDetailResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a hypervisor resource pool.
      tags:
      - HypervisorsTP
    patch:
      description: Update a hypervisor resource pool.
      operationId: HypervisorsTP_PatchHypervisorResourcePool
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the resource pool will be updated as a background task.
          The task will have JobType UpdateHypervisorResourcePool.
          When the task is complete it will redirect to
          GetHypervisorResourcePool.
          The job's Parameters will contain properties:
          * _Name_ - Name of the resource pool being updated.
          * _Id_ - ID of the resource pool being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditHypervisorResourcePoolRequestModel'
        description: Details of the resource pool to update.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a hypervisor resource pool.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/$getPatchPreview:
    post:
      operationId: HypervisorsTP_GetHypervisorResourcePoolPatchPreview
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the preview job will run as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorResourcePoolPatchPreviewRequestModel'
        description: New networks of the resource pool.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourcePoolPatchPreviewResponseModel'
          description: Reference of the networks.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the hypervisor resource pool patch preview.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/Hypervisors/{nameOrId}/ResourcePools/{poolId}/$test:
    post:
      description: |-
        Run tests on a resource pool and create a test report.  Obtain the most
        recent report from
        GetHypervisorResourcePoolTestReport.
      operationId: HypervisorsTP_TestHypervisorResourcePool
      parameters:
      - description: Name or ID of the hypervisor containing the resource pool.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool to test.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tests will run as a background task. This is recommended as the
          tests may take some time to run, and if it exceeds 90 seconds the request may
          time out.
          The task will have JobType TestHypervisorResourcePool.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the resource pool being tested,
          * _Name_ - Name of the resource pool being tested.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourcePoolTestResponseModel'
          description: Test response.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run tests on a resource pool and create a test report.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/administrators:
    get:
      description: Get administrators who can administer a resource pool.
      operationId: HypervisorsTP_GetHypervisorResourcePoolAdministrators
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async execute. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of administrators returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a resource pool.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/deletePreview:
    get:
      description: Get the machine catalogs and related resources that are using by
        a resource pool.
      operationId: HypervisorsTP_GetHypervisorResourcePoolDeletePreview
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If execute this API asynchronous. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorDeletePreviewResponseModel'
          description: 'HypervisorDeletePreviewResponseModel object. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the hypervisor resource pool delete preview.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/jobs:
    get:
      description: Get the currently active provisioning jobs that are using a resource
        pool.
      operationId: HypervisorsTP_GetHypervisorResourcePoolJobs
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModelCollection'
          description: List of machine catalogs that are using a hypervisor.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the currently active jobs that are using a resource pool.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/machineCatalogs:
    get:
      description: Get the machine catalogs that are using a resource pool.
      operationId: HypervisorsTP_GetHypervisorResourcePoolMachineCatalogs
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async execute. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorMachineCatalogResponseModelCollection'
          description: List of machine catalogs that are using a hypervisor.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machine catalogs that are using a resource pool.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/resources:
    get:
      description: |-
        Get the resources within a hypervisor resource pool.  Note: in previous
        versions of the API, resource pools were referred to as "HostingUnits".
        A caller can recursively enumerate by:
        * Call with no `path`, and `children` equal to `1`.
        * For each of the result's
          Children where
          IsContainer is `true`, call
          with `path` equal to that item's
          RelativePath and `children`
          equal to `1`.
        * Repeat recursively.
      operationId: HypervisorsTP_GetHypervisorResourcePoolResources
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Path to the resource container within the resource pool. The path may either
          be a relative path as specified by
          RelativePath, or may be a
          URL-encoded XenApp & XenDesktop resource path starting with `XDHyp:`; for
          example, as specified by
          XDPath.
        in: query
        name: path
        schema:
          nullable: true
          type: string
      - description: |-
          Specifies the number of levels of children to enumerate.
          Default is `0`, meaning that only the object referred to by `path` is returned
          and its Children array will be
          left null.
          A special value of `-1` indicates that the entire resource hierarchy should be
          enumerated.  Use with care!  It may take a very long time to enumerate a large
          number of resources from a hypervisor, and the call may time out before
          completing.
        in: query
        name: children
        schema:
          format: int32
          nullable: true
          type: integer
      - description: "If specified, limits the results to the specified resource type(s)."
        explode: false
        in: query
        name: type
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          By default, items which are tagged by XenDesktop are not shown. Set this to
          `true` to override that behavior.
        in: query
        name: showTagged
        schema:
          nullable: true
          type: boolean
      - description: |-
          If `true`, full details of VMs, snapshots, and templates will be retrieved.
          This can be very time consuming and will reduce the performance of the call.
          May only be used if `path` refers to a VM, snapshot, or template resource.
          <!-- Internally this calls Get-HypConfigurationObjectForItem -->
        in: query
        name: detail
        schema:
          nullable: true
          type: boolean
      - description: 'Async request to get the resources with *path. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourceResponseModel'
          description: |-
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
          x-expectedSchemas:
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorAvailabilityZoneResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorGpuTypeResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorSecurityGroupResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorServiceOfferingResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorStorageResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorTemplateResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVmSnapshotResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorVpcResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorCloudRegionResourceResponseModel'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorResourceResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the resources within a hypervisor resource pool.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/resources/$search:
    post:
      description: "Currently, only AWS's AMIs is supported."
      operationId: HypervisorsTP_DoHypervisorResourceSearch
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of resources returned by this query.
          If not specified, the server might use a default limit of 1 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: 'Async request to get the resources with *path. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorResourceSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourceResponseModelCollection'
          description: |-
            A list of hypervisor resources.
            or
            A list of hypervisor resources.
          x-expectedSchemas:
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorResourceResponseModelCollection'
          - description: A list of hypervisor resources.
            schema:
              $ref: '#/definitions/HypervisorResourceResponseModelCollection'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Search the resources within a hypervisor resource pool.
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/resourcePools/{poolId}/resources/$validate:
    post:
      operationId: HypervisorsTP_ValidateHypervisorResourcePoolResource
      parameters:
      - description: Name or Id of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or Id of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - description: If async execute.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervisorResourceValidationRequestModel'
        description: More details attached to this validation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResourceValidationResponseModel'
          description: The validation result.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "Validate a resource for certain usages, currently default and only\
        \ usage is for Machine Profile."
      tags:
      - HypervisorsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Hypervisors/{nameOrId}/ResourcePools/{poolId}/TestReport:
    get:
      description: |-
        Get the test report from the last run of
        TestHypervisorResourcePool.
      operationId: HypervisorsTP_GetHypervisorResourcePoolTestReport
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the resource pool.
        in: path
        name: poolId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportResponseModel'
          description: "Last test report.  If no tests have been run, returns a 404\
            \ Not Found."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the most recent test report for a resource pool.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/{nameOrId}/serverHAAddresses:
    get:
      operationId: HypervisorsTP_GetHypervisorServerHAAddresses
      parameters:
      - description: 'The hypervisor connection name or id. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If the execution with async model. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorServerHAAddressesResponseModel'
          description: 'HypervisorServerHAAddressesResponseModel object. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "Get hypervisor server HA addresses. Currently, it only valid for Citrix\
        \ hypervisors."
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/Hypervisors/{nameOrId}/TestReport:
    get:
      description: |-
        Get the test report from the last run of
        TestHypervisor.
      operationId: HypervisorsTP_GetHypervisorTestReport
      parameters:
      - description: Name or ID of the hypervisor.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportResponseModel'
          description: "Last test report.  If no tests have been run, returns a 404\
            \ Not Found."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the most recent test report for a hypervisor.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisors/supportedPlugins:
    get:
      operationId: HypervisorsTP_GetSupportHypervisors
      parameters:
      - description: 'If execute this API asynchronous. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: 'The zone name or id. '
        in: query
        name: zoneNameOrId
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorPluginResponseModelCollection'
          description: 'List of Hypervisor Plugin response model. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get current server support hypervisors.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/hypervisorsAndResourcePools:
    get:
      operationId: HypervisorsTP_GetHypervisorsAndResourcePools
      parameters:
      - description: 'If execute this API asynchronous. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorsAndResourcePoolsResponseModelCollection'
          description: 'List of Hypervisor Main View Response Model. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get hypervisors and resource pools.
        This API is used for the hosting main view.
      tags:
      - HypervisorsTP
  /techpreview/{customerid}/{siteid}/Icons:
    get:
      description: Get all icons in the site.
      operationId: IconsTP_GetIcons
      parameters:
      - description: |-
          Icon format.  Must be: `{mime-type};{width}x{height}x{colordepth}`


          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          example: `"image/png;32x32x24"`


          Optional. If not specified, only the raw icon data will be returned. Note that
          this is typically in ICO format, which some clients cannot display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - description: |-
          If specified as `true`, only built-in icons will be returned.  If specified as
          `false`, only user-created icons will be returned.  If not specified, all
          icons will be returned.
        in: query
        name: builtIn
        schema:
          nullable: true
          type: boolean
      - description: 'If async execute. '
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of icons returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconResponseModelCollection'
          description: List of icons.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all icons in the site.
      tags:
      - IconsTP
    post:
      operationId: IconsTP_AddIcon
      parameters:
      - description: "If `true`, the icon will be added as a background task.\nThe\
          \ task will have JobType AddIcon.\nWhen the task is complete it will redirect\
          \ to\nGetIcon.\n            "
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIconRequestModel'
        description: request body containing icon data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: add a customized icon.
      tags:
      - IconsTP
      x-codegen-request-body-name: requestModel
  /techpreview/{customerid}/{siteid}/Icons/{id}:
    delete:
      operationId: IconsTP_RemoveIcon
      parameters:
      - description: id of the icon to remove
        in: path
        name: id
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "If `true`, the icon will be removed as a background task.\n\
          The task will have JobType RemoveIcon.\nWhen the task is complete it will\
          \ redirect to\nGetIcons.\n            "
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a customized icon.
      tags:
      - IconsTP
    get:
      description: Get a single icon from the site
      operationId: IconsTP_GetIcon
      parameters:
      - description: ID of the icon.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`


          where:
          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.
           example: `"image/png;32x32x24"`


          Optional. If not specified, only the raw icon data will be returned. Note that
          this is typically in ICO format, which some clients cannot display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: The icon.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single icon from the site.
      tags:
      - IconsTP
  /techpreview/{customerid}/{siteid}/Icons/AppVServerPackageApplication:
    post:
      description: |-
        Get the icon for a single App-V package on a server (as
        opposed to within the site).
      operationId: IconsTP_GetAppVServerPackageApplicationIcon
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppvServerPackageApplicationIconRequestModel'
        description: App-V server package application icon request model.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconDataResponseModel'
          description: Icon details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the icon for a single App-V application within an App-V package
        on a server.
      tags:
      - IconsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Identity/AzureADTenants/{azureAdTenantId}/AzureADSecurityGroups:
    get:
      description: "When user's input all are empty, then all those assigned security\
        \ group in a specific tenant it will be retrieved."
      operationId: IdentityTP_QueryAzureAdSecurityGroups
      parameters:
      - description: The specific azure tenant id.
        in: path
        name: azureAdTenantId
        required: true
        schema:
          nullable: false
          type: string
      - description: Specific the group display name.
        in: query
        name: name
        schema:
          nullable: true
          type: string
      - description: "When name is empty, assigned only support the value of true."
        in: query
        name: assigned
        schema:
          default: true
          nullable: true
          type: boolean
      - description: "The max return count,default is 300."
        in: query
        name: maxCount
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADSecurityGroupResponseModelCollection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Query AzureAD security group by user's input.
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/AzureADTenants/{azureAdTenantId}/AzureADSecurityGroups/{groupId}:
    get:
      description: Retrieves AzureAD's security groups by user's input.
      operationId: IdentityTP_GetAzureADSecurityGroups
      parameters:
      - description: AzureAD tenantId
        in: path
        name: azureAdTenantId
        required: true
        schema:
          nullable: false
          type: string
      - description: AzureAD security group's objectId
        in: path
        name: groupId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADSecurityGroupResponseModel'
          description: List of Azure AD security groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get Azure AD security group by group id.
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/AzureADTenants/{azureAdTenantId}/AzureADSecurityGroups/{groupId}/members:
    get:
      operationId: IdentityTP_GetAzureAdSecurityGroupMember
      parameters:
      - description: The Azure tenant id.
        in: path
        name: azureAdTenantId
        required: true
        schema:
          nullable: false
          type: string
      - description: The security group object id.
        in: path
        name: groupId
        required: true
        schema:
          nullable: false
          type: string
      - description: Only type=group is support now.
        in: query
        name: type
        schema:
          default: group
          nullable: true
          type: string
      - description: The max return records number.
        in: query
        name: maxCount
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADSecurityGroupResponseModelCollection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Retrieves all the group type of members of a specific group
      tags:
      - IdentityTP
  ? /techpreview/{customerid}/{siteid}/Identity/AzureADTenants/{azureAdTenantId}/AzureADSecurityGroups/{groupId}/members/{refGroupId}
  : put:
      operationId: IdentityTP_AddAzureAdSecurityGroupMember
      parameters:
      - description: The Azure tenant id.
        in: path
        name: azureAdTenantId
        required: true
        schema:
          nullable: false
          type: string
      - description: The parent assigned security group object id
        in: path
        name: groupId
        required: true
        schema:
          nullable: false
          type: string
      - description: The nested devices security group object id
        in: path
        name: refGroupId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a security group to an assigned security as it's member
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Containers:
    get:
      description: Get containers from identity provider
      operationId: IdentityTP_GetContainers
      parameters:
      - description: "Forest to get containers from.  If not specified, all forests\
          \ are queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get containers from.  If not specified, all domains\
          \ in the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: "Specific container(s) to filter the results to.  If not specified,\
          \ all matching containers are returned.  If set, `recursive` parameter is\
          \ ignored and is implied `true`."
        explode: false
        in: query
        name: container
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "Search for containers that start with a string.  If not specified,\
          \ all matching containers are returned."
        in: query
        name: startsWith
        schema:
          nullable: true
          type: string
      - description: "Search for containers that contain a string.  If not specified,\
          \ all matching containers are returned."
        in: query
        name: contains
        schema:
          nullable: true
          type: string
      - description: "Search for containers that match a string.  If not specified,\
          \ all matching containers are returned."
        in: query
        name: matches
        schema:
          nullable: true
          type: string
      - description: "The parent OU to search.  If not specified, will search from\
          \ the root OU."
        in: query
        name: parentOU
        schema:
          nullable: true
          type: string
      - description: Indicates whether the search should be recursive.  Default is
          `false`.
        in: query
        name: recursive
        schema:
          nullable: true
          type: boolean
      - description: "Indicates container type(s) that should be retrieved.  If not\
          \ specified, all container types will be searched."
        explode: false
        in: query
        name: containerType
        schema:
          items:
            $ref: '#/components/schemas/IdentityContainerType'
          nullable: true
          type: array
        style: form
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityContainerResponseModelCollection'
          description: List of containers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get containers from identity provider.
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Containers/{container}:
    get:
      description: Get a single container (e.g. OU).
      operationId: IdentityTP_GetContainer
      parameters:
      - description: Container to get.
        in: path
        name: container
        required: true
        schema:
          nullable: false
          type: string
      - description: "Forest to get container from.  If not specified, all forests\
          \ are queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get container from.  If not specified, all domains\
          \ in the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityContainerResponseModel'
          description: Details about container.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single container (e.g. OU)
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Directories:
    get:
      description: Get list of directories from all identity providers.
      operationId: IdentityTP_GetDirectories
      parameters:
      - description: The max number of items returned by this query.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDirectoryResponseModelCollection'
          description: List of directories.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get list of directories from all identity providers
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Domains:
    get:
      description: Get list of domains from the identity provider.
      operationId: IdentityTP_GetDomains
      parameters:
      - description: "Forest to get domains from.  If not specified, all forests are\
          \ queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Specific domain(s) to filter the results to.  If not specified,\
          \ all matching domains are returned."
        explode: false
        in: query
        name: domain
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: Parent domain name to search.  Default is the root domain of
          the forest.
        in: query
        name: parentDomain
        schema:
          nullable: true
          type: string
      - description: Specifies whether the search is recursive.
        in: query
        name: recursive
        schema:
          nullable: true
          type: boolean
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values of the properties. If not specified,
          all properties other than IdentityDomainProperty.Controllers IdentityDomainProperty.PrimaryController will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294966527
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDomainResponseModelCollection'
          description: List of domains.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get list of domains from the identity provider
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Domains/{domain}:
    get:
      description: Get a single domain from the identity provider.
      operationId: IdentityTP_GetDomain
      parameters:
      - description: Domain to get details from.
        in: path
        name: domain
        required: true
        schema:
          nullable: false
          type: string
      - description: "Forest to get domain from.  If not specified, all forests are\
          \ queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values of the properties. If not specified,
          all properties other than IdentityDomainProperty.Controllers IdentityDomainProperty.PrimaryController will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294966527
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDomainResponseModel'
          description: Details about a domain.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single domain from the identity provider
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Domains/{domain}/AzureADCustomDomain:
    get:
      operationId: IdentityTP_GetDomainAzureADCustomDomain
      parameters:
      - description: Domain name.
        in: path
        name: domain
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureADCustomDomainResponseModel'
          description: The Azure AD custom domain with the specified domain name.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Gets the Azure AD custom domain with the specified domain name.
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Forests:
    get:
      description: Get the list of forests from the identity provider.
      operationId: IdentityTP_GetForests
      parameters:
      - description: "Specific forest(s) to filter the results to.  If not specified,\
          \ all forests are returned."
        explode: false
        in: query
        name: forest
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityForestResponseModelCollection'
          description: List of forests.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of forests from the identity provider
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Forests/{forest}:
    get:
      description: Get information about a single forest.
      operationId: IdentityTP_GetForest
      parameters:
      - description: forest
        in: path
        name: forest
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityForestResponseModel'
          description: Details about a forest.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get information about a single forest
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Machines:
    get:
      description: Get machine accounts from identity provider.
      operationId: IdentityTP_GetMachines
      parameters:
      - description: "Forest to get machine accounts from.  If not specified, all\
          \ forests are queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get machine accounts from.  If not specified, all\
          \ domains in the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: "Specific machine(s) to filter the results to.  If not specified,\
          \ all matching machines are returned.  If set, `recursive` parameter is\
          \ ignored and is implied `true`."
        explode: false
        in: query
        name: machine
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "Search for machine accounts that start with a string.  This\
          \ parameter is exclusive with `contains`, and `matches`."
        in: query
        name: startsWith
        schema:
          nullable: true
          type: string
      - description: "Search for machine accounts that contain a string.  This parameter\
          \ is exclusive with `startsWith`, and `matches`."
        in: query
        name: contains
        schema:
          nullable: true
          type: string
      - description: "Search for machine accounts that match a string.  This parameter\
          \ is exclusive with `startsWith`, and `contains`."
        in: query
        name: matches
        schema:
          nullable: true
          type: string
      - description: "The parent OU to search.  If not specified, will search from\
          \ the root OU."
        in: query
        name: parentOU
        schema:
          nullable: true
          type: string
      - description: Indicates whether the search should be recursive.
        in: query
        name: recursive
        schema:
          nullable: true
          type: boolean
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties other than
          IPAddress will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967279
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMachineResponseModelCollection'
          description: List of machines.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get machine accounts from identity provider
      tags:
      - IdentityTP
    post:
      description: Create machine identity.
      operationId: IdentityTP_CreateMachine
      parameters:
      - description: "If `true`, the machine identity will be created as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCreateMachineRequestModel'
        description: Details of the machine identity to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMachineResponseModel'
          description: The newly created machine identity.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create machine identity
      tags:
      - IdentityTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Identity/Machines/{machine}:
    delete:
      description: Delete a machine identity.
      operationId: IdentityTP_DeleteMachine
      parameters:
      - description: Machine identity to delete.
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - description: Forest to delete machine account from.  Required.
        in: query
        name: forest
        required: true
        schema:
          nullable: true
          type: string
      - description: Domain to delete machine account from.  Required.
        in: query
        name: domain
        required: true
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: "If `true`, the machine identity will be deleted as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a machine identity
      tags:
      - IdentityTP
    get:
      description: Get a single machine account from identity provider.
      operationId: IdentityTP_GetMachine
      parameters:
      - description: Machine to get.
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - description: "Forest to get machine account from.  If not specified, all forests\
          \ are queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get machine account from.  If not specified, all domains\
          \ in the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties other than
          IPAddress will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967279
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMachineResponseModel'
          description: Details about the machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single machine account from identity provider
      tags:
      - IdentityTP
    patch:
      description: Update a machine identity.
      operationId: IdentityTP_UpdateMachine
      parameters:
      - description: Machine identity to update.
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - description: Forest to update machine account within.  Required.
        in: query
        name: forest
        required: true
        schema:
          nullable: true
          type: string
      - description: Domain to update machine account within.  Required.
        in: query
        name: domain
        required: true
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: "If `true`, the machine identity will be updated as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdateMachineRequestModel'
        description: Properties of the machine identity that should be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityMachineResponseModel'
          description: Details about a machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a machine identity
      tags:
      - IdentityTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Identity/Sites:
    get:
      description: Get list of sites from the identity provider.
      operationId: IdentityTP_GetSites
      parameters:
      - description: "Forest to get sites from.  If not specified, all forests are\
          \ queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get sites from.  If not specified, all domains in\
          \ the forest(s) are queried."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: Hostname or IP to get sites from.
        in: query
        name: hostNameOrIP
        schema:
          nullable: true
          type: string
      - description: "Specific site(s) to filter the results to.  If not specified,\
          \ all matching sites are returned."
        explode: false
        in: query
        name: site
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySiteResponseModelCollection'
          description: List of sites.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get list of sites from the identity provider
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Sites/{site}:
    get:
      description: Get information about a single site.
      operationId: IdentityTP_GetSite
      parameters:
      - description: The site to get details for.
        in: path
        name: site
        required: true
        schema:
          nullable: false
          type: string
      - description: "Forest to get the site from.  If not specified, all forests\
          \ are queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get the site from.  If not specified, all domains\
          \ in the forest(s) are queried until the site is found."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySiteResponseModel'
          description: Details about a site.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get information about a single site
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Users:
    get:
      description: Get users from identity provider.
      operationId: IdentityTP_GetUsers
      parameters:
      - description: Provider to get users from.
        in: query
        name: provider
        schema:
          enum:
          - Unknown
          - AD
          - AzureAD
          - Okta
          - Google
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/IdentityProviderType'
        x-schema:
          $ref: '#/definitions/IdentityProviderType'
      - description: "Forest to get users from.  If not specified, all forests are\
          \ queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get users from.  If not specified, all domains in\
          \ the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: Tenant to get users from.
        in: query
        name: tenant
        schema:
          nullable: true
          type: string
      - description: "Specific user(s) to filter the results to. If not specified,\
          \ all matching users are returned.  If set, `recursive` parameter is ignored\
          \ and is implied `true`."
        explode: false
        in: query
        name: user
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "Search for users that start with a string.  This parameter is\
          \ exclusive with `contains`, and `matches`."
        in: query
        name: startsWith
        schema:
          nullable: true
          type: string
      - description: "Search for users that contain a string.  This parameter is exclusive\
          \ with `startsWith`, and `matches`."
        in: query
        name: contains
        schema:
          nullable: true
          type: string
      - description: "Search for users that match a string.  This parameter is exclusive\
          \ with `startsWith`, and `contains`."
        in: query
        name: matches
        schema:
          nullable: true
          type: string
      - description: "The parent OU to search.  If not specified, will search from\
          \ the root OU."
        in: query
        name: parentOU
        schema:
          nullable: true
          type: string
      - description: Indicates whether the search should be recursive.
        in: query
        name: recursive
        schema:
          nullable: true
          type: boolean
      - description: "Indicates user type(s) that should be retrieved.  If not specified,\
          \ all user types will be searched."
        in: query
        name: userType
        schema:
          enum:
          - Unknown
          - User
          - Group
          - All
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/IdentityUserType'
        x-schema:
          $ref: '#/definitions/IdentityUserType'
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - description: |-
          Maximum number of items to return.  If more items are available, a continuation token will
          be returned.  If not specified, all items will be returned.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If specified, a previous query will be continued.  The caller must specify the same query parameters
          and admin credentials as the initial query or else the behavior is undefined.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserResponseModelCollection'
          description: List of users.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get users from identity provider
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Identity/Users/$validate:
    post:
      description: "Validate a user's credentials, and if valid, get information about\
        \ the user account."
      operationId: IdentityTP_ValidateUser
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityValidateUserRequestModel'
        description: Details of the user credentials to validate.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserResponseModel'
          description: Details of the user.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Validate a user's credentials
      tags:
      - IdentityTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Identity/Users/{user}:
    patch:
      description: Update a user identity.
      operationId: IdentityTP_UpdateUser
      parameters:
      - description: User identity to update.
        in: path
        name: user
        required: true
        schema:
          nullable: false
          type: string
      - description: Forest to update user account within.  Required.
        in: query
        name: forest
        required: true
        schema:
          nullable: true
          type: string
      - description: Domain to update user account within.  Required.
        in: query
        name: domain
        required: true
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: "If `true`, the user identity will be updated as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdateUserRequestModel'
        description: Properties of the user identity that should be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserResponseModel'
          description: Details about a user.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a user identity
      tags:
      - IdentityTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Identity/Users/{userOrGroup}:
    get:
      description: Get a single user or group.
      operationId: IdentityTP_GetUser
      parameters:
      - description: Identity of the user or group to get.
        in: path
        name: userOrGroup
        required: true
        schema:
          nullable: false
          type: string
      - description: "Forest to get users from.  If not specified, all forests are\
          \ queried, which may take a long time."
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: "Domain to get users from.  If not specified, all domains in\
          \ the forest(s) are queried, which may take a long time."
        in: query
        name: domain
        schema:
          nullable: true
          type: string
      - description: Hint to inform the system of a directory server which is most
          likely to successfully perform the operation.
        in: query
        name: directoryServerHint
        schema:
          nullable: true
          type: string
      - description: |-
          Properties to retrieve.  This should be specified as an integer representing the OR-ed together values
          of the properties.  If not specified, all properties will be retrieved.
        in: query
        name: propertiesToRetrieve
        schema:
          default: 4294967295
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityUserResponseModel'
          description: User or group details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single user or group
      tags:
      - IdentityTP
  /techpreview/{customerid}/{siteid}/Images/Definitions:
    get:
      operationId: ImagesTP_GetImageDefinitions
      parameters:
      - description: The name or Id of a resource pool.
        in: query
        name: resourcePool
        schema:
          nullable: true
          type: string
      - description: The max number of items returned by this query.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResponseModelCollection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all defined image definitions
      tags:
      - ImagesTP
    post:
      operationId: ImagesTP_NewImageDefinitionAndVersion
      parameters:
      - description: |-
          If `true`, this will be queried as a background task.
          The task will have JobType NewImageDefinition.
          When the task is complete it will redirect to GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageDefinitionRequestModel'
        description: CreateImageDefinitionRequestModel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create image definition
      tags:
      - ImagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Images/Definitions/{name}:
    head:
      operationId: ImagesTP_CheckImageDefinitionExists
      parameters:
      - description: Name of the image definition.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of an image definition by name.
      tags:
      - ImagesTP
  /techpreview/{customerid}/{siteid}/Images/Definitions/{nameOrId}:
    delete:
      operationId: ImagesTP_RemoveImageDefinition
      parameters:
      - description: Name or id of image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, this will be queried as a background task.
          The task will have JobType AddImageVersion.
          When the task is complete it will redirect to GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a specified image definition
      tags:
      - ImagesTP
    get:
      operationId: ImagesTP_GetImageDefinition
      parameters:
      - description: The name or Id of an image definition.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a specified image definition
      tags:
      - ImagesTP
    patch:
      operationId: ImagesTP_PatchImageDefinition
      parameters:
      - description: Name or id of an image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageDefinitionRequestModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageDefinitionResponseModel'
          description: ""
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a specified image definition
      tags:
      - ImagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Images/Definitions/{nameOrId}/Versions:
    get:
      operationId: ImagesTP_GetImageVersionsByDefinition
      parameters:
      - description: "Name or Id of the image definition, currently only Id is supported."
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: The max number of items returned by this query.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionResponseModelCollection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all image versions associated with a image definition
      tags:
      - ImagesTP
    post:
      operationId: ImagesTP_AddImageVersion
      parameters:
      - description: Name or id of image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, this will be queried as a background task.
          The task will have JobType AddImageVersion.
          When the task is complete it will redirect to GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageVersionRequestModel'
        description: CreateImageVersionRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: ""
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add an image version to a specific image definition
      tags:
      - ImagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Images/Definitions/{nameOrId}/Versions/{versionNameOrId}:
    delete:
      operationId: ImagesTP_RemoveImageDefinitionImageVersion
      parameters:
      - description: Name or id of image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or id of image version
        in: path
        name: versionNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a specified image versions
      tags:
      - ImagesTP
    get:
      operationId: ImagesTP_GetImageDefinitionImageVersion
      parameters:
      - description: Name or id of image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or id of image version
        in: path
        name: versionNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a specified image version
      tags:
      - ImagesTP
    patch:
      operationId: ImagesTP_PatchImageDefinitionImageVersion
      parameters:
      - description: Name or id of image definition
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or id of image version
        in: path
        name: versionNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageVersionRequestModel'
        description: Request model to update image version
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: ""
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an image version
      tags:
      - ImagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Images/Versions/{id}:
    delete:
      operationId: ImagesTP_RemoveImageVersion
      parameters:
      - description: Id of image version
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete an image versions specified by id
      tags:
      - ImagesTP
    get:
      operationId: ImagesTP_GetImageVersion
      parameters:
      - description: Id of image version
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of an image version specified by Id
      tags:
      - ImagesTP
    patch:
      operationId: ImagesTP_PatchImageVersion
      parameters:
      - description: Id of image version
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageVersionRequestModel'
        description: Request model to update image version
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionDetailResponseModel'
          description: ""
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update an image version specified by id
      tags:
      - ImagesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Images/Versions/{versionId}/Catalogs:
    get:
      operationId: ImagesTP_GetCatalogsByImageVersion
      parameters:
      - description: Image version uid
        in: path
        name: versionId
        required: true
        schema:
          nullable: false
          type: string
      - description: The max number of items returned by this query.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageVersionCatalogResponseModelCollection'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get catalogs use the specific image version.
      tags:
      - ImagesTP
  /techpreview/{customerid}/{siteid}/IsRunningInOrchestrationService:
    get:
      description: Get list of network printers
      operationId: OrchestrationServiceTP_IsRunningInOrchestrationService
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: "True if running in the real orchestration service; should\
            \ return false or 400, 401 or 403 error from the mock service."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Is running in the Orchestration Service
      tags:
      - OrchestrationServiceTP
  /techpreview/{customerid}/{siteid}/Jobs:
    get:
      description: |-
        For security reasons, jobs are only visible to the caller who
        initiated them.

        Note: completed jobs will be automatically removed by the system
        48 hours after completion.
      operationId: JobsTP_GetJobs
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModelCollection'
          description: List of jobs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Get the list of jobs that are currently active, or have recently
        completed, and were initiated by the caller.
      tags:
      - JobsTP
  /techpreview/{customerid}/{siteid}/Jobs/{id}:
    delete:
      description: |-
        For security reasons, jobs are only visible to the caller who
        initiated them.


        This may only be called if the job has completed (with or without an error
        or warning) or if the job has been cancelled.  It will return an error
        if the job is still in progress.


        Note: completed jobs will be automatically removed by the system
        48 hours after completion.  After this happens, this call will
        return `404 Not Found` when given the removed job Id.
      operationId: JobsTP_DeleteJob
      parameters:
      - description: ID of the job to remove.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Removes the job record.
      tags:
      - JobsTP
    get:
      description: |-
        For security reasons, jobs are only visible to the caller who
        initiated them.

        Note: completed jobs will be automatically removed by the system
        48 hours after completion.  After this happens, this call will
        return `404 Not Found` when given the removed job Id.
      operationId: JobsTP_GetJob
      parameters:
      - description: ID of the job.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Details of the job.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details of a single job.
      tags:
      - JobsTP
  /techpreview/{customerid}/{siteid}/Jobs/{id}/$cancel:
    post:
      description: "For security reasons, jobs are only visible to the caller who\n\
        initiated them.\n\nThis may only be called if \nis `true`, OR if the job has\
        \ completed (with or without an error\nor warning).\n\nNote: completed jobs\
        \ will be automatically removed by the system\n48 hours after completion.\
        \  After this happens, this call will\nreturn `404 Not Found` when given the\
        \ removed job Id."
      operationId: JobsTP_CancelJob
      parameters:
      - description: ID of the job to remove.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Job details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Cancel a job.
      tags:
      - JobsTP
  /techpreview/{customerid}/{siteid}/Jobs/{id}/$SkipRemaining:
    post:
      description: "For security reasons, jobs are only visible to the caller who\n\
        initiated them.\n\nOnly supported for jobs where  \nis equal to .  Any job\
        \ that\ndoes not support this action will return a `501 Not Implemented`\n\
        response code.\n\n\nIf the job has already completed successfully, this call\
        \ will return\na `303 See Other` response, with a `Location` header\npointing\
        \ to the affected resource(s).\n\nNote: completed jobs will be automatically\
        \ removed by the system\n48 hours after completion.  After this happens, this\
        \ call will\nreturn `404 Not Found` when given the removed job Id."
      operationId: JobsTP_SkipRemainingSubtasks
      parameters:
      - description: ID of the job.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Details of the job.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Skips any remaining / unstarted subtasks of the job.
      tags:
      - JobsTP
  /techpreview/{customerid}/{siteid}/Jobs/{id}/Results:
    get:
      description: |-
        For security reasons, jobs are only visible to the caller who
        initiated them.

        Most jobs do not store results, but rather, redirect the caller
        to the object(s) upon which the job was executing once complete.
        However, some jobs (such as long-running GET operations) have
        results which are stored independently and are retrievable from
        this API.  Consult the documentation of the API which initiated
        the job to determine if the results are obtained from this API
        or elsewhere.


        If the job has completed but its results are not retrievable
        here, the call will return a `303 See Other` response, with a
        response header Location directing the caller to an API where
        the job results are obtained.

        Note: completed jobs will be automatically removed by the system
        48 hours after completion.  After this happens, this call will
        return `404 Not Found` when given the removed job Id.
      operationId: JobsTP_GetJobResults
      parameters:
      - description: ID of the job.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Job results.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the results of a job which has completed execution.
      tags:
      - JobsTP
  /techpreview/{customerid}/{siteid}/Licensing/AddLicense:
    post:
      operationId: LicensingTP_AddLicense
      parameters:
      - description: |-
          If `true`, Adding license will be executed as a background task.
          The task will have JobType AddLicense.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLicenseRequestModel'
        description: Request model to add license file.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLicenseResponseModel'
          description: ""
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add license to license server.
      tags:
      - LicensingTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Licensing/AllocateLicense:
    post:
      operationId: LicensingTP_AllocateLicense
      parameters:
      - description: |-
          If `true`, allocating license will be executed as a background task.
          The task will have JobType AllocateLicense.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseEntitlementRequestModel'
        description: The request model to allocate license
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Allocate license by the License Access Code
      tags:
      - LicensingTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/Licensing/CheckLicenseCertificate:
    get:
      operationId: LicensingTP_CheckLicenseCertificate
      parameters:
      - in: query
        name: adminServer
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check the certificate of the license server
      tags:
      - LicensingTP
  /techpreview/{customerid}/{siteid}/Licensing/LicenseAdministrators:
    get:
      operationId: LicensingTP_GetLicenseAdministrators
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingUserResponseModelCollection'
          description: The list of license administrators
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the license administrators
      tags:
      - LicensingTP
    post:
      operationId: LicensingTP_CreateLicenseAdministrator
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLicensingAdminRequestModel'
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a new license administrator
      tags:
      - LicensingTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Licensing/LicenseAdministrators/{nameOrId}:
    delete:
      operationId: LicensingTP_DeleteLicenseAdministrator
      parameters:
      - in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a license administrator
      tags:
      - LicensingTP
    patch:
      operationId: LicensingTP_UpdateLicenseAdministrator
      parameters:
      - description: SamName or SID of the administrator account.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLicensingAdminRequestModel'
        description: The update request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the license administrator permission
      tags:
      - LicensingTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Licensing/LicenseAlert:
    get:
      operationId: LicensingTP_GetLicensingAlert
      parameters:
      - in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingAlertModel'
          description: The alert for license
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get alert for license.
      tags:
      - LicensingTP
  /techpreview/{customerid}/{siteid}/Licensing/LicenseCertificate:
    get:
      operationId: LicensingTP_GetLicenseCertificate
      parameters:
      - in: query
        name: adminServer
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseCertificateResponseModel'
          description: The certificate of the license server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the certificate of the license server
      tags:
      - LicensingTP
  /techpreview/{customerid}/{siteid}/Licensing/LicenseEntitlements:
    post:
      operationId: LicensingTP_GetLicenseEntitlements
      parameters:
      - description: |-
          If `true`, getting licensing entitlements will be executed as a background task.
          The task will have JobType GetLicenseEntitlement.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseAccessCodeRequestModel'
        description: The request model to get license entitlement
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseEntitlementResponseModelCollection'
          description: The license entitlements
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get license entitlements by the License Access Code
      tags:
      - LicensingTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/Licensing/LicenseOverview:
    get:
      operationId: LicensingTP_GetLicenseSummary
      parameters:
      - description: "If True, license inventories will be returned in the response."
        in: query
        name: includeInventory
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "If `true`, to get the license overview information will be created\
          \ as a background task.\n            The task will have JobType GetLicenseSummary.\n\
          \            "
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseSummaryResponseModel'
          description: License Overview information
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the license overview
      tags:
      - LicensingTP
  /techpreview/{customerid}/{siteid}/Licensing/LicensePermission:
    get:
      operationId: LicensingTP_GetLicensePermission
      parameters:
      - description: "If true, AuthorizationFailed results in None being returned;\
          \ otherwise an exception is thrown."
        in: query
        name: onConnect
        required: true
        schema:
          nullable: false
          type: boolean
      - description: "If `true`, to get the permission to the license server will\
          \ be created as a background task.\n            The task will have JobType\
          \ GetLicensePermission.\n            "
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensePermissionResponseModel'
          description: Permission level to the license server
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the permission to the license server
      tags:
      - LicensingTP
  /techpreview/{customerid}/{siteid}/Licensing/LicenseProductEdition:
    get:
      operationId: LicensingTP_GetLicenseProductEdition
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseProductEditionResponseModel'
          description: License product edition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get License product edition
      tags:
      - LicensingTP
    patch:
      operationId: LicensingTP_EditLicenseProductEdition
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditLicenseProductEditionRequestModel'
        description: Request model to update License edition.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the product license edition
      tags:
      - LicensingTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Licensing/LicenseServer:
    patch:
      operationId: LicensingTP_SetLicenseServer
      parameters:
      - description: |-
          If `true`, setting license server  will be executed as a background task.
          The task will have JobType SetLicenseServer.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditLicenseServerRequestModel'
        description: Request model to set license server.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Change license server
      tags:
      - LicensingTP
      x-codegen-request-body-name: model
  /techpreview/{customerid}/{siteid}/machineCatalogActions:
    delete:
      operationId: ActionsTP_DeleteActions
      parameters:
      - description: 'If async to request actions. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete all completed machine catalog actions.
      tags:
      - ActionsTP
    get:
      operationId: ActionsTP_GetActions
      parameters:
      - description: 'If async to request actions. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          The max number of actions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseModelCollection'
          description: ActionResponseModelCollection
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all machine catalog actions.
      tags:
      - ActionsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs:
    get:
      description: Get all machine catalogs in the site.
      operationId: MachineCatalogsTP_GetMachineCatalogs
      parameters:
      - description: Admin folder path or Id.
        in: query
        name: adminFolder
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogResponseModelCollection'
          description: List of machine catalogs.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all machine catalogs.
      tags:
      - MachineCatalogsTP
    post:
      description: "Create a machine catalog.\n\nNote that if a machine catalog uses\
        \ \nof , the machine catalog creation will always invoke asynchronous\njob(s)\
        \ for the provisioning action.  If this API is invoked asynchronously, the\
        \ asynchronous job\nwill include only the machine catalog creation, and the\
        \ provisioning task(s) will be associated\nwith the newly created catalog.\
        \  If this API is invoked synchronously, the machine catalog\ncreation will\
        \ complete synchronously but the provisioning task(s) may still be executing,\
        \ and\nwill be associated with the newly created catalog."
      operationId: MachineCatalogsTP_CreateMachineCatalog
      parameters:
      - description: |-
          If `true`, the machine catalog (and associated objects) will be
          created as a background task.
          The task will have JobType CreateMachineCatalog.
          When the task is complete it will redirect to
          GetMachineCatalog.
          The job's Parameters will contain properties:
          * _Name_ - Name of the machine catalog being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The machine catalog name or Id to recreate from. It is only used for catalog recreation
          scenario. Here specify name or Id of the failed catalog to recreate.
        in: query
        name: sourceNameOrId
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMachineCatalogRequestModel'
        description: Details about the machine catalog to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogDetailResponseModel'
          description: Details about the machine catalog that was just created.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/$checkCatalogName:
    post:
      description: Check for the existence of a machine catalog by name
      operationId: MachineCatalogsTP_TestMachineCatalogExists
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogNameCheckRequestModel'
        description: Name of the machine catalog.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Test the existence of a machine catalog by name.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Machinecatalogs/$search:
    post:
      description: |-
        Perform an advanced search for machinecatalogs.  Note that some combinations
        of search parameters may result in slow performance.
      operationId: MachineCatalogsTP_DoMachineCatalogSearch
      parameters:
      - description: |-
          If `true`, the catalogs (and associated objects) will be added as a
          background task.
          The task will have JobType SearchMachineCatalogs.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogSearchResponseModelCollection'
          description: List of machine catalogs that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for machinecatalogs.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/machineCatalogs/{catalogNameOrId}/actions:
    delete:
      operationId: ActionsTP_DeleteAction
      parameters:
      - description: 'The machine catalog name or id. '
        in: path
        name: catalogNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete specified catalog actions.
      tags:
      - ActionsTP
    get:
      operationId: ActionsTP_GetAction
      parameters:
      - description: 'The machine catalog name or id. '
        in: path
        name: catalogNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "The action Id, the guid string value. "
        in: query
        name: actionId
        schema:
          nullable: true
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseModelCollection'
          description: ActionResponseModel
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get machine catalog actions by specified catalog name or id and action
        Id.
      tags:
      - ActionsTP
  /techpreview/{customerid}/{siteid}/machineCatalogs/{catalogNameOrId}/actions/{actionId}:
    get:
      operationId: ActionsTP_GetActionById
      parameters:
      - description: 'The machine catalog name or id. '
        in: path
        name: catalogNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "The action Id, the guid string value. "
        in: path
        name: actionId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseModel'
          description: |-
            ActionResponseModel
            ActionCatalogCreationResponseModel
            ActionMachineCreationResponseModel
            ActionMachineRemovalResponseModel
            ActionUpdateImageResponseModel
            or
            ActionResponseModel
            ActionCatalogCreationResponseModel
            ActionMachineCreationResponseModel
            ActionMachineRemovalResponseModel
            ActionUpdateImageResponseModel
            or
            ActionResponseModel
            ActionCatalogCreationResponseModel
            ActionMachineCreationResponseModel
            ActionMachineRemovalResponseModel
            ActionUpdateImageResponseModel
            or
            ActionResponseModel
            ActionCatalogCreationResponseModel
            ActionMachineCreationResponseModel
            ActionMachineRemovalResponseModel
            ActionUpdateImageResponseModel
            or
            ActionResponseModel
            ActionCatalogCreationResponseModel
            ActionMachineCreationResponseModel
            ActionMachineRemovalResponseModel
            ActionUpdateImageResponseModel
          x-expectedSchemas:
          - description: |-
              ActionResponseModel
              ActionCatalogCreationResponseModel
              ActionMachineCreationResponseModel
              ActionMachineRemovalResponseModel
              ActionUpdateImageResponseModel
            schema:
              $ref: '#/definitions/ActionCatalogCreationResponseModel'
          - description: |-
              ActionResponseModel
              ActionCatalogCreationResponseModel
              ActionMachineCreationResponseModel
              ActionMachineRemovalResponseModel
              ActionUpdateImageResponseModel
            schema:
              $ref: '#/definitions/ActionMachineCreationResponseModel'
          - description: |-
              ActionResponseModel
              ActionCatalogCreationResponseModel
              ActionMachineCreationResponseModel
              ActionMachineRemovalResponseModel
              ActionUpdateImageResponseModel
            schema:
              $ref: '#/definitions/ActionMachineRemovalResponseModel'
          - description: |-
              ActionResponseModel
              ActionCatalogCreationResponseModel
              ActionMachineCreationResponseModel
              ActionMachineRemovalResponseModel
              ActionUpdateImageResponseModel
            schema:
              $ref: '#/definitions/ActionUpdateImageResponseModel'
          - description: |-
              ActionResponseModel
              ActionCatalogCreationResponseModel
              ActionMachineCreationResponseModel
              ActionMachineRemovalResponseModel
              ActionUpdateImageResponseModel
            schema:
              $ref: '#/definitions/ActionResponseModel'
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get specified machine catalog specified action.
      tags:
      - ActionsTP
  /techpreview/{customerid}/{siteid}/machineCatalogs/{catalogNameOrId}/actions/{actionId}/$Cancel:
    post:
      operationId: ActionsTP_CancelAction
      parameters:
      - description: 'The machine catalog name or id. '
        in: path
        name: catalogNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "The action Id, the guid string value. "
        in: path
        name: actionId
        required: true
        schema:
          nullable: false
          type: string
      - description: 'If async calling. '
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Cancel the specified machine catalog and specified action.
      tags:
      - ActionsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{name}:
    head:
      description: Check for the existence of a machine catalog by name
      operationId: MachineCatalogsTP_CheckMachineCatalogExists
      parameters:
      - description: |-
          Name of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a machine catalog by name.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}:
    delete:
      description: Delete a machine catalog
      operationId: MachineCatalogsTP_DeleteMachineCatalog
      parameters:
      - description: |-
          Name or ID of the machine catalog to update.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Specifies whether to delete virtual machines that were provisioned in the machine catalog.
          Only relevant when ProvisioningType is
          MCS; otherwise, ignored.

          Optional; default is `true`.
        in: query
        name: deleteVm
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          Specifies what to do with AD machine accounts that are associated with the machine
          catalog.

          Optional; default is .
        in: query
        name: deleteAccount
        schema:
          default: None
          enum:
          - Unknown
          - Leave
          - None
          - Disable
          - Delete
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/MachineAccountDeleteOption'
        x-schema:
          $ref: '#/definitions/MachineAccountDeleteOption'
      - description: |-
          If `true`, the machine catalog (and associated objects) will be
          deleted as a background task.
          The task will have JobType DeleteMachineCatalog.
          When the task is complete it will redirect to
          GetMachineCatalogs.
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine catalog being deleted,
          * _Name_ - Name of the machine catalog being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a machine catalog.
      tags:
      - MachineCatalogsTP
    get:
      description: Get details about a single machine catalog by name or ID of machine
        catalog.
      operationId: MachineCatalogsTP_GetMachineCatalog
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Optional parameters, removing unspecified properties that otherwise\
          \ would have been sent by the server."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogDetailResponseModel'
          description: Details of machine catalog.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details about a single machine catalog.
      tags:
      - MachineCatalogsTP
    patch:
      description: Update a machine catalog
      operationId: MachineCatalogsTP_UpdateMachineCatalog
      parameters:
      - description: |-
          Name or ID of the machine catalog to update.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the machine catalog (and associated objects) will be
          updated as a background task.
          The task will have JobType UpdateMachineCatalog.
          When the task is complete it will redirect to
          GetMachineCatalog.
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine catalog being updated,
          * _Name_ - Name of the machine catalog being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineCatalogRequestModel'
        description: Properties of the machine catalog to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogDetailResponseModel'
          description: New machine catalog details.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/$RebootMachines:
    post:
      description: "Reboot all machines in a machine catalog.\n\n\nNote that there\
        \ is no job representation for the reboot operation.\nThe call returns immediately\
        \ even though the machines reboot over time.\nIf you want to follow the progress\
        \ of the reboot operation, check\nthe \nproperty of the machines in the machine\
        \ catalog."
      operationId: MachineCatalogsTP_RebootMachineCatalogMachines
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootMachinesRequestModel'
        description: Reboot options.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Reboot all machines in a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/$RequestProvVmUpdate:
    post:
      description: |-
        Set-ProvScheme changes the template (provisioning scheme) and does not affect existing machines,
        this method is used to request property update on existing machines
      operationId: MachineCatalogsTP_UpdateMachineCatalogExistingMachines
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Apply current provisioning scheme to existing machines
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/$RollbackProvisioningScheme:
    post:
      description: |-
        Rollback the machine catalog's provisioning scheme.


        Only valid when the machine catalog's ProvisioningType is MCS.


        Provides the ability to roll back the hard disk image used to provision
        virtual machines. If the provisioning scheme has CleanOnBoot equal to
        `true`, then the next time that virtual machines are started, their
        hard disks are updated to this new image. Regardless of CleanOnBoot,
        all new virtual machines created after this call succeeds will use this
        new hard disk image.


        *Note:* The provisioning scheme for a machine catalog cannot be
        changed while any provisioning tasks are already executing for the
        machine catalog.  Cancel existing provisioning tasks or wait for
        their completion before updating the provisioning scheme.
      operationId: MachineCatalogsTP_RollbackMachineCatalogProvisioningScheme
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Due to the long-running nature of the update operation, it cannot
          complete synchronously, and always initiates an asynchronous job to
          run to completion.  If the `async` parameter is `true`, the only
          difference is that instead of returning the initial job status in
          the payload, the response is instead `202` with the `Location`
          header pointing to the job status API.  This may be desirable for
          clients that wish to unify their logic for handling asynchronous
          jobs.  The task will have JobType
          .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the machine catalog for which the provisioning scheme is being updated,
          * _Name_ - Name of the machine catalog for which the provisioning scheme is being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RebootMachinesRequestModel'
        description: Details about the image update to be performed.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Asynchronous job status.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Rollback the machine catalog's provisioning scheme.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/$test:
    post:
      description: |-
        Run tests on a machine catalog and create a test report.  Obtain the
        most recent report from
        GetMachineCatalogTestReport.
      operationId: MachineCatalogsTP_TestMachineCatalog
      parameters:
      - description: |-
          Name or ID of the machine catalog to test.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tests will run as a background task.
          This is recommended as the tests may take some time to run,
          and if it exceeds 90 seconds the request may time out.
          The task will have JobType TestMachineCatalog.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine catalog being tested,
          * _Name_ - Name of the machine catalog being tested.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogTestResponseModel'
          description: Machine catalog test report.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run tests on a machine catalog and create a test report.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/$UpdateProvisioningScheme:
    post:
      description: |-
        Update the machine catalog's provisioning scheme.


        Only valid when the machine catalog's ProvisioningType is MCS.


        Provides the ability to update the hard disk image used to provision
        virtual machines. If the provisioning scheme has CleanOnBoot equal to
        `true`, then the next time that virtual machines are started, their
        hard disks are updated to this new image. Regardless of CleanOnBoot,
        all new virtual machines created after this call succeeds will use this
        new hard disk image.


        A snapshot or VM template is used rather than a VM, so that the
        content of the hard disk for the provisioning scheme can be easily
        determined.


        The previous hard disk image path is stored into the history (see
        ).  The
        data stored in the history allows for a rollback to be undertaken,
        to revert to the previous hard disk image if required.


        *Note:* The provisioning scheme for a machine catalog cannot be
        changed while any provisioning tasks are already executing for the
        machine catalog.  Cancel existing provisioning tasks or wait for
        their completion before updating the provisioning scheme.
      operationId: MachineCatalogsTP_UpdateMachineCatalogProvisioningScheme
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Due to the long-running nature of the update operation, it cannot
          complete synchronously, and always initiates an asynchronous job to
          run to completion.  If the `async` parameter is `true`, the only
          difference is that instead of returning the initial job status in
          the payload, the response is instead `202` with the `Location`
          header pointing to the job status API.  This may be desirable for
          clients that wish to unify their logic for handling asynchronous
          jobs.  The task will have JobType
          .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the machine catalog for which the provisioning scheme is being updated,
          * _Name_ - Name of the machine catalog for which the provisioning scheme is being updated,
          * _MasterImageXDPath_ - Path to the new image specified for the provisioning scheme, in XenApp & XenDesktop path format.
          * _MasterImageFullPath_ - Path to the new image specified for the provisioning scheme, relative to the root of the API.
          * _MasterImageRelativePath_ - Path to the new image specified for the provisioning scheme, relative to the resource pool.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineCatalogProvisioningSchemeRequestModel'
        description: Details about the image update to be performed.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Asynchronous job status.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the machine catalog's provisioning scheme.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/Administrators:
    get:
      description: Get administrators who can administer a machine catalog
      operationId: MachineCatalogsTP_GetMachineCatalogsAdministrators
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/DeliveryGroupAssociations:
    get:
      description: Get delivery group associations by name or Id of a remote pc machine
        catalog.
      operationId: MachineCatalogsTP_GetMachineCatalogDeliveryGroupAssociations
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of delivery group associations returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupAssociationResponseModelCollection'
          description: The delivery group associations of the given machine catalog
            identifier
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get delivery group associations of a machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/LastMasterImage:
    get:
      description: Get the last master VM images used by the machine catalog
      operationId: MachineCatalogsTP_GetMachineCatalogLastMasterImage
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMImageResponseModel'
          description: Last image used by the machine catalog to provision VMs.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the last master VM images used by the machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/MachineAccounts:
    get:
      description: |-
        Get all machine accounts associated with a machine catalog.  This returns
        all machine accounts for the machine catalog regardless of whether they are
        in-use, available, locked, etc.


        This is only relevant for machine catalogs where ProvisioningType is MCS.
      operationId: MachineCatalogsTP_GetMachineCatalogMachineAccounts
      parameters:
      - description: |-
          Name or ID of the machine catalog to get machine accounts for.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machine accounts returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the machine accounts will be queried as a background task.
          The task will have JobType GetMachineCatalogMachineAccounts.
          When the task is complete it will redirect to GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: The state of accounts for query.
        in: query
        name: accountState
        schema:
          enum:
          - Unknown
          - Available
          - InUse
          - Error
          - Tainted
          - Locked
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/ProvisioningSchemeMachineAccountState'
        x-schema:
          $ref: '#/definitions/ProvisioningSchemeMachineAccountState'
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningSchemeMachineAccountResponseModelCollection'
          description: List of machine accounts.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all machine accounts associated with a machine catalog.
      tags:
      - MachineCatalogsTP
    post:
      description: Add a machine account to the machine catalog. This is only relevant
        for machine catalogs where ProvisioningType is MCS.
      operationId: MachineCatalogsTP_AddMachineCatalogMachineAccount
      parameters:
      - description: |-
          Name or ID of the machine catalog to add the machine account to.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineAccountRequestModel'
        description: Machine account to add to the machine catalog.  The machine must
          not be a member of any other machine catalog.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningSchemeMachineAccountResponseModel'
          description: Machine account that was added.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a machine account to the machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: machine
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/MachineAccounts/{machine}:
    delete:
      description: Remove a machine account from the machine catalog. This is only
        relevant for machine catalogs where ProvisioningType is MCS.
      operationId: MachineCatalogsTP_RemoveMachineCatalogMachineAccount
      parameters:
      - description: |-
          Name or ID of the machine catalog to remove the machine account from.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Machine account to remove.  May be specified by SamName, UPN,\
          \ or SID."
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - description: Specifies what to do with the machine account in AD.  Optional;
          default is None.
        in: query
        name: deleteAccount
        schema:
          default: None
          enum:
          - Unknown
          - Leave
          - None
          - Disable
          - Delete
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/MachineAccountDeleteOption'
        x-schema:
          $ref: '#/definitions/MachineAccountDeleteOption'
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a machine account from the machine catalog.
      tags:
      - MachineCatalogsTP
    patch:
      description: |-
        Update a machine account within the machine catalog.  This is typically used to reset or
        update the machine password so that the site is able to apply the machine account to a
        provisioned VM.


        This is only relevant for machine catalogs where ProvisioningType is MCS.
      operationId: MachineCatalogsTP_UpdateMachineCatalogMachineAccount
      parameters:
      - description: |-
          Name or ID of the machine catalog containing the machine account.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Machine account to update.  May be specified by SamName, UPN,\
          \ or SID."
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineAccountRequestModel'
        description: New details for the machine account record.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningSchemeMachineAccountResponseModel'
          description: Machine account details.
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a machine account within the machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: details
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/Machines:
    get:
      operationId: MachineCatalogsTP_GetMachineCatalogMachines
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machines returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "Optional parameters, only the specified properties in the fields\
          \ are required."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResponseModelCollection'
          description: The machines of the given machine catalog identifier
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: GET the machines of a catalog
      tags:
      - MachineCatalogsTP
    post:
      description: |-
        Add a machine to the machine catalog.  This is the first step in making the
        machine available to run users' desktops and applications. The machine may
        be physical or virtual.  The type of machine (physical or virtual) must
        match the machine catalog configuration.


        Note that due to
        the long-running nature of the adding operation, it cannot
        complete synchronously, would always initiate an asynchronous job to
        run to completion.


        The machine must support the expected capabilities of the machine catalog:
        the  and
        . The session
        support of the machine is determined by the type of Citrix VDA software
        installed (server or workstation) and the functional level depends on the
        version of the Citrix VDA software installed.  The API will complete
        successfully if these are not correct but the machine will be unable to register.


        Note: to add multiple machines in a single call, use the
         API.
      operationId: MachineCatalogsTP_AddMachineCatalogMachine
      parameters:
      - description: |-
          Name or ID of the machine catalog to add machine to.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the machine will be added into the machine catalog as a background task.
          The task will have JobType AddMachineCatalogMachine.
          When the task is complete it will redirect to
          GetMachineCatalog.
          The job's Parameters will contain properties:
          * _NameOrId_ - Name or ID of the machine being added.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: "Access token to use when performing the operation. If specified,\
          \ must be in a format matching that of the standard 'Authorization' request\
          \ header; UTF8-encoded, then base64-encoded, then the \"Bearer\" scheme\
          \ prepended.\r\nExample: Bearer bGljaGVuZy5saW5AY2l0cml4LmNvbQ=="
        in: header
        name: X-AccessToken
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMachineToMachineCatalogDetailRequestModel'
        description: Details of the machine to add to the machine catalog.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponseModel'
          description: Asynchronous job status.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add machine to the machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: machine
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/Machines/{machine}:
    delete:
      description: |-
        Remove a machine from the machine catalog.  Removing the machine from the machine
        catalog removes it from the site.


        A machine cannot be removed from the machine catalog if it is a member of a delivery group.


        Note: to remove multiple machines in a single call, use the
         API.
      operationId: MachineCatalogsTP_RemoveMachineCatalogMachine
      parameters:
      - description: |-
          Name or ID of the machine catalog to remove the machine from.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Machine to remove from the catalog.  May be specified by name,\
          \ ID, or SID."
        in: path
        name: machine
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a machine from the machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/MasterImageHistory:
    get:
      description: Get the history of master VM images used by the machine catalog
      operationId: MachineCatalogsTP_GetMachineCatalogMasterImageHistory
      parameters:
      - description: Name or ID of the machine catalog.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMImageResponseModelCollection'
          description: List of images used by the machine catalog to provision VMs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the history of master VM images used by the machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/RemotePCEnrollmentScopes/$checkScopeName:
    post:
      description: |-
        Check for the existence of a RemotePC enrollment scope by name. Note that
        RemotePC enrollment scope names must be unique within the site, so the
        `nameOrId` parameter does not affect whether the RemotePC enrollment scope
        name is found.
        If the name is found to be available, this returns 404 Not Found.
        If a RemotePC enrollment scope by that name exists and is associated with the
        specified machine catalog, this returns 204 No Content. If a RemotePC
        enrollment scope by that name exists and is associated with a different
        machine catalog, this returns 303 See Other, and the `Location`
        response header refers to location of the machine catalog which is associated
        by the RemotePC enrollment scope.
      operationId: MachineCatalogsTP_TestRemotePCEnrollmentScopeExists
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemotePCEnrollmentScopeCheckModel'
        description: Request model that contains distinguished name of an OU containing
          machines allowed to enroll as remote PCs.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Check for the existence of a RemotePC enrollment scope by name in the request body.
        Use HttpPost and take name in body as this name may be very long, and cause url too long exception.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/RemotePCEnrollmentScopes/{name}:
    head:
      description: |-
        Check for the existence of a RemotePC enrollment scope by name. Note that
        RemotePC enrollment scope names must be unique within the site, so the
        `nameOrId` parameter does not affect whether the RemotePC enrollment scope
        name is found.
        If the name is found to be available, this returns 404 Not Found.
        If a RemotePC enrollment scope by that name exists and is associated with the
        specified machine catalog, this returns 204 No Content. If a RemotePC
        enrollment scope by that name exists and is associated with a different
        machine catalog, this returns 303 See Other, and the `Location`
        response header refers to location of the machine catalog which is associated
        by the RemotePC enrollment scope.
      operationId: MachineCatalogsTP_CheckRemotePCEnrollmentScopeExists
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Distinguished name of an OU containing machines allowed to enroll
          as remote PCs.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a RemotePC enrollment scope by name.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/StartMenuApplications:
    get:
      description: |-
        Get the start menu applications from a machine in the machine catalog

        Note that this API may require a machine within a catalog to be
        booted, if no machines are currently available.  Therefore the API
        may take quite some time to complete.  Consider using the `async=true`
        parameter to mitigate this.
      operationId: MachineCatalogsTP_GetMachineCatalogStartMenuApplications
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: The machines to get start menu applications
        explode: false
        in: query
        name: machines
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          If `true`, the start menu applications will be queried as a background task.
          This is recommended as this operation may cause a power
          action, turning on a machine in order to gather the data.
          This may take some time to run,
          and if it exceeds 90 seconds the request may time out.
          The task will have JobType GetStartMenuApplications.
          When the task is complete it will redirect to
          "JobsControllerTP.GetJobResults(string)".
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine catalog from which start menu applications are being obtained,
          * _Name_ - Name of the machine catalog from which start menu applications are being obtained.
          * _MachineId_ - ID of the machine selected, from which the start menu applications are being obtained; will be present in Parameters only after a machine is selected.
          * _MachineName_ - Name of the machine selected, from which the start menu applications are being obtained; will be present in Parameters only after a machine is selected.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMenuApplicationResponseModelCollection'
          description: List of start menu applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the start menu applications from a machine in the machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/Tags:
    get:
      description: |-
        Get tags associated with a machine catalog.  This includes tags which are
        directly associated with the machine catalog, as well as tags associated with
        machines that are associated with the machine catalog.
        To find only tags directly associated with the machine catalog,
        filter the results to those with
        NumMachineCatalogs equal to `1`.
      operationId: MachineCatalogsTP_GetMachineCatalogTags
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "Optional parameters, removing unspecified properties that otherwise\
          \ would have been sent by the server."
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get tags associated with a machine catalog.
      tags:
      - MachineCatalogsTP
    put:
      operationId: MachineCatalogsTP_SetMachineCatalogTags
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequestModel'
        description: Details of the tags to set on the machine catalog.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set tags associated with a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/Tags/{tagNameOrId}:
    delete:
      description: |-
        Remove a tag from a machine catalog.  Does not delete the tag,
        only its association to the machine catalog.
      operationId: MachineCatalogsTP_RemoveMachineCatalogTags
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a tag from a machine catalog.
      tags:
      - MachineCatalogsTP
    post:
      operationId: MachineCatalogsTP_AddMachineCatalogTags
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to add.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the machine catalog.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a tag to a machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/TestReport:
    get:
      description: |-
        Get the test report from the last run of
        TestMachineCatalog.
      operationId: MachineCatalogsTP_GetMachineCatalogTestReport
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportResponseModel'
          description: |-
            Last test report.  If no tests have been run,
            returns a 404 Not Found.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the most recent test report of a machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/UpgradeSchedule:
    delete:
      description: |-
        A VDA upgrade schedule can only be cancelled for a machine catalog
        when the upgrade status is waiting to start. If the current upgrade is
        in another status, the operation fails with HTTP response status 404.
      operationId: MachineCatalogsTP_RemoveMachineCatalogUpgradeSchedule
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, VDA upgrade schedules existing with all machines within the
          catalog will be removed except those upgrade status in progressing.
          If `false`, only the perform removing when catalog level schedule not started.
        in: query
        name: force
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "If `true`, the VDA upgrade schedule will be removed as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a pending VDA upgrade schedule for a machine catalog.
      tags:
      - MachineCatalogsTP
    patch:
      operationId: MachineCatalogsTP_UpdateMachineCatalogUpgradeSchedule
      parameters:
      - description: |-
          Name or ID of the machine catalog.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be updated as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUpgradeScheduleRequestModel'
        description: Details about the updated VDA upgrade schedule.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "409":
          content: {}
          description: ""
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Reschedule a pending VDA upgrade schedule for a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
    post:
      description: |-
        A new VDA upgrade schedule can only be created for a machine catalog
        when the upgrade status for the catalog is UpgradeSuccessful, UpgradeFailed or UpgradeCancelled.
        If the status is ongoing or waiting to start, the operation fails.
      operationId: MachineCatalogsTP_CreateMachineCatalogUpgradeSchedule
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be created as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpgradeScheduleRequestModel'
        description: Details about the VDA upgrade schedule to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Setup a new VDA upgrade schedule for a machine catalog.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/VDAComponentsAndFeatures:
    get:
      operationId: MachineCatalogsTP_GetMachineCatalogVDAComponentsAndFeatures
      parameters:
      - description: |-
          Name or ID of the machine catalog.
                      If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogVusComponentResponseModel'
          description: Components and features of VDAs associated with a machine catalog.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the components and features of VDAs associated with a machine catalog.
      tags:
      - MachineCatalogsTP
  /techpreview/{customerid}/{siteid}/MachineCatalogs/{nameOrId}/VDAComponentsAndFeatures/$validate:
    post:
      operationId: MachineCatalogsTP_ValidateMachineCatalogVDAComponentsAndFeaturesSelection
      parameters:
      - description: |-
          Name or ID of the machine catalog. If the catalog is present in a catalog folder,
                      specify the name in this format: {catalog folder path plus catalog name}.
                      For example, FolderName1|FolderName2|CatalogName.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: If async execute.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VDAComponentsSelectionValidationRequestModel'
        description: More details attached to this validation.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDAComponentsSelectionValidationResponseModel'
          description: The validation result.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Validate the VDA component selection at catalog level that can be Included/Excluded and features that need enable
        during an VDA upgrade using VDA Upgrade Service.
      tags:
      - MachineCatalogsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineConfigurations:
    get:
      operationId: ConfigurationSlotsTP_GetMachineConfigurations
      parameters:
      - description: |-
          The max number of machine configurations returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfigurationResponseModelCollection'
          description: List of machine configurations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of machine configurations.
      tags:
      - ConfigurationSlotsTP
    post:
      operationId: ConfigurationSlotsTP_CreateMachineConfiguration
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMachineConfigurationRequestModel'
        description: The create request CreateConfigurationSlotRequestModel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfigurationResponseModel'
          description: The created configuration slot ConfigurationSlotResponseModel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a machine configuration.
      tags:
      - ConfigurationSlotsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineConfigurations/{uid}:
    delete:
      operationId: ConfigurationSlotsTP_DeleteMachineConfiguration
      parameters:
      - description: Uid of the machine configuration to be deleted.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a machine configuration by uid.
      tags:
      - ConfigurationSlotsTP
    get:
      operationId: ConfigurationSlotsTP_GetMachineConfiguration
      parameters:
      - description: Unique id of the machine configuration.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineConfigurationResponseModel'
          description: Details of the machine configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single machine configuration.
      tags:
      - ConfigurationSlotsTP
    patch:
      operationId: ConfigurationSlotsTP_UpdateMachineConfiguration
      parameters:
      - description: Unique id of the machine configuration.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineConfigurationRequestModel'
        description: Details of machine configuration to update.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Modify a single machine configuration.
      tags:
      - ConfigurationSlotsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/MachineConfigurations/{uid}/DeliveryGroups/{deliveryGroupNameOrId}:
    delete:
      operationId: ConfigurationSlotsTP_RemoveMachineConfigurationDeliveryGroup
      parameters:
      - description: Unique id of the machine configuration.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: Name or uid or uuid of the delivery group to be detached.
        in: path
        name: deliveryGroupNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Removes the association of a machine configuration from a delivery
        group.
      tags:
      - ConfigurationSlotsTP
    patch:
      operationId: ConfigurationSlotsTP_AddMachineConfigurationDeliveryGroup
      parameters:
      - description: Unique id of the machine configuration.
        in: path
        name: uid
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: Name or id or uuid of the delivery group to be associated with.
        in: path
        name: deliveryGroupNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Associates a machine configuration with a delivery group.
      tags:
      - ConfigurationSlotsTP
  /techpreview/{customerid}/{siteid}/MachineIdentityPools:
    get:
      description: Get all existing machine identity pools.
      operationId: MachineIdentityPoolsTP_GetMachineIdentityPools
      parameters:
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineIdentityPoolResponseModelCollection'
          description: List of existing machine catalog identity pools.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all existing machine identity pools.
      tags:
      - MachineIdentityPoolsTP
  /techpreview/{customerid}/{siteid}/MachineIdentityPools/{id}:
    get:
      operationId: MachineIdentityPoolsTP_GetMachineIdentityPool
      parameters:
      - description: Machine identity pool id
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineIdentityPoolResponseModel'
          description: 'Machine identity pool. '
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get existing machine identity pool with id.
      tags:
      - MachineIdentityPoolsTP
  /techpreview/{customerid}/{siteid}/MachineIdentityPools/{identityPoolId}/Provschemes:
    get:
      operationId: MachineIdentityPoolsTP_GetProvSchemeReferences
      parameters:
      - description: Identity pool id.
        in: path
        name: identityPoolId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningSchemeResponseModelCollection'
          description: List of provschemes referencing the given identitypool.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: List all provschemes that reference the given identitypool.
      tags:
      - MachineIdentityPoolsTP
  /techpreview/{customerid}/{siteid}/Machines:
    get:
      description: |-
        Get all the machines in the site.  Note that the response
        may not contain the entire list of machines; if this happens the
        response will have a ContinuationToken
        which, if passed, will resume retrieving results from the original
        query.
      operationId: MachinesTP_GetMachines
      parameters:
      - description: |-
          Optionally limit the results to machines that are either single or multi-session capable.
          If not specified, all types of machines are returned.
        in: query
        name: sessionSupport
        schema:
          enum:
          - Unknown
          - SingleSession
          - MultiSession
          nullable: true
          type: string
          x-schema:
            $ref: '#/definitions/SessionSupport'
        x-schema:
          $ref: '#/definitions/SessionSupport'
      - description: |-
          Optionally limit the results to machines that are either configured or not.
          If not specified, only configured machines are returned.
        in: query
        name: configured
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of machines returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the get machines will be executed as a background task.
          The task will have JobType GetMachines.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResponseModelCollection'
          description: List of machines.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all machines in the site.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/$search:
    post:
      description: "Perform an advanced search for machines.  Note that some combinations\n\
        of search parameters may result in slow performance.\n\nThe 'SessionSupport'\
        \ \nmust be included in search filters."
      operationId: MachinesTP_DoMachineSearch
      parameters:
      - description: |-
          The max number of machines returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the search machines will be executed as a background task.
          The task will have JobType DoMachineSearch.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: The number of machines to skip.
        in: query
        name: skip
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineAndSessionSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResponseModelCollection'
          description: List of machines that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for machines.
      tags:
      - MachinesTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/Machines/{name}:
    head:
      description: Check for the existence of a machine by name
      operationId: MachinesTP_CheckMachineExists
      parameters:
      - description: Name of the machine.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a machine by name.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}:
    delete:
      operationId: MachinesTP_RemoveMachine
      parameters:
      - description: "Machine to remove.  May be specified by SamName, UPN, or SID."
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Specifies whether to delete the virtual machines, or just the machine record
          in the site database.
          Only relevant when ProvisioningType
          Optional; default is `true`.
        in: query
        name: deleteVm
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          Specifies what to do with the machine account in AD.  Optional; default is
          Leave.
          Only relevant when `deleteVm` is `true`; otherwise, ignored.
        in: query
        name: deleteAccount
        schema:
          default: Leave
          enum:
          - Unknown
          - Leave
          - None
          - Disable
          - Delete
          nullable: false
          type: string
          x-schema:
            $ref: '#/definitions/MachineAccountDeleteOption'
        x-schema:
          $ref: '#/definitions/MachineAccountDeleteOption'
      - description: |-
          If `true`, the machine will be deleted as a background task.
          The task will have JobType DeleteMachine.
          When the task is complete it will redirect to
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being deleted,
          * _Name_ - Name of the machine being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a machine from the site.
      tags:
      - MachinesTP
    get:
      description: Get details of a single machine
      operationId: MachinesTP_GetMachine
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: The requested fields.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Details of the machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a single machine.
      tags:
      - MachinesTP
    patch:
      description: |-
        Update a machine.  Typically used to change the assignment of a
        statically-assigned machine.
      operationId: MachinesTP_UpdateMachineCatalogMachine
      parameters:
      - description: "Machine to update.  May be specified by name, ID, or SID."
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tag will be created as a background task.
          The task will have JobType UpdateMachineCatalogMachine.
          When the task is complete it will redirect to
          "GetMachine(string)".
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine being updated,
          * _Name_ - Name of the machine being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineRequestModel'
        description: Details of the machine to update.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a machine.
      tags:
      - MachinesTP
      x-codegen-request-body-name: update
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$disconnect:
    post:
      description: Disconnect all sessions on a machine.
      operationId: MachinesTP_DisconnectSessions
      parameters:
      - description: Machine to disconnect sessions from.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the session will be disconnected as a background task.
          The task will have JobType DisconnectSessions.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine on which sessions are being disconnected.
          * _Name_ - Name of the machine on which sessions are being disconnected.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Detail of the machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Disconnect all sessions on a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$logoff:
    post:
      description: Logoff all sessions on a machine
      operationId: MachinesTP_LogoffMachineSessions
      parameters:
      - description: Machine to log sessions off from.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the sessions will be logged off as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the machine which sessions are being logged off from,
          * _Name_ - Name of the machine which sessions are being logged off from.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Logoff all sessions on a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$reboot:
    post:
      description: Reboot a machine.  The machine must be capable of power management.
      operationId: MachinesTP_RebootMachine
      parameters:
      - description: Machine to reboot.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the machine will be forced to reboot without waiting for user
          activity to stop.  This may cause loss of user data if work is not saved.
        in: query
        name: force
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the machine will be rebooted as a background task.
          This is recommended as this operation may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType RebootMachines.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being rebooted,
          * _Name_ - Name of the machine being rebooted.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Reboot a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$RequestProvVmUpdate:
    post:
      operationId: MachinesTP_RequestExistingMachinePropertyUpdate
      parameters:
      - description: "Name or ID of the machine. May be specified by name, ID, or\
          \ SID."
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tag will be created as a background task.
          The task will have JobType RequestProvVmUpdate.
          When the task is complete it will redirect to
          "GetMachine(string)".
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine being updated,
          * _Name_ - Name of the machine being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: True for updated successfully.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Request a single machine's property update to the latest provisioning
        scheme configuration
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$resume:
    post:
      description: |-
        Resume a machine after it has been suspended.  The machine must be capable of
        power management.
      operationId: MachinesTP_ResumeMachine
      parameters:
      - description: Machine to resume.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the machine will be resumed as a background task.
          This is recommended as this operation may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType ResumeMachines.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being resumed,
          * _Name_ - Name of the machine being resumed.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Resume a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$shutdown:
    post:
      description: |-
        Shut down (power-off) a machine.  The machine must be capable of power
        management.
      operationId: MachinesTP_ShutdownMachine
      parameters:
      - description: Machine to shut down.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the machine will be forced to shut down without waiting for user
          activity to stop.  This may cause loss of user data if work is not saved.
        in: query
        name: force
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the machine will be shut down as a background task.
          This is recommended as this operation may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType ShutDownMachines.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being shut down,
          * _Name_ - Name of the machine being shut down.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          Shutdown a machine after the specified number of seconds delay,
          If `null`, the machine will be shut down without delay.
        in: query
        name: delay
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Shut down a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$start:
    post:
      description: Start (power-on) a machine.  The machine must be capable of power
        management.
      operationId: MachinesTP_StartMachine
      parameters:
      - description: Machine to start.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the machine will be started as a background task.
          This is recommended as this operation may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType StartMachines.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being started,
          * _Name_ - Name of the machine being started.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Start a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$suspend:
    post:
      description: Suspend a machine.  The machine must be capable of power management.
      operationId: MachinesTP_SuspendMachine
      parameters:
      - description: Machine to suspend.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Identify if the API need to return detail info in response model.
                      Set to false will improve performance with return basic machine model.
        in: query
        name: detailResponseRequired
        schema:
          default: true
          nullable: false
          type: boolean
      - description: |-
          If `true`, the machine will be suspended as a background task.
          This is recommended as this operation may take some time to run, and if it
          exceeds 90 seconds the request may time out.
          The task will have JobType SuspendMachines.
          When the task is complete it will redirect to
          GetMachine.
          The job's Parameters will contain properties:
          * _Id_ - ID of the machine being suspended,
          * _Name_ - Name of the machine being suspended.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: |-
          Suspend a machine after the specified number of seconds delay,
          If `null`, the machine will be suspended without delay.
        in: query
        name: delay
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Machine detail.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Suspend a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/$test:
    post:
      operationId: MachinesTP_TestMachine
      parameters:
      - description: Name or ID of the machine to test.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineTestResponseModel'
          description: Machine test report.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run Cloud Health Check on a VDA machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Administrators:
    get:
      description: Get administrators who can administer a machine.
      operationId: MachinesTP_GetMachinesAdministrators
      parameters:
      - description: "SamName, UPN, or SID of the machine."
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a machine
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Applications:
    get:
      description: |-
        Get the list of applications published or in use on a machine.
        At least one of Published
        or InUse
        will be `true` for each application returned.
      operationId: MachinesTP_GetMachineApplications
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineApplicationResponseModelCollection'
          description: List of applications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of applications on a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/DeliveryGroup:
    get:
      description: Get the details of the delivery group in which a machine resides.
      operationId: MachinesTP_GetMachineDeliveryGroup
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupDetailResponseModel'
          description: |-
            Details of the delivery group.  If the machine is not a member of
            a delivery group, the response will be `204 No Content`.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the delivery group for a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Desktop:
    get:
      description: "Get the details of the desktop associated with the machine, if\
        \ any."
      operationId: MachinesTP_GetMachineDesktop
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopResponseModel'
          description: |-
            Details of the desktop.  If the machine is not associated with a
            desktop, the response will be `204 No Content`.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "Get the desktop associated with the machine, if any."
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/FileTypes/$import:
    post:
      operationId: MachinesTP_ImportFileTypes
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the file types will be imported as a background task.
          The task will have JobType ImportFTA.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:
          * _MachineId_ - ID of the machine
          * _MachineName_ - Name of the machine
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FtaResponseModelCollection'
          description: List of file type associations imported from the machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Import file type associations from the machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/MachineCatalog:
    get:
      description: Get the details of the machine catalog in which a machine resides.
      operationId: MachinesTP_GetMachineMachineCatalog
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogDetailResponseModel'
          description: Details of the machine catalog.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machine catalog for a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/PowerActionSchedules:
    delete:
      operationId: MachinesTP_RemovePowerActionSchedule
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the power action schedule will be removed as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove pending power action schedules for a machine.
      tags:
      - MachinesTP
    get:
      operationId: MachinesTP_GetMachinePowerActionSchedules
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerActionScheduleResponseModelCollection'
          description: List of power action schedules.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the power action schedules associated with a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Sessions:
    get:
      description: Get the list of sessions running on a machine
      operationId: MachinesTP_GetMachineSessions
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModelCollection'
          description: List of sessions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of sessions running on a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/StartMenuShortcutIcon:
    get:
      description: |-
        Get a start menu shortcut icon from the machine.  The machine must be powered-on
        and registered in order for the call to succeed.


        This icon is usually used to help create a published application.
      operationId: MachinesTP_GetMachineStartMenuShortcutIcon
      parameters:
      - description: Machine to get the shortcut icon from.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Path to the start menu shortcut.
        in: query
        name: shortcutPath
        schema:
          nullable: true
          type: string
      - description: |-
          Icon format.  Must be:
          `{mime-type};{width}x{height}x{colordepth}`


          where:


          * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
          * _width_ and _height_ are specified in pixels.
          * _colordepth_ (optional) is either `8` or `24`.


          Optional. If not specified, only the raw icon data will be returned.
          Note that this is typically in ICO format, which many clients cannot
          display properly.
        in: query
        name: iconFormat
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the start menu shortcut icon will be queried as a background task.
          The task will have JobType GetMachineStartMenuShortcutIcon.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the machine from which start menu icon are being obtained,
          * _Name_ - Name of the machine from which start menu icon are being obtained.
          * _ShortcutPath_ - Path to the start menu shortcut.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Icon data in the requested format.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a start menu shortcut icon from the machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/StartMenuShortcuts:
    get:
      description: |-
        Get start menu shortcuts from the machine.  The machine must be powered-on
        and registered in order for the call to succeed.


        The shortcuts obtained are from the 'All users' start menu; user-specific shortcuts are not found.


        Note that this call does not retrieve the shortcut icon; use

        to get the icon.
      operationId: MachinesTP_GetMachineStartMenuShortcuts
      parameters:
      - description: Machine to get the shortcuts from.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartMenuApplicationResponseModelCollection'
          description: List of shortcuts.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get start menu shortcuts from the machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Tags:
    get:
      description: |-
        Get tags associated with a machine.  This includes tags which are
        directly associated with the machine, as well as tags associated
        with delivery groups, application groups, or applications that are
        associated with the machine.  To find only tags directly associated
        with the machine, filter the results to those with
        NumMachines equal to `1`.
      operationId: MachinesTP_GetMachineTags
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Optional. A filter string containing object fields requested to be returned,
          the requested fields are separated by comma','. return all if not specified.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get tags associated with a machine.
      tags:
      - MachinesTP
    put:
      operationId: MachinesTP_SetMachineTags
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRequestModel'
        description: Details of the tags to set on the machine.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set tags associated with a machine.
      tags:
      - MachinesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/Tags/{tagNameOrId}:
    delete:
      operationId: MachinesTP_RemoveMachineTags
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a tag from a machine.
      tags:
      - MachinesTP
    post:
      operationId: MachinesTP_AddMachineTags
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: Name or ID of the tag to add.
        in: path
        name: tagNameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tags will be modified as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags associated with the machine.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add a tag to a machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/TestReports/{reportId}:
    get:
      operationId: MachinesTP_GetTestMachineReport
      parameters:
      - description: Name or ID of the machine to test.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: ID of the Cloud Health Check Report.
        in: path
        name: reportId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineTestResponseModel'
          description: Machine test report.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get Cloud Health Check Report on a VDA machine.
      tags:
      - MachinesTP
  /techpreview/{customerid}/{siteid}/Machines/{nameOrId}/UpgradeSchedule:
    delete:
      operationId: MachinesTP_RemoveMachineUpgradeSchedule
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: query
        name: force
        schema:
          default: false
          nullable: true
          type: boolean
      - description: "If `true`, the VDA upgrade schedule will be removed as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "404":
          content: {}
          description: A referenced entity was not found.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove a pending VDA upgrade schedule for a machine.
      tags:
      - MachinesTP
    patch:
      operationId: MachinesTP_UpdateMachineUpgradeSchedule
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be updated as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUpgradeScheduleRequestModel'
        description: Details about the updated VDA upgrade schedule.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Reschedule a pending VDA upgrade schedule for a machine.
      tags:
      - MachinesTP
      x-codegen-request-body-name: request
    post:
      operationId: MachinesTP_CreateMachineUpgradeSchedule
      parameters:
      - description: Name or ID of the machine.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be created as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpgradeScheduleRequestModel'
        description: Details about the VDA upgrade schedule to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Setup a new VDA upgrade schedule for a machine.
      tags:
      - MachinesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Pvs/{serverAddress}/Collections:
    get:
      description: Get PVS collections within a site from the PVS server.
      operationId: PvsTP_GetPvsCollections
      parameters:
      - description: Name or IP of the PVS server.
        in: path
        name: serverAddress
        required: true
        schema:
          nullable: false
          type: string
      - description: "Name or ID of the PVS site.  Optional.  If not specified, collections\
          \ from all sites are returned."
        explode: false
        in: query
        name: siteNameOrId
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: |-
          Name or ID of the resource location or zone through which to communicate to the PVS server.
          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail based on network firewall rules between resource locations.
          Not used for on-premises deployments.
        in: query
        name: resourceLocationNameOrId
        schema:
          nullable: true
          type: string
      - description: |-
          Active Directory forest of the PVS server.  May be different than the AD forest of the
          machines managed by PVS.


          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail if the site is connected to untrusted forests, and communication
          is attempted through a forest that is not within the trust scope of the
          PVS server's AD forest.


          Not used for on-premises deployments.
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the get pvs collections will be executed as a background task.
          The task will have JobType GetPvsCollections.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsCollectionResponseModelCollection'
          description: List of PVS collections.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get PVS collections within a site.
      tags:
      - PvsTP
  /techpreview/{customerid}/{siteid}/Pvs/{serverAddress}/MachinesForCatalog:
    get:
      description: |-
        Get PVS devices within a collection from the PVS server, which are suitable to be
        added to a machine catalog (i.e. which are not already members of any machine catalog
        within the site).  Template devices are omitted from the results.
      operationId: PvsTP_GetPvsMachinesForCatalog
      parameters:
      - description: Name or IP of the PVS server.
        in: path
        name: serverAddress
        required: true
        schema:
          nullable: false
          type: string
      - description: "Name or ID of the PVS site.  Optional; if not specified, devices\
          \ from all sites are returned."
        explode: false
        in: query
        name: siteNameOrId
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "Name or ID of the PVS collection.  Optional; if not specified,\
          \ devices from all collections are returned."
        explode: false
        in: query
        name: collectionNameOrId
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      - description: "If `true` then the results will be limited to only machines\
          \ which\ncan be located on hypervisors connected to the site, and each returned\
          \ device will include the\n and \nthrough which the machine may be power-managed.\n\
          \n\nIf `false` or not specified then all devices are returned, and\n and\
          \ \nproperties will not be resolved."
        in: query
        name: virtualOnly
        schema:
          default: false
          nullable: false
          type: boolean
      - description: |-
          Name or ID of the resource location or zone through which to communicate to the PVS server.
          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail based on network firewall rules between resource locations.
          Not used for on-premises deployments.
        in: query
        name: resourceLocationNameOrId
        schema:
          nullable: true
          type: string
      - description: |-
          Active Directory forest of the PVS server.  May be different than the AD forest of the
          machines managed by PVS.


          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail if the site is connected to untrusted forests, and communication
          is attempted through a forest that is not within the trust scope of the
          PVS server's AD forest.


          Not used for on-premises deployments.
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the get pvs machines will be executed as a background task.
          The task will have JobType GetPvsMachinesForCatalog.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsDeviceResponseModelCollection'
          description: List of PVS devices.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get PVS devices within a collection.
      tags:
      - PvsTP
  /techpreview/{customerid}/{siteid}/Pvs/{serverAddress}/Sites:
    get:
      description: Get PVS sites from the PVS server.
      operationId: PvsTP_GetPvsSites
      parameters:
      - description: Name or IP of the PVS server.
        in: path
        name: serverAddress
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          Name or ID of the resource location or zone through which to communicate to the PVS server.
          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail based on network firewall rules between resource locations.
          Not used for on-premises deployments.
        in: query
        name: resourceLocationNameOrId
        schema:
          nullable: true
          type: string
      - description: |-
          Active Directory forest of the PVS server.  May be different than the AD forest of the
          machines managed by PVS.


          Optional; however, if this is not specified then communication to the PVS server
          may randomly fail if the site is connected to untrusted forests, and communication
          is attempted through a forest that is not within the trust scope of the
          PVS server's AD forest.


          Not used for on-premises deployments.
        in: query
        name: forest
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the get pvs sites will be executed as a background task.
          The task will have JobType GetPvsSites.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: "Admin credential to use when performing the operation. If not\
          \ specified, the operation will be performed using the account under which\
          \ the identity service is running If specified, must be in a format matching\
          \ that of the standard 'Authorization' request header; the username and\
          \ password separated by a colon, UTF8-encoded, then base64-encoded, then\
          \ the \"Basic \" scheme prepended.\r\nExample:Basic QWxhZGRpbjpPcGVuU2VzYW1l"
        in: header
        name: X-AdminCredential
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsSiteResponseModelCollection'
          description: List of PVS sites.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get PVS sites.
      tags:
      - PvsTP
  /techpreview/{customerid}/{siteid}/PvsStreaming/Sites:
    get:
      operationId: PvsStreamingTP_GetPvsStreamingSites
      parameters:
      - description: PVS farm id.
        in: query
        name: farmId
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsStreamingSiteResponseModelCollection'
          description: PvsStreamingSiteResponseModelCollection
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of PVS sites.
      tags:
      - PvsStreamingTP
  /techpreview/{customerid}/{siteid}/PvsStreaming/Stores/{farmId}:
    get:
      operationId: PvsStreamingTP_GetPvsStreamingStores
      parameters:
      - description: PVS farm id.
        in: path
        name: farmId
        required: true
        schema:
          nullable: false
          type: string
      - description: PVS site id.
        in: query
        name: pvsSiteId
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsStreamingStoreResponseModelCollection'
          description: PvsStreamingStoreResponseModelCollection
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of PVS stores.
      tags:
      - PvsStreamingTP
  /techpreview/{customerid}/{siteid}/PvsStreaming/vDisks/{farmId}:
    get:
      operationId: PvsStreamingTP_GetPvsStreamingVDisks
      parameters:
      - description: PVS farm id.
        in: path
        name: farmId
        required: true
        schema:
          nullable: false
          type: string
      - description: PVS site id.
        in: query
        name: pvsSiteId
        schema:
          nullable: true
          type: string
      - description: PVS store id.
        in: query
        name: storeId
        schema:
          nullable: true
          type: string
      - description: PVS vDisk id.
        in: query
        name: diskLocatorId
        schema:
          nullable: true
          type: string
      - description: "If `true`, it will be queried as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PvsStreamingVDiskResponseModelCollection'
          description: PvsStreamingVDiskResponseModelCollection
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of PVS vDisks.
      tags:
      - PvsStreamingTP
  /techpreview/{customerid}/{siteid}/RebootSchedules:
    get:
      description: Get a list of reboot schedules from all delivery groups.
      operationId: RebootSchedulesTP_GetRebootSchedules
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RebootScheduleResponseModelCollection'
          description: List of reboot schedules.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all reboot schedules in the site.
      tags:
      - RebootSchedulesTP
  /techpreview/{customerid}/{siteid}/Sessions:
    get:
      description: |-
        Get all the sessions in the site.  Note that the response
        may not contain the entire list of sessions; if this happens the
        response will have a ContinuationToken
        which, if passed, will resume retrieving results from the original
        query.
      operationId: SessionsTP_GetSessions
      parameters:
      - description: |-
          The max number of sessions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the get sessions will be executed as a background task.
          The task will have JobType GetSessions.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModelCollection'
          description: List of sessions.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all sessions in the site.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/$search:
    post:
      description: |-
        Perform an advanced search for sessions.  Note that some combinations
        of search parameters may result in slow performance.
      operationId: SessionsTP_DoSessionSearch
      parameters:
      - description: |-
          The max number of sessions returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          Optional filter, removing unspecified properties that otherwise would
          have been sent by the server
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the search sessions will be executed as a background task.
          The task will have JobType DoSessionSearch.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - description: The number of sessions to skip.
        in: query
        name: skip
        schema:
          format: int32
          nullable: true
          type: integer
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineAndSessionSearchRequestModel'
        description: Specifies the advanced search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModelCollection'
          description: List of sessions that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform an advanced search for sessions.
      tags:
      - SessionsTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/Sessions/{id}:
    get:
      description: Get details of a single session.
      operationId: SessionsTP_GetSession
      parameters:
      - description: ID of the session.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModel'
          description: Details of the session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get details of a single session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$disconnect:
    post:
      description: Disconnect a session.
      operationId: SessionsTP_DisconnectSession
      parameters:
      - description: ID of the session to disconnect.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the session will be disconnected as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the session being disconnected.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModel'
          description: Details of the session.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Disconnect a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$hide:
    post:
      operationId: SessionsTP_HideSession
      parameters:
      - description: ID of the session to hide or unhide.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the session will be hidden as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Hide a session
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$logoff:
    post:
      description: Logoff a session.
      operationId: SessionsTP_LogoffSession
      parameters:
      - description: ID of the session to log off.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the session will be logged off as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the session being logged off.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Logoff a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$sendMessage:
    post:
      description: Send a message to a session.
      operationId: SessionsTP_SendSessionMessage
      parameters:
      - description: ID of the session to send a message to.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the message will be sent as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the session to which a message is being sent.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequestModel'
        description: Details of the message to send.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModel'
          description: Details of the session.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Send a message to a session.
      tags:
      - SessionsTP
      x-codegen-request-body-name: message
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$startRecording:
    post:
      description: start recording for a session.
      operationId: SessionsTP_StartSessionRecording
      parameters:
      - description: ID of the session.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: Whether to notify session user or not.
        in: query
        name: notifyUser
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          If `true`, the session will be recorded as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the session.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModel'
          description: Details of the session.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: start recording for a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$stopRecording:
    post:
      description: stop recording for a session.
      operationId: SessionsTP_StopSessionRecording
      parameters:
      - description: ID of the session.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the session will be recorded as a background task.
          The task will have JobType .
          When the task is complete it will redirect to
          .
          The job's  will contain properties:


          * _Id_ - ID of the session.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponseModel'
          description: Details of the session.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: stop recording for a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/$unhide:
    post:
      operationId: SessionsTP_UnhideSession
      parameters:
      - description: ID of the session to hide or unhide.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the session will be hidden as a background task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Unhide a session
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/Applications:
    get:
      description: Get the list of applications running within a session.
      operationId: SessionsTP_GetSessionApplications
      parameters:
      - description: ID of the session.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the get applications will be executed as a background task.
          The task will have JobType GetSessionApplications.
          When the task is complete it will redirect to
          GetJobResults.
          The job's Parameters will contain properties:

          * _Id_ - ID of the session being queried.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of applications running within a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/{id}/Machine:
    get:
      description: Get the details of the machine on which a session is running.
      operationId: SessionsTP_GetSessionMachine
      parameters:
      - description: ID of the session.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineDetailResponseModel'
          description: Details of the machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details of the machine on which a session is running.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/Sessions/RecordingStatus:
    get:
      description: get session recording status of a session.
      operationId: SessionsTP_GetSessionRecordingStatus
      parameters:
      - description: ID of the session.
        in: query
        name: id
        required: true
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionRecordingStatusResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: get session recording status of a session.
      tags:
      - SessionsTP
  /techpreview/{customerid}/{siteid}/StoreFrontServers:
    get:
      description: |-
        Get all StoreFront servers configured for use by hosted receivers
        within the site.
      operationId: StoreFrontServersTP_GetStoreFrontServers
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreFrontServerResponseModelCollection'
          description: List of StoreFront servers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get all StoreFront servers.
      tags:
      - StoreFrontServersTP
    post:
      description: |-
        Create a StoreFront server for use by hosted receivers within the
        site.
      operationId: StoreFrontServersTP_CreateStoreFrontServer
      parameters:
      - description: |-
          If `true`, the StoreFront server (and associated objects) will be
          created as a background task.  The task will have JobType
          CreateStoreFrontServer.  When the task is
          complete it will redirect to
          GetStoreFrontServer.  The job's
          Parameters will contain properties:
          * _Name_ - Name of the StoreFront server being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreFrontServerRequestModel'
        description: |-
          Details about the StoreFront server to create.  Note: the
          Id property must not be
          specified in the request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreFrontServerResponseModel'
          description: Details about the StoreFront server that was just created.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a StoreFront server.
      tags:
      - StoreFrontServersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/StoreFrontServers/{nameOrId}:
    delete:
      description: |-
        Delete a StoreFront server from the site, regardless of whether it
        is being used by delivery groups or not.  This removes the
        StoreFront server from hosted receivers.
      operationId: StoreFrontServersTP_DeleteStoreFrontServer
      parameters:
      - description: The name or ID of StoreFront server to be deleted.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the StoreFront server (and associated objects) will be
          deleted as a background task.  The task will have JobType
          DeleteStoreFrontServer.  When the task is
          complete it will redirect to
          GetStoreFrontServers.  The job's
          Parameters will contain properties:
          * _Name_ - Name of the StoreFront server being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a StoreFront server from the site.
      tags:
      - StoreFrontServersTP
    get:
      description: |-
        Get a single StoreFront server configured for use by hosted
        receivers within the site.
      operationId: StoreFrontServersTP_GetStoreFrontServer
      parameters:
      - description: The name or ID of the StoreFront server.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreFrontServerResponseModel'
          description: Details of the StoreFront server.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details for a single StoreFront server.
      tags:
      - StoreFrontServersTP
    patch:
      description: Update a StoreFront server.
      operationId: StoreFrontServersTP_UpdateStoreFrontServer
      parameters:
      - description: Name or ID of the StoreFront server to update.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the StoreFront server (and associated objects) will be
          updated as a background task.  The task will have JobType
          UpdateStoreFrontServer.  When the task is
          complete it will redirect to
          GetStoreFrontServer.  The job's
          Parameters will contain properties:
          * _Name_ - Name of the StoreFront server being updated.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreFrontServerRequestModel'
        description: |-
          Properties of the StoreFront server to update.  Note: the
          Id property must not be
          specified in the request.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreFrontServerResponseModel'
          description: New StoreFront server.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a StoreFront server.
      tags:
      - StoreFrontServersTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/StoreFrontServers/{nameOrId}/Administrators:
    get:
      description: Get administrators who can administer a StoreFront server
      operationId: StoreFrontServersTP_GetStoreFrontAdministrators
      parameters:
      - description: Name or ID of the StoreFront server.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministratorResponseModelCollection'
          description: List of administrators.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get administrators who can administer a StoreFront server.
      tags:
      - StoreFrontServersTP
  /techpreview/{customerid}/{siteid}/StoreFrontServers/{nameOrId}/DeliveryGroups:
    get:
      description: GET delivery groups details for a Storefront
      operationId: StoreFrontServersTP_GetStoreFrontDeliveryGroups
      parameters:
      - description: The id of the Storefront
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreFrontDeliveryGroupResponseModelCollection'
          description: The delivery groups for the Storefront with the given identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: GET delivery groups details for a Storefront
      tags:
      - StoreFrontServersTP
  /techpreview/{customerid}/{siteid}/Tags:
    get:
      operationId: TagsTP_GetTags
      parameters:
      - description: |-
          The max number of tags returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: The required fields of tag.
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModelCollection'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of all tags in the site.
      tags:
      - TagsTP
    post:
      operationId: TagsTP_CreateTag
      parameters:
      - description: |-
          If `true`, the tag will be created as a background task.
          The task will have JobType CreateTag.
          When the task is complete it will redirect to
          "GetTag(string)".
          The job's Parameters will contain properties:

          * _Name_ - Name of the tag being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
        description: Details of the tag to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModel'
          description: Details of the tag created.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a tag.
      tags:
      - TagsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Tags/{name}:
    head:
      description: Check for the existence of a tag by name.
      operationId: TagsTP_CheckTagExists
      parameters:
      - description: Name of the tag.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Check for the existence of a tag by name.
      tags:
      - TagsTP
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}:
    delete:
      operationId: TagsTP_DeleteTag
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tag will be deleted as a background task.
          The task will have JobType DeleteTag.
          When the task is complete it will redirect to
          GetTags.
          The job's Parameters will contain properties:

          * _Id_ - ID of the tag being deleted,
          * _Name_ - Name of the tag being deleted.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a tag.
      tags:
      - TagsTP
    get:
      operationId: TagsTP_GetTag
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDetailResponseModel'
          description: List of tags.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single tag from the site.
      tags:
      - TagsTP
    patch:
      operationId: TagsTP_PatchTag
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the tag will be updated as a background task.\nThe\
          \ task will have JobType UpdateTag.\nWhen the task is complete it will redirect\
          \ to\n\"GetTag(string)\".\nThe job's Parameters will contain properties:\n\
          \ \n* _Id_ - ID of the tag being updated,\n* _Name_ - Name of the tag being\
          \ updated."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequestModel'
        description: Details of the tag to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponseModel'
          description: Details of the tag updated.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update a tag.
      tags:
      - TagsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}/ApplicationGroups:
    get:
      operationId: TagsTP_GetTagApplicationGroups
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of application groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupResponseModelCollection'
          description: List of application groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the application groups associated with a tag.
      tags:
      - TagsTP
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}/Applications:
    get:
      operationId: TagsTP_GetTagApplications
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the applications associated with a tag.
      tags:
      - TagsTP
    put:
      description: Associate a tag with applications.
      operationId: TagsTP_SetTagApplications
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagApplications.
          When the task is complete it will redirect to
          GetTagApplications.
          The job's Parameters will contain properties:
          * _Id_ - ID of the tag being associated with applications,
          * _Name_ - Name of the tag being associated with applications.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefsRequestModel'
        description: |-
          The applications to tag.  Any application
                      not listed will be untagged if it was previously associated with the tag.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Associate a tag with applications.
      tags:
      - TagsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}/DeliveryGroups:
    get:
      operationId: TagsTP_GetTagDeliveryGroups
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: List of delivery groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the delivery groups associated with a tag.
      tags:
      - TagsTP
    put:
      operationId: TagsTP_SetTagDeliveryGroups
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tags will be modified as a background task.
          The task will have JobType SetTagDeliveryGroups.
          When the task is complete it will redirect to
          GetTagDeliveryGroups.
          The job's Parameters will contain properties:

          * _Id_ - ID of the tag being associated with delivery groups,
          * _Name_ - Name of the tag being associated with delivery groups.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefsRequestModel'
        description: |-
          The delivery groups to tag.  Any delivery group
                      not listed will be untagged if it was previously associated with the tag.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: List of delivery groups.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Associate a tag with delivery groups.
      tags:
      - TagsTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}/MachineCatalogs:
    get:
      operationId: TagsTP_GetTagMachineCatalogs
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogResponseModelCollection'
          description: List of machine catalogs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machine catalogs associated with a tag.
      tags:
      - TagsTP
  /techpreview/{customerid}/{siteid}/Tags/{nameOrId}/Machines:
    get:
      operationId: TagsTP_GetTagMachines
      parameters:
      - description: Name or ID of the tag.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of machines returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: "Optional filter, removing unspecified properties that otherwise\
          \ would\nhave been sent by the server\n            "
        in: query
        name: fields
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResponseModelCollection'
          description: List of machines.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the machines associated with a tag.
      tags:
      - TagsTP
  /techpreview/{customerid}/{siteid}/Tenants:
    get:
      description: Get the list of all tenants in the site
      operationId: TenantsTP_GetTenants
      parameters:
      - description: |-
          The max number of tenants returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponseModelCollection'
          description: List of tenants.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of all tenants in the site.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}:
    get:
      description: Get a single tenant from the site
      operationId: TenantsTP_GetTenant
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDetailResponseModel'
          description: Details of the tenant.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single tenant from the site.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/ApplicationGroups:
    get:
      operationId: TenantsTP_GetTenantApplicationGroups
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared application groups (those not associated with any
          tenant) are included in the results in addition to the application
          groups that are associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of application groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupResponseModelCollection'
          description: List of application groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get application groups associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/Applications:
    get:
      operationId: TenantsTP_GetTenantApplications
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared applications (those not associated with any
          tenant) are included in the results in addition to the applications
          that are associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of applications returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponseModelCollection'
          description: List of applications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get applications associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/DeliveryGroups:
    get:
      operationId: TenantsTP_GetTenantDeliveryGroups
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared delivery groups (those not associated with any
          tenant) are included in the results in addition to the delivery
          groups that are associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of delivery groups returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryGroupResponseModelCollection'
          description: List of delivery groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get delivery groups associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/Desktops:
    get:
      operationId: TenantsTP_GetTenantDesktops
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared desktops (those not associated with any tenant)
          are included in the results in addition to the desktops that are
          associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of desktops returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesktopResponseModelCollection'
          description: List of desktops.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get desktops associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/Hypervisors:
    get:
      operationId: TenantsTP_GetTenantHypervisors
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared hypervisors (those not associated with any tenant)
          are included in the results in addition to the hypervisors that are
          associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of hypervisors returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervisorResponseModelCollection'
          description: List of hypervisors.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get hypervisors associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/Tenants/{nameOrId}/MachineCatalogs:
    get:
      operationId: TenantsTP_GetTenantMachineCatalogs
      parameters:
      - description: Name or ID of the tenant.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, shared machine catalogs (those not associated with any
          tenant) are included in the results in addition to the machine
          catalogs that are associated with the specified tenant.
        in: query
        name: includeShared
        schema:
          default: true
          nullable: true
          type: boolean
      - description: |-
          The max number of machine catalogs returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineCatalogResponseModelCollection'
          description: List of machine catalogs.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get machine catalogs associated with a tenant.
      tags:
      - TenantsTP
  /techpreview/{customerid}/{siteid}/TimeZones/All:
    get:
      description: |-
        Get a (non-exhaustive) list of time zones supported by the site,
        with time zone names represented in the caller's locale.


        Note that all IANA (https://www.iana.org/time-zones) time zones are
        supported as inputs to time zone APIs.  However sometimes callers
        need a suitable list of time zones to display as options within a
        UI. This API provides that capability. The options returned
        represent a reasonable palette of options for a caller to choose
        from when selecting a time zone.


        The localized time zone names come from the Unicode CLDR
        (http://cldr.unicode.org/) project.
      operationId: TimeZonesTP_GetTimeZones
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZoneResponseModelCollection'
          description: List of time zones.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a list of time zones supported by the site.
      tags:
      - TimeZonesTP
  /techpreview/{customerid}/{siteid}/UpgradeSchedules:
    post:
      operationId: UpgradeSchedulesTP_CreateUpgradeScheduleForMachines
      parameters:
      - description: "If `true`, the VDA upgrade schedules will be created as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpgradeScheduleForMachinesRequestModel'
        description: Details about the VDA upgrade schedules to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Setup a new VDA upgrade schedule for a list of machines.
      tags:
      - UpgradeSchedulesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/UpgradeSchedules/{id}:
    delete:
      operationId: UpgradeSchedulesTP_RemoveUpgradeSchedule
      parameters:
      - description: ID of the VDA upgrade schedule.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be removed as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "404":
          content: {}
          description: A referenced entity was not found.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Cancel a VDA upgrade schedule by id.
      tags:
      - UpgradeSchedulesTP
    patch:
      operationId: UpgradeSchedulesTP_UpdateUpgradeSchedule
      parameters:
      - description: ID of the VDA upgrade schedule.
        in: path
        name: id
        required: true
        schema:
          nullable: false
          type: string
      - description: "If `true`, the VDA upgrade schedule will be updated as a background\
          \ task."
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUpgradeScheduleRequestModel'
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Reschedule a VDA upgrade schedule by id.
      tags:
      - UpgradeSchedulesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/UserZonePreferences:
    get:
      description: |-
        The number of users or user groups may be huge. Therefore, we support the
        'limit' and 'continuationToken' query strings.
      operationId: ZonesTP_GetUserZonePreferenceList
      parameters:
      - description: |-
          The max number of user zone preferences returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserZonePreferenceResponseModelCollection'
          description: The list users and user groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Get zone preference list in this site."
      tags:
      - ZonesTP
    post:
      operationId: ZonesTP_CreateUserZonePreference
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserZonePreferenceModel'
        description: The CreateUserZonePreferenceModel.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserZonePreferenceResponseModel'
          description: The list users and user groups of the zone.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Create a zone preference for a user or group account\
        \ in this site."
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/UserZonePreferences/{name}:
    delete:
      description: "If there is whitespace in the name, the whitespace must be URL\
        \ encoded."
      operationId: ZonesTP_DeleteUserZonePreference
      parameters:
      - description: Name of a user or user group.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Delete a zone preference for a user or group account\
        \ in this site."
      tags:
      - ZonesTP
    get:
      description: "If there is whitespace in the name, the whitespace must be URL\
        \ encoded."
      operationId: ZonesTP_GetUserZonePreference
      parameters:
      - description: Name of a user or user group.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserZonePreferenceResponseModel'
          description: The UserZonePreferenceResponseModel.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Get a zone preference for a user or group account in\
        \ this site."
      tags:
      - ZonesTP
    put:
      description: "If there is whitespace in the name, the whitespace must be URL\
        \ encoded."
      operationId: ZonesTP_UpdateUserZonePreference
      parameters:
      - description: Name of a user or user group.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserZonePreferenceRequestModel'
        description: The EditUserZonePreferenceRequestModel.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserZonePreferenceResponseModel'
          description: The UserZonePreferenceResponseModel.
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Update a zone preference for a user or group account\
        \ in this site."
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones:
    get:
      description: Get the list of all zones in the site
      operationId: ZonesTP_GetZones
      parameters:
      - description: |-
          The max number of zones returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: The continuationToken returned by the previous query.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneResponseModelCollection'
          description: List of zones.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of all zones in the site.
      tags:
      - ZonesTP
    post:
      operationId: ZonesTP_CreateZone
      parameters:
      - description: |-
          If `true`, the zone will be created as a background task.
          The task will have JobType CreateZone.
          When the task is complete it will redirect to
          GetZone.
          The job's Parameters will contain properties:

          * _Id_ - ID of the zone being created,
          * _Name_ - Name of the zone being created.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateZoneRequestModel'
        description: Details about the zone to create.
        required: true
      responses:
        "201":
          content: {}
          description: Resource was created.
          headers:
            Location:
              description: Location where the newly created resource resides.
              schema:
                type: object
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Create a zone.
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones/$removeItems:
    post:
      operationId: ZonesTP_RemoveItemsFromZone
      parameters:
      - description: |-
          If `true`, items will be removed from the zone as a background task.
          The task will have JobType RemoveItemsFromZone.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonedItemsRequestModel'
        description: The request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Remove items from a zone.
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones/$search:
    post:
      description: |-
        Perform a basic search for zoned items.
        Note that the search action is used for items in zone, not for zone itself.
      operationId: ZonesTP_DoZoneSearch
      parameters:
      - description: |-
          The max number of items of the same itemtype returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - description: |-
          If `true`, the search zoned items will be executed as a background task.
          The task will have JobType DoZoneSearch.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonedItemSearchRequestModel'
        description: Specifies the basic search parameters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonedItemResponseModelCollection'
          description: List of zoned items that match the search criteria.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Perform a basic search for zoned items.
      tags:
      - ZonesTP
      x-codegen-request-body-name: searchRequest
  /techpreview/{customerid}/{siteid}/Zones/{nameOrId}:
    delete:
      description: |-
        Only if there is no items in the zone, we may delete a zone. Items include:
        - application
        - controller
        - host connection
        - machine catalog
        - user / user group
      operationId: ZonesTP_DeleteZone
      parameters:
      - description: 'Name or id of the zone to be deleted. '
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the zone will be deleted as a background task.
          The task will have JobType DeleteZone.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete a zone.
      tags:
      - ZonesTP
    get:
      description: Get a single zone from the site
      operationId: ZonesTP_GetZone
      parameters:
      - description: Name or ID of the zone.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDetailResponseModel'
          description: Details of the zone.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a single zone from the site.
      tags:
      - ZonesTP
    patch:
      operationId: ZonesTP_EditZone
      parameters:
      - description: Name or ID of the zone.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the zone will be edited as a background task.
          The task will have JobType EditZone.
          When the task is complete it will redirect to
          GetZone.
          The job's Parameters will contain properties:

          * _Id_ - ID of the zone being edited,
          * _Name_ - Name of the zone being edited.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditZoneRequestModel'
        description: The EditZoneRequestModel.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Edit a zone.
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones/{nameOrId}/$addItems:
    post:
      operationId: ZonesTP_AddItemsIntoZone
      parameters:
      - description: The zone into which items will be added.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, items will be added into the zone as a background task.
          The task will have JobType AddItemsIntoZone.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonedItemsRequestModel'
        description: The request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Add items into a zone.
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones/{nameOrId}/$moveItems:
    post:
      operationId: ZonesTP_MoveItemsIntoZone
      parameters:
      - description: The zone into which items will be moved.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, items will be moved into the zone as a background task.
          The task will have JobType MoveItemsIntoZone.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonedItemsRequestModel'
        description: The request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Move items into a zone.
      tags:
      - ZonesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/{siteid}/Zones/{nameOrId}/UserZonePreferences:
    get:
      description: |-
        The number of users or user groups in a zone may be huge. Therefore, we support the
        'limit' and 'continuationToken' query strings.
      operationId: ZonesTP_GetUserZonePreferencesByZone
      parameters:
      - description: Name or Id of a zone.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          The max number of user zone preferences returned by this query.
          If not specified, the server might use a default limit of 250 items.
          If the specified value is larger than 1000, the server might reject the call.
          The default and maximum values depend on server settings.
        in: query
        name: limit
        schema:
          format: int32
          nullable: true
          type: integer
      - description: |-
          If a query cannot be completed, the response will have a
          ContinuationToken set.
          To obtain more results from the query, pass the
          continuation token back into the query to get the next
          batch of results.
        in: query
        name: continuationToken
        schema:
          nullable: true
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: siteid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserZonePreferenceResponseModelCollection'
          description: The list users and user groups of the zone.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: "[DEPRECATED] Get zone preference list of a specific zone."
      tags:
      - ZonesTP
  /techpreview/{customerid}/Sites:
    get:
      operationId: SitesTP_GetSites
      parameters:
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteResponseModelCollection'
          description: List of sites.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the list of sites that are available to the customer and visible
        to the admin.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}:
    get:
      operationId: SitesTP_GetSite
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteDetailResponseModel'
          description: Site details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the details about a single site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/$test:
    post:
      description: |-
        Run tests on a site and create a test report.  Obtain the most recent report
        from GetSiteTestReport.
      operationId: SitesTP_TestSite
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the tests will run as a background task. This is recommended as the
          tests may take some time to run, and if it exceeds 90 seconds the request may
          time out. The task will have JobType TestSite.
          When the task is complete it will redirect to
          GetJobResults. The job's
          Parameters will contain properties:

          * _Id_ - ID of the site being tested.
          * _Name_ - Name of the site being tested.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteTestResponseModel'
          description: Site test details.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Run tests on a site and create a test report.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/CustomerExperienceImprovementProgram:
    get:
      operationId: SitesTP_GetCeipParticipation
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: The result indicating if Customer Experience Improvement Program
            is participated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the Customer Experience Improvement Program Participation for the
        site.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchCeipParticipation
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: specify if participate Customer Experience Improvement Program.
        in: query
        name: IsParticipating
        required: true
        schema:
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the Customer Experience Improvement Program Participation for
        the site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/DnsResolution:
    get:
      operationId: SitesTP_GetDnsResolution
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: The result indicating if DNS Resolution is enabled.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the DNS Resolution for the site.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchDnsResolution
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: specify if enable DNS Resolution.
        in: query
        name: enable
        required: true
        schema:
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the broker site DNS resolution for the site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/License:
    get:
      operationId: SitesTP_GetSiteLicense
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseResponseModel'
          description: The license response model.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the license in use for a site.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchSiteLicense
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseRequestModel'
        description: The license update request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the license in use for a site.
      tags:
      - SitesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/Sites/{nameOrId}/LoadBalancingOption:
    get:
      operationId: SitesTP_GetSiteLoadBalancingOption
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: The result indicating if Vertical Load Balancing is used.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the load balancing option for the site.
      tags:
      - SitesTP
    patch:
      description: |-
        Horizontal and vertical load balancing are site-wide settings.
        By default, horizontal load balancing is enabled. Horizontal load balancing assigns the incoming load to the
        least-loaded RDS machine.
        Although horizontal load balancing offers high user performance, it can increase costs as more machines are kept
        powered-on and busy.
      operationId: SitesTP_PatchSiteLoadBalancingOption
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: specify if using vertical load balancing
        in: query
        name: enableVerticalLoadBalancing
        required: true
        schema:
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the load balancing option for the site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/LocalAppAccessConfig:
    get:
      operationId: SitesTP_GetLocalAppAccessConfig
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValueStringPairModel'
          description: True or False.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get Local App Access Config.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/MultipleRemotePCAssignments:
    get:
      operationId: SitesTP_GetMultipleRemotePCAssignments
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: The result indicating if allow multi-user auto-assignment for
            Remote PC Access.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get multi-user auto-assignment for Remote PC Access.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchMultipleRemotePCAssignments
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: specify if allow multi-user auto-assignment for Remote PC Access.
        in: query
        name: allow
        required: true
        schema:
          nullable: false
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update multi-user auto-assignment for Remote PC Access.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/NewSecurityKey:
    get:
      operationId: SitesTP_GetNewSiteSecurityKey
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValueStringPairModel'
          description: A new site security key.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get a new security key for a site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/SecurityKeyConfiguration:
    get:
      operationId: SitesTP_GetSiteSecurityKeyConfiguration
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityKeyConfigurationResponseModel'
          description: Site security key configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the security key configuration for a site.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchSiteSecurityKeyConfiguration
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityKeyConfigurationRequestModel'
        description: Site security key configuration update request.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the security key configuration for a site.
      tags:
      - SitesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/Sites/{nameOrId}/SecurityKeyManagementConfig:
    get:
      operationId: SitesTP_GetSiteSecurityKeyManagementConfig
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValueStringPairModel'
          description: "Site security key management config, enabled: true if feature\
            \ enabled, false otherwise."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get security key management config for a site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/SessionsTrend:
    get:
      operationId: SitesTP_GetSessionsTrend
      parameters:
      - description: The customer Id.
        in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: The site name or ID.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: "The start date of sessions trend to query, for example '2021-11-01T12:00:00'."
        in: query
        name: startDate
        required: true
        schema:
          nullable: true
          type: string
      - description: "The end date of sessions trend to query, for example '2021-11-08T12:00:00'."
        in: query
        name: endDate
        required: true
        schema:
          nullable: true
          type: string
      - description: The minutes interval to query.
        in: query
        name: intervalLength
        required: true
        schema:
          format: int32
          nullable: false
          type: integer
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsTrendResponseModel'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the sessions trend
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/Settings:
    get:
      operationId: SitesTP_GetSiteSettings
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingsResponseModel'
          description: The result of site settings.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the settings for the site.
      tags:
      - SitesTP
    patch:
      operationId: SitesTP_PatchSiteSettings
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditSiteSettingsRequestModel'
        description: site settings request model.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Update the broker site settings.
      tags:
      - SitesTP
      x-codegen-request-body-name: request
  /techpreview/{customerid}/Sites/{nameOrId}/Status:
    get:
      operationId: SitesTP_GetSiteStatus
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - description: |-
          If `true`, the site status query will be executed as a background task.
          The task will have JobType GetSiteStatus.
          When the task is complete it will redirect to
          GetJobResults.
        in: query
        name: async
        schema:
          default: false
          nullable: true
          type: boolean
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteStatusResponseModel'
          description: The site status.
        "202":
          content: {}
          description: Async request was accepted and is being processed.
          headers:
            Location:
              description: Location where the async job completion status can be queried.
              schema:
                type: object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the status of a site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/TestReport:
    get:
      description: Get the test report from the last run of TestSite.
      operationId: SitesTP_GetSiteTestReport
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestReportResponseModel'
          description: "Last test report.  If no tests have been run, returns a 404\
            \ Not Found."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the most recent test report.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/UpgradePackageVersions:
    get:
      operationId: SitesTP_GetUpgradePackageVersions
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradePackageVersionResponseModelCollection'
          description: The latest released VDA upgrade package version of each upgrade
            package type.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get the latest released VDA upgrade package versions in the site.
      tags:
      - SitesTP
  /techpreview/{customerid}/Sites/{nameOrId}/ValidLicenses:
    get:
      operationId: SitesTP_GetSiteValidLicenses
      parameters:
      - description: Name or ID of the site.
        in: path
        name: nameOrId
        required: true
        schema:
          nullable: false
          type: string
      - in: path
        name: customerid
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseResponseModelCollection'
          description: The list of valid licenses in the site.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get valid licenses for a site.
      tags:
      - SitesTP
  /techpreview/HealthCheck:
    get:
      operationId: HealthCheckTP_HealthCheck
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: true or false
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: The health check endpoint.
      tags:
      - HealthCheckTP
  /techpreview/me:
    get:
      description: |-
        Gets details about the currently logged-in admin, including the
        list of customers and sites that the admin has access to.
      operationId: MeTP_GetMe
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeResponseModel'
          description: Details about the currently logged-in admin.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get my details.
      tags:
      - MeTP
  /techpreview/me/Preferences:
    get:
      description: |-
        Get my preferences.
        Preferences are free-form name/value pairs that are typically used to
        keep track of how the user has configured the UI, so that the configuration
        is retained across sessions.
      operationId: MeTP_GetMyPreferences
      parameters:
      - description: "Optional name prefix to filter results.  If not specified, all\
          \ preferences are returned."
        in: query
        name: namePrefix
        schema:
          nullable: true
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValueStringPairModelCollection'
          description: List of user preferences.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get my preferences.
      tags:
      - MeTP
    put:
      description: |-
        Set a preference value.
        Preferences are free-form name/value pairs that are typically used to
        keep track of how the user has configured the UI, so that the configuration
        is retained across sessions.
        Note: if a preference with the given name already exists, it will be
        overridden.
      operationId: MeTP_SetMyPreference
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPreferenceModel'
        description: Preference to set.
        required: true
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must send request body in utf-8 and specify request
            Content-Type as utf-8.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Set a preference value.
      tags:
      - MeTP
      x-codegen-request-body-name: preference
  /techpreview/me/Preferences/{name}:
    delete:
      description: Delete one of my preferences by name.
      operationId: MeTP_DeleteMyPreference
      parameters:
      - description: Preference name.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content: {}
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Delete one of admin preferences by name.
      tags:
      - MeTP
    get:
      description: |-
        Get one of my preferences by name.
        Preferences are free-form name/value pairs that are typically used to
        keep track of how the user has configured the UI, so that the configuration
        is retained across sessions.
      operationId: MeTP_GetMyPreference
      parameters:
      - description: Preference name.
        in: path
        name: name
        required: true
        schema:
          nullable: false
          type: string
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameValueStringPairModel'
          description: User preferences
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: A referenced entity was not found.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get one of my preferences by name.
      tags:
      - MeTP
  /techpreview/ping:
    get:
      operationId: PingTP_PingTP
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: Bool.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Test if orchestration web api is ready.
      tags:
      - PingTP
  /techpreview/ping/status:
    get:
      operationId: PingTP_GetServiceStatus
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusModel'
          description: 'StatusModel object. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Get Orchestration service status.
      tags:
      - PingTP
  /techpreview/tokens:
    delete:
      operationId: TrustTP_RevokeToken
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Operation is successful with no response content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Revoke the auth token.
      tags:
      - TrustTP
    post:
      operationId: TrustTP_ExchangeToken
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponseModel'
          description: 'AuthTokenResponseModel object. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: |-
        Exchange the FMA token by using the domain credential.
        Basic authentication required for current Web Api.
      tags:
      - TrustTP
  /techpreview/tokens/$refresh:
    post:
      operationId: TrustTP_RefreshToken
      parameters:
      - description: "Citrix Cloud authorization header: Bearer {token}"
        in: header
        name: Authorization
        schema:
          type: string
      - description: "Transaction ID that will be used to track this request. If not\
          \ provided, a new GUID will be generated and returned."
        in: header
        name: Citrix-TransactionId
        schema:
          type: string
      - description: Orchestration Action Name
        in: header
        name: X-ActionName
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponseModel'
          description: 'AuthTokenResponseModel object. '
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller passed an invalid input.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller did not present a valid bearer token.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller is not authorized to perform the operation.
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller must specify utf-8 charset with the Accept header.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller requested an invalid relation to be created or deleted.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Caller has made too many requests in a short period of time
            and is being rate-limited.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: "Service is temporarily unable to process the request.  Caller\
            \ may attempt the operation again, with exponential back-off."
      summary: Refresh the auth token.
      tags:
      - TrustTP
components:
  schemas:
    AboutModel:
      description: "About model of current Orchestration instance.\n            "
      example:
        Commit: Commit
        IsCloud: true
      properties:
        Commit:
          description: "The commit hash when building.\n            "
          type: string
        IsCloud:
          description: Indicates if the  current environment is cloud.
          type: boolean
      title: AboutModel
      type: object
    AccountNamingSchemeType:
      description: ""
      enum:
      - Unknown
      - None
      - Alphabetic
      - Numeric
      title: AccountNamingSchemeType
      type: string
      x-enumNames:
      - Unknown
      - None
      - Alphabetic
      - Numeric
    ActionCatalogCreationResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionResponseModel'
      - $ref: '#/components/schemas/ActionCatalogCreationResponseModel_allOf'
      title: ActionCatalogCreationResponseModel
    ActionError:
      description: Action Error class.
      example:
        Message: Message
        StackTrace: StackTrace
        InnerError: null
        ErrorData:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        Message:
          description: The error message.
          type: string
        StackTrace:
          description: The stack trace.
          type: string
        ErrorData:
          description: The error data.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        InnerError:
          $ref: '#/components/schemas/ActionError_InnerError'
      title: ActionError
      type: object
    ActionErrorStatus:
      description: Action error status.
      enum:
      - Unknown
      - None
      - Failed
      - PartialFail
      title: ActionErrorStatus
      type: string
      x-enumNames:
      - Unknown
      - None
      - Failed
      - PartialFail
    ActionFailedMachineOrAccountResponseModel:
      description: Failed machine or account response model object class.
      properties:
        Name:
          description: Failed machine or account.
          type: string
        ActionError:
          $ref: '#/components/schemas/ActionFailedMachineOrAccountResponseModel_ActionError'
      title: ActionFailedMachineOrAccountResponseModel
      type: object
    ActionMachineCreationDetailsResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionMachineOperationDetailsResponseModel'
      - $ref: '#/components/schemas/ActionMachineCreationDetailsResponseModel_allOf'
      title: ActionMachineCreationDetailsResponseModel
    ActionMachineCreationResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionResponseModel'
      - $ref: '#/components/schemas/ActionMachineCreationResponseModel_allOf'
      title: ActionMachineCreationResponseModel
    ActionMachineOperationDetailsResponseModel:
      description: 'Action machine operation details response model class. '
      properties:
        AdAccountAction:
          description: Active directory account action.
          type: string
        SuccessfulAccounts:
          description: Successful accounts.
          items:
            type: string
          type: array
        SuccessfulMachines:
          description: 'Successful machines. '
          items:
            type: string
          type: array
        FailedMachines:
          description: Failed machines and Action errors.
          items:
            $ref: '#/components/schemas/ActionFailedMachineOrAccountResponseModel'
          title: "ActionFailedMachineOrAccountResponseModel[]"
          type: array
        FailedAccounts:
          description: Failed accounts and action errors.
          items:
            $ref: '#/components/schemas/ActionFailedMachineOrAccountResponseModel'
          title: "ActionFailedMachineOrAccountResponseModel[]"
          type: array
      title: ActionMachineOperationDetailsResponseModel
      type: object
    ActionMachineRemovalDetailsResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionMachineOperationDetailsResponseModel'
      - $ref: '#/components/schemas/ActionMachineRemovalDetailsResponseModel_allOf'
      title: ActionMachineRemovalDetailsResponseModel
    ActionMachineRemovalResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionResponseModel'
      - $ref: '#/components/schemas/ActionMachineRemovalResponseModel_allOf'
      title: ActionMachineRemovalResponseModel
    ActionResponseModel:
      description: Action response model.
      example:
        MasterImage: MasterImage
        NonTerminatingErrors:
        - Message: Message
          StackTrace: StackTrace
          InnerError: null
          ErrorData:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
        - Message: Message
          StackTrace: StackTrace
          InnerError: null
          ErrorData:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
        Progress: 0.8008281904610115
        ProgressMessage: ProgressMessage
        ActionType: "{}"
        ErrorState: "{}"
        IsRunning: true
        ActionTargetId: ActionTargetId
        StartTime: StartTime
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        TerminatingError: null
        ActionTargetUid: ActionTargetUid
        ActionTargetName: ActionTargetName
        Snapshot: Snapshot
        ActionId: ActionId
        MachineCreationData: null
        MachineRemovalData: null
        DeleteVirtualMachines: DeleteVirtualMachines
        FinishTime: FinishTime
        State: "{}"
        Scopes:
        - Uid: 0
          TenantId: TenantId
          Description: Description
          IsAllScope: true
          TenantName: TenantName
          IsTenantScope: true
          Id: Id
          IsBuiltIn: true
          Name: Name
        - Uid: 0
          TenantId: TenantId
          Description: Description
          IsAllScope: true
          TenantName: TenantName
          IsTenantScope: true
          Id: Id
          IsBuiltIn: true
          Name: Name
        CreationTime: CreationTime
      properties:
        ActionId:
          description: The action id.
          format: guid
          type: string
        ActionTargetName:
          description: "The action target name, it's the related catalog name."
          type: string
        ActionTargetUid:
          description: "The action target uid, it's the related catalog uid."
          type: string
        ActionTargetId:
          description: "The action target id, it's related on catalog id."
          type: string
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The current action type.
          type: object
        CreationTime:
          description: The action creation time.
          type: string
        StartTime:
          description: The action start time.
          type: string
        FinishTime:
          description: The action finish time.
          type: string
        State:
          allOf:
          - $ref: '#/components/schemas/ActionState'
          description: The action state.
          type: object
        ErrorState:
          allOf:
          - $ref: '#/components/schemas/ActionErrorStatus'
          description: The action error status.
          type: object
        Progress:
          description: The progress of the action.
          format: double
          title: Double
          type: number
        ProgressMessage:
          description: The progress message.
          type: string
        TerminatingError:
          $ref: '#/components/schemas/ActionResponseModel_TerminatingError'
        NonTerminatingErrors:
          description: The non terminating errors.
          items:
            $ref: '#/components/schemas/ActionError'
          title: "ActionError[]"
          type: array
        Metadata:
          description: The metadata of the action.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Scopes:
          description: The scope of the catalog.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        Tenants:
          description: |-
            The tenant(s) that the hypervisor is assigned to.  If `null`, the
            hypervisor is not assigned to tenants, and may be used by any
            tenant, including future added tenants.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        IsRunning:
          description: If the task is running.
          type: boolean
        MasterImage:
          description: The master image.
          type: string
        MachineCreationData:
          $ref: '#/components/schemas/ActionCatalogCreationResponseModel_allOf_MachineCreationData'
        Snapshot:
          description: The snapshot.
          type: string
        MachineRemovalData:
          $ref: '#/components/schemas/ActionMachineRemovalResponseModel_allOf_MachineRemovalData'
        DeleteVirtualMachines:
          description: 'The delete virtual machines. '
          type: string
      title: ActionResponseModel
      type: object
    ActionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfActionResponseModel'
      - description: The collection of the ActionResponseModel.
        type: object
      title: ActionResponseModelCollection
    ActionState:
      description: The action state.
      enum:
      - Unknown
      - NotStarted
      - Running
      - Canceled
      - Completed
      - Failed
      title: ActionState
      type: string
      x-enumNames:
      - Unknown
      - NotStarted
      - Running
      - Canceled
      - Completed
      - Failed
    ActionType:
      description: The action type.
      enum:
      - Unknown
      - CreateItems
      - DeleteItems
      - CreateCatalog
      - UpdateImage
      - AddMachines
      - RemoveMachines
      - UpdateSkyWayImage
      - DeleteMachines
      title: ActionType
      type: string
      x-enumNames:
      - Unknown
      - CreateItems
      - DeleteItems
      - CreateCatalog
      - UpdateImage
      - AddMachines
      - RemoveMachines
      - UpdateSkyWayImage
      - DeleteMachines
    ActionUpdateImageResponseModel:
      allOf:
      - $ref: '#/components/schemas/ActionResponseModel'
      - $ref: '#/components/schemas/ActionUpdateImageResponseModel_allOf'
      title: ActionUpdateImageResponseModel
    AddApplicationsRequestModel:
      description: Request object for adding applications to the site.
      example:
        ApplicationGroups:
        - ApplicationGroups
        - ApplicationGroups
        DeliveryGroups:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
        NewApplications:
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        ExistingApplications:
        - ExistingApplications
        - ExistingApplications
      properties:
        ExistingApplications:
          description: |-
            List of existing applications to be added to the
            DeliveryGroups and/or ApplicationGroups.
          items:
            type: string
          type: array
        NewApplications:
          description: |-
            List of applications which should be created and added to the
            DeliveryGroups and/or ApplicationGroups.
          items:
            $ref: '#/components/schemas/CreateApplicationRequestModel'
          title: "CreateApplicationRequestModel[]"
          type: array
        ApplicationGroups:
          description: |-
            List of application groups to add the
            ExistingApplications and NewApplications
            to.
          items:
            type: string
          type: array
        DeliveryGroups:
          description: |-
            List of delivery groups to add the
            ExistingApplications and NewApplications
            to.
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
      title: AddApplicationsRequestModel
      type: object
    AddAppVServerRequestModel:
      description: Request model to add AppV server.
      example:
        PublishingServer: PublishingServer
        ManagementServer: ManagementServer
      properties:
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          maxLength: 250
          minLength: 1
          type: string
        PublishingServer:
          description: The url of the App-V Publishing server that packages will be
            discovered from.
          maxLength: 250
          minLength: 1
          type: string
      required:
      - ManagementServer
      - PublishingServer
      title: AddAppVServerRequestModel
      type: object
    AddIconRequestModel:
      description: "Request model for adding icons to the site\n            "
      example:
        RawData: RawData
        IconFormat: IconFormat
      properties:
        RawData:
          description: "Raw icon data, Base64-encoded.\n            "
          minLength: 1
          type: string
        IconFormat:
          description: "Icon format.\n            Must be: `{mime-type};{width}x{height}x{colordepth}`\n\
            \            * _mime-type_ must be `image/png`.  (Other formats may be\
            \ supported in future.)\n            * _width_ and _height_ are specified\
            \ in pixels.\n            * _colordepth_ (optional) is either `8` or `24`.\n\
            \             example: `\"image/png;32x32x24\"`\n            Optional.If\
            \ specified, the formatted icon data  will be contained in the response.\n\
            \            "
          type: string
      required:
      - RawData
      title: AddIconRequestModel
      type: object
    ADDirectoryEntryModel:
      properties:
        Name:
          description: Name of the object
          type: string
        Path:
          description: Path of the object
          type: string
        Forest:
          description: Forest of the object
          type: string
        Tag:
          description: Cookie for use by the IActiveDirectoryService implementation
          properties: {}
          title: Object
          type: object
        CanContainComputer:
          description: True if this object can directly contain computer accounts
          type: boolean
        CanIndirectlyContainComputer:
          description: True if this object can indirectly contain computer accounts
          type: boolean
        Parent:
          $ref: '#/components/schemas/ADDirectoryEntryModel_Parent'
        Children:
          description: Child entries of this object
          items:
            $ref: '#/components/schemas/ADDirectoryEntryModel'
          title: IEnumerable`1
          type: array
      title: ADDirectoryEntryModel
      type: object
    AddLicenseRequestModel:
      description: Request to add license.
      example:
        LicenseFile: LicenseFile
        OverrideFile: true
        FileName: FileName
      properties:
        LicenseFile:
          description: "Encoded Base64 for license file, and the format should be\
            \ utf-8."
          minLength: 1
          type: string
        FileName:
          description: Licence file name to be added.
          maxLength: 256
          minLength: 1
          type: string
        OverrideFile:
          description: Indicate if override exist license file when the license file
            already exists.
          type: boolean
      required:
      - FileName
      - LicenseFile
      - OverrideFile
      title: AddLicenseRequestModel
      type: object
    AddLicenseResponseModel:
      description: Response model for Adding license.
      example:
        IsLicenseImported: true
      properties:
        IsLicenseImported:
          description: Indicate if the license file is imported successfully.
          type: boolean
      title: AddLicenseResponseModel
      type: object
    AddMachineToMachineCatalogDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/AddMachineToMachineCatalogRequestModel'
      - $ref: '#/components/schemas/AddMachineToMachineCatalogDetailRequestModel_allOf'
      title: AddMachineToMachineCatalogDetailRequestModel
    AddMachineToMachineCatalogRequestModel:
      description: Add a machine to a machine catalog.
      example:
        HypervisorConnection: HypervisorConnection
        HostedMachineId: HostedMachineId
        MachineName: MachineName
        AssignedIPAddress: AssignedIPAddress
        AssignedClientName: AssignedClientName
        AssignedUsers:
        - AssignedUsers
        - AssignedUsers
        InMaintenanceMode: false
      properties:
        MachineName:
          description: Specify the name of the machine to create (in the form 'domain\machine').  A
            SID can also be specified.
          type: string
        AssignedClientName:
          description: |-
            The client name to which this machine will be assigned.  Machines can be assigned to
            multiple users, a single client IP address, or a single client name, but only to one
            of these categories at a time.
          type: string
        AssignedIPAddress:
          description: |-
            The client IP address to which this machine will be assigned.  Machines can be assigned
            to multiple users, a single client IP address, or a single client name, but only to
            one of these categories at a time.
          type: string
        AssignedUsers:
          description: |-
            The user(s) to whom this machine will be assigned.  Machines can be assigned
            to multiple users, a single client IP address, or a single client name, but only to
            one of these categories at a time.
          items:
            type: string
          type: array
        HostedMachineId:
          description: |-
            The unique ID by which the hypervisor recognizes the machine.
            Omit this for machines that are not power-managed.
          type: string
        HypervisorConnection:
          description: Hypervisor connection to use for power management of the machine.
          type: string
        InMaintenanceMode:
          default: false
          description: |-
            Specifies whether the machine is initially in maintenance mode.  A machine in maintenance mode is
            not available for new sessions, and for managed machines all automatic power management is disabled.
            Optional; default is `false`.
          type: boolean
      title: AddMachineToMachineCatalogRequestModel
      type: object
    ADDomainModel:
      properties:
        Name:
          description: Domain name
          type: string
        ForestName:
          description: Parent forest of this domain
          type: string
        DirectoryEntry:
          $ref: '#/components/schemas/ADDomainModel_DirectoryEntry'
        Tag:
          description: Cookie for use by the IActiveDirectoryService implementation
          properties: {}
          title: Object
          type: object
      title: ADDomainModel
      type: object
    AdminFolderObjectIdentifier:
      description: "Admin folder object identifier name, indicating which object will\
        \ be contained in the folder."
      enum:
      - Unknown
      - ContainsApplications
      - ContainsMachineCatalogs
      - ContainsDeliveryGroups
      - ContainsApplicationGroups
      title: AdminFolderObjectIdentifier
      type: string
      x-enumNames:
      - Unknown
      - ContainsApplications
      - ContainsMachineCatalogs
      - ContainsDeliveryGroups
      - ContainsApplicationGroups
    AdminFolderObjects:
      description: "Admin folder object name, indicating object in the folder."
      enum:
      - Unknown
      - Applications
      - MachineCatalogs
      - DeliveryGroups
      - ApplicationGroups
      title: AdminFolderObjects
      type: string
      x-enumNames:
      - Unknown
      - Applications
      - MachineCatalogs
      - DeliveryGroups
      - ApplicationGroups
    AdminFolderResponseModel:
      description: Response object for an admin folder.
      example:
        Path: Path
        TotalMachineCatalogs: 5
        Uid: 0
        Parent: null
        TotalApplications: 1
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        TotalApplicationGroups: 5
        TotalDesktopGroups: 2
        Id: Id
        Children:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        Name: Name
      properties:
        Id:
          description: |-
            Id of the admin folder.
            Used to be: Uuid
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        Children:
          description: Child folders.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        Name:
          description: Name of the folder.
          type: string
        Parent:
          $ref: '#/components/schemas/AdminFolderResponseModel_Parent'
        Path:
          description: |-
            Full path to the folder.
            Used to be: FullName
          type: string
        TotalApplications:
          description: Total number of applications in the folder.
          format: int32
          type: integer
        TotalMachineCatalogs:
          description: Total number of catalogs in the folder.
          format: int32
          type: integer
        TotalApplicationGroups:
          description: Total number of application groups in the folder.
          format: int32
          type: integer
        TotalDesktopGroups:
          description: Total number of desktop groups in the folder.
          format: int32
          type: integer
        Metadata:
          description: The metadata map of the admin folder.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      title: AdminFolderResponseModel
      type: object
    AdminFolderResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAdminFolderResponseModel'
      - description: The collection for AdminFolderResponseModel
        type: object
      title: AdminFolderResponseModelCollection
    AdministratorDeleteConcequenceResponseModel:
      example:
        Consequence: null
      properties:
        Consequence:
          $ref: '#/components/schemas/DeleteAdministratorConsequence'
      title: AdministratorDeleteConcequenceResponseModel
      type: object
    AdministratorNamePreviewResponseModel:
      description: Response object for preview the administrator name.
      example:
        Error: Error
        Name: Name
      properties:
        Name:
          description: The requested administrator name for previewing.
          type: string
        Error:
          description: "Localized error message when the request administrator request\
            \ name is illegal. If the name is fine, the property should be null."
          type: string
      title: AdministratorNamePreviewResponseModel
      type: object
    AdministratorReportResponseModel:
      example:
        EncodedReport: EncodedReport
        MediaType: MediaType
        Encoding: Encoding
      properties:
        EncodedReport:
          description: "The encoded report as string. That is: RFC-4648-base-64(utf-8(html-report-content))"
          type: string
        Encoding:
          description: The encoding of the EncodedReport.
          type: string
        MediaType:
          description: The media type of the report content;
          type: string
      title: AdministratorReportResponseModel
      type: object
    AdministratorResponseModel:
      description: Response object representing an administrator.
      example:
        User: null
        ScopesAndRoles:
        - Role: null
          Scope: null
        - Role: null
          Scope: null
        Enabled: true
      properties:
        User:
          $ref: '#/components/schemas/AdministratorResponseModel_User'
        ScopesAndRoles:
          description: |-
            Rights associated with the administrator.
            CHANGE: was
            public ScopeRolePair[] ScopesAndRoles { get; set; }
          items:
            $ref: '#/components/schemas/AdministratorRightResponseModel'
          title: "AdministratorRightResponseModel[]"
          type: array
        Enabled:
          description: |-
            Indicates whether the administrator is enabled.
            Disabled administrators cannot administer the site
            UNLESS they are a member of a different user group
            which is granted access by a different administrator
            record.
          type: boolean
      required:
      - Enabled
      - ScopesAndRoles
      - User
      title: AdministratorResponseModel
      type: object
    AdministratorResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAdministratorResponseModel'
      - description: Administrator response model collection
        type: object
      title: AdministratorResponseModelCollection
    AdministratorRightResponseModel:
      description: |-
        Response object for an administrator right, which is a combination
        of a role and a scope.
      example:
        Role: null
        Scope: null
      properties:
        Scope:
          $ref: '#/components/schemas/AdministratorRightResponseModel_Scope'
        Role:
          $ref: '#/components/schemas/AdministratorRightResponseModel_Role'
      required:
      - Role
      - Scope
      title: AdministratorRightResponseModel
      type: object
    AdministratorRightResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAdministratorRightResponseModel'
      - description: Response object for collections of items.
        type: object
      title: AdministratorRightResponseModelCollection
    AdminRightRequestModel:
      description: Model for specifying administrator's rights.
      example:
        Role: Role
        Scope: Scope
      properties:
        Role:
          description: Role.  May be specified as Id or Name of the role.
          minLength: 1
          type: string
        Scope:
          description: Scope.  May be specified as Id or Name of the scope.
          minLength: 1
          type: string
      required:
      - Role
      - Scope
      title: AdminRightRequestModel
      type: object
    AdvancedAccessPolicyRequestModel:
      description: Request object for creating or updating an advanced access policy.
      example:
        IncludedUserFilterEnabled: true
        ExcludedSmartAccessFilterEnabled: true
        ExcludedUsers:
        - ExcludedUsers
        - ExcludedUsers
        Description: Description
        AllowRdpAccess: true
        ExcludedUserFilterEnabled: true
        AllowedUsers: "{}"
        IncludedClientIPs:
        - IncludedClientIPs
        - IncludedClientIPs
        Enabled: true
        ExcludedClientIPFilterEnabled: true
        IncludedClientIPFilterEnabled: true
        Name: Name
        ExcludedClientIPs:
        - ExcludedClientIPs
        - ExcludedClientIPs
        ExcludedClientNames:
        - ExcludedClientNames
        - ExcludedClientNames
        IncludedClientNameFilterEnabled: true
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        AllowHdxAccess: true
        ExcludedSmartAccessTags:
        - Filter: Filter
          Farm: Farm
        - Filter: Filter
          Farm: Farm
        IncludedSmartAccessFilterEnabled: true
        AllowedConnection: "{}"
        ExcludedClientNameFilterEnabled: true
        IncludedClientNames:
        - IncludedClientNames
        - IncludedClientNames
        AllowMachineRestart: true
        IncludedSmartAccessTags:
        - Filter: Filter
          Farm: Farm
        - Filter: Filter
          Farm: Farm
      properties:
        Name:
          description: Name of the advanced access policy.
          type: string
        AllowHdxAccess:
          default: true
          description: |-
            Whether to allow connections using HDX.
            Was: AllowsHdxAccess
          type: boolean
        AllowMachineRestart:
          default: true
          description: Whether to allow users to self-service restart machines.
          type: boolean
        AllowRdpAccess:
          default: true
          description: |-
            Whether to allow connections using RDP.
            Was: AllowsRdpAccess
          type: boolean
        AllowedConnection:
          allOf:
          - $ref: '#/components/schemas/AllowedConnection'
          description: |-
            whether connections must be local or via Access Gateway,
            and if so whether specified SmartAccess tags must be provided
            by Access Gateway with the connection.
          type: object
        AllowedUsers:
          allOf:
          - $ref: '#/components/schemas/AllowedUser'
          description: the behavior of the included users filter.
          type: object
        Description:
          description: Description.
          type: string
        Enabled:
          default: true
          description: |-
            Whether the advanced access policy is enabled.  If a policy is disabled
            it is not considered when evaluating whether a user may access the
            delivery group.
          type: boolean
        ExcludedClientIPFilterEnabled:
          description: |-
            Specifies whether the ExcludedClientIPs
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedClientIPs:
          description: |-
            Specifies the client IPs which will be denied access to
            the delivery group.
          items:
            type: string
          type: array
        ExcludedClientNameFilterEnabled:
          description: |-
            Specifies whether the ExcludedClientNames
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedClientNames:
          description: |-
            Specifies the client names which will be denied access to
            the delivery group.
            Validation: each specified item must have a maximum length and regex match
          items:
            type: string
          type: array
        ExcludedSmartAccessFilterEnabled:
          description: |-
            Specifies whether the ExcludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedSmartAccessTags:
          description: |-
            Specifies the SmartAccess tags which will be denied access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagRequestModel'
          title: "SmartAccessTagRequestModel[]"
          type: array
        ExcludedUserFilterEnabled:
          description: |-
            Specifies whether the ExcludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        ExcludedUsers:
          description: |-
            Specifies the users and groups who are denied access to
            the delivery group.
          items:
            type: string
          type: array
        IncludedClientIPFilterEnabled:
          description: |-
            Specifies whether the IncludedClientIPs
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedClientIPs:
          description: |-
            Specifies the client IPs which will be allowed access to
            the delivery group.
          items:
            type: string
          type: array
        IncludedClientNameFilterEnabled:
          description: |-
            Specifies whether the IncludedClientNames
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedClientNames:
          description: |-
            Specifies the client names which will be granted access to
            the delivery group.
            Validation: each specified item must have a maximum length and regex match
          items:
            type: string
          type: array
        IncludedSmartAccessFilterEnabled:
          description: |-
            Specifies whether the IncludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedSmartAccessTags:
          description: |-
            Specifies the SmartAccess tags which grant access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagRequestModel'
          title: "SmartAccessTagRequestModel[]"
          type: array
        IncludedUserFilterEnabled:
          description: |-
            Specifies whether the IncludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the users and groups who are granted access to
            the delivery group.
          items:
            type: string
          type: array
      title: AdvancedAccessPolicyRequestModel
      type: object
    AdvancedAccessPolicyResponseModel:
      description: Response object for an advanced access policy
      example:
        IncludedUserFilterEnabled: true
        Description: Description
        ExcludedClientIPFilterEnabled: true
        IncludedClientIPFilterEnabled: true
        Name: Name
        ExcludedClientIPs:
        - ExcludedClientIPs
        - ExcludedClientIPs
        ExcludedClientNames:
        - ExcludedClientNames
        - ExcludedClientNames
        IncludedClientNameFilterEnabled: true
        AllowHdxAccess: true
        AllowedConnection: "{}"
        ExcludedClientNameFilterEnabled: true
        IncludedClientNames:
        - IncludedClientNames
        - IncludedClientNames
        IncludedSmartAccessTags:
        - Filter: Filter
          Farm: Farm
        - Filter: Filter
          Farm: Farm
        ExcludedSmartAccessFilterEnabled: true
        ExcludedUsers:
        - null
        - null
        AllowRdpAccess: true
        ExcludedUserFilterEnabled: true
        AllowedUsers: "{}"
        IncludedClientIPs:
        - IncludedClientIPs
        - IncludedClientIPs
        Enabled: true
        Uid: 0
        IncludedUsers:
        - null
        - null
        ExcludedSmartAccessTags:
        - Filter: Filter
          Farm: Farm
        - Filter: Filter
          Farm: Farm
        IncludedSmartAccessFilterEnabled: true
        Id: Id
        AllowMachineRestart: true
      properties:
        Id:
          description: Id
          type: string
        Uid:
          description: '`DEPRECATED` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED
        Name:
          description: Name of the advanced access policy.
          type: string
        AllowHdxAccess:
          description: |-
            Whether HDX connections are allowed to the delivery group.
            CHANGE: was:
            public bool AllowsHdxAccess { get; set; }
          type: boolean
        AllowMachineRestart:
          description: Whether users are allowed to self-service restart machines.
          type: boolean
        AllowRdpAccess:
          description: |-
            Whether RDP connections are allowed to the delivery group.
            CHANGE: was:
            public bool AllowsRdpAccess { get; set; }
          type: boolean
        AllowedConnection:
          allOf:
          - $ref: '#/components/schemas/AllowedConnection'
          description: |-
            whether connections must be local or via Access Gateway,
            and if so whether specified SmartAccess tags must be provided
            by Access Gateway with the connection.
          type: object
        AllowedUsers:
          allOf:
          - $ref: '#/components/schemas/AllowedUser'
          description: the behavior of the included users filter.
          type: object
        Description:
          description: Description.
          type: string
        Enabled:
          description: |-
            Whether the advanced access policy is enabled.  If a policy is disabled
            it is not considered when evaluating whether a user may access the
            delivery group.
          type: boolean
        ExcludedClientIPFilterEnabled:
          description: |-
            Indicates whether the ExcludedClientIPs
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedClientIPs:
          description: |-
            The client IPs which will be denied access to
            the delivery group.
          items:
            type: string
          type: array
        ExcludedClientNameFilterEnabled:
          description: |-
            Indicates whether the ExcludedClientNames
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedClientNames:
          description: |-
            The client names which will be denied access to
            the delivery group.
          items:
            type: string
          type: array
        ExcludedSmartAccessFilterEnabled:
          description: |-
            Indicates whether the ExcludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        ExcludedSmartAccessTags:
          description: |-
            The SmartAccess tags which will be denied access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagResponseModel'
          title: "SmartAccessTagResponseModel[]"
          type: array
        ExcludedUserFilterEnabled:
          description: |-
            Indicates whether the ExcludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        ExcludedUsers:
          description: |-
            The users and groups who are denied access to
            the delivery group.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        IncludedClientIPFilterEnabled:
          description: |-
            Indicates whether the IncludedClientIPs
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedClientIPs:
          description: |-
            The client IPs which will be allowed access to
            the delivery group.
          items:
            type: string
          type: array
        IncludedClientNameFilterEnabled:
          description: |-
            Indicates whether the IncludedClientNames
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedClientNames:
          description: |-
            The client names which will be granted access to
            the delivery group.
          items:
            type: string
          type: array
        IncludedSmartAccessFilterEnabled:
          description: |-
            Indicates whether the IncludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
            CHANGE: was:
            public bool AccessGatewayConnectionsUseFilters { get; set; }
          type: boolean
        IncludedSmartAccessTags:
          description: |-
            The SmartAccess tags which grant access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagResponseModel'
          title: "SmartAccessTagResponseModel[]"
          type: array
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        IncludedUsers:
          description: |-
            The users and groups who are granted access to
            the delivery group.
            CHANGE: was:
            public ADAccount[] IncludedUsers { get; set; }
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
      required:
      - Enabled
      title: AdvancedAccessPolicyResponseModel
      type: object
    AdvancedAccessPolicyResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAdvancedAccessPolicyResponseModel'
      - description: Advanced access policy response model collection
        type: object
      title: AdvancedAccessPolicyResponseModelCollection
    AllocationType:
      description: "Machine allocation type, indicating how machines are allocated\
        \ to users."
      enum:
      - Unknown
      - Static
      - Random
      title: AllocationType
      type: string
      x-enumNames:
      - Unknown
      - Static
      - Random
    AllowedConnection:
      description: ""
      enum:
      - Unknown
      - Filtered
      - NotViaAG
      - ViaAG
      - AnyViaAG
      title: AllowedConnection
      type: string
      x-enumNames:
      - Unknown
      - Filtered
      - NotViaAG
      - ViaAG
      - AnyViaAG
    AllowedUser:
      description: ""
      enum:
      - Unknown
      - Filtered
      - AnyAuthenticated
      - Any
      - AnonymousOnly
      - FilteredOrAnonymous
      title: AllowedUser
      type: string
      x-enumNames:
      - Unknown
      - Filtered
      - AnyAuthenticated
      - Any
      - AnonymousOnly
      - FilteredOrAnonymous
    AllResponseContract:
      description: "ALL: Policy, Template, Setting Definitions and Filter Definitions"
      example:
        Policies:
        - Filters:
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          Description: Description
          IsEnabled: true
          Priority: 0
          PolicyName: PolicyName
          IsUnfiltered: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        - Filters:
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          Description: Description
          IsEnabled: true
          Priority: 0
          PolicyName: PolicyName
          IsUnfiltered: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        FilterDefinitions:
        - FilterType: FilterType
          IsUserFilter: true
          Explanation: Explanation
          FilterName: FilterName
        - FilterType: FilterType
          IsUserFilter: true
          Explanation: Explanation
          FilterName: FilterName
        Templates:
        - Description: Description
          TemplateName: TemplateName
          IsReadOnly: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        - Description: Description
          TemplateName: TemplateName
          IsReadOnly: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        SettingDefinitions:
        - ProductGroup: ProductGroup
          Category: Category
          AllowedText: AllowedText
          ValueType: ValueType
          ValueValidator: ValueValidator
          SettingName: SettingName
          Explanation: Explanation
          ValueMinimum: ValueMinimum
          SettingType: SettingType
          IsUserSetting: true
          ValueMaximum: ValueMaximum
          DefaultValue: DefaultValue
          EditorName: EditorName
          IsEnableDisable: true
          VdaVersions:
          - Version: Version
            DisplayName: DisplayName
            Product: Product
            Edition: Edition
          - Version: Version
            DisplayName: DisplayName
            Product: Product
            Edition: Edition
          InitialValue: InitialValue
          EnumType: null
          DisplayName: DisplayName
          GpoScope: GpoScope
          DisabledValue: DisabledValue
          ValueUnit: ValueUnit
          DeniedText: DeniedText
          ValidatorError: ValidatorError
          RelatedSettings:
            key: RelatedSettings
        - ProductGroup: ProductGroup
          Category: Category
          AllowedText: AllowedText
          ValueType: ValueType
          ValueValidator: ValueValidator
          SettingName: SettingName
          Explanation: Explanation
          ValueMinimum: ValueMinimum
          SettingType: SettingType
          IsUserSetting: true
          ValueMaximum: ValueMaximum
          DefaultValue: DefaultValue
          EditorName: EditorName
          IsEnableDisable: true
          VdaVersions:
          - Version: Version
            DisplayName: DisplayName
            Product: Product
            Edition: Edition
          - Version: Version
            DisplayName: DisplayName
            Product: Product
            Edition: Edition
          InitialValue: InitialValue
          EnumType: null
          DisplayName: DisplayName
          GpoScope: GpoScope
          DisabledValue: DisabledValue
          ValueUnit: ValueUnit
          DeniedText: DeniedText
          ValidatorError: ValidatorError
          RelatedSettings:
            key: RelatedSettings
      properties:
        Policies:
          description: Policies
          items:
            $ref: '#/components/schemas/PolicyResponseContract'
          title: IEnumerable`1
          type: array
        Templates:
          description: Templates
          items:
            $ref: '#/components/schemas/TemplateResponseContract'
          title: IEnumerable`1
          type: array
        SettingDefinitions:
          description: Setting Definitions
          items:
            $ref: '#/components/schemas/SettingDefinitionContract'
          title: IEnumerable`1
          type: array
        FilterDefinitions:
          description: Filter Definitions
          items:
            $ref: '#/components/schemas/FilterDefinitionContract'
          title: IEnumerable`1
          type: array
      title: AllResponseContract
      type: object
    AppAccessPolicyRequestModel:
      description: |-
        Request object for the app access rules attached to a delivery group.
        When the delivery group type=AppsOnly and SharingKind=Private,
        this turns into New-BrokerAppAssignmentPolicyRule.
        When type=(AppsOnly or DesktopsAndApps) and SharingKind=Shared,
        this turns into New-BrokerAppEntitlementPolicyRule.
        When type=DesktopsOnly and SharingKind=Private, it is not allowed to
        specify this policy.
        The combination of type=AppsAndDesktops and SharingKind=Private is
        also not allowed.
      properties:
        Enabled:
          description: Specifies whether the app access policy is enabled.
          type: boolean
        ExcludedUserFilterEnabled:
          description: |-
            Specifies whether the ExcludedUsers filter
            is enabled.  If the filter is disabled then any user entries in
            the filter are ignored when determining which applications are
            available for a user.
          type: boolean
        ExcludedUsers:
          description: |-
            Specifies the excluded users filter for applications
            published on the delivery group; that is,
            the users and groups who are explicitly denied access to
            ALL applications published on the delivery group.
          items:
            type: string
          type: array
        IncludedUserFilterEnabled:
          description: |-
            Specifies whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            policy may access applications published on the delivery
            group.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter for applications
            published on the delivery group; that is, the users and
            groups who are explicitly granted access to applications
            published on the delivery group.
          items:
            type: string
          type: array
        LeasingBehavior:
          allOf:
          - $ref: '#/components/schemas/LeasingBehavior'
          description: |-
            Defines the desired connection leasing behavior applied to
            application sessions.
          type: object
        SessionReconnection:
          allOf:
          - $ref: '#/components/schemas/SessionReconnection'
          description: |-
            Defines reconnection (roaming) behavior for sessions
            launched to applications associated with the delivery group.
          type: object
      title: AppAccessPolicyRequestModel
      type: object
    AppAccessPolicyResponseModel:
      description: Response object for application access policy.
      properties:
        Enabled:
          description: Indicates whether this policy is enabled.
          type: boolean
        ExcludedUserFilterEnabled:
          description: |-
            Indicates whether the ExcludedUsers filter
            is enabled.  If the filter is disabled then any user entries in
            the filter are ignored when determining which applications are
            available for a user.
          type: boolean
        ExcludedUsers:
          description: |-
            The excluded users filter for applications
            published on the delivery group; that is,
            the users and groups who are explicitly denied access to
            ALL applications published on the delivery group.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            policy may access applications published on the delivery
            group.
          type: boolean
        IncludedUsers:
          description: |-
            The included users filter for applications
            published on the delivery group; that is, the users and
            groups who are explicitly granted access to applications
            published on the delivery group.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        LeasingBehavior:
          allOf:
          - $ref: '#/components/schemas/LeasingBehavior'
          description: |-
            Indicates the connection leasing behavior applied to
            application sessions.
          type: object
        SessionReconnection:
          allOf:
          - $ref: '#/components/schemas/SessionReconnection'
          description: |-
            Indicates reconnection (roaming) behavior for sessions
            launched to applications associated with the delivery group.
          type: object
      required:
      - ExcludedUserFilterEnabled
      - IncludedUserFilterEnabled
      title: AppAccessPolicyResponseModel
      type: object
    AppGroupCompatibility:
      description: "App Group Compatibility set.\n            "
      enum:
      - Unknown
      - Compatible
      - IncompatiblePrivate
      - IncompatibleDeliveryType
      title: AppGroupCompatibility
      type: string
      x-enumNames:
      - Unknown
      - Compatible
      - IncompatiblePrivate
      - IncompatibleDeliveryType
    AppLibPackageDiscoveryProfileRequestModel:
      description: Request model to create an AppLib Package Discovery Profile.
      example:
        Path: Path
        PublishingServer: PublishingServer
        DiscoverMsix: false
        DiscoverAppV: true
        Name: Name
        ManagementServer: ManagementServer
        AutomateDiscovery: false
        Username: Username
        PasswordFormat: "{}"
        DiscoverAppAttach: false
        DiscoveryType: "{}"
        DesktopGroupUid: 171976545
        AutoDiscoveryPeriod: "{}"
        Recurse: true
        AutoDiscoveryCadence: 1294386358
        Password: Password
      properties:
        DiscoveryType:
          allOf:
          - $ref: '#/components/schemas/AppLibPackageDiscoveryType'
          description: Gets or sets the name of the package discovery profile
          type: object
        Name:
          description: The name of the package discovery profile
          minLength: 1
          type: string
        DesktopGroupUid:
          description: The UID of the DesktopGroup from which the broker will select
            a VDA to run the discovery.
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        Path:
          description: The root directory where the discovery will run
          maxLength: 250
          type: string
        Recurse:
          default: true
          description: A value indicating whether or not to search the child directory
            tree.
          type: boolean
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          maxLength: 250
          type: string
        PublishingServer:
          description: The url of the App-V Publishing server that packages will be
            discovered from.
          maxLength: 250
          type: string
        Username:
          description: The user name of the App-V Server Administrator.
          type: string
        Password:
          description: The password of the App-V Server Administrator.
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Default is
            PlainText.
          type: object
        DiscoverAppV:
          default: true
          description: A value indicating whether or not to search should Discover
            App-V Packages.
          type: boolean
        DiscoverMsix:
          default: false
          description: A value indicating whether or not to search should Discover
            MSIX Packages.
          type: boolean
        DiscoverAppAttach:
          default: false
          description: A value indicating whether or not to search should discover
            AppAttach Packages.
          type: boolean
        AutomateDiscovery:
          default: false
          description: A value indicating whether or not the discovery should run
            automatically.
          type: boolean
        AutoDiscoveryPeriod:
          allOf:
          - $ref: '#/components/schemas/AutoDiscoveryPeriod'
          description: A value indicating what time period should used to trigger
            the discovery.
          type: object
        AutoDiscoveryCadence:
          description: A value indicating how often to trigger the discovery.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - DesktopGroupUid
      - DiscoveryType
      - Name
      title: AppLibPackageDiscoveryProfileRequestModel
      type: object
    AppLibPackageDiscoveryProfileResponseModel:
      description: PackageDiscoveryProfile response model.
      example:
        Path: Path
        PublishingServer: PublishingServer
        DiscoverMsix: true
        DiscoverAppV: true
        Name: Name
        ManagementServer: ManagementServer
        Uid: 0
        AutomateDiscovery: true
        Username: Username
        DiscoverAppAttach: true
        DesktopGroupUid: 6
        AutoDiscoveryPeriod: AutoDiscoveryPeriod
        Recurse: true
        AutoDiscoveryCadence: 1
      properties:
        Uid:
          description: Gets or sets a unique persistent identifier for the PackageDiscoveryProfile.
          format: int32
          type: integer
        Name:
          description: Name for the PackageDiscoveryProfile.
          type: string
        DesktopGroupUid:
          description: The UID of the DesktopGroup from which the broker will select
            a VDA to run the discovery.
          format: int32
          type: integer
        Path:
          description: The path to the root directory where the discovery will run.
          type: string
        Recurse:
          description: A value indicating whether or not to search the child directory
            tree.
          type: boolean
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          type: string
        PublishingServer:
          description: The url of the App-V Pubishing server that packages will be
            discovered from.
          type: string
        Username:
          description: The username of the App-V server administrator.
          type: string
        DiscoverAppV:
          description: A value indicating whether or not to search should Discover
            App-V Packages.
          type: boolean
        DiscoverMsix:
          description: A value indicating whether or not to search should Discover
            Msix Packages.
          type: boolean
        DiscoverAppAttach:
          description: A value indicating whether or not to search should Discover
            AppAttach Packages.
          type: boolean
        AutomateDiscovery:
          description: A value indicating whether or not the discovery should run
            automatically.
          type: boolean
        AutoDiscoveryPeriod:
          description: A value indicating what time period should used to trigger
            the discovery.
          type: string
        AutoDiscoveryCadence:
          description: A value indicating how often to trigger the discovery.
          format: int32
          type: integer
      title: AppLibPackageDiscoveryProfileResponseModel
      type: object
    AppLibPackageDiscoveryProfileResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppLibPackageDiscoveryProfileResponseModel'
      - description: Advanced access policy response model collection
        type: object
      title: AppLibPackageDiscoveryProfileResponseModelCollection
    AppLibPackageDiscoveryRequestModel:
      description: Request model to create an AppLib Package Discovery Session.
      example:
        Path: Path
        PublishingServer: PublishingServer
        DiscoverMsiX: false
        DiscoverAppV: false
        ManagementServer: ManagementServer
        Username: Username
        PasswordFormat: "{}"
        DiscoverAppAttach: false
        DiscoveryType: "{}"
        DesktopGroupUid: 1294386359
        DiscoveryProfileUid: 0
        Recurse: true
        Password: Password
      properties:
        DiscoveryType:
          allOf:
          - $ref: '#/components/schemas/AppLibPackageDiscoveryType'
          description: Gets or sets the name of the package discovery type
          type: object
        DiscoveryProfileUid:
          description: the UID of AppLib package discovery profile
          format: int32
          type: integer
        DesktopGroupUid:
          description: The UID of the DesktopGroup from which the broker will select
            a VDA to run the discover session.
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        Path:
          description: The root directory where the discovery session will run.
          maxLength: 250
          type: string
        Recurse:
          default: true
          description: A value indicating whether or not to search the child directory
            tree.
          type: boolean
        DiscoverAppV:
          default: false
          description: A value indicating whether or not to discover App-V packages
          type: boolean
        DiscoverMsiX:
          default: false
          description: A value indicating whether or not to discover MSIX packages
          type: boolean
        DiscoverAppAttach:
          default: false
          description: A value indicating whether or not to discover AppAttach packages
          type: boolean
        ManagementServer:
          description: The url of the App-V Management Server that packages will be
            discovered from.
          maxLength: 250
          type: string
        PublishingServer:
          description: A value indicating whether or not to discover AppAttach packages
          maxLength: 250
          type: string
        Username:
          description: the username of App-V server admin
          type: string
        Password:
          description: the password of App-V server admin
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Default is
            PlainText.
          type: object
      title: AppLibPackageDiscoveryRequestModel
      type: object
    AppLibPackageDiscoveryResponseModel:
      example:
        Path: Path
        Status: "{}"
        PublishingServer: PublishingServer
        DiscoveryProgress: 7
        ExpectedPackages: 9
        DiscoverySessionTime: DiscoverySessionTime
        ManagementServer: ManagementServer
        StatusMessage: StatusMessage
        DiscoveredPackages: 2
        ReportedPackages: 2
        ReportingProgress: 3
        BrokerMachineSID: BrokerMachineSID
        ImportedPackages: 5
        DesktopGroupUid: 6
        BrokerMachineUid: 1
        Id: Id
        DiscoveryProfileUid: 0
        ImportProgress: 5
      properties:
        Id:
          description: Get or set a unique persistent identifier for the PackageDiscoverySession.
          type: string
        DiscoveryProfileUid:
          description: Get or set a unique persistent identifier for the PackageDiscoveryProfile.
          format: int32
          type: integer
        DesktopGroupUid:
          description: The UID of the DesktopGroup from which the broker will select
            a VDA to run the discovery.
          format: int32
          type: integer
        BrokerMachineUid:
          description: Get or set a unique persistent identifier for the BrokderMachine.
          format: int32
          type: integer
        BrokerMachineSID:
          description: Gets or sets the SID of the broker machine that was chosen
            to run the discovery.
          type: string
        Path:
          description: The path to the root directory where the discovery will run.
          type: string
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          type: string
        PublishingServer:
          description: The url of the App-V server that packages wil be discovered
            from.
          type: string
        Status:
          allOf:
          - $ref: '#/components/schemas/AppLibPackageDiscoveryStatus'
          description: The status of PackageDiscoverySession
          type: object
        StatusMessage:
          description: The status message of PackageDiscoverySession
          type: string
        ImportedPackages:
          description: the number of the imported packages
          format: int32
          type: integer
        ImportProgress:
          description: the progress of package import
          format: int32
          type: integer
        DiscoveredPackages:
          description: the number of discovered packages
          format: int32
          type: integer
        DiscoveryProgress:
          description: the progress of the package discovery
          format: int32
          type: integer
        ExpectedPackages:
          description: the number of the expected packages
          format: int32
          type: integer
        ReportingProgress:
          description: Gets the percentage value of the reporting progress.
          format: int32
          type: integer
        ReportedPackages:
          description: "Gets or sets the number of packages that have reported so\
            \ far.\n            "
          format: int32
          type: integer
        DiscoverySessionTime:
          description: Get the discovery session time
          type: string
      title: AppLibPackageDiscoveryResponseModel
      type: object
    AppLibPackageDiscoveryResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppLibPackageDiscoveryResponseModel'
      - description: Package discovery session response model collection
        type: object
      title: AppLibPackageDiscoveryResponseModelCollection
    AppLibPackageDiscoveryStatus:
      description: Enum to indicate the status of the package discovery process
      enum:
      - Unknown
      - Pending
      - Failed
      - Discovering
      - FinishedWithDataWaiting
      - Reporting
      - Importing
      - Finished
      title: AppLibPackageDiscoveryStatus
      type: string
      x-enumNames:
      - Unknown
      - Pending
      - Failed
      - Discovering
      - FinishedWithDataWaiting
      - Reporting
      - Importing
      - Finished
    AppLibPackageDiscoveryType:
      description: ""
      enum:
      - Unknown
      - NetworkShareDiscovery
      - AppVServerDiscovery
      title: AppLibPackageDiscoveryType
      type: string
      x-enumNames:
      - Unknown
      - NetworkShareDiscovery
      - AppVServerDiscovery
    ApplicationDeliveryGroupResponseModel:
      allOf:
      - $ref: '#/components/schemas/DeliveryGroupResponseModel'
      - $ref: '#/components/schemas/ApplicationDeliveryGroupResponseModel_allOf'
      title: ApplicationDeliveryGroupResponseModel
    ApplicationDeliveryGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfApplicationDeliveryGroupResponseModel'
      - description: 'Collection of ApplicationDeliveryGroupResponseModel '
        type: object
      title: ApplicationDeliveryGroupResponseModelCollection
    ApplicationDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/ApplicationResponseModel'
      - $ref: '#/components/schemas/ApplicationDetailResponseModel_allOf'
      title: ApplicationDetailResponseModel
    ApplicationDiscoveryItemType:
      description: Type to indicate application discovery item type
      enum:
      - Unknown
      - MachineShares
      - DirectoryOrFiles
      - ApplicationProperty
      title: ApplicationDiscoveryItemType
      type: string
      x-enumNames:
      - Unknown
      - MachineShares
      - DirectoryOrFiles
      - ApplicationProperty
    ApplicationDiscoveryRequestModel:
      description: |-
        Specify ApplicationGroups, DeliverGroups or MachineCatalogs to find the best machine to browse application;
        Or specify machine IP/DnsName to browse application from the machine.
        If both ApplicationGroups, DeliveryGroups, MachineCatalogs and ServerOrPath are specified, ServerOrPath will take priority.
      example:
        MachineCatalogs:
        - MachineCatalogs
        - MachineCatalogs
        ApplicationGroups:
        - ApplicationGroups
        - ApplicationGroups
        ServerOrPath: ServerOrPath
        DeliveryGroups:
        - DeliveryGroups
        - DeliveryGroups
      properties:
        ApplicationGroups:
          description: The machines associated with Application Groups will be browsed.
          items:
            type: string
          type: array
        DeliveryGroups:
          description: The machines associated with Delivery Groups will be browsed.
          items:
            type: string
          type: array
        MachineCatalogs:
          description: The machines in the catalogs will be browsed.
          items:
            type: string
          type: array
        ServerOrPath:
          description: |-
            Specify machine IP or DNS to get machine shares;
            Specify local path to get directory/files.
          type: string
      title: ApplicationDiscoveryRequestModel
      type: object
    ApplicationDiscoveryResponseModel:
      description: Response object for application discovery.
      example:
        item: item
        type: "{}"
      properties:
        item:
          description: |-
            Serialized string that is a list of machine shares,
            or a list of directories, or application properties that parsed from a selected executable file.
          type: string
        type:
          allOf:
          - $ref: '#/components/schemas/ApplicationDiscoveryItemType'
          description: Indicating the item type
          type: object
      title: ApplicationDiscoveryResponseModel
      type: object
    ApplicationFolderResponseModel:
      description: Response object for an application folder.
      example:
        Path: Path
        TotalMachineCatalogs: 1
        Uid: 0
        Parent: null
        TotalApplications: 6
        TotalApplicationGroups: 5
        TotalDesktopGroups: 5
        Id: Id
        Children:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        Name: Name
      properties:
        Id:
          description: |-
            Id of the application folder.
            Used to be: Uuid
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        Children:
          description: Child folders.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        Name:
          description: Name of the folder.
          minLength: 1
          type: string
        Parent:
          $ref: '#/components/schemas/AdminFolderResponseModel_Parent'
        Path:
          description: |-
            Full path to the folder.
            Used to be: FullName
          minLength: 1
          type: string
        TotalApplications:
          description: Total number of applications in the folder.
          format: int32
          type: integer
        TotalMachineCatalogs:
          description: Total number of machine catalogs in the folder.
          format: int32
          type: integer
        TotalDesktopGroups:
          description: Total number of delivery groups in the folder.
          format: int32
          type: integer
        TotalApplicationGroups:
          description: Total number of application groups in the folder.
          format: int32
          type: integer
      required:
      - Children
      - Id
      - Name
      - Path
      - TotalApplications
      title: ApplicationFolderResponseModel
      type: object
    ApplicationFolderResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfApplicationFolderResponseModel'
      - description: The collection for ApplicationFolderResponseModel
        type: object
      title: ApplicationFolderResponseModelCollection
    ApplicationGroupAddApplicationsRequestModel:
      description: "The request model for adding apps to app group.\n            "
      example:
        NewApplications:
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        ExistingApplications:
        - ExistingApplications
        - ExistingApplications
      properties:
        ExistingApplications:
          description: "List of existing applications to be associated with the\n\
            application group.\n\nOptional.  Default is not to create any new associations\
            \ of\nexisting applications to the application group.\n\n\nEach item can\
            \ be specified by \nor .\n \nAll applications associated with a application\
            \ group must\nSharingKind equal to\nShared."
          items:
            type: string
          type: array
        NewApplications:
          description: |-
            List of applications which should be created and associated
            with the application group.
            Optional.  Default is not to create any new applications
            associated with the application group.
          items:
            $ref: '#/components/schemas/CreateApplicationRequestModel'
          title: "CreateApplicationRequestModel[]"
          type: array
      title: ApplicationGroupAddApplicationsRequestModel
      type: object
    ApplicationGroupDeliveryGroupRefResponseModel:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      - $ref: '#/components/schemas/ApplicationGroupDeliveryGroupRefResponseModel_allOf'
      title: ApplicationGroupDeliveryGroupRefResponseModel
    ApplicationGroupDeliveryGroupResponseModel:
      allOf:
      - $ref: '#/components/schemas/DeliveryGroupResponseModel'
      - $ref: '#/components/schemas/ApplicationGroupDeliveryGroupResponseModel_allOf'
      title: ApplicationGroupDeliveryGroupResponseModel
    ApplicationGroupDeliveryGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfApplicationGroupDeliveryGroupResponseModel'
      - description: 'Collection of ApplicationDeliveryGroupResponseModel '
        type: object
      title: ApplicationGroupDeliveryGroupResponseModelCollection
    ApplicationGroupDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/ApplicationGroupResponseModel'
      - $ref: '#/components/schemas/ApplicationGroupDetailResponseModel_allOf'
      title: ApplicationGroupDetailResponseModel
    ApplicationGroupNameCheckRequestModel:
      description: Model for Checking Application Group Name with Admin Folder
      example:
        Name: Name
      properties:
        Name:
          description: Application Group Name with Admin Folder
          type: string
      title: ApplicationGroupNameCheckRequestModel
      type: object
    ApplicationGroupResponseModel:
      description: Response object for an application group.
      properties:
        Id:
          description: |-
            Id of the application group.
            Used to be: Uuid
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        ContainerScopes:
          description: |-
            Delegated admin scopes in which the containers of the
            application group reside.
          items:
            $ref: '#/components/schemas/ContainerScopeResponseModel'
          title: "ContainerScopeResponseModel[]"
          type: array
        Description:
          description: |-
            Description of the application group.
            As with other facets of application groups, the
            description is not visible to end users.
          type: string
        Enabled:
          description: |-
            Indicates whether or not the applications in this
            application group can be launched.
          type: boolean
        Name:
          description: "Simple administrative name of application group\nwithin parent\
            \ admin folder (if any). This property \nis not guaranteed unique across\
            \ all application groups."
          type: string
        FullName:
          description: |-
            Name of this application group. The name uniquely
            identifies the application group within the site.
            As with other facets of application groups, the
            name is not visible to end users.
          type: string
        Scopes:
          description: |-
            The list of the delegated admin scopes to which
            the application group belongs.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        Tags:
          description: Tags associated with this application group.
          items:
            type: string
          type: array
        Tenants:
          description: |-
            The tenant(s) that the application group is assigned to.  If `null`,
            the application group is not assigned to tenants, and may be used by
            any tenant, including future added tenants.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        NumApplications:
          description: Number of applications present in the application group.
          format: int32
          type: integer
        NumMachines:
          description: Number of machines capable of hosting the applications in the
            application group.
          format: int32
          type: integer
        NumMachinesWithTag:
          description: "Total number of machines across all desktop groups on \nwhich\
            \ the application group is published,\nand which are tagged with the tag\
            \ given by the RestrictToTag property."
          format: int32
          type: integer
        RestrictToTag:
          $ref: '#/components/schemas/ApplicationGroupResponseModel_RestrictToTag'
        DeliveryGroups:
          description: Delivery groups associated with the application group.
          items:
            $ref: '#/components/schemas/ApplicationGroupDeliveryGroupRefResponseModel'
          title: "ApplicationGroupDeliveryGroupRefResponseModel[]"
          type: array
        AdminFolder:
          $ref: '#/components/schemas/ApplicationGroupResponseModel_AdminFolder'
      required:
      - ContainerScopes
      - DeliveryGroups
      - Enabled
      - Id
      - NumApplications
      - NumMachines
      - Scopes
      title: ApplicationGroupResponseModel
      type: object
    ApplicationGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfApplicationGroupResponseModel'
      - description: Application group response model collection
        type: object
      title: ApplicationGroupResponseModelCollection
    ApplicationResponseModel:
      description: Response object for application.
      properties:
        Id:
          description: |-
            Id of the application.
            Used to be: Uuid
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        ApplicationFolder:
          $ref: '#/components/schemas/ApplicationResponseModel_ApplicationFolder'
        ApplicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: |-
            Type of the application.
            Note: in the past, this was returned as HostedOnDesktop when the
            caller was working with an AppV app.  We should not do that; this
            should reflect the app type that the caller is actually working
            with.
            In the unlikely event that an app is found in the low-level SDK
            with type SessionPrelauncher, it should be filtered out of the
            REST API response.
          type: object
        ClientFolder:
          description: The folder that the application belongs to as the user sees
            it.
          type: string
        ContainerScopes:
          description: |-
            Delegated admin scopes in which the containers of the
            application reside.
          items:
            $ref: '#/components/schemas/ContainerScopeResponseModel'
          title: "ContainerScopeResponseModel[]"
          type: array
        Description:
          description: The description of the application.
          type: string
        DoNotEnumerate:
          description: Indicates whether or not this application is enumerable
          type: boolean
        Enabled:
          description: Indicates whether or not this application can be launched.
          type: boolean
        IconId:
          description: |-
            Id of the icon used for the application.
            Used to be: IconUid (and it was not globally unique)
            Needs to be globally unique
            Might be constructed from site ID + internal Uid
          minLength: 1
          type: string
        InstalledAppProperties:
          $ref: '#/components/schemas/ApplicationResponseModel_InstalledAppProperties'
        AppVAppProperties:
          $ref: '#/components/schemas/ApplicationResponseModel_AppVAppProperties'
        ContentLocation:
          description: Location of published content.
          type: string
        Name:
          description: Name of the application.  Only seen by administrators.
          minLength: 1
          type: string
        PublishedName:
          description: The name seen by end users who have access to the application.
          minLength: 1
          type: string
        Visible:
          description: Indicates whether or not this application is visible to users.
          type: boolean
        SharingKind:
          allOf:
          - $ref: '#/components/schemas/SharingKind'
          description: Indicates whether machines hosting the application are shared.
          type: object
        Tags:
          description: Tags associated with this application.
          items:
            type: string
          type: array
        Tenants:
          description: |-
            The tenant(s) that the application is assigned to.  If `null`, the
            application is not assigned to any tenants, and may be used by any
            tenant.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        CloudWorkspaceManaged:
          description: |-
            Indicates whether users are managed in the Citrix Cloud Library, or
            within Studio.
          type: boolean
        NumAssociatedDeliveryGroups:
          description: Number of delivery groups that the application is associated
            with.
          format: int32
          type: integer
        NumAssociatedApplicationGroups:
          description: Number of application groups that the application is associated
            with.
          format: int32
          type: integer
        AssociatedDeliveryGroupUuids:
          description: Delivery group Uuids that the application is associated with.
          items:
            type: string
          type: array
        AssociatedApplicationGroupUuids:
          description: Application group Uuids that the application is associated
            with.
          items:
            type: string
          type: array
        ZoneId:
          description: Application Zone info.
          type: string
      required:
      - ApplicationFolder
      - ApplicationType
      - ContainerScopes
      - Enabled
      - IconId
      - Id
      - Name
      - PublishedName
      - SharingKind
      - Visible
      title: ApplicationResponseModel
      type: object
    ApplicationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfApplicationResponseModel'
      - description: Application response model collection
        type: object
      title: ApplicationResponseModelCollection
    ApplicationSearchRequestModel:
      description: Request model for defining advanced application search criteria.
      example:
        SortCriteria: null
        ApplicationGroup: ApplicationGroup
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        ApplicationFolder: ApplicationFolder
        BasicSearchString: BasicSearchString
        SearchFilterGroups:
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        SearchFilterGroupsType: "{}"
        IncludeSubFolders: true
      properties:
        ApplicationFolder:
          description: Application folder in which to search for the application.
          type: string
        IncludeSubFolders:
          default: true
          description: |-
            Whether to include subfolders of the
            ApplicationFolder in the search for the
            application.
          type: boolean
        ApplicationGroup:
          description: Application group in which to search for the application.
          type: string
        BasicSearchString:
          description: |-
            Basic search string.  Specify a string which will match
            if contained within the application name.
          type: string
        SearchFilters:
          description: List of advanced search filters.
          items:
            $ref: '#/components/schemas/AppSearchFilterRequestModel'
          title: "AppSearchFilterRequestModel[]"
          type: array
        SortCriteria:
          $ref: '#/components/schemas/ApplicationSearchRequestModel_SortCriteria'
        SearchFilterGroups:
          description: List of advanced search filter groups.
          items:
            $ref: '#/components/schemas/AppSearchFilterGroupRequestModel'
          title: "AppSearchFilterGroupRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/AppSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
      title: ApplicationSearchRequestModel
      type: object
    ApplicationType:
      description: Application types.
      enum:
      - Unknown
      - HostedOnDesktop
      - InstalledOnClient
      - SessionPreLauncher
      - PublishedContent
      - AppV
      - AppLibraryAppV
      - Msix
      - AppAttach
      title: ApplicationType
      type: string
      x-enumNames:
      - Unknown
      - HostedOnDesktop
      - InstalledOnClient
      - SessionPreLauncher
      - PublishedContent
      - AppV
      - AppLibraryAppV
      - Msix
      - AppAttach
    AppliedPolicy:
      description: Policy information
      properties:
        IsApplied:
          description: Is policy applied
          type: boolean
        PolicyName:
          description: Policy name
          type: string
        GpoName:
          description: GPO name
          type: string
        Reasons:
          additionalProperties:
            items:
              type: string
            type: array
          description: Reasons why the policy is or is not applied
          title: Dictionary`2
          type: object
        Details:
          additionalProperties:
            items:
              $ref: '#/components/schemas/FilterDetail'
            title: "FilterDetail[]"
            type: array
          description: Reasons why the policy is or is not applied.
          title: Dictionary`2
          type: object
      title: AppliedPolicy
      type: object
    AppliedSetting:
      description: Winning setting information
      properties:
        SettingName:
          description: Setting name
          type: string
        SettingValue:
          description: Setting value
          type: string
        WinningGpo:
          description: Source GPO for the setting
          type: string
        WinningPolicy:
          description: Source policy for the setting
          type: string
      title: AppliedSetting
      type: object
    AppOrDesktopCompatibility:
      description: "Compatibility set for Apps or Desktops.\n            "
      enum:
      - Unknown
      - Compatible
      - IncompatibleDeliveryType
      title: AppOrDesktopCompatibility
      type: string
      x-enumNames:
      - Unknown
      - Compatible
      - IncompatibleDeliveryType
    AppSearchFilterGroupRequestModel:
      description: Advanced search filter group for applications
      example:
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        SearchFilterGroupType: "{}"
        SearchFilterGroups:
        - null
        - null
        SearchFilterGroupsType: "{}"
      properties:
        SearchFilterGroupType:
          allOf:
          - $ref: '#/components/schemas/AppSearchFilterGroupType'
          description: The type of search filter group
          type: object
        SearchFilters:
          description: The search filters in search filter group
          items:
            $ref: '#/components/schemas/AppSearchFilterRequestModel'
          title: "AppSearchFilterRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/AppSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
        SearchFilterGroups:
          description: The search filter group in search filter groups
          items:
            $ref: '#/components/schemas/AppSearchFilterGroupRequestModel'
          title: "AppSearchFilterGroupRequestModel[]"
          type: array
      title: AppSearchFilterGroupRequestModel
      type: object
    AppSearchFilterGroupsType:
      description: The search filter groups type
      enum:
      - Or
      - And
      title: AppSearchFilterGroupsType
      type: string
      x-enumNames:
      - Or
      - And
    AppSearchFilterGroupType:
      description: The search filter group type
      enum:
      - Or
      - And
      title: AppSearchFilterGroupType
      type: string
      x-enumNames:
      - Or
      - And
    AppSearchFilterRequestModel:
      description: Advanced search filter for applications.
      example:
        Operator: "{}"
        Value: Value
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/AppSearchProperty'
          description: Property to filter on.
          type: object
        Value:
          description: Value to match.
          type: string
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchOperator'
          description: |-
            The comparison operator to use when determining
            if an item matches the filter.
          type: object
      required:
      - Operator
      - Property
      title: AppSearchFilterRequestModel
      type: object
    AppSearchProperty:
      description: "Application properties can be used for advanced application searches.\n\
        \            "
      enum:
      - ApplicationCategory
      - ApplicationGroup
      - Name
      - Path
      - BrowserName
      - CommandLineArguments
      - DeliveryGroup
      - Description
      - PublishedName
      - Enabled
      - MaxTotalInstances
      - MaxPerUserInstances
      - ShortcutAddedToDesktop
      - ShortcutAddedToStartMenu
      - StartMenuFolder
      - Tags
      - ApplicationType
      - Visible
      - WaitForPrinterCreation
      - WorkingDirectory
      title: AppSearchProperty
      type: string
      x-enumNames:
      - ApplicationCategory
      - ApplicationGroup
      - Name
      - Path
      - BrowserName
      - CommandLineArguments
      - DeliveryGroup
      - Description
      - PublishedName
      - Enabled
      - MaxTotalInstances
      - MaxPerUserInstances
      - ShortcutAddedToDesktop
      - ShortcutAddedToStartMenu
      - StartMenuFolder
      - Tags
      - ApplicationType
      - Visible
      - WaitForPrinterCreation
      - WorkingDirectory
    AppSortCriteriaRequestModel:
      description: "Application sort criteria.\n            "
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/AppSearchProperty'
          description: Property to sort on.
          type: object
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/ListSortDirection'
          description: Direction to sort the property.
          type: object
      required:
      - Property
      - SortDirection
      title: AppSortCriteriaRequestModel
      type: object
    AppState:
      description: State of a machine with respect to session launch.
      enum:
      - Unknown
      - PreLogon
      - PreLaunched
      - Active
      - Desktop
      - Lingering
      - NoApps
      title: AppState
      type: string
      x-enumNames:
      - Unknown
      - PreLogon
      - PreLaunched
      - Active
      - Desktop
      - Lingering
      - NoApps
    AppVApplicationDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/AppVApplicationResponseModel'
      - $ref: '#/components/schemas/AppVApplicationDetailResponseModel_allOf'
      title: AppVApplicationDetailResponseModel
    AppVApplicationResponseModel:
      description: Response object describing an App-V application.
      example:
        Uid: 6
        Target: Target
        Identifier: Identifier
        PublishingServer: PublishingServer
        BrokerApplicationNames:
        - BrokerApplicationNames
        - BrokerApplicationNames
        PackageName: PackageName
        ServerMachineConfigurationUid: ServerMachineConfigurationUid
        PackageId: PackageId
        Id: Id
        PackageVersionId: PackageVersionId
        PackageVersion: PackageVersion
        Name: Name
      properties:
        Id:
          description: |-
            Id of the App-V application.
            Was: AppVAppId
          minLength: 1
          type: string
        Target:
          description: Target of the App-V application.
          type: string
        Identifier:
          description: Identifier of the App-V application.
          type: string
        ServerMachineConfigurationUid:
          description: |-
            Internal property.  If `null`, indicates that the
            application type is AppLibraryAppV
            rather than AppV.
          type: string
        Name:
          description: App name.
          minLength: 1
          type: string
        PackageId:
          description: App package id.
          minLength: 1
          type: string
        PackageName:
          description: App package name.
          minLength: 1
          type: string
        PackageVersion:
          description: App package version.
          minLength: 1
          type: string
        PackageVersionId:
          description: App package version id.
          minLength: 1
          type: string
        PublishingServer:
          description: App publishing server.
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        BrokerApplicationNames:
          description: Delivered broker application names.
          items:
            type: string
          type: array
      required:
      - Id
      - Name
      - PackageId
      - PackageName
      - PackageVersion
      - PackageVersionId
      - PublishingServer
      title: AppVApplicationResponseModel
      type: object
    AppVApplicationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppVApplicationResponseModel'
      - description: Response object for collections of items.
        type: object
      title: AppVApplicationResponseModelCollection
    AppVAppRequestModel:
      description: Request object for App-V application properties.
      properties:
        Id:
          description: App-V application Id.
          minLength: 1
          type: string
        Identifier:
          description: App-V application identifier.
          type: string
        PackageId:
          description: App-V package identifier.
          minLength: 1
          type: string
        PackageName:
          description: App-V package name.
          minLength: 1
          type: string
        PackageVersion:
          description: App-V package version.
          minLength: 1
          type: string
        PackageVersionId:
          description: App-V package version Id.
          minLength: 1
          type: string
        PublishingServer:
          description: App-V publishing server.
          type: string
        SequenceLocation:
          description: App-V sequence location.
          minLength: 1
          type: string
        ServerMachineConfigurationUid:
          description: App-V server machine configuration Uid.
          type: string
        TargetInPackage:
          description: Specifies whether the target is in an App-V package.
          type: boolean
      required:
      - Id
      - PackageId
      - PackageName
      - PackageVersion
      - PackageVersionId
      - SequenceLocation
      title: AppVAppRequestModel
      type: object
    AppVAppResponseModel:
      description: Response object for App-V application properties.
      properties:
        Id:
          description: Id of the App-V application
          type: string
        PackageId:
          description: App-V package identifier.
          minLength: 1
          type: string
        PackageName:
          description: App-V package name.
          minLength: 1
          type: string
        PackageVersion:
          description: App-V package version.
          minLength: 1
          type: string
        PackageVersionId:
          description: App-V package version Id.
          minLength: 1
          type: string
        PublishingServer:
          description: App-V publishing server.
          type: string
        ManagementServer:
          description: App-V Management server.
          type: string
        SequenceLocation:
          description: App-V sequence location.
          minLength: 1
          type: string
        ServerMachineConfigurationUid:
          description: App-V server machine configuration Uid.
          type: string
        TargetInPackage:
          description: Whether the target is in an App-V package.
          type: boolean
        SourceTypeName:
          description: Application  Source Type Name.
          type: string
      required:
      - PackageId
      - PackageName
      - PackageVersion
      - PackageVersionId
      - SequenceLocation
      - TargetInPackage
      title: AppVAppResponseModel
      type: object
    AppVIsolationGroupPackageRequestModel:
      description: Request object for an App-V IsolationGroup package.
      example:
        Uid: 0
        ExplicitInclusion: true
      properties:
        ExplicitInclusion:
          description: Gets or sets a value indicating whether ExplicitInclusion
          type: boolean
        Uid:
          description: Uid of IsolationGroup
          format: int32
          type: integer
      required:
      - ExplicitInclusion
      - Uid
      title: AppVIsolationGroupPackageRequestModel
      type: object
    AppVIsolationGroupResponseModel:
      description: Response object for an App-V IsolationGroup.
      example:
        Uid: 0
        AppVPackages:
        - Path: Path
          LibraryDescription: LibraryDescription
          Description: Description
          AppVApplications:
          - Uid: 6
            Target: Target
            Identifier: Identifier
            PublishingServer: PublishingServer
            BrokerApplicationNames:
            - BrokerApplicationNames
            - BrokerApplicationNames
            PackageName: PackageName
            ServerMachineConfigurationUid: ServerMachineConfigurationUid
            PackageId: PackageId
            Id: Id
            PackageVersionId: PackageVersionId
            PackageVersion: PackageVersion
            Name: Name
          - Uid: 6
            Target: Target
            Identifier: Identifier
            PublishingServer: PublishingServer
            BrokerApplicationNames:
            - BrokerApplicationNames
            - BrokerApplicationNames
            PackageName: PackageName
            ServerMachineConfigurationUid: ServerMachineConfigurationUid
            PackageId: PackageId
            Id: Id
            PackageVersionId: PackageVersionId
            PackageVersion: PackageVersion
            Name: Name
          SourceType: "{}"
          LibraryUid: 1
          LibraryName: LibraryName
          SourceName: SourceName
          OrderNumber: 5
          SourceTypeName: SourceTypeName
          Name: Name
          Uid: 5
          NumOfBrokerDeliveryGroups: 7
          Version: Version
          ExplicitInclusion: true
          Exists: true
          VersionGuid: VersionGuid
          Id: Id
          NumOfBrokerApplications: 2
        - Path: Path
          LibraryDescription: LibraryDescription
          Description: Description
          AppVApplications:
          - Uid: 6
            Target: Target
            Identifier: Identifier
            PublishingServer: PublishingServer
            BrokerApplicationNames:
            - BrokerApplicationNames
            - BrokerApplicationNames
            PackageName: PackageName
            ServerMachineConfigurationUid: ServerMachineConfigurationUid
            PackageId: PackageId
            Id: Id
            PackageVersionId: PackageVersionId
            PackageVersion: PackageVersion
            Name: Name
          - Uid: 6
            Target: Target
            Identifier: Identifier
            PublishingServer: PublishingServer
            BrokerApplicationNames:
            - BrokerApplicationNames
            - BrokerApplicationNames
            PackageName: PackageName
            ServerMachineConfigurationUid: ServerMachineConfigurationUid
            PackageId: PackageId
            Id: Id
            PackageVersionId: PackageVersionId
            PackageVersion: PackageVersion
            Name: Name
          SourceType: "{}"
          LibraryUid: 1
          LibraryName: LibraryName
          SourceName: SourceName
          OrderNumber: 5
          SourceTypeName: SourceTypeName
          Name: Name
          Uid: 5
          NumOfBrokerDeliveryGroups: 7
          Version: Version
          ExplicitInclusion: true
          Exists: true
          VersionGuid: VersionGuid
          Id: Id
          NumOfBrokerApplications: 2
        Description: Description
        Version: Version
        Name: Name
      properties:
        Name:
          description: Name of IsolationGroup
          type: string
        Description:
          description: Description of IsolationGroup
          type: string
        Version:
          description: Version of IsolationGroup
          type: string
        Uid:
          description: Uid of IsolationGroup
          format: int32
          type: integer
        AppVPackages:
          description: Contained AppV packages
          items:
            $ref: '#/components/schemas/AppVPackageResponseModel'
          title: "AppVPackageResponseModel[]"
          type: array
      title: AppVIsolationGroupResponseModel
      type: object
    AppVIsolationGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppVIsolationGroupResponseModel'
      - description: Response object for collections of items.
        type: object
      title: AppVIsolationGroupResponseModelCollection
    AppVPackageRequestModel:
      description: Request object for add AppVPackages.
      example:
        Paths:
        - Paths
        - Paths
      properties:
        Paths:
          description: AppV package path that need to import.
          items:
            type: string
          type: array
      title: AppVPackageRequestModel
      type: object
    AppVPackageResponseModel:
      description: Response object for an App-V package.
      example:
        Path: Path
        LibraryDescription: LibraryDescription
        Description: Description
        AppVApplications:
        - Uid: 6
          Target: Target
          Identifier: Identifier
          PublishingServer: PublishingServer
          BrokerApplicationNames:
          - BrokerApplicationNames
          - BrokerApplicationNames
          PackageName: PackageName
          ServerMachineConfigurationUid: ServerMachineConfigurationUid
          PackageId: PackageId
          Id: Id
          PackageVersionId: PackageVersionId
          PackageVersion: PackageVersion
          Name: Name
        - Uid: 6
          Target: Target
          Identifier: Identifier
          PublishingServer: PublishingServer
          BrokerApplicationNames:
          - BrokerApplicationNames
          - BrokerApplicationNames
          PackageName: PackageName
          ServerMachineConfigurationUid: ServerMachineConfigurationUid
          PackageId: PackageId
          Id: Id
          PackageVersionId: PackageVersionId
          PackageVersion: PackageVersion
          Name: Name
        SourceType: "{}"
        LibraryUid: 1
        LibraryName: LibraryName
        SourceName: SourceName
        OrderNumber: 5
        SourceTypeName: SourceTypeName
        Name: Name
        Uid: 5
        NumOfBrokerDeliveryGroups: 7
        Version: Version
        ExplicitInclusion: true
        Exists: true
        VersionGuid: VersionGuid
        Id: Id
        NumOfBrokerApplications: 2
      properties:
        AppVApplications:
          description: List of applications in the package.
          items:
            $ref: '#/components/schemas/AppVApplicationResponseModel'
          title: "AppVApplicationResponseModel[]"
          type: array
        Description:
          description: Description of the package.
          type: string
        Exists:
          description: Indicates whether the package exists.
          type: boolean
        LibraryUid:
          description: Id of the library which the package is in.
          format: int32
          type: integer
        LibraryName:
          description: Name of the library which the package is in.
          type: string
        LibraryDescription:
          description: Description of the library which the package is in.
          type: string
        Name:
          description: Package name.
          minLength: 1
          type: string
        Id:
          description: Id of package.
          minLength: 1
          type: string
        Path:
          description: Path to package.
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        Version:
          description: Package version.
          minLength: 1
          type: string
        VersionGuid:
          description: Package version id.
          minLength: 1
          type: string
        SourceName:
          description: Gets or sets SourceName
          type: string
        SourceType:
          allOf:
          - $ref: '#/components/schemas/AppVSource'
          description: Gets or Sets SourceType.
          type: object
        SourceTypeName:
          description: Gets or sets SourceType name
          type: string
        OrderNumber:
          description: Gets or sets OrderNumber
          format: int32
          type: integer
        ExplicitInclusion:
          description: Gets or sets a value indicating whether ExplicitInclusion
          type: boolean
        NumOfBrokerApplications:
          description: Numbers of broker applications use the package
          format: int32
          type: integer
        NumOfBrokerDeliveryGroups:
          description: Numbers of broker deliveryGroups associate the package
          format: int32
          type: integer
      required:
      - AppVApplications
      - Exists
      - Id
      - Name
      - Path
      - Version
      - VersionGuid
      title: AppVPackageResponseModel
      type: object
    AppVPackageResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppVPackageResponseModel'
      - description: Response object for collections of items.
        type: object
      title: AppVPackageResponseModelCollection
    AppvServerPackageApplicationIconRequestModel:
      example:
        Server: Server
        PackageId: PackageId
        ApplicationId: ApplicationId
        IconFormat: IconFormat
      properties:
        Server:
          description: ManagementServeraddress of the App-V server
          minLength: 1
          type: string
        PackageId:
          description: Id of the App-V package
          minLength: 1
          type: string
        ApplicationId:
          description: Id of the App-V application within the package.
          minLength: 1
          type: string
        IconFormat:
          description: |-
            Icon format.  Must be:
            `{mime-type};{width}x{height}x{colordepth}`

            where:


            * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)
            * _width_ and _height_ are specified in pixels.
            * _colordepth_ (optional) is either `8` or `24`.

            Optional. If not specified, only the raw icon data will be returned.
            Note that this is typically in ICO format, which some clients cannot
            display properly.
          type: string
      required:
      - ApplicationId
      - PackageId
      - Server
      title: AppvServerPackageApplicationIconRequestModel
      type: object
    AppVServerResponseModel:
      description: Response object for App-V servers.
      properties:
        Uid:
          description: Uid of App-V server.
          format: int32
          type: integer
        Name:
          description: Name of App-V server.
          minLength: 1
          type: string
        ManagementServer:
          description: Management server address.  (i.e. where packages/apps are enumerated
            from.)
          minLength: 1
          type: string
        PublishingServer:
          description: Publishing server address.  (i.e. where the package streams
            from.)
          minLength: 1
          type: string
        IsStudioConfigured:
          description: Is studio configured or not.
          type: boolean
      required:
      - ManagementServer
      - Name
      - PublishingServer
      title: AppVServerResponseModel
      type: object
    AppVServerResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAppVServerResponseModel'
      - description: Response object for collections of items.
        type: object
      title: AppVServerResponseModelCollection
    AppVSource:
      description: ""
      enum:
      - Unknown
      - AppVServer
      - AppLibrary
      title: AppVSource
      type: string
      x-enumNames:
      - Unknown
      - AppVServer
      - AppLibrary
    AssignImageVersionToMachineCatalogRequestModel:
      description: |-
        Request object representing the assignment of image versions
        to a machine catalog.
      properties:
        ImageDefinition:
          description: Name or Id of selected prepared image definition
          type: string
        ImageVersion:
          description: Name or Id of selected prepared image version
          type: string
      title: AssignImageVersionToMachineCatalogRequestModel
      type: object
    AssignMachineToUserRequestModel:
      description: |-
        Request object representing the assignment of machines
        to a delivery group, and/or to users.
      example:
        Users:
        - Users
        - Users
        Machine: Machine
      properties:
        Machine:
          description: The machine to assign. May be an Id or name.
          minLength: 1
          type: string
        Users:
          description: |-
            The user(s) to whom the machine should be assigned.
            Caller can specify SamName, UPN, or SID for each user.
            The system should look up the entity to determine the other
            AD properties (such as DisplayName and IsGroup properties).
            Groups should be rejected.
            If the caller passes an empty list, the machine is
            de-allocated if it was previously allocated.
          items:
            type: string
          type: array
      required:
      - Machine
      title: AssignMachineToUserRequestModel
      type: object
    AttachedDiskResponseModel:
      description: Attached disk.
      example:
        IsBootDisk: true
        InfrastructureUid: InfrastructureUid
        SizeGB: 4
        Name: Name
      properties:
        Name:
          description: Name of the attached disk.
          type: string
        IsBootDisk:
          description: Indicates whether the disk is the boot disk of the VM.
          type: boolean
        SizeGB:
          description: "Size of the disk, in whole GB."
          format: int32
          type: integer
        InfrastructureUid:
          description: Opaque identifier used by the underlying infrastructure to
            identify the disk.
          type: string
      title: AttachedDiskResponseModel
      type: object
    Attribute:
      properties:
        TypeId:
          properties: {}
          title: Object
          type: object
      title: Attribute
      type: object
    AuthTokenResponseModel:
      description: Authorization and authentication JSON Web Token model.
      example:
        UserId: UserId
        Token: Token
        CustomerId: CustomerId
        ExpiresAt: ExpiresAt
        Principal: Principal
      properties:
        Token:
          description: The FMA token.
          type: string
        Principal:
          description: The user principal.
          type: string
        UserId:
          description: The user id.
          type: string
        CustomerId:
          description: The customer id.
          type: string
        ExpiresAt:
          description: The token will expire at the UTC time.
          type: string
      title: AuthTokenResponseModel
      type: object
    AutoDiscoveryPeriod:
      description: ""
      enum:
      - None
      - Hour
      - Day
      - Week
      title: AutoDiscoveryPeriod
      type: string
      x-enumNames:
      - None
      - Hour
      - Day
      - Week
    AzureADCustomDomainResponseModel:
      description: Information of Azure AD custom domain
      example:
        TenantId: TenantId
        TenantDisplayName: TenantDisplayName
        AuthenticationType: AuthenticationType
      properties:
        TenantId:
          description: "The tenant ID. For example, 00000000-0000-0000-0000-000000000000."
          type: string
        TenantDisplayName:
          description: The display name of the tenant.
          type: string
        AuthenticationType:
          description: "The authentication type of the domain. Valid values are: Managed\
            \ and Federated."
          type: string
      title: AzureADCustomDomainResponseModel
      type: object
    AzureAdJoinedMode:
      description: Azure AD joined type for machines
      enum:
      - Unknown
      - NotAadJoined
      - HybridAadJoined
      - PureAadJoined
      title: AzureAdJoinedMode
      type: string
      x-enumNames:
      - Unknown
      - NotAadJoined
      - HybridAadJoined
      - PureAadJoined
    AzureADJoinStatusResponseModel:
      description: Azure AD join status object.
      properties:
        AzureADJoinedMode:
          allOf:
          - $ref: '#/components/schemas/AzureAdJoinedMode'
          description: Azure AD join mode.
          type: object
        DomainJoinStatus:
          allOf:
          - $ref: '#/components/schemas/DomainJoinStatus'
          description: "Device domain join status like domain joined, workgroup joined\
            \ or not joined."
          type: object
      title: AzureADJoinStatusResponseModel
      type: object
    AzureAdJoinType:
      description: Azure AD join type for machines
      enum:
      - Unknown
      - None
      - Hybrid
      - Pure
      title: AzureAdJoinType
      type: string
      x-enumNames:
      - Unknown
      - None
      - Hybrid
      - Pure
    AzureADSecurityGroupResponseModel:
      description: The universal Azure AD security group object.
      example:
        Type: Type
        ObjectId: ObjectId
        MembershipRule: MembershipRule
        Name: Name
      properties:
        ObjectId:
          description: The objectId of SecurityGroup
          type: string
        Name:
          description: The Name of AzureAdSecurityGroup
          type: string
        Type:
          description: The Type of AzureAdSecurityGroup
          type: string
        MembershipRule:
          description: The MembershipRule of AzureAdSecurityGroup
          type: string
      title: AzureADSecurityGroupResponseModel
      type: object
    AzureADSecurityGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfAzureADSecurityGroupResponseModel'
      - description: Response object for collections of IdentityDirectoryResponseModel.
        type: object
      title: AzureADSecurityGroupResponseModelCollection
    AzureEnvironment:
      description: Azure environments
      enum:
      - Custom
      - AzureCloud
      - AzureChinaCloud
      - AzureUSGovernment
      - AzureGermanCloud
      title: AzureEnvironment
      type: string
      x-enumNames:
      - Custom
      - AzureCloud
      - AzureChinaCloud
      - AzureUSGovernment
      - AzureGermanCloud
    BackupDoBackupResponseModel:
      description: Do backup response model
      example:
        ExecutionId: ExecutionId
        Result: null
      properties:
        ExecutionId:
          description: "Backup Execution Id: GUID"
          minLength: 1
          type: string
        Result:
          $ref: '#/components/schemas/BackupRestoreActionStartStatus'
      required:
      - ExecutionId
      - Result
      title: BackupDoBackupResponseModel
      type: object
    BackupMembersResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfString'
      - description: Backup response model collection
        type: object
      title: BackupMembersResponseModelCollection
    BackupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfBackupRestoreBackupResponseModel'
      - description: Backup response model collection
        type: object
      title: BackupResponseModelCollection
    BackupRestoreActions:
      description: ""
      enum:
      - Backup
      - Restore
      - PinBackup
      - UnpinBackup
      - DownloadBackup
      - UploadBackup
      - DeleteBackup
      - DeleteSchedule
      - CreateSchedule
      - EditSchedule
      - GetMembersInFile
      - Undefined
      title: BackupRestoreActions
      type: string
      x-enumNames:
      - Backup
      - Restore
      - PinBackup
      - UnpinBackup
      - DownloadBackup
      - UploadBackup
      - DeleteBackup
      - DeleteSchedule
      - CreateSchedule
      - EditSchedule
      - GetMembersInFile
      - Undefined
    BackupRestoreActionStartStatus:
      description: Action start status
      enum:
      - Failed
      - Success
      - ExistingActionInProgress
      title: BackupRestoreActionStartStatus
      type: string
      x-enumNames:
      - Failed
      - Success
      - ExistingActionInProgress
    BackupRestoreBackupResponseModel:
      properties:
        BackupName:
          description: Backup File name
          type: string
        Notes:
          description: Notes
          type: string
        Pinned:
          description: "Pinned = true, unpinned = false"
          type: boolean
        DateTime:
          description: Backup date and time
          format: date-time
          title: DateTime
          type: string
        HistoryUid:
          description: Hisotry Uid
          format: int32
          type: integer
        RelatedUid:
          description: Related history UID
          format: int32
          type: integer
        RelatedDate:
          description: Related history Date/Time
          format: date-time
          title: DateTime
          type: string
        RelatedIsCheckMode:
          description: Related Restore was run in check mode
          type: boolean
        Duration:
          description: "Duration in seconds\n            "
          format: int32
          type: integer
        AdministratorName:
          description: Administrator Name
          type: string
        Details:
          additionalProperties:
            type: string
          description: Details
          title: Dictionary`2
          type: object
      title: BackupRestoreBackupResponseModel
      type: object
    BackupRestoreDoBackupRequestModel:
      description: Do Backup Request
      example:
        Notes: Notes
        ScheduleName: ScheduleName
      properties:
        Notes:
          description: "Notes\n            "
          type: string
        ScheduleName:
          description: Schedule Name; for logging purposes only
          type: string
      title: BackupRestoreDoBackupRequestModel
      type: object
    BackupRestoreGetComponentMemberRequestModel:
      example:
        Filters: Filters
        Component: "{}"
      properties:
        Component:
          allOf:
          - $ref: '#/components/schemas/BckRstrAutoConfigComponents'
          description: "Component in backup to restore\n            "
          type: object
        Filters:
          description: Comma delimted component member names to restore; may include
            wildcards
          type: string
      required:
      - Component
      title: BackupRestoreGetComponentMemberRequestModel
      type: object
    BackupRestoreHistoryInformation:
      description: Single history for backup / restore operations
      example:
        Action: "{}"
        Pinned: true
        DateTime: 2000-01-23T04:56:07.000+00:00
        RestoreDetails:
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        RelatedIsCheckMode: true
        Filters: Filters
        WithPrerequisites: true
        BackupDetails:
          key: BackupDetails
        CheckMode: true
        RestoreType: "{}"
        Component: "{}"
        Notes: Notes
        RelatedDate: 2000-01-23T04:56:07.000+00:00
        HistoryId: HistoryId
        Duration: 6
        Successful: true
        ScheduleName: ScheduleName
        BackupName: BackupName
        Uid: 0
        RelatedUid: 5
        SimpleResults:
        - SimpleResults
        - SimpleResults
        BackupFileSpec: BackupFileSpec
        AdministratorName: AdministratorName
        TimeZoneOffset: 1
        ExecutionId: ExecutionId
      properties:
        Uid:
          description: "Unique Identifier\n            "
          format: int32
          type: integer
        Action:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreActions'
          description: "Action such as backup, restore etc...\n            "
          type: object
        HistoryId:
          description: History entry ID
          minLength: 1
          type: string
        Successful:
          description: "True if successful, false if not successful"
          type: boolean
        Duration:
          description: Duration in seconds
          format: int32
          type: integer
        TimeZoneOffset:
          description: TimeZone offset from UTC
          format: int32
          type: integer
        DateTime:
          description: Date and time the action was started
          format: date-time
          title: DateTime
          type: string
        Notes:
          description: Notes about the action
          type: string
        RestoreType:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreRestoreTypes'
          description: Restore type (applicable only when the action was restore)
          type: object
        Filters:
          description: Filters used (applicable only when the action was restore)
          type: string
        WithPrerequisites:
          description: With Prerequisites (applicable only when the action was restore)
          type: boolean
        CheckMode:
          description: Check mode (applicable only when the action was restore)
          type: boolean
        ScheduleName:
          description: Name of schedule to perform backup (applicable only when the
            action was backup)
          type: string
        Component:
          allOf:
          - $ref: '#/components/schemas/BckRstrAutoConfigComponents'
          description: Component being restored (applicable only when the action was
            restore)
          type: object
        ExecutionId:
          description: Execution Id
          type: string
        BackupName:
          description: Backup name
          type: string
        BackupFileSpec:
          description: Backup File Specification
          type: string
        RelatedUid:
          description: Related History UID for restore with checkmode set to true
          format: int32
          type: integer
        RelatedDate:
          description: Related History date for restore with checkmode set to true
          format: date-time
          title: DateTime
          type: string
        RelatedIsCheckMode:
          description: Related is run as check mode
          type: boolean
        Pinned:
          description: Backup is pinned
          type: boolean
        AdministratorName:
          description: Administrator Name
          type: string
        BackupDetails:
          additionalProperties:
            type: string
          description: Backup Status Details
          title: Dictionary`2
          type: object
        RestoreDetails:
          description: Restore Status Details
          items:
            $ref: '#/components/schemas/BackupRestoreRestoreSingleMemberModel'
          title: List`1
          type: array
        SimpleResults:
          description: Simple Results (such as Get backed up member names)
          items:
            type: string
          title: List`1
          type: array
      required:
      - Action
      - HistoryId
      - Successful
      title: BackupRestoreHistoryInformation
      type: object
    BackupRestoreHistoryResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfBackupRestoreHistoryInformation'
      - description: Backup / Restore History response model collection
        type: object
      title: BackupRestoreHistoryResponseModelCollection
    BackupRestoreInformationRequestModel:
      description: Request object to set Backup/Restore Information
      example:
        TimeZone: TimeZone
        Initialized: true
        TimeZoneOffset: 0
      properties:
        TimeZone:
          description: Set customer timezone to schedule backups in
          minLength: 1
          type: string
        TimeZoneOffset:
          description: Customer's selected time zone offset in seconds
          format: int32
          type: integer
        Initialized:
          description: |-
            When true, indicates the customer has gone through the WebStudio initialization process
            When false, WebStudio will walk the customer through the initialization process
            to select the timezone and create the first backup schedule
          type: boolean
      required:
      - Initialized
      - TimeZone
      - TimeZoneOffset
      title: BackupRestoreInformationRequestModel
      type: object
    BackupRestoreInformationResponseModel:
      description: Response object for a backups.
      example:
        MaxPinnedBackups: 1
        TimeZone: TimeZone
        Initialized: true
        MaxSavedBackups: 5
        TotalBackupDurationSamples: 6
        StaleStatusTimeoutInSeconds: 2
        AverageBackupDurationInSeconds: 0
        TimeZoneOffset: 5
      properties:
        AverageBackupDurationInSeconds:
          description: |-
            Average backup time in seconds used to control
            the WebStudio backup progress bar
          format: int32
          type: integer
        TotalBackupDurationSamples:
          description: Total backup duration samples
          format: int32
          type: integer
        MaxPinnedBackups:
          description: |-
            Max pinned backups. Pinned backups cannot be deleted; tjey must first
            be unpinned and then they can be manually deleted or automatically
            deleted if old and a new backup is done and the max backups exceeded
          format: int32
          type: integer
        MaxSavedBackups:
          description: |-
            Max saved backups. Unpinned backups will be removed when a new backup is completed
            and the number of saved backups exceeds this value
          format: int32
          type: integer
        TimeZone:
          description: Customer's selected time zone
          minLength: 1
          type: string
        TimeZoneOffset:
          description: Customer's selected time zone offset in seconds
          format: int32
          type: integer
        Initialized:
          description: "Backup process initialized when true, uninitilized when false\n\
            When true, tells WebStudio to prompt the admin to select the time zone\
            \ to \nschedule backups in and create the first backups schedule"
          type: boolean
        StaleStatusTimeoutInSeconds:
          description: Stale status timeout in seconds; when current status is to
            old to be balid
          format: int32
          type: integer
      required:
      - AverageBackupDurationInSeconds
      - Initialized
      - MaxPinnedBackups
      - MaxSavedBackups
      - TimeZone
      - TimeZoneOffset
      - TotalBackupDurationSamples
      title: BackupRestoreInformationResponseModel
      type: object
    BackupRestorePlaybookActionState:
      description: Backup / Restore Restore Progress
      enum:
      - Unknown
      - Reading
      - ReadingCloud
      - Evaluating
      - PrereqEvaluating
      - AddingUpdatingDeleting
      - Adding
      - Updating
      - Deleting
      - ReReading
      - Verifying
      - Verified
      - VerifyFailed
      - Complete
      - Writing
      - Failed
      - Skipping
      - SkipDueToMissingInfo
      title: BackupRestorePlaybookActionState
      type: string
      x-enumNames:
      - Unknown
      - Reading
      - ReadingCloud
      - Evaluating
      - PrereqEvaluating
      - AddingUpdatingDeleting
      - Adding
      - Updating
      - Deleting
      - ReReading
      - Verifying
      - Verified
      - VerifyFailed
      - Complete
      - Writing
      - Failed
      - Skipping
      - SkipDueToMissingInfo
    BackupRestoreRemoveHistoryRequestModel:
      description: Remove History records within date range
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDate:
          description: Start date to remove history
          format: date-time
          title: DateTime
          type: string
        EndDate:
          description: End date to remove history
          format: date-time
          title: DateTime
          type: string
      required:
      - EndDate
      - StartDate
      title: BackupRestoreRemoveHistoryRequestModel
      type: object
    BackupRestoreRestoreBackupRequestModel:
      description: Restore Backup Request Model
      example:
        HistoryUid: 0
        WithPrereq: true
        Filters: Filters
        Checkmode: true
        Component: "{}"
        RestoreType: "{}"
        Notes: Notes
        BackupName: BackupName
      properties:
        BackupName:
          description: 'Name of backup to restore '
          minLength: 1
          type: string
        HistoryUid:
          description: Hisotry Uid
          format: int32
          type: integer
        Component:
          allOf:
          - $ref: '#/components/schemas/BckRstrAutoConfigComponents'
          description: "Component in backup to restore\n            "
          type: object
        Filters:
          description: Comma delimted component member names to restore; may include
            wildcards
          type: string
        WithPrereq:
          description: Restore component prerequisites as necessary
          type: boolean
        Checkmode:
          description: "Determine what should be restored but to not do the actual\
            \ restore; report only\n            "
          type: boolean
        Notes:
          description: Admin entered notes
          type: string
        RestoreType:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreRestoreTypes'
          description: "Restore Type\n            "
          type: object
      required:
      - BackupName
      - Component
      - HistoryUid
      title: BackupRestoreRestoreBackupRequestModel
      type: object
    BackupRestoreRestoreBackupResponseModel:
      description: Restore Backup response model
      example:
        ExecutionId: ExecutionId
        Result: null
      properties:
        ExecutionId:
          description: "Restore Execution Id: GUID"
          minLength: 1
          type: string
        Result:
          $ref: '#/components/schemas/BackupRestoreActionStartStatus'
      required:
      - ExecutionId
      - Result
      title: BackupRestoreRestoreBackupResponseModel
      type: object
    BackupRestoreRestoreSingleMemberModel:
      example:
        Details: Details
        PlaybookActionState: "{}"
        MemberCount: 5
        CurrentMemberIndex: 2
        ComponentName: ComponentName
        MemberName: MemberName
        CheckMode: true
        DateTime: 2000-01-23T04:56:07.000+00:00
        Result: true
        TransactionId: TransactionId
      properties:
        ComponentName:
          description: Component Name
          type: string
        MemberName:
          description: Member Name
          type: string
        PlaybookActionState:
          allOf:
          - $ref: '#/components/schemas/BackupRestorePlaybookActionState'
          description: Playbook Action
          type: object
        Result:
          description: Result
          type: boolean
        Details:
          description: Details or Error Message
          type: string
        TransactionId:
          description: Transaction Id
          type: string
        DateTime:
          description: Date Time stamps
          format: date-time
          title: DateTime
          type: string
        MemberCount:
          description: Member Count
          format: int32
          type: integer
        CurrentMemberIndex:
          format: int32
          type: integer
        CheckMode:
          description: Check Mode
          type: boolean
      title: BackupRestoreRestoreSingleMemberModel
      type: object
    BackupRestoreRestoreTypes:
      description: 'Restore Types '
      enum:
      - NotDefined
      - MissingOnly
      - MissingUpdateExisting
      - MissingUpdateExistingRemoveNew
      title: BackupRestoreRestoreTypes
      type: string
      x-enumNames:
      - NotDefined
      - MissingOnly
      - MissingUpdateExisting
      - MissingUpdateExistingRemoveNew
    BackupRestoreScheduleDays:
      description: Backup Restore Schedule Days
      enum:
      - NotDefined
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      title: BackupRestoreScheduleDays
      type: string
      x-enumFlags: true
      x-enumNames:
      - NotDefined
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
    BackupRestoreScheduleFrequency:
      description: Backup Restore Schedule Frequency
      enum:
      - Daily
      - Weekly
      - Monthly
      - Once
      - NotDefined
      title: BackupRestoreScheduleFrequency
      type: string
      x-enumNames:
      - Daily
      - Weekly
      - Monthly
      - Once
      - NotDefined
    BackupRestoreScheduleModel:
      description: Backup / Restore Schedule Model
      example:
        DaysInWeek:
        - null
        - null
        Description: Description
        StartTime: StartTime
        Enabled: true
        Name: Name
        FrequencyFactor: 6
        StartDate: StartDate
        Uid: 0
        TimeZone: TimeZone
        DayInMonth: "{}"
        Frequency: "{}"
        WeekInMonth: "{}"
        Day: "{}"
      properties:
        Name:
          description: Name
          type: string
        Uid:
          description: Id
          format: int32
          type: integer
        Day:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Day
          type: object
        DaysInWeek:
          description: Days in Week
          items:
            $ref: '#/components/schemas/BackupRestoreScheduleDays'
          title: "BackupRestoreScheduleDays[]"
          type: array
        DayInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Days in Month
          type: object
        WeekInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleWeeks'
          description: Weeks in Month
          type: object
        StartDate:
          description: Start Date
          type: string
        FrequencyFactor:
          description: Frequency Factor
          format: int32
          type: integer
        Description:
          description: Description
          type: string
        Enabled:
          description: "Enabled\n            "
          type: boolean
        Frequency:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleFrequency'
          description: "Frequency\n            "
          type: object
        StartTime:
          description: Start Time
          type: string
        TimeZone:
          description: "Time Zone\n            "
          type: string
      title: BackupRestoreScheduleModel
      type: object
    BackupRestoreScheduleModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfBackupRestoreScheduleModel'
      - description: Response object for collections of CatalogSearchResponseModel.
        type: object
      title: BackupRestoreScheduleModelCollection
    BackupRestoreScheduleRequestModel:
      example:
        StartDate: StartDate
        DaysInWeek:
        - null
        - null
        Description: Description
        DayInMonth: "{}"
        StartTime: StartTime
        Enabled: true
        Frequency: "{}"
        WeekInMonth: "{}"
        Day: "{}"
        Name: Name
        FrequencyFactor: 0
      properties:
        Name:
          description: Name
          minLength: 1
          type: string
        Day:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Day
          type: object
        DaysInWeek:
          description: Days in Week
          items:
            $ref: '#/components/schemas/BackupRestoreScheduleDays'
          title: "BackupRestoreScheduleDays[]"
          type: array
        DayInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Days in Month
          type: object
        WeekInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleWeeks'
          description: Weeks in Month
          type: object
        StartDate:
          description: Start Date
          minLength: 1
          type: string
        FrequencyFactor:
          description: Frequency Factor
          format: int32
          type: integer
        Description:
          description: Description
          type: string
        Enabled:
          description: "Enabled\n            "
          type: boolean
        Frequency:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleFrequency'
          description: "Frequency\n            "
          type: object
        StartTime:
          description: Start Time
          minLength: 1
          type: string
      required:
      - Enabled
      - Frequency
      - FrequencyFactor
      - Name
      - StartDate
      - StartTime
      title: BackupRestoreScheduleRequestModel
      type: object
    BackupRestoreScheduleResponseModel:
      example:
        DaysInWeek:
        - null
        - null
        Description: Description
        StartTime: StartTime
        Enabled: true
        Name: Name
        FrequencyFactor: 6
        StartDate: StartDate
        Uid: 0
        TimeZone: TimeZone
        DayInMonth: "{}"
        Frequency: "{}"
        WeekInMonth: "{}"
        Day: "{}"
      properties:
        Name:
          description: Name
          type: string
        Uid:
          description: Id
          format: int32
          type: integer
        Day:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Day
          type: object
        DaysInWeek:
          description: Days in Week
          items:
            $ref: '#/components/schemas/BackupRestoreScheduleDays'
          title: "BackupRestoreScheduleDays[]"
          type: array
        DayInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleDays'
          description: Days in Month
          type: object
        WeekInMonth:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleWeeks'
          description: Weeks in Month
          type: object
        StartDate:
          description: Start Date
          type: string
        FrequencyFactor:
          description: Frequency Factor
          format: int32
          type: integer
        Description:
          description: Description
          type: string
        Enabled:
          description: "Enabled\n            "
          type: boolean
        Frequency:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreScheduleFrequency'
          description: "Frequency\n            "
          type: object
        StartTime:
          description: Start Time
          type: string
        TimeZone:
          description: "Time Zone\n            "
          type: string
      title: BackupRestoreScheduleResponseModel
      type: object
    BackupRestoreScheduleWeeks:
      description: "Backup Restore Schedule Weeks\n            "
      enum:
      - NotDefined
      - First
      - Second
      - Third
      - Fourth
      - Last
      title: BackupRestoreScheduleWeeks
      type: string
      x-enumNames:
      - NotDefined
      - First
      - Second
      - Third
      - Fourth
      - Last
    BackupRestoreStatus:
      description: Backup / Restore Status
      enum:
      - Unknown
      - Pending
      - InProgress
      - Complete
      - CompleteWithWarning
      - Failed
      - Canceled
      - NonTerminatingError
      - Stalled
      title: BackupRestoreStatus
      type: string
      x-enumNames:
      - Unknown
      - Pending
      - InProgress
      - Complete
      - CompleteWithWarning
      - Failed
      - Canceled
      - NonTerminatingError
      - Stalled
    BackupRestoreStatusRequestModel:
      example:
        Status: "{}"
        CurrentMemberName: CurrentMemberName
        Action: "{}"
        ComponentProgress: "{}"
        StartTime: 2000-01-23T04:56:07.000+00:00
        MemberCount: 6
        Duration: 0
        RestoreProgress: null
        BackupName: BackupName
        ScheduleName: ScheduleName
        ActivityCount: 1
        CurrentComponent: CurrentComponent
        RestoreDetails:
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        BackupDetails:
          key: BackupDetails
        SimpleResults:
        - SimpleResults
        - SimpleResults
        CurrentTime: 2000-01-23T04:56:07.000+00:00
        CheckMode: true
        AdministratrName: AdministratrName
        ExecutionId: ExecutionId
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreActions'
          description: Backup / Restore Action
          type: object
        ExecutionId:
          description: Execution Id
          minLength: 1
          type: string
        Duration:
          description: Current duration in seconds
          format: int32
          type: integer
        Status:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreStatus'
          description: Backup / Restore Status
          type: object
        BackupName:
          description: Backup Name
          type: string
        ScheduleName:
          description: Schedule Name
          type: string
        MemberCount:
          description: Member Count
          format: int32
          type: integer
        StartTime:
          description: "Action Start UTC Time\n            "
          format: date-time
          title: DateTime
          type: string
        CurrentTime:
          description: Action Current UTC Time
          format: date-time
          title: DateTime
          type: string
        RestoreProgress:
          $ref: '#/components/schemas/BackupRestoreStatusRequestModel_RestoreProgress'
        ActivityCount:
          description: Activity count for stall testing
          format: int32
          type: integer
        CurrentComponent:
          description: Current component being restored
          type: string
        CurrentMemberName:
          description: Current component member being restored
          type: string
        ComponentProgress:
          allOf:
          - $ref: '#/components/schemas/BackupRestorePlaybookActionState'
          description: "Current restoring component's state\n            "
          type: object
        CheckMode:
          description: Check Mode
          type: boolean
        AdministratrName:
          description: AdministratorName
          type: string
        BackupDetails:
          additionalProperties:
            type: string
          description: Backup Status Details
          title: Dictionary`2
          type: object
        RestoreDetails:
          description: Restore Status Details
          items:
            $ref: '#/components/schemas/BackupRestoreRestoreSingleMemberModel'
          title: List`1
          type: array
        SimpleResults:
          description: Simple Results (such as Get backed up member names)
          items:
            type: string
          title: List`1
          type: array
      required:
      - Action
      - CurrentTime
      - Duration
      - ExecutionId
      - StartTime
      - Status
      title: BackupRestoreStatusRequestModel
      type: object
    BackupRestoreStatusResponseModel:
      example:
        Status: "{}"
        CurrentMemberName: CurrentMemberName
        Action: "{}"
        ComponentProgress: "{}"
        StartTime: 2000-01-23T04:56:07.000+00:00
        MemberCount: 1
        Duration: 0
        BackupName: BackupName
        ScheduleName: ScheduleName
        ActivityCount: 6
        CurrentComponent: "{}"
        RestoreDetails:
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        - Details: Details
          PlaybookActionState: "{}"
          MemberCount: 5
          CurrentMemberIndex: 2
          ComponentName: ComponentName
          MemberName: MemberName
          CheckMode: true
          DateTime: 2000-01-23T04:56:07.000+00:00
          Result: true
          TransactionId: TransactionId
        ContinueAction: true
        Filters: Filters
        BackupDetails:
          key: BackupDetails
        SimpleResults:
        - SimpleResults
        - SimpleResults
        CurrentTime: 2000-01-23T04:56:07.000+00:00
        CheckMode: true
        Notes: Notes
        AdministratrName: AdministratrName
        ExecutionId: ExecutionId
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreActions'
          description: Current Action in progress
          type: object
        ExecutionId:
          description: Execution ID of operation
          minLength: 1
          type: string
        Duration:
          description: Current operational duration in seconds
          format: int32
          type: integer
        Status:
          allOf:
          - $ref: '#/components/schemas/BackupRestoreStatus'
          description: Status of operation
          type: object
        BackupName:
          description: Backup name being created by backup operation or backup name
            being restored from
          type: string
        ScheduleName:
          description: Schedule Name
          type: string
        Notes:
          description: Backup name being created by backup operation or backup name
            being restored from
          type: string
        ContinueAction:
          description: "Continue Action: True = Continue Action, False = Stop action"
          type: boolean
        StartTime:
          description: "Action Start UTC Time\n            "
          format: date-time
          title: DateTime
          type: string
        CurrentTime:
          description: Action Current UTC Time
          format: date-time
          title: DateTime
          type: string
        ActivityCount:
          description: Activity count for stall testing
          format: int32
          type: integer
        CurrentComponent:
          allOf:
          - $ref: '#/components/schemas/BckRstrAutoConfigComponents'
          description: Current component being restored
          type: object
        CurrentMemberName:
          description: Current component member being restored
          type: string
        MemberCount:
          description: Member Count
          format: int32
          type: integer
        ComponentProgress:
          allOf:
          - $ref: '#/components/schemas/BackupRestorePlaybookActionState'
          description: "Current restoring component's state\n            "
          type: object
        CheckMode:
          description: Check Mode restore from backup
          type: boolean
        Filters:
          description: Filters used by restore from backup
          type: string
        AdministratrName:
          description: AdministratorName
          type: string
        BackupDetails:
          additionalProperties:
            type: string
          description: Backup Status Details
          title: Dictionary`2
          type: object
        RestoreDetails:
          description: Restore Status Details
          items:
            $ref: '#/components/schemas/BackupRestoreRestoreSingleMemberModel'
          title: List`1
          type: array
        SimpleResults:
          description: Simple Results (such as Get backed up member names)
          items:
            type: string
          title: List`1
          type: array
      required:
      - Action
      - Duration
      - ExecutionId
      - Status
      title: BackupRestoreStatusResponseModel
      type: object
    BackupRestoreUpdateNotesRequestModel:
      description: Backup/Restore Update Notes in History Table
      example:
        Notes: Notes
      properties:
        Notes:
          description: Notes to update
          type: string
      title: BackupRestoreUpdateNotesRequestModel
      type: object
    BatchRequestItemModel:
      description: Request object for a single item in a batch request.
      example:
        Reference: Reference
        Headers:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        RelativeUrl: RelativeUrl
        Method: GET
        Body: Body
      properties:
        Reference:
          description: "Reference.  Required, and must be unique within all items\
            \ in a single batch request."
          maxLength: 64
          minLength: 1
          pattern: "^[-_0-9a-zA-Z]*$"
          type: string
        Method:
          default: GET
          description: "HTTP method of the request endpoint.  (GET, HEAD, PUT, PATCH,\
            \ POST, DELETE)"
          type: string
        RelativeUrl:
          description: |-
            Relative URL of the request endpoint vs. the site root.
            Must start with the API version i.e. `"v1/{customerid}/{siteid}/..."`
          minLength: 1
          type: string
        Headers:
          description: List of request headers.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Body:
          description: |-
            Request body.  Optional for PUT, PATCH, and POST.
            Cannot be specified for GET, HEAD, and DELETE.
          type: string
      required:
      - Reference
      - RelativeUrl
      title: BatchRequestItemModel
      type: object
    BatchRequestModel:
      description: Request object for a list of items to execute in a batch request.
      example:
        Items:
        - Reference: Reference
          Headers:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          RelativeUrl: RelativeUrl
          Method: GET
          Body: Body
        - Reference: Reference
          Headers:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          RelativeUrl: RelativeUrl
          Method: GET
          Body: Body
      properties:
        Items:
          description: List of batch request items.
          items:
            $ref: '#/components/schemas/BatchRequestItemModel'
          title: "BatchRequestItemModel[]"
          type: array
      required:
      - Items
      title: BatchRequestModel
      type: object
    BatchResponseItemModel:
      description: Response object for a single item in a batch request.
      example:
        Reference: Reference
        Headers:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Code: 0
        Body: Body
      properties:
        Reference:
          description: |-
            Reference that allows connecting the response item
            to the corresponding request item.
          minLength: 1
          type: string
        Code:
          description: HTTP status code as a result of the request.
          format: int32
          type: integer
        Headers:
          description: Response headers.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Body:
          description: "Response body, if one was present."
          type: string
      required:
      - Code
      - Reference
      title: BatchResponseItemModel
      type: object
    BatchResponseModel:
      description: Response object for a batch request.
      example:
        Items:
        - Reference: Reference
          Headers:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          Code: 0
          Body: Body
        - Reference: Reference
          Headers:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          Code: 0
          Body: Body
      properties:
        Items:
          description: List of batch item responses.
          items:
            $ref: '#/components/schemas/BatchResponseItemModel'
          title: "BatchResponseItemModel[]"
          type: array
      required:
      - Items
      title: BatchResponseModel
      type: object
    BckRstrAutoConfigComponents:
      description: Backup / Restore component IDs
      enum:
      - Tags
      - AdminScopes
      - AdminRoles
      - HostConnections
      - Icons
      - AdminFolders
      - MachineCatalogs
      - StoreFronts
      - DeliveryGroups
      - ApplicationGroups
      - ApplicationFolders
      - Applications
      - AppVServers
      - AppLibPackageDiscovery
      - AppVIsolationGroups
      - GroupPolicies
      - UserZonePreferences
      - SiteData
      - All
      - Multiple
      - Undefined
      title: BckRstrAutoConfigComponents
      type: string
      x-enumNames:
      - Tags
      - AdminScopes
      - AdminRoles
      - HostConnections
      - Icons
      - AdminFolders
      - MachineCatalogs
      - StoreFronts
      - DeliveryGroups
      - ApplicationGroups
      - ApplicationFolders
      - Applications
      - AppVServers
      - AppLibPackageDiscovery
      - AppVIsolationGroups
      - GroupPolicies
      - UserZonePreferences
      - SiteData
      - All
      - Multiple
      - Undefined
    CasEventRequestModel:
      description: Request model for sending Cas event.
      example:
        EventType: EventType
        Payloads:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        EventType:
          description: Cas Event Type Header
          minLength: 1
          type: string
        Payloads:
          description: "Information that need to send to cas, which will shown in\
            \ cas as payloads."
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - EventType
      title: CasEventRequestModel
      type: object
    CatalogNameCheckRequestModel:
      description: Request Model for Checking Catalog Name with Admin Folder
      example:
        Name: Name
      properties:
        Name:
          description: Catalog Name with Admin Folder
          type: string
      title: CatalogNameCheckRequestModel
      type: object
    CatalogSearchFilterGroupRequestModel:
      description: Advanced search filter group for applications
      example:
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        SearchFilterGroupType: "{}"
        SearchFilterGroups:
        - null
        - null
        SearchFilterGroupsType: "{}"
      properties:
        SearchFilterGroupType:
          allOf:
          - $ref: '#/components/schemas/CatalogSearchFilterGroupType'
          description: The type of search filter group
          type: object
        SearchFilters:
          description: The search filters in search filter group
          items:
            $ref: '#/components/schemas/CatalogSearchFilterRequestModel'
          title: "CatalogSearchFilterRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/CatalogSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
        SearchFilterGroups:
          description: The search filter group in search filter groups
          items:
            $ref: '#/components/schemas/CatalogSearchFilterGroupRequestModel'
          title: "CatalogSearchFilterGroupRequestModel[]"
          type: array
      title: CatalogSearchFilterGroupRequestModel
      type: object
    CatalogSearchFilterGroupsType:
      description: The search filter groups type
      enum:
      - Or
      - And
      title: CatalogSearchFilterGroupsType
      type: string
      x-enumNames:
      - Or
      - And
    CatalogSearchFilterGroupType:
      description: The search filter group type
      enum:
      - Or
      - And
      title: CatalogSearchFilterGroupType
      type: string
      x-enumNames:
      - Or
      - And
    CatalogSearchFilterRequestModel:
      description: Advanced search filter for machine catalogs.
      example:
        Operator: "{}"
        Value: Value
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/CatalogSearchProperty'
          description: Property to filter on.
          type: object
        Value:
          description: Value to match.
          type: string
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchOperator'
          description: |-
            The comparison operator to use when determining
            if an item matches the filter.
          type: object
      required:
      - Operator
      - Property
      title: CatalogSearchFilterRequestModel
      type: object
    CatalogSearchProperty:
      description: Machine catalog properties can be used for advanced catalog searches.
      enum:
      - Name
      - FullName
      - Uid
      - AllocationType
      - AssignedCount
      - AvailableCount
      - Description
      - IsRemotePC
      - MachinesArePhysical
      - ProvisioningType
      - PvsAddress
      - PvsDomain
      - SessionSupport
      - UnassignedCount
      - UsedCount
      title: CatalogSearchProperty
      type: string
      x-enumNames:
      - Name
      - FullName
      - Uid
      - AllocationType
      - AssignedCount
      - AvailableCount
      - Description
      - IsRemotePC
      - MachinesArePhysical
      - ProvisioningType
      - PvsAddress
      - PvsDomain
      - SessionSupport
      - UnassignedCount
      - UsedCount
    CatalogSearchRequestModel:
      description: Request model for defining advanced machine catalog search criteria.
      example:
        SortCriteria: null
        AdminFolder: AdminFolder
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        BasicSearchString: BasicSearchString
        SearchFilterGroups:
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        SearchFilterGroupsType: "{}"
        IncludeSubFolders: true
      properties:
        AdminFolder:
          description: Admin folder in which to search for the machine catalog.
          type: string
        IncludeSubFolders:
          default: true
          description: |-
            Whether to include subfolders of the
            AdminFolder in the search for the
            machine catalogs.
          type: boolean
        BasicSearchString:
          description: |-
            Basic search string. Specify a string which will match
            if contained within some string property of the catalog.
          type: string
        SearchFilters:
          description: List of advanced search filters.
          items:
            $ref: '#/components/schemas/CatalogSearchFilterRequestModel'
          title: "CatalogSearchFilterRequestModel[]"
          type: array
        SortCriteria:
          $ref: '#/components/schemas/CatalogSearchRequestModel_SortCriteria'
        SearchFilterGroups:
          description: List of advanced search filter groups.
          items:
            $ref: '#/components/schemas/CatalogSearchFilterGroupRequestModel'
          title: "CatalogSearchFilterGroupRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/CatalogSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
      title: CatalogSearchRequestModel
      type: object
    CatalogSearchResponseModel:
      description: Catalog Search result model
      properties:
        Name:
          description: |-
            Simple administrative name of catalog within parent admin folder (if any). This
            property is not guaranteed unique across all catalogs.
          type: string
        FullName:
          description: Unique administrative name of catalog.
          type: string
        Id:
          description: Id of the machine catalog.
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        AllocationType:
          allOf:
          - $ref: '#/components/schemas/AllocationType'
          description: Denotes how the machines in the catalog are allocated to a
            user.
          type: object
        HypervisorPluginResponse:
          $ref: '#/components/schemas/CatalogSearchResponseModel_HypervisorPluginResponse'
        AssignedCount:
          description: The number of assigned machines (machines that have been assigned
            to a user/users or a client name/address).
          format: int32
          type: integer
        AvailableCount:
          description: The number of available machines (those not in any delivery
            group).
          format: int32
          type: integer
        Description:
          description: Description of the machine catalog.
          type: string
        HypervisorConnectionUid:
          description: |-
            The Uid of the hypervisor connection that is associated with the machines in the catalog.
            This property only applies to MCS provisioned catalogs.
            For other provisioning types machines can be from one or more different hypervisor connections.
          format: int32
          type: integer
        IsPowerManaged:
          description: Indicates whether the machines in the catalog are power-managed.
          type: boolean
        IsRemotePC:
          description: |-
            Indicates whether or not the catalog is a RemotePC catalog. Remote PC catalogs
            automatically configure appropriate machines without the need for manual
            configuration.
            CHANGE: was
            public bool RemotePC { get; set; }
          type: boolean
        MachinesArePhysical:
          description: Indicates whether or not machines in the machine catalog are
            Physical.
          type: boolean
        ProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ProvisioningType'
          description: Specifies how the machines are provisioned in the catalog.
          type: object
        PvsAddress:
          description: |-
            IP address of the PVS server to be used.
            This only applies if the ProvisioningType is
            .
          type: string
        PvsDomain:
          description: The domain of the PVS server to be used.
          type: string
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: Specifies the session support of the machines in the machine
            catalog.
          type: object
        UnassignedCount:
          description: The number of unassigned machines (machines not assigned to
            users).
          format: int32
          type: integer
        UsedCount:
          description: The number of machines in the catalog that are in a delivery
            group.
          format: int32
          type: integer
        AdminFolder:
          $ref: '#/components/schemas/CatalogSearchResponseModel_AdminFolder'
      title: CatalogSearchResponseModel
      type: object
    CatalogSearchResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfCatalogSearchResponseModel'
      - description: Response object for collections of CatalogSearchResponseModel.
        type: object
      title: CatalogSearchResponseModelCollection
    CatalogSortCriteriaRequestModel:
      description: Catalog sort criteria.
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/CatalogSearchProperty'
          description: Property to sort on.
          type: object
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/ListSortDirection'
          description: Direction to sort the property.
          type: object
      required:
      - Property
      - SortDirection
      title: CatalogSortCriteriaRequestModel
      type: object
    CloudHealthCheckStatus:
      description: ""
      enum:
      - Unknown
      - Ok
      - Fail
      - InvalidCommand
      title: CloudHealthCheckStatus
      type: string
      x-enumNames:
      - Unknown
      - Ok
      - Fail
      - InvalidCommand
    CollectionEnvelopeOfFilterDefinition:
      description: |-
        See: https://code.citrite.net/projects/APIPF/repos/api-guidelines/browse/rest/collections.md
        Response object for collections of items. Should be the same as TP\CollectionModel.cs. But that definition
        doesn't use camel casing.
      example:
        totalItems: 0
        items:
        - filterName: filterName
          isUserFilter: true
          isSingleton: true
          filterType: "{}"
          explanation: explanation
        - filterName: filterName
          isUserFilter: true
          isSingleton: true
          filterType: "{}"
          explanation: explanation
        continuationToken: continuationToken
      properties:
        items:
          description: List of items.
          items:
            $ref: '#/components/schemas/FilterDefinition'
          title: "FilterDefinition[]"
          type: array
        continuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete, and they should call the API again
            specifying the continuation token as a query parameter.
          type: string
        totalItems:
          description: |-
            Indicates the total number of items in the collection, which may be more than the number of items returned,
            if there is a ContinuationToken. Only returned in the response to $search APIs.
          format: int32
          type: integer
      title: CollectionEnvelope`1
      type: object
    CollectionEnvelopeOfFilterResponse:
      description: |-
        See: https://code.citrite.net/projects/APIPF/repos/api-guidelines/browse/rest/collections.md
        Response object for collections of items. Should be the same as TP\CollectionModel.cs. But that definition
        doesn't use camel casing.
      example:
        totalItems: 0
        items:
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterGuid: filterGuid
          filterType: filterType
          policyGuid: policyGuid
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterGuid: filterGuid
          filterType: filterType
          policyGuid: policyGuid
        continuationToken: continuationToken
      properties:
        items:
          description: List of items.
          items:
            $ref: '#/components/schemas/FilterResponse'
          title: "FilterResponse[]"
          type: array
        continuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete, and they should call the API again
            specifying the continuation token as a query parameter.
          type: string
        totalItems:
          description: |-
            Indicates the total number of items in the collection, which may be more than the number of items returned,
            if there is a ContinuationToken. Only returned in the response to $search APIs.
          format: int32
          type: integer
      title: CollectionEnvelope`1
      type: object
    CollectionEnvelopeOfPolicyResponse:
      description: |-
        See: https://code.citrite.net/projects/APIPF/repos/api-guidelines/browse/rest/collections.md
        Response object for collections of items. Should be the same as TP\CollectionModel.cs. But that definition
        doesn't use camel casing.
      example:
        totalItems: 6
        items:
        - settings:
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          policySetGuid: policySetGuid
          policyName: policyName
          isEnabled: true
          description: description
          filters:
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          priority: 0
          policyGuid: policyGuid
        - settings:
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          policySetGuid: policySetGuid
          policyName: policyName
          isEnabled: true
          description: description
          filters:
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          priority: 0
          policyGuid: policyGuid
        continuationToken: continuationToken
      properties:
        items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PolicyResponse'
          title: "PolicyResponse[]"
          type: array
        continuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete, and they should call the API again
            specifying the continuation token as a query parameter.
          type: string
        totalItems:
          description: |-
            Indicates the total number of items in the collection, which may be more than the number of items returned,
            if there is a ContinuationToken. Only returned in the response to $search APIs.
          format: int32
          type: integer
      title: CollectionEnvelope`1
      type: object
    CollectionEnvelopeOfPolicySetResponse:
      description: |-
        See: https://code.citrite.net/projects/APIPF/repos/api-guidelines/browse/rest/collections.md
        Response object for collections of items. Should be the same as TP\CollectionModel.cs. But that definition
        doesn't use camel casing.
      example:
        totalItems: 6
        items:
        - policySetGuid: policySetGuid
          policyCount: 0
          policySetType: "{}"
          name: name
          policies:
          - settings:
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            policySetGuid: policySetGuid
            policyName: policyName
            isEnabled: true
            description: description
            filters:
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            priority: 0
            policyGuid: policyGuid
          - settings:
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            policySetGuid: policySetGuid
            policyName: policyName
            isEnabled: true
            description: description
            filters:
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            priority: 0
            policyGuid: policyGuid
          description: description
          scopes:
          - scopes
          - scopes
        - policySetGuid: policySetGuid
          policyCount: 0
          policySetType: "{}"
          name: name
          policies:
          - settings:
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            policySetGuid: policySetGuid
            policyName: policyName
            isEnabled: true
            description: description
            filters:
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            priority: 0
            policyGuid: policyGuid
          - settings:
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            - settingValue: settingValue
              settingGuid: settingGuid
              useDefault: true
              policyGuid: policyGuid
              settingName: settingName
            policySetGuid: policySetGuid
            policyName: policyName
            isEnabled: true
            description: description
            filters:
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            - isAllowed: true
              filterData: filterData
              isEnabled: true
              filterGuid: filterGuid
              filterType: filterType
              policyGuid: policyGuid
            priority: 0
            policyGuid: policyGuid
          description: description
          scopes:
          - scopes
          - scopes
        continuationToken: continuationToken
      properties:
        items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PolicySetResponse'
          title: "PolicySetResponse[]"
          type: array
        continuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete, and they should call the API again
            specifying the continuation token as a query parameter.
          type: string
        totalItems:
          description: |-
            Indicates the total number of items in the collection, which may be more than the number of items returned,
            if there is a ContinuationToken. Only returned in the response to $search APIs.
          format: int32
          type: integer
      title: CollectionEnvelope`1
      type: object
    CollectionEnvelopeOfSettingResponse:
      description: |-
        See: https://code.citrite.net/projects/APIPF/repos/api-guidelines/browse/rest/collections.md
        Response object for collections of items. Should be the same as TP\CollectionModel.cs. But that definition
        doesn't use camel casing.
      example:
        totalItems: 0
        items:
        - settingValue: settingValue
          settingGuid: settingGuid
          useDefault: true
          policyGuid: policyGuid
          settingName: settingName
        - settingValue: settingValue
          settingGuid: settingGuid
          useDefault: true
          policyGuid: policyGuid
          settingName: settingName
        continuationToken: continuationToken
      properties:
        items:
          description: List of items.
          items:
            $ref: '#/components/schemas/SettingResponse'
          title: "SettingResponse[]"
          type: array
        continuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete, and they should call the API again
            specifying the continuation token as a query parameter.
          type: string
        totalItems:
          description: |-
            Indicates the total number of items in the collection, which may be more than the number of items returned,
            if there is a ContinuationToken. Only returned in the response to $search APIs.
          format: int32
          type: integer
      title: CollectionEnvelope`1
      type: object
    CollectionModelOfActionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ActionResponseModel'
          title: "ActionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAdminFolderResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AdminFolderResponseModel'
          title: "AdminFolderResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAdministratorResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AdministratorResponseModel'
          title: "AdministratorResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAdministratorRightResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AdministratorRightResponseModel'
          title: "AdministratorRightResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAdvancedAccessPolicyResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AdvancedAccessPolicyResponseModel'
          title: "AdvancedAccessPolicyResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppLibPackageDiscoveryProfileResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppLibPackageDiscoveryProfileResponseModel'
          title: "AppLibPackageDiscoveryProfileResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppLibPackageDiscoveryResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppLibPackageDiscoveryResponseModel'
          title: "AppLibPackageDiscoveryResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfApplicationDeliveryGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ApplicationDeliveryGroupResponseModel'
          title: "ApplicationDeliveryGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfApplicationFolderResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ApplicationFolderResponseModel'
          title: "ApplicationFolderResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfApplicationGroupDeliveryGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ApplicationGroupDeliveryGroupResponseModel'
          title: "ApplicationGroupDeliveryGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfApplicationGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ApplicationGroupResponseModel'
          title: "ApplicationGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfApplicationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ApplicationResponseModel'
          title: "ApplicationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppVApplicationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppVApplicationResponseModel'
          title: "AppVApplicationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppVIsolationGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppVIsolationGroupResponseModel'
          title: "AppVIsolationGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppVPackageResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppVPackageResponseModel'
          title: "AppVPackageResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAppVServerResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AppVServerResponseModel'
          title: "AppVServerResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfAzureADSecurityGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/AzureADSecurityGroupResponseModel'
          title: "AzureADSecurityGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfBackupRestoreBackupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/BackupRestoreBackupResponseModel'
          title: "BackupRestoreBackupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfBackupRestoreHistoryInformation:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/BackupRestoreHistoryInformation'
          title: "BackupRestoreHistoryInformation[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfBackupRestoreScheduleModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/BackupRestoreScheduleModel'
          title: "BackupRestoreScheduleModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfCatalogSearchResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/CatalogSearchResponseModel'
          title: "CatalogSearchResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfConfigurationSlotResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ConfigurationSlotResponseModel'
          title: "ConfigurationSlotResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDatabaseChangeScriptModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DatabaseChangeScriptModel'
          title: "DatabaseChangeScriptModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDatabaseResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DatabaseResponseModel'
          title: "DatabaseResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDeliveryControllerDeleteScriptModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DeliveryControllerDeleteScriptModel'
          title: "DeliveryControllerDeleteScriptModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDeliveryControllerResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DeliveryControllerResponseModel'
          title: "DeliveryControllerResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDeliveryGroupAssociationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DeliveryGroupAssociationResponseModel'
          title: "DeliveryGroupAssociationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDeliveryGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DeliveryGroupResponseModel'
          title: "DeliveryGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDesktopResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DesktopResponseModel'
          title: "DesktopResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfDesktopUsageResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/DesktopUsageResponseModel'
          title: "DesktopUsageResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfFtaResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/FtaResponseModel'
          title: "FtaResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorMachineCatalogResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorMachineCatalogResponseModel'
          title: "HypervisorMachineCatalogResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorPluginResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorPluginResponseModel'
          title: "HypervisorPluginResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorResourcePoolDetailResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
          title: "HypervisorResourcePoolDetailResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorResourceResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorResourceResponseModel'
          title: "HypervisorResourceResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorResponseModel'
          title: "HypervisorResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorsAndResourcePoolsResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorsAndResourcePoolsResponseModel'
          title: "HypervisorsAndResourcePoolsResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfHypervisorVmValidationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/HypervisorVmValidationResponseModel'
          title: "HypervisorVmValidationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIconResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IconResponseModel'
          title: "IconResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityContainerResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityContainerResponseModel'
          title: "IdentityContainerResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityDirectoryResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityDirectoryResponseModel'
          title: "IdentityDirectoryResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityDomainResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityDomainResponseModel'
          title: "IdentityDomainResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityForestResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityForestResponseModel'
          title: "IdentityForestResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityMachineResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityMachineResponseModel'
          title: "IdentityMachineResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentitySiteResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentitySiteResponseModel'
          title: "IdentitySiteResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfIdentityUserResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfImageDefinitionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ImageDefinitionResponseModel'
          title: "ImageDefinitionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfImageVersionCatalogResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ImageVersionCatalogResponseModel'
          title: "ImageVersionCatalogResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfImageVersionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ImageVersionResponseModel'
          title: "ImageVersionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfJobResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/JobResponseModel'
          title: "JobResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfLicenseEntitlementResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/LicenseEntitlementResponseModel'
          title: "LicenseEntitlementResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfLicenseResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/LicenseResponseModel'
          title: "LicenseResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfLicensingUserResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/LicensingUserResponseModel'
          title: "LicensingUserResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfLogOperationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/LogOperationResponseModel'
          title: "LogOperationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfLowLevelOperationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/LowLevelOperationResponseModel'
          title: "LowLevelOperationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfMachineApplicationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/MachineApplicationResponseModel'
          title: "MachineApplicationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfMachineCatalogResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/MachineCatalogResponseModel'
          title: "MachineCatalogResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfMachineConfigurationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/MachineConfigurationResponseModel'
          title: "MachineConfigurationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfMachineIdentityPoolResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/MachineIdentityPoolResponseModel'
          title: "MachineIdentityPoolResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfMachineResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/MachineResponseModel'
          title: "MachineResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfNameValueStringPairModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPowerActionScheduleResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PowerActionScheduleResponseModel'
          title: "PowerActionScheduleResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPowerTimeSchemeResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PowerTimeSchemeResponseModel'
          title: "PowerTimeSchemeResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPredefinedPermissionGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PredefinedPermissionGroupResponseModel'
          title: "PredefinedPermissionGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPredefinedPermissionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PredefinedPermissionResponseModel'
          title: "PredefinedPermissionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfProvisioningSchemeMachineAccountResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ProvisioningSchemeMachineAccountResponseModel'
          title: "ProvisioningSchemeMachineAccountResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfProvisioningSchemeResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ProvisioningSchemeResponseModel'
          title: "ProvisioningSchemeResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsCollectionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsCollectionResponseModel'
          title: "PvsCollectionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsDeviceResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsDeviceResponseModel'
          title: "PvsDeviceResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsSiteResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsSiteResponseModel'
          title: "PvsSiteResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsStreamingSiteResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsStreamingSiteResponseModel'
          title: "PvsStreamingSiteResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsStreamingStoreResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsStreamingStoreResponseModel'
          title: "PvsStreamingStoreResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfPvsStreamingVDiskResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/PvsStreamingVDiskResponseModel'
          title: "PvsStreamingVDiskResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfRebootScheduleResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/RebootScheduleResponseModel'
          title: "RebootScheduleResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfRoleResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/RoleResponseModel'
          title: "RoleResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfScopedObjectResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ScopedObjectResponseModel'
          title: "ScopedObjectResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfScopeResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfSessionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/SessionResponseModel'
          title: "SessionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfSessionTrendItem:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/SessionTrendItem'
          title: "SessionTrendItem[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfSiteResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/SiteResponseModel'
          title: "SiteResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfStartMenuApplicationResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/StartMenuApplicationResponseModel'
          title: "StartMenuApplicationResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfStoreFrontDeliveryGroupResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/StoreFrontDeliveryGroupResponseModel'
          title: "StoreFrontDeliveryGroupResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfStoreFrontServerResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/StoreFrontServerResponseModel'
          title: "StoreFrontServerResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfString:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            type: string
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfTagResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/TagResponseModel'
          title: "TagResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfTenantResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/TenantResponseModel'
          title: "TenantResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfTimeZoneResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/TimeZoneResponseModel'
          title: "TimeZoneResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfUpgradePackageVersionResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/UpgradePackageVersionResponseModel'
          title: "UpgradePackageVersionResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfUserZonePreferenceResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/UserZonePreferenceResponseModel'
          title: "UserZonePreferenceResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfVMImageResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/VMImageResponseModel'
          title: "VMImageResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfZonedItemResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ZonedItemResponseModel'
          title: "ZonedItemResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    CollectionModelOfZoneResponseModel:
      description: Response object for collections of items.
      properties:
        Items:
          description: List of items.
          items:
            $ref: '#/components/schemas/ZoneResponseModel'
          title: "ZoneResponseModel[]"
          type: array
        ContinuationToken:
          description: |-
            If present, indicates to the caller that the query was not complete,
            and they should call the API again specifying the continuation token
            as a query parameter.
          type: string
        TotalItems:
          description: |-
            Indicates the total number of items in the collection, which may be
            more than the number of Items returned, if there is a
            ContinuationToken.  Only returned in the response to `$search` APIs.
          format: int32
          type: integer
      required:
      - Items
      title: CollectionModel`1
      type: object
    ColorDepth:
      description: Color depth of HDX session.
      enum:
      - Unknown
      - FourBit
      - EightBit
      - SixteenBit
      - TwentyFourBit
      title: ColorDepth
      type: string
      x-enumNames:
      - Unknown
      - FourBit
      - EightBit
      - SixteenBit
      - TwentyFourBit
    ComparisonResponseContract:
      description: Comparison report/result.
      example:
        Targets:
        - Targets
        - Targets
        WithDefaults: true
        Result:
        - DefaultValue: DefaultValue
          IsDifferent: true
          Category: Category
          IsSetting: true
          IsInUse:
          - true
          - true
          SettingName: SettingName
          Values:
          - Values
          - Values
        - DefaultValue: DefaultValue
          IsDifferent: true
          Category: Category
          IsSetting: true
          IsInUse:
          - true
          - true
          SettingName: SettingName
          Values:
          - Values
          - Values
      properties:
        Targets:
          description: A target is either a policy or polilate. This list stores the
            target names.
          items:
            type: string
          type: array
        Result:
          description: Rows in the report
          items:
            $ref: '#/components/schemas/ComparisonRowContract'
          title: "ComparisonRowContract[]"
          type: array
        WithDefaults:
          description: "If true, first column is setting default values"
          type: boolean
      title: ComparisonResponseContract
      type: object
    ComparisonRowContract:
      description: A row in a comparison report.
      example:
        DefaultValue: DefaultValue
        IsDifferent: true
        Category: Category
        IsSetting: true
        IsInUse:
        - true
        - true
        SettingName: SettingName
        Values:
        - Values
        - Values
      properties:
        SettingName:
          description: Can be either a category name or setting name.
          type: string
        IsSetting:
          description: Indicate if SettingName is a setting name or category name.
          type: boolean
        IsDifferent:
          description: |-
            Valid only when IsSetting is false. Used to indicate if there is any difference
            among the settings in the category.
          type: boolean
        IsInUse:
          description: |-
            There are Targets.Length number of items in the list, stored in the same order as the
            items in Targets. Value is true if the setting is configured in the target. Value is
            true if SettingName is a category name and at least one of the settings under the
            category has IsInUse set to true.
          items:
            type: boolean
          title: "Boolean[]"
          type: array
        Values:
          description: |-
            There are Targets.Length number of items in the list, stored in the same order as the
            items in Targets. Value should not be used if the corresponding IsInUse value is false.
            If the IsInUse value is false, a - should be displayed if IsSetting is true. Don't use
            the values here if IsSetting is false.
          items:
            type: string
          type: array
        Category:
          description: For internal use to keep track of setting category.
          type: string
        DefaultValue:
          description: The default value as specified in the GPFX file for the setting.
          type: string
      title: ComparisonRowContract
      type: object
    ConfigurationSlotResponseModel:
      description: Configuration Slot response class.
      example:
        Description: Description
        SettingsGroup: SettingsGroup
        Id: 0
        Name: Name
      properties:
        Id:
          description: The Id of a configuration slot.
          format: int32
          type: integer
        Name:
          description: The name of a configuration slot.
          type: string
        SettingsGroup:
          description: The SettingsGroup of a configuration slot.
          type: string
        Description:
          description: The Description of a configuration slot.
          type: string
      title: ConfigurationSlotResponseModel
      type: object
    ConfigurationSlotResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfConfigurationSlotResponseModel'
      - description: Collection of ConfigurationSlotResponseModel
        type: object
      title: ConfigurationSlotResponseModelCollection
    ConnectionFailureReason:
      description: The reason why the last connection failure occurred.
      enum:
      - Unknown
      - None
      - SessionPreparation
      - RegistrationTimeout
      - ConnectionTimeout
      - Licensing
      - Ticketing
      - Other
      title: ConnectionFailureReason
      type: string
      x-enumNames:
      - Unknown
      - None
      - SessionPreparation
      - RegistrationTimeout
      - ConnectionTimeout
      - Licensing
      - Ticketing
      - Other
    ConnectionMode:
      description: Modes in which a connection can be established to a session host.
      enum:
      - Unknown
      - Brokered
      - Unbrokered
      - LeasedConnection
      - VdaHighAvailabilityMode
      - ThirdPartyBroker
      - ThirdPartyBrokerWithLicensing
      title: ConnectionMode
      type: string
      x-enumNames:
      - Unknown
      - Brokered
      - Unbrokered
      - LeasedConnection
      - VdaHighAvailabilityMode
      - ThirdPartyBroker
      - ThirdPartyBrokerWithLicensing
    ContainerMetadataModel:
      description: "About model of Container metadata for machine.\n            "
      properties:
        Metadata:
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerMetadataType'
          description: Indicates if the  current environment is cloud.
          type: object
      title: ContainerMetadataModel
      type: object
    ContainerMetadataType:
      description: "The type of a container, relevant to delegated administration."
      enum:
      - Unknown
      - DeliveryGroup
      - MachineCatalog
      title: ContainerMetadataType
      type: string
      x-enumNames:
      - Unknown
      - DeliveryGroup
      - MachineCatalog
    ContainerScopeResponseModel:
      description: Response object for delegated admin container scopes.
      example:
        ScopeType: "{}"
        Scopes:
        - Uid: 0
          TenantId: TenantId
          Description: Description
          IsAllScope: true
          TenantName: TenantName
          IsTenantScope: true
          Id: Id
          IsBuiltIn: true
          Name: Name
        - Uid: 0
          TenantId: TenantId
          Description: Description
          IsAllScope: true
          TenantName: TenantName
          IsTenantScope: true
          Id: Id
          IsBuiltIn: true
          Name: Name
      properties:
        Scopes:
          description: List of delegated admin scopes.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        ScopeType:
          allOf:
          - $ref: '#/components/schemas/ContainerScopeType'
          description: Type of the container providing the scopes.
          type: object
      required:
      - ScopeType
      - Scopes
      title: ContainerScopeResponseModel
      type: object
    ContainerScopeType:
      description: "The type of a container, relevant to delegated administration."
      enum:
      - Unknown
      - DeliveryGroup
      - ApplicationGroup
      - MachineCatalog
      title: ContainerScopeType
      type: string
      x-enumNames:
      - Unknown
      - DeliveryGroup
      - ApplicationGroup
      - MachineCatalog
    ControllerServiceStatus:
      description: ""
      enum:
      - Stopped
      - DBUnconfigured
      - DBRejectedConnection
      - InvalidDBConfigured
      - DBNotFound
      - DBMissingOptionalFeature
      - DBMissingMandatoryFeature
      - DBNewerVersionThanService
      - DBOlderVersionThanService
      - DBVersionChangeInProgress
      - OK
      - PendingFailure
      - Failed
      - Unknown
      - ServiceNotInSiteDB
      - InvalidDBConnectionString
      - PendingServiceDiscovery
      - PendingServiceRegistration
      - PendingConfiguration
      title: ControllerServiceStatus
      type: string
      x-enumNames:
      - Stopped
      - DBUnconfigured
      - DBRejectedConnection
      - InvalidDBConfigured
      - DBNotFound
      - DBMissingOptionalFeature
      - DBMissingMandatoryFeature
      - DBNewerVersionThanService
      - DBOlderVersionThanService
      - DBVersionChangeInProgress
      - OK
      - PendingFailure
      - Failed
      - Unknown
      - ServiceNotInSiteDB
      - InvalidDBConnectionString
      - PendingServiceDiscovery
      - PendingServiceRegistration
      - PendingConfiguration
    ControllerServiceType:
      description: ""
      enum:
      - Unknown
      - Broker
      - Acct
      - Prov
      - Hyp
      - Lic
      - Pvs
      - Monitor
      - Sf
      - EnvTest
      - Orch
      - Trust
      - AppV
      - Vus
      - Config
      - Log
      - Analytics
      - Admin
      - AppLib
      - Identity
      title: ControllerServiceType
      type: string
      x-enumNames:
      - Unknown
      - Broker
      - Acct
      - Prov
      - Hyp
      - Lic
      - Pvs
      - Monitor
      - Sf
      - EnvTest
      - Orch
      - Trust
      - AppV
      - Vus
      - Config
      - Log
      - Analytics
      - Admin
      - AppLib
      - Identity
    CpuPriorityLevel:
      description: Starting process priority level for an application.
      enum:
      - Unknown
      - Low
      - BelowNormal
      - Normal
      - AboveNormal
      - High
      title: CpuPriorityLevel
      type: string
      x-enumNames:
      - Unknown
      - Low
      - BelowNormal
      - Normal
      - AboveNormal
      - High
    CreateAdminAdministratorRequestModel:
      description: Model for adding an administrator
      example:
        Rights:
        - Role: Role
          Scope: Scope
        - Role: Role
          Scope: Scope
        User: User
        Enabled: true
      properties:
        User:
          description: The administrator to add.
          type: string
        Rights:
          description: Rights associated with the administrator. It is ok if there
            is no rights specified.
          items:
            $ref: '#/components/schemas/AdminRightRequestModel'
          title: "AdminRightRequestModel[]"
          type: array
        Enabled:
          default: true
          description: |-
            Indicates whether the administrator is enabled.  Disabled
            administrators cannot administer the site unless they are a member
            of a different user group which is granted access by a different
            administrator record.
          type: boolean
      title: CreateAdminAdministratorRequestModel
      type: object
    CreateAdminFolderRequestModel:
      description: Request object for creating an admin folder.
      example:
        Path: Path
        ParentId: ParentId
        ObjectIdentifiers:
        - null
        - null
        Name: Name
      properties:
        Name:
          description: "Name of the folder to create.\nMay be omitted if Path is used;\n\
            otherwise required.\n\nIf both  and \nare specified, a folder with the\
            \ specified name\nwill be created as a child of the specified path."
          minLength: 1
          type: string
        Path:
          description: |-
            Path where the folder should be created.
            Exclusive with ParentId.  One or the
            other property may be used but not both.

            Path to where the folder should be created.
            Any folders in the path which don't exist will
            be created.

            If not specified, default is the root folder path.
          type: string
        ParentId:
          description: |-
            Parent folder where the folder should be created.
            Exclusive with Path.  One or the
            other property may be used but not both.

            If not specified, default is the root folder path.
          type: string
        ObjectIdentifiers:
          description: The object identifiers of the new admin folder. To indicated
            what objects this folder will include.
          items:
            $ref: '#/components/schemas/AdminFolderObjectIdentifier'
          title: "AdminFolderObjectIdentifier[]"
          type: array
      required:
      - Name
      - ObjectIdentifiers
      title: CreateAdminFolderRequestModel
      type: object
    CreateAdminRoleRequestModel:
      description: Request object for creation of admin scope.
      example:
        Description: Description
        CanLaunchManage: true
        CanLaunchMonitor: true
        Permissions:
        - Permissions
        - Permissions
        Name: Name
      properties:
        Name:
          description: The name of the role. Name is globally unique.
          minLength: 1
          type: string
        Description:
          description: The description of the admin role.
          type: string
        CanLaunchManage:
          description: Indicate that if the mangement page could be launch on xdconsole
          type: boolean
        CanLaunchMonitor:
          description: Indicate that if the monitor page could be launch on xdconsole
          type: boolean
        Permissions:
          description: List of permissions granted by the role. At least one permission
            is required.
          items:
            type: string
          type: array
      required:
      - Name
      title: CreateAdminRoleRequestModel
      type: object
    CreateAdminScopeRequestModel:
      example:
        Description: Description
        IsTenantScope: true
        ScopedObjects:
        - ObjectType: "{}"
          Object: Object
        - ObjectType: "{}"
          Object: Object
        Name: Name
      properties:
        Name:
          description: The name of the scope. Name is globally unique.
          minLength: 1
          type: string
        Description:
          description: The description of the admin scope.
          type: string
        IsTenantScope:
          description: Indicates if it is tenant scope.
          type: boolean
        ScopedObjects:
          description: Scoped objects associated with the scope object.
          items:
            $ref: '#/components/schemas/ScopedObjectRequestModel'
          title: "ScopedObjectRequestModel[]"
          type: array
      required:
      - Name
      title: CreateAdminScopeRequestModel
      type: object
    CreateApplicationFolderRequestModel:
      description: Request object for creating an application folder.
      example:
        Path: Path
        ParentId: ParentId
        Name: Name
      properties:
        Name:
          description: "Name of the folder to create.\nMay be omitted if Path is used;\n\
            otherwise required.\n\nIf both  and \nare specified, a folder with the\
            \ specified name\nwill be created as a child of the specified path."
          type: string
        Path:
          description: |-
            Path where the folder should be created.
            Exclusive with ParentId.  One or the
            other property may be used but not both.

            Path to where the folder should be created.
            Any folders in the path which don't exist will
            be created.

            If not specified, default is the root folder path.
          type: string
        ParentId:
          description: |-
            Parent folder where the folder should be created.
            Exclusive with Path.  One or the
            other property may be used but not both.

            If not specified, default is the root folder path.
          type: string
      title: CreateApplicationFolderRequestModel
      type: object
    CreateApplicationGroupRequestModel:
      description: "Request body for creating an application group.\n            "
      example:
        IncludedUserFilterEnabled: false
        AdminFolder: AdminFolder
        SessionSharingEnabled: true
        Description: Description
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        RestrictToTag: RestrictToTag
        Scopes:
        - Scopes
        - Scopes
        DeliveryGroups:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
        Enabled: true
        Tenants:
        - Tenants
        - Tenants
        Name: Name
      properties:
        AdminFolder:
          description: |-
            The admin folder in which the application group
            should be created.
          type: string
        Name:
          description: Name of the application group to create.
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: Description of the application group.
          maxLength: 512
          type: string
        Enabled:
          default: true
          description: Whether the application group's applications can be launched
            by end users.
          type: boolean
        RestrictToTag:
          description: |-
            Optional tag that may be used further to restrict which machines may be used
            for launching the application group's applications.


            A machine may be used by an application group if either the application group has
            no tag restriction or the application group does have a tag restriction and
            the machine is tagged with the same tag.
          type: string
        Scopes:
          description: |-
            Administrative scopes which the newly created application group will
            be a part of.
          items:
            type: string
          type: array
        Tenants:
          description: Tenant(s) to associate the application group with.
          items:
            type: string
          type: array
        SessionSharingEnabled:
          default: true
          description: |-
            Whether the application group's applications can share sessions with
            applications that are not a member of this application group.
          type: boolean
        IncludedUserFilterEnabled:
          default: false
          description: |-
            Specifies whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery groups' access
            polic(ies) is implicitly granted access to the applications
            within the application group.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter of the application group; that is,
            the users and groups who are explicitly granted access to the
            applications in the application group.
          items:
            type: string
          type: array
        DeliveryGroups:
          description: List of delivery groups to associate with the application group.
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
      required:
      - Name
      title: CreateApplicationGroupRequestModel
      type: object
    CreateApplicationRequestModel:
      description: Request object for creating a published application.
      example:
        BrowserName: BrowserName
        IncludedUserFilterEnabled: false
        ApplicationGroups:
        - ApplicationGroups
        - ApplicationGroups
        MaxPerUserInstances: 0
        Description: Description
        HomeZoneMode: "{}"
        Name: Name
        WaitForPrinterCreation: false
        PublishedName: PublishedName
        ClientFolder: ClientFolder
        StartMenuFolder: StartMenuFolder
        Visible: true
        ShortcutAddedToDesktop: false
        InstalledAppProperties: null
        AppVAppProperties: null
        MaxTotalInstances: 6
        CpuPriorityLevel: "{}"
        DoNotEnumerate: false
        Enabled: true
        HomeZone: HomeZone
        IconFromClient: false
        ApplicationType: "{}"
        ShortcutAddedToStartMenu: false
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        ContentLocation: ContentLocation
        ApplicationFolder: ApplicationFolder
        Icon: Icon
      properties:
        ApplicationFolder:
          description: |-
            The application folder in which the application
            should be created.
          type: string
        ApplicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: Specifies the type of the application.
          type: object
        BrowserName:
          description: Internal name of the application.
          type: string
        ClientFolder:
          description: Specifies the folder that the application belongs to as the
            user sees it.
          type: string
        CpuPriorityLevel:
          allOf:
          - $ref: '#/components/schemas/CpuPriorityLevel'
          description: Specifies the CPU priority for the launched process.
          type: object
        ApplicationGroups:
          description: |-
            Specifies one or more application groups which the application will
            be published to.
          items:
            type: string
          type: array
        Description:
          description: Specifies the description of the application.
          type: string
        Enabled:
          default: true
          description: Specifies whether or not this application can be launched.
          type: boolean
        DoNotEnumerate:
          default: false
          description: Indicates whether or not this application is enumerable
          type: boolean
        HomeZone:
          description: |-
            Specifies a home zone preference used when launching this
            application.
          type: string
        HomeZoneMode:
          allOf:
          - $ref: '#/components/schemas/HomeZoneMode'
          description: |-
            Specifies the zone preference mode for application launches.
            Cannot be set for ApplicationType PublishedContent
            Prefer: Same as HomeZoneOnly=false, requires HomeZoneId != null
            Only: Same as HomeZoneOnly=true, requires HomeZoneId != null
            Ignore: Same as HomeZoneOnly=false, IgnoreUserHomeZone=true, requires HomeZoneId == null
            User: Same as HomeZoneOnly=false, IgnoreUserHomeZone=false, requires HomeZoneId == null
          type: object
        Icon:
          description: Icon to use for the application.
          type: string
        IconFromClient:
          default: false
          description: |-
            Specifies Whether the Icon is from client or not.
            Only can be set to `true` if Application Type is InstalledOnClient
          type: boolean
        IncludedUserFilterEnabled:
          default: false
          description: |-
            Specifies whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            polic(ies) is implicitly granted access to the application.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter of the application; that is,
            the users and groups who are explicitly granted access to the
            published application.
          items:
            type: string
          type: array
        InstalledAppProperties:
          $ref: '#/components/schemas/CreateApplicationRequestModel_InstalledAppProperties'
        AppVAppProperties:
          $ref: '#/components/schemas/CreateApplicationRequestModel_AppVAppProperties'
        ContentLocation:
          description: Location of published content.
          type: string
        MaxPerUserInstances:
          default: 0
          description: |-
            Specifies the maximum allowed concurrently running instances of
            the application that an individual user can have.
          format: int32
          type: integer
        MaxTotalInstances:
          default: 0
          description: |-
            Specifies the maximum allowed total ofconcurrently running
            instances of the application within the site.
          format: int32
          type: integer
        Name:
          description: Specifies the name of the application.
          minLength: 1
          type: string
        PublishedName:
          description: The name seen by end users who have access to the application.
          type: string
        ShortcutAddedToDesktop:
          default: false
          description: |-
            Specifies whether or not a shortcut to the application
            should be placed on the user device.
          type: boolean
        ShortcutAddedToStartMenu:
          default: false
          description: |-
            Specifies whether or not a shortcut to the application
            should be placed in the user's start menu on their user device.
          type: boolean
        StartMenuFolder:
          description: |-
            Specifies the name of the start menu folder that holds
            the application shortcut (if any).
          type: string
        Visible:
          default: true
          description: Specifies whether or not this application is visible to users.
          type: boolean
        WaitForPrinterCreation:
          default: false
          description: |-
            Specifies whether or not the session waits for the printers to
            be created before allowing the user to interact with the session.
          type: boolean
      required:
      - Name
      title: CreateApplicationRequestModel
      type: object
    CreateAppVIsolationGroupRequestModel:
      description: Request object for an App-V IsolationGroup.
      example:
        Description: Description
        IncludedAppVPackages:
        - Uid: 0
          ExplicitInclusion: true
        - Uid: 0
          ExplicitInclusion: true
        Name: Name
      properties:
        Name:
          description: Name of IsolationGroup
          minLength: 1
          type: string
        Description:
          description: Description of IsolationGroup
          type: string
        IncludedAppVPackages:
          description: Included AppV packages
          items:
            $ref: '#/components/schemas/AppVIsolationGroupPackageRequestModel'
          title: "AppVIsolationGroupPackageRequestModel[]"
          type: array
      required:
      - Name
      title: CreateAppVIsolationGroupRequestModel
      type: object
    CreateConfigurationSlotRequestModel:
      description: Request object for creating a configuration slot.
      example:
        Description: Description
        SettingsGroup: SettingsGroup
        Name: Name
      properties:
        Name:
          description: Name of the configuration slot to create.
          maxLength: 64
          minLength: 1
          type: string
        SettingsGroup:
          description: Settings group of configuration slot to create.
          maxLength: 512
          minLength: 1
          type: string
        Description:
          description: Description of configuration slot to create.
          maxLength: 512
          type: string
      required:
      - Name
      - SettingsGroup
      title: CreateConfigurationSlotRequestModel
      type: object
    CreateDeliveryGroupRequestModel:
      description: Request object for creation of delivery groups.
      example:
        AutoscaleLogOffReminderMessage: AutoscaleLogOffReminderMessage
        SimpleAccessPolicy: null
        OffPeakDisconnectTimeoutMinutes: 1280358508
        RestrictAutoscaleTag: RestrictAutoscaleTag
        LogOffWarningTitle: LogOffWarningTitle
        StoreFrontServersForHostedReceiver:
        - Description: Description
          Enabled: true
          Id: Id
          Url: Url
          Name: Name
        - Description: Description
          Enabled: true
          Id: Id
          Url: Url
          Name: Name
        Desktops:
        - IncludedUserFilterEnabled: true
          ExcludedUsers:
          - ExcludedUsers
          - ExcludedUsers
          Description: Description
          ExcludedUserFilterEnabled: true
          Enabled: true
          ColorDepth: "{}"
          LeasingBehavior: "{}"
          Name: Name
          PublishedName: PublishedName
          SecureIcaRequired: true
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          MaxDesktops: 0
          RestrictToTag: RestrictToTag
          SessionReconnection: "{}"
          Id: Id
          Icon: Icon
        - IncludedUserFilterEnabled: true
          ExcludedUsers:
          - ExcludedUsers
          - ExcludedUsers
          Description: Description
          ExcludedUserFilterEnabled: true
          Enabled: true
          ColorDepth: "{}"
          LeasingBehavior: "{}"
          Name: Name
          PublishedName: PublishedName
          SecureIcaRequired: true
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          MaxDesktops: 0
          RestrictToTag: RestrictToTag
          SessionReconnection: "{}"
          Id: Id
          Icon: Icon
        MachineLogOnType: "{}"
        Name: Name
        AdminFolder: AdminFolder
        AutomaticPowerOnForAssignedDuringPeak: true
        LimitSecondsToForceLogOffUserDuringOffPeak: 1997469940
        SecureIcaRequired: true
        AppProtectionScreenCaptureRequired: true
        DefaultDesktopIcon: DefaultDesktopIcon
        ProtocolPriority:
        - null
        - null
        OffPeakDisconnectAction: "{}"
        AutomaticPowerOnForAssigned: true
        DeliveryType: "{}"
        MachineCatalogs:
        - Count: 1294386358
          AssignMachinesToUsers:
          - Users:
            - Users
            - Users
            Machine: Machine
          - Users:
            - Users
            - Users
            Machine: Machine
          MachineCatalog: MachineCatalog
        - Count: 1294386358
          AssignMachinesToUsers:
          - Users:
            - Users
            - Users
            Machine: Machine
          - Users:
            - Users
            - Users
            Machine: Machine
          MachineCatalog: MachineCatalog
        ProductCode: ProductCode
        PolicySetGuid: PolicySetGuid
        AppProtectionKeyLoggingRequired: true
        RebootSchedules:
        - IgnoreMaintenanceMode: true
          WarningMessage: WarningMessage
          DaysInWeek:
          - null
          - null
          Description: Description
          UseNaturalReboot: true
          StartTime: StartTime
          Enabled: true
          Name: Name
          FrequencyFactor: 6
          StartDate: StartDate
          WarningDurationMinutes: 763901857
          DayInMonth: "{}"
          RestrictToTag: RestrictToTag
          WarningRepeatIntervalMinutes: 1495747635
          RebootDurationMinutes: 9
          Frequency: "{}"
          WeekInMonth: "{}"
          Id: Id
          WarningTitle: WarningTitle
          Day: "{}"
        - IgnoreMaintenanceMode: true
          WarningMessage: WarningMessage
          DaysInWeek:
          - null
          - null
          Description: Description
          UseNaturalReboot: true
          StartTime: StartTime
          Enabled: true
          Name: Name
          FrequencyFactor: 6
          StartDate: StartDate
          WarningDurationMinutes: 763901857
          DayInMonth: "{}"
          RestrictToTag: RestrictToTag
          WarningRepeatIntervalMinutes: 1495747635
          RebootDurationMinutes: 9
          Frequency: "{}"
          WeekInMonth: "{}"
          Id: Id
          WarningTitle: WarningTitle
          Day: "{}"
        AutoscaleLogOffReminderIntervalSecondsOffPeak: 890262545
        SettlementPeriodBeforeUseSeconds: 2
        TimeZone: TimeZone
        RequireUserHomeZone: false
        SettlementPeriodBeforeAutoShutdownSeconds: 1
        LingerSettings: null
        ZonePreferences:
        - null
        - null
        LogoffOffPeakDisconnectedSessionAfterSeconds: 1079111561
        AppAccessPolicy: null
        PeakExtendedDisconnectAction: "{}"
        PeakLogOffTimeoutMinutes: 1470350420
        PowerOffDelayMinutes: 40
        Description: Description
        OffPeakLogOffTimeoutMinutes: 494379917
        LogoffPeakDisconnectedSessionAfterSeconds: 1066272551
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        OffPeakBufferSizePercent: 14
        PeakLogOffAction: "{}"
        ShutdownDesktopsAfterUse: false
        InMaintenanceMode: false
        AutoscaleLogOffReminderIntervalSecondsPeak: 1586191969
        PeakBufferSizePercent: 12
        LimitSecondsToForceLogOffUserDuringPeak: 1516424369
        HdxSslEnabled: false
        DisconnectOffPeakIdleSessionAfterSeconds: 251915777
        MinimumFunctionalLevel: "{}"
        TurnOnAddedMachines: true
        OffPeakLogOffAction: "{}"
        LicenseModel: "{}"
        PeakDisconnectAction: "{}"
        Applications: null
        PeakExtendedDisconnectTimeoutMinutes: 319849630
        OffPeakExtendedDisconnectTimeoutMinutes: 1210617418
        Enabled: true
        LogOffWarningMessage: LogOffWarningMessage
        ColorDepth: "{}"
        PeakDisconnectTimeoutMinutes: 220040988
        PrelaunchSettings: null
        AutoscaleLogOffReminderTitle: AutoscaleLogOffReminderTitle
        OffPeakExtendedDisconnectAction: "{}"
        DefaultDesktopPublishedName: DefaultDesktopPublishedName
        RestrictAutoscaleMinIdleUntaggedPercentDuringPeak: 35
        DisconnectPeakIdleSessionAfterSeconds: 1601538494
        MachineCost: 0.8762042012749002
        Scopes:
        - Scopes
        - Scopes
        UserManagement: "{}"
        AutoscaleLogOffReminderEnabled: false
        RestrictAutoscaleMinIdleUntaggedPercentDuringOffPeak: 19
        PowerTimeSchemes:
        - PoolUsingPercentage: false
          DaysOfWeek:
          - null
          - null
          PoolSizeSchedule:
          - TimeRange: TimeRange
            PoolSize: 9
          - TimeRange: TimeRange
            PoolSize: 9
          PeakHours:
          - true
          - true
          DisplayName: DisplayName
          PoolSize:
          - 9
          - 9
          PeakTimeRanges:
          - PeakTimeRanges
          - PeakTimeRanges
          Name: Name
        - PoolUsingPercentage: false
          DaysOfWeek:
          - null
          - null
          PoolSizeSchedule:
          - TimeRange: TimeRange
            PoolSize: 9
          - TimeRange: TimeRange
            PoolSize: 9
          PeakHours:
          - true
          - true
          DisplayName: DisplayName
          PoolSize:
          - 9
          - 9
          PeakTimeRanges:
          - PeakTimeRanges
          - PeakTimeRanges
          Name: Name
        AutoScaleEnabled: true
      properties:
        AdminFolder:
          description: |-
            The admin folder in which the delivery group
            should be created.
          type: string
        Applications:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_Applications'
        UserManagement:
          allOf:
          - $ref: '#/components/schemas/UserManagementModel'
          description: |-
            Indicates whether users are managed in the Citrix Cloud Library, or
            within Studio.
          type: object
        DeliveryType:
          allOf:
          - $ref: '#/components/schemas/DeliveryKind'
          description: Type of resources that may be delivered from the delivery group.
          type: object
        Description:
          description: |-
            A description for this delivery group useful for administrators
            of the site.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        Desktops:
          description: List of desktop resources to publish on the delivery group.
          items:
            $ref: '#/components/schemas/DesktopRequestModel'
          title: "DesktopRequestModel[]"
          type: array
        Enabled:
          default: true
          description: |-
            Whether the delivery group should be in the enabled state; all
            resources published on disabled delivery groups do not appear
            to users.
          type: boolean
        InMaintenanceMode:
          default: false
          description: |-
            Whether the delivery group should be created in maintenance mode;
            a delivery group in maintenance mode will not allow users to
            connect or reconnect to machines in the delivery group.
          type: boolean
        MachineCatalogs:
          description: |-
            List of machine catalogs from which to assign machines to
            the newly created delivery group.
          items:
            $ref: '#/components/schemas/DeliveryGroupAddMachinesRequestModel'
          title: "DeliveryGroupAddMachinesRequestModel[]"
          type: array
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            The minimum functional level required for machines to work
            successfully in the delivery group.
          type: object
        Name:
          description: The name of the new delivery group.
          minLength: 1
          type: string
        RequireUserHomeZone:
          default: false
          description: |-
            Whether to require the resources from this delivery group to
            launch within the user's home zone.
          type: boolean
        Scopes:
          description: |-
            Administrative scopes which the newly created delivery group
            will be a part of.
          items:
            type: string
          type: array
        Tenants:
          description: Tenant(s) to associate the delivery group with.
          items:
            type: string
          type: array
        AppProtectionKeyLoggingRequired:
          description: Specifies whether key logging app protection is required.
          type: boolean
        AppProtectionScreenCaptureRequired:
          description: Specifies whether screen capture app protection is required.
          type: boolean
        AppAccessPolicy:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_AppAccessPolicy'
        AutomaticPowerOnForAssigned:
          description: |-
            Whether assigned (Private)
            machines in the delivery group should be automatically
            powered-on at the start of peak time periods.
          type: boolean
        AutomaticPowerOnForAssignedDuringPeak:
          description: |-
            Whether assigned (Private)
            machines in the delivery group should be automatically
            powered-on throughout peak time periods.
          type: boolean
        AutoScaleEnabled:
          description: Whether auto-scale is enabled for the delivery group.
          type: boolean
        RestrictAutoscaleTag:
          description: Specifies the tag used to restrict autoscale.
          type: string
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: |-
            Specifies the color depth that the ICA session should use
            for connections to machines in this group.
          type: object
        DefaultDesktopIcon:
          description: Default icon to use for desktops published from the delivery
            group.
          maxLength: 1000000
          pattern: UNKNOWN
          type: string
        DefaultDesktopPublishedName:
          description: |-
            Default published name to use for desktops published from the
            delivery group.
          type: string
        HdxSslEnabled:
          default: false
          description: |-
            Whether connections to machines in the delivery group will
            use SSL.
          type: boolean
        LingerSettings:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_LingerSettings'
        OffPeakBufferSizePercent:
          default: 0
          description: |-
            The percentage of machines in the delivery group that should be kept
            available in an idle state outside peak hours.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        OffPeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting outside peak hours.
          type: object
        OffPeakDisconnectTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        OffPeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a second configurable period of a
            user session disconnecting outside peak hours.
          type: object
        OffPeakExtendedDisconnectTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        OffPeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending outside peak hours. "
          type: object
        OffPeakLogOffTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LimitSecondsToForceLogOffUserDuringPeak:
          default: 0
          description: |-
            Represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging to
            the delivery group are logged off, during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LimitSecondsToForceLogOffUserDuringOffPeak:
          default: 0
          description: |-
            represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging
            to the delivery group are logged off, during off-peak.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogOffWarningMessage:
          description: |-
            The warning message to display to users in active sessions prior to logging off users,
            whether in peak time or off-peak.
          type: string
        LogOffWarningTitle:
          description: The title of the warning message dialog.
          type: string
        RestrictAutoscaleMinIdleUntaggedPercentDuringPeak:
          default: -1
          description: |-
            The percentage that the number of untagged single-session machines
            in an idle state, or for multi-session machines, the untagged available
            load capacity must fall below before Autoscale powers on and manages 'tagged'
            machines, as per policy, in peak time. If the number of untagged machines in
            an idle state, or the untagged available load capacity goes above this threshold value,
            Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          maximum: 100
          minimum: -1
          type: integer
        RestrictAutoscaleMinIdleUntaggedPercentDuringOffPeak:
          default: -1
          description: |-
            The percentage that the number of untagged single-session machines in an idle state,
            or for multi-session machines, the untagged available load capacity must fall below
            before Autoscale powers on and manages 'tagged' machines, as per policy, in off-peak.
            If the number of untagged machines in an idle state, or the untagged available load capacity
            goes above this threshold value, Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          maximum: 100
          minimum: -1
          type: integer
        AutoscaleLogOffReminderEnabled:
          default: false
          description: |-
            Boolean value indicating whether the warning messages should be
            sent on an interval to nudge a logoff
            should be sent on an interval when autoscale is enabled.
          type: boolean
        AutoscaleLogOffReminderIntervalSecondsOffPeak:
          default: 0
          description: |-
            Represents the time interval at which messages are  sent to the user during off peak time
            when autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        AutoscaleLogOffReminderIntervalSecondsPeak:
          default: 0
          description: |-
            Represents the time interval at which messages are  sent to the user during peak time
            when autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        AutoscaleLogOffReminderMessage:
          description: |-
            Notification message to display to users in active sessions
            belonging to machines needed by Autoscale for shutdown.
          type: string
        AutoscaleLogOffReminderTitle:
          description: |-
            Notification message dialog title displayed
            when Autoscale issues a logoff reminder request.
          type: string
        PeakBufferSizePercent:
          default: 0
          description: |-
            The percentage of machines in the delivery group that should be kept
            available in an idle state in peak hours.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        PeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting in peak hours.
          type: object
        PeakDisconnectTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a second configurable period of a
            user session disconnecting in peak hours.
          type: object
        PeakExtendedDisconnectTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending in peak hours. "
          type: object
        PeakLogOffTimeoutMinutes:
          default: 0
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        DisconnectPeakIdleSessionAfterSeconds:
          default: 0
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        DisconnectOffPeakIdleSessionAfterSeconds:
          default: 0
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during off-peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogoffPeakDisconnectedSessionAfterSeconds:
          default: 0
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogoffOffPeakDisconnectedSessionAfterSeconds:
          default: 0
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during off-peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PrelaunchSettings:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_PrelaunchSettings'
        PowerTimeSchemes:
          description: |-
            Power management time schemes.  No two schemes for the same delivery
            group may cover the same day of the week.
          items:
            $ref: '#/components/schemas/PowerTimeSchemeRequestModel'
          title: "PowerTimeSchemeRequestModel[]"
          type: array
        PowerOffDelayMinutes:
          default: 30
          description: |-
            Delay before machines are powered off, when scaling down.  Specified
            in minutes.  Applies only to multi-session machines.
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        MachineCost:
          description: |-
            Indicates the estimated per-hour cost for machines in the delivery
            group, as set by the administrator.
          format: double
          minimum: 0
          title: Double
          type: number
        MachineLogOnType:
          allOf:
          - $ref: '#/components/schemas/MachineLogOnType'
          description: The login type for machines in this desktop group.
          type: object
        ProductCode:
          description: The product code of the delivery group.
          type: string
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model of the delivery group.
          type: object
        ProtocolPriority:
          description: |-
            A list of protocols in the order in which they should be
            attempted for use during connection.
          items:
            $ref: '#/components/schemas/ProtocolType'
          title: "ProtocolType[]"
          type: array
        RebootSchedules:
          description: |-
            Reboot schedules.  No two schedules for the same delivery group may
            cover the same day of the week.
          items:
            $ref: '#/components/schemas/RebootScheduleRequestModel'
          title: "RebootScheduleRequestModel[]"
          type: array
        SecureIcaRequired:
          description: |-
            Whether HDX connections to machines in the delivery group
            require the use of the SecureICA protocol.
          type: boolean
        SettlementPeriodBeforeAutoShutdownSeconds:
          default: 0
          description: |-
            Time after a session ends during which automatic shutdown
            requests (for example, shutdown after use, idle pool
            management) are deferred. Any outstanding shutdown request
            takes effect after the settlement period expires. This is
            typically used to configure time to allow logoff scripts
            to complete.
          format: int32
          type: integer
        SettlementPeriodBeforeUseSeconds:
          default: 0
          description: |-
            Idle period before a machine can be selected to host a new
            session after registration or the end of a previous
            session. This is typically used to allow a machine to
            become idle following processing associated with start-up
            or logoff actions. A machine may still be selected during
            the idle period if no other machine is available for
            immediate use.
          format: int32
          type: integer
        ShutdownDesktopsAfterUse:
          default: false
          description: |-
            Whether machines in this delivery group should be
            automatically shut down when each user session completes.
          type: boolean
        SimpleAccessPolicy:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_SimpleAccessPolicy'
        StoreFrontServersForHostedReceiver:
          description: |-
            List of StoreFront server addresses to configure within hosted
            receivers that are delivered from the delivery group.
          items:
            $ref: '#/components/schemas/StoreFrontServerRequestModel'
          title: "StoreFrontServerRequestModel[]"
          type: array
        TimeZone:
          description: The time zone in which this delivery group's machines reside.
          type: string
        TurnOnAddedMachines:
          description: |-
            Whether to attempt to power on machines when they are added to the
            delivery group.
          type: boolean
        ZonePreferences:
          description: |-
            Ordered list of zone preferences to be applied when launching
            resources from this delivery group.
          items:
            $ref: '#/components/schemas/ZonePreference'
          title: "ZonePreference[]"
          type: array
        Metadata:
          description: The metadata of the new delivery group.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        PolicySetGuid:
          description: The GUID of the policy set assigned to this desktop group.
          format: guid
          type: string
      required:
      - MachineCatalogs
      - Name
      title: CreateDeliveryGroupRequestModel
      type: object
    CreateHypervisorRequestModel:
      description: |-
        Create hypervisor request model.  Note that in previous versions of the
        API, a "hypervisor" was known as a "connection".
      example:
        ConnectionDetails: null
        PoolDetails: null
      properties:
        ConnectionDetails:
          $ref: '#/components/schemas/CreateHypervisorRequestModel_ConnectionDetails'
        PoolDetails:
          $ref: '#/components/schemas/CreateHypervisorRequestModel_PoolDetails'
      required:
      - ConnectionDetails
      title: CreateHypervisorRequestModel
      type: object
    CreateHypervisorResourcePoolAWSRequestModel:
      allOf:
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolAWSRequestModel_allOf'
      title: CreateHypervisorResourcePoolAWSRequestModel
    CreateHypervisorResourcePoolAzureRequestModel:
      allOf:
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolAzureRequestModel_allOf'
      title: CreateHypervisorResourcePoolAzureRequestModel
    CreateHypervisorResourcePoolGcpRequestModel:
      allOf:
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolGcpRequestModel_allOf'
      title: CreateHypervisorResourcePoolGcpRequestModel
    CreateHypervisorResourcePoolRequestModel:
      description: |-
        Create a hypervisor resource pool.  Note that in previous versions of
        the API, a "resource pool" was known as a "hosting unit".
      example:
        GpuTypes:
        - GpuTypes
        - GpuTypes
        Networks:
        - Networks
        - Networks
        RootPath: RootPath
        ConnectionType: "{}"
        PersonalvDiskStorage:
        - PersonalvDiskStorage
        - PersonalvDiskStorage
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        AvailabilityZone: AvailabilityZone
        Name: Name
        VirtualNetwork: VirtualNetwork
        UseLocalStorageCaching: false
        Subnets:
        - Subnets
        - Subnets
        VirtualPrivateCloud: VirtualPrivateCloud
        Storage:
        - Storage
        - Storage
        VmTagging: true
        TemporaryStorage:
        - TemporaryStorage
        - TemporaryStorage
        Region: Region
        CustomProperties: CustomProperties
      properties:
        Name:
          description: Name of the resource pool to create.  Required.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        VmTagging:
          default: true
          description: |-
            Indicates whether VMs created by Virtual Apps & Desktops
            provisioning operations should be tagged.  Tagged VMs are filtered
            out of queries by default.
            Optional.  Default is `true`.
          type: boolean
        GpuTypes:
          description: |-
            Path to the GPU type resource(s) that are available for provisioning
            operations in this resource pool.  Optional.  Not supported by all
            hypervisor types.
          items:
            type: string
          type: array
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: |-
            Type of hypervisor.  Required, and must match the type of hypervisor
            specified for the hypervisor connection that the resource pool is
            attached to.
          type: object
        Metadata:
          description: 'Metadata of the resource pool. Optional. '
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        VirtualPrivateCloud:
          description: |-
            AWS Virtual Private Cloud (VPC) resource which the resource pool is
            connected to.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        AvailabilityZone:
          description: |-
            Path to the availability zone resource to use for provisioning
            operations in this resource pool.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
        Region:
          description: Azure region which the resource pool is connected to.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        VirtualNetwork:
          description: |-
            Azure virtual network which the resource pool is connected to.
            Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Subnets:
          description: |-
            Path to the subnet(s) that are available for provisioning operations
            in this resource pool.  At least one is required.
          items:
            type: string
          type: array
        RootPath:
          description: |-
            Root path of the resources on the hypervisor which should be
            included in the resource pool.  Required.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        UseLocalStorageCaching:
          default: false
          description: |-
            Indicates whether local storage on the hypervisor will be used for
            caching purposes. Not all hypervisor types support this.  Defaults
            to `false`.
          type: boolean
        Storage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        PersonalvDiskStorage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        TemporaryStorage:
          description: |-
            Path to the storage resource(s) that are used for temporary
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
      required:
      - ConnectionType
      - Name
      title: CreateHypervisorResourcePoolRequestModel
      type: object
    CreateHypervisorResourcePoolTraditionalRequestModel:
      allOf:
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolTraditionalRequestModel_allOf'
      title: CreateHypervisorResourcePoolTraditionalRequestModel
    CreateImageDefinitionDetailRequestModel:
      description: Request object for creation of image definition details.
      properties:
        ImageDefinitionName:
          description: The name associated with the image definition.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        ImageDefinitionDescription:
          description: The description associated with the image definition.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        HostingUnit:
          description: The name or id of the HostingUnit the image definition is held
            on.
          minLength: 1
          type: string
        OsType:
          description: |-
            OS Type of the image definition.
            OsType
          minLength: 1
          type: string
        UseWriteBackCache:
          default: false
          description: |-
            Indicates whether or not write back cache is enabled for the VMs created from this image definition.
            Optional; default is `false`.
          type: boolean
        CustomProperties:
          description: The properties of the image definition that are specific to
            the target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - HostingUnit
      - ImageDefinitionName
      - OsType
      title: CreateImageDefinitionDetailRequestModel
      type: object
    CreateImageDefinitionRequestModel:
      description: Request object for creation of image definitions.
      example:
        ImageVersion: null
        ImageDefinition: null
      properties:
        ImageDefinition:
          $ref: '#/components/schemas/CreateImageDefinitionRequestModel_ImageDefinition'
        ImageVersion:
          $ref: '#/components/schemas/CreateImageDefinitionRequestModel_ImageVersion'
      title: CreateImageDefinitionRequestModel
      type: object
    CreateImageVersionRequestModel:
      description: Request object for creation of image versions.
      example:
        MasterImageVM: MasterImageVM
        WriteBackCacheMemorySizeMB: 5
        ServiceOffering: ServiceOffering
        Scopes:
        - Scopes
        - Scopes
        NetworkMapping:
        - DeviceNameOrId: DeviceNameOrId
          NetworkDeviceNameOrId: NetworkDeviceNameOrId
          NetworkPath: NetworkPath
        - DeviceNameOrId: DeviceNameOrId
          NetworkDeviceNameOrId: NetworkDeviceNameOrId
          NetworkPath: NetworkPath
        ImageVersionDescription: ImageVersionDescription
        MachineProfile: MachineProfile
        WriteBackCacheDiskSizeGB: 1
        VMCpuCount: 171976544
        VMMemoryMB: 1294386358
        CustomProperties:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        MasterImageVM:
          description: |-
            The path in the resource pool to the virtual machine snapshot
            or VM template that will be used. This identifies the hard disk
            to be used and the default values for the memory and processors.
            This must be a path to a Snapshot or Template item in the
            resource pool to which the Image Version is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        ServiceOffering:
          description: The hypervisor resource path of the Cloud service offering
            to use when creating machines.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        MachineProfile:
          description: |-
            The path in the resource pool to the virtual machine template that will be used.
            This identifies the VM template to be used and the default values for the tags,
            virtual machine size, boot diagnostics, host cache property of OS disk,
            accelerated networking and availability zone.
            This must be a path to a Virtual machine or Template item in the
            resource pool to which the Image Version is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        VMCpuCount:
          description: |-
            The number of processors that virtual machines created for the
            image preparing should use.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        VMMemoryMB:
          description: |-
            The maximum amount of memory that virtual machines created for the
            image preparing should use.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        WriteBackCacheDiskSizeGB:
          description: |-
            The size in GB of any temporary storage disk used by the write back cache.
            Should be used in conjunction with WriteBackCacheMemorySizeMB.
          format: int32
          type: integer
        WriteBackCacheMemorySizeMB:
          description: |-
            The size in MB of any write back cache if required.
            Should be used in conjunction with WriteBackCacheDiskSizeGB.
          format: int32
          type: integer
        Scopes:
          description: |-
            Administrative scopes which the newly created image version will
            be a part of.
          items:
            type: string
          type: array
        NetworkMapping:
          description: |-
            Specifies how the attached NICs are mapped to networks.  If this parameter is
            omitted, provisioned VMs are created with a single NIC, which is mapped to the
            default network in the hypervisor resource pool.  If this parameter is supplied,
            machines are created with the number of NICs specified in the map, and each NIC
            is attached to the specified network.
          items:
            $ref: '#/components/schemas/NetworkMapRequestModel'
          title: "NetworkMapRequestModel[]"
          type: array
        CustomProperties:
          description: |-
            The properties of the image version that are specific to the
            target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ImageVersionDescription:
          description: The description associated with the image version.
          type: string
      title: CreateImageVersionRequestModel
      type: object
    CreateInstalledAppRequestModel:
      description: Request object for installed application properties.
      properties:
        CommandLineArguments:
          description: |-
            Specifies the command-line arguments to use when launching the
            executable. Environment variables can be used.
          maxLength: 8191
          type: string
        CommandLineExecutable:
          description: |-
            Specifies the name of the executable file to launch. The full
            path need not be provided if it's already in the path.
            Environment variables can also be used.
          maxLength: 8191
          minLength: 1
          type: string
        WorkingDirectory:
          description: "Specifies which working directory the executable is launched\n\
            from. Environment variables can be used. "
          type: string
      required:
      - CommandLineExecutable
      title: CreateInstalledAppRequestModel
      type: object
    CreateLicensingAdminRequestModel:
      description: Request object for creation of licensing admin.
      example:
        AccountSamName: AccountSamName
        IsGroup: true
        Permissions: "{}"
        AccountSid: AccountSid
      properties:
        AccountSamName:
          description: The same name of the account
          minLength: 1
          type: string
        AccountSid:
          description: The sid of the account
          type: string
        Permissions:
          allOf:
          - $ref: '#/components/schemas/LicensingPermissionLevel'
          description: The permission of the account
          type: object
        IsGroup:
          description: Whether this account is a group account
          type: boolean
      required:
      - AccountSamName
      title: CreateLicensingAdminRequestModel
      type: object
    CreateMachineCatalogProvisioningSchemeRequestModel:
      description: |-
        Request object for the scheme used for provisioned
        machines in a machine catalog.
      properties:
        ResourcePool:
          description: The HostingUnit name or Id in which machine catalog locates
          type: string
        MasterImagePath:
          description: |-
            The path in the resource pool to the virtual machine snapshot
            or VM template that will be used. This identifies the hard disk
            to be used and the default values for the memory and processors.
            This must be a path to a Snapshot or Template item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        ImageVersion:
          $ref: '#/components/schemas/CreateMachineCatalogProvisioningSchemeRequestModel_ImageVersion'
        MachineProfilePath:
          description: |-
            The path in the resource pool to the virtual machine template that will be used.
            This identifies the VM template to be used and the default values for the tags,
            virtual machine size, boot diagnostics, host cache property of OS disk,
            accelerated networking and availability zone.
            This must be a path to a Virtual machine or Template item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        MasterImageNote:
          description: The note for the master image.
          type: string
        CpuCount:
          description: |-
            The number of processors that virtual machines created from the
            provisioning scheme should use.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        CoresPerCpuCount:
          description: |-
            The number of cores per processor that virtual machines created from the
            provisioning scheme should use.
          format: int32
          maximum: 99
          minimum: 0
          type: integer
        MemoryMB:
          description: |-
            The maximum amount of memory that virtual machines created from the
            provisioning scheme should use.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        UseWriteBackCache:
          default: false
          description: |-
            Indicates whether or not write back cache is enabled for the VMs created from this provisioning scheme.
            Optional; default is `false`.
          type: boolean
        WriteBackCacheDiskSizeGB:
          description: |-
            The size in GB of any temporary storage disk used by the write back cache.
            Should be used in conjunction with WriteBackCacheMemorySizeMB.
          format: int32
          type: integer
        WriteBackCacheMemorySizeMB:
          description: |-
            The size in MB of any write back cache if required.
            Should be used in conjunction with WriteBackCacheDiskSizeGB.
          format: int32
          type: integer
        PrepareImage:
          default: true
          description: |-
            Indicates whether image preparation should be performed on this provisioning scheme.
            Optional; default is `true`.
          type: boolean
        NetworkMapping:
          description: |-
            Specifies how the attached NICs are mapped to networks.  If this parameter is
            omitted, provisioned VMs are created with a single NIC, which is mapped to the
            default network in the hypervisor resource pool.  If this parameter is supplied,
            machines are created with the number of NICs specified in the map, and each NIC
            is attached to the specified network.
          items:
            $ref: '#/components/schemas/NetworkMapRequestModel'
          title: "NetworkMapRequestModel[]"
          type: array
        ServiceOfferingPath:
          description: The hypervisor resource path of the Cloud service offering
            to use when creating machines.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        SecurityGroups:
          description: The hypervisor resource path(s) of the Cloud security group(s)
            to use when creating machines.
          items:
            type: string
          type: array
        DedicatedTenancy:
          default: false
          description: |-
            Indicates whether to use dedicated tenancy when creating machines in Cloud Hypervisors.
            Optional; default is `false`.
          type: boolean
        TenancyType:
          allOf:
          - $ref: '#/components/schemas/TenancyType'
          description: |-
            Indicates whether to use tenancy type Shared, Instance or Host when creating machines in Cloud Hypervisors.
            Optional; default is `Shared`.
          type: object
        AzureAdJoinType:
          allOf:
          - $ref: '#/components/schemas/AzureAdJoinType'
          description: |-
            Indicates whether to use azure AD join type.
            Optional; default is `None`.
          type: object
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: |-
            Indicates whether to use identity type.
            Optional; default is `ActiveDirectory`.
          type: object
        DeviceManagementType:
          allOf:
          - $ref: '#/components/schemas/DeviceManagementType'
          description: |-
            Indicates whether to use device management type.
            Optional; default is `None`.
          type: object
        AzureADSecurityGroupName:
          description: Name of Azure AD security group to be created.
          type: string
        AzureADSecurityGroupNestId:
          description: |-
            The object id of the Azure AD security group to nest.

            Only valid for Azure.
          type: string
        AzureADTenantId:
          description: TenantId of Azure Directory.
          format: guid
          type: string
        CustomProperties:
          description: |-
            The properties of the provisioning scheme that are specific to the
            target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ResetAdministratorPasswords:
          default: false
          description: |-
            Indicates whether to reset the password for the administrator accounts on provisioned machines.
            Optional; default is `false`.
          type: boolean
        UseFullDiskCloneProvisioning:
          default: false
          description: |-
            Indicates that the virtual machines created from the provisioning scheme should be created using the dedicated full disk clone feature.
            Optional; default is `false`.
          type: boolean
        WorkGroupMachines:
          default: false
          description: |-
            Indicates whether to provision workgroup virtual machines e.g. non-domain joined.
            Optional; default is `false`.
          type: boolean
        NumTotalMachines:
          default: 1
          description: |-
            Number of machines to provision initially.  Optional; default is 1.  It is valid
            to request 0 machines initially.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        MachineAccountCreationRules:
          $ref: '#/components/schemas/CreateMachineCatalogProvisioningSchemeRequestModel_MachineAccountCreationRules'
        AvailableMachineAccounts:
          description: List of Active Directory machine accounts that are to be used
            when machines are provisioned.
          items:
            $ref: '#/components/schemas/MachineAccountRequestModel'
          title: "MachineAccountRequestModel[]"
          type: array
        PVSSite:
          description: PVS site id.
          type: string
        PVSVDisk:
          description: PVS vDisk id.
          type: string
      title: CreateMachineCatalogProvisioningSchemeRequestModel
      type: object
    CreateMachineCatalogRequestModel:
      description: Request object for creation of machine catalogs.
      example:
        SessionSupport: "{}"
        Description: Description
        PvsDomain: PvsDomain
        Zone: Zone
        AllocationType: "{}"
        MachineType: "{}"
        PvsCollectionIds:
        - PvsCollectionIds
        - PvsCollectionIds
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        PersistUserChanges: "{}"
        Name: Name
        HypervisorConnection: HypervisorConnection
        ProvisioningType: "{}"
        AdminFolder: AdminFolder
        PvsAddress: PvsAddress
        ProvisioningScheme: null
        IsRemotePC: false
        VdaUpgradeType: "{}"
        RemotePCEnrollmentScopes:
        - IncludeSubfolders: false
          OU: OU
          MachinesExcluded:
          - MachinesExcluded
          - MachinesExcluded
          IsOrganizationalUnit: false
          MachinesIncluded:
          - MachinesIncluded
          - MachinesIncluded
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
        - IncludeSubfolders: false
          OU: OU
          MachinesExcluded:
          - MachinesExcluded
          - MachinesExcluded
          IsOrganizationalUnit: false
          MachinesIncluded:
          - MachinesIncluded
          - MachinesIncluded
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
        Scopes:
        - Scopes
        - Scopes
        ProvisioningSchemeImportData: null
        Machines:
        - HypervisorConnection: HypervisorConnection
          HostedMachineId: HostedMachineId
          MachineName: MachineName
          AssignedIPAddress: AssignedIPAddress
          AssignedClientName: AssignedClientName
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
          InMaintenanceMode: false
        - HypervisorConnection: HypervisorConnection
          HostedMachineId: HostedMachineId
          MachineName: MachineName
          AssignedIPAddress: AssignedIPAddress
          AssignedClientName: AssignedClientName
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
          InMaintenanceMode: false
        MinimumFunctionalLevel: "{}"
      properties:
        AdminFolder:
          description: |-
            The admin folder in which the machine catalog
            should be created.
          type: string
        Name:
          description: |-
            Name of the machine catalog.  Each machine catalog within a site
            must have a unique name.  Required.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        AllocationType:
          allOf:
          - $ref: '#/components/schemas/AllocationType'
          description: Denotes how the machines in the catalog are allocated to a
            user.
          type: object
        Description:
          description: |-
            Description of the machine catalog.  Optional.  Default is no
            description.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        HypervisorConnection:
          description: |-
            Specifies the hypervisor connection to use for power management of
            machines in this machine catalog.
          type: string
        IsRemotePC:
          default: false
          description: |-
            Indicates whether or not the catalog is a RemotePC catalog.  Default
            is `false`.
          type: boolean
        RemotePCEnrollmentScopes:
          description: List of one or more remote PC enrollment scopes.
          items:
            $ref: '#/components/schemas/RemotePCEnrollmentScopeRequestModel'
          title: "RemotePCEnrollmentScopeRequestModel[]"
          type: array
        MachineType:
          allOf:
          - $ref: '#/components/schemas/MachineType'
          description: Type of the machines in the machine catalog.  Optional.
          type: object
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            The minimum functional level of machines in the machine catalog.
            Optional.  Default is based on a site setting; see
            DefaultMinimumFunctionalLevel.
          type: object
        PersistUserChanges:
          allOf:
          - $ref: '#/components/schemas/PersistChanges'
          description: |-
            Specifies how user changes are persisted on machines in the machine
            catalog.  Required if SessionSupport is
            SingleSession and
            AllocationType is Static.
            Cannot be specified otherwise.
          type: object
        ProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ProvisioningType'
          description: |-
            Specifies how the machines are provisioned in the catalog.
            Required.
          type: object
        ProvisioningScheme:
          $ref: '#/components/schemas/CreateMachineCatalogRequestModel_ProvisioningScheme'
        ProvisioningSchemeImportData:
          $ref: '#/components/schemas/CreateMachineCatalogRequestModel_ProvisioningSchemeImportData'
        Machines:
          description: |-
            List of machines to add to the catalog.

            Must not be specified if  equals
             or
            .  Optional otherwise.  Default is
            not to add any machines.
          items:
            $ref: '#/components/schemas/AddMachineToMachineCatalogRequestModel'
          title: "AddMachineToMachineCatalogRequestModel[]"
          type: array
        PvsAddress:
          description: |-
            IP address of the PVS server to be used.  This only applies if the
            ProvisioningType is PVS.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        PvsDomain:
          description: |-
            The domain of the PVS server to be used.
            This only applies if the ProvisioningType is
            PVS.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        PvsCollectionIds:
          description: |-
            Collection IDs of PVS collections containing machines that should be
            added to the catalog.  This only applies if the
            ProvisioningType is
            PVS, and is required in that case.

            Each item must be a valid PVS collection ID residing on the PVS
            server located at the specified .
          items:
            type: string
          type: array
        Scopes:
          description: |-
            Administrative scopes which the newly created machine catalog will
            be a part of.
          items:
            type: string
          type: array
        Tenants:
          description: Tenant(s) to associate the machine catalog with.
          items:
            type: string
          type: array
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: |-
            Specifies the session support of the machines in the machine
            catalog.  Required.
          type: object
        VdaUpgradeType:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeType'
          description: |-
            VDA upgrade type of this machine catalog.  Optional.
            If not set, the upgrade type defaults to None
            and VDA machines in this catalog will not be upgraded automatically.
          type: object
        Zone:
          description: |-
            Zone the machine catalog is associated with.  Optional.  If not
            specified, the machine catalog is associated with the primary zone.
            See PrimaryZone.
          type: string
        Metadata:
          description: The metadata of machine catalog.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - Name
      - ProvisioningType
      - SessionSupport
      title: CreateMachineCatalogRequestModel
      type: object
    CreateMachineConfigurationRequestModel:
      description: Request object for creating a machine configuration.
      example:
        Policy: Policy
        Description: Description
        ConfigurationSlotId: 0
        LeafName: LeafName
      properties:
        ConfigurationSlotId:
          description: Id of the configuration slot to associate with this machine
            configuration.
          format: int32
          type: integer
        LeafName:
          description: Name of the new machine configuration.
          maxLength: 64
          minLength: 1
          type: string
        Policy:
          description: |-
            Policy settings data created with the SDK snap-in that matches the SettingsGroup of the configuration slot.
            Base64 encrypted.
          minLength: 1
          type: string
        Description:
          description: Description of the new machine configuration.
          maxLength: 512
          type: string
      required:
      - ConfigurationSlotId
      - LeafName
      - Policy
      title: CreateMachineConfigurationRequestModel
      type: object
    CreateUpgradeScheduleForMachinesRequestModel:
      description: |-
        Request object for creation of VDA upgrade schedule on a
        list of machines.
      example:
        DurationInHours: 0
        MachineNameOrIds:
        - MachineNameOrIds
        - MachineNameOrIds
        StartDateTimeUtc: 2000-01-23T04:56:07.000+00:00
      properties:
        MachineNameOrIds:
          description: |-
            Machine list to create VDA upgrade schedules for.
            Item can be machine name or Id.
          items:
            type: string
          type: array
        StartDateTimeUtc:
          description: |-
            UTC time to start the Vda upgrade. Must be a future time.
            If set to null, the upgrade should be started at once.
          format: date-time
          title: DateTime
          type: string
        DurationInHours:
          description: Timeout duration in hours. Valid range is 1 to 24.
          format: int32
          type: integer
      required:
      - DurationInHours
      - MachineNameOrIds
      title: CreateUpgradeScheduleForMachinesRequestModel
      type: object
    CreateUpgradeScheduleRequestModel:
      description: |-
        Request object for creation of VDA upgrade schedule on a
        machine catalog or machine object.
        There should not already be an upgrade schedule on the same object
        in UpgradeScheduled or UpgradeInProgress state.
        In such cases, you can only update or cancel the schedule.
      example:
        DurationInHours: 0
        VDAComponentsAndFeaturesRequestModel: null
        StartDateTimeUtc: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDateTimeUtc:
          description: |-
            UTC time to start the Vda upgrade. Must be a future time.
            If set to null, the upgrade should be started at once.
          format: date-time
          title: DateTime
          type: string
        DurationInHours:
          description: Timeout duration in hours. Valid range is 1 to 24.
          format: int32
          type: integer
        VDAComponentsAndFeaturesRequestModel:
          $ref: '#/components/schemas/CreateUpgradeScheduleRequestModel_VDAComponentsAndFeaturesRequestModel'
      required:
      - DurationInHours
      title: CreateUpgradeScheduleRequestModel
      type: object
    CreateUserZonePreferenceModel:
      description: Request object for specifying user zone preference properties.
      example:
        ZoneId: ZoneId
        Name: Name
      properties:
        ZoneId:
          description: Zone Id.
          minLength: 1
          type: string
        Name:
          description: "Name of the user or user group. Could be SamName, FullName,\
            \ SID or UPN"
          minLength: 1
          type: string
      required:
      - Name
      - ZoneId
      title: CreateUserZonePreferenceModel
      type: object
    CreateZoneRequestModel:
      description: Request object for creation of zones.
      example:
        Description: Description
        ResourceLocation: ResourceLocation
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Name: Name
      properties:
        Name:
          description: "Name of the zone. Each zone within a site must have a unique\
            \ name. \nName is the only required property in creating a new zone."
          maxLength: 64
          minLength: 1
          type: string
        Description:
          description: Description of the zone.
          maxLength: 512
          type: string
        ResourceLocation:
          description: Resource location associated with the zone.
          type: string
        Metadata:
          description: The metadata of the Zone.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - Name
      title: CreateZoneRequestModel
      type: object
    CustomReportDataResponseModel:
      example:
        HtmlSummaryData: HtmlSummaryData
        HtmlDetailsData: HtmlDetailsData
        CsvData: CsvData
      properties:
        CsvData:
          type: string
        HtmlSummaryData:
          type: string
        HtmlDetailsData:
          type: string
      title: CustomReportDataResponseModel
      type: object
    CustomReportDateRangeType:
      description: ""
      enum:
      - All
      - Last24Hours
      - Last7Days
      - Last4Weeks
      - Custom
      title: CustomReportDateRangeType
      type: string
      x-enumNames:
      - All
      - Last24Hours
      - Last7Days
      - Last4Weeks
      - Custom
    CustomReportFormatType:
      description: ""
      enum:
      - Html
      - Csv
      - Both
      title: CustomReportFormatType
      type: string
      x-enumNames:
      - Html
      - Csv
      - Both
    CustomReportInfoRequestModel:
      example:
        StartDate: StartDate
        CustomReportFormat: "{}"
        EndDate: EndDate
        CustomReportDateRange: "{}"
      properties:
        StartDate:
          description: "End date of the report. When CustomReportDateRangeType is\
            \ Custom, start date should be provided."
          type: string
        EndDate:
          description: "End date of the report. When CustomReportDateRangeType is\
            \ Custom, end date should be provided."
          type: string
        CustomReportFormat:
          allOf:
          - $ref: '#/components/schemas/CustomReportFormatType'
          description: "Custom report format: csv/html/both"
          type: object
        CustomReportDateRange:
          allOf:
          - $ref: '#/components/schemas/CustomReportDateRangeType'
          description: "Report date range type: All/Last24Hours/Last7Days/Last4Weeks/Custom "
          type: object
      required:
      - CustomReportDateRange
      - CustomReportFormat
      title: CustomReportInfoRequestModel
      type: object
    DatabaseChangePropertiesModel:
      description: Database change properties model.
      example:
        DatabaseServerAddress: DatabaseServerAddress
        SkipWarning: true
        DatabaseName: DatabaseName
        ManualUpdateDatabase: true
      properties:
        DatabaseName:
          description: Name of database
          minLength: 1
          type: string
        DatabaseServerAddress:
          description: Server address of database
          minLength: 1
          type: string
        ManualUpdateDatabase:
          description: Indicates whether the database should be created manually by
            scripts
          type: boolean
        SkipWarning:
          description: Indicates whether ignore warnings where changing database
          type: boolean
      required:
      - DatabaseName
      - DatabaseServerAddress
      - ManualUpdateDatabase
      - SkipWarning
      title: DatabaseChangePropertiesModel
      type: object
    DatabaseChangeScriptModel:
      description: Response object for DatabaseChangeScript.
      properties:
        FileName:
          description: The filename of the text file.
          type: string
        Content:
          description: The contents of the text file.
          type: string
      title: DatabaseChangeScriptModel
      type: object
    DatabaseChangeScriptModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDatabaseChangeScriptModel'
      - description: Response object for collections of DatabaseChangeScriptModel.
        type: object
      title: DatabaseChangeScriptModelCollection
    DatabaseChangeScriptPropertiesModel:
      description: Database change script properties model.
      example:
        DatabaseServerAddress: DatabaseServerAddress
        DatabaseName: DatabaseName
      properties:
        DatabaseName:
          description: Name of database
          minLength: 1
          type: string
        DatabaseServerAddress:
          description: Server address of database
          minLength: 1
          type: string
      required:
      - DatabaseName
      - DatabaseServerAddress
      title: DatabaseChangeScriptPropertiesModel
      type: object
    DatabaseResponseModel:
      description: Database response model.
      example:
        DatabaseServerAddress: DatabaseServerAddress
        DataStore: "{}"
        CanChangeDatabase: true
        DatabaseName: DatabaseName
        MirrorDatabaseServerAddress: MirrorDatabaseServerAddress
      properties:
        DataStore:
          allOf:
          - $ref: '#/components/schemas/DataStore'
          description: Type of database.
          type: object
        DatabaseName:
          description: Name of database
          type: string
        DatabaseServerAddress:
          description: Server address of database
          type: string
        MirrorDatabaseServerAddress:
          description: Mirror address of database
          type: string
        CanChangeDatabase:
          description: Indicates whether this database can be changed
          type: boolean
      title: DatabaseResponseModel
      type: object
    DatabaseResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDatabaseResponseModel'
      - description: Response object for collections of DatabaseResponseModel.
        type: object
      title: DatabaseResponseModelCollection
    DataStore:
      description: Types of DataStore.
      enum:
      - Unknown
      - Site
      - Logging
      - Monitor
      title: DataStore
      type: string
      x-enumNames:
      - Unknown
      - Site
      - Logging
      - Monitor
    DefaultPrinterOption:
      description: Predefined default printer.
      enum:
      - NotConfigured
      - DoNotAdjust
      - ClientDefault
      - SpecificPrinter
      - GenericUniversalPrinter
      - PDFPrinter
      title: DefaultPrinterOption
      type: string
      x-enumNames:
      - NotConfigured
      - DoNotAdjust
      - ClientDefault
      - SpecificPrinter
      - GenericUniversalPrinter
      - PDFPrinter
    DelegatedAdminPermissionResponseModel:
      description: Response object for a delegated admin permission.
      example:
        Description: Description
        Id: Id
        IsReadOnly: true
        Operations:
        - Operations
        - Operations
        Name: Name
      properties:
        Id:
          description: |-
            Id of the permission.
            Needs to be made globally unique (perhaps add site id)
          minLength: 1
          type: string
        Name:
          description: Name of the permission.
          minLength: 1
          type: string
        Description:
          description: Description of the permission.
          type: string
        IsReadOnly:
          description: |-
            Indicates whether the permission is restricted to
            read-only operations.
            Was: ReadOnly
          type: boolean
        Operations:
          description: List of operations that the permission allows.
          items:
            type: string
          type: array
      required:
      - Id
      - IsReadOnly
      - Name
      - Operations
      title: DelegatedAdminPermissionResponseModel
      type: object
    DeleteAdministratorConsequence:
      description: ""
      enum:
      - Unknown
      - NoRightsLost
      - SomeRightsLost
      - AllRightsLost
      - CannotDeleteLastFullAdmin
      title: DeleteAdministratorConsequence
      type: string
      x-enumNames:
      - Unknown
      - NoRightsLost
      - SomeRightsLost
      - AllRightsLost
      - CannotDeleteLastFullAdmin
    DeliveryControllerDeleteScriptModel:
      description: Response object for DeliveryControllerDeleteScript.
      properties:
        FileName:
          description: The filename of the text file.
          type: string
        Content:
          description: The contents of the text file.
          type: string
      title: DeliveryControllerDeleteScriptModel
      type: object
    DeliveryControllerDeleteScriptModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDeliveryControllerDeleteScriptModel'
      - description: Response object for collections of DeliveryControllerDeleteScriptModel.
        type: object
      title: DeliveryControllerDeleteScriptModelCollection
    DeliveryControllerResponseModel:
      description: Delivery Controller response model.
      example:
        LastActivityTime: LastActivityTime
        DnsName: DnsName
        ControllerState: "{}"
        ZoneId: ZoneId
        ZonableItemName: ZonableItemName
        Sid: Sid
        ZoneName: ZoneName
        ServiceStatuses:
        - ServiceType: "{}"
          ServiceStatus: "{}"
        - ServiceType: "{}"
          ServiceStatus: "{}"
        MachineName: MachineName
        ZonableItemDescription: ZonableItemDescription
        ServiceHostId: ServiceHostId
        OSType: OSType
        RegisteredDesktops: 0
        ControllerVersion: ControllerVersion
        LastStartTime: LastStartTime
        OSVersion: OSVersion
        Id: Id
        ZonableItemId: ZonableItemId
        ZonableItemType: "{}"
      properties:
        Sid:
          description: The sid of the delivery controller
          type: string
        Id:
          description: The id(uuid) of the delivery controller
          type: string
        MachineName:
          description: The machine name of the delivery controller
          type: string
        DnsName:
          description: The dns name of the delivery controller
          type: string
        ServiceHostId:
          description: The service host id of the delivery controller
          format: guid
          type: string
        ControllerVersion:
          description: The controller version of the delivery controller
          type: string
        RegisteredDesktops:
          description: The number of registered desktops in the delivery controller
          format: int32
          type: integer
        LastActivityTime:
          description: The LastActivityTime of the delivery controller
          type: string
        LastStartTime:
          description: The LastStartTime of the delivery controller
          type: string
        OSVersion:
          description: The OSVersion of the delivery controller
          type: string
        OSType:
          description: The OSType of the delivery controller
          type: string
        ServiceStatuses:
          description: The service statuses of the delivery controller.
          items:
            $ref: '#/components/schemas/DeliveryControllerServiceStatusResponseModel'
          title: "DeliveryControllerServiceStatusResponseModel[]"
          type: array
        ControllerState:
          allOf:
          - $ref: '#/components/schemas/DeliveryControllerState'
          description: The State of the delivery controller
          type: object
        ZoneId:
          description: The ID of the zone this zonable item belongs to
          type: string
        ZonableItemId:
          description: The Id of this zonable Item. This is a generic name to access
            non-generic properties
          type: string
        ZonableItemType:
          allOf:
          - $ref: '#/components/schemas/ZonableItemType'
          description: The type of Zonable item this is
          type: object
        ZoneName:
          description: The Zone's Name
          type: string
        ZonableItemName:
          description: Tthe name of this zonable Item
          type: string
        ZonableItemDescription:
          description: The description of this zonable Item
          type: string
      title: DeliveryControllerResponseModel
      type: object
    DeliveryControllerResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDeliveryControllerResponseModel'
      - description: Response object for collections of DeliveryControllerResponseModel.
        type: object
      title: DeliveryControllerResponseModelCollection
    DeliveryControllerServiceStatusResponseModel:
      description: Service status response model of the delivery controller.
      example:
        ServiceType: "{}"
        ServiceStatus: "{}"
      properties:
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/ControllerServiceType'
          description: Type of a service.
          type: object
        ServiceStatus:
          allOf:
          - $ref: '#/components/schemas/ControllerServiceStatus'
          description: Status of a service.
          type: object
      title: DeliveryControllerServiceStatusResponseModel
      type: object
    DeliveryControllerState:
      description: Type of DeliveryController state
      enum:
      - Unknown
      - Failed
      - "Off"
      - Transitioning
      - Active
      title: DeliveryControllerState
      type: string
      x-enumNames:
      - Unknown
      - Failed
      - "Off"
      - Transitioning
      - Active
    DeliveryGroupAddApplicationsRequestModel:
      description: Request object for adding applications to a delivery group.
      example:
        ExistingApplicationGroups:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
        NewApplications:
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        - BrowserName: BrowserName
          IncludedUserFilterEnabled: false
          ApplicationGroups:
          - ApplicationGroups
          - ApplicationGroups
          MaxPerUserInstances: 0
          Description: Description
          HomeZoneMode: "{}"
          Name: Name
          WaitForPrinterCreation: false
          PublishedName: PublishedName
          ClientFolder: ClientFolder
          StartMenuFolder: StartMenuFolder
          Visible: true
          ShortcutAddedToDesktop: false
          InstalledAppProperties: null
          AppVAppProperties: null
          MaxTotalInstances: 6
          CpuPriorityLevel: "{}"
          DoNotEnumerate: false
          Enabled: true
          HomeZone: HomeZone
          IconFromClient: false
          ApplicationType: "{}"
          ShortcutAddedToStartMenu: false
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          ContentLocation: ContentLocation
          ApplicationFolder: ApplicationFolder
          Icon: Icon
        ExistingApplications:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
      properties:
        ExistingApplications:
          description: |-
            List of existing applications to be associated with the
            delivery group.
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
        NewApplications:
          description: |-
            List of applications which should be created and associated
            with the delivery group.
          items:
            $ref: '#/components/schemas/CreateApplicationRequestModel'
          title: "CreateApplicationRequestModel[]"
          type: array
        ExistingApplicationGroups:
          description: |-
            List of existing application groups to be associated with the
            delivery group.
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
      title: DeliveryGroupAddApplicationsRequestModel
      type: object
    DeliveryGroupAddMachinesRequestModel:
      description: Delivery group add machines request
      example:
        Count: 1294386358
        AssignMachinesToUsers:
        - Users:
          - Users
          - Users
          Machine: Machine
        - Users:
          - Users
          - Users
          Machine: Machine
        MachineCatalog: MachineCatalog
      properties:
        MachineCatalog:
          description: The machine catalog from which to add machines. May be an Id
            or name.
          minLength: 1
          type: string
        Count:
          description: |-
            The number of machines to assign from the machine catalog
            to the delivery group.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        AssignMachinesToUsers:
          description: List of specific machine assignments to users.
          items:
            $ref: '#/components/schemas/AssignMachineToUserRequestModel'
          title: "AssignMachineToUserRequestModel[]"
          type: array
      required:
      - MachineCatalog
      title: DeliveryGroupAddMachinesRequestModel
      type: object
    DeliveryGroupAssociationResponseModel:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      - $ref: '#/components/schemas/DeliveryGroupAssociationResponseModel_allOf'
      title: DeliveryGroupAssociationResponseModel
    DeliveryGroupAssociationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDeliveryGroupAssociationResponseModel'
      - description: Collection type of DeliveryGroupAssociationResponseModel
        type: object
      title: DeliveryGroupAssociationResponseModelCollection
    DeliveryGroupDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/DeliveryGroupResponseModel'
      - $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf'
      title: DeliveryGroupDetailResponseModel
    DeliveryGroupResponseModel:
      description: Response object for a delivery group.
      properties:
        Id:
          description: Globally unique identifier of the delivery group.
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        UserManagement:
          allOf:
          - $ref: '#/components/schemas/UserManagementModel'
          description: |-
            Indicates whether users are managed in the Citrix Cloud Library, or
            within Studio.
          type: object
        Delivering:
          allOf:
          - $ref: '#/components/schemas/DeliveryKind'
          description: |-
            Types of resources currently being delivered from
            the delivery group.
            CHANGE: was:
            public DeliveredItemType Delivering { get; set; }
          type: object
        DeliveryType:
          allOf:
          - $ref: '#/components/schemas/DeliveryKind'
          description: |-
            Types of resources that may be delivered from the
            delivery group.
          type: object
        Description:
          description: |-
            A description for this delivery group useful for administrators
            of the site.
          type: string
        DesktopsAvailable:
          description: |-
            Number of machines in the delivery group which are available
            to launch sessions on.
          format: int32
          type: integer
        DesktopsDisconnected:
          description: |-
            Number of desktops in the delivery group which have
            disconnected sessions.
          format: int32
          type: integer
        DesktopsFaulted:
          description: |-
            Number of desktops in the delivery group which are in a
            faulted state.
          format: int32
          type: integer
        DesktopsUnregistered:
          description: |-
            Number of desktops in the delivery group which have failed
            to register.
          format: int32
          type: integer
        Enabled:
          description: |-
            Whether the delivery group is enabled.  All resources published
            on a disabled delivery group do not appear to users.
          type: boolean
        HasBeenPromoted:
          description: |-
            Whether the delivery group was previously promoted from a lower
            MinimumFunctionalLevel.
          type: boolean
        HasBeenPromotedFrom:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            If HasBeenPromoted is `true`, this is the
            previous MinimumFunctionalLevel.
          type: object
        InMaintenanceMode:
          description: |-
            Whether the delivery group is in maintenance mode;
            a delivery group in maintenance mode will not allow users to
            connect or reconnect to machines in the delivery group.
          type: boolean
        IsBroken:
          description: Whether the delivery group is currently in a "Broken" state.
          type: boolean
        IsRemotePC:
          description: Whether the delivery group is comprised of RemotePC VDAs.
          type: boolean
        MachineLogOnType:
          allOf:
          - $ref: '#/components/schemas/MachineLogOnType'
          description: The login type for machines in this desktop group.
          type: object
        Metadata:
          description: The metadata of delivery group.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: The minimum functional level of machines in the delivery group.
          type: object
        Name:
          description: |-
            Simple administrative name of delivery group within parent admin folder (if any). This
            property is not guaranteed unique across all catalogs.
          minLength: 1
          type: string
        FullName:
          description: Unique administrative name of delivery group.
          type: string
        PublishedName:
          description: The name of the desktop group as it is to appear to the user
            in StoreFront.
          type: string
        PolicySetGuid:
          description: |-
            The Guid of the policy set that is assigned to this desktop group. If the value is Guid.Empty, there is
            no policy set assigned to the desktop group.
          format: guid
          type: string
        ProductCode:
          description: The product code of the delivery group.
          type: string
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model of the delivery group.
          type: object
        RequireUserHomeZone:
          description: |-
            Whether the resources from this delivery group are required to
            launch within the user's home zone.
          type: boolean
        Scopes:
          description: Administrative scopes which the delivery group is part of.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        Tenants:
          description: |-
            The tenant(s) that the delivery group is assigned to.  If `null`,
            the delivery group is not assigned to tenants, and may be used by
            any tenant, including future added tenants.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        SessionCount:
          description: Number of sessions currently running on machines in the delivery
            group.
          format: int32
          type: integer
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: Type of session support provided by machines in the delivery
            group.
          type: object
        SharingKind:
          allOf:
          - $ref: '#/components/schemas/SharingKind'
          description: |-
            Sharing mode for machines in the delivery group.
            CHANGE: was:
            public DesktopKind DesktopKind { get; set; }
          type: object
        TotalApplications:
          description: Total number of applications published on the delivery group.
          format: int32
          type: integer
        TotalDesktops:
          description: Total number of desktops in the delivery group.
          format: int32
          type: integer
        ApplicationGroupCompatibility:
          allOf:
          - $ref: '#/components/schemas/AppGroupCompatibility'
          description: Indicates compatibility of the delivery group with application
            groups.
          type: object
        ApplicationCompatibility:
          allOf:
          - $ref: '#/components/schemas/AppOrDesktopCompatibility'
          description: Indicates compatibility of the delivery group with applications.
          type: object
        DesktopCompatibility:
          allOf:
          - $ref: '#/components/schemas/AppOrDesktopCompatibility'
          description: Indicates compatibility of the delivery group with desktops.
          type: object
        AdminFolder:
          $ref: '#/components/schemas/CatalogSearchResponseModel_AdminFolder'
      required:
      - ApplicationCompatibility
      - ApplicationGroupCompatibility
      - Delivering
      - DeliveryType
      - DesktopCompatibility
      - DesktopsAvailable
      - DesktopsDisconnected
      - DesktopsFaulted
      - DesktopsUnregistered
      - Enabled
      - HasBeenPromoted
      - Id
      - InMaintenanceMode
      - IsBroken
      - IsRemotePC
      - MinimumFunctionalLevel
      - Name
      - RequireUserHomeZone
      - Scopes
      - SessionCount
      - SessionSupport
      - SharingKind
      - TotalApplications
      - TotalDesktops
      title: DeliveryGroupResponseModel
      type: object
    DeliveryGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDeliveryGroupResponseModel'
      - description: Response object for collections of items.
        type: object
      title: DeliveryGroupResponseModelCollection
    DeliveryGroupSearchFilterGroupRequestModel:
      description: Advanced search filter group for applications
      example:
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        SearchFilterGroupType: "{}"
        SearchFilterGroups:
        - null
        - null
        SearchFilterGroupsType: "{}"
      properties:
        SearchFilterGroupType:
          allOf:
          - $ref: '#/components/schemas/DeliveryGroupSearchFilterGroupType'
          description: The type of search filter group
          type: object
        SearchFilters:
          description: The search filters in search filter group
          items:
            $ref: '#/components/schemas/DeliveryGroupSearchFilterRequestModel'
          title: "DeliveryGroupSearchFilterRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/DeliveryGroupSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
        SearchFilterGroups:
          description: The search filter group in search filter groups
          items:
            $ref: '#/components/schemas/DeliveryGroupSearchFilterGroupRequestModel'
          title: "DeliveryGroupSearchFilterGroupRequestModel[]"
          type: array
      title: DeliveryGroupSearchFilterGroupRequestModel
      type: object
    DeliveryGroupSearchFilterGroupsType:
      description: The search filter groups type
      enum:
      - Or
      - And
      title: DeliveryGroupSearchFilterGroupsType
      type: string
      x-enumNames:
      - Or
      - And
    DeliveryGroupSearchFilterGroupType:
      description: The search filter group type
      enum:
      - Or
      - And
      title: DeliveryGroupSearchFilterGroupType
      type: string
      x-enumNames:
      - Or
      - And
    DeliveryGroupSearchFilterRequestModel:
      description: Advanced search filter for delivery groups.
      example:
        Operator: "{}"
        Value: Value
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/DeliveryGroupSearchProperty'
          description: Property to filter on.
          type: object
        Value:
          description: Value to match.
          type: string
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchOperator'
          description: |-
            The comparison operator to use when determining
            if an item matches the filter.
          type: object
      required:
      - Operator
      - Property
      title: DeliveryGroupSearchFilterRequestModel
      type: object
    DeliveryGroupSearchProperty:
      description: Delivery Group properties can be used for advanced deliveryGroup
        searches.
      enum:
      - Uid
      - Description
      - DeliveryType
      - Enabled
      - InMaintenanceMode
      - IsRemotePC
      - MachineLogOnType
      - Name
      - ProductCode
      - SessionSupport
      - TotalApplications
      title: DeliveryGroupSearchProperty
      type: string
      x-enumNames:
      - Uid
      - Description
      - DeliveryType
      - Enabled
      - InMaintenanceMode
      - IsRemotePC
      - MachineLogOnType
      - Name
      - ProductCode
      - SessionSupport
      - TotalApplications
    DeliveryGroupSearchRequestModel:
      description: Request model for defining delivery group search criteria.
      example:
        SortCriteria: null
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        BasicSearchString: BasicSearchString
        SearchFilterGroups:
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        SearchFilterGroupsType: "{}"
      properties:
        BasicSearchString:
          description: |-
            Basic search string. Specify a string which will match
            if contained within some string property of the deliveryGroup.
          type: string
        SearchFilters:
          description: List of advanced search filters.
          items:
            $ref: '#/components/schemas/DeliveryGroupSearchFilterRequestModel'
          title: "DeliveryGroupSearchFilterRequestModel[]"
          type: array
        SortCriteria:
          $ref: '#/components/schemas/DeliveryGroupSearchRequestModel_SortCriteria'
        SearchFilterGroups:
          description: List of advanced search filter groups.
          items:
            $ref: '#/components/schemas/DeliveryGroupSearchFilterGroupRequestModel'
          title: "DeliveryGroupSearchFilterGroupRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/DeliveryGroupSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
      title: DeliveryGroupSearchRequestModel
      type: object
    DeliveryGroupSortCriteriaRequestModel:
      description: DeliveryGroup sort criteria.
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/DeliveryGroupSearchProperty'
          description: Property to sort on.
          type: object
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/ListSortDirection'
          description: Direction to sort the property.
          type: object
      required:
      - Property
      - SortDirection
      title: DeliveryGroupSortCriteriaRequestModel
      type: object
    DeliveryGroupTestResponseModel:
      description: Response object for a delivery group test result.
      example:
        NumWarnings: 6
        DeliveryGroup: null
        NumFailures: 1
        NumPassed: 0
      properties:
        DeliveryGroup:
          $ref: '#/components/schemas/DeliveryGroupTestResponseModel_DeliveryGroup'
        NumPassed:
          description: The number of tests that passed.
          format: int32
          type: integer
        NumWarnings:
          description: The number of warnings that were found.
          format: int32
          type: integer
        NumFailures:
          description: The number of tests that failed.
          format: int32
          type: integer
      required:
      - DeliveryGroup
      - NumFailures
      - NumPassed
      - NumWarnings
      title: DeliveryGroupTestResponseModel
      type: object
    DeliveryKind:
      description: Types of resources delivered from a delivery group.
      enum:
      - Unknown
      - DesktopsOnly
      - DesktopsAndApps
      - AppsOnly
      title: DeliveryKind
      type: string
      x-enumNames:
      - Unknown
      - DesktopsOnly
      - DesktopsAndApps
      - AppsOnly
    DeregistrationReason:
      description: Reasons why a machine may have deregistered from a broker.
      enum:
      - Unknown
      - AgentShutdown
      - AgentSuspended
      - AgentRequested
      - IncompatibleVersion
      - AgentAddressResolutionFailed
      - AgentNotContactable
      - AgentWrongActiveDirectoryOU
      - EmptyRegistrationRequest
      - MissingRegistrationCapabilities
      - MissingAgentVersion
      - InconsistentRegistrationCapabilities
      - NotLicensedForFeature
      - OSNotCompatibleWithDdc
      - VMNotCompatibleWithDdc
      - UnsupportedCredentialSecurityVersion
      - InvalidRegistrationRequest
      - SingleMultiSessionMismatch
      - FunctionalLevelTooLowForCatalog
      - FunctionalLevelTooLowForDesktopGroup
      - PowerOff
      - DesktopRestart
      - DesktopRemoved
      - AgentRejectedSettingsUpdate
      - SendSettingsFailure
      - SessionAuditFailure
      - SessionPrepareFailure
      - ContactLost
      - SettingsCreationFailure
      - UnknownError
      - BrokerRegistrationLimitReached
      - RegistrationStateMismatch
      title: DeregistrationReason
      type: string
      x-enumNames:
      - Unknown
      - AgentShutdown
      - AgentSuspended
      - AgentRequested
      - IncompatibleVersion
      - AgentAddressResolutionFailed
      - AgentNotContactable
      - AgentWrongActiveDirectoryOU
      - EmptyRegistrationRequest
      - MissingRegistrationCapabilities
      - MissingAgentVersion
      - InconsistentRegistrationCapabilities
      - NotLicensedForFeature
      - OSNotCompatibleWithDdc
      - VMNotCompatibleWithDdc
      - UnsupportedCredentialSecurityVersion
      - InvalidRegistrationRequest
      - SingleMultiSessionMismatch
      - FunctionalLevelTooLowForCatalog
      - FunctionalLevelTooLowForDesktopGroup
      - PowerOff
      - DesktopRestart
      - DesktopRemoved
      - AgentRejectedSettingsUpdate
      - SendSettingsFailure
      - SessionAuditFailure
      - SessionPrepareFailure
      - ContactLost
      - SettingsCreationFailure
      - UnknownError
      - BrokerRegistrationLimitReached
      - RegistrationStateMismatch
    DesktopCondition:
      description: "Desktop condition values, indicating warnings."
      enum:
      - Unknown
      - CPU
      - ICALatency
      - UPMLogonTime
      title: DesktopCondition
      type: string
      x-enumNames:
      - Unknown
      - CPU
      - ICALatency
      - UPMLogonTime
    DesktopGroupNameCheckRequestModel:
      description: Request Model for Checking Desktop Group Name with Admin Folder
      example:
        Name: Name
      properties:
        Name:
          description: Desktop Group Name with Admin Folder
          type: string
      title: DesktopGroupNameCheckRequestModel
      type: object
    DesktopRequestModel:
      description: |-
        Request object for creation of a published desktop.
        When the delivery group type=DesktopsOnly and SharingKind=Private,
        this turns into New-BrokerAssignmentPolicyRule.
        When type=(DesktopsOnly or DesktopsAndApps) and SharingKind=Shared,
        this turns into New-BrokerEntitlementPolicyRule.
        When type=AppsOnly and SharingKind=Private, it is not allowed to
        add desktops to a delivery group.
        The combination of type=AppsAndDesktops and SharingKind=Private is
        also not allowed.
      example:
        IncludedUserFilterEnabled: true
        ExcludedUsers:
        - ExcludedUsers
        - ExcludedUsers
        Description: Description
        ExcludedUserFilterEnabled: true
        Enabled: true
        ColorDepth: "{}"
        LeasingBehavior: "{}"
        Name: Name
        PublishedName: PublishedName
        SecureIcaRequired: true
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        MaxDesktops: 0
        RestrictToTag: RestrictToTag
        SessionReconnection: "{}"
        Id: Id
        Icon: Icon
      properties:
        Id:
          description: |-
            Identifier of an existing desktop associated with
            the delivery group.
          type: string
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: |-
            Color depth to use for desktop sessions to machines
            in the delivery group.
          type: object
        Description:
          description: |-
            Specifies an optional description of the new desktop.
            The text may be visible to the end user, for example, as a
            tooltip associated with the desktop within receiver.
          type: string
        Enabled:
          description: |-
            Specifies whether the published desktop is enabled.
            A disabled desktop is ignored when determining which
            desktops are available for a user.
          type: boolean
        ExcludedUserFilterEnabled:
          description: |-
            Specifies whether the ExcludedUsers filter is
            enabled.  If the filter is disabled then any user entries in
            the filter are ignored when determining which desktops are
            available for a user.
          type: boolean
        ExcludedUsers:
          description: |-
            Specifies the excluded users filter of the desktop; that is,
            the users and groups who are explicitly denied access to the
            published desktop.
          items:
            type: string
          type: array
        Icon:
          description: |-
            Specifies the image data of the icon used to display the published
            desktop to the user, and of assigned desktop(s) in the case
            where SharingKind
            is equal to Private.
          type: string
        IncludedUserFilterEnabled:
          description: |-
            Specifies whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            policy is implicitly granted an entitlement to the published
            desktop.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter of the desktop; that is,
            the users and groups who are explicitly granted access to the
            published desktop.
          items:
            type: string
          type: array
        LeasingBehavior:
          allOf:
          - $ref: '#/components/schemas/LeasingBehavior'
          description: |-
            Defines the desired connection leasing behavior applied to
            desktop sessions.
          type: object
        MaxDesktops:
          description: |-
            The number of machines from the delivery group which a
            user may privately allocate.
          format: int32
          type: integer
        Name:
          description: |-
            Specifies the administrative name of the desktop.  Each desktop
            in the site must have a unique name.
          type: string
        PublishedName:
          description: |-
            The name of the published desktop as seen by the user, and
            of assigned desktop(s) in the case where
            SharingKind
            is equal to Private.
          type: string
        RestrictToTag:
          description: |-
            Optional tag that may be used further to restrict which
            desktops may be made accessible to a user.
          type: string
        SecureIcaRequired:
          description: |-
            Specifies whether the desktop requires the SecureICA
            protocol for desktop sessions.
          type: boolean
        SessionReconnection:
          allOf:
          - $ref: '#/components/schemas/SessionReconnection'
          description: |-
            Defines reconnection (roaming) behavior for sessions
            launched to the published desktop.
          type: object
      title: DesktopRequestModel
      type: object
    DesktopResponseModel:
      description: Response object for a published desktop.
      example:
        IncludedUserFilterEnabled: true
        ExcludedUsers:
        - null
        - null
        Description: Description
        ExcludedUserFilterEnabled: true
        Enabled: true
        Tenants:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        IconId: IconId
        ColorDepth: "{}"
        LeasingBehavior: "{}"
        Name: Name
        Uid: 0
        PublishedName: PublishedName
        SecureIcaRequired: true
        IncludedUsers:
        - null
        - null
        MaxDesktops: 6
        RestrictToTag: null
        SessionReconnection: "{}"
        Id: Id
        MachinesForAssignment: 1
      properties:
        Id:
          description: Id of the desktop.
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED` DEPRECATED. Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: |-
            Color depth to use for desktop sessions to machines
            in the delivery group.
          type: object
        Description:
          description: |-
            Optional description of the desktop.
            The text may be visible to the end user, for example, as a
            tooltip associated with the desktop within receiver.
          type: string
        Enabled:
          description: |-
            Whether the published desktop is enabled.
            A disabled desktop is ignored when determining which
            desktops are available for a user.
          type: boolean
        ExcludedUserFilterEnabled:
          description: |-
            Indicates whether the ExcludedUsers filter is
            enabled.  If the filter is disabled then any user entries in
            the filter are ignored when determining which desktops are
            available for a user.
          type: boolean
        ExcludedUsers:
          description: |-
            The excluded users filter of the desktop; that is,
            the users and groups who are explicitly denied access to the
            published desktop.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        IconId:
          description: |-
            Id of the icon used to display the published
            desktop to the user, and of assigned desktop(s) in the case
            where SharingKind
            is equal to Private.
          minLength: 1
          type: string
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            policy is implicitly granted an entitlement to the published
            desktop.
          type: boolean
        IncludedUsers:
          description: |-
            The included users filter of the desktop; that is,
            the users and groups who are explicitly granted access to the
            published desktop.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        LeasingBehavior:
          allOf:
          - $ref: '#/components/schemas/LeasingBehavior'
          description: |-
            The desired connection leasing behavior applied to
            desktop sessions.
          type: object
        MaxDesktops:
          description: |-
            The number of machines from the delivery group which a
            user may privately allocate.
          format: int32
          type: integer
        Name:
          description: The administrative name of the desktop.
          type: string
        PublishedName:
          description: |-
            The name of the published desktop as seen by the user, and
            of assigned desktop(s) in the case where
            SharingKind
            is equal to Private.
          minLength: 1
          type: string
        RestrictToTag:
          $ref: '#/components/schemas/DesktopResponseModel_RestrictToTag'
        SecureIcaRequired:
          description: |-
            Indicates whether the desktop requires the SecureICA
            protocol for desktop sessions.
          type: boolean
        SessionReconnection:
          allOf:
          - $ref: '#/components/schemas/SessionReconnection'
          description: |-
            Reconnection (roaming) behavior for sessions
            launched to the published desktop.
          type: object
        MachinesForAssignment:
          description: |-
            Indicates the number of machines which are available for assignment
            based on this desktop configuration.
          format: int32
          type: integer
        Tenants:
          description: |-
            The tenant(s) that the desktop is assigned to.  If `null`, the
            desktop is not assigned to any tenants, and may be used by any
            tenant.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
      required:
      - ColorDepth
      - Enabled
      - ExcludedUserFilterEnabled
      - IconId
      - Id
      - IncludedUserFilterEnabled
      - PublishedName
      - SecureIcaRequired
      title: DesktopResponseModel
      type: object
    DesktopResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDesktopResponseModel'
      - description: Desktop response model collection
        type: object
      title: DesktopResponseModelCollection
    DesktopUsageResponseModel:
      description: Desktop usage data.
      properties:
        Time:
          description: Time when data point was collected.
          minLength: 1
          type: string
        FormattedTime:
          description: |-
            Formatted time when data point was collected.
            RFC 3339 compatible format.
          minLength: 1
          type: string
        Usage:
          description: Specifies how many desktop are in use at the time the timestamp
            corresponds to.
          format: int32
          type: integer
      required:
      - FormattedTime
      - Time
      - Usage
      title: DesktopUsageResponseModel
      type: object
    DesktopUsageResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfDesktopUsageResponseModel'
      - description: Desktop usage response model
        type: object
      title: DesktopUsageResponseModelCollection
    DeviceManagementType:
      description: Device management type for machines
      enum:
      - Unknown
      - None
      - Intune
      - IntuneWithCitrixTags
      title: DeviceManagementType
      type: string
      x-enumNames:
      - Unknown
      - None
      - Intune
      - IntuneWithCitrixTags
    DeviceRegistrationStatusResponseModel:
      description: Device registration status object.
      properties:
        DeviceRegisteredWithManagement:
          description: Is system has registered with management API (MDM).
          type: boolean
      title: DeviceRegistrationStatusResponseModel
      type: object
    DomainJoinStatus:
      description: ""
      enum:
      - Unknown
      - NotJoined
      - WorkgroupJoined
      - DomainJoined
      title: DomainJoinStatus
      type: string
      x-enumNames:
      - Unknown
      - NotJoined
      - WorkgroupJoined
      - DomainJoined
    DuplicateApplicationRequestModel:
      description: The Duplicate Application Request Model.
      example:
        CreateDisabled: false
        NewFolder: NewFolder
        NewName: NewName
      properties:
        NewName:
          description: |-
            Optional name for the duplicated application.  If not specified, the system will
            choose a new name automatically, based on the original application name.
            If specified, must be unique within the site.
          maxLength: 64
          type: string
        NewFolder:
          description: |-
            Optional folder in which to create the duplicated application.  If not specified,
            the new application will be created in the same folder as the original.
            May be specified as either Path or
            Id.  If specified as a path, and
            the target does not exist, it will be automatically created.
          type: string
        CreateDisabled:
          default: false
          description: |-
            Optional.
            If not specified, or specified as `false`, the new application will have the
            same visibility and enabled state as the original application.  This may be
            undesirable; if the original application is visible, it means the new duplicate
            will also be immediately visible to end users.
            Setting this to `true` causes the new duplicate to start out invisible and
            disabled, allowing it to be further modified before making it visible to
            end users.
          type: boolean
      title: DuplicateApplicationRequestModel
      type: object
    EditAdminFolderRequestModel:
      description: Request object for editing an admin folder.
      example:
        Parent: Parent
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Name: Name
      properties:
        Name:
          description: |-
            Name of the admin folder.

            If not set, will not be changed.

            The name must be unique within the folder's parent folder.
          maxLength: 64
          type: string
        Parent:
          description: |-
            Parent folder.

            If not set, will not be changed.

            Can be set to either Id or
            Path.

            To move the application to the root folder, specify the empty string ("").

            If specified as a path, and the path does not exist, it will be created.
          maxLength: 325
          type: string
        Metadata:
          description: |-
            The metadata of Admin Folder. Set the value of the NameValueStringPairModel is null will not update MetadataMap
            Set the value of the NameValueStringPairModel empty will be remove this metadata.
            Not existing Name and Value NameValueStringPairModel object will be added.
            The same Name but different value object will be updated.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      title: EditAdminFolderRequestModel
      type: object
    EditAdminRoleRequestModel:
      description: Request object used when editing an admin role.
      example:
        Description: Description
        CanLaunchManage: true
        CanLaunchMonitor: true
        Permissions:
        - Permissions
        - Permissions
        Name: Name
      properties:
        Description:
          description: The description of the admin role.
          type: string
        Name:
          description: The name of the role. Name is globally unique.
          type: string
        CanLaunchManage:
          description: Indicate that if the mangement page could be launch on xdconsole
          type: boolean
        CanLaunchMonitor:
          description: Indicate that if the monitor page could be launch on xdconsole
          type: boolean
        Permissions:
          description: |-
            List of permissions granted by the role. At least one permission is
            required.
          items:
            type: string
          type: array
      title: EditAdminRoleRequestModel
      type: object
    EditAdminScopeRequestModel:
      description: Request object used when editing an admin scope.
      example:
        Description: Description
        ScopedObjects:
        - ObjectType: "{}"
          Object: Object
        - ObjectType: "{}"
          Object: Object
        Name: Name
      properties:
        Name:
          description: The name of the scope. Name is globally unique.
          type: string
        Description:
          description: The description of the admin scope.
          type: string
        ScopedObjects:
          description: Scoped objects associated with the scope object.
          items:
            $ref: '#/components/schemas/ScopedObjectRequestModel'
          title: "ScopedObjectRequestModel[]"
          type: array
      title: EditAdminScopeRequestModel
      type: object
    EditAppLibPackageDiscoveryProfileRequestModel:
      description: Request object for editing applib package discovery profile.
      example:
        Path: Path
        PublishingServer: PublishingServer
        DiscoverMsix: true
        DiscoverAppV: true
        Name: Name
        ManagementServer: ManagementServer
        AutomateDiscovery: true
        Username: Username
        PasswordFormat: "{}"
        DiscoverAppAttach: true
        DesktopGroupUid: 171976545
        AutoDiscoveryPeriod: "{}"
        Recurse: true
        AutoDiscoveryCadence: 1294386358
        Password: Password
      properties:
        Name:
          description: The name of the package discovery profile
          maxLength: 64
          pattern: (.*)*
          type: string
        DesktopGroupUid:
          description: The UID of the DesktopGroup from which the broker will select
            a VDA to run the discovery.
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        Path:
          description: The root directory where the discovery will run
          maxLength: 250
          type: string
        Recurse:
          description: A value indicating whether or not to search the child directory
            tree.
          type: boolean
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          maxLength: 250
          type: string
        PublishingServer:
          description: The url of the App-V Publishing server that packages will be
            discovered from.
          maxLength: 250
          type: string
        Username:
          description: The user name of the App-V Server Administrator.
          type: string
        Password:
          description: The password of the App-V Server Administrator.
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Default is
            PlainText.
          type: object
        DiscoverAppV:
          description: A value indicating whether or not to search should Discover
            App-V Packages.
          type: boolean
        DiscoverMsix:
          description: A value indicating whether or not to search should Discover
            MSIX Packages.
          type: boolean
        DiscoverAppAttach:
          description: A value indicating whether or not to search should discover
            AppAttach Packages.
          type: boolean
        AutomateDiscovery:
          description: A value indicating whether or not the discovery should run
            automatically.
          type: boolean
        AutoDiscoveryPeriod:
          allOf:
          - $ref: '#/components/schemas/AutoDiscoveryPeriod'
          description: A value indicating what time period should used to trigger
            the discovery.
          type: object
        AutoDiscoveryCadence:
          description: A value indicating how often to trigger the discovery.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      title: EditAppLibPackageDiscoveryProfileRequestModel
      type: object
    EditApplicationFolderRequestModel:
      description: Request object for editing an application folder.
      example:
        Parent: Parent
        Name: Name
      properties:
        Name:
          description: |-
            Name of the application folder.

            If not set, will not be changed.

            The name must be unique within the folder's parent folder.
          maxLength: 64
          type: string
        Parent:
          description: |-
            Parent folder.

            If not set, will not be changed.

            Can be set to either Id or
            Path.

            To move the application to the root folder, specify the empty string ("").

            If specified as a path, and the path does not exist, it will be created.
          maxLength: 325
          type: string
      title: EditApplicationFolderRequestModel
      type: object
    EditApplicationGroupRequestModel:
      description: Request object for editing an application group.
      example:
        IncludedUserFilterEnabled: true
        AdminFolder: AdminFolder
        SessionSharingEnabled: true
        Description: Description
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        RestrictToTag: RestrictToTag
        Scopes:
        - Scopes
        - Scopes
        DeliveryGroups:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
        Enabled: true
        Tenants:
        - Tenants
        - Tenants
        Name: Name
      properties:
        AdminFolder:
          description: |-
            The folder in which the application group resides.
            If not specified, the value will not be changed.
            May be specified as either the folder
            Id or
            Path.
            If specified as a path, and the path does not exist, it will be automatically
            created.
          type: string
        Name:
          description: |-
            Name of the application group.


            If not specified, will not be changed.
          maxLength: 64
          type: string
        Description:
          description: |-
            Description of the application group.


            If not specified, will not be changed.  To remove a previously set
            description, use the empty string ("").
          maxLength: 512
          type: string
        Enabled:
          description: |-
            Whether the application group's applications can be launched by end users.


            If not specified, will not be changed.
          type: boolean
        RestrictToTag:
          description: |-
            Optional tag that may be used further to restrict which machines may be used
            for launching the application group's applications.


            A machine may be used by an application group if either the application group
            has no tag restriction or the application group does have a tag restriction
            and the machine is tagged with the same tag.


            If not specified, will not be changed.  To remove a previously set tag
            restriction, use the empty string ("").
          type: string
        Scopes:
          description: |-
            Administrative scopes which the application group should be a part
            of.


            If not specified, will not be changed.


            The "All" scope, and any tenant scopes, are implicit.  To remove
            from all non-implicit scopes, specify an empty array ([]).


            Specifying tenant scopes is equivalent to specifying the
             property and is subject to the same
            constraints.
          items:
            type: string
          type: array
        Tenants:
          description: Tenants to associate with the application group.
          items:
            type: string
          type: array
        SessionSharingEnabled:
          description: |-
            Whether the application group's applications can share sessions with
            applications that are not a member of this application group.


            If not specified, will not be changed.
          type: boolean
        IncludedUserFilterEnabled:
          description: |-
            Specifies whether the  filter is enabled.  If the
            filter is disabled then any user who satisfies the requirements of the
            delivery groups' access polic(ies) is implicitly granted access to the
            applications within the application group.


            If not specified, will not be changed.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter of the application group; that is, the
            users and groups who are explicitly granted access to the applications in the
            application group.


            If not specified, will not be changed.


            If specified, all desired users must be listed.  To remove all users, specify
            an empty array ([]).
          items:
            type: string
          type: array
        DeliveryGroups:
          description: |-
            List of delivery groups to associate with the application group.


            If not specified, will not be changed.


            If specified, all desired delivery groups must be listed.  The application
            group must be associated with at least one delivery group.
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
      title: EditApplicationGroupRequestModel
      type: object
    EditApplicationRequestModel:
      description: Request object for editing an application.
      example:
        BrowserName: BrowserName
        IncludedUserFilterEnabled: true
        ApplicationGroups:
        - ApplicationGroups
        - ApplicationGroups
        MaxPerUserInstances: 0
        Description: Description
        HomeZoneMode: "{}"
        Name: Name
        WaitForPrinterCreation: true
        PublishedName: PublishedName
        ClientFolder: ClientFolder
        StartMenuFolder: StartMenuFolder
        Visible: true
        ShortcutAddedToDesktop: true
        InstalledAppProperties: null
        AppVAppProperties: null
        MaxTotalInstances: 6
        CpuPriorityLevel: "{}"
        Categories:
        - Categories
        - Categories
        DeliveryGroups:
        - Item: Item
          Priority: 0
        - Item: Item
          Priority: 0
        DoNotEnumerate: true
        Enabled: true
        HomeZone: HomeZone
        IconFromClient: true
        ShortcutAddedToStartMenu: true
        IncludedUsers:
        - IncludedUsers
        - IncludedUsers
        ContentLocation: ContentLocation
        ApplicationFolder: ApplicationFolder
        Icon: Icon
      properties:
        ApplicationFolder:
          description: |-
            The folder in which the application resides.
            If not specified, the value will not be changed.
            May be specified as either the folder
            Id or
            Path.
            If specified as a path, and the path does not exist, it will be automatically
            created.
          type: string
        ApplicationGroups:
          description: |-
            Specifies one or more application groups which the application will
            be published to.
            If not specified, will not be changed.
            If specified, the entire list of application groups must be specified.
            To disassociate the application from all application groups, specify
            an empty array ([]).
          items:
            type: string
          type: array
        DeliveryGroups:
          description: |-
            Specifies one or more delivery groups which the application will
            be published to.
            If not specified, will not be changed.
            If specified, the entire list of delivery groups must be specified.
            To disassociate the application from all delivery groups, specify
            an empty array ([]).
          items:
            $ref: '#/components/schemas/PriorityRefRequestModel'
          title: "PriorityRefRequestModel[]"
          type: array
        BrowserName:
          description: |-
            Internal name of the application.
            If not specified, will not be changed.
            If specified, must be unique within the site.  For legacy reasons
            the maximum length of the browser name cannot exceed 38 bytes when
            encoded using MBCS encoding.
          maxLength: 38
          type: string
        Categories:
          description: |-
            Categories in which the application resides.
            If not specified, the values will not be changed.
            If specified, the entire list is required.
          items:
            type: string
          type: array
        ClientFolder:
          description: |-
            The folder that the application belongs to as the user sees it.
            If not specified, the value will not be changed.
            To remove the client folder, specify the empty string ("").
          maxLength: 260
          type: string
        CpuPriorityLevel:
          allOf:
          - $ref: '#/components/schemas/CpuPriorityLevel'
          description: |-
            The CPU priority for the launched process.
            If not specified, will not be changed.
          type: object
        Description:
          description: |-
            The description of the application.
            If not specified, will not be changed.
          maxLength: 512
          type: string
        Enabled:
          description: |-
            Indicates whether or not this application can be launched.
            If not specified, will not be changed.
          type: boolean
        DoNotEnumerate:
          description: Indicates whether or not this application is enumerable
          type: boolean
        HomeZone:
          description: |-
            Home zone preference used when launching this
            application.
            If not specified, will not be changed.
            To disassociate the application from a home zone, set this
            to the empty string ("").
            Cannot be set for applications where ApplicationType
            is equal to InstalledOnClient or
            PublishedContent.
            Cannot be set if HomeZoneMode is equal to
            "HomeZoneMode.Ignore".
            If HomeZoneMode is equal to
            "HomeZoneMode.Only" or
            "HomeZoneMode.Prefer", the value must either have
            been previously set, or is required.
            May be specified as either the Id or Name of the zone.
          type: string
        HomeZoneMode:
          allOf:
          - $ref: '#/components/schemas/HomeZoneMode'
          description: |-
            The zone preference mode for application launches.
            If not specified, will not be changed.
          type: object
        Icon:
          description: |-
            Icon used for the application.
            If not specified, will not be changed.
          type: string
        IconFromClient:
          description: |-
            Specifies whether the icon is gotten from user's computer at run time.
            If not specified, will not be changed.
          type: boolean
        IncludedUserFilterEnabled:
          description: |-
            Specifies whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            polic(ies) is implicitly granted access to the application.
            If not specified, will not be changed.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the included users filter of the application; that is,
            the users and groups who are explicitly granted access to the
            published application.
            If not specified, will not be changed.
            If specified, all users to be included must be specified.
          items:
            type: string
          type: array
        InstalledAppProperties:
          $ref: '#/components/schemas/EditApplicationRequestModel_InstalledAppProperties'
        AppVAppProperties:
          $ref: '#/components/schemas/EditApplicationRequestModel_AppVAppProperties'
        ContentLocation:
          description: |-
            Location of published content.
            If not specified, will not be changed.
          type: string
        MaxPerUserInstances:
          description: |-
            Specifies the maximum allowed concurrently running instances of
            the application that an individual user can have.
            If not specified, will not be changed.
          format: int32
          type: integer
        MaxTotalInstances:
          description: |-
            Specifies the maximum allowed total ofconcurrently running
            instances of the application within the site.
            If not specified, will not be changed.
          format: int32
          type: integer
        Name:
          description: |-
            Name of the application.  Only seen by administrators.
            If not specified, will not be changed.
            If specified, must be unique within the site.
          maxLength: 64
          type: string
        PublishedName:
          description: |-
            The name seen by end users who have access to the application.
            If not specified, will not be changed.
          type: string
        ShortcutAddedToDesktop:
          description: |-
            Specifies whether or not a shortcut to the application
            should be placed on the user device.
            If not specified, will not be changed.
          type: boolean
        ShortcutAddedToStartMenu:
          description: |-
            Specifies whether or not a shortcut to the application
            should be placed in the user's start menu on their user device.
            If not specified, will not be changed.
          type: boolean
        StartMenuFolder:
          description: |-
            Specifies the name of the start menu folder that holds
            the application shortcut (if any).
            If not specified, will not be changed.
            To clear a previously-set value, use the empty string ("").
          maxLength: 260
          type: string
        Visible:
          description: |-
            Indicates whether or not this application is visible to users.
            If not specified, will not be changed.
          type: boolean
        WaitForPrinterCreation:
          description: |-
            Specifies whether or not the session waits for the printers to
            be created before allowing the user to interact with the session.
            If not specified, will not be changed.
          type: boolean
      title: EditApplicationRequestModel
      type: object
    EditBrokerHypervisorConnectionRequestModel:
      description: Edit broker hypervisor connection request model.
      example:
        PreferredController: PreferredController
      properties:
        PreferredController:
          description: The preferred controller.
          type: string
      title: EditBrokerHypervisorConnectionRequestModel
      type: object
    EditDeliveryGroupRequestModel:
      description: Request object used when editing a delivery group.
      example:
        AutoscaleLogOffReminderMessage: AutoscaleLogOffReminderMessage
        SimpleAccessPolicy: null
        OffPeakDisconnectTimeoutMinutes: 1280358508
        RestrictAutoscaleTag: RestrictAutoscaleTag
        LogOffWarningTitle: LogOffWarningTitle
        StoreFrontServersForHostedReceiver:
        - Description: Description
          Enabled: true
          Id: Id
          Url: Url
          Name: Name
        - Description: Description
          Enabled: true
          Id: Id
          Url: Url
          Name: Name
        Desktops:
        - IncludedUserFilterEnabled: true
          ExcludedUsers:
          - ExcludedUsers
          - ExcludedUsers
          Description: Description
          ExcludedUserFilterEnabled: true
          Enabled: true
          ColorDepth: "{}"
          LeasingBehavior: "{}"
          Name: Name
          PublishedName: PublishedName
          SecureIcaRequired: true
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          MaxDesktops: 0
          RestrictToTag: RestrictToTag
          SessionReconnection: "{}"
          Id: Id
          Icon: Icon
        - IncludedUserFilterEnabled: true
          ExcludedUsers:
          - ExcludedUsers
          - ExcludedUsers
          Description: Description
          ExcludedUserFilterEnabled: true
          Enabled: true
          ColorDepth: "{}"
          LeasingBehavior: "{}"
          Name: Name
          PublishedName: PublishedName
          SecureIcaRequired: true
          IncludedUsers:
          - IncludedUsers
          - IncludedUsers
          MaxDesktops: 0
          RestrictToTag: RestrictToTag
          SessionReconnection: "{}"
          Id: Id
          Icon: Icon
        MachineLogOnType: "{}"
        Name: Name
        AdminFolder: AdminFolder
        PublishedName: PublishedName
        AutomaticPowerOnForAssignedDuringPeak: true
        LimitSecondsToForceLogOffUserDuringOffPeak: 890262545
        AppProtectionScreenCaptureRequired: true
        DefaultDesktopIcon: DefaultDesktopIcon
        ProtocolPriority:
        - null
        - null
        OffPeakDisconnectAction: "{}"
        AutomaticPowerOnForAssigned: true
        DeliveryType: "{}"
        ProductCode: ProductCode
        PolicySetGuid: PolicySetGuid
        AppProtectionKeyLoggingRequired: true
        RebootSchedules:
        - IgnoreMaintenanceMode: true
          WarningMessage: WarningMessage
          DaysInWeek:
          - null
          - null
          Description: Description
          UseNaturalReboot: true
          StartTime: StartTime
          Enabled: true
          Name: Name
          FrequencyFactor: 6
          StartDate: StartDate
          WarningDurationMinutes: 763901857
          DayInMonth: "{}"
          RestrictToTag: RestrictToTag
          WarningRepeatIntervalMinutes: 1495747635
          RebootDurationMinutes: 9
          Frequency: "{}"
          WeekInMonth: "{}"
          Id: Id
          WarningTitle: WarningTitle
          Day: "{}"
        - IgnoreMaintenanceMode: true
          WarningMessage: WarningMessage
          DaysInWeek:
          - null
          - null
          Description: Description
          UseNaturalReboot: true
          StartTime: StartTime
          Enabled: true
          Name: Name
          FrequencyFactor: 6
          StartDate: StartDate
          WarningDurationMinutes: 763901857
          DayInMonth: "{}"
          RestrictToTag: RestrictToTag
          WarningRepeatIntervalMinutes: 1495747635
          RebootDurationMinutes: 9
          Frequency: "{}"
          WeekInMonth: "{}"
          Id: Id
          WarningTitle: WarningTitle
          Day: "{}"
        AutoscaleLogOffReminderIntervalSecondsOffPeak: 251915777
        SettlementPeriodBeforeUseSeconds: 9
        TimeZone: TimeZone
        RequireUserHomeZone: true
        SettlementPeriodBeforeAutoShutdownSeconds: 9
        LingerSettings: null
        ZonePreferences:
        - null
        - null
        AssignMachinesToUsers:
        - Users:
          - Users
          - Users
          Machine: Machine
        - Users:
          - Users
          - Users
          Machine: Machine
        LogoffOffPeakDisconnectedSessionAfterSeconds: 1470350420
        AppAccessPolicy: null
        PeakExtendedDisconnectAction: "{}"
        PeakLogOffTimeoutMinutes: 1586191969
        PowerOffDelayMinutes: 44
        Description: Description
        OffPeakLogOffTimeoutMinutes: 494379917
        LogoffPeakDisconnectedSessionAfterSeconds: 319849630
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        OffPeakBufferSizePercent: 14
        PeakLogOffAction: "{}"
        ShutdownDesktopsAfterUse: true
        InMaintenanceMode: true
        PeakBufferSizePercent: 70
        AutoscaleLogOffReminderIntervalSecondsPeak: 1066272551
        LimitSecondsToForceLogOffUserDuringPeak: 435321354
        HdxSslEnabled: true
        DisconnectOffPeakIdleSessionAfterSeconds: 220040988
        MinimumFunctionalLevel: "{}"
        TurnOnAddedMachines: true
        OffPeakLogOffAction: "{}"
        LicenseModel: "{}"
        PeakDisconnectAction: "{}"
        PeakExtendedDisconnectTimeoutMinutes: 776546568
        OffPeakExtendedDisconnectTimeoutMinutes: 1210617418
        Enabled: true
        SecureIcaEnabled: true
        LogOffWarningMessage: LogOffWarningMessage
        ColorDepth: "{}"
        PeakDisconnectTimeoutMinutes: 1997469940
        PrelaunchSettings: null
        AutoscaleLogOffReminderTitle: AutoscaleLogOffReminderTitle
        OffPeakExtendedDisconnectAction: "{}"
        RestrictAutoscaleMinIdleUntaggedPercentDuringPeak: 7
        DisconnectPeakIdleSessionAfterSeconds: 264465518
        MachineCost: 0.5025004791520294
        Scopes:
        - Scopes
        - Scopes
        AutoscaleLogOffReminderEnabled: true
        RestrictAutoscaleMinIdleUntaggedPercentDuringOffPeak: 59
        PowerTimeSchemes:
        - PoolUsingPercentage: false
          DaysOfWeek:
          - null
          - null
          PoolSizeSchedule:
          - TimeRange: TimeRange
            PoolSize: 9
          - TimeRange: TimeRange
            PoolSize: 9
          PeakHours:
          - true
          - true
          DisplayName: DisplayName
          PoolSize:
          - 9
          - 9
          PeakTimeRanges:
          - PeakTimeRanges
          - PeakTimeRanges
          Name: Name
        - PoolUsingPercentage: false
          DaysOfWeek:
          - null
          - null
          PoolSizeSchedule:
          - TimeRange: TimeRange
            PoolSize: 9
          - TimeRange: TimeRange
            PoolSize: 9
          PeakHours:
          - true
          - true
          DisplayName: DisplayName
          PoolSize:
          - 9
          - 9
          PeakTimeRanges:
          - PeakTimeRanges
          - PeakTimeRanges
          Name: Name
        AutoScaleEnabled: true
      properties:
        AdminFolder:
          description: |-
            The folder in which the delivery group resides.
            If not specified, the value will not be changed.
            May be specified as either the folder
            Id or
            Path.
            If specified as a path, and the path does not exist, it will be automatically
            created.
          type: string
        AssignMachinesToUsers:
          description: Machine assignments to users.
          items:
            $ref: '#/components/schemas/AssignMachineToUserRequestModel'
          title: "AssignMachineToUserRequestModel[]"
          type: array
        DeliveryType:
          allOf:
          - $ref: '#/components/schemas/DeliveryKind'
          description: Type of resources that may be delivered from the delivery group.
          type: object
        Description:
          description: |-
            A description for this delivery group useful for administrators
            of the site.
          type: string
        Desktops:
          description: List of desktop resources to publish on the delivery group.
          items:
            $ref: '#/components/schemas/DesktopRequestModel'
          title: "DesktopRequestModel[]"
          type: array
        Enabled:
          description: |-
            Whether the delivery group should be in the enabled state; all
            resources published on disabled delivery groups do not appear
            to users.
          type: boolean
        InMaintenanceMode:
          description: |-
            Whether the delivery group should be created in maintenance mode;
            a delivery group in maintenance mode will not allow users to
            connect or reconnect to machines in the delivery group.
          type: boolean
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            The minimum functional level required for machines to work
            successfully in the delivery group.
          type: object
        Name:
          description: The name of the new delivery group.
          type: string
        PublishedName:
          description: The name of the desktop group as it is to appear to the user
            in StoreFront.
          type: string
        RequireUserHomeZone:
          description: |-
            Whether to require the resources from this delivery group to
            launch within the user's home zone.
          type: boolean
        Scopes:
          description: |-
            Administrative scopes which the delivery group should be a part of.
            If not specified, don't change.
            If specified, *all* desired scopes must be listed.  Any scope that the delivery
            group was part of previously, but which is not passed, will be removed.
          items:
            type: string
          type: array
        Tenants:
          description: Tenants to associate with the delivery group.
          items:
            type: string
          type: array
        AppProtectionKeyLoggingRequired:
          description: Specifies whether key logging app protection is required.
          type: boolean
        AppProtectionScreenCaptureRequired:
          description: Specifies whether screen capture app protection is required.
          type: boolean
        AppAccessPolicy:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_AppAccessPolicy'
        AutomaticPowerOnForAssigned:
          description: |-
            Whether assigned (Private)
            machines in the delivery group should be automatically
            powered-on at the start of peak time periods.
          type: boolean
        AutomaticPowerOnForAssignedDuringPeak:
          description: |-
            Whether assigned (Private)
            machines in the delivery group should be automatically
            powered-on throughout peak time periods.
          type: boolean
        AutoScaleEnabled:
          description: Whether auto-scale is enabled for the delivery group.
          type: boolean
        RestrictAutoscaleTag:
          description: Specifies the tag used to restrict autoscale.
          type: string
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: |-
            Specifies the color depth that the ICA session should use
            for connections to machines in this group.
          type: object
        ProductCode:
          description: Specifies the product code of the delivery group.
          type: string
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: Specifies the license model of the delivery group.
          type: object
        SecureIcaEnabled:
          description: |-
            Whether connections to machines in the delivery group will
            use SecureIca to encrypt the ICA protocol.
          type: boolean
        DefaultDesktopIcon:
          description: Default icon to use for desktops published from the delivery
            group.
          type: string
        HdxSslEnabled:
          description: |-
            Whether connections to machines in the delivery group will
            use SSL.
          type: boolean
        LingerSettings:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_LingerSettings'
        RestrictAutoscaleMinIdleUntaggedPercentDuringPeak:
          description: |-
            The percentage that the number of untagged single-session machines
            in an idle state, or for multi-session machines, the untagged available
            load capacity must fall below before Autoscale powers on and manages 'tagged'
            machines, as per policy, in peak time. If the number of untagged machines in
            an idle state, or the untagged available load capacity goes above this threshold value,
            Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          maximum: 100
          minimum: -1
          type: integer
        RestrictAutoscaleMinIdleUntaggedPercentDuringOffPeak:
          description: |-
            The percentage that the number of untagged single-session machines in an idle state,
            or for multi-session machines, the untagged available load capacity must fall below
            before Autoscale powers on and manages 'tagged' machines, as per policy, in off-peak.
            If the number of untagged machines in an idle state, or the untagged available load capacity
            goes above this threshold value, Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          maximum: 100
          minimum: -1
          type: integer
        OffPeakBufferSizePercent:
          description: |-
            The percentage of machines in the delivery group that should be
            kept available in an idle state outside peak hours.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        OffPeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting outside peak hours.
          type: object
        OffPeakDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        OffPeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a second configurable period of a
            user session disconnecting outside peak hours.
          type: object
        OffPeakExtendedDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        OffPeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending outside peak hours. "
          type: object
        OffPeakLogOffTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends outside peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PeakBufferSizePercent:
          description: |-
            The percentage of machines in the delivery group that should be kept
            available in an idle state in peak hours.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        PeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting in peak hours.
          type: object
        PeakDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a second configurable period of a
            user session disconnecting in peak hours.
          type: object
        PeakExtendedDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LimitSecondsToForceLogOffUserDuringPeak:
          description: |-
            Represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging to
            the delivery group are logged off, during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LimitSecondsToForceLogOffUserDuringOffPeak:
          description: |-
            represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging
            to the delivery group are logged off, during off-peak.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogOffWarningMessage:
          description: |-
            The warning message to display to users in active sessions prior to logging off users,
            whether in peak time or off-peak.
          type: string
        LogOffWarningTitle:
          description: The title of the warning message dialog.
          type: string
        PeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending in peak hours. "
          type: object
        PeakLogOffTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends in peak hours.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        DisconnectPeakIdleSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        DisconnectOffPeakIdleSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during off-peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogoffPeakDisconnectedSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        LogoffOffPeakDisconnectedSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during off-peak time.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        PowerTimeSchemes:
          description: |-
            Power management time schemes.  No two schemes may cover the same
            day of the week.
          items:
            $ref: '#/components/schemas/PowerTimeSchemeRequestModel'
          title: "PowerTimeSchemeRequestModel[]"
          type: array
        PowerOffDelayMinutes:
          description: |-
            Delay before machines are powered off, when scaling down.  Specified
            in minutes.  Applies only to multi-session machines.
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        AutoscaleLogOffReminderEnabled:
          description: |-
            Boolean value indicating whether the warning messages should be
            sent on an interval to nudge a logoff
            should be sent on an interval when autoscale is enabled.
          type: boolean
        AutoscaleLogOffReminderIntervalSecondsOffPeak:
          description: |-
            Represents the time interval at which messages are  sent to the user during off peak time
            when Autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        AutoscaleLogOffReminderIntervalSecondsPeak:
          description: |-
            Represents the time interval at which messages are  sent to the user during peak time
            when autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        AutoscaleLogOffReminderMessage:
          description: |-
            Notification message to display to users in active sessions
            belonging to machines needed by Autoscale for shutdown.
          type: string
        AutoscaleLogOffReminderTitle:
          description: |-
            Notification message dialog title displayed
            when Autoscale issues a logoff reminder request.
          type: string
        MachineCost:
          description: |-
            Indicates the estimated per-hour cost for machines in the delivery
            group, as set by the administrator.
          format: double
          minimum: 0
          title: Double
          type: number
        MachineLogOnType:
          allOf:
          - $ref: '#/components/schemas/MachineLogOnType'
          description: The login type for machines in this desktop group.
          type: object
        PrelaunchSettings:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_PrelaunchSettings'
        ProtocolPriority:
          description: |-
            A list of protocols in the order in which they should be
            attempted for use during connection.
          items:
            $ref: '#/components/schemas/ProtocolType'
          title: "ProtocolType[]"
          type: array
        RebootSchedules:
          description: A list of reboot schedules.
          items:
            $ref: '#/components/schemas/RebootScheduleRequestModel'
          title: "RebootScheduleRequestModel[]"
          type: array
        SettlementPeriodBeforeAutoShutdownSeconds:
          description: |-
            Time after a session ends during which automatic shutdown
            requests (for example, shutdown after use, idle pool
            management) are deferred. Any outstanding shutdown request
            takes effect after the settlement period expires. This is
            typically used to configure time to allow logoff scripts
            to complete.
          format: int32
          type: integer
        SettlementPeriodBeforeUseSeconds:
          description: |-
            Idle period before a machine can be selected to host a new
            session after registration or the end of a previous
            session. This is typically used to allow a machine to
            become idle following processing associated with start-up
            or logoff actions. A machine may still be selected during
            the idle period if no other machine is available for
            immediate use.
          format: int32
          type: integer
        ShutdownDesktopsAfterUse:
          description: |-
            Whether machines in this delivery group should be
            automatically shut down when each user session completes.
          type: boolean
        SimpleAccessPolicy:
          $ref: '#/components/schemas/CreateDeliveryGroupRequestModel_SimpleAccessPolicy'
        StoreFrontServersForHostedReceiver:
          description: |-
            List of StoreFront server addresses to configure within hosted
            receivers that are delivered from the delivery group.
          items:
            $ref: '#/components/schemas/StoreFrontServerRequestModel'
          title: "StoreFrontServerRequestModel[]"
          type: array
        TimeZone:
          description: The time zone in which this delivery group's machines reside.
          type: string
        TurnOnAddedMachines:
          description: |-
            Whether to attempt to power on machines when they are added
            to the delivery group.
          type: boolean
        ZonePreferences:
          description: |-
            Ordered list of zone preferences to be applied when launching
            resources from this delivery group.
          items:
            $ref: '#/components/schemas/ZonePreference'
          title: "ZonePreference[]"
          type: array
        Metadata:
          description: The metadata of the delivery group.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        PolicySetGuid:
          description: |-
            The GUID of the policy set assigned to this desktop group. Change if not null. Use Guid.Empty to clear
            the value stored in the database. A non-null and non-empty GUID assigns the policy set to this desktop
            group.
          format: guid
          type: string
      title: EditDeliveryGroupRequestModel
      type: object
    EditHypervisorAWSConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorAWSConnectionRequestModel_allOf'
      title: EditHypervisorAWSConnectionRequestModel
    EditHypervisorAzureConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorAzureConnectionRequestModel_allOf'
      title: EditHypervisorAzureConnectionRequestModel
    EditHypervisorConnectionRequestModel:
      description: Edit hypervisor connection details.
      example:
        ApiKey: ApiKey
        SslThumbprints:
        - SslThumbprints
        - SslThumbprints
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        MaxPowerActionsPercentageOfMachines: 14
        ServiceAccountId: ServiceAccountId
        ServiceAccountFingerprint: ServiceAccountFingerprint
        Name: Name
        InMaintenanceMode: true
        Addresses:
        - Addresses
        - Addresses
        PasswordFormat: "{}"
        ConnectionOptions: ConnectionOptions
        ServiceAccountCredentials: ServiceAccountCredentials
        ServiceAccountCredentialsFormat: "{}"
        CustomProperties: CustomProperties
        Password: Password
        SecretKeyFormat: "{}"
        ServiceAccountCredentialFormat: "{}"
        ApplicationSecret: ApplicationSecret
        UserName: UserName
        ConnectionType: "{}"
        MaxAbsoluteActiveActions: 171976544
        SecretKey: SecretKey
        ApplicationSecretFormat: "{}"
        Scopes:
        - Scopes
        - Scopes
        SccmWakeUpProxy: true
        WakeOnLanPackets: "{}"
        MaxAbsoluteNewActionsPerMinute: 1294386358
        MaximumConcurrentProvisioningOperations: 596
        ApplicationId: ApplicationId
        ServiceAccountCredential: ServiceAccountCredential
      properties:
        Name:
          description: |-
            Name of the hypervisor to create.  Optional; if not specified, will
            not be changed.
          maxLength: 64
          pattern: (.*)*
          type: string
        InMaintenanceMode:
          description: |-
            Specifies whether the hypervisor is in maintenance mode, which
            disables all communication between XenApp & XenDesktop and the
            Hypervisor.  Optional; if not specified, will not be changed.
          type: boolean
        Scopes:
          description: |-
            Administrative scopes which the newly created hypervisor will be a
            part of.
            If not specified, will not be changed.
            The "All" scope, and any tenant scopes, are implicit and cannot be
            removed.  To remove from all non-implicit scopes, specify an empty
            array ([]).
            Specifying tenant scopes is equivalent to specifying the
            Tenants property and is subject to the same
            constraints.
          items:
            type: string
          type: array
        Tenants:
          description: Tenants to associate with the hypervisor.
          items:
            type: string
          type: array
        MaxAbsoluteActiveActions:
          description: |-
            Maximum number of actions that can execute in parallel on the
            hypervisor.  Optional; if not specified, will not be changed.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        MaxAbsoluteNewActionsPerMinute:
          description: |-
            Maximum number of actions that can be started on the hypervisor
            per-minute.  Optional; if not specified, will not be changed.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        MaxPowerActionsPercentageOfMachines:
          description: |-
            Maximum percentage of machines on the hypervisor which can have
            their power state changed simultaneously.  Optional; if not
            specified, will not be changed.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        ConnectionOptions:
          description: |-
            Connection options to use for the hypervisor.  Optional; if not
            specified, will not be changed.  May be removed by specifying an
            empty string (`""`).
          maxLength: 1000
          pattern: ((.|\n)*)
          type: string
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: |-
            Type of hypervisor.  Required, and must match the hypervisor's
            previously-set type.
          type: object
        Metadata:
          description: Metadata for hypervisor connection. When set the property value
            equal to null/empty means to remove this property.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ApiKey:
          description: |-
            The API key used to authenticate with the AWS APIs.  Optional.  If
            not specified, will not be changed.  If specified, the
            SecretKey must also be specified.
          maxLength: 64
          pattern: (.*)*
          type: string
        SecretKey:
          description: |-
            The secret key used to authenticate with the AWS APIs.  Optional.
            Must be specified in the format indicated by
            SecretKeyFormat.
          maxLength: 64
          pattern: (.*)*
          type: string
        SecretKeyFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the SecretKey.  Only used if
            SecretKey is specified.  Default is
            PlainText.
          type: object
        MaximumConcurrentProvisioningOperations:
          description: |-
            Maximum number of concurrent AWS provisioning operations.
            Optional.  If not specified, will not be changed.
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.  Optional.  If not specified, will not be changed.  If
            specified, then ApplicationSecret must also be
            specified.
          maxLength: 36
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ApplicationSecret:
          description: |-
            The Application Secret of the service principal used to access the
            Azure APIs.  Optional.  If not specified, will not be changed.  If
            specified, must in the format indicated by
            ApplicationSecretFormat.
          maxLength: 20480
          type: string
        ApplicationSecretFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ApplicationSecret.  Only used if
            ApplicationSecret is specified.  Default is
            PlainText.
          type: object
        CustomProperties:
          description: The properties of host connection that are specific to the
            target hosting infrastructure.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
        ServiceAccountId:
          description: |-
            The service account ID used to access the Google Cloud APIs.
            Optional.  If not specified, will not be changed.  If specified,
            ServiceAccountCredentials must also be specified.
          maxLength: 512
          pattern: (.*)*
          type: string
        ServiceAccountCredentials:
          description: |-
            the JSON-encoded service account credentials used to access the
            Google Cloud APIs.  Optional.  If not specified, will not be
            changed.  If specified, must be in the format indicated by
            ServiceAccountCredentialsFormat.
          maxLength: 2147483647
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialsFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredentials.  Only used if
            ServiceAccountCredentials are specified.  Default is
            PlainText.
          type: object
        UserName:
          description: |-
            Hypervisor user name.  Optional.  If not specified, will not be
            changed.  If specified, Password must also be
            specified.
          maxLength: 256
          pattern: (.*)*
          type: string
        Password:
          description: |-
            Hypervisor password.  Optional.  If specified, must be in the format
            indicated by PasswordFormat.
          maxLength: 20480
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Only used if
            Password is specified.  Default is
            PlainText.
          type: object
        Addresses:
          description: |-
            Hypervisor address(es).  Optional.  If not specified, will not be
            changed.
          items:
            type: string
          type: array
        SslThumbprints:
          description: |-
            SSL certificate thumbprints to consider acceptable for this
            connection.  Optional.  If not specified, will not be changed.  To
            remove previously specified values, specify an empty array (`[]`).
          items:
            type: string
          type: array
        SccmWakeUpProxy:
          description: |-
            Specifies whether to use Microsoft System Center Configuration
            Manager 2012 SP1 Wake-up Proxy for power management.  Optional.  If
            not specified, will not be changed.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/components/schemas/WakeOnLanTransmission'
          description: |-
            Specifies the Wake on LAN packet transmission method to use for
            power management.
          type: object
        ServiceAccountCredential:
          description: |-
            The private key string to access the Oracle Cloud Infrastructure APIs.
            Required. Must be specified in the format
            indicated by ServiceAccountCredentialFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredential.  Default is
            PlainText.
          type: object
        ServiceAccountFingerprint:
          description: The fingerprint of the public key associate with the ServiceAccountCredential.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
      required:
      - ConnectionType
      title: EditHypervisorConnectionRequestModel
      type: object
    EditHypervisorGCPConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorGCPConnectionRequestModel_allOf'
      title: EditHypervisorGCPConnectionRequestModel
    EditHypervisorOciConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorOciConnectionRequestModel_allOf'
      title: EditHypervisorOciConnectionRequestModel
    EditHypervisorResourcePoolAWSOrGcpRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/EditHypervisorResourcePoolAWSOrGcpRequestModel_allOf'
      title: EditHypervisorResourcePoolAWSOrGcpRequestModel
    EditHypervisorResourcePoolAzureRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/EditHypervisorResourcePoolAzureRequestModel_allOf'
      title: EditHypervisorResourcePoolAzureRequestModel
    EditHypervisorResourcePoolRequestModel:
      description: |-
        Edit a hypervisor resource pool.  Note that in previous versions of the
        API, a "resource pool" was known as a "hosting unit".
      example:
        UseLocalStorageCaching: true
        Networks:
        - Networks
        - Networks
        Subnets:
        - Subnets
        - Subnets
        Storage:
        - StoragePath: StoragePath
          Superseded: false
        - StoragePath: StoragePath
          Superseded: false
        ConnectionType: "{}"
        VmTagging: true
        PersonalvDiskStorage:
        - StoragePath: StoragePath
          Superseded: false
        - StoragePath: StoragePath
          Superseded: false
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        TemporaryStorage:
        - StoragePath: StoragePath
          Superseded: false
        - StoragePath: StoragePath
          Superseded: false
        Name: Name
        CustomProperties: CustomProperties
      properties:
        Name:
          description: "Name of the resource pool.  Optional.  If not specified, will\
            \ not be changed."
          maxLength: 64
          pattern: (.*)*
          type: string
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: |-
            Type of hypervisor.  Required, and must match the type of hypervisor
            specified for the hypervisor connection that the resource pool is
            attached to.
          type: object
        VmTagging:
          description: |-
            Indicates whether VMs created by Virtual Apps & Desktops
            provisioning operations should be tagged.  Tagged VMs are filtered
            out of queries by default.
          type: boolean
        Metadata:
          description: Metadata for hypervisor resource pool. When set the property
            value equal to null/empty means to remove this property.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Storage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        TemporaryStorage:
          description: |-
            Path to the storage resource(s) that are used for temporary
            operations in this resource pool.
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        PersonalvDiskStorage:
          description: |-
            Path to the personal virtual disk storage resource(s).
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
        UseLocalStorageCaching:
          description: |-
            Indicates whether local storage on the hypervisor will be used for
            caching purposes. Not all hypervisor types support this.  Defaults
            to `false`.
          type: boolean
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
        Subnets:
          description: |-
            Path to the subnet(s) that are available for provisioning operations
            in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      required:
      - ConnectionType
      title: EditHypervisorResourcePoolRequestModel
      type: object
    EditHypervisorResourcePoolTraditionalRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorResourcePoolRequestModel'
      - $ref: '#/components/schemas/EditHypervisorResourcePoolTraditionalRequestModel_allOf'
      title: EditHypervisorResourcePoolTraditionalRequestModel
    EditHypervisorTraditionalConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorTraditionalConnectionRequestModel_allOf'
      title: EditHypervisorTraditionalConnectionRequestModel
    EditHypervisorWOLConnectionRequestModel:
      allOf:
      - $ref: '#/components/schemas/EditHypervisorTraditionalConnectionRequestModel'
      - $ref: '#/components/schemas/EditHypervisorWOLConnectionRequestModel_allOf'
      title: EditHypervisorWOLConnectionRequestModel
    EditInstalledAppRequestModel:
      description: Response object for installed application properties.
      properties:
        CommandLineArguments:
          description: |-
            The command-line arguments to use when launching the
            executable. Environment variables can be used.
            If not specified, the value will not be changed.
          maxLength: 8191
          type: string
        CommandLineExecutable:
          description: |-
            The name of the executable file to launch. The full
            path need not be provided if it's already in the path.
            Environment variables can also be used.
            If not specified, the value will not be changed.
          maxLength: 8191
          type: string
        WorkingDirectory:
          description: "The working directory which the executable is launched\nfrom.\
            \ Environment variables can be used. \nIf not specified, the value will\
            \ not be changed."
          maxLength: 260
          type: string
      title: EditInstalledAppRequestModel
      type: object
    EditLicenseProductEditionRequestModel:
      description: Request model to edit license product edition
      example:
        LicenseModel: "{}"
        LicenseProduct: "{}"
        ProductEdition: "{}"
      properties:
        LicenseProduct:
          allOf:
          - $ref: '#/components/schemas/LicenseProduct'
          description: The product code.
          type: object
        ProductEdition:
          allOf:
          - $ref: '#/components/schemas/ProductEdition'
          description: The product edition.
          type: object
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model.
          type: object
      title: EditLicenseProductEditionRequestModel
      type: object
    EditLicenseServerRequestModel:
      description: Request object for changing license server
      example:
        Thumbprint: Thumbprint
        LicenseServer: LicenseServer
      properties:
        LicenseServer:
          description: License server address
          minLength: 1
          type: string
        Thumbprint:
          description: The certificate thumbprint of the license server
          type: string
      required:
      - LicenseServer
      title: EditLicenseServerRequestModel
      type: object
    EditSiteSettingsRequestModel:
      example:
        WebUiPolicySetEnabled: true
        DnsResolutionEnabled: true
        UseVerticalScalingForRdsLaunches: true
        TrustRequestsSentToTheXmlServicePortEnabled: true
      properties:
        UseVerticalScalingForRdsLaunches:
          description: |-
            Determines whether to use vertical scaling when considering RDS machines for launches.
            Vertical scaling would saturate machines in the current pool rather than
            send sessions to the least loaded machines.
            This would be a trade in performance vs. cost, where vertical scaling would be less costly.
          type: boolean
        DnsResolutionEnabled:
          description: |-
            Changes whether ICA files returned by a broker service to
            a user device contain the numeric IP address or the DNS name
            of the desktop machine to which a session should be established.
          type: boolean
        TrustRequestsSentToTheXmlServicePortEnabled:
          description: |-
            Changes whether the XML Service (as used by Storefront)
            implicitly trusts the originator of requests it receives,
            or whether it fully authenticates them.
          type: boolean
        WebUiPolicySetEnabled:
          description: Determine whether the policy set in web UI is enabled or not
          type: boolean
      title: EditSiteSettingsRequestModel
      type: object
    EditUserZonePreferenceRequestModel:
      description: Request model for updating user zone preference.
      example:
        ZoneId: ZoneId
      properties:
        ZoneId:
          description: The id of the new zone.
          minLength: 1
          type: string
      required:
      - ZoneId
      title: EditUserZonePreferenceRequestModel
      type: object
    EditZoneRequestModel:
      description: Model for editing zone.
      example:
        Description: Description
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Name: Name
      properties:
        Name:
          description: The new name of the zone. Zone names are unique across the
            site.
          type: string
        Description:
          description: The new description of the zone.
          type: string
        Metadata:
          description: The new metadata of the zone.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      title: EditZoneRequestModel
      type: object
    EmbeddedAttribute:
      allOf:
      - $ref: '#/components/schemas/Attribute'
      - type: object
      title: EmbeddedAttribute
    EnumerationMember:
      description: Member of enum type.
      properties:
        name:
          description: Member name
          type: string
        value:
          description: Integer value of the member.
          format: int32
          type: integer
        displayName:
          description: localized name of the member.
          type: string
      required:
      - value
      title: EnumerationMember
      type: object
    EnumerationMemberContract:
      description: Member of enum type.
      properties:
        Name:
          description: Member name
          type: string
        Value:
          description: Integer value of the member.
          format: int32
          type: integer
        DisplayName:
          description: Translated names of the member.
          type: string
      title: EnumerationMemberContract
      type: object
    EnumerationType:
      description: Enumeration type
      properties:
        typeName:
          description: Name of the type.
          type: string
        members:
          description: Members of the type.
          items:
            $ref: '#/components/schemas/EnumerationMember'
          title: "EnumerationMember[]"
          type: array
      title: EnumerationType
      type: object
    EnumerationTypeContract:
      description: Enumeration type
      properties:
        TypeName:
          description: Name of the type.
          type: string
        Members:
          description: Members of the type.
          items:
            $ref: '#/components/schemas/EnumerationMemberContract'
          title: "EnumerationMemberContract[]"
          type: array
      title: EnumerationTypeContract
      type: object
    ErrorData:
      description: Error model to represent exceptions thrown from service requests
      properties:
        ErrorMessage:
          description: The message that describes the current exception.
          type: string
        SdkErrorId:
          description: The developer-defined identifier of the error.
          minLength: 1
          type: string
        ErrorType:
          description: The runtime type of the current exception.
          type: string
        ErrorDetails:
          description: The additional details.
          type: string
        SupportLink:
          description: The support url.
          type: string
        ErrorReportXml:
          description: Represents a citrix.com error report.
          type: string
        ErrorReport:
          $ref: '#/components/schemas/ErrorData_ErrorReport'
      required:
      - SdkErrorId
      title: ErrorData
      type: object
    ErrorReport:
      description: The error data that will be submitted to the Citrix Error Reporting
        service
      properties:
        CitrixErrorId:
          description: Gets or sets CitrixErrorId
          minLength: 1
          type: string
        ComponentName:
          description: Gets or sets  the name of the component that threw the error
          minLength: 1
          type: string
        ComponentVersion:
          description: "Gets or sets the version of the component that threw the error\n\
            \            "
          minLength: 1
          type: string
        ErrorData:
          additionalProperties:
            type: string
          description: Gets Key/value pairs of error information to be added to the
            error report
          title: IDictionary`2
          type: object
      required:
      - CitrixErrorId
      - ComponentName
      - ComponentVersion
      - ErrorData
      title: ErrorReport
      type: object
    FastApplicationSettingsRequestModel:
      description: Request object for session prelaunch and lingering settings.
      properties:
        Enabled:
          default: true
          description: Indicates if the pre-launch or lingering settings are enabled.
          type: boolean
        MaxAverageLoadThreshold:
          default: 0
          description: |-
            Specifies the average load threshold across the delivery group
            before pre-launched or lingering sessions will be terminated.
            When the threshold hits, sessions which have been pre-launched
            or which have lingered the longest will be terminated to reduce
            load.
          format: int32
          type: integer
        MaxLoadPerMachineThreshold:
          default: 0
          description: |-
            Specifies the maximum load threshold per machine in the
            delivery group before pre-launched or lingering sessions
            will be terminated.
            When the threshold hits, sessions which have been pre-launched
            or which have lingered the longest on each loaded machine will
            be terminated to reduce load.
            Was: public int? MaxPerDesktopLoadThreshold { get; set; }
          format: int32
          type: integer
        MaxTimeBeforeDisconnectMinutes:
          default: 0
          description: |-
            Specifies the time by which a pre-launched or lingering
            session will be disconnected.
          format: int32
          type: integer
        MaxTimeBeforeTerminateMinutes:
          default: 0
          description: |-
            Specifies the time by which a pre-launched or lingering
            session will be terminated.
          format: int32
          type: integer
        IncludedUserFilterEnabled:
          default: false
          description: |-
            Specifies whether the IncludedUsers filter
            is enabled or disabled.  When the user filter is enabled,
            pre-launch or lingering are enabled only to users who
            appear in the filter (either explicitly or by virtue of
            group membership).
            Was: UserFilterEnabled
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the users and user groups to whom the pre-launch
            or lingering settings apply.
            Was: users
          items:
            type: string
          type: array
      title: FastApplicationSettingsRequestModel
      type: object
    FastApplicationSettingsResponseModel:
      description: Response object used for session pre-launch and lingering settings.
      properties:
        Enabled:
          description: Indicates if the pre-launch or lingering settings are enabled.
          type: boolean
        MaxAverageLoadThreshold:
          description: |-
            Indicates the average load threshold across the delivery group
            before pre-launched or lingering sessions will be terminated.
            When the threshold hits, sessions which have been pre-launched
            or which have lingered the longest will be terminated to reduce
            load.
          format: int32
          type: integer
        MaxLoadPerMachineThreshold:
          description: |-
            Indicates the maximum load threshold per machine in the
            delivery group before pre-launched or lingering sessions
            will be terminated.
            When the threshold hits, sessions which have been pre-launched
            or which have lingered the longest on each loaded machine will
            be terminated to reduce load.
          format: int32
          type: integer
        MaxTimeBeforeDisconnectMinutes:
          description: |-
            Specifies the time by which a pre-launched or lingering
            session will be disconnected.
          format: int32
          type: integer
        MaxTimeBeforeTerminateMinutes:
          description: |-
            Specifies the time by which a pre-launched or lingering
            session will be terminated.
          format: int32
          type: integer
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter
            is enabled or disabled.  When the user filter is enabled,
            pre-launch or lingering are enabled only to users who
            appear in the filter (either explicitly or by virtue of
            group membership).
          type: boolean
        IncludedUsers:
          description: |-
            Indicates the users and user groups to whom the pre-launch
            or lingering settings apply.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
      required:
      - Enabled
      - IncludedUserFilterEnabled
      - MaxAverageLoadThreshold
      - MaxLoadPerMachineThreshold
      - MaxTimeBeforeDisconnectMinutes
      - MaxTimeBeforeTerminateMinutes
      title: FastApplicationSettingsResponseModel
      type: object
    FaultState:
      description: Fault states for machines.
      enum:
      - Unknown
      - None
      - FailedToStart
      - StuckOnBoot
      - Unregistered
      - MaxCapacity
      title: FaultState
      type: string
      x-enumNames:
      - Unknown
      - None
      - FailedToStart
      - StuckOnBoot
      - Unregistered
      - MaxCapacity
    FilterDefinition:
      description: Filter definition.
      example:
        filterName: filterName
        isUserFilter: true
        isSingleton: true
        filterType: "{}"
        explanation: explanation
      properties:
        filterType:
          allOf:
          - $ref: '#/components/schemas/FilterType'
          description: Filter type
          type: object
        filterName:
          description: Localized filter name
          type: string
        explanation:
          description: Localized explanation
          type: string
        isUserFilter:
          description: "True = user filter, False = machine filter"
          type: boolean
        isSingleton:
          description: "Is filter a singleton, only the NetScaler SD-Wan filter is\
            \ singleton."
          type: boolean
      required:
      - filterType
      - isSingleton
      - isUserFilter
      title: FilterDefinition
      type: object
    FilterDefinitionContract:
      description: Filter definition.
      example:
        FilterType: FilterType
        IsUserFilter: true
        Explanation: Explanation
        FilterName: FilterName
      properties:
        FilterType:
          description: Filter type
          type: string
        FilterName:
          description: Localized filter name
          type: string
        Explanation:
          description: Localized explanation
          type: string
        IsUserFilter:
          description: "True = user filter, False = machine filter"
          type: boolean
      title: FilterDefinitionContract
      type: object
    FilterDetail:
      description: Detailed information about filter.
      properties:
        FilterType:
          allOf:
          - $ref: '#/components/schemas/FilterType2'
          description: Filter type.
          type: object
        FilterValue:
          description: "Filter value, if available."
          type: string
        IsMatched:
          description: Indicate if the filter is a match.
          type: boolean
        FilterData:
          description: The filter data. This may need to get translated to a user
            readable string.
          type: string
        IsWithout:
          description: Valid only for the branch repeater filter and access control
            filter. Indicate the mode or condition.
          type: boolean
        Gateway:
          description: Valid only for the access control filter. The access gateway.
          type: string
      title: FilterDetail
      type: object
    FilterRequest:
      description: Filter definition
      example:
        isAllowed: true
        filterData: filterData
        isEnabled: true
        filterType: filterType
      properties:
        filterType:
          description: The filter filter type.
          type: string
        isAllowed:
          description: Allow or deny
          type: boolean
        isEnabled:
          description: Enabled or disabled
          type: boolean
        filterData:
          description: Serialized JSON string.
          type: string
      required:
      - isAllowed
      - isEnabled
      title: FilterRequest
      type: object
    FilterRequestContract:
      description: Filter definition
      example:
        FilterType: FilterType
        IsEnabled: false
        FilterName: FilterName
        IsAllowed: false
        FilterValue: FilterValue
      properties:
        FilterType:
          description: "The filter name, or filter type."
          type: string
        FilterName:
          description: The filter name.
          type: string
        IsAllowed:
          default: false
          description: Allow or deny
          type: boolean
        IsEnabled:
          default: false
          description: Enabled or disabled
          type: boolean
        FilterValue:
          description: Serialized JSON string.
          type: string
      title: FilterRequestContract
      type: object
    FilterResponse:
      description: Filter response.
      example:
        isAllowed: true
        filterData: filterData
        isEnabled: true
        filterGuid: filterGuid
        filterType: filterType
        policyGuid: policyGuid
      properties:
        policyGuid:
          description: Policy GUID.
          format: guid
          type: string
        filterType:
          description: The filter type.
          type: string
        filterGuid:
          description: The filter Guid.
          format: guid
          type: string
        isAllowed:
          description: Allow or deny
          type: boolean
        isEnabled:
          description: Enabled or disabled
          type: boolean
        filterData:
          description: Serialized JSON string.
          type: string
      required:
      - filterGuid
      - isAllowed
      - isEnabled
      - policyGuid
      title: FilterResponse
      type: object
    FilterResponseContract:
      description: Filter definition
      example:
        FilterType: FilterType
        IsUserFilter: true
        Identifier: Identifier
        IsSingleton: true
        IsEnabled: true
        Explanation: Explanation
        DisplayName: DisplayName
        Synopsis: Synopsis
        IsAllowed: true
        FilterValue: FilterValue
      properties:
        FilterType:
          description: The filter type.
          type: string
        Identifier:
          description: The filter name.
          type: string
        DisplayName:
          description: "Filter display name, this is translated and unique."
          type: string
        IsSingleton:
          description: "Is filter a singleton, only the NetScaler SD-Wan filter is\
            \ singleton."
          type: boolean
        Explanation:
          description: Translated filter explanation.
          type: string
        Synopsis:
          description: A summary of filter value.
          type: string
        IsUserFilter:
          description: "True = user filter, False = machine filter"
          type: boolean
        IsAllowed:
          description: Allow or deny
          type: boolean
        IsEnabled:
          description: Enabled or disabled
          type: boolean
        FilterValue:
          description: Serialized JSON string.
          type: string
      title: FilterResponseContract
      type: object
    FilterType:
      description: Names of all filters. The names get stored. So they must not be
        changed.
      enum:
      - AccessControl
      - BranchRepeater
      - ClientIP
      - ClientName
      - DesktopGroup
      - DesktopKind
      - DesktopTag
      - OU
      - User
      title: FilterType
      type: string
      x-enumNames:
      - AccessControl
      - BranchRepeater
      - ClientIP
      - ClientName
      - DesktopGroup
      - DesktopKind
      - DesktopTag
      - OU
      - User
    FilterType2:
      description: Names of all filters. The names get stored. So they must not be
        changed.
      enum:
      - AccessControl
      - BranchRepeater
      - ClientIP
      - ClientName
      - DesktopGroup
      - DesktopKind
      - DesktopTag
      - OU
      - User
      title: FilterType
      type: string
      x-enumNames:
      - AccessControl
      - BranchRepeater
      - ClientIP
      - ClientName
      - DesktopGroup
      - DesktopKind
      - DesktopTag
      - OU
      - User
    FlashUrlRenderAction:
      description: ""
      enum:
      - Client
      - Server
      - Block
      title: FlashUrlRenderAction
      type: string
      x-enumNames:
      - Client
      - Server
      - Block
    FlashUrlRuleContract:
      properties:
        RenderAction:
          $ref: '#/components/schemas/FlashUrlRenderAction'
        UrlPattern:
          type: string
        FlashInstance:
          type: string
      title: FlashUrlRuleContract
      type: object
    FtaRequestModel:
      description: Request object for a file-type association.
      example:
        ExtensionName: ExtensionName
        Description: Description
        OpenArguments: OpenArguments
        ContentType: ContentType
        HandlerName: HandlerName
      properties:
        ContentType:
          description: |-
            Content-type.  (Mime type)

            Optional.  If not specified, and an imported file type exists for the
            application with the same ExtensionName, this value will be
            retained.  Otherwise the default is an empty string.
          maxLength: 255
          pattern: "^[A-Za-z]+$"
          type: string
        ExtensionName:
          description: |-
            The extension name for the file type association. For example, ".txt" or
            ".doc".


            Required.  When enabling a file type association for an application, the
            extension name must not already be enabled for the same application.  To
            change properties of an already-enabled file type association, disable the
            file type association first.
          maxLength: 255
          minLength: 1
          pattern: \..+
          type: string
        Description:
          description: |-
            The description of the handler for the file type association.


            Optional.  If not specified, and an imported file type exists for the
            application with the same , this value will be
            retained.  Otherwise the default is an empty string.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        HandlerName:
          description: |-
            The name of the handler for the file type association (as seen in the
            Registry).


            Optional.  If not specified, a handler name will be chosen automatically based
            on the application's .
            In most cases, callers should NOT override the default behavior and should not
            pass a value for this property.
          maxLength: 255
          pattern: "^[A-Za-z]+$"
          type: string
        OpenArguments:
          description: |-
            The arguments for the open command that the handler should use. For example, "%1".


            Required.  When enabling a file type association for an application, the
            extension name must not already be enabled for the same application.  To
            change properties of an already-enabled file type association, you must
            disable the file type association first.
          maxLength: 255
          pattern: "^[A-Za-z]+$"
          type: string
      required:
      - ExtensionName
      title: FtaRequestModel
      type: object
    FtaResponseModel:
      description: Response object for a file-type association.
      example:
        ExtensionName: ExtensionName
        IsImported: true
        Description: Description
        OpenArguments: OpenArguments
        ContentType: ContentType
        Enabled: true
        HandlerName: HandlerName
      properties:
        ContentType:
          description: Content-type.  (Mime type)
          type: string
        ExtensionName:
          description: "The extension name for the file type association. For example,\
            \ \".txt\" or \".doc\"."
          minLength: 1
          type: string
        Description:
          description: The description of the handler for the file type association.
          type: string
        HandlerName:
          description: |-
            The name of the handler for the file type association (as seen in the
            Registry). For example, "TXTFILE" or "Word.Document.8".
          minLength: 1
          type: string
        OpenArguments:
          description: "The arguments for the open command that the handler should\
            \ use. For example, \"%1\"."
          type: string
        Enabled:
          description: |-
            Indicates if the file type association is enabled; i.e. whether users who
            receive the application will launch files of this type using the published
            application.
          type: boolean
        IsImported:
          description: |-
            Indicates if the file type association was imported, as opposed to explicitly
            added.  File type associations which are not imported will be deleted when
            disabled.
          type: boolean
      required:
      - Enabled
      - ExtensionName
      - HandlerName
      - IsImported
      title: FtaResponseModel
      type: object
    FtaResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfFtaResponseModel'
      - description: file-type association response model collection
        type: object
      title: FtaResponseModelCollection
    FunctionalLevel:
      description: Functional level for VDAs.
      enum:
      - Unknown
      - L5
      - LMIN
      - L7
      - L7_6
      - L7_7
      - L7_8
      - L7_9
      - L7_20
      - L7_25
      - L7_30
      - L7_34
      - LMAX
      title: FunctionalLevel
      type: string
      x-enumNames:
      - Unknown
      - L5
      - LMIN
      - L7
      - L7_6
      - L7_7
      - L7_8
      - L7_9
      - L7_20
      - L7_25
      - L7_30
      - L7_34
      - LMAX
    HomeZoneMode:
      description: |-
        Modes by which the system may choose to use a user's or
        application's home zone.
      enum:
      - Unknown
      - Prefer
      - Ignore
      - Only
      - User
      title: HomeZoneMode
      type: string
      x-enumNames:
      - Unknown
      - Prefer
      - Ignore
      - Only
      - User
    HypervisorAvailabilityZoneResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorAvailabilityZoneResourceResponseModel_allOf'
      title: HypervisorAvailabilityZoneResourceResponseModel
    HypervisorAWSConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorAWSConnectionDetailRequestModel_allOf'
      title: HypervisorAWSConnectionDetailRequestModel
    HypervisorAzureConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorAzureConnectionDetailRequestModel_allOf'
      title: HypervisorAzureConnectionDetailRequestModel
    HypervisorAzureEnvironmentResponseModel:
      description: "Azure rm environment instance, which used for front end Azure\
        \ environment show."
      properties:
        EnvironmentDisplayName:
          description: |-
            Environment display name which used to show on the front end.
            e.g. Azure Global, Azure China and Azure US Government.
          type: string
        EnvironmentName:
          allOf:
          - $ref: '#/components/schemas/AzureEnvironment'
          description: |-
            The environment name which used for identity the data for background.
            e.g. AzureCloud, AzureChinaCloud and AzureUSGovernment.
          type: object
      title: HypervisorAzureEnvironmentResponseModel
      type: object
    HypervisorBaseResponseModel:
      description: Hypervisor base response model
      properties:
        Id:
          description: Id of the resource.
          type: string
        Name:
          description: Name of the resource.
          type: string
        XDPath:
          description: |-
            XenApp & XenDesktop path to the resource
            on the hypervisor.  An example value is:
            `XDHyp:\Connections\{{hypervisor name}}\{{vm name}}.vm\{{snapshot name}}.snapshot`
            or
            `XDHyp:\HostingUnits\{{resource pool name}}\{{resource name}}.{{resource type}}`
          type: string
      title: HypervisorBaseResponseModel
      type: object
    HypervisorCloudRegionResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorCloudRegionResourceResponseModel_allOf'
      title: HypervisorCloudRegionResourceResponseModel
    HypervisorConfigurationObjectCapability:
      description: Capabilities for a specific type of resource on a hypervisor.
      properties:
        ResourceType:
          description: Type of hypervisor resource.
          type: string
        TypeCapabilities:
          description: List of capabilities.
          items:
            type: string
          type: array
      title: HypervisorConfigurationObjectCapability
      type: object
    HypervisorConnectionDetailRequestModel:
      description: Hypervisor connection details.
      example:
        ApiKey: ApiKey
        SslThumbprints:
        - SslThumbprints
        - SslThumbprints
        TenancyOcid: TenancyOcid
        ActiveDirectoryId: ActiveDirectoryId
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        MaxPowerActionsPercentageOfMachines: 314780940
        ServiceAccountId: ServiceAccountId
        PluginId: PluginId
        ServiceAccountFingerprint: ServiceAccountFingerprint
        Name: Name
        Addresses:
        - Addresses
        - Addresses
        SubscriptionId: SubscriptionId
        ManagementEndpoint: ManagementEndpoint
        PasswordFormat: "{}"
        ConnectionOptions: ConnectionOptions
        ServiceAccountCredentials: ServiceAccountCredentials
        OciEnvironment: "{}"
        ServiceAccountCredentialsFormat: "{}"
        CustomProperties: CustomProperties
        Password: Password
        SecretKeyFormat: "{}"
        ServiceAccountCredentialFormat: "{}"
        ApplicationSecret: ApplicationSecret
        UserName: UserName
        ConnectionType: "{}"
        Zone: Zone
        MaxAbsoluteActiveActions: 171976544
        SecretKey: SecretKey
        ApplicationSecretFormat: "{}"
        Scopes:
        - Scopes
        - Scopes
        SccmWakeUpProxy: true
        Region: Region
        Environment: "{}"
        WakeOnLanPackets: "{}"
        MaxAbsoluteNewActionsPerMinute: 1294386358
        StorageSuffix: StorageSuffix
        ApplicationId: ApplicationId
        AuthenticationAuthority: AuthenticationAuthority
        ServiceAccountCredential: ServiceAccountCredential
      properties:
        Name:
          description: Name of the hypervisor to create.  Required.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: Hypervisor connection type.  Required.
          type: object
        Scopes:
          description: |-
            Administrative scopes which the newly created hypervisor will be a
            part of.
          items:
            type: string
          type: array
        Tenants:
          description: Tenant(s) to associate the hypervisor with.
          items:
            type: string
          type: array
        MaxAbsoluteActiveActions:
          description: |-
            Maximum number of actions that can execute in parallel on the
            hypervisor.  Optional; if not specified, an appropriate default is
            selected based on the ConnectionType.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        MaxAbsoluteNewActionsPerMinute:
          description: |-
            Maximum number of actions that can be started on the hypervisor
            per-minute.  Optional; if not specified, an appropriate default is
            selected based on the ConnectionType.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        MaxPowerActionsPercentageOfMachines:
          description: |-
            Maximum percentage of machines on the hypervisor which can have
            their power state changed simultaneously.  Optional; if not
            specified, an appropriate default is selected based on the
            ConnectionType.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        ConnectionOptions:
          description: Connection options to use for the hypervisor.  Optional.
          maxLength: 1000
          pattern: ((.|\n)*)
          type: string
        Zone:
          description: |-
            Zone the hypervisor is associated with.  Optional.
            If not specified, the hypervisor is associated with the primary zone.
            See PrimaryZone.
          type: string
        Metadata:
          description: Metadata to use for the hypervisor. Optional.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ApiKey:
          description: The API key used to authenticate with the AWS APIs.  Required.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        SecretKey:
          description: |-
            The secret key used to authenticate with the AWS APIs.  Required.
            Must be specified in the format indicated by
            SecretKeyFormat.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        SecretKeyFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the SecretKey.  Default is
            PlainText.
          type: object
        Region:
          description: |-
            AWS region to connect to.  Optional.  If not specified, will connect
            to the global AWS APIs.  This can be used to discover the regions
            available within AWS.  Access to all other AWS resources requires
            the region to be set explicitly.
          maxLength: 16
          pattern: (.*)*
          type: string
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ApplicationSecret:
          description: |-
            The Application Secret of the service principal used to access the
            Azure APIs.  Required. Must be specified in the format indicated by
            ApplicationSecretFormat.
          maxLength: 20480
          minLength: 1
          type: string
        ApplicationSecretFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ApplicationSecret.  Default is
            PlainText.
          type: object
        SubscriptionId:
          description: Azure subscription ID.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ActiveDirectoryId:
          description: Azure active directory ID.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        Environment:
          allOf:
          - $ref: '#/components/schemas/AzureEnvironment'
          description: |-
            Azure environment.  Optional.  Default is
            AzureCloud.
          type: object
        ManagementEndpoint:
          description: |-
            Azure management endpoint.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        AuthenticationAuthority:
          description: |-
            Azure authentication authority.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        StorageSuffix:
          description: |-
            Azure storage suffix.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        CustomProperties:
          description: The properties of host connection that are specific to the
            target hosting infrastructure.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
        ServiceAccountId:
          description: |-
            The service account ID used to access the Google Cloud APIs.
            Required.
          maxLength: 512
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountCredentials:
          description: |-
            the JSON-encoded service account credentials used to access the
            Google Cloud APIs.  Required. Must be specified in the format
            indicated by ServiceAccountCredentialsFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialsFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredentials.  Default is
            PlainText.
          type: object
        UserName:
          description: Hypervisor user name.  Required.
          maxLength: 256
          minLength: 1
          pattern: (.*)*
          type: string
        Password:
          description: |-
            Hypervisor password.  Required. Must be specified in the format
            indicated by PasswordFormat.
          maxLength: 20480
          minLength: 1
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Default is
            PlainText.
          type: object
        Addresses:
          description: Hypervisor address(es).  At least one is required.
          items:
            type: string
          type: array
        PluginId:
          description: |-
            Custom hypervisor plugin ID.  Required if the
            ConnectionType is
            Custom.  Otherwise must not
            be specified.
          maxLength: 64
          pattern: (.*)*
          type: string
        SslThumbprints:
          description: |-
            SSL certificate thumbprints to consider acceptable for this
            connection.  Optional.  If not specified, and the hypervisor uses
            SSL for its connection, the SSL certificate's root certification
            authority and any intermediate certificates must be trusted.
          items:
            type: string
          type: array
        SccmWakeUpProxy:
          description: |-
            Indicates whether Microsoft System Center Configuration Manager 2012
            SP1 Wake-up Proxy is used for power management.  Optional; default
            is `false`.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/components/schemas/WakeOnLanTransmission'
          description: "Indicates the Wake on LAN packet transmission method to use\
            \ for\npower management.  Optional; default is "
          type: object
        TenancyOcid:
          description: |-
            Oracle Cloud Infrastructure tenancy to connect to.
            Required.
          maxLength: 128
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountCredential:
          description: |-
            The private key string to access the Oracle Cloud Infrastructure APIs.
            Required. Must be specified in the format
            indicated by ServiceAccountCredentialFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredential.  Default is
            PlainText.
          type: object
        ServiceAccountFingerprint:
          description: The fingerprint of the public key associate with the ServiceAccountCredential.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        OciEnvironment:
          allOf:
          - $ref: '#/components/schemas/OciEnvironment'
          description: |-
            OCI environment.  Optional.  Default is
            Commercial.
          type: object
      required:
      - ConnectionType
      - Name
      title: HypervisorConnectionDetailRequestModel
      type: object
    HypervisorConnectionType:
      description: Types of hypervisor connections.
      enum:
      - Unknown
      - XenServer
      - SCVMM
      - VCenter
      - Custom
      - AWS
      - WakeOnLAN
      - AzureRM
      - GoogleCloudPlatform
      - CloudPlatform
      - OracleCloudInfrastructure
      title: HypervisorConnectionType
      type: string
      x-enumNames:
      - Unknown
      - XenServer
      - SCVMM
      - VCenter
      - Custom
      - AWS
      - WakeOnLAN
      - AzureRM
      - GoogleCloudPlatform
      - CloudPlatform
      - OracleCloudInfrastructure
    HypervisorDeletePreviewResponseModel:
      description: Hypervisor Delete Preview response model.
      example:
        UnknownMachines: 5
        TotalImpactedCatalogCount: 0
        TaskReferences: 1
        CanBeDeleted: true
        ProvisioningSchemeReferences: 6
        HostsToBeDeleted:
        - HostsToBeDeleted
        - HostsToBeDeleted
        ImpactedCatalogs:
          key: 5
      properties:
        CanBeDeleted:
          description: If the hypervisor can be deleted.
          type: boolean
        TotalImpactedCatalogCount:
          description: Totally impacted catalogs count.
          format: int32
          type: integer
        ProvisioningSchemeReferences:
          description: Provisioning scheme references count.
          format: int32
          type: integer
        TaskReferences:
          description: Task references count.
          format: int32
          type: integer
        UnknownMachines:
          description: Unknown machines count.
          format: int32
          type: integer
        HostsToBeDeleted:
          description: Hosting units to be deleted.
          items:
            type: string
          type: array
        ImpactedCatalogs:
          additionalProperties:
            format: int32
            type: integer
          description: Impacted catalogs dictionary.
          title: Dictionary`2
          type: object
      title: HypervisorDeletePreviewResponseModel
      type: object
    HypervisorDetailAWSResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailAWSResponseModel_allOf'
      properties:
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.
          minLength: 1
          type: string
        SubscriptionId:
          description: Azure subscription ID.
          minLength: 1
          type: string
        ActiveDirectoryId:
          description: Azure active directory ID.
          minLength: 1
          type: string
        Environment:
          allOf:
          - $ref: '#/definitions/AzureEnvironment'
          description: Azure environment.
          type: object
        ManagementEndpoint:
          description: Azure management endpoint.
          minLength: 1
          type: string
        AuthenticationAuthority:
          description: Azure authentication authority.
          minLength: 1
          type: string
        StorageSuffix:
          description: Azure storage suffix.
          minLength: 1
          type: string
        ServiceAccountId:
          description: The service account ID used to access the Google Cloud APIs.
          minLength: 1
          type: string
        SccmWakeUpProxy:
          description: |-
            Indicates whether Microsoft System Center Configuration Manager 2012
            SP1 Wake-up Proxy is used for power management.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/definitions/WakeOnLanTransmission'
          description: |-
            Indicates the Wake on LAN packet transmission method to use for
            power management.
          type: object
        SslThumbprints:
          description: |-
            SSL thumbprints considered acceptable for the SSL certificate
            presented by the hypervisor.
          items:
            type: string
          type: array
        UserName:
          description: |-
            The user name for the credentials used to communicate with the
            hypervisor.
          minLength: 1
          type: string
        TenancyOcid:
          description: |-
            Oracle Cloud Infrastructure tenancy to connect to.
            Required.
          minLength: 1
          type: string
        OciRegion:
          description: The region of Oracle Cloud Infrastructure.
          minLength: 1
          type: string
        OciEnvironment:
          description: "The environment of Oracle Cloud Infrastructure, Commercial\
            \ or Government."
          minLength: 1
          type: string
        Fingerprint:
          description: The fingerprint of Oracle Cloud Infrastructure API key.
          minLength: 1
          type: string
        Capabilities:
          description: List of capabilities supported by the hypervisor.
          items:
            type: string
          type: array
        ConfigurationObjectCapabilities:
          description: |-
            List of configuration capabilities supported by each type of object
            on the hypervisor.
          items:
            $ref: '#/components/schemas/HypervisorConfigurationObjectCapability'
          title: "HypervisorConfigurationObjectCapability[]"
          type: array
        PluginRevision:
          description: Revision of the plugin in use.
          minLength: 1
          type: string
        MaxAbsoluteActiveActions:
          description: |-
            Maximum number of actions that can execute in parallel on the
            hypervisor.
          format: int32
          type: integer
        MaxAbsoluteNewActionsPerMinute:
          description: |-
            Maximum number of actions that can be started on the hypervisor
            per-minute.
          format: int32
          type: integer
        MaxPowerActionsPercentageOfMachines:
          description: |-
            Maximum percentage of machines on the hypervisor which can have
            their power state changed simultaneously.
          format: int32
          type: integer
        ConnectionOptions:
          description: Connection options to use for the hypervisor.
          minLength: 1
          type: string
        SupportsLocalStorageCaching:
          description: Indicates whether the hypervisor supports local storage caching.
          type: boolean
        SupportsPvsVms:
          description: Indicates whether the hypervisor supports PVS VMs.
          type: boolean
        Metadata:
          description: Metadata for hypervisor connections.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ConnectionType:
          allOf:
          - $ref: '#/definitions/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
      required:
      - ActiveDirectoryId
      - ApplicationId
      - AuthenticationAuthority
      - Capabilities
      - ConfigurationObjectCapabilities
      - ConnectionOptions
      - ConnectionType
      - Environment
      - Fingerprint
      - ManagementEndpoint
      - MaxAbsoluteActiveActions
      - MaxAbsoluteNewActionsPerMinute
      - MaxPowerActionsPercentageOfMachines
      - OciEnvironment
      - OciRegion
      - PluginRevision
      - SccmWakeUpProxy
      - ServiceAccountId
      - StorageSuffix
      - SubscriptionId
      - SupportsLocalStorageCaching
      - SupportsPvsVms
      - TenancyOcid
      - UserName
      - WakeOnLanPackets
      title: HypervisorDetailAWSResponseModel
    HypervisorDetailAzureResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailAzureResponseModel_allOf'
      title: HypervisorDetailAzureResponseModel
    HypervisorDetailGCPResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailGCPResponseModel_allOf'
      title: HypervisorDetailGCPResponseModel
    HypervisorDetailOciResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailOciResponseModel_allOf'
      title: HypervisorDetailOciResponseModel
    HypervisorDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailResponseModel_allOf'
      example:
        Fingerprint: Fingerprint
        ApiKey: ApiKey
        UserName: UserName
        OciRegion: OciRegion
        SslThumbprints:
        - SslThumbprints
        - SslThumbprints
        TenancyOcid: TenancyOcid
        ActiveDirectoryId: ActiveDirectoryId
        ServiceAccountId: ServiceAccountId
        SubscriptionId: SubscriptionId
        ManagementEndpoint: ManagementEndpoint
        SccmWakeUpProxy: true
        Region: Region
        Environment: "{}"
        WakeOnLanPackets: "{}"
        MaximumConcurrentProvisioningOperations: 0
        OciEnvironment: OciEnvironment
        StorageSuffix: StorageSuffix
        ApplicationId: ApplicationId
        AuthenticationAuthority: AuthenticationAuthority
      properties:
        ApiKey:
          description: The API key used to authenticate with the AWS APIs.
          minLength: 1
          type: string
        Region:
          description: The AWS region which the hypervisor represents.
          minLength: 1
          type: string
        MaximumConcurrentProvisioningOperations:
          description: AWS maximum concurrent provisioning operations.
          format: int32
          type: integer
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.
          minLength: 1
          type: string
        SubscriptionId:
          description: Azure subscription ID.
          minLength: 1
          type: string
        ActiveDirectoryId:
          description: Azure active directory ID.
          minLength: 1
          type: string
        Environment:
          allOf:
          - $ref: '#/definitions/AzureEnvironment'
          description: Azure environment.
          type: object
        ManagementEndpoint:
          description: Azure management endpoint.
          minLength: 1
          type: string
        AuthenticationAuthority:
          description: Azure authentication authority.
          minLength: 1
          type: string
        StorageSuffix:
          description: Azure storage suffix.
          minLength: 1
          type: string
        ServiceAccountId:
          description: The service account ID used to access the Google Cloud APIs.
          minLength: 1
          type: string
        SccmWakeUpProxy:
          description: |-
            Indicates whether Microsoft System Center Configuration Manager 2012
            SP1 Wake-up Proxy is used for power management.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/definitions/WakeOnLanTransmission'
          description: |-
            Indicates the Wake on LAN packet transmission method to use for
            power management.
          type: object
        SslThumbprints:
          description: |-
            SSL thumbprints considered acceptable for the SSL certificate
            presented by the hypervisor.
          items:
            type: string
          type: array
        UserName:
          description: |-
            The user name for the credentials used to communicate with the
            hypervisor.
          minLength: 1
          type: string
        TenancyOcid:
          description: |-
            Oracle Cloud Infrastructure tenancy to connect to.
            Required.
          minLength: 1
          type: string
        OciRegion:
          description: The region of Oracle Cloud Infrastructure.
          minLength: 1
          type: string
        OciEnvironment:
          description: "The environment of Oracle Cloud Infrastructure, Commercial\
            \ or Government."
          minLength: 1
          type: string
        Fingerprint:
          description: The fingerprint of Oracle Cloud Infrastructure API key.
          minLength: 1
          type: string
      required:
      - ActiveDirectoryId
      - ApiKey
      - ApplicationId
      - AuthenticationAuthority
      - Environment
      - Fingerprint
      - ManagementEndpoint
      - OciEnvironment
      - OciRegion
      - Region
      - SccmWakeUpProxy
      - ServiceAccountId
      - StorageSuffix
      - SubscriptionId
      - TenancyOcid
      - UserName
      - WakeOnLanPackets
      title: HypervisorDetailResponseModel
    HypervisorDetailTraditionalResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailTraditionalResponseModel_allOf'
      title: HypervisorDetailTraditionalResponseModel
    HypervisorDetailWOLResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorDetailTraditionalResponseModel'
      - $ref: '#/components/schemas/HypervisorDetailWOLResponseModel_allOf'
      title: HypervisorDetailWOLResponseModel
    HypervisorFaultResponseModel:
      description: Fault info for a hypervisor.
      properties:
        State:
          description: "Fault state associated with connection, or 'None' if OK."
          type: string
        Reason:
          description: Exception error text associated with any fault state.
          type: string
        TimeEntered:
          description: Time at which the hypervisor entered fault state
          type: string
        DurationInSeconds:
          description: Period for which the hypervisor has been in fault state
          format: double
          title: Double
          type: number
      title: HypervisorFaultResponseModel
      type: object
    HypervisorGCPConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorGCPConnectionDetailRequestModel_allOf'
      title: HypervisorGCPConnectionDetailRequestModel
    HypervisorGpuTypeResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorGpuTypeResourceResponseModel_allOf'
      title: HypervisorGpuTypeResourceResponseModel
    HypervisorMachineCatalogResponseModel:
      allOf:
      - $ref: '#/components/schemas/MachineCatalogResponseModel'
      - $ref: '#/components/schemas/HypervisorMachineCatalogResponseModel_allOf'
      title: HypervisorMachineCatalogResponseModel
    HypervisorMachineCatalogResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorMachineCatalogResponseModel'
      - description: Machine catalog collection related to a hypervisor or resource
          pool.
        type: object
      title: HypervisorMachineCatalogResponseModelCollection
    HypervisorOciConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorOciConnectionDetailRequestModel_allOf'
      title: HypervisorOciConnectionDetailRequestModel
    HypervisorPluginResponseModel:
      description: Hypervisor plugin response model.
      properties:
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: The Hypervisor connection type.
          type: object
        DisplayName:
          description: 'Hypervisor display name. '
          type: string
        PluginFactoryName:
          description: Plugin factory name.
          type: string
        UsesCloudInfrastructure:
          description: If use Cloud Infrastructure.
          type: boolean
        Environments:
          description: |-
            This property only used when ConnectionType is AzureRM
            This property provides all supported Azure environments.
          items:
            $ref: '#/components/schemas/HypervisorAzureEnvironmentResponseModel'
          title: "HypervisorAzureEnvironmentResponseModel[]"
          type: array
        CitrixVerified:
          description: If the plugin is verified by Citrix.
          type: boolean
      title: HypervisorPluginResponseModel
      type: object
    HypervisorPluginResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorPluginResponseModel'
      - type: object
      title: HypervisorPluginResponseModelCollection
    HypervisorResourcePoolAWSDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolAWSDetailResponseModel_allOf'
      properties:
        Region:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Azure region which the resource pool is connected to.
          type: object
        VirtualNetwork:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Azure virtual network which the resource pool is connected
            to.
          type: object
        Subnets:
          description: |-
            List of subnets in the VirtualNetwork that may be used
            within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        Project:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Google Cloud Platform project which the resource pool is connected
            to.
          type: object
        RootPath:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: |-
            Root resource path, within the full set of hypervisor resources, in
            which the resource pool resides.
          type: object
        Storage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for OS disks of virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        TemporaryStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for temporary data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        UseLocalStorageCaching:
          description: |-
            Indicates whether virtual machines created within this resource pool
            will use local storage caching for their disk images.
          type: boolean
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          type: string
        PersonalvDiskStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for personal v disk data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        GpuTypes:
          description: |-
            GPU types available in the resource pool.  Only applicable to
            hypervisors that support GPU types.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        ConnectionType:
          allOf:
          - $ref: '#/definitions/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
        UsesExplicitStorage:
          description: If the hypervisor resource pool use ExplicitStorage.
          type: boolean
        Metadata:
          description: 'Metadata for hypervisor resource pool. '
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - ConnectionType
      - Project
      - Region
      - Storage
      - Subnets
      - TemporaryStorage
      - VirtualNetwork
      title: HypervisorResourcePoolAWSDetailResponseModel
    HypervisorResourcePoolAzureDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolAzureDetailResponseModel_allOf'
      title: HypervisorResourcePoolAzureDetailResponseModel
    HypervisorResourcePoolDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel_allOf'
      example:
        Networks:
        - null
        - null
        RootPath: "{}"
        PersonalvDiskStorage:
        - null
        - null
        AvailabilityZone: "{}"
        VirtualNetwork: "{}"
        UseLocalStorageCaching: true
        Project: "{}"
        Subnets:
        - null
        - null
        VirtualPrivateCloud: "{}"
        Storage:
        - null
        - null
        TemporaryStorage:
        - null
        - null
        Region: "{}"
        CustomProperties: CustomProperties
      properties:
        VirtualPrivateCloud:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: |-
            AWS Virtual Private Cloud (VPC) which the resource pool is connected
            to.
          type: object
        AvailabilityZone:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Availability zone.
          type: object
        Networks:
          description: List of networks that may be used within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        Region:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Azure region which the resource pool is connected to.
          type: object
        VirtualNetwork:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Azure virtual network which the resource pool is connected
            to.
          type: object
        Subnets:
          description: |-
            List of subnets in the VirtualNetwork that may be used
            within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        Project:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: Google Cloud Platform project which the resource pool is connected
            to.
          type: object
        RootPath:
          allOf:
          - $ref: '#/definitions/HypervisorResourceRefResponseModel'
          description: |-
            Root resource path, within the full set of hypervisor resources, in
            which the resource pool resides.
          type: object
        Storage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for OS disks of virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        TemporaryStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for temporary data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        UseLocalStorageCaching:
          description: |-
            Indicates whether virtual machines created within this resource pool
            will use local storage caching for their disk images.
          type: boolean
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          type: string
        PersonalvDiskStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for personal v disk data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
      required:
      - AvailabilityZone
      - Networks
      - Project
      - Region
      - Storage
      - Subnets
      - TemporaryStorage
      - VirtualNetwork
      - VirtualPrivateCloud
      title: HypervisorResourcePoolDetailResponseModel
    HypervisorResourcePoolGcpDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolGcpDetailResponseModel_allOf'
      title: HypervisorResourcePoolGcpDetailResponseModel
    HypervisorResourcePoolPatchPreviewRequestModel:
      example:
        Networks:
        - Networks
        - Networks
      properties:
        Networks:
          description: |-
            Path to the networks/subnets that are available for provisioning operations
            in this resource pool. At least one is required.
          items:
            type: string
          type: array
      title: HypervisorResourcePoolPatchPreviewRequestModel
      type: object
    HypervisorResourcePoolPatchPreviewResponseModel:
      description: Hypervisor Resource Pool Patch Preview response model.
      example:
        NetworksToBeDeleted:
        - NetworksToBeDeleted
        - NetworksToBeDeleted
        DeleteImpactedCatalogs:
          key:
            key: 0
        NetworksCanBeDeleted:
        - NetworksCanBeDeleted
        - NetworksCanBeDeleted
      properties:
        NetworksCanBeDeleted:
          description: These networks are not referenced and can be deleted normally.
          items:
            type: string
          type: array
        NetworksToBeDeleted:
          description: "After comparing with the present hosting unit, these networks\
            \ should be deleted."
          items:
            type: string
          type: array
        DeleteImpactedCatalogs:
          additionalProperties:
            additionalProperties:
              format: int32
              type: integer
            title: Dictionary`2
            type: object
          description: Details of the referenced network and catalogs.
          title: Dictionary`2
          type: object
      title: HypervisorResourcePoolPatchPreviewResponseModel
      type: object
    HypervisorResourcePoolRefResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorBaseResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolRefResponseModel_allOf'
      title: HypervisorResourcePoolRefResponseModel
    HypervisorResourcePoolResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorBaseResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolResponseModel_allOf'
      title: HypervisorResourcePoolResponseModel
    HypervisorResourcePoolResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorResourcePoolDetailResponseModel'
      - type: object
      title: HypervisorResourcePoolResponseModelCollection
    HypervisorResourcePoolStorageRequestModel:
      description: Request model for specifying resource pool storage.
      example:
        StoragePath: StoragePath
        Superseded: false
      properties:
        StoragePath:
          description: Path to storage within the resource pool.  Required.
          minLength: 1
          type: string
        Superseded:
          default: false
          description: |-
            Indicates whether the storage has been superseded. Superseded
            storage may be used for existing virtual machines, but is not used
            when provisioning new virtual machines.  Optional; default is
            `false`.
          type: boolean
      required:
      - StoragePath
      title: HypervisorResourcePoolStorageRequestModel
      type: object
    HypervisorResourcePoolTestResponseModel:
      description: Response object for a resource pool test result.
      example:
        NumWarnings: 6
        NumFailures: 1
        ResourcePool: null
        NumPassed: 0
      properties:
        ResourcePool:
          $ref: '#/components/schemas/HypervisorResourcePoolTestResponseModel_ResourcePool'
        NumPassed:
          description: The number of tests that passed.
          format: int32
          type: integer
        NumWarnings:
          description: The number of warnings that were found.
          format: int32
          type: integer
        NumFailures:
          description: The number of tests that failed.
          format: int32
          type: integer
      required:
      - NumFailures
      - NumPassed
      - NumWarnings
      - ResourcePool
      title: HypervisorResourcePoolTestResponseModel
      type: object
    HypervisorResourcePoolTraditionalDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolDetailResponseModel'
      - $ref: '#/components/schemas/HypervisorResourcePoolTraditionalDetailResponseModel_allOf'
      title: HypervisorResourcePoolTraditionalDetailResponseModel
    HypervisorResourceRefResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorBaseResponseModel'
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel_allOf'
      title: HypervisorResourceRefResponseModel
    HypervisorResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      - $ref: '#/components/schemas/HypervisorResourceResponseModel_allOf'
      example:
        AttachedDisks:
        - IsBootDisk: true
          InfrastructureUid: InfrastructureUid
          SizeGB: 4
          Name: Name
        - IsBootDisk: true
          InfrastructureUid: InfrastructureUid
          SizeGB: 4
          Name: Name
        MemorySizeMB: 5.962133916683182
        IsUsedInSite: true
        Owner: Owner
        Description: Description
        AmazonComputeUnits: 2.3021358869347655
        HasPersistentRootVolume: true
        EgressRules:
        - GroupIds:
          - GroupIds
          - GroupIds
          FromPort: 6.027456183070403
          ToPort: 1.4658129805029452
          Protocol: Protocol
          IPRanges:
          - IPRanges
          - IPRanges
        - GroupIds:
          - GroupIds
          - GroupIds
          FromPort: 6.027456183070403
          ToPort: 1.4658129805029452
          Protocol: Protocol
          IPRanges:
          - IPRanges
          - IPRanges
        HasDedicatedResource: true
        VirtualPrivateCloudId: VirtualPrivateCloudId
        HardDiskSizeGB: 3
        Superseded: true
        IngressRules:
        - GroupIds:
          - GroupIds
          - GroupIds
          FromPort: 6.027456183070403
          ToPort: 1.4658129805029452
          Protocol: Protocol
          IPRanges:
          - IPRanges
          - IPRanges
        - GroupIds:
          - GroupIds
          - GroupIds
          FromPort: 6.027456183070403
          ToPort: 1.4658129805029452
          Protocol: Protocol
          IPRanges:
          - IPRanges
          - IPRanges
        NetworkPerformanceIsUnlimited: true
        CpuCount: 7
        Endpoint: Endpoint
        MemoryMB: 9
        InstanceSecurityGroupLimit: 7
        DedicatedTenancy: DedicatedTenancy
        VMId: VMId
        MinMemoryMB: 2
        IsWindowsTemplate: true
        NetworkMappings:
        - DeviceId: DeviceId
          Network: null
          IsCardEnabled: true
          DeviceName: DeviceName
        - DeviceId: DeviceId
          Network: null
          IsCardEnabled: true
          DeviceName: DeviceName
        FrameBufferSizeMB: 0
        Enabled: true
        NumberOfCores: 5.637376656633329
        MacAddress: MacAddress
        OptimizedForPooledDesktops: true
        NetworkPerformanceIsDefault: true
        SupportsAzurePremiumStorage: true
        SupportsSecurityGroups: true
        NetworkPerformance: NetworkPerformance
      properties:
        SupportsSecurityGroups:
          description: Indicates whether this zone supports the use of security groups
            for isolation.
          type: boolean
        Enabled:
          description: Indicates whether the GPU type is enabled on the hypervisor.
          type: boolean
        FrameBufferSizeMB:
          description: Frame Buffer Size in MB
          format: int32
          type: integer
        HasDedicatedResource:
          description: Indicates whether the GPU type has resources dedicated to it.
          type: boolean
        Description:
          description: Description of the security group.
          type: string
        EgressRules:
          description: Egress rules governing outbound network traffic.
          items:
            $ref: '#/components/schemas/HypervisorSecurityGroupRuleResponseModel'
          title: "HypervisorSecurityGroupRuleResponseModel[]"
          type: array
        IngressRules:
          description: Ingress rules governing inbound network traffic.
          items:
            $ref: '#/components/schemas/HypervisorSecurityGroupRuleResponseModel'
          title: "HypervisorSecurityGroupRuleResponseModel[]"
          type: array
        VirtualPrivateCloudId:
          description: The identifier of the associated VPC.
          type: string
        DedicatedTenancy:
          description: |-
            Indicates whether this service offering prescribes dedicated tenancy for the instances
            that use it.
          type: string
        MemorySizeMB:
          description: "The amount of memory that is available to instances using\
            \ this service offering, measured in megabytes."
          format: decimal
          title: Decimal
          type: number
        NumberOfCores:
          description: The number of virtual cores that are available to instances
            using this service offering.
          format: decimal
          title: Decimal
          type: number
        AmazonComputeUnits:
          description: |-
            The number of Amazon EC2 compute units that are available to instances using this service offering. This
            property is only meaningful for EC2-based cloud connections.
          format: decimal
          title: Decimal
          type: number
        OptimizedForPooledDesktops:
          description: |-
            Indicates whether this service offering is intended specifically for usage with pooled
            desktops.
          type: boolean
        NetworkPerformance:
          description: The network performance available to instances using this service
            offering.
          type: string
        NetworkPerformanceIsUnlimited:
          description: Indicates whether this service offering has no limit for it's
            network rate.
          type: boolean
        NetworkPerformanceIsDefault:
          description: Indicates whether this service offering has a default limit
            for it's network rate.
          type: boolean
        IsUsedInSite:
          description: Indicates whether the service offering is used by any machine
            catalogs in the site.
          type: boolean
        SupportsAzurePremiumStorage:
          description: |-
            Indicates whether the service offering supports premium storage.
            This property is only meaningful on Azure.
          type: boolean
        Superseded:
          description: |-
            Indicates whether storage has been superseded.  Superseded storage
            may be used for existing virtual machines, but is not used when
            provisioning new virtual machines.
          type: boolean
        Owner:
          description: The account ID for the owner of this template.
          type: string
        IsWindowsTemplate:
          description: "Indicates whether this is a Windows OS template, if known."
          type: boolean
        HasPersistentRootVolume:
          description: |-
            Indicates whether this template has a persistent root volume (eg. is an EBS-backed image
            on AWS).
          type: boolean
        VMId:
          description: "Id of the VM, as defined by the hypervisor."
          minLength: 1
          type: string
        MacAddress:
          description: MAC address of the VM.
          type: string
        CpuCount:
          description: "Number of CPUs, if known."
          format: int32
          type: integer
        MemoryMB:
          description: "Memory in megabytes, if known."
          format: int32
          type: integer
        HardDiskSizeGB:
          description: "Hard disk size in gigabytes, if known."
          format: int32
          type: integer
        MinMemoryMB:
          description: "Minimum memory required to run this VM or snapshot, in megabytes,\
            \ if known."
          format: int32
          type: integer
        NetworkMappings:
          description: "Network mappings associated with the VM, if known."
          items:
            $ref: '#/components/schemas/NetworkMapResponseModel'
          title: "NetworkMapResponseModel[]"
          type: array
        AttachedDisks:
          description: "Disks attached to the VM, if known."
          items:
            $ref: '#/components/schemas/AttachedDiskResponseModel'
          title: "AttachedDiskResponseModel[]"
          type: array
        InstanceSecurityGroupLimit:
          description: Indicates the maximum number of security groups allowed per
            instance in this VPC
          format: int32
          type: integer
        Endpoint:
          description: The API address with the region.
          type: string
      required:
      - EgressRules
      - Enabled
      - FrameBufferSizeMB
      - HasDedicatedResource
      - HasPersistentRootVolume
      - IngressRules
      - InstanceSecurityGroupLimit
      - IsUsedInSite
      - MemorySizeMB
      - NetworkPerformanceIsDefault
      - NetworkPerformanceIsUnlimited
      - NumberOfCores
      - OptimizedForPooledDesktops
      - Superseded
      - SupportsSecurityGroups
      - VMId
      title: HypervisorResourceResponseModel
    HypervisorResourceResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorResourceResponseModel'
      - description: Hypervisor resource response model Collection model.
        type: object
      title: HypervisorResourceResponseModelCollection
    HypervisorResourceSearchRequestModel:
      description: Request model for hypervisor resource search criteria.
      example:
        Path: Path
        ForwardDirection: true
        ResourceType: ResourceType
        Id: Id
        NameContains: NameContains
        Tags:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        Path:
          description: The path to retrieve contents from.
          type: string
        ResourceType:
          description: The type of resources to get.
          type: string
        ForwardDirection:
          description: "True if returning items which begin at the ContinuationToken,\
            \ false if ending at the ContinuationToken."
          type: boolean
        NameContains:
          description: Only return items which contain this string in their Name.
          type: string
        Tags:
          description: |-
            A list of key-value pairs, searching by a tag lets you filter the resources by a tag key or a tag value(value is optional).
            For example: [{"Name": "Priority", "Value": "high"}, {"Name": "Name", "Value": "test"}, {"Name": "TestMachine", "Value": ""}, {"Name": "ADBackup", "Value": "Not tagged"}]
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Id:
          description: Only return the item with the matching Id.
          type: string
      title: HypervisorResourceSearchRequestModel
      type: object
    HypervisorResourceValidationRequestModel:
      description: The resource validation request.
      example:
        Path: Path
      properties:
        Path:
          description: Relative path of a resource
          minLength: 1
          type: string
      required:
      - Path
      title: HypervisorResourceValidationRequestModel
      type: object
    HypervisorResourceValidationResponseModel:
      description: The resource validation response.
      example:
        Reports:
        - Category: "{}"
          Violations:
          - RelativePath: RelativePath
            Message: Message
            Level: "{}"
            Detail: Detail
          - RelativePath: RelativePath
            Message: Message
            Level: "{}"
            Detail: Detail
          Result: "{}"
        - Category: "{}"
          Violations:
          - RelativePath: RelativePath
            Message: Message
            Level: "{}"
            Detail: Detail
          - RelativePath: RelativePath
            Message: Message
            Level: "{}"
            Detail: Detail
          Result: "{}"
        ResourceRef: null
      properties:
        ResourceRef:
          $ref: '#/components/schemas/HypervisorResourceValidationResponseModel_ResourceRef'
        Reports:
          description: The validation reports.
          items:
            $ref: '#/components/schemas/ResourceValidationReportModel'
          title: "ResourceValidationReportModel[]"
          type: array
      title: HypervisorResourceValidationResponseModel
      type: object
    HypervisorResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorBaseResponseModel'
      - $ref: '#/components/schemas/HypervisorResponseModel_allOf'
      title: HypervisorResponseModel
    HypervisorResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorResponseModel'
      - type: object
      title: HypervisorResponseModelCollection
    HypervisorsAndResourcePoolsResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResponseModel'
      - $ref: '#/components/schemas/HypervisorsAndResourcePoolsResponseModel_allOf'
      title: HypervisorsAndResourcePoolsResponseModel
    HypervisorsAndResourcePoolsResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorsAndResourcePoolsResponseModel'
      - description: Hypervisor and resource pools response model Collection model.
        type: object
      title: HypervisorsAndResourcePoolsResponseModelCollection
    HypervisorSecurityGroupResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorSecurityGroupResourceResponseModel_allOf'
      title: HypervisorSecurityGroupResourceResponseModel
    HypervisorSecurityGroupRuleResponseModel:
      description: Security group rule.
      example:
        GroupIds:
        - GroupIds
        - GroupIds
        FromPort: 6.027456183070403
        ToPort: 1.4658129805029452
        Protocol: Protocol
        IPRanges:
        - IPRanges
        - IPRanges
      properties:
        FromPort:
          description: |-
            Start of the port number range, required for any protocol that uses ports.
            In AWS this can also be an ICMP port number, where -1 specifies all ICMP types.
          format: decimal
          title: Decimal
          type: number
        GroupIds:
          description: IDs of source or destination security groups. Empty when CIDR
            ranges are specified.
          items:
            type: string
          type: array
        IPRanges:
          description: Source or destination CIDR address ranges. Empty if group IDs
            are specified.
          items:
            type: string
          type: array
        Protocol:
          description: |-
            IP protocol name or number. In AWS this is the IP protocol name or number, where -1 specifies all protocols.
            Protocol numbers: http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xml
          minLength: 1
          type: string
        ToPort:
          description: |-
            End of the port number range, required for any protocol that uses ports.
            In AWS this can also be an ICMP port number, where -1 specfies all ICMP types.
          format: decimal
          title: Decimal
          type: number
      required:
      - Protocol
      title: HypervisorSecurityGroupRuleResponseModel
      type: object
    HypervisorServerHAAddressesResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorBaseResponseModel'
      - $ref: '#/components/schemas/HypervisorServerHAAddressesResponseModel_allOf'
      title: HypervisorServerHAAddressesResponseModel
    HypervisorServiceOfferingResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorServiceOfferingResourceResponseModel_allOf'
      title: HypervisorServiceOfferingResourceResponseModel
    HypervisorStorageResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorStorageResourceResponseModel_allOf'
      title: HypervisorStorageResourceResponseModel
    HypervisorTemplateResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorVmSnapshotResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorTemplateResourceResponseModel_allOf'
      title: HypervisorTemplateResourceResponseModel
    HypervisorTestResponseModel:
      description: Response object for a hypervisor test result.
      example:
        NumWarnings: 6
        Hypervisor: null
        NumFailures: 1
        NumPassed: 0
      properties:
        Hypervisor:
          $ref: '#/components/schemas/HypervisorTestResponseModel_Hypervisor'
        NumPassed:
          description: The number of tests that passed.
          format: int32
          type: integer
        NumWarnings:
          description: The number of warnings that were found.
          format: int32
          type: integer
        NumFailures:
          description: The number of tests that failed.
          format: int32
          type: integer
      required:
      - Hypervisor
      - NumFailures
      - NumPassed
      - NumWarnings
      title: HypervisorTestResponseModel
      type: object
    HypervisorTraditionalConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorTraditionalConnectionDetailRequestModel_allOf'
      title: HypervisorTraditionalConnectionDetailRequestModel
    HypervisorVmResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorVmSnapshotResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorVmResourceResponseModel_allOf'
      title: HypervisorVmResourceResponseModel
    HypervisorVmSnapshotResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorVmSnapshotResourceResponseModel_allOf'
      title: HypervisorVmSnapshotResourceResponseModel
    HypervisorVmValidationRequestModel:
      description: A list of hypervisor vm path that need to be validated.
      example:
        VmPaths:
        - VmPaths
        - VmPaths
      properties:
        VmPaths:
          description: A list of Vm path.
          items:
            type: string
          type: array
      title: HypervisorVmValidationRequestModel
      type: object
    HypervisorVmValidationResponseModel:
      properties:
        HypervisorVmResource:
          $ref: '#/components/schemas/HypervisorVmValidationResponseModel_HypervisorVmResource'
        HypervisorConnection:
          $ref: '#/components/schemas/HypervisorVmValidationResponseModel_HypervisorConnection'
      title: HypervisorVmValidationResponseModel
      type: object
    HypervisorVmValidationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfHypervisorVmValidationResponseModel'
      - description: Collection of HypervisorVmValidationResponseModel
        type: object
      title: HypervisorVmValidationResponseModelCollection
    HypervisorVpcResourceResponseModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceResponseModel'
      - $ref: '#/components/schemas/HypervisorVpcResourceResponseModel_allOf'
      title: HypervisorVpcResourceResponseModel
    HypervisorWOLConnectionDetailRequestModel:
      allOf:
      - $ref: '#/components/schemas/HypervisorTraditionalConnectionDetailRequestModel'
      - $ref: '#/components/schemas/HypervisorWOLConnectionDetailRequestModel_allOf'
      title: HypervisorWOLConnectionDetailRequestModel
    IconDataResponseModel:
      description: Icon data
      example:
        RawData: RawData
        FormattedData: FormattedData
      properties:
        RawData:
          description: "Raw icon data, Base64-encoded."
          minLength: 1
          type: string
        FormattedData:
          description: |-
            Icon data in the requested format for display.  For example, if the caller
            requested "image/png;32x32x24" image format, then this will be a 32x32,
            24bpp PNG-format image, Base64-encoded.

            If the caller did not request an icon format, this will not be set.
          type: string
      required:
      - RawData
      title: IconDataResponseModel
      type: object
    IconResponseModel:
      allOf:
      - $ref: '#/components/schemas/IconDataResponseModel'
      - $ref: '#/components/schemas/IconResponseModel_allOf'
      title: IconResponseModel
    IconResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIconResponseModel'
      - description: Response object for collections of IconResponseModel.
        type: object
      title: IconResponseModelCollection
    IdentityBaseResponseModel:
      description: "Base Identity object for User, Machine and Container Identity\
        \ objects."
      properties:
        Domain:
          description: |-
            The Domain the object belongs to.
            NOTE: When doing a forest level search, the domain
            property is populated only if the object contains a SID
            and the SID was requested as property to be fetched.
          type: string
        Forest:
          description: The forest the object belongs to.
          type: string
        Guid:
          description: |-
            The GUID of the object, the GUID is unique
            across the enterprise and anywhere else.
          type: string
        DistinguishedName:
          description: |-
            The Distinguished name of the object. Distinguished names (DNs)
            are unique and they unambiguously identify objects in the directory.
          type: string
        CanonicalName:
          description: The unique distinguished name of the object in canonical format.
          type: string
        PossibleLookupFailure:
          description: |-
            Set to True during a bulk identity lookup operation.
            For individual identity lookup, usually an exception will be thrown.
          type: boolean
        DirectoryServer:
          description: Domain controller that performed the add/update operation on
            this object
          type: string
      title: IdentityBaseResponseModel
      type: object
    IdentityClaimsResponseModel:
      description: The identity claims object.
      properties:
        Oid:
          description: Oid claim of the identity.
          type: string
        Sid:
          description: Sid claim of the identity.
          type: string
        Upn:
          description: Upn claim of the identity.
          type: string
        Email:
          description: Email claim of the identity.
          type: string
      title: IdentityClaimsResponseModel
      type: object
    IdentityContainerResponseModel:
      allOf:
      - $ref: '#/components/schemas/IdentityBaseResponseModel'
      - $ref: '#/components/schemas/IdentityContainerResponseModel_allOf'
      title: IdentityContainerResponseModel
    IdentityContainerResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityContainerResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentityContainerResponseModelCollection
    IdentityContainerType:
      description: The type of Container identity object to retrieve.
      enum:
      - Unknown
      - OrganizationalUnit
      - Container
      - LostAndFound
      - BuiltInDomain
      title: IdentityContainerType
      type: string
      x-enumNames:
      - Unknown
      - OrganizationalUnit
      - Container
      - LostAndFound
      - BuiltInDomain
    IdentityCreateMachineRequestModel:
      description: Add a machine identity.
      example:
        ParentOU: ParentOU
        Forest: Forest
        ResourceLocationId: ResourceLocationId
        AccountPasswordFormat: "{}"
        Domain: Domain
        Name: Name
        AccountPassword: AccountPassword
      properties:
        Forest:
          description: Forest in which to create the machine identity.
          maxLength: 255
          minLength: 1
          pattern: UNKNOWN
          type: string
        Domain:
          description: Domain in which to create the machine identity.
          maxLength: 255
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'(){}_\\s]*$).*$"
          type: string
        Name:
          description: The machine identity to create.
          maxLength: 15
          minLength: 1
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'`=+;.(){}_\\s]*$)(?=^[^\\\
            .])(?=^.*[^\\d].*$).*(?<!-([tT][aA][cC])|([gG][wW])|([gG][aA][tT][eE][wW][aA][yY]))$"
          type: string
        ParentOU:
          description: The OU where the machine identity should be created.
          type: string
        AccountPassword:
          description: |-
            The machine account password, in the format specified by
            AccountPasswordFormat.
          maxLength: 20480
          minLength: 1
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        AccountPasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            The format of the machine account password.  Defaults to
            PlainText.\
          type: object
        ResourceLocationId:
          description: Resource location within which the machine account should be
            created.
          type: string
      required:
      - AccountPassword
      - Forest
      - Name
      title: IdentityCreateMachineRequestModel
      type: object
    IdentityDirectoryResponseModel:
      description: The universal identity directory object.
      properties:
        Forest:
          description: Forest of the directory.
          type: string
        Domain:
          description: Domain of the directory.
          type: string
        Tenant:
          description: Tenant of the directory.
          type: string
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          description: Identity provider type of the directory.
          type: object
      title: IdentityDirectoryResponseModel
      type: object
    IdentityDirectoryResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityDirectoryResponseModel'
      - description: Response object for collections of IdentityDirectoryResponseModel.
        type: object
      title: IdentityDirectoryResponseModelCollection
    IdentityDomainResponseModel:
      description: The Domain identity object.
      example:
        Controllers:
        - Controllers
        - Controllers
        UpnSuffixes:
        - UpnSuffixes
        - UpnSuffixes
        Parent: Parent
        DistinguishedName: DistinguishedName
        Guid: Guid
        PropertiesFetched: 0
        Name: Name
        Sid: Sid
        PossibleLookupFailure: true
        Forest: Forest
        NetBiosName: NetBiosName
        Children:
        - Children
        - Children
        DefaultController: DefaultController
        TrustedDomains:
        - TrustedDomains
        - TrustedDomains
      properties:
        Forest:
          description: The forest the domain belongs to.
          type: string
        Parent:
          description: The parent of the domain.
          type: string
        Name:
          description: The name of the domain.
          type: string
        Children:
          description: The sub-domains associated with the Domain object.
          items:
            type: string
          type: array
        Sid:
          description: The Security Identifier associated with the Domain object.
          type: string
        Guid:
          description: The GUID is unique across the enterprise and anywhere else.
          type: string
        NetBiosName:
          description: The NETBiosName associated with the Domain object.
          type: string
        DistinguishedName:
          description: |-
            The Distinguished name of the Domain object. Distinguished names (DNs)
            are unique and they unambiguously identify objects in the directory.
          type: string
        Controllers:
          description: The discoverable controllers/directory servers for the domain.
          items:
            type: string
          type: array
        DefaultController:
          description: The default controller/directory server for the domain.
          type: string
        TrustedDomains:
          description: Other Domains that have trusts with this Domain.
          items:
            type: string
          type: array
        UpnSuffixes:
          description: The UPN suffixes of the domain.
          items:
            type: string
          type: array
        PossibleLookupFailure:
          description: |-
            Set to True during a bulk identity lookup operation.
            For individual identity lookup, usually an exception will be throw.
          type: boolean
        PropertiesFetched:
          description: Properties fetched and populated in the Domain object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
      required:
      - PropertiesFetched
      title: IdentityDomainResponseModel
      type: object
    IdentityDomainResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityDomainResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentityDomainResponseModelCollection
    IdentityForestResponseModel:
      description: The Forest identity object.
      example:
        Domains:
        - Domains
        - Domains
        TrustedForests:
        - TrustedForests
        - TrustedForests
        RootDomain: RootDomain
        PossibleLookupFailure: true
        PropertiesFetched: 0
        Name: Name
        Sites:
        - Sites
        - Sites
      properties:
        Name:
          description: The name associated with the forest object.
          type: string
        RootDomain:
          description: The root domain of the forest.
          type: string
        Domains:
          description: The domains under the forest.
          items:
            type: string
          type: array
        Sites:
          description: The sites under the forest.
          items:
            type: string
          type: array
        TrustedForests:
          description: Other forests that have trust with this forest.
          items:
            type: string
          type: array
        PossibleLookupFailure:
          description: |-
            Set to True during a bulk identity lookup operation.
            For individual identity lookup, usually an exception will be throw.
          type: boolean
        PropertiesFetched:
          description: Properties fetched and populated in the Forest object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
      required:
      - PropertiesFetched
      title: IdentityForestResponseModel
      type: object
    IdentityForestResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityForestResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentityForestResponseModelCollection
    IdentityLogonType:
      description: The type of log on operation to perform.
      enum:
      - Unknown
      - Interactive
      - NetworkClearText
      title: IdentityLogonType
      type: string
      x-enumNames:
      - Unknown
      - Interactive
      - NetworkClearText
    IdentityMachineIPAddressResolveMethod:
      description: The method used to resolve the IP address of the machine.
      enum:
      - Unknown
      - None
      - HostName
      - NetBios
      title: IdentityMachineIPAddressResolveMethod
      type: string
      x-enumNames:
      - Unknown
      - None
      - HostName
      - NetBios
    IdentityMachineResponseModel:
      allOf:
      - $ref: '#/components/schemas/IdentityBaseResponseModel'
      - $ref: '#/components/schemas/IdentityMachineResponseModel_allOf'
      title: IdentityMachineResponseModel
    IdentityMachineResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityMachineResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentityMachineResponseModelCollection
    IdentityPasswordFormat:
      description: Supported formats for specifying a password.
      enum:
      - Unknown
      - PlainText
      - Base64
      title: IdentityPasswordFormat
      type: string
      x-enumNames:
      - Unknown
      - PlainText
      - Base64
    IdentityProviderType:
      description: The type of identity provider.
      enum:
      - Unknown
      - AD
      - AzureAD
      - Okta
      - Google
      - All
      title: IdentityProviderType
      type: string
      x-enumNames:
      - Unknown
      - AD
      - AzureAD
      - Okta
      - Google
      - All
    IdentitySiteResponseModel:
      description: The AD Site identity object.
      example:
        Subnets:
        - Guid: Guid
          Name: Name
        - Guid: Guid
          Name: Name
        PossibleLookupFailure: true
        Guid: Guid
        PropertiesFetched: 0
        Name: Name
      properties:
        Name:
          description: The name associated with the site object.
          type: string
        Guid:
          description: The guid of the site.
          type: string
        Subnets:
          description: The subnets in the site.
          items:
            $ref: '#/components/schemas/IdentitySubnetResponseModel'
          title: "IdentitySubnetResponseModel[]"
          type: array
        PossibleLookupFailure:
          description: "    For individual identity lookup, usually an exception will\
            \ be thrown.\n    "
          type: boolean
        PropertiesFetched:
          description: Properties fetched and populated in the Site object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
      required:
      - PropertiesFetched
      title: IdentitySiteResponseModel
      type: object
    IdentitySiteResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentitySiteResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentitySiteResponseModelCollection
    IdentitySubnetResponseModel:
      description: The Subnet Identity object of a Site.
      example:
        Guid: Guid
        Name: Name
      properties:
        Name:
          description: The name associated with the subnet object.
          type: string
        Guid:
          description: The guid associated with the subnet object.
          type: string
      title: IdentitySubnetResponseModel
      type: object
    IdentityType:
      description: Azure AD join type for machines
      enum:
      - Unknown
      - ActiveDirectory
      - Workgroup
      - HybridAzureAD
      - AzureAD
      title: IdentityType
      type: string
      x-enumNames:
      - Unknown
      - ActiveDirectory
      - Workgroup
      - HybridAzureAD
      - AzureAD
    IdentityUpdateMachineRequestModel:
      description: Update a machine identity.
      example:
        NewPassword: NewPassword
        Enabled: true
        AccountPasswordFormat: "{}"
        OldPassword: OldPassword
      properties:
        Enabled:
          description: Enable or disable the machine account.
          type: boolean
        OldPassword:
          description: "Old account password, used when changing the account password."
          type: string
        NewPassword:
          description: "New account password, used when changing the account password."
          type: string
        AccountPasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            The format of the machine account password.  Defaults to
            PlainText.\
          type: object
      title: IdentityUpdateMachineRequestModel
      type: object
    IdentityUpdateUserRequestModel:
      description: Update a user account via Identity service
      example:
        NewPassword: NewPassword
        AccountPasswordFormat: "{}"
        OldPassword: OldPassword
      properties:
        OldPassword:
          description: "Old account password, used when changing the account password."
          type: string
        NewPassword:
          description: "New account password, used when changing the account password."
          type: string
        AccountPasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            The format of the account password.  Defaults to
            PlainText.\
          type: object
      title: IdentityUpdateUserRequestModel
      type: object
    IdentityUserResponseModel:
      allOf:
      - $ref: '#/components/schemas/IdentityBaseResponseModel'
      - $ref: '#/components/schemas/IdentityUserResponseModel_allOf'
      title: IdentityUserResponseModel
    IdentityUserResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfIdentityUserResponseModel'
      - description: Response object for collections of items.
        type: object
      title: IdentityUserResponseModelCollection
    IdentityUserType:
      description: The type of User identity object to retrieve.
      enum:
      - Unknown
      - User
      - Group
      - All
      type: string
      x-enumNames:
      - Unknown
      - User
      - Group
      - All
    IdentityValidateUserRequestModel:
      description: "Validate user credentials and if successful, retrieve the properties\
        \ of the user."
      example:
        UserName: UserName
        PasswordFormat: "{}"
        LogOnType: "{}"
        Forest: Forest
        Domain: Domain
        Password: Password
      properties:
        Forest:
          description: Forest in which the user account resides.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        Domain:
          description: Domain in which the user account resides.
          maxLength: 255
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'(){}_\\s]*$).*$"
          type: string
        LogOnType:
          allOf:
          - $ref: '#/components/schemas/IdentityLogonType'
          description: Logon type to use.  Default is NetworkClearText.
          type: object
        UserName:
          description: Username to validate.  Required.
          maxLength: 255
          minLength: 1
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'(){}_\\s]*$).*$"
          type: string
        Password:
          description: |-
            Password to validate.  Required.
            Must be specified in the format indicated by PasswordFormat.
          maxLength: 20480
          minLength: 1
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: Format of the Password.  Default is PlainText.
          type: object
      required:
      - Password
      - UserName
      title: IdentityValidateUserRequestModel
      type: object
    ImageDefinitionResponseModel:
      description: Response object for image definition.
      example:
        HostingUnitUid: HostingUnitUid
        UseWriteBackCache: true
        Description: Description
        OsType: OsType
        Id: Id
        HostingUnitName: HostingUnitName
        Name: Name
        CustomProperties:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        Name:
          description: The name associated with the image definition.
          type: string
        Id:
          description: The Id of the image definition.
          format: guid
          type: string
        OsType:
          description: The os type of image definition.
          type: string
        HostingUnitName:
          description: The hosting unit name of image definition.
          type: string
        HostingUnitUid:
          description: The hosting unit id of image definition.
          format: guid
          type: string
        Description:
          description: The description of the image definition.
          type: string
        UseWriteBackCache:
          description: The UseWriteBackCache of the image definition.
          type: boolean
        CustomProperties:
          description: The custom properties of the image definition. Currently only
            resource group.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      title: ImageDefinitionResponseModel
      type: object
    ImageDefinitionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfImageDefinitionResponseModel'
      - description: Response object for collections of ImageDefinitionResponseModel.
        type: object
      title: ImageDefinitionResponseModelCollection
    ImageRuntimeInfoResponseModel:
      description: The runtime information on image
      properties:
        Version:
          description: The JSON schema version of image runtime info file.
          type: string
        OperatingSystemInfo:
          $ref: '#/components/schemas/ImageRuntimeInfoResponseModel_OperatingSystemInfo'
        VdaComponents:
          description: Installed VDA components information
          items:
            $ref: '#/components/schemas/VdaComponentResponseModel'
          title: "VdaComponentResponseModel[]"
          type: array
        SystemManagementInfo:
          $ref: '#/components/schemas/ImageRuntimeInfoResponseModel_SystemManagementInfo'
      title: ImageRuntimeInfoResponseModel
      type: object
    ImageSchemeResponseModel:
      description: Response object for image scheme.
      properties:
        Name:
          description: The name associated with the image scheme.
          type: string
        Id:
          description: The Id of the image scheme.
          format: guid
          type: string
        ResourcePool:
          $ref: '#/components/schemas/HypervisorResourcePoolRefResponseModel'
        HostingUnitName:
          description: The name of HostingUnit where image preparing happens
          type: string
        HostingUnitId:
          description: The ID of HostingUnit where image preparing happens
          format: guid
          type: string
        CpuCount:
          description: The number of processors that VMs will be created with when
            using this scheme.
          format: int32
          type: integer
        MemoryMB:
          description: The maximum amount of memory that VMs will be created with
            when using this scheme.
          format: int32
          type: integer
        ServiceOffering:
          description: Service offering used by Cloud provisioned VMs.
          type: string
        NetworkMaps:
          description: Networks used by image scheme.
          items:
            $ref: '#/components/schemas/NetworkMapResponseModel'
          title: "NetworkMapResponseModel[]"
          type: array
        MachineProfile:
          $ref: '#/components/schemas/ImageSchemeResponseModel_MachineProfile'
        CustomProperties:
          description: The properties of the image scheme that are specific to the
            target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        CustomPropertiesInString:
          description: The properties of the image scheme that are specific to the
            target hosting infrastructure in string format.
          type: string
      title: ImageSchemeResponseModel
      type: object
    ImageVersionBaseResponseModel:
      description: Image version base response model
      properties:
        Version:
          description: The version number associated with the image version.
          type: string
        Id:
          description: The Id of the image version.
          format: guid
          type: string
        MasterImagePath:
          description: The MasterImageVM of the image version.
          type: string
        Description:
          description: The Description of the image version.
          type: string
        DiskSizeGB:
          description: "Size of the VM's OS disk, in GB."
          format: int32
          type: integer
        CreateTime:
          description: The create time of the image version.
          type: string
        WriteBackCacheDiskSize:
          description: The WriteBackCacheDiskSize of the image version.
          format: int32
          type: integer
        WriteBackCacheMemorySize:
          description: The WriteBackCacheMemorySize of the image version.
          format: int32
          type: integer
        ImageStatus:
          description: The image status of the image version.
          type: string
        Error:
          description: The error info of the image version.
          type: string
        AdditionalData:
          additionalProperties:
            type: string
          description: The additional data of the image version.
          title: IDictionary`2
          type: object
      title: ImageVersionBaseResponseModel
      type: object
    ImageVersionCatalogResponseModel:
      description: Catalog response for image version.
      properties:
        CatalogUid:
          description: catalog uid
          format: guid
          type: string
        CatalogName:
          description: catalog name
          type: string
      title: ImageVersionCatalogResponseModel
      type: object
    ImageVersionCatalogResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfImageVersionCatalogResponseModel'
      - description: Collection of ImageVersionCatalogResponseModel
        type: object
      title: ImageVersionCatalogResponseModelCollection
    ImageVersionDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/ImageVersionBaseResponseModel'
      - $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf'
      title: ImageVersionDetailResponseModel
    ImageVersionRefResponseModel:
      description: Image version reference.
      properties:
        ImageDefinitionName:
          description: The image definition name.
          type: string
        ImageVersionNumber:
          description: The image version number.
          type: string
        ImageVersionUid:
          description: The image version uid.
          format: guid
          type: string
      title: ImageVersionRefResponseModel
      type: object
    ImageVersionResponseModel:
      allOf:
      - $ref: '#/components/schemas/ImageVersionBaseResponseModel'
      - $ref: '#/components/schemas/ImageVersionResponseModel_allOf'
      title: ImageVersionResponseModel
    ImageVersionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfImageVersionResponseModel'
      - description: Response object for collections of ImageVersionResponseModel.
        type: object
      title: ImageVersionResponseModelCollection
    InstalledAppResponseModel:
      description: Response object for installed application properties.
      properties:
        CommandLineArguments:
          description: |-
            The command-line arguments to use when launching the
            executable. Environment variables can be used.
          minLength: 1
          type: string
        CommandLineExecutable:
          description: |-
            The name of the executable file to launch. The full
            path need not be provided if it's already in the path.
            Environment variables can also be used.
          minLength: 1
          type: string
        WorkingDirectory:
          description: "The working directory which the executable is launched\nfrom.\
            \ Environment variables can be used. "
          minLength: 1
          type: string
      required:
      - CommandLineArguments
      - CommandLineExecutable
      - WorkingDirectory
      title: InstalledAppResponseModel
      type: object
    JobErrorCode:
      description: Possible error codes returned from a job.
      enum:
      - Unknown
      - UnknownError
      - AccessDenied
      - PermissionDenied
      - UserNotAuthorized
      - AuthorizationFailed
      - AuthorizationError
      - DeniedByConfigurationLogging
      - DataStoreUnconfigured
      - SiteUnconfigured
      - MissingDbSchemaFeature
      - DatabaseNotConfigured
      - ObjectNotFound
      - UnknownObject
      - UnknownAccount
      - UnknownCatalog
      - UnknownController
      - UnknownMachine
      - UnknownDesktop
      - ScopeNotFound
      - UnknownMachineName
      - UnknownApplication
      - UnknownIcon
      - UnknownPolicyRule
      - UnknownFileTypeExtension
      - UnknownConfiguredFTA
      - UnknownImportedFTA
      - UnknownDesktopTag
      - DesktopTagInUse
      - UnknownHypervisorConnection
      - UnknownPowerTimeScheme
      - UnknownDumScheme
      - UnknownPowerAction
      - UnknownSession
      - UnknownConfigurationSlot
      - UnknownRebootSchedule
      - LACNotFound
      - HypervisorConnectionObjectNotFound
      - PathNotFound
      - DriveNotFound
      - IdentityPoolOUInvalid
      - ProvisioningSchemeNotFound
      - IdentityPoolObjectNotFound
      - HostingUnitNotFound
      - AppDNASolutionNotFound
      - BrokerMachineNotFound
      - MCSDiskCopyTaskNotFound
      - AppDiskNotFound
      - AppDNAOperatingSystemNotFound
      - MultipleRelationshipsSpecified
      - NoRelationshipSpecified
      - NoMatchingItems
      - InvalidTimeZone
      - InvalidScheduleStartTime
      - InvalidStatusUpdatingFTA
      - UserAccountRequired
      - MustSupplyNameOrSID
      - MustNotSupplyBothNameAndSID
      - ConstraintViolation
      - UnsupportedWildcard
      - InvalidSecurityIdentifier
      - InvalidIconData
      - PvsForVMInvalid
      - PvsDetailsRequired
      - PvsDetailsInvalid
      - MachinesArePhysicalRequired
      - MachinesArePhysicalConflict
      - MissingHostingData
      - SuperfluousHostingData
      - MultiSessionPoolManagementNotSupported
      - MultipleUserAssignments
      - MultipleDesktopAssignments
      - PolicyRuleAppliedToMultipleApps
      - ImportedFTACorrupted
      - PowerTimeSchemeDaysOverlap
      - SidMissingForEvictScript
      - SidSuppliedForNonEvictScript
      - MachineHypMcIdAlone
      - InvalidRebootScheduleDay
      - InvalidCommandRecipient
      - InvalidAccount
      - LACNotSupported
      - WebkeyNotSupported
      - InvalidLicenseFile
      - EmptyLicenseFile
      - InvalidLicenseFileExtension
      - PollingIntervalMoreThanMaxValue
      - PollingIntervalLessThanMinValue
      - RetentionPeriodLessThanMinValue
      - InvalidStartDateOrEndDate
      - InvalidProductEditionModelFormat
      - InvalidCEIPOption
      - IdentityPoolOUOfWrongDomain
      - NamingSchemeHasMoreThanOneSetOfHashes
      - NamingSchemeIllegalCharacter
      - NamingSchemeIllegalComputerName
      - NamingSchemeMayNotBeAllNumbers
      - NamingSchemeMayNotStartWithPeriod
      - NamingSchemeMissingNumericSpecifications
      - NamingSchemeNotEnoughCharacters
      - NamingSchemeTooManyCharacters
      - NamingSchemeUnicodeCharactersNotEnabled
      - MCSCopyFailureInvalidVirtualDiskId
      - InvalidMachineId
      - DuplicateAppDisplayName
      - DuplicateAppBrowserName
      - DuplicateAdministrator
      - DuplicateRebootSchedule
      - DuplicateObject
      - AdminAlreadyExists
      - RoleAlreadyExists
      - ScopeAlreadyExists
      - HostingUnitDuplicateObjectExists
      - ProvisioningSchemeNameAlreadyExists
      - IdentityPoolDuplicateObjectExists
      - AppDiskNameAlreadyExists
      - CommunicationError
      - NoServerErrorId
      - InvalidServerPortString
      - InvalidPortNumber
      - InvalidServerGuid
      - InvalidServerVersion
      - ServerTimeout
      - InvalidIPAddress
      - NoSuitableServiceInstanceErrorId
      - CommunicationsError
      - CitrixLicensingVendorOrServiceDown
      - CanNotImportStartUpLic
      - CommunicationSecurityError
      - InvalidArgument
      - UpdateCacheInvalidArgument
      - DataStoreException
      - UnknownOperation
      - DataStoreAlreadyConfigured
      - MachineNotRegistered
      - PowerManagedController
      - DesktopGroupInUse
      - MachineInUse
      - CatalogInUse
      - ApplicationInUse
      - MachineAlreadyAllocated
      - MachineNotInDesktopGroup
      - MachineInDesktopGroup
      - IncompatibleMachine
      - IncompatibleDesktopUsage
      - IncompatibleDesktopAssignment
      - IncompatibleDesktopGroup
      - IncompatibleCatalog
      - DesktopAssigned
      - InMaintenanceMode
      - GroupInMaintenanceMode
      - IconInUse
      - NoAvailableMachine
      - PowerTimeSchemeInUse
      - IncompatibleDumScheme
      - HypervisorInMaintenanceMode
      - PowerActionsNotSupported
      - PowerActionInProgress
      - PowerActionComplete
      - PowerActionIgnored
      - PowerActionNotStarted
      - ServiceGroupNotAllowed
      - MachineConfigurationInUse
      - NoEntitlements
      - LastFullAdmin
      - HypervisorConnectionForHostingUnitIsVirtual
      - HostingUnitNetworkPathInvalid
      - HostingUnitRootPathInvalid
      - HostingUnitStoragePathInvalid
      - InvalidHypervisorItem
      - VMAlreadyUnlocked
      - AppDiskInUse
      - TaskActive
      - AppDiskAlreadySealed
      - AppVPackageImportError
      - NoRemainingDeliveryGroups
      - NameResolutionFailure
      - HypervisorAddressInvalidFormat
      - HypervisorPermissionDenied
      - SCVMMConsoleNotInstalled
      - ConnectionNotVCenter
      - ConnectionExpiredCredentials
      - ConnectionInvalidCredentials
      - VCenterConnectionSslFailure
      - XenServerConnectionSslFailure
      - HypervisorNotContactable
      - NoWorkspaceCloudConnectorFound
      - WorkspaceCloudConnectorTimeout
      - WorkspaceCloudConnectorEndpointNotFound
      - VCenterHttpsConnectionRequiredForEndpoint
      title: JobErrorCode
      type: string
      x-enumNames:
      - Unknown
      - UnknownError
      - AccessDenied
      - PermissionDenied
      - UserNotAuthorized
      - AuthorizationFailed
      - AuthorizationError
      - DeniedByConfigurationLogging
      - DataStoreUnconfigured
      - SiteUnconfigured
      - MissingDbSchemaFeature
      - DatabaseNotConfigured
      - ObjectNotFound
      - UnknownObject
      - UnknownAccount
      - UnknownCatalog
      - UnknownController
      - UnknownMachine
      - UnknownDesktop
      - ScopeNotFound
      - UnknownMachineName
      - UnknownApplication
      - UnknownIcon
      - UnknownPolicyRule
      - UnknownFileTypeExtension
      - UnknownConfiguredFTA
      - UnknownImportedFTA
      - UnknownDesktopTag
      - DesktopTagInUse
      - UnknownHypervisorConnection
      - UnknownPowerTimeScheme
      - UnknownDumScheme
      - UnknownPowerAction
      - UnknownSession
      - UnknownConfigurationSlot
      - UnknownRebootSchedule
      - LACNotFound
      - HypervisorConnectionObjectNotFound
      - PathNotFound
      - DriveNotFound
      - IdentityPoolOUInvalid
      - ProvisioningSchemeNotFound
      - IdentityPoolObjectNotFound
      - HostingUnitNotFound
      - AppDNASolutionNotFound
      - BrokerMachineNotFound
      - MCSDiskCopyTaskNotFound
      - AppDiskNotFound
      - AppDNAOperatingSystemNotFound
      - MultipleRelationshipsSpecified
      - NoRelationshipSpecified
      - NoMatchingItems
      - InvalidTimeZone
      - InvalidScheduleStartTime
      - InvalidStatusUpdatingFTA
      - UserAccountRequired
      - MustSupplyNameOrSID
      - MustNotSupplyBothNameAndSID
      - ConstraintViolation
      - UnsupportedWildcard
      - InvalidSecurityIdentifier
      - InvalidIconData
      - PvsForVMInvalid
      - PvsDetailsRequired
      - PvsDetailsInvalid
      - MachinesArePhysicalRequired
      - MachinesArePhysicalConflict
      - MissingHostingData
      - SuperfluousHostingData
      - MultiSessionPoolManagementNotSupported
      - MultipleUserAssignments
      - MultipleDesktopAssignments
      - PolicyRuleAppliedToMultipleApps
      - ImportedFTACorrupted
      - PowerTimeSchemeDaysOverlap
      - SidMissingForEvictScript
      - SidSuppliedForNonEvictScript
      - MachineHypMcIdAlone
      - InvalidRebootScheduleDay
      - InvalidCommandRecipient
      - InvalidAccount
      - LACNotSupported
      - WebkeyNotSupported
      - InvalidLicenseFile
      - EmptyLicenseFile
      - InvalidLicenseFileExtension
      - PollingIntervalMoreThanMaxValue
      - PollingIntervalLessThanMinValue
      - RetentionPeriodLessThanMinValue
      - InvalidStartDateOrEndDate
      - InvalidProductEditionModelFormat
      - InvalidCEIPOption
      - IdentityPoolOUOfWrongDomain
      - NamingSchemeHasMoreThanOneSetOfHashes
      - NamingSchemeIllegalCharacter
      - NamingSchemeIllegalComputerName
      - NamingSchemeMayNotBeAllNumbers
      - NamingSchemeMayNotStartWithPeriod
      - NamingSchemeMissingNumericSpecifications
      - NamingSchemeNotEnoughCharacters
      - NamingSchemeTooManyCharacters
      - NamingSchemeUnicodeCharactersNotEnabled
      - MCSCopyFailureInvalidVirtualDiskId
      - InvalidMachineId
      - DuplicateAppDisplayName
      - DuplicateAppBrowserName
      - DuplicateAdministrator
      - DuplicateRebootSchedule
      - DuplicateObject
      - AdminAlreadyExists
      - RoleAlreadyExists
      - ScopeAlreadyExists
      - HostingUnitDuplicateObjectExists
      - ProvisioningSchemeNameAlreadyExists
      - IdentityPoolDuplicateObjectExists
      - AppDiskNameAlreadyExists
      - CommunicationError
      - NoServerErrorId
      - InvalidServerPortString
      - InvalidPortNumber
      - InvalidServerGuid
      - InvalidServerVersion
      - ServerTimeout
      - InvalidIPAddress
      - NoSuitableServiceInstanceErrorId
      - CommunicationsError
      - CitrixLicensingVendorOrServiceDown
      - CanNotImportStartUpLic
      - CommunicationSecurityError
      - InvalidArgument
      - UpdateCacheInvalidArgument
      - DataStoreException
      - UnknownOperation
      - DataStoreAlreadyConfigured
      - MachineNotRegistered
      - PowerManagedController
      - DesktopGroupInUse
      - MachineInUse
      - CatalogInUse
      - ApplicationInUse
      - MachineAlreadyAllocated
      - MachineNotInDesktopGroup
      - MachineInDesktopGroup
      - IncompatibleMachine
      - IncompatibleDesktopUsage
      - IncompatibleDesktopAssignment
      - IncompatibleDesktopGroup
      - IncompatibleCatalog
      - DesktopAssigned
      - InMaintenanceMode
      - GroupInMaintenanceMode
      - IconInUse
      - NoAvailableMachine
      - PowerTimeSchemeInUse
      - IncompatibleDumScheme
      - HypervisorInMaintenanceMode
      - PowerActionsNotSupported
      - PowerActionInProgress
      - PowerActionComplete
      - PowerActionIgnored
      - PowerActionNotStarted
      - ServiceGroupNotAllowed
      - MachineConfigurationInUse
      - NoEntitlements
      - LastFullAdmin
      - HypervisorConnectionForHostingUnitIsVirtual
      - HostingUnitNetworkPathInvalid
      - HostingUnitRootPathInvalid
      - HostingUnitStoragePathInvalid
      - InvalidHypervisorItem
      - VMAlreadyUnlocked
      - AppDiskInUse
      - TaskActive
      - AppDiskAlreadySealed
      - AppVPackageImportError
      - NoRemainingDeliveryGroups
      - NameResolutionFailure
      - HypervisorAddressInvalidFormat
      - HypervisorPermissionDenied
      - SCVMMConsoleNotInstalled
      - ConnectionNotVCenter
      - ConnectionExpiredCredentials
      - ConnectionInvalidCredentials
      - VCenterConnectionSslFailure
      - XenServerConnectionSslFailure
      - HypervisorNotContactable
      - NoWorkspaceCloudConnectorFound
      - WorkspaceCloudConnectorTimeout
      - WorkspaceCloudConnectorEndpointNotFound
      - VCenterHttpsConnectionRequiredForEndpoint
    JobResponseModel:
      description: Response object indicating status of an asynchronous job.
      example:
        Status: "{}"
        FormattedEndTime: FormattedEndTime
        SubJobs:
        - null
        - null
        Parameters:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        EndTime: EndTime
        OverallProgressPercent: 0
        ResultLocation: ResultLocation
        FormattedCreationTime: FormattedCreationTime
        StartTime: StartTime
        ErrorString: ErrorString
        Type: "{}"
        FormattedStartTime: FormattedStartTime
        IsCancellable: true
        CreationTime: CreationTime
        ErrorParameters:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Id: Id
        ErrorCode: "{}"
      properties:
        Id:
          description: Id of the job in progress.
          minLength: 1
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: Type of job that is being performed.
          type: object
        OverallProgressPercent:
          description: |-
            Overall progress percent; 0..100.
            May be null if the job does not support progress reporting.
          format: int32
          type: integer
        IsCancellable:
          description: |-
            Indicates whether the job may be cancelled.
            DeleteJob
          type: boolean
        Parameters:
          description: |-
            Indicators to the caller about what object(s) the job
            is affecting.  Consult the documentation for APIs that
            initiate jobs to see the properties expected to be present.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        SubJobs:
          description: List of sub-jobs contained within the job.
          items:
            $ref: '#/components/schemas/JobResponseModel'
          title: "JobResponseModel[]"
          type: array
        Status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: State of the job or subjob.
          type: object
        ResultLocation:
          description: URL where the job results can be obtained.
          type: string
        ErrorString:
          description: |-
            If a job or subjob failed, this will be the reason why
            the failure occurred, presented in a human-readable
            format.
          type: string
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/JobErrorCode'
          description: |-
            If a job or subjob failed, this will be the reason why
            the failure occurred.
          type: object
        ErrorParameters:
          description: |-
            If a job or subjob failed, this will be information
            about related objects that were involved in the
            failure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        CreationTime:
          description: Time when the job was created.
          minLength: 1
          type: string
        FormattedCreationTime:
          description: |-
            Formatted time when the job was created.
            RFC 3339 compatible format.
          minLength: 1
          type: string
        StartTime:
          description: |-
            Time when the job was started.
            Will be null if the job has not yet started.
          type: string
        FormattedStartTime:
          description: |-
            Formatted time when the job was started.
            Will be null if the job has not yet started.
            RFC 3339 compatible format.
          type: string
        EndTime:
          description: |-
            Time when the job was completed.
            Will be null if the job has not yet completed.
          type: string
        FormattedEndTime:
          description: |-
            Formatted time when the job was completed.
            Will be null if the job has not yet completed.
            RFC 3339 compatible format.
          type: string
      required:
      - CreationTime
      - FormattedCreationTime
      - Id
      - Parameters
      - Status
      - Type
      title: JobResponseModel
      type: object
    JobResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfJobResponseModel'
      - description: JobResponseModel collection
        type: object
      title: JobResponseModelCollection
    JobStatus:
      description: Status of a job.
      enum:
      - Unknown
      - NotStarted
      - InProgress
      - Complete
      - CompleteWithWarning
      - Failed
      - Canceled
      - NonTerminatingError
      title: JobStatus
      type: string
      x-enumNames:
      - Unknown
      - NotStarted
      - InProgress
      - Complete
      - CompleteWithWarning
      - Failed
      - Canceled
      - NonTerminatingError
    JobType:
      description: Types of long-running jobs that may be executing.
      enum:
      - Unknown
      - Batch
      - CreateDeliveryGroup
      - UpdateDeliveryGroup
      - DeleteDeliveryGroup
      - AddDeliveryGroupMachines
      - RemoveDeliveryGroupMachines
      - AddDeliveryGroupApplications
      - RemoveDeliveryGroupApplications
      - RemoveDeliveryGroupApplicationGroups
      - GetAdminFolders
      - GetApplicationFolders
      - GetAdminFolderApplications
      - GetAdminFolderMachineCatalogs
      - GetApplicationFolderApplications
      - GetApplications
      - GetApplicationSessions
      - GetDeliveryGroups
      - SearchApplications
      - RefreshAppVApplications
      - TestDeliveryGroup
      - CreateTag
      - UpdateTag
      - DeleteTag
      - AddIcon
      - RemoveIcon
      - SetTagApplications
      - SetTagApplicationGroups
      - SetTagDeliveryGroups
      - SetTagMachineCatalogs
      - SetTagMachines
      - GetStartMenuApplications
      - GetDeliveryGroupApplications
      - GetDeliveryGroupsDesktops
      - RebootMachines
      - ShutDownMachines
      - StartMachines
      - SuspendMachines
      - ResumeMachines
      - CreateAdminFolder
      - CreateApplicationFolder
      - CreateRebootSchedule
      - UpdateRebootSchedule
      - DeleteRebootSchedule
      - CreatePowerTimeScheme
      - UpdatePowerTimeScheme
      - DeletePowerTimeScheme
      - CreateAdvancedAccessPolicy
      - UpdateAdvancedAccessPolicy
      - DeleteAdvancedAccessPolicy
      - AddMachineCatalogMachine
      - UpdateMachineCatalogProvisioningScheme
      - CreateMachineCatalog
      - CreateMachineIdentity
      - DeleteMachineIdentity
      - UpdateMachineIdentity
      - UpdateUserIdentity
      - UpdateMachineCatalog
      - DeleteMachineCatalog
      - TestMachineCatalog
      - LogoffSessions
      - DisconnectSessions
      - LogoffMachineSessions
      - DeleteMachine
      - SendSessionMessage
      - AddApplications
      - GetApplicationGroups
      - GetApplicationGroupApplications
      - GetApplicationGroupDeliveryGroups
      - CreateApplicationGroup
      - DeleteApplication
      - DeleteApplicationGroup
      - DeleteAdminFolder
      - DeleteApplicationFolder
      - RemoveApplicationGroupApplications
      - GetApplicationApplicationGroups
      - GetApplicationDeliveryGroups
      - UpdateApplication
      - UpdateApplicationGroup
      - UpdateAdminFolder
      - UpdateApplicationFolder
      - SearchStartMenuApplications
      - ApplicationsDiscovery
      - ModifyFTA
      - ImportFTA
      - GetSiteStatus
      - TestSite
      - CreateHypervisor
      - CreateHypervisorResourcePool
      - UpdateHypervisor
      - UpdateHypervisorResourcePool
      - HypervisorVmValidation
      - TestHypervisor
      - TestHypervisorResourcePool
      - CreateStoreFrontServer
      - DeleteStoreFrontServer
      - UpdateStoreFrontServer
      - UpdateImage
      - SetProvScheme
      - AddMachines
      - UpdateMachineCatalogMachine
      - RollbackMachineCatalogProvisioningScheme
      - GetHypervisorResourcePool
      - GetHypervisorsAndResourcePools
      - GetHypervisorResourcePoolResources
      - GetHypervisorAllResources
      - GetHypervisorAllResourcesWithoutConnection
      - GetHypervisorResourcePools
      - GetHypervisor
      - GetHypervisors
      - DeleteHypervisor
      - DeleteResourcePool
      - GetHypervisorSupportedPlugins
      - GetHypervisorServerHAAddresses
      - GetSessionApplications
      - GetOperations
      - DoOperationSearch
      - GetSessions
      - DoSessionSearch
      - GetMachines
      - DoMachineSearch
      - GetPvsSites
      - GetPvsCollections
      - GetPvsMachinesForCatalog
      - GetMachineCatalogMachineAccounts
      - GetMachineStartMenuShortcutIcon
      - GetMachineCatalogs
      - SearchMachineCatalogs
      - GetMachineCatalogDetails
      - GetAppVServers
      - ImportAppVPackages
      - AddAppVServer
      - UpdateAppVServer
      - RemoveAppVServer
      - GetAppVPackages
      - RemoveAppVPackage
      - GetAppVIsolationGroups
      - GetAppVPackageBrokerApplications
      - GetAppVPackageDelveryGroups
      - DeleteAppVIsolationGroup
      - CreateAppVIsolationGroup
      - UpdateAppVIsolationGroup
      - GetAppVIsolationGroup
      - GetApplicationFtas
      - GetMachineCatalogMachines
      - GetMachineCatalogDeliveryGroupAssociations
      - DoDeliveryGroupSearch
      - GetMachineCatalogLastMasterImage
      - DoZoneSearch
      - CreateZone
      - EditZone
      - DeleteZone
      - AddItemsIntoZone
      - MoveItemsIntoZone
      - RemoveItemsFromZone
      - StartDeliveryGroupRebootCycle
      - GetAdminAdministrators
      - CreateAdminScope
      - DeleteAdminScope
      - CreateAdminRole
      - UpdateAdminRole
      - DeleteAdminRole
      - UpdateAdminScope
      - SetBrokerHypervisorConnection
      - ResetBrokerHypervisorConnection
      - GetAllCatalogActions
      - GetCatalogAction
      - GetSingleCatalogAction
      - CancelCatalogAction
      - DeleteAllCatalogActions
      - DeleteCatalogActions
      - HideSession
      - UnhideSession
      - CreateMachineCatalogUpgradeSchedule
      - RemoveMachineCatalogUpgradeSchedule
      - UpdateMachineCatalogUpgradeSchedule
      - GetHypervisorMachineCatalogs
      - GetHypervisorResourcePoolMachineCatalogs
      - GetHypervisorAdministrators
      - GetHypervisorResourcePoolAdministrators
      - CreateMachineUpgradeSchedule
      - UpdateMachineUpgradeSchedule
      - RemoveMachineUpgradeSchedule
      - CreateMachinesUpgradeScheudle
      - GetAppLibPackageDiscoveryProfiles
      - GetAppLibPackageDiscoveryProfile
      - CreateAppLibPackageDiscoveryProfile
      - UpdateAppLibPackageDiscoveryProfile
      - RemoveAppLibPackageDiscoveryProfile
      - ValidateHypervisorResourcePoolResource
      - CreateAppLibPackageDiscovery
      - GetAppLibPackageDiscovery
      - GetAppLibPackageDiscoveries
      - SendCasEvent
      - AddDeliveryGroupPolicySet
      - RemoveDeliveryGroupPolicySet
      - StartSessionRecording
      - StopSessionRecording
      - GetLicenseSummary
      - GetDomainsIdentity
      - GetLicensePermission
      - RemoveMachinePowerActionSchedule
      - GetLicenseCertificate
      - SetLicenseServer
      - GetLicenseAlert
      - AddLicense
      - DeleteDeliveryController
      - GenerateDeliveryControllerDeleteScript
      - ChangeDatabase
      - GetLicenseEntitlement
      - AllocateLicense
      - ValidateMachineCatalogVDAComponentsAndFeaturesSelection
      - NewImageDefinition
      - AddImageVersion
      - RemoveImageDefinition
      - GetAllMachineIdentityPools
      - GetProvSchemeReferences
      - RequestProvVmUpdate
      - GetBackups
      - GetBackupHistory
      - GetBackupMembers
      - GetPvsSite
      - GetPvsVDisk
      - GetPvsStore
      title: JobType
      type: string
      x-enumNames:
      - Unknown
      - Batch
      - CreateDeliveryGroup
      - UpdateDeliveryGroup
      - DeleteDeliveryGroup
      - AddDeliveryGroupMachines
      - RemoveDeliveryGroupMachines
      - AddDeliveryGroupApplications
      - RemoveDeliveryGroupApplications
      - RemoveDeliveryGroupApplicationGroups
      - GetAdminFolders
      - GetApplicationFolders
      - GetAdminFolderApplications
      - GetAdminFolderMachineCatalogs
      - GetApplicationFolderApplications
      - GetApplications
      - GetApplicationSessions
      - GetDeliveryGroups
      - SearchApplications
      - RefreshAppVApplications
      - TestDeliveryGroup
      - CreateTag
      - UpdateTag
      - DeleteTag
      - AddIcon
      - RemoveIcon
      - SetTagApplications
      - SetTagApplicationGroups
      - SetTagDeliveryGroups
      - SetTagMachineCatalogs
      - SetTagMachines
      - GetStartMenuApplications
      - GetDeliveryGroupApplications
      - GetDeliveryGroupsDesktops
      - RebootMachines
      - ShutDownMachines
      - StartMachines
      - SuspendMachines
      - ResumeMachines
      - CreateAdminFolder
      - CreateApplicationFolder
      - CreateRebootSchedule
      - UpdateRebootSchedule
      - DeleteRebootSchedule
      - CreatePowerTimeScheme
      - UpdatePowerTimeScheme
      - DeletePowerTimeScheme
      - CreateAdvancedAccessPolicy
      - UpdateAdvancedAccessPolicy
      - DeleteAdvancedAccessPolicy
      - AddMachineCatalogMachine
      - UpdateMachineCatalogProvisioningScheme
      - CreateMachineCatalog
      - CreateMachineIdentity
      - DeleteMachineIdentity
      - UpdateMachineIdentity
      - UpdateUserIdentity
      - UpdateMachineCatalog
      - DeleteMachineCatalog
      - TestMachineCatalog
      - LogoffSessions
      - DisconnectSessions
      - LogoffMachineSessions
      - DeleteMachine
      - SendSessionMessage
      - AddApplications
      - GetApplicationGroups
      - GetApplicationGroupApplications
      - GetApplicationGroupDeliveryGroups
      - CreateApplicationGroup
      - DeleteApplication
      - DeleteApplicationGroup
      - DeleteAdminFolder
      - DeleteApplicationFolder
      - RemoveApplicationGroupApplications
      - GetApplicationApplicationGroups
      - GetApplicationDeliveryGroups
      - UpdateApplication
      - UpdateApplicationGroup
      - UpdateAdminFolder
      - UpdateApplicationFolder
      - SearchStartMenuApplications
      - ApplicationsDiscovery
      - ModifyFTA
      - ImportFTA
      - GetSiteStatus
      - TestSite
      - CreateHypervisor
      - CreateHypervisorResourcePool
      - UpdateHypervisor
      - UpdateHypervisorResourcePool
      - HypervisorVmValidation
      - TestHypervisor
      - TestHypervisorResourcePool
      - CreateStoreFrontServer
      - DeleteStoreFrontServer
      - UpdateStoreFrontServer
      - UpdateImage
      - SetProvScheme
      - AddMachines
      - UpdateMachineCatalogMachine
      - RollbackMachineCatalogProvisioningScheme
      - GetHypervisorResourcePool
      - GetHypervisorsAndResourcePools
      - GetHypervisorResourcePoolResources
      - GetHypervisorAllResources
      - GetHypervisorAllResourcesWithoutConnection
      - GetHypervisorResourcePools
      - GetHypervisor
      - GetHypervisors
      - DeleteHypervisor
      - DeleteResourcePool
      - GetHypervisorSupportedPlugins
      - GetHypervisorServerHAAddresses
      - GetSessionApplications
      - GetOperations
      - DoOperationSearch
      - GetSessions
      - DoSessionSearch
      - GetMachines
      - DoMachineSearch
      - GetPvsSites
      - GetPvsCollections
      - GetPvsMachinesForCatalog
      - GetMachineCatalogMachineAccounts
      - GetMachineStartMenuShortcutIcon
      - GetMachineCatalogs
      - SearchMachineCatalogs
      - GetMachineCatalogDetails
      - GetAppVServers
      - ImportAppVPackages
      - AddAppVServer
      - UpdateAppVServer
      - RemoveAppVServer
      - GetAppVPackages
      - RemoveAppVPackage
      - GetAppVIsolationGroups
      - GetAppVPackageBrokerApplications
      - GetAppVPackageDelveryGroups
      - DeleteAppVIsolationGroup
      - CreateAppVIsolationGroup
      - UpdateAppVIsolationGroup
      - GetAppVIsolationGroup
      - GetApplicationFtas
      - GetMachineCatalogMachines
      - GetMachineCatalogDeliveryGroupAssociations
      - DoDeliveryGroupSearch
      - GetMachineCatalogLastMasterImage
      - DoZoneSearch
      - CreateZone
      - EditZone
      - DeleteZone
      - AddItemsIntoZone
      - MoveItemsIntoZone
      - RemoveItemsFromZone
      - StartDeliveryGroupRebootCycle
      - GetAdminAdministrators
      - CreateAdminScope
      - DeleteAdminScope
      - CreateAdminRole
      - UpdateAdminRole
      - DeleteAdminRole
      - UpdateAdminScope
      - SetBrokerHypervisorConnection
      - ResetBrokerHypervisorConnection
      - GetAllCatalogActions
      - GetCatalogAction
      - GetSingleCatalogAction
      - CancelCatalogAction
      - DeleteAllCatalogActions
      - DeleteCatalogActions
      - HideSession
      - UnhideSession
      - CreateMachineCatalogUpgradeSchedule
      - RemoveMachineCatalogUpgradeSchedule
      - UpdateMachineCatalogUpgradeSchedule
      - GetHypervisorMachineCatalogs
      - GetHypervisorResourcePoolMachineCatalogs
      - GetHypervisorAdministrators
      - GetHypervisorResourcePoolAdministrators
      - CreateMachineUpgradeSchedule
      - UpdateMachineUpgradeSchedule
      - RemoveMachineUpgradeSchedule
      - CreateMachinesUpgradeScheudle
      - GetAppLibPackageDiscoveryProfiles
      - GetAppLibPackageDiscoveryProfile
      - CreateAppLibPackageDiscoveryProfile
      - UpdateAppLibPackageDiscoveryProfile
      - RemoveAppLibPackageDiscoveryProfile
      - ValidateHypervisorResourcePoolResource
      - CreateAppLibPackageDiscovery
      - GetAppLibPackageDiscovery
      - GetAppLibPackageDiscoveries
      - SendCasEvent
      - AddDeliveryGroupPolicySet
      - RemoveDeliveryGroupPolicySet
      - StartSessionRecording
      - StopSessionRecording
      - GetLicenseSummary
      - GetDomainsIdentity
      - GetLicensePermission
      - RemoveMachinePowerActionSchedule
      - GetLicenseCertificate
      - SetLicenseServer
      - GetLicenseAlert
      - AddLicense
      - DeleteDeliveryController
      - GenerateDeliveryControllerDeleteScript
      - ChangeDatabase
      - GetLicenseEntitlement
      - AllocateLicense
      - ValidateMachineCatalogVDAComponentsAndFeaturesSelection
      - NewImageDefinition
      - AddImageVersion
      - RemoveImageDefinition
      - GetAllMachineIdentityPools
      - GetProvSchemeReferences
      - RequestProvVmUpdate
      - GetBackups
      - GetBackupHistory
      - GetBackupMembers
      - GetPvsSite
      - GetPvsVDisk
      - GetPvsStore
    LeasingBehavior:
      description: Leasing behavior.
      enum:
      - Unknown
      - Allowed
      - Disallowed
      title: LeasingBehavior
      type: string
      x-enumNames:
      - Unknown
      - Allowed
      - Disallowed
    LicenseAccessCodeRequestModel:
      description: The request model for License Access Code
      example:
        LicenseAccessCode: LicenseAccessCode
      properties:
        LicenseAccessCode:
          description: The License Access Code provided by Citrix.
          minLength: 1
          type: string
      required:
      - LicenseAccessCode
      title: LicenseAccessCodeRequestModel
      type: object
    LicenseCertificateResponseModel:
      description: The https certificate of the license server
      example:
        SerialNumber: SerialNumber
        Issuer: Issuer
        FriendlyName: FriendlyName
        Version: 0
        Thumbprint: Thumbprint
        ValidTo: ValidTo
        ChainStatusInformations:
        - ChainStatusInformations
        - ChainStatusInformations
        ChainStatusFlags:
        - null
        - null
        ValidFrom: ValidFrom
        rawData: rawData
        Subject: Subject
      properties:
        Thumbprint:
          description: The thumbprint of the certificate
          type: string
        Issuer:
          description: The issuer of the certificate
          type: string
        Subject:
          description: The subject of the certificate
          type: string
        ValidFrom:
          description: Datetime the certificate valid from
          type: string
        ValidTo:
          description: Datetime the certificate valid to
          type: string
        SerialNumber:
          description: The serialNumber of the certificate
          type: string
        FriendlyName:
          description: The friendly name of the certificate
          type: string
        Version:
          description: The certificate version
          format: int32
          type: integer
        rawData:
          description: The raw data for the entire X509v3 certificate as a hexadecimal
            string
          type: string
        ChainStatusInformations:
          description: A description of the ChainStatus value
          items:
            type: string
          type: array
        ChainStatusFlags:
          description: The status of the X509 chain
          items:
            $ref: '#/components/schemas/X509ChainStatusFlags'
          title: "X509ChainStatusFlags[]"
          type: array
      title: LicenseCertificateResponseModel
      type: object
    LicenseEntitlementRequestModel:
      description: Request model to download license based on license entitlement
        id
      example:
        LicenseAccessCode: LicenseAccessCode
        Id: Id
      properties:
        LicenseAccessCode:
          description: The License Access Code provided by Citrix.
          minLength: 1
          type: string
        Id:
          description: License entitlement id
          minLength: 1
          type: string
      required:
      - Id
      - LicenseAccessCode
      title: LicenseEntitlementRequestModel
      type: object
    LicenseEntitlementResponseModel:
      description: The response model for license entitlement when fetching license
        by License Access Code
      properties:
        Id:
          description: The license entitlement id
          type: string
        ProductName:
          description: The product name of the license
          type: string
        LicenseTotal:
          description: The total quantity of the license
          format: int32
          type: integer
        LicenseAvailable:
          description: The quantity of the available license
          format: int32
          type: integer
      title: LicenseEntitlementResponseModel
      type: object
    LicenseEntitlementResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfLicenseEntitlementResponseModel'
      - description: License entitlement response model collection
        type: object
      title: LicenseEntitlementResponseModelCollection
    LicenseInformationModel:
      description: LicenseInformationModel
      properties:
        LicenseServerWslAddress:
          description: "The WSL Address of the license server, the format is https://[FQDN:Port]"
          type: string
        LicenseServerLicensingAddress:
          description: The address of License Address
          type: string
        LicenseServer:
          description: The address of license server without the schema
          type: string
        LicensePort:
          description: The port of license server
          format: int32
          type: integer
        LicensingBurnInDate:
          description: The subscription advantage date of the license
          type: string
        LicenseProduct:
          allOf:
          - $ref: '#/components/schemas/LicenseProduct'
          description: License product
          type: object
        ProductEdition:
          allOf:
          - $ref: '#/components/schemas/ProductEdition'
          description: License edition
          type: object
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model
          type: object
        OutOfBoxGracePeriodActive:
          description: Indicate if trial license is used
          type: boolean
        OutOfBoxGracePeriodHoursLeft:
          description: Indicate remaining hours for the trial period
          format: int32
          type: integer
      title: LicenseInformationModel
      type: object
    LicenseInventoryModel:
      description: License Inventory Model
      example:
        LocalizedLicenseProductName: LocalizedLicenseProductName
        LicenseModel: "{}"
        LicenseExpirationDate: LicenseExpirationDate
        LicensesAvailable: 6
        LicensesInUse: 0
        LicenseOverdraft: 1
        LicenseSubscriptionAdvantageDate: LicenseSubscriptionAdvantageDate
        LicenseProductName: "{}"
        ProductEdition: "{}"
        LicenseType: LicenseType
      properties:
        LicenseProductName:
          allOf:
          - $ref: '#/components/schemas/LicenseProduct'
          description: The license name of the product
          type: object
        LocalizedLicenseProductName:
          description: Localized license name of the product
          type: string
        LicenseExpirationDate:
          description: The expired date of the license
          type: string
        LicenseSubscriptionAdvantageDate:
          description: The subscription advantage date of the license
          type: string
        LicenseType:
          description: The type of the license
          type: string
        LicensesInUse:
          description: The number of the Licenses in use
          format: int32
          type: integer
        LicensesAvailable:
          description: The number of the available licenses
          format: int32
          type: integer
        LicenseOverdraft:
          description: The number of the overdraft licenses
          format: int32
          type: integer
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model.
          type: object
        ProductEdition:
          allOf:
          - $ref: '#/components/schemas/ProductEdition'
          description: The product edition
          type: object
      title: LicenseInventoryModel
      type: object
    LicenseModel:
      description: Types of license.
      enum:
      - Unknown
      - None
      - Concurrent
      - UserDevice
      title: LicenseModel
      type: string
      x-enumNames:
      - Unknown
      - None
      - Concurrent
      - UserDevice
    LicensePermissionResponseModel:
      description: The permission to the license server
      example:
        LicensingPermissionLevel: "{}"
        LicensingAdministrator: LicensingAdministrator
      properties:
        LicensingAdministrator:
          description: The administrator  for the license server
          type: string
        LicensingPermissionLevel:
          allOf:
          - $ref: '#/components/schemas/LicensingPermissionLevel'
          description: The permission level for the license server
          type: object
      title: LicensePermissionResponseModel
      type: object
    LicenseProduct:
      description: License Product
      enum:
      - Unknown
      - XenDesktopXds
      - XenDesktopXdt
      - XenDesktopXdtTP
      - XenApp
      - CVAP
      title: LicenseProduct
      type: string
      x-enumNames:
      - Unknown
      - XenDesktopXds
      - XenDesktopXdt
      - XenDesktopXdtTP
      - XenApp
      - CVAP
    LicenseProductEditionResponseModel:
      description: The response object of license product edition.
      example:
        LicenseModel: "{}"
        LicenseProduct: "{}"
        ProductEdition: "{}"
      properties:
        LicenseProduct:
          allOf:
          - $ref: '#/components/schemas/LicenseProduct'
          description: The product code.
          type: object
        ProductEdition:
          allOf:
          - $ref: '#/components/schemas/ProductEdition'
          description: The product edition.
          type: object
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model.
          type: object
      title: LicenseProductEditionResponseModel
      type: object
    LicenseRequestModel:
      description: Request object for modification of the site license.
      example:
        LicenseModel: "{}"
        ProductCode: ProductCode
        ProductEdition: ProductEdition
      properties:
        ProductCode:
          description: The product code.
          type: string
        ProductEdition:
          description: The product edition.
          type: string
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model.
          type: object
      title: LicenseRequestModel
      type: object
    LicenseResponseModel:
      description: Response object for the site license.
      example:
        LicenseModel: "{}"
        ProductCode: ProductCode
        ProductEdition: ProductEdition
      properties:
        ProductCode:
          description: The product code.
          minLength: 1
          type: string
        ProductEdition:
          description: The product edition.
          minLength: 1
          type: string
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: The license model.
          type: object
      required:
      - LicenseModel
      - ProductCode
      - ProductEdition
      title: LicenseResponseModel
      type: object
    LicenseResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfLicenseResponseModel'
      - description: License response model collection.
        type: object
      title: LicenseResponseModelCollection
    LicenseSummaryResponseModel:
      description: Summary model
      example:
        OverdraftLicenses: 5
        CertAccepted: true
        LicenseInventories:
        - LocalizedLicenseProductName: LocalizedLicenseProductName
          LicenseModel: "{}"
          LicenseExpirationDate: LicenseExpirationDate
          LicensesAvailable: 6
          LicensesInUse: 0
          LicenseOverdraft: 1
          LicenseSubscriptionAdvantageDate: LicenseSubscriptionAdvantageDate
          LicenseProductName: "{}"
          ProductEdition: "{}"
          LicenseType: LicenseType
        - LocalizedLicenseProductName: LocalizedLicenseProductName
          LicenseModel: "{}"
          LicenseExpirationDate: LicenseExpirationDate
          LicensesAvailable: 6
          LicensesInUse: 0
          LicenseOverdraft: 1
          LicenseSubscriptionAdvantageDate: LicenseSubscriptionAdvantageDate
          LicenseProductName: "{}"
          ProductEdition: "{}"
          LicenseType: LicenseType
        NormalLicenses: 5
        LicenseInformation: null
        LicensesUsage: 2
      properties:
        LicenseInformation:
          $ref: '#/components/schemas/LicenseSummaryResponseModel_LicenseInformation'
        LicenseInventories:
          description: Get license inventory list
          items:
            $ref: '#/components/schemas/LicenseInventoryModel'
          title: List`1
          type: array
        NormalLicenses:
          description: The number of the available licenses
          format: int32
          type: integer
        OverdraftLicenses:
          description: The number of the overdraft licenses
          format: int32
          type: integer
        LicensesUsage:
          description: The usage of the licenses
          format: int32
          type: integer
        CertAccepted:
          description: Indicates if the certificate is verified
          type: boolean
      title: LicenseSummaryResponseModel
      type: object
    LicensingAlertLevel:
      description: ""
      enum:
      - Unknown
      - Info
      - Alert
      - Alarm
      title: LicensingAlertLevel
      type: string
      x-enumNames:
      - Unknown
      - Info
      - Alert
      - Alarm
    LicensingAlertLevel2:
      description: ""
      enum:
      - Unknown
      - Info
      - Alert
      - Alarm
      title: LicensingAlertLevel
      type: string
      x-enumNames:
      - Unknown
      - Info
      - Alert
      - Alarm
    LicensingAlertModel:
      description: Licensing alert.
      example:
        Action: Action
        TypeCode: TypeCode
        Priority: 0
        Title: Title
        LicensingAlertLevel: "{}"
        Detail: Detail
      properties:
        Priority:
          description: The priority of the licensing alert.
          format: int32
          type: integer
        LicensingAlertLevel:
          allOf:
          - $ref: '#/components/schemas/LicensingAlertLevel'
          description: The alert level.
          type: object
        TypeCode:
          description: The type code of the licensing alert (internal code used by
            licensing).
          type: string
        Title:
          description: The title of the alert.
          type: string
        Detail:
          description: More detailed information about the licensing alert.
          type: string
        Action:
          description: The action the user should take to resolve the alert.
          type: string
      title: LicensingAlertModel
      type: object
    LicensingAlertResponseModel:
      description: Licensing alert.
      properties:
        Priority:
          description: The priority of the licensing alert.
          format: int32
          type: integer
        AlertLevel:
          allOf:
          - $ref: '#/components/schemas/LicensingAlertLevel2'
          description: The alert level.
          type: object
        TypeCode:
          description: The type code of the licensing alert (internal code used by
            licensing).
          type: string
        Title:
          description: The title of the alert.
          type: string
        Detail:
          description: More detailed information about the licensing alert.
          type: string
        Action:
          description: The action the user should take to resolve the alert.
          type: string
      title: LicensingAlertResponseModel
      type: object
    LicensingPermissionLevel:
      description: ""
      enum:
      - Unknown
      - ReadOnly
      - Full
      - None
      title: LicensingPermissionLevel
      type: string
      x-enumNames:
      - Unknown
      - ReadOnly
      - Full
      - None
    LicensingUserResponseModel:
      description: Response object for the license administrator.
      properties:
        Account:
          description: Gets or sets the account name
          type: string
        AccountSid:
          description: 'Gets or sets the account SID '
          type: string
        PermissionLevel:
          allOf:
          - $ref: '#/components/schemas/LicensingPermissionLevel'
          description: Gets or sets the permission level
          type: object
        IsGroup:
          description: Gets or sets a value indicating whether it is an individual
            account or a group
          type: boolean
      title: LicensingUserResponseModel
      type: object
    LicensingUserResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfLicensingUserResponseModel'
      - description: License response model collection.
        type: object
      title: LicensingUserResponseModelCollection
    ListSortDirection:
      description: Direction to sort the results.
      enum:
      - Ascending
      - Descending
      title: ListSortDirection
      type: string
      x-enumNames:
      - Ascending
      - Descending
    LogOperationResponseModel:
      description: Log operation response model
      example:
        FormattedEndTime: FormattedEndTime
        Parameters:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        User: User
        EndTime: EndTime
        StartTime: StartTime
        Text: Text
        Source: Source
        FormattedStartTime: FormattedStartTime
        TargetTypes:
        - TargetTypes
        - TargetTypes
        Id: Id
        OperationType: "{}"
        AdminMachineIP: AdminMachineIP
        IsSuccessful: true
      properties:
        Id:
          description: ID of the logged operation.
          minLength: 1
          type: string
        AdminMachineIP:
          description: IP address of the admin machine from which the operation was
            performed.
          type: string
        EndTime:
          description: |-
            Time when the operation ended.
            If the operation is incomplete, will be null.
          type: string
        FormattedEndTime:
          description: |-
            Formatted time when the operation ended.
            If the operation is incomplete, will be null.
            RFC 3339 compatible format.
          type: string
        IsSuccessful:
          description: |-
            Indicates whether the operation completed successfully.  If the operation is
            incomplete, will be null.
          type: boolean
        OperationType:
          allOf:
          - $ref: '#/components/schemas/LogOperationType'
          description: Type of operation that was performed.
          type: object
        Parameters:
          description: Operation parameters. It is a list of parameter names.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Source:
          description: Source of the operation.
          minLength: 1
          type: string
        StartTime:
          description: Time when the operation started.
          minLength: 1
          type: string
        FormattedStartTime:
          description: |-
            Formatted time when the operation started.
            RFC 3339 compatible format.
          minLength: 1
          type: string
        TargetTypes:
          description: |-
            The type(s) of object which were the target of the configuration change. For
            example, "Session" or "Machine".
          items:
            type: string
          type: array
        Text:
          description: Human-readable description of the change.
          minLength: 1
          type: string
        User:
          description: User who performed the change.
          type: string
      required:
      - FormattedStartTime
      - Id
      - OperationType
      - Parameters
      - Source
      - StartTime
      - TargetTypes
      - Text
      title: LogOperationResponseModel
      type: object
    LogOperationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfLogOperationResponseModel'
      - description: Log operation response model collection
        type: object
      title: LogOperationResponseModelCollection
    LogOperationSearchFilterRequestModel:
      description: Advanced search filter for configuration logs.
      example:
        Operator: "{}"
        Value: Value
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/LogOperationSearchProperty'
          description: Property to filter on.
          type: object
        Value:
          description: Value to match.
          minLength: 1
          type: string
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchOperator'
          description: The comparison operator to use when determining if an item
            matches the filter.
          type: object
      required:
      - Operator
      - Property
      - Value
      title: LogOperationSearchFilterRequestModel
      type: object
    LogOperationSearchProperty:
      description: |-
        Configuration log entry properties that can be used for advanced searches within
        the configuration log.
      enum:
      - Text
      - StartTime
      - Source
      - EndTime
      - IsSuccessful
      - User
      - AdminMachineIP
      - OperationType
      - TargetType
      title: LogOperationSearchProperty
      type: string
      x-enumNames:
      - Text
      - StartTime
      - Source
      - EndTime
      - IsSuccessful
      - User
      - AdminMachineIP
      - OperationType
      - TargetType
    LogOperationSearchRequestModel:
      description: Request model for defining advanced configuration log search criteria.
      example:
        SortCriteria: null
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
      properties:
        SearchFilters:
          description: List of advanced search filters.
          items:
            $ref: '#/components/schemas/LogOperationSearchFilterRequestModel'
          title: "LogOperationSearchFilterRequestModel[]"
          type: array
        SortCriteria:
          $ref: '#/components/schemas/LogOperationSearchRequestModel_SortCriteria'
      title: LogOperationSearchRequestModel
      type: object
    LogOperationSortCriteriaRequestModel:
      description: Log operation sort criteria.
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/LogOperationSearchProperty'
          description: Property to sort on.
          type: object
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/ListSortDirection'
          description: Direction to sort the property.
          type: object
      required:
      - Property
      - SortDirection
      title: LogOperationSortCriteriaRequestModel
      type: object
    LogOperationType:
      description: Operation type for configuration log entries.
      enum:
      - Unknown
      - ConfigurationChange
      - AdminActivity
      title: LogOperationType
      type: string
      x-enumNames:
      - Unknown
      - ConfigurationChange
      - AdminActivity
    LogSiteRequestModel:
      description: Set logging site model.
      example:
        Locale: Locale
        AllowChangesWhileDatabaseDown: true
        LoggingEnabled: true
      properties:
        LoggingEnabled:
          description: Configuration logging settings enabled.
          type: boolean
        AllowChangesWhileDatabaseDown:
          description: Allow changes to the site configuration when the database is
            not available.
          type: boolean
        Locale:
          description: Locale.
          type: string
      title: LogSiteRequestModel
      type: object
    LogSiteResponseModel:
      description: Logging site details model.
      example:
        Locale: Locale
        AllowChangesWhileDatabaseDown: true
        LoggingEnabled: true
      properties:
        LoggingEnabled:
          description: Configuration logging settings enabled.
          type: boolean
        AllowChangesWhileDatabaseDown:
          description: Allow changes to the site configuration when the database is
            not available.
          type: boolean
        Locale:
          description: Locale.
          type: string
      title: LogSiteResponseModel
      type: object
    LosingSetting:
      description: Settings that are not applied.
      properties:
        PolicyGuid:
          description: Policy GUID.
          format: guid
          type: string
        PolicyName:
          description: The policy that has the setting.
          type: string
        SettingName:
          description: The setting that is not applied.
          type: string
      title: LosingSetting
      type: object
    LowLevelOperationDetailResponseModel:
      description: "low level operation detail model\n            "
      properties:
        EndTime:
          description: "The date and time that the operation completed.\nThis will\
            \ be null if the operation is still in progress, or if the operation never\
            \ completed.\n            "
          type: string
        FormattedEndTime:
          description: "The formatted date and time that the operation completed.\
            \ RFC 3339 compatible format.\nThis will be null if the operation is still\
            \ in progress, or if the operation never completed.\n            "
          type: string
        IsSuccessful:
          description: "Indicates whether the operation completed successfully or\
            \ not.\nThis will be null if the operation is still in progress, or if\
            \ the operation didn't complete.\n            "
          type: boolean
        NewValue:
          description: "The new property value.\n            "
          type: string
        PreviousValue:
          description: "The previous property value.\n            "
          type: string
        PropertyName:
          description: "The name of the changed property.\n            "
          type: string
        AddValue:
          description: "If the object property contains a set of values, this specifies\
            \ the new value which was added to the set.\n            "
          type: string
        RemoveValue:
          description: "If the object property contains a set of values, this specifies\
            \ the value which was removed from the set.\n            "
          type: string
        StartTime:
          description: "The date and time that the operation started.\n          \
            \  "
          minLength: 1
          type: string
        FormattedStartTime:
          description: "The formatted date and time that the operation started. RFC\
            \ 3339 compatible format.\n            "
          minLength: 1
          type: string
        TargetName:
          description: "The name of the target object affected by the operation.\n\
            \            "
          minLength: 1
          type: string
        TargetUid:
          description: "The unique identifier of the target object affected by the\
            \ operation.\n            "
          minLength: 1
          type: string
        TargetType:
          description: "The type of the target object.\n            "
          type: string
        Text:
          description: "The description of operation performed on the target object.\n\
            \            "
          minLength: 1
          type: string
      required:
      - FormattedStartTime
      - StartTime
      - TargetName
      - TargetUid
      - Text
      title: LowLevelOperationDetailResponseModel
      type: object
    LowLevelOperationResponseModel:
      description: "Low level operation response model\n            "
      properties:
        AdminMachineIP:
          description: "IP address of the admin machine from which the operation was\
            \ performed.\n            "
          type: string
        Details:
          description: "Details.\n            "
          items:
            $ref: '#/components/schemas/LowLevelOperationDetailResponseModel'
          title: "LowLevelOperationDetailResponseModel[]"
          type: array
        EndTime:
          description: "Time when the operation ended.\nIf the operation is incomplete,\
            \ will be null.\n            "
          type: string
        FormattedEndTime:
          description: "Formatted time when the operation ended. RFC 3339 compatible\
            \ format.\nIf the operation is incomplete, will be null.\n            "
          type: string
        Id:
          description: "ID of the logged operation.\n            "
          minLength: 1
          type: string
        IsSuccessful:
          description: "Indicates whether the operation completed successfully.  If\
            \ the operation is\nincomplete, will be null.\n            "
          type: boolean
        OperationId:
          description: "The id of the (high level) operation.\n            "
          minLength: 1
          type: string
        OperationType:
          allOf:
          - $ref: '#/components/schemas/LogOperationType'
          description: "Type of operation that was performed.\n            "
          type: object
        Parameters:
          description: "Operation parameters.\n            "
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Source:
          description: "Source of the operation.\n            "
          minLength: 1
          type: string
        SourceSdk:
          description: "The source SDK.\n            "
          type: string
        StartTime:
          description: "Time when the operation started.\n            "
          minLength: 1
          type: string
        FormattedStartTime:
          description: "Formatted time when the operation started. RFC 3339 compatible\
            \ format.\n            "
          minLength: 1
          type: string
        TargetTypes:
          description: "The type(s) of object which were the target of the configuration\
            \ change. For\nexample, \"Session\" or \"Machine\".\n            "
          items:
            type: string
          type: array
        Text:
          description: "Human-readable description of the change.\n            "
          minLength: 1
          type: string
        User:
          description: "User who performed the change.\n            "
          type: string
      required:
      - FormattedStartTime
      - Id
      - OperationId
      - OperationType
      - Parameters
      - Source
      - StartTime
      - TargetTypes
      - Text
      title: LowLevelOperationResponseModel
      type: object
    LowLevelOperationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfLowLevelOperationResponseModel'
      - description: Low level operation response model collection
        type: object
      title: LowLevelOperationResponseModelCollection
    MachineAccountCreationRulesRequestModel:
      description: Rules for creation of machine accounts in Active Directory.
      properties:
        NamingScheme:
          description: Defines the template name for AD accounts created in the identity
            pool.  Required.
          maxLength: 15
          minLength: 2
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'`=+;.(){}_\\s]*$)(?=^[^\\\
            .])(?=^.*[^\\d].*$).*(?<!-([tT][aA][cC])|([gG][wW])|([gG][aA][tT][eE][wW][aA][yY]))$"
          type: string
        NamingSchemeType:
          allOf:
          - $ref: '#/components/schemas/NamingSchemeType'
          description: |-
            The type of naming scheme. This defines the format of the variable part of the AD account names that will be created.
            Optional; default is Numeric.
          type: object
        OU:
          description: The OU that computer accounts will be created into.  Optional.
          maxLength: 64
          pattern: .*
          type: string
        Domain:
          description: |-
            The AD domain name for the pool. Specify this in FQDN format; for example, MyDomain.com.
            Required.
          maxLength: 255
          minLength: 1
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'(){}_\\s]*$).*$"
          type: string
        NextValue:
          description: Defines the next value that will be used if creating new AD
            accounts.  Optional.
          maxLength: 15
          pattern: ^\w+$
          type: string
        IdentityPoolId:
          description: Existing identity pool id
          type: string
      required:
      - Domain
      - NamingScheme
      title: MachineAccountCreationRulesRequestModel
      type: object
    MachineAccountCreationRulesResponseModel:
      description: Rules for creation of machine accounts in Active Directory.
      properties:
        NamingScheme:
          description: The template name for AD accounts created in the identity pool.
          type: string
        NamingSchemeType:
          allOf:
          - $ref: '#/components/schemas/NamingSchemeType'
          description: The type of naming scheme. This defines the format of the variable
            part of the AD account names that will be created.
          type: object
        OU:
          description: The OU that computer accounts will be created into.
          type: string
        Domain:
          $ref: '#/components/schemas/MachineAccountCreationRulesResponseModel_Domain'
        NextValue:
          description: The next value that will be used if creating new AD accounts.
          type: string
      title: MachineAccountCreationRulesResponseModel
      type: object
    MachineAccountDeleteOption:
      description: Option for how to treat deleted machine accounts.
      enum:
      - Unknown
      - Leave
      - None
      - Disable
      - Delete
      title: MachineAccountDeleteOption
      type: string
      x-enumNames:
      - Unknown
      - Leave
      - None
      - Disable
      - Delete
    MachineAccountRequestModel:
      description: Active directory machine account which was externally created.
      example:
        ResetPassword: true
        PasswordFormat: "{}"
        ADAccountName: ADAccountName
        Password: Password
      properties:
        ADAccountName:
          description: The Active Directory account name to be imported.
          maxLength: 15
          minLength: 1
          pattern: .*
          type: string
        ResetPassword:
          default: true
          description: Indicates whether the machine account password should be reset.
          type: boolean
        Password:
          description: |-
            The current password for the machine account , in the format specified by
            PasswordFormat.
          maxLength: 20480
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: The format of the machine account password.
          type: object
      required:
      - ADAccountName
      title: MachineAccountRequestModel
      type: object
    MachineAndSessionSearchFilterGroupRequestModel:
      description: Advanced search filter group for machines and sessions
      example:
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        SearchFilterGroupType: "{}"
        SearchFilterGroups:
        - null
        - null
        SearchFilterGroupsType: "{}"
      properties:
        SearchFilterGroupType:
          allOf:
          - $ref: '#/components/schemas/MachineAndSessionSearchFilterGroupType'
          description: The type of search filter group
          type: object
        SearchFilters:
          description: The search filters in search filter group
          items:
            $ref: '#/components/schemas/MachineAndSessionSearchFilterRequestModel'
          title: "MachineAndSessionSearchFilterRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/MachineAndSessionSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
        SearchFilterGroups:
          description: The search filter group in search filter groups
          items:
            $ref: '#/components/schemas/MachineAndSessionSearchFilterGroupRequestModel'
          title: "MachineAndSessionSearchFilterGroupRequestModel[]"
          type: array
      title: MachineAndSessionSearchFilterGroupRequestModel
      type: object
    MachineAndSessionSearchFilterGroupsType:
      description: The search filter groups type
      enum:
      - Or
      - And
      title: MachineAndSessionSearchFilterGroupsType
      type: string
      x-enumNames:
      - Or
      - And
    MachineAndSessionSearchFilterGroupType:
      description: The search filter group type
      enum:
      - Or
      - And
      title: MachineAndSessionSearchFilterGroupType
      type: string
      x-enumNames:
      - Or
      - And
    MachineAndSessionSearchFilterRequestModel:
      description: Advanced search filter for machines.
      example:
        Operator: "{}"
        Value: Value
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/MachineAndSessionSearchProperty'
          description: Property to filter on.
          type: object
        Value:
          description: Value to match.
          type: string
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchOperator'
          description: |-
            The comparison operator to use when determining
            if an item matches the filter.
          type: object
      required:
      - Operator
      - Property
      title: MachineAndSessionSearchFilterRequestModel
      type: object
    MachineAndSessionSearchProperty:
      description: "Properties which can be used for advanced machine and session\
        \ searches.\n\n    Unsupported property when searching for machines :\n \n\
        \n    Unsupported properties when searching for sessions :\n    ,,,,,,\n \
        \   ,,,,,,,\n    ,,,\n\n\n    When searching for machines, the session properties\
        \ cause a match if the\n    machine is currently hosting a session that matches.\n\
        \nWhen searching for sessions, the machine properties cause a match if the\n\
        session is hosted on a machine that matches.\n            "
      enum:
      - AgentVersion
      - AllocationType
      - AppState
      - AppsInUse
      - AzureAdJoinedMode
      - ControllerDnsName
      - ClientIP
      - ClientName
      - ConnectedViaHostName
      - ConnectedViaIP
      - HypervisorConnection
      - ConnectionProtocol
      - CurrentUser
      - DeliveryGroup
      - FaultState
      - IsAssigned
      - LastConnectionUser
      - LastDeregistrationReason
      - LastDeregistrationTime
      - LaunchedViaHostName
      - LaunchedViaIP
      - LoadIndex
      - StartTime
      - MachineCatalog
      - MachineUnavailableReason
      - InMaintenanceMode
      - DrainingUntilShutdown
      - MachineName
      - OSType
      - OSVersion
      - ImageOutOfDate
      - PowerActionPending
      - ClientVersion
      - PowerState
      - SupportedPowerActions
      - RegistrationState
      - SecureIcaActive
      - HostingServerName
      - SessionCount
      - SessionStateChangeTime
      - SessionState
      - SessionSupport
      - SmartAccessFilters
      - SummaryState
      - Tags
      - UserPrincipalName
      - UserName
      - UserDisplayName
      - HostedMachineName
      - WindowsConnectionSetting
      - FunctionalLevel
      - DnsName
      - Uid
      - VdaUpgrade
      - VdaUpgradeState
      - ProvisioningType
      title: MachineAndSessionSearchProperty
      type: string
      x-enumNames:
      - AgentVersion
      - AllocationType
      - AppState
      - AppsInUse
      - AzureAdJoinedMode
      - ControllerDnsName
      - ClientIP
      - ClientName
      - ConnectedViaHostName
      - ConnectedViaIP
      - HypervisorConnection
      - ConnectionProtocol
      - CurrentUser
      - DeliveryGroup
      - FaultState
      - IsAssigned
      - LastConnectionUser
      - LastDeregistrationReason
      - LastDeregistrationTime
      - LaunchedViaHostName
      - LaunchedViaIP
      - LoadIndex
      - StartTime
      - MachineCatalog
      - MachineUnavailableReason
      - InMaintenanceMode
      - DrainingUntilShutdown
      - MachineName
      - OSType
      - OSVersion
      - ImageOutOfDate
      - PowerActionPending
      - ClientVersion
      - PowerState
      - SupportedPowerActions
      - RegistrationState
      - SecureIcaActive
      - HostingServerName
      - SessionCount
      - SessionStateChangeTime
      - SessionState
      - SessionSupport
      - SmartAccessFilters
      - SummaryState
      - Tags
      - UserPrincipalName
      - UserName
      - UserDisplayName
      - HostedMachineName
      - WindowsConnectionSetting
      - FunctionalLevel
      - DnsName
      - Uid
      - VdaUpgrade
      - VdaUpgradeState
      - ProvisioningType
    MachineAndSessionSearchRequestModel:
      description: Request model for defining advanced machine and session search
        criteria.
      example:
        SortCriteria: null
        SearchFilters:
        - Operator: "{}"
          Value: Value
          Property: "{}"
        - Operator: "{}"
          Value: Value
          Property: "{}"
        SortCriteriaItems:
        - SortDirection: "{}"
          Property: "{}"
        - SortDirection: "{}"
          Property: "{}"
        BasicSearchString: BasicSearchString
        SearchFilterGroups:
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        - SearchFilters:
          - Operator: "{}"
            Value: Value
            Property: "{}"
          - Operator: "{}"
            Value: Value
            Property: "{}"
          SearchFilterGroupType: "{}"
          SearchFilterGroups:
          - null
          - null
          SearchFilterGroupsType: "{}"
        SearchFilterGroupsType: "{}"
      properties:
        BasicSearchString:
          description: |-
            Basic search string. Specify a string which will match
            if contained within some string property of the machine.
          type: string
        SearchFilters:
          description: List of advanced search filters.
          items:
            $ref: '#/components/schemas/MachineAndSessionSearchFilterRequestModel'
          title: "MachineAndSessionSearchFilterRequestModel[]"
          type: array
        SortCriteria:
          $ref: '#/components/schemas/MachineAndSessionSearchRequestModel_SortCriteria'
        SearchFilterGroups:
          description: List of advanced search filter groups.
          items:
            $ref: '#/components/schemas/MachineAndSessionSearchFilterGroupRequestModel'
          title: "MachineAndSessionSearchFilterGroupRequestModel[]"
          type: array
        SearchFilterGroupsType:
          allOf:
          - $ref: '#/components/schemas/MachineAndSessionSearchFilterGroupsType'
          description: The type of search filter groups
          type: object
        SortCriteriaItems:
          description: "Sort criteria for the results, multiple sorting criteria can\
            \ be specified here."
          items:
            $ref: '#/components/schemas/MachineAndSessionSortCriteriaRequestModel'
          title: "MachineAndSessionSortCriteriaRequestModel[]"
          type: array
      title: MachineAndSessionSearchRequestModel
      type: object
    MachineAndSessionSortCriteriaRequestModel:
      description: Machine sort criteria.
      example:
        SortDirection: "{}"
        Property: "{}"
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/MachineAndSessionSearchProperty'
          description: Property to sort on.
          type: object
        SortDirection:
          allOf:
          - $ref: '#/components/schemas/ListSortDirection'
          description: Direction to sort the property.
          type: object
      required:
      - Property
      - SortDirection
      title: MachineAndSessionSortCriteriaRequestModel
      type: object
    MachineApplicationResponseModel:
      allOf:
      - $ref: '#/components/schemas/ApplicationResponseModel'
      - $ref: '#/components/schemas/MachineApplicationResponseModel_allOf'
      title: MachineApplicationResponseModel
    MachineApplicationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfMachineApplicationResponseModel'
      - description: Response object for collections of MachineApplicationResponseModel.
        type: object
      title: MachineApplicationResponseModelCollection
    MachineBaseResponseModel:
      properties:
        Id:
          description: |-
            Id of machine.
            Used to be: DesktopUid (and wasn't globally unique)
            OR UUID, depending on context
            Needs to be globally unique
            Might be constructed from site ID + internal Uid?  or use uuid
          minLength: 1
          type: string
        MachineCatalog:
          $ref: '#/components/schemas/MachineBaseResponseModel_MachineCatalog'
        Name:
          description: |-
            DNS host name of the machine.
            Used to be: MachineName
          type: string
      required:
      - Id
      title: MachineBaseResponseModel
      type: object
    MachineCatalogDeliveryGroupRefResponseModel:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      - $ref: '#/components/schemas/MachineCatalogDeliveryGroupRefResponseModel_allOf'
      title: MachineCatalogDeliveryGroupRefResponseModel
    MachineCatalogDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/MachineCatalogResponseModel'
      - $ref: '#/components/schemas/MachineCatalogDetailResponseModel_allOf'
      title: MachineCatalogDetailResponseModel
    MachineCatalogResponseModel:
      description: Response object for machine catalog.
      properties:
        Name:
          description: |-
            Simple administrative name of catalog within parent admin folder (if any). This
            property is not guaranteed unique across all catalogs.
          minLength: 1
          type: string
        FullName:
          description: Unique administrative name of catalog.
          type: string
        Id:
          description: Id of the machine catalog.
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        AllocationType:
          allOf:
          - $ref: '#/components/schemas/AllocationType'
          description: Denotes how the machines in the catalog are allocated to a
            user.
          type: object
        AssignedCount:
          description: The number of assigned machines (machines that have been assigned
            to a user/users or a client name/address).
          format: int32
          type: integer
        AvailableAssignedCount:
          description: "The number of available machines (not in a delivery group),\
            \ that are also assigned to users."
          format: int32
          type: integer
        AvailableCount:
          description: The number of available machines (those not in any delivery
            group).
          format: int32
          type: integer
        AvailableUnassignedCount:
          description: The number of available machines (those not in any delivery
            group) that are not assigned to users.
          format: int32
          type: integer
        Description:
          description: Description of the machine catalog.
          type: string
        IsPowerManaged:
          description: Indicates whether the machines in the catalog are power-managed.
          type: boolean
        IsRemotePC:
          description: |-
            Indicates whether or not the catalog is a RemotePC catalog. Remote PC catalogs
            automatically configure appropriate machines without the need for manual
            configuration.
            CHANGE: was
            public bool RemotePC { get; set; }
          type: boolean
        JobsInProgress:
          description: List of jobs currently in progress that affect the machine
            catalog.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        MachineType:
          allOf:
          - $ref: '#/components/schemas/MachineType'
          description: Type of the machines in the machine catalog.
          type: object
        Metadata:
          description: The metadata of machine catalog.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: The minimum functional level of machines in the machine catalog.
          type: object
        HasBeenPromoted:
          description: |-
            Whether the machine catalog was previously promoted from a lower
            MinimumFunctionalLevel.
          type: boolean
        HasBeenPromotedFrom:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            If HasBeenPromoted is `true`, this is the
            previous MinimumFunctionalLevel.
          type: object
        CanRollbackVMImage:
          description: Whether the machine catalog can roll back VM image.
          type: boolean
        CanRecreateCatalog:
          description: Whether the machine catalog can recreate.
          type: boolean
        PersistChanges:
          allOf:
          - $ref: '#/components/schemas/PersistChanges'
          description: Specifies how user changes are persisted on machines in the
            machine catalog.
          type: object
        ProvisioningScheme:
          $ref: '#/components/schemas/MachineCatalogResponseModel_ProvisioningScheme'
        ProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ProvisioningType'
          description: Specifies how the machines are provisioned in the catalog.
          type: object
        ProvisioningProgress:
          $ref: '#/components/schemas/MachineCatalogResponseModel_ProvisioningProgress'
        PvsAddress:
          description: |-
            IP address of the PVS server to be used.
            This only applies if the ProvisioningType is
            .
          type: string
        PvsDomain:
          description: The domain of the PVS server to be used.
          type: string
        RemotePCEnrollmentScopes:
          description: List of one or more remote PC enrollment scopes.
          items:
            $ref: '#/components/schemas/RemotePCEnrollmentScopeResponseModel'
          title: "RemotePCEnrollmentScopeResponseModel[]"
          type: array
        Scopes:
          description: Administrative scopes which the machine catalog is part of.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        Tenants:
          description: |-
            The tenant(s) that the machine catalog is assigned to.  If `null`,
            the machine catalog is not assigned to tenants, and may be used by
            any tenant, including future added tenants.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: Specifies the session support of the machines in the machine
            catalog.
          type: object
        SharingKind:
          allOf:
          - $ref: '#/components/schemas/SharingKind'
          description: Sharing mode for machines in the machine catalog.
          type: object
        TotalCount:
          description: The total number of machines in the catalog.
          format: int32
          type: integer
        IsBroken:
          description: Whether the machine catalog is currently in a "Broken" state.
          type: boolean
        IsMasterImageAssociated:
          description: Whether the machine catalog is associated with a master image.
          type: boolean
        Errors:
          description: Gets the Errors of machines in this catalog
          items:
            type: string
          type: array
        Warnings:
          description: |-
            List of warnings that are currently active on the machine catalog,
            if any.  If there are no warnings this will not be specified.
          items:
            $ref: '#/components/schemas/MachineCatalogWarningResponseModel'
          title: "MachineCatalogWarningResponseModel[]"
          type: array
        UnassignedCount:
          description: The number of unassigned machines (machines not assigned to
            users).
          format: int32
          type: integer
        UsedCount:
          description: The number of machines in the catalog that are in a delivery
            group.
          format: int32
          type: integer
        UpgradeInfo:
          $ref: '#/components/schemas/MachineCatalogResponseModel_UpgradeInfo'
        Zone:
          $ref: '#/components/schemas/MachineCatalogResponseModel_Zone'
        AdminFolder:
          $ref: '#/components/schemas/CatalogSearchResponseModel_AdminFolder'
      required:
      - AllocationType
      - AvailableCount
      - CanRecreateCatalog
      - CanRollbackVMImage
      - HasBeenPromoted
      - Id
      - IsBroken
      - IsRemotePC
      - MachineType
      - MinimumFunctionalLevel
      - Name
      - PersistChanges
      - ProvisioningType
      - SessionSupport
      - SharingKind
      - TotalCount
      - UnassignedCount
      - UsedCount
      - Zone
      title: MachineCatalogResponseModel
      type: object
    MachineCatalogResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfMachineCatalogResponseModel'
      - description: Response object for collections of items.
        type: object
      title: MachineCatalogResponseModelCollection
    MachineCatalogTestResponseModel:
      description: Response object for a machine catalog test result.
      example:
        NumWarnings: 6
        NumFailures: 1
        NumPassed: 0
        MachineCatalog: null
      properties:
        MachineCatalog:
          $ref: '#/components/schemas/MachineCatalogTestResponseModel_MachineCatalog'
        NumPassed:
          description: The number of tests that passed.
          format: int32
          type: integer
        NumWarnings:
          description: The number of warnings that were found.
          format: int32
          type: integer
        NumFailures:
          description: The number of tests that failed.
          format: int32
          type: integer
      required:
      - MachineCatalog
      - NumFailures
      - NumPassed
      - NumWarnings
      title: MachineCatalogTestResponseModel
      type: object
    MachineCatalogUpgradeDetail:
      description: Status detail of last VDA upgrade schedule for a machine catalog.
      properties:
        ScheduleStatus:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeScheduleStatus'
          description: State Id of this upgrade status object. Exact type TBD.
          type: object
        LastStateChangeTimeUtc:
          description: |-
            UTC time when this upgrade status object changed status
            for the last time.
          format: date-time
          title: DateTime
          type: string
        TotalMachines:
          description: |-
            Count of machines with an upgrade schedule in this catalog.
            This does not always equal to the machine count of the catalog,
            as there might be machines which joined the catalog after a catalog
            level upgrade is schdeuled, so do not have an upgrade status.
          format: int32
          type: integer
        SuccessCount:
          description: Count of machines whose last upgrade is in success state.
          format: int32
          type: integer
        ValidationFailureCount:
          description: Count of machines whose last upgrade failed during package
            validation.
          format: int32
          type: integer
        InProgressCount:
          description: Count of machines whose upgrade is in progress.
          format: int32
          type: integer
        UpgradeFailureCount:
          description: Count of machines whose last upgrade failed during package
            installtion.
          format: int32
          type: integer
        ScheduledTimeUtc:
          description: UTC time when this VDA upgrade was scheduled to start.
          format: date-time
          title: DateTime
          type: string
        DurationInHours:
          description: "Timeout duration in hours, of the current VDA upgrade schdeule."
          format: int32
          type: integer
        TargetPackageVersion:
          description: Target package version of the current VDA upgrade schdeule.
          type: string
        CancelledUpgradeCount:
          description: Count of machines whose last upgrade canceled during package
            installtion.
          format: int32
          type: integer
        WaitingToUpgradeCount:
          description: Count of machines who is waiting to upgrade.
          format: int32
          type: integer
      title: MachineCatalogUpgradeDetail
      type: object
    MachineCatalogUpgradeInfo:
      description: |-
        Machine catalog level VDA upgrade status info.
        This is included in the machine catalog response model
        and used to render available upgrade options.
      properties:
        UpgradeType:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeType'
          description: VDA upgrade type of this machine catalog.
          type: object
        UpgradeState:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeState'
          description: Upgrade state of the machine catalog.
          type: object
        UpgradeScheduleStatus:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeScheduleStatus'
          description: Status of current upgrade schdeule associated with the machine
            catalog.
          type: object
        UpgradeOngoingMachinesCount:
          description: Number of machines in the machine catalog with in-progress
            upgrades.
          format: int32
          type: integer
        UpgradeFailedMachinesCount:
          description: Number of machines in the machine catalog with failed upgrades.
          format: int32
          type: integer
      title: MachineCatalogUpgradeInfo
      type: object
    MachineCatalogVusComponentResponseModel:
      description: Response model of VDA upgrade components and features related to
        the Machine Catalog.
      example:
        Uid: 0
        AvailableComponents:
        - ComponentDescription: ComponentDescription
          Parameters:
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          ComponentName: ComponentName
          ComponentId: ComponentId
        - ComponentDescription: ComponentDescription
          Parameters:
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          ComponentName: ComponentName
          ComponentId: ComponentId
        AvailableFeatures:
        - FeatureId: FeatureId
          FeatureDescription: FeatureDescription
          FeatureName: FeatureName
        - FeatureId: FeatureId
          FeatureDescription: FeatureDescription
          FeatureName: FeatureName
        InstalledComponents:
        - ComponentDescription: ComponentDescription
          Parameters:
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          ComponentName: ComponentName
          ComponentId: ComponentId
        - ComponentDescription: ComponentDescription
          Parameters:
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          - ParameterType: ParameterType
            ParameterName: ParameterName
            ParameterId: ParameterId
            ParameterDescription: ParameterDescription
          ComponentName: ComponentName
          ComponentId: ComponentId
        Id: Id
        Name: Name
      properties:
        Uid:
          description: Uid of the catalog.
          format: int32
          type: integer
        Id:
          description: Id of the machine catalog.
          minLength: 1
          type: string
        Name:
          description: Name of the catalog.
          minLength: 1
          type: string
        InstalledComponents:
          description: Installed VDA components of the catalog.
          items:
            $ref: '#/components/schemas/VDAComponentModel'
          title: "VDAComponentModel[]"
          type: array
        AvailableComponents:
          description: Available VDA components of the catalog.
          items:
            $ref: '#/components/schemas/VDAComponentModel'
          title: "VDAComponentModel[]"
          type: array
        AvailableFeatures:
          description: Available VDA features of the catalog.
          items:
            $ref: '#/components/schemas/VDAFeatureModel'
          title: "VDAFeatureModel[]"
          type: array
      required:
      - Id
      - Name
      title: MachineCatalogVusComponentResponseModel
      type: object
    MachineCatalogWarningResponseModel:
      description: Describes a warning on a machine catalog.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/MachineCatalogWarningType'
          description: Type of warning.
          type: object
        Subtype:
          allOf:
          - $ref: '#/components/schemas/MachineCatalogWarningSubtype'
          description: |-
            Sub-type of warning.  For example, this might indicate why the
            warning cannot be automatically corrected.
          type: object
        Message:
          description: Message associated with warning
          type: string
      required:
      - Type
      title: MachineCatalogWarningResponseModel
      type: object
    MachineCatalogWarningSubtype:
      description: Sub-types of warnings that may occur on a machine catalog.
      enum:
      - Unknown
      - NoWarning
      - NoPoweredOnVm
      - LicensingTypeNotConfigured
      - CheckNotSupported
      - CheckNotCompleted
      - CheckFailed
      - NoNewRdsConnectionsAllowed
      - OutOfGracePeriod
      - PersonalTerminalServer
      - RemoteDesktopForAdministration
      - PerUserAllowed
      - PerDeviceNoLicenseServer
      - PerDeviceIncompatibleLicenseServer
      - PerDeviceNoRequiredLicenseServer
      - PerDeviceNoCalAndNoLicenseServer
      - PerDeviceIssueMarkedTemporaryLicense
      - PerDeviceUnmarkedTemporaryLicense
      - PerDeviceUnexpiredTemporaryLicenseNotUpgraded
      - PerDeviceUseUnexpiredUnmarkedTemporaryLicense
      - PerDeviceExpiredTemporaryLicenseNotUpgraded
      - PerDeviceExpiredUnmarkedTemporaryLicense
      - MachineVdaUpgradeFailed
      title: MachineCatalogWarningSubtype
      type: string
      x-enumNames:
      - Unknown
      - NoWarning
      - NoPoweredOnVm
      - LicensingTypeNotConfigured
      - CheckNotSupported
      - CheckNotCompleted
      - CheckFailed
      - NoNewRdsConnectionsAllowed
      - OutOfGracePeriod
      - PersonalTerminalServer
      - RemoteDesktopForAdministration
      - PerUserAllowed
      - PerDeviceNoLicenseServer
      - PerDeviceIncompatibleLicenseServer
      - PerDeviceNoRequiredLicenseServer
      - PerDeviceNoCalAndNoLicenseServer
      - PerDeviceIssueMarkedTemporaryLicense
      - PerDeviceUnmarkedTemporaryLicense
      - PerDeviceUnexpiredTemporaryLicenseNotUpgraded
      - PerDeviceUseUnexpiredUnmarkedTemporaryLicense
      - PerDeviceExpiredTemporaryLicenseNotUpgraded
      - PerDeviceExpiredUnmarkedTemporaryLicense
      - MachineVdaUpgradeFailed
    MachineCatalogWarningType:
      description: Types of warnings that may occur on a machine catalog.
      enum:
      - Unknown
      - RdsCatalogLicenseCheck
      - ImagePreparationOfficeRearmCountExceeded
      - ImagePreparationOfficeRearmFailed
      - ImagePreparationOSRearmCountExceeded
      - ImagePreparationOSRearmFailed
      - CatalogAction
      - GetCustomPropertiesFailed
      - GetVMMetadataFailed
      title: MachineCatalogWarningType
      type: string
      x-enumNames:
      - Unknown
      - RdsCatalogLicenseCheck
      - ImagePreparationOfficeRearmCountExceeded
      - ImagePreparationOfficeRearmFailed
      - ImagePreparationOSRearmCountExceeded
      - ImagePreparationOSRearmFailed
      - CatalogAction
      - GetCustomPropertiesFailed
      - GetVMMetadataFailed
    MachineConfigurationResponseModel:
      description: Machine Configuration response class.
      example:
        Policy: Policy
        Description: Description
        DeliveryGroups:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        Id: 0
        ConfigurationSlot: null
        LeafName: LeafName
        Name: Name
      properties:
        Id:
          description: The Id of a machine configuration.
          format: int32
          type: integer
        ConfigurationSlot:
          $ref: '#/components/schemas/MachineConfigurationResponseModel_ConfigurationSlot'
        Name:
          description: The name of a machine configuration.
          type: string
        LeafName:
          description: The name of a machine configuration.
          type: string
        Policy:
          description: The policy of a configuration slot.
          type: string
        Description:
          description: The Description of a machine configuration.
          type: string
        DeliveryGroups:
          description: The associated desktop grouds ref.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
      title: MachineConfigurationResponseModel
      type: object
    MachineConfigurationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfMachineConfigurationResponseModel'
      - description: Collection of MachineConfigurationResponseModel
        type: object
      title: MachineConfigurationResponseModelCollection
    MachineDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/MachineResponseModel'
      - $ref: '#/components/schemas/MachineDetailResponseModel_allOf'
      title: MachineDetailResponseModel
    MachineHostingResponseModel:
      description: Response model for machine hosting details.
      properties:
        HostedMachineId:
          description: Unique ID within the hosting unit of the target managed machine.
          type: string
        HostedMachineName:
          description: |-
            The friendly name of a hosted machine as used by its hypervisor.
            This is not necessarily the DNS name of the machine.
          type: string
        HostingServerName:
          description: DNS name of the hypervisor that is hosting the machine.
          type: string
        LastHostingUpdateTime:
          description: |-
            Time of last update to any hosting data (such as power
            states) for this machine reported by the hypervisor
            connection.
          type: string
        FormattedLastHostingUpdateTime:
          description: |-
            Formatted time of last update to any hosting data (such as power
            states) for this machine reported by the hypervisor
            connection.
            RFC 3339 compatible format.
          type: string
        HypervisorConnection:
          $ref: '#/components/schemas/MachineHostingResponseModel_HypervisorConnection'
        ImageOutOfDate:
          description: |-
            Indicates whether the machine image matches the latest
            image specified for the machine catalog.
          type: boolean
      title: MachineHostingResponseModel
      type: object
    MachineIdentityPoolResponseModel:
      description: Details about machine identity pool response model.
      example:
        IdentityContent: IdentityContent
        IdentityType: IdentityType
        DeviceManagementType: DeviceManagementType
        NamingScheme: NamingScheme
        WorkGroupMachines: true
        StartCount: 0
        TaintedAccountsCount: 5
        ErrorAccountsCount: 5
        Name: Name
        NamingSchemeType: "{}"
        TenantId: TenantId
        DefaultOUDomain: null
        InUseAccountsCount: 1
        AzureADAccessToken: AzureADAccessToken
        AzureADSecurityGroupName: AzureADSecurityGroupName
        AvailableAccountsCount: 6
        Id: Id
        CustomActiveDirectoryOU: CustomActiveDirectoryOU
        UseDefaultOU: true
        AzureADTenantId: AzureADTenantId
      properties:
        Id:
          description: Machine identity pool id.
          format: guid
          type: string
        Name:
          description: Machine identity pool name.
          type: string
        NamingSchemeType:
          allOf:
          - $ref: '#/components/schemas/AccountNamingSchemeType'
          description: Machine identity pool nameing scheme type.
          type: object
        NamingScheme:
          description: Machine identity pool naming scheme.
          type: string
        StartCount:
          description: Machine identity pool start count.
          format: int32
          type: integer
        CustomActiveDirectoryOU:
          description: Machine identity pool custom active directory OU.
          type: string
        UseDefaultOU:
          description: Indicates whether use default OU
          type: boolean
        DefaultOUDomain:
          $ref: '#/components/schemas/MachineIdentityPoolResponseModel_DefaultOUDomain'
        AvailableAccountsCount:
          description: The number of available accounts in the machine identity pool
          format: int32
          type: integer
        InUseAccountsCount:
          description: The number of accounts in use in the machine identity pool
          format: int32
          type: integer
        TaintedAccountsCount:
          description: The number of tainted accounts in the machine identity pool
          format: int32
          type: integer
        ErrorAccountsCount:
          description: The number of bad accounts in the machine identity pool
          format: int32
          type: integer
        TenantId:
          description: Tenant id.
          format: guid
          type: string
        WorkGroupMachines:
          description: Work group machines.
          type: boolean
        IdentityType:
          description: Identity type.
          type: string
        IdentityContent:
          description: Identity content.
          type: string
        AzureADSecurityGroupName:
          description: Azure AD security group name.
          type: string
        AzureADAccessToken:
          description: Azure AD access token.
          type: string
        DeviceManagementType:
          description: Device management type.
          type: string
        AzureADTenantId:
          description: Azure AD tenant id.
          format: guid
          type: string
      title: MachineIdentityPoolResponseModel
      type: object
    MachineIdentityPoolResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfMachineIdentityPoolResponseModel'
      - description: Response object for collections of items.
        type: object
      title: MachineIdentityPoolResponseModelCollection
    MachineLogOnType:
      description: Data contract for MachineLogOnType.
      enum:
      - ActiveDirectory
      - LocalMappedAccount
      - AzureAD
      - Unknown
      title: MachineLogOnType
      type: string
      x-enumNames:
      - ActiveDirectory
      - LocalMappedAccount
      - AzureAD
      - Unknown
    MachineResponseModel:
      allOf:
      - $ref: '#/components/schemas/MachineBaseResponseModel'
      - $ref: '#/components/schemas/MachineResponseModel_allOf'
      title: MachineResponseModel
    MachineResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfMachineResponseModel'
      - description: Response object for collections of MachineResponseMode.
        type: object
      title: MachineResponseModelCollection
    MachineTestResponseModel:
      example:
        Status: "{}"
        CreatedBy: CreatedBy
        CategoryName: CategoryName
        CommandResponse: CommandResponse
        CommandName: CommandName
        ErrorMessage: ErrorMessage
        Machine: null
      properties:
        Machine:
          $ref: '#/components/schemas/MachineTestResponseModel_Machine'
        Status:
          allOf:
          - $ref: '#/components/schemas/CloudHealthCheckStatus'
          description: Status.
          type: object
        CommandResponse:
          description: CommandResponse.
          type: string
        ErrorMessage:
          description: ErrorMessage.
          type: string
        CommandName:
          description: CommandName.
          type: string
        CategoryName:
          description: CategoryName.
          type: string
        CreatedBy:
          description: The owner of the test
          type: string
      title: MachineTestResponseModel
      type: object
    MachineType:
      description: Types of machine.
      enum:
      - Unknown
      - Virtual
      - Physical
      title: MachineType
      type: string
      x-enumNames:
      - Unknown
      - Virtual
      - Physical
    MachineUnavailableReason:
      description: Azure AD join type for machines
      enum:
      - Unknown
      - None
      - LoadManagementInitializing
      - PvdInitializing
      - PvdFailed
      - GctConnectionInitializing
      - AzureAdJoinInitializing
      title: MachineUnavailableReason
      type: string
      x-enumNames:
      - Unknown
      - None
      - LoadManagementInitializing
      - PvdInitializing
      - PvdFailed
      - GctConnectionInitializing
      - AzureAdJoinInitializing
    MachineUpgradeDetail:
      description: Status detail of last VDA upgrade schedule for a machine.
      properties:
        Uuid:
          description: Uuid of this upgrade status object.
          type: string
        ScheduleStatus:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeMachineScheduleStatus'
          description: State of this upgrade status object. Exact type TBD.
          type: object
        StatusMessage:
          description: Status message resulted from the action of this upgrade status
            object.
          type: string
        LastStateChangeTimeUtc:
          description: |-
            UTC time when this upgrade status object changed status
            for the last time.
          type: string
        ScheduledTimeUtc:
          description: UTC time when this VDA upgrade is scheduled to start.
          type: string
        DurationInHours:
          description: "Timeout duration in hours, of the current VDA upgrade schdeule."
          format: int32
          type: integer
        TargetPackageVersion:
          description: Target package version of the current VDA upgrade schdeule.
          type: string
      title: MachineUpgradeDetail
      type: object
    MCSImportData:
      properties:
        IdentityPool:
          type: string
        ProvisioningScheme:
          type: string
      title: MCSImportData
      type: object
    MeResponseModel:
      description: Details about the currently logged-in administrator.
      example:
        Customers:
        - Id: Id
          Name: Name
          Sites:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
        - Id: Id
          Name: Name
          Sites:
          - Id: Id
            Name: Name
          - Id: Id
            Name: Name
        UserId: UserId
        RefreshExpirationTime: RefreshExpirationTime
        DisplayName: DisplayName
        ExpiryTime: ExpiryTime
        IsCspCustomer: true
        VerifiedEmail: VerifiedEmail
      properties:
        UserId:
          description: |-
            Id of the logged-in user.
            Internally: this is the *sub* from the bearer token.  NOT the user_id.
          minLength: 1
          type: string
        DisplayName:
          description: |-
            Display name of the user.
            Internally: the *displayname* from the bearer token.
          minLength: 1
          type: string
        ExpiryTime:
          description: |-
            Time when the login token expires.
            RFC 3339 compatible format.
            Internally: the *exp* from the bearer token, converted to RFC 3339.
          minLength: 1
          type: string
        RefreshExpirationTime:
          description: |-
            Time after which the login token can no longer be refreshed.
            RFC 3339 compatible format.
            Internally: the *refresh_expiration* from the bearer token, converted to RFC 3339.
          minLength: 1
          type: string
        VerifiedEmail:
          description: Verified email of the user.
          type: string
        IsCspCustomer:
          description: True if the current customer is a csp customer(partner/tenant)
          type: boolean
        Customers:
          description: List of customers and sites accessible by the user.
          items:
            $ref: '#/components/schemas/MyCustomerResponseModel'
          title: "MyCustomerResponseModel[]"
          type: array
      required:
      - Customers
      - DisplayName
      - ExpiryTime
      - RefreshExpirationTime
      - UserId
      title: MeResponseModel
      type: object
    MessageStyle:
      description: Style of message box to use.
      enum:
      - Unknown
      - Critical
      - Question
      - Exclamation
      - Information
      title: MessageStyle
      type: string
      x-enumNames:
      - Unknown
      - Critical
      - Question
      - Exclamation
      - Information
    ModelBase:
      allOf:
      - $ref: '#/components/schemas/ObjectWithPropertyBag'
      - description: A base class for all Model objects
        type: object
        x-abstract: true
      title: ModelBase
    ModelingRequestContract:
      description: Modeling request model
      example:
        ComputerIdentity: ComputerIdentity
        User: User
        SiteName: SiteName
        DistinguishedName: DistinguishedName
        UserContainer: UserContainer
        IsUsingAccessGateway: true
        UserIdentity: UserIdentity
        DomainController: DomainController
        AccessGatewayFarm: AccessGatewayFarm
        GroupSids:
        - GroupSids
        - GroupSids
        IsUsingWanScaler: true
        ComputerContainer: ComputerContainer
        ClientIPAddress: ClientIPAddress
        DeliveryGroupType: DeliveryGroupType
        DeliveryGroupTags:
        - DeliveryGroupTags
        - DeliveryGroupTags
        UserSid: UserSid
        ClientName: ClientName
        DeliveryGroup: DeliveryGroup
        Computer: Computer
        AccessGatewayTags:
        - AccessGatewayTags
        - AccessGatewayTags
      properties:
        DomainController:
          description: The domain controller
          type: string
        ComputerIdentity:
          description: The computer
          type: string
        UserIdentity:
          description: The user
          type: string
        SiteName:
          description: The site name
          type: string
        Computer:
          description: The selected computer
          type: string
        ComputerContainer:
          description: Selected computer container
          type: string
        User:
          description: Selected user
          type: string
        UserSid:
          description: SID of the selected user.
          type: string
        DistinguishedName:
          description: User distinguished name.
          type: string
        GroupSids:
          description: SIDs of the groups to which the user belongs.
          items:
            type: string
          type: array
        UserContainer:
          description: Selected user container
          type: string
        ClientIPAddress:
          description: Client IP address
          type: string
        ClientName:
          description: Client name
          type: string
        DeliveryGroup:
          description: Delivery group
          type: string
        DeliveryGroupType:
          description: "Delivery group type, values are members of enum DesktopKind."
          type: string
        DeliveryGroupTags:
          description: Delivery group tags
          items:
            type: string
          type: array
        IsUsingAccessGateway:
          description: Using Access Gateway
          type: boolean
        AccessGatewayFarm:
          description: Access Gateway farm
          type: string
        AccessGatewayTags:
          description: Access Gateway tags
          items:
            type: string
          type: array
        IsUsingWanScaler:
          description: Using WanScaler (NetScaler SD-WAN)
          type: boolean
      title: ModelingRequestContract
      type: object
    ModelingResponseContract:
      description: Data contract for group policy modeling
      example:
        User: User
        Machine: Machine
        Name: Name
        Result: null
      properties:
        Name:
          description: Gets or sets Name
          type: string
        User:
          description: Gets or sets User
          type: string
        Machine:
          description: Gets or sets Machine
          type: string
        Result:
          $ref: '#/components/schemas/ModelingResponseContract_Result'
      title: ModelingResponseContract
      type: object
    ModelingResultContract:
      description: Result of a modeling or simulation
      properties:
        IsMachineRsop:
          description: The report is for machine or user
          type: boolean
        LastProcessTime:
          description: The most recent simulation time
          format: date-time
          title: DateTime
          type: string
        AppliedSettings:
          description: Applied settings
          items:
            $ref: '#/components/schemas/AppliedSetting'
          title: "AppliedSetting[]"
          type: array
        AppliedPolicies:
          description: Applied policies
          items:
            $ref: '#/components/schemas/AppliedPolicy'
          title: "AppliedPolicy[]"
          type: array
        FilterEvidence:
          additionalProperties:
            type: string
          description: Filter evidence used for the simulation
          title: Dictionary`2
          type: object
        LosingSettings:
          description: Settings that did not get applied.
          items:
            $ref: '#/components/schemas/LosingSetting'
          title: "LosingSetting[]"
          type: array
      title: ModelingResultContract
      type: object
    MyCustomerResponseModel:
      description: |-
        Response object indicating a customer who the currently-logged-in
        admin has access to.
      example:
        Id: Id
        Name: Name
        Sites:
        - Id: Id
          Name: Name
        - Id: Id
          Name: Name
      properties:
        Id:
          description: |-
            Id of the customer.
            internally: the CC customer id / short-name, or for on-prem
            this could be any generated guid.
          minLength: 1
          type: string
        Name:
          description: |-
            Human-readable name of the customer.  Not necessarily unique.
            internally: the CC customer full name, or for on-prem this
            can be something hardcoded.
          type: string
        Sites:
          description: Sites which the admin has access to within the customer.
          items:
            $ref: '#/components/schemas/MySiteResponseModel'
          title: "MySiteResponseModel[]"
          type: array
      required:
      - Id
      - Sites
      title: MyCustomerResponseModel
      type: object
    MySiteResponseModel:
      description: |-
        Response object indicating a site within a customer which the currently
        logged-in administrator has access to.
      example:
        Id: Id
        Name: Name
      properties:
        Id:
          description: |-
            Id of the site.
            In the cloud this is the "Virtual site ID".  On-prem this should be
            the XD farm guid.
          minLength: 1
          type: string
        Name:
          description: Name of the site.
          minLength: 1
          type: string
      required:
      - Id
      - Name
      title: MySiteResponseModel
      type: object
    NameValueIntPairModel:
      description: "A name/value pair, with the value of (JSON) type Number."
      properties:
        Name:
          description: Name.
          type: string
        Value:
          description: Value.
          format: int32
          type: integer
      title: NameValueIntPairModel
      type: object
    NameValueStringPairModel:
      description: "A name/value pair, with the value of (JSON) type String."
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          description: Name.
          type: string
        Value:
          description: Value.
          type: string
      title: NameValueStringPairModel
      type: object
    NameValueStringPairModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfNameValueStringPairModel'
      - description: Collection type of NameValueStringPairModel
        type: object
      title: NameValueStringPairModelCollection
    NamingSchemeType:
      description: Naming scheme type for creating machine account names during provisioning.
      enum:
      - Unknown
      - None
      - Numeric
      - Alphabetic
      - Unicode
      title: NamingSchemeType
      type: string
      x-enumNames:
      - Unknown
      - None
      - Numeric
      - Alphabetic
      - Unicode
    NetworkMapRequestModel:
      description: Network map request object.
      example:
        DeviceNameOrId: DeviceNameOrId
        NetworkDeviceNameOrId: NetworkDeviceNameOrId
        NetworkPath: NetworkPath
      properties:
        DeviceNameOrId:
          description: '`DEPRECATED.  Use <see cref=''NetworkDeviceNameOrId''/>.`
            The name or Id of the network.  Required.'
          maxLength: 2147483647
          pattern: UNKNOWN
          type: string
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='NetworkDeviceNameOrId'/>.
        NetworkDeviceNameOrId:
          description: The name or Id of the network device.
          maxLength: 2147483647
          pattern: UNKNOWN
          type: string
        NetworkPath:
          description: |-
            The path in the resource pool to the virtual network that the device
            should be attached to.
            This must be a path to a Network item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
      required:
      - NetworkPath
      title: NetworkMapRequestModel
      type: object
    NetworkMapResponseModel:
      description: Network map response object.
      example:
        DeviceId: DeviceId
        Network: null
        IsCardEnabled: true
        DeviceName: DeviceName
      properties:
        DeviceName:
          description: The name for the network.  This is for display only and may
            not be populated.
          type: string
        DeviceId:
          description: Network device ID.  Zero indicates the primary network device.
          minLength: 1
          type: string
        Network:
          $ref: '#/components/schemas/NetworkMapResponseModel_Network'
        IsCardEnabled:
          description: Gets or sets a value indicating whether IsCardEnabled.
          type: boolean
      required:
      - DeviceId
      - Network
      title: NetworkMapResponseModel
      type: object
    ObjectWithPropertyBag:
      description: An object that can store its property values within a property
        bag to perform automatic change notification.
      title: ObjectWithPropertyBag
      type: object
    OciEnvironment:
      description: OCI environments
      enum:
      - Commercial
      - USGovernment
      - UKGovernment
      title: OciEnvironment
      type: string
      x-enumNames:
      - Commercial
      - USGovernment
      - UKGovernment
    OperatingSystemInfoResponseModel:
      description: The operating sysytem information
      properties:
        OperatingSystemType:
          allOf:
          - $ref: '#/components/schemas/OperatingSystemType'
          description: Operating system type.
          type: object
        MajorVersion:
          description: OS major version.
          format: int32
          type: integer
        MinorVersion:
          description: OS minor version.
          format: int32
          type: integer
        BuildNumber:
          description: OS build number.
          format: int32
          type: integer
        ProductType:
          allOf:
          - $ref: '#/components/schemas/ProductType'
          description: OS product type.
          type: object
        SuiteMask:
          allOf:
          - $ref: '#/components/schemas/SuiteMask'
          description: OS product suit type.
          type: object
        ReleaseId:
          description: OS release Id. It is read from registry and available for Windows
            10 and higher.
          type: string
        UpdateBuildRevision:
          description: OS update build revision number. It is read from registry and
            available for Windows 10 and higher.
          type: string
        DisplayVersion:
          description: OS display version. It is read from registry and available
            for Windows 10 and higher.
          type: string
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: "The VDA type: SingleSession or MultiSession"
          type: object
      title: OperatingSystemInfoResponseModel
      type: object
    OperatingSystemType:
      description: Operating system type.
      enum:
      - Unknown
      - Windows
      - Linux
      - MacOs
      title: OperatingSystemType
      type: string
      x-enumNames:
      - Unknown
      - Windows
      - Linux
      - MacOs
    PagingFileSettingResponseModel:
      description: "Paging file location like: ?:\\pagefile.sys, C:\\pagefile.sys"
      properties:
        Location:
          description: "Paging file location like: ?:\\pagefile.sys, C:\\pagefile.sys"
          type: string
        MinSize:
          description: Paging file minimum size in MB.
          format: int32
          type: integer
        MaxSize:
          description: Paging file maximum size in MB.
          format: int32
          type: integer
      title: PagingFileSettingResponseModel
      type: object
    PersistChanges:
      description: Methods by which changes are persisted on a machine.
      enum:
      - Unknown
      - Discard
      - OnLocal
      - OnPvd
      title: PersistChanges
      type: string
      x-enumNames:
      - Unknown
      - Discard
      - OnLocal
      - OnPvd
    PolicyBodyRequest:
      description: Policy request model
      example:
        isEnabled: true
        name: name
        description: description
      properties:
        name:
          description: Policy name.
          type: string
        isEnabled:
          description: Is policy enabled
          type: boolean
        description:
          description: Policy description
          type: string
      required:
      - isEnabled
      title: PolicyBodyRequest
      type: object
    PolicyRequest:
      description: Policy request model
      example:
        settings:
        - settingValue: settingValue
          useDefault: true
          settingName: settingName
        - settingValue: settingValue
          useDefault: true
          settingName: settingName
        isEnabled: true
        name: name
        description: description
        filters:
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterType: filterType
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterType: filterType
      properties:
        name:
          description: Policy name.
          type: string
        isEnabled:
          description: Is policy enabled
          type: boolean
        description:
          description: Policy description
          type: string
        settings:
          description: Policy settings
          items:
            $ref: '#/components/schemas/SettingRequest'
          title: "SettingRequest[]"
          type: array
        filters:
          description: Policy filters
          items:
            $ref: '#/components/schemas/FilterRequest'
          title: "FilterRequest[]"
          type: array
      required:
      - isEnabled
      title: PolicyRequest
      type: object
    PolicyRequestContract:
      description: Policy request model
      example:
        Filters:
        - FilterType: FilterType
          IsEnabled: false
          FilterName: FilterName
          IsAllowed: false
          FilterValue: FilterValue
        - FilterType: FilterType
          IsEnabled: false
          FilterName: FilterName
          IsAllowed: false
          FilterValue: FilterValue
        Description: Description
        IsEnabled: false
        Priority: 0
        PolicyName: PolicyName
        Settings:
        - SettingValue: SettingValue
          SettingType: SettingType
          TypedValue: "{}"
        - SettingValue: SettingValue
          SettingType: SettingType
          TypedValue: "{}"
      properties:
        PolicyName:
          description: "Policy name as identifier, translated."
          type: string
        IsEnabled:
          default: false
          description: Is policy enabled
          type: boolean
        Description:
          description: Policy description
          type: string
        Priority:
          description: New policy priority
          format: int32
          type: integer
        Settings:
          description: Policy settings
          items:
            $ref: '#/components/schemas/SettingRequestContract'
          title: IEnumerable`1
          type: array
        Filters:
          description: Policy filters
          items:
            $ref: '#/components/schemas/FilterRequestContract'
          title: IEnumerable`1
          type: array
      title: PolicyRequestContract
      type: object
    PolicyResponse:
      description: Policy model
      example:
        settings:
        - settingValue: settingValue
          settingGuid: settingGuid
          useDefault: true
          policyGuid: policyGuid
          settingName: settingName
        - settingValue: settingValue
          settingGuid: settingGuid
          useDefault: true
          policyGuid: policyGuid
          settingName: settingName
        policySetGuid: policySetGuid
        policyName: policyName
        isEnabled: true
        description: description
        filters:
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterGuid: filterGuid
          filterType: filterType
          policyGuid: policyGuid
        - isAllowed: true
          filterData: filterData
          isEnabled: true
          filterGuid: filterGuid
          filterType: filterType
          policyGuid: policyGuid
        priority: 0
        policyGuid: policyGuid
      properties:
        policySetGuid:
          description: The blob that this policy belongs to.
          format: guid
          type: string
        policyGuid:
          description: Policy GUID.
          format: guid
          type: string
        policyName:
          description: "Policy name, translated."
          type: string
        priority:
          description: Policy priority
          format: int32
          type: integer
        isEnabled:
          description: Is policy enabled
          type: boolean
        description:
          description: Policy description
          type: string
        settings:
          description: Policy settings
          items:
            $ref: '#/components/schemas/SettingResponse'
          title: "SettingResponse[]"
          type: array
        filters:
          description: Policy filters
          items:
            $ref: '#/components/schemas/FilterResponse'
          title: "FilterResponse[]"
          type: array
      required:
      - isEnabled
      - policyGuid
      - policySetGuid
      - priority
      title: PolicyResponse
      type: object
    PolicyResponseContract:
      description: Policy model
      example:
        Filters:
        - FilterType: FilterType
          IsUserFilter: true
          Identifier: Identifier
          IsSingleton: true
          IsEnabled: true
          Explanation: Explanation
          DisplayName: DisplayName
          Synopsis: Synopsis
          IsAllowed: true
          FilterValue: FilterValue
        - FilterType: FilterType
          IsUserFilter: true
          Identifier: Identifier
          IsSingleton: true
          IsEnabled: true
          Explanation: Explanation
          DisplayName: DisplayName
          Synopsis: Synopsis
          IsAllowed: true
          FilterValue: FilterValue
        Description: Description
        IsEnabled: true
        Priority: 0
        PolicyName: PolicyName
        IsUnfiltered: true
        Settings:
        - SettingName: SettingName
          CurrentValue: CurrentValue
        - SettingName: SettingName
          CurrentValue: CurrentValue
      properties:
        PolicyName:
          description: "Policy name as identifier, translated."
          type: string
        Priority:
          description: Policy priority
          format: int32
          type: integer
        IsEnabled:
          description: Is policy enabled
          type: boolean
        Description:
          description: Policy description
          type: string
        IsUnfiltered:
          description: Is unfiltered is true only for the 'Unfiltered' policy.
          type: boolean
        Settings:
          description: Policy settings
          items:
            $ref: '#/components/schemas/SettingResponseContract'
          title: IEnumerable`1
          type: array
        Filters:
          description: Policy filters
          items:
            $ref: '#/components/schemas/FilterResponseContract'
          title: IEnumerable`1
          type: array
      title: PolicyResponseContract
      type: object
    PolicySetRequest:
      description: Policy set request.
      example:
        policySetType: policySetType
        name: name
        description: description
        scopes:
        - scopes
        - scopes
      properties:
        policySetType:
          description: The policy set type.
          type: string
        name:
          description: Name of the policy set.
          type: string
        description:
          description: Policy set description.
          type: string
        scopes:
          description: Delegated administration scopes for the policy set.
          items:
            type: string
          type: array
      title: PolicySetRequest
      type: object
    PolicySetResponse:
      description: GPO policy set data.
      example:
        policySetGuid: policySetGuid
        policyCount: 0
        policySetType: "{}"
        name: name
        policies:
        - settings:
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          policySetGuid: policySetGuid
          policyName: policyName
          isEnabled: true
          description: description
          filters:
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          priority: 0
          policyGuid: policyGuid
        - settings:
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          - settingValue: settingValue
            settingGuid: settingGuid
            useDefault: true
            policyGuid: policyGuid
            settingName: settingName
          policySetGuid: policySetGuid
          policyName: policyName
          isEnabled: true
          description: description
          filters:
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          - isAllowed: true
            filterData: filterData
            isEnabled: true
            filterGuid: filterGuid
            filterType: filterType
            policyGuid: policyGuid
          priority: 0
          policyGuid: policyGuid
        description: description
        scopes:
        - scopes
        - scopes
      properties:
        policySetGuid:
          description: Guid of the policy set.
          format: guid
          type: string
        policySetType:
          allOf:
          - $ref: '#/components/schemas/SdkGpoPolicySetType'
          description: The policy set type.
          type: object
        name:
          description: Name of the policy set.
          type: string
        description:
          description: Policy set description.
          type: string
        policyCount:
          description: Number of policies in the policy set.
          format: int32
          type: integer
        policies:
          description: Policies in the policy set.
          items:
            $ref: '#/components/schemas/PolicyResponse'
          title: "PolicyResponse[]"
          type: array
        scopes:
          description: Delegated admin scopes.
          items:
            type: string
          type: array
      required:
      - policyCount
      - policySetGuid
      - policySetType
      title: PolicySetResponse
      type: object
    PolicyTemplateResponseContract:
      description: "ALL: Policy and Template"
      example:
        Policies:
        - Filters:
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          Description: Description
          IsEnabled: true
          Priority: 0
          PolicyName: PolicyName
          IsUnfiltered: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        - Filters:
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          - FilterType: FilterType
            IsUserFilter: true
            Identifier: Identifier
            IsSingleton: true
            IsEnabled: true
            Explanation: Explanation
            DisplayName: DisplayName
            Synopsis: Synopsis
            IsAllowed: true
            FilterValue: FilterValue
          Description: Description
          IsEnabled: true
          Priority: 0
          PolicyName: PolicyName
          IsUnfiltered: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        Templates:
        - Description: Description
          TemplateName: TemplateName
          IsReadOnly: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
        - Description: Description
          TemplateName: TemplateName
          IsReadOnly: true
          Settings:
          - SettingName: SettingName
            CurrentValue: CurrentValue
          - SettingName: SettingName
            CurrentValue: CurrentValue
      properties:
        Policies:
          description: Policies
          items:
            $ref: '#/components/schemas/PolicyResponseContract'
          title: IEnumerable`1
          type: array
        Templates:
          description: Templates
          items:
            $ref: '#/components/schemas/TemplateResponseContract'
          title: IEnumerable`1
          type: array
      title: PolicyTemplateResponseContract
      type: object
    PoolSizeScheduleRequestModel:
      description: The pool size to power on during a time range.
      example:
        TimeRange: TimeRange
        PoolSize: 9
      properties:
        TimeRange:
          description: Time range during which the pool size applies.
          type: string
        PoolSize:
          description: |-
            The number of machines (either as an absolute number or a percentage
            of the machines in the delivery group, depending on the value of
            PoolUsingPercentage) that
            are to be maintained in a running state, whether they are in use or
            not.
          format: int32
          type: integer
      title: PoolSizeScheduleRequestModel
      type: object
    PoolSizeScheduleResponseModel:
      description: The pool size to power on during a time range.
      example:
        TimeRange: TimeRange
        PoolSize: 6
      properties:
        TimeRange:
          description: Time range during which the pool size applies.
          type: string
        PoolSize:
          description: |-
            The number of machines (either as an absolute number or a percentage
            of the machines in the delivery group, depending on the value of
            PoolUsingPercentage) that
            are to be maintained in a running state, whether they are in use or
            not.
          format: int32
          type: integer
      title: PoolSizeScheduleResponseModel
      type: object
    PowerActionScheduleResponseModel:
      description: Power action schedule.
      properties:
        Action:
          $ref: '#/components/schemas/SupportedPowerAction'
        ActionDueTime:
          format: date-time
          title: DateTime
          type: string
        DNSName:
          type: string
        HostedMachineName:
          type: string
        HypervisorConnectionUid:
          format: int32
          type: integer
        MachineName:
          type: string
        Uid:
          format: int64
          title: Int64
          type: integer
      title: PowerActionScheduleResponseModel
      type: object
    PowerActionScheduleResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPowerActionScheduleResponseModel'
      - description: Reboot schedule response model collection.
        type: object
      title: PowerActionScheduleResponseModelCollection
    PowerState:
      description: Power state of a machine.
      enum:
      - Unknown
      - Unmanaged
      - Unavailable
      - "Off"
      - "On"
      - Suspended
      - TurningOn
      - TurningOff
      - Suspending
      - Resuming
      - NotSupported
      - VirtualMachineNotFound
      title: PowerState
      type: string
      x-enumNames:
      - Unknown
      - Unmanaged
      - Unavailable
      - "Off"
      - "On"
      - Suspended
      - TurningOn
      - TurningOff
      - Suspending
      - Resuming
      - NotSupported
      - VirtualMachineNotFound
    PowerTimeSchemeRequestModel:
      description: Request object for specifying a power time scheme.
      example:
        PoolUsingPercentage: false
        DaysOfWeek:
        - null
        - null
        PoolSizeSchedule:
        - TimeRange: TimeRange
          PoolSize: 9
        - TimeRange: TimeRange
          PoolSize: 9
        PeakHours:
        - true
        - true
        DisplayName: DisplayName
        PoolSize:
        - 9
        - 9
        PeakTimeRanges:
        - PeakTimeRanges
        - PeakTimeRanges
        Name: Name
      properties:
        DaysOfWeek:
          description: The pattern of days of the week that the power time scheme
            covers.
          items:
            $ref: '#/components/schemas/TimeSchemeDays'
          title: "TimeSchemeDays[]"
          type: array
        Name:
          description: The administrative name of the power time scheme.
          maxLength: 64
          pattern: (.*)*
          type: string
        DisplayName:
          description: The name of the power time scheme as displayed in the Studio
            console.
          maxLength: 64
          pattern: (.*)*
          type: string
        PeakHours:
          description: |-
            `DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.` DEPRECATED.  Use PeakTimeRanges instead.

            A set of 24 boolean flag values, one for each hour of the day. The first
            value in the array relates to midnight to 00:59, the next one to 1 AM to
            01:59 and so on, with the last array element relating to 11 PM to 11:59.
            If the flag is `true` it means that the associated hour of the day
            is considered a peak time; if `false` it means that it is considered
            off-peak.
          items:
            type: boolean
          title: "Boolean[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.
        PeakTimeRanges:
          description: List of peak time ranges during the day.
          items:
            type: string
          type: array
        PoolSize:
          description: |-
            `DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.` DEPRECATED.  Use PoolSizeSchedule instead.

            A set of 24 integer values, one for each hour of the day. The first value
            in the array relates to midnight to 00:59, the next one to 1 AM to 01:59
            and so on, with the last array element relating to 11 PM to 11:59. The
            value defines the number of machines (either as an absolute number or a
            percentage of the machines in the delivery group, depending on the value
            of ) that are to be maintained in a
            running state, whether they are in use or not. A value of `-1` has
            special meaning: pool size management does not apply during such hours.
          items:
            format: int32
            type: integer
          title: "Int32[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.
        PoolSizeSchedule:
          description: |-
            List of pool size schedules during the day.  Each is specified as a
            time range and an indicator of the number of machines that should be
            powered on during that time range.
          items:
            $ref: '#/components/schemas/PoolSizeScheduleRequestModel'
          title: "PoolSizeScheduleRequestModel[]"
          type: array
        PoolUsingPercentage:
          default: false
          description: |-
            Indicates whether the integer values in the pool size array are to be
            treated as absolute values (if this value is `false`) or as
            percentages of the number of machines in the delivery group (if this value
            is `true`).
          type: boolean
      title: PowerTimeSchemeRequestModel
      type: object
    PowerTimeSchemeResponseModel:
      description: Power time scheme.
      example:
        PoolUsingPercentage: true
        DaysOfWeek:
        - null
        - null
        PoolSizeSchedule:
        - TimeRange: TimeRange
          PoolSize: 6
        - TimeRange: TimeRange
          PoolSize: 6
        PeakHours:
        - true
        - true
        DisplayName: DisplayName
        PoolSize:
        - 0
        - 0
        Id: Id
        PeakTimeRanges:
        - PeakTimeRanges
        - PeakTimeRanges
        Name: Name
      properties:
        DaysOfWeek:
          description: The pattern of days of the week that the power time scheme
            covers.
          items:
            $ref: '#/components/schemas/TimeSchemeDays'
          title: "TimeSchemeDays[]"
          type: array
        Name:
          description: The administrative name of the power time scheme.
          minLength: 1
          type: string
        DisplayName:
          description: The name of the power time scheme as displayed in the Studio
            console.
          minLength: 1
          type: string
        PeakHours:
          description: |-
            `DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.` DEPRECATED.  Use PeakTimeRanges instead.

            A set of 24 boolean flag values, one for each hour of the day. The
            first value in the array relates to 00:00 to 01:00, the next one
            to 01:00 to 02:00 and so on, with the last array element relating to
            23:00 to 00:00. If the flag is `true` it means that the associated
            hour of the day is considered a peak time; if `false` it means that
            it is considered off-peak.
          items:
            type: boolean
          title: "Boolean[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.
        PeakTimeRanges:
          description: List of peak time ranges during the day.
          items:
            type: string
          type: array
        PoolSize:
          description: |-
            `DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.` DEPRECATED.  Use PoolSizeSchedule instead.

            A set of 24 integer values, one for each hour of the day. The first
            value in the array relates to midnight to 00:59, the next one to 1
            AM to 01:59 and so on, with the last array element relating to 11 PM
            to 11:59. The value defines the number of machines (either as an
            absolute number or a percentage of the machines in the delivery
            group, depending on the value of )
            that are to be maintained in a running state, whether they are in
            use or not. A value of -1 has special meaning: pool size management
            does not apply during such hours.
          items:
            format: int32
            type: integer
          title: "Int32[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.
        PoolSizeSchedule:
          description: |-
            List of pool size schedules during the day.  Each is specified as a
            time range and an indicator of the number of machines that should be
            powered on during that time range.
          items:
            $ref: '#/components/schemas/PoolSizeScheduleResponseModel'
          title: "PoolSizeScheduleResponseModel[]"
          type: array
        PoolUsingPercentage:
          description: |-
            Indicates whether the integer values in the pool size array are to be
            treated as absolute values (if this value is `false`) or as
            percentages of the number of machines in the delivery group (if this value
            is `true`).
          type: boolean
        Id:
          description: Id of the power time scheme.
          minLength: 1
          type: string
      required:
      - DaysOfWeek
      - DisplayName
      - Id
      - Name
      title: PowerTimeSchemeResponseModel
      type: object
    PowerTimeSchemeResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPowerTimeSchemeResponseModel'
      - description: Reboot schedule response model collection.
        type: object
      title: PowerTimeSchemeResponseModelCollection
    PredefinedPermissionGroupResponseModel:
      description: Model for permission group.
      properties:
        Id:
          description: Id of the permission group.
          minLength: 1
          type: string
        Name:
          description: Friendly name of the permission group.
          minLength: 1
          type: string
      required:
      - Id
      - Name
      title: PredefinedPermissionGroupResponseModel
      type: object
    PredefinedPermissionGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPredefinedPermissionGroupResponseModel'
      - description: Model for permission group.
        type: object
      title: PredefinedPermissionGroupResponseModelCollection
    PredefinedPermissionResponseModel:
      description: Response object for a predefined permission
      properties:
        Description:
          description: The description of the permission. It is usually missed (null
            or empty).
          type: string
        GroupId:
          description: The group id of the permission.
          minLength: 1
          type: string
        GroupName:
          description: The group name of the permission.
          minLength: 1
          type: string
        Id:
          description: The Id of the permission. It is globally unique.
          minLength: 1
          type: string
        Name:
          description: The name of the permission. It is a friendly name of permission.
          minLength: 1
          type: string
        Operations:
          description: The list of operations of the permission.
          items:
            type: string
          type: array
        IsReadOnly:
          description: Whether any of the operations of the permission may change
            object status.
          type: boolean
      required:
      - GroupId
      - GroupName
      - Id
      - IsReadOnly
      - Name
      - Operations
      title: PredefinedPermissionResponseModel
      type: object
    PredefinedPermissionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPredefinedPermissionResponseModel'
      - description: "Response object for collections of PredefinedPermissionResponseModel.\n\
          \            "
        type: object
      title: PredefinedPermissionResponseModelCollection
    PrintDuplexSetting:
      description: Duplex setting.
      enum:
      - Simplex
      - Vertical
      - Horizontal
      title: PrintDuplexSetting
      type: string
      x-enumNames:
      - Simplex
      - Vertical
      - Horizontal
    PrinterAssignmentContract:
      description: |-
        External representation of printer assignment data. This makes it easier for end users to read/write printer assignments.
        This class must have identical members as the AssignmentData class in GpfxSettings.dll. The member names must be the same.
      properties:
        DefaultPrinterOption:
          allOf:
          - $ref: '#/components/schemas/DefaultPrinterOption'
          description: The default printer option.
          type: object
        SpecificDefaultPrinter:
          description: "The custom printer. If specified, the default printer is not\
            \ used."
          type: string
        SessionPrinters:
          description: Session printers.
          items:
            $ref: '#/components/schemas/PrinterPropertiesContract'
          title: "PrinterPropertiesContract[]"
          type: array
        Filters:
          description: Client names or IPs.
          items:
            type: string
          type: array
      title: PrinterAssignmentContract
      type: object
    PrinterColorSetting:
      description: Print color.
      enum:
      - Monochrome
      - Color
      title: PrinterColorSetting
      type: string
      x-enumNames:
      - Monochrome
      - Color
    PrinterPaperSize:
      description: Printer paper sizes. This is identical to the PaperSize enum defined
        in GpfxSettings.dll.
      enum:
      - Letter
      - LetterSmall
      - Tabloid
      - Ledger
      - Legal
      - Statement
      - Executive
      - A3
      - A4
      - A4Small
      - A5
      - B4
      - B5
      - Folio
      - Quarto
      - In10X14
      - In11X17
      - Note
      - Envelope9
      - Envelope10
      - Envelope11
      - Envelope12
      - Envelope14
      - CSheet
      - DSheet
      - ESheet
      - EnvelopeDl
      - EnvelopeC5
      - EnvelopeC3
      - EnvelopeC4
      - EnvelopeC6
      - EnvelopeC65
      - EnvelopeB4
      - EnvelopeB5
      - EnvelopeB6
      - EnvelopeItaly
      - EnvelopeMonarch
      - EnvelopePersonal
      - FanfoldUnitedStates
      - FanfoldStandardGerman
      - FanfoldLegalGerman
      - IsoB4
      - JapanesePostcard
      - In9X11
      - In10X11
      - In15X11
      - EnvelopeInvite
      - LetterExtra
      - LegalExtra
      - TabloidExtra
      - A4Extra
      - LetterTransverse
      - A4Transverse
      - LetterExtraTransverse
      - APlus
      - BPlus
      - LetterPlus
      - A4Plus
      - A5Transverse
      - B5Transverse
      - A3Extra
      - A5Extra
      - B5Extra
      - A2
      - A3Transverse
      - A3ExtraTransverse
      - DoubleJapanesePostcard
      - A6
      - JapaneseEnvelopeKaku2
      - JapaneseEnvelopeKaku3
      - JapaneseEnvelopeChou3
      - JapaneseEnvelopeChou4
      - LetterRotated
      - A3Rotated
      - A4Rotated
      - A5Rotated
      - B4JisRotated
      - B5JisRotated
      - JapanesePostcardRotated
      - DoubleJapanesePostcardRotated
      - A6Rotated
      - JapaneseEnvelopeKaku2Rotated
      - JapaneseEnvelopeKaku3Rotated
      - JapaneseEnvelopeChou3Rotated
      - JapaneseEnvelopeChou4Rotated
      - B6Jis
      - B6JisRotated
      - In12X11
      - JapaneseEnvelopeYou4
      - JapaneseEnvelopeYou4Rotated
      - Prc16K
      - Prc32K
      - Prc32KBig
      - PrcEnvelope1
      - PrcEnvelope2
      - PrcEnvelope3
      - PrcEnvelope4
      - PrcEnvelope5
      - PrcEnvelope6
      - PrcEnvelope7
      - PrcEnvelope8
      - PrcEnvelope9
      - PrcEnvelope10
      - Prc16KRotated
      - Prc32KRotated
      - Prc32KBigRotated
      - PrcEnvelope1Rotated
      - PrcEnvelope2Rotated
      - PrcEnvelope3Rotated
      - PrcEnvelope4Rotated
      - PrcEnvelope5Rotated
      - PrcEnvelope6Rotated
      - PrcEnvelope7Rotated
      - PrcEnvelope8Rotated
      - PrcEnvelope9Rotated
      - PrcEnvelope10Rotated
      title: PrinterPaperSize
      type: string
      x-enumNames:
      - Letter
      - LetterSmall
      - Tabloid
      - Ledger
      - Legal
      - Statement
      - Executive
      - A3
      - A4
      - A4Small
      - A5
      - B4
      - B5
      - Folio
      - Quarto
      - In10X14
      - In11X17
      - Note
      - Envelope9
      - Envelope10
      - Envelope11
      - Envelope12
      - Envelope14
      - CSheet
      - DSheet
      - ESheet
      - EnvelopeDl
      - EnvelopeC5
      - EnvelopeC3
      - EnvelopeC4
      - EnvelopeC6
      - EnvelopeC65
      - EnvelopeB4
      - EnvelopeB5
      - EnvelopeB6
      - EnvelopeItaly
      - EnvelopeMonarch
      - EnvelopePersonal
      - FanfoldUnitedStates
      - FanfoldStandardGerman
      - FanfoldLegalGerman
      - IsoB4
      - JapanesePostcard
      - In9X11
      - In10X11
      - In15X11
      - EnvelopeInvite
      - LetterExtra
      - LegalExtra
      - TabloidExtra
      - A4Extra
      - LetterTransverse
      - A4Transverse
      - LetterExtraTransverse
      - APlus
      - BPlus
      - LetterPlus
      - A4Plus
      - A5Transverse
      - B5Transverse
      - A3Extra
      - A5Extra
      - B5Extra
      - A2
      - A3Transverse
      - A3ExtraTransverse
      - DoubleJapanesePostcard
      - A6
      - JapaneseEnvelopeKaku2
      - JapaneseEnvelopeKaku3
      - JapaneseEnvelopeChou3
      - JapaneseEnvelopeChou4
      - LetterRotated
      - A3Rotated
      - A4Rotated
      - A5Rotated
      - B4JisRotated
      - B5JisRotated
      - JapanesePostcardRotated
      - DoubleJapanesePostcardRotated
      - A6Rotated
      - JapaneseEnvelopeKaku2Rotated
      - JapaneseEnvelopeKaku3Rotated
      - JapaneseEnvelopeChou3Rotated
      - JapaneseEnvelopeChou4Rotated
      - B6Jis
      - B6JisRotated
      - In12X11
      - JapaneseEnvelopeYou4
      - JapaneseEnvelopeYou4Rotated
      - Prc16K
      - Prc32K
      - Prc32KBig
      - PrcEnvelope1
      - PrcEnvelope2
      - PrcEnvelope3
      - PrcEnvelope4
      - PrcEnvelope5
      - PrcEnvelope6
      - PrcEnvelope7
      - PrcEnvelope8
      - PrcEnvelope9
      - PrcEnvelope10
      - Prc16KRotated
      - Prc32KRotated
      - Prc32KBigRotated
      - PrcEnvelope1Rotated
      - PrcEnvelope2Rotated
      - PrcEnvelope3Rotated
      - PrcEnvelope4Rotated
      - PrcEnvelope5Rotated
      - PrcEnvelope6Rotated
      - PrcEnvelope7Rotated
      - PrcEnvelope8Rotated
      - PrcEnvelope9Rotated
      - PrcEnvelope10Rotated
    PrinterPropertiesContract:
      description: |-
        Printer properties. This class must have identical members as the PrinterInfo class in GpfxSettings.dll. The member names must
        be the same although the class name can be different.
      properties:
        Path:
          description: The FQDN of the printer name.
          type: string
        Model:
          description: Printer model name.
          type: string
        Location:
          description: The location.
          type: string
        Settings:
          $ref: '#/components/schemas/PrinterPropertiesContract_Settings'
        Serialized:
          description: The serialized data. This is here so that JSON serialization
            can work. This should not be used.
          type: string
      title: PrinterPropertiesContract
      type: object
    PrinterSettingsContract:
      description: This class must have the identical members as the PrinterSetting
        class in GpfxSettings.dll. The member names must be the same.
      properties:
        OverridePaperSize:
          type: boolean
        PaperSize:
          $ref: '#/components/schemas/PrinterPaperSize'
        Width:
          format: int32
          type: integer
        Height:
          format: int32
          type: integer
        OverrideCopyCount:
          type: boolean
        Collated:
          type: boolean
        CopyCount:
          format: int32
          type: integer
        OverrideScale:
          type: boolean
        Scale:
          title: Int16
          type: integer
        OverrideColor:
          type: boolean
        Color:
          $ref: '#/components/schemas/PrinterColorSetting'
        OverridePrintQuality:
          type: boolean
        PrintQuality:
          $ref: '#/components/schemas/PrintQualitySetting'
        XResolution:
          title: Int16
          type: integer
        YResolution:
          title: Int16
          type: integer
        OverrideOrientation:
          type: boolean
        Orientation:
          $ref: '#/components/schemas/PrintOrientationSetting'
        OverrideDuplex:
          type: boolean
        Duplex:
          $ref: '#/components/schemas/PrintDuplexSetting'
        OverrideFormName:
          type: boolean
        FormName:
          type: string
        OverrideTrueTypeOption:
          type: boolean
        TrueTypeOption:
          $ref: '#/components/schemas/PrintTrueTypeOption'
      title: PrinterSettingsContract
      type: object
    PrintOrientationSetting:
      description: Orientation.
      enum:
      - Portrait
      - Landscape
      title: PrintOrientationSetting
      type: string
      x-enumNames:
      - Portrait
      - Landscape
    PrintQualitySetting:
      description: Print quality.
      enum:
      - Custom
      - High
      - Medium
      - Low
      - Draft
      title: PrintQualitySetting
      type: string
      x-enumNames:
      - Custom
      - High
      - Medium
      - Low
      - Draft
    PrintTrueTypeOption:
      description: True type option.
      enum:
      - Bitmap
      - Download
      - Substitute
      - Outline
      title: PrintTrueTypeOption
      type: string
      x-enumNames:
      - Bitmap
      - Download
      - Substitute
      - Outline
    PriorityRefRequestModel:
      description: A reference to an object with an associated priority.
      example:
        Item: Item
        Priority: 0
      properties:
        Item:
          description: Reference to the item.
          type: string
        Priority:
          default: 0
          description: |-
            Priority.  See the containing object context for
            details about how the Priority affects the object
            relationship.
          format: int32
          type: integer
      title: PriorityRefRequestModel
      type: object
    ProductEdition:
      description: Type of product
      enum:
      - Unknown
      - Platinum
      - Enterprise
      - Apps
      - Vdi
      - Advanced
      - PRE
      title: ProductEdition
      type: string
      x-enumNames:
      - Unknown
      - Platinum
      - Enterprise
      - Apps
      - Vdi
      - Advanced
      - PRE
    ProductType:
      description: Windows product type enumeration.
      enum:
      - Workstation
      - DomainController
      - Server
      title: ProductType
      type: string
      x-enumNames:
      - Workstation
      - DomainController
      - Server
    ProjectedAutoscaleMachinesResponseModel:
      description: Projected number of machines that Autoscale will keep powered on
        over the specified period
      example:
        DesktopGroupId: DesktopGroupId
        TimeZone: TimeZone
        ProjectedAutoscaleMachines: null
        ManagedMachineCount: 0
      properties:
        DesktopGroupId:
          description: The Id of the desired desktop group.
          format: guid
          minLength: 1
          type: string
        ManagedMachineCount:
          description: |-
            The number of machines in the desktop group that would be managed by Autoscale.
            This number shall include all the power managed machines in the desktop group, except for machines in maintenance mode or,
            not tagged for Autoscale if tag restriction is being used.
          format: int32
          type: integer
        ProjectedAutoscaleMachines:
          $ref: '#/components/schemas/ProjectedAutoscaleMachinesResponseModel_ProjectedAutoscaleMachines'
        TimeZone:
          description: The time zone in which this delivery group's machines reside.
          minLength: 1
          type: string
      required:
      - DesktopGroupId
      - ManagedMachineCount
      - ProjectedAutoscaleMachines
      - TimeZone
      title: ProjectedAutoscaleMachinesResponseModel
      type: object
    ProjectedMachineResponseModel:
      description: Projected Autoscale Machine data.
      properties:
        ProjectedMachinesForDay:
          description: ProjectedMachinesForDay
          items:
            $ref: '#/components/schemas/ProjectedMachinesPerDayResponseModel'
          title: "ProjectedMachinesPerDayResponseModel[]"
          type: array
      required:
      - ProjectedMachinesForDay
      title: ProjectedMachineResponseModel
      type: object
    ProjectedMachinesPerDayResponseModel:
      description: ProjectedMachinesPerDayResponseModel
      properties:
        Day:
          description: Day
          minLength: 1
          type: string
        TimeSlots:
          description: TimeSlots
          items:
            $ref: '#/components/schemas/ProjectedMachinesTimeSlotResponseModel'
          title: "ProjectedMachinesTimeSlotResponseModel[]"
          type: array
      required:
      - Day
      - TimeSlots
      title: ProjectedMachinesPerDayResponseModel
      type: object
    ProjectedMachinesTimeSlotResponseModel:
      description: ProjectedMachinesTimeSlotResponseModel
      properties:
        Time:
          description: The start time (in 24-hour clock) for the 30-minute period
            represented that is based on the time zone of the delivery group.
          minLength: 1
          type: string
        PoolSizeCount:
          description: The projected machines as per the pool size configured for
            the current 30 minute period.
          format: int32
          type: integer
        BufferSizeCount:
          description: The projected machines as per the buffer percentage configured
            for the current 30 minute period.
          format: int32
          type: integer
      required:
      - BufferSizeCount
      - PoolSizeCount
      - Time
      title: ProjectedMachinesTimeSlotResponseModel
      type: object
    ProtocolType:
      description: Protocol types.
      enum:
      - Unknown
      - Hdx
      - Rdp
      - Console
      title: ProtocolType
      type: string
      x-enumNames:
      - Unknown
      - Hdx
      - Rdp
      - Console
    ProvisioningProgressResponseModel:
      description: Progress of machine catalog provisioning.
      properties:
        IsRunning:
          description: Indicates whether the provisioning task is running.
          type: boolean
        Progress:
          description: Specifies the current progress of the provisioning task.
          format: int32
          type: integer
        ProgressMessage:
          description: Specifies the message of current provisioning task.
          type: string
        ProgressMessageList:
          items:
            items:
              type: string
            type: array
          title: List`1
          type: array
      required:
      - IsRunning
      - Progress
      title: ProvisioningProgressResponseModel
      type: object
    ProvisioningSchemeMachineAccountResponseModel:
      allOf:
      - $ref: '#/components/schemas/IdentityMachineResponseModel'
      - $ref: '#/components/schemas/ProvisioningSchemeMachineAccountResponseModel_allOf'
      title: ProvisioningSchemeMachineAccountResponseModel
    ProvisioningSchemeMachineAccountResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfProvisioningSchemeMachineAccountResponseModel'
      - description: Collection of ProvisioningSchemeMachineAccountResponseModel
        type: object
      title: ProvisioningSchemeMachineAccountResponseModelCollection
    ProvisioningSchemeMachineAccountState:
      description: State of a machine identity in regards to a provisioning scheme
        which it is associated with.
      enum:
      - Unknown
      - Available
      - InUse
      - Error
      - Tainted
      - Locked
      title: ProvisioningSchemeMachineAccountState
      type: string
      x-enumNames:
      - Unknown
      - Available
      - InUse
      - Error
      - Tainted
      - Locked
    ProvisioningSchemeResponseModel:
      description: Details about how machines in a catalog are provisioned.
      properties:
        Id:
          description: Id of the provisioning scheme.
          format: guid
          minLength: 1
          type: string
        Name:
          description: Name of the provisioning scheme.
          minLength: 1
          type: string
        CleanOnBoot:
          description: Indicates whether the VMs that are created will be reset to
            a clean state on each boot.
          type: boolean
        ControllerAddresses:
          description: The DNS names of the controllers associated with this provisioning
            scheme for Quick Deploy purposes.
          items:
            type: string
          type: array
        CpuCount:
          description: The number of processors that VMs will be created with when
            using this scheme.
          format: int32
          type: integer
        CoresPerCpuCount:
          description: |-
            The number of cores per processor that VMs will be created with when using this scheme.
            This property only applies when hypervisor connection is Nutanix.
          format: int32
          type: integer
        CurrentDiskImage:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_CurrentDiskImage'
        HistoricalDiskImages:
          description: |-
            The historical disk images including current image used to provision new machines
            in the machine catalog.
          items:
            $ref: '#/components/schemas/VMImageResponseModel'
          title: "VMImageResponseModel[]"
          type: array
        CustomProperties:
          description: The properties of the provisioning scheme that are specific
            to the target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ImageRuntimeInfo:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_ImageRuntimeInfo'
        Warning:
          description: The warning message if parsing CustomProperties with error.
          type: string
        Warnings:
          description: The warning.
          items:
            $ref: '#/components/schemas/ProvisioningSchemeWarningReponseModel'
          title: "ProvisioningSchemeWarningReponseModel[]"
          type: array
        CustomPropertiesInString:
          description: The properties of the provisioning scheme that are specific
            to the target hosting infrastructure in string format.
          type: string
        DedicatedTenancy:
          description: Whether to use dedicated tenancy when creating machines in
            Cloud Hypervisors.
          type: boolean
        TenancyType:
          description: "Indicates whether to use tenancy type Shared, Instance or\
            \ Host when creating machines in Cloud Hypervisors."
          type: string
        AzureAdJoinType:
          description: Indicates whether to use azure AD join type.
          type: string
        AzureADTenantId:
          description: AzureAD Tenant Id associates with this catalog
          format: guid
          type: string
        AzureAdSecurityGroupName:
          description: AzureAd dynamic security group associates with this catalog
          type: string
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: Indicates whether to use identity type.
          type: object
        DeviceManagementType:
          allOf:
          - $ref: '#/components/schemas/DeviceManagementType'
          description: Indicates whether to use device management type.
          type: object
        IdentityContent:
          description: The identity content of identity pool.
          type: string
        DiskSizeGB:
          description: "Size of the VM's OS disk, in GB."
          format: int32
          type: integer
        GpuTypeId:
          description: "Type of GPU used for VMs, if any."
          type: string
        ResourcePool:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_ResourcePool'
        IdentityPool:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_IdentityPool'
        MachineCount:
          description: Number of machines provisioned from this provisioning scheme.
          format: int32
          type: integer
        MasterImage:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_MasterImage'
        MachineProfile:
          $ref: '#/components/schemas/ImageSchemeResponseModel_MachineProfile'
        MemoryMB:
          description: The maximum amount of memory that VMs will be created with
            when using this scheme.
          format: int32
          type: integer
        NetworkMaps:
          description: Networks used by provisioned VMs.
          items:
            $ref: '#/components/schemas/NetworkMapResponseModel'
          title: "NetworkMapResponseModel[]"
          type: array
        NutanixContainer:
          description: Nutanix container that the scheme uses.
          type: string
        ResetAdministratorPasswords:
          description: |-
            Indicates whether administrator passwords are reset automatically to a
            random password each time machines are provisioned.
          type: boolean
        SecurityGroups:
          description: Network security groups used by Cloud provisioned VMs.
          items:
            type: string
          type: array
        ServiceOffering:
          description: Service offering used by Cloud provisioned VMs.
          type: string
        UseFullDiskCloneProvisioning:
          description: Indicates whether the machines are provisioned using the dedicated
            full disk clone feature.
          type: boolean
        UseWriteBackCache:
          description: True if the scheme will use the write back cache feature.
          type: boolean
        VMMetadata:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_VMMetadata'
        WorkgroupMachines:
          description: True if the provisioned machines are non-domain joined
          type: boolean
        WriteBackCacheDiskIndex:
          description: |-
            The disk on which to place the write back cache.  `0`
            indicates the OS disk.
          format: int32
          type: integer
        WriteBackCacheDiskSizeGB:
          description: The size of the write back cache disk if specified in GB.
          format: int32
          type: integer
        WriteBackCacheMemorySizeMB:
          description: The size of the in-memory write back cache if specified in
            MB.
          format: int32
          type: integer
        IsPreviousImageLegacyVda:
          description: True if the previous image is installed with a legacy VDA.
          type: boolean
        MachineAccountCreationRules:
          $ref: '#/components/schemas/ProvisioningSchemeResponseModel_MachineAccountCreationRules'
        NumAvailableMachineAccounts:
          description: |-
            Number of machine accounts available to be used by machines that will
            be provisioned in the machine catalog.  This will be the identities
            associated with the machine catalog where
            State is
            Available.
          format: int32
          type: integer
        PVSSite:
          description: PVS Site.
          type: string
        PVSVDisk:
          description: PVS vDisk.
          type: string
        ProvisioningSchemeType:
          description: Provisioning scheme type.
          type: string
      required:
      - CleanOnBoot
      - ControllerAddresses
      - CpuCount
      - DedicatedTenancy
      - DiskSizeGB
      - Id
      - IdentityPool
      - IsPreviousImageLegacyVda
      - MachineCount
      - MasterImage
      - MemoryMB
      - Name
      - NetworkMaps
      - NumAvailableMachineAccounts
      - ResetAdministratorPasswords
      - ResourcePool
      - UseFullDiskCloneProvisioning
      - UseWriteBackCache
      title: ProvisioningSchemeResponseModel
      type: object
    ProvisioningSchemeResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfProvisioningSchemeResponseModel'
      - description: Response object for collections of items.
        type: object
      title: ProvisioningSchemeResponseModelCollection
    ProvisioningSchemeVmMetadataResponseModel:
      description: Provisioning Scheme VMMetadata response model
      properties:
        MachineSize:
          description: VmMetadata machine size
          type: string
        OsDiskCaching:
          description: VmMetadata OS disk cache
          type: string
        Tags:
          description: VmMetadata tags
          type: string
        BootDiagnostics:
          description: VmMetadata boot diagnostics configuration
          type: boolean
        AcceleratedNetwork:
          description: VmMetadata accelerated network configuration
          type: boolean
        SupportsHibernation:
          description: VmMetadata hibernation configuration.
          type: boolean
      title: ProvisioningSchemeVmMetadataResponseModel
      type: object
    ProvisioningSchemeWarningReponseModel:
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ProvSchemeWarningType'
          description: Type of warning.
          type: object
        Message:
          description: Message associated with warning
          type: string
      title: ProvisioningSchemeWarningReponseModel
      type: object
    ProvisioningType:
      description: Types of machine provisioning.
      enum:
      - Unknown
      - Manual
      - MCS
      - MCSImport
      - PVS
      - PVSStreaming
      title: ProvisioningType
      type: string
      x-enumNames:
      - Unknown
      - Manual
      - MCS
      - MCSImport
      - PVS
      - PVSStreaming
    ProvSchemeWarningType:
      description: ""
      enum:
      - Unknown
      - GetCustomPropertiesFailed
      - GetVMMetadataFailed
      title: ProvSchemeWarningType
      type: string
      x-enumNames:
      - Unknown
      - GetCustomPropertiesFailed
      - GetVMMetadataFailed
    PvsCollectionResponseModel:
      description: PVS collection object.
      properties:
        Id:
          description: Id of the PVS collection.
          minLength: 1
          type: string
        Name:
          description: Name of the PVS collection.
          minLength: 1
          type: string
        Domain:
          description: |-
            Active directory domain of machines in the collection.
            internally: when querying a collection, get a single device from the
            collection and get its AD domain.
          type: string
        PvsSite:
          $ref: '#/components/schemas/PvsCollectionResponseModel_PvsSite'
      required:
      - Id
      - Name
      - PvsSite
      title: PvsCollectionResponseModel
      type: object
    PvsCollectionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsCollectionResponseModel'
      - description: Response object for collections of PvsCollectionResponseModel.
        type: object
      title: PvsCollectionResponseModelCollection
    PvsDeviceResponseModel:
      description: PVS device (machine) object.
      properties:
        Name:
          description: Machine name.
          minLength: 1
          type: string
        Sid:
          description: Machine's Active Directory SID.
          minLength: 1
          type: string
        PvsSite:
          $ref: '#/components/schemas/PvsDeviceResponseModel_PvsSite'
        PvsCollection:
          $ref: '#/components/schemas/PvsDeviceResponseModel_PvsCollection'
        HypervisorConnection:
          description: |-
            Hypervisor connection associated with the machine.  Will be set if the caller
            requested `resolveHypervisor=true` and the machine is located on one of the
            hypervisors connected to the site.
          type: string
        HostedMachineId:
          description: |-
            The unique ID by which the hypervisor recognizes the machine.  Will be set if the caller
            requested `resolveHypervisor=true` and the machine is located on one of the
            hypervisors connected to the site.
          type: string
      required:
      - Name
      - PvsCollection
      - PvsSite
      - Sid
      title: PvsDeviceResponseModel
      type: object
    PvsDeviceResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsDeviceResponseModel'
      - description: Response object for collections of PvsDeviceResponseModel.
        type: object
      title: PvsDeviceResponseModelCollection
    PvsSiteResponseModel:
      description: PVS site object.
      properties:
        Id:
          description: Id of the PVS site.
          minLength: 1
          type: string
        Name:
          description: Name of the PVS site.
          minLength: 1
          type: string
      required:
      - Id
      - Name
      title: PvsSiteResponseModel
      type: object
    PvsSiteResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsSiteResponseModel'
      - description: Response object for collections of PvsSiteResponseModel.
        type: object
      title: PvsSiteResponseModelCollection
    PvsStreamingSiteResponseModel:
      description: PVS site object.
      properties:
        FarmId:
          description: Id of the PVS farm.
          type: string
        FarmName:
          description: Name of the PVS farm.
          type: string
        ResourceLocation:
          description: Id of the resource location that PVS registered.
          type: string
        SiteId:
          description: Id of the PVS site.
          type: string
        SiteName:
          description: Name of the PVS site.
          type: string
      title: PvsStreamingSiteResponseModel
      type: object
    PvsStreamingSiteResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsStreamingSiteResponseModel'
      - description: Response object for collections of PvsStreamingVDiskResponseModel.
        type: object
      title: PvsStreamingSiteResponseModelCollection
    PvsStreamingStoreResponseModel:
      description: PVS store object.
      properties:
        StoreId:
          description: Id of the PVS store.
          type: string
        StoreName:
          description: Name of the PVS store.
          minLength: 1
          type: string
        SiteId:
          description: Id of the PVS site.
          type: string
      required:
      - StoreName
      title: PvsStreamingStoreResponseModel
      type: object
    PvsStreamingStoreResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsStreamingStoreResponseModel'
      - description: Response object for collections of PvsStreamingStoreResponseModel.
        type: object
      title: PvsStreamingStoreResponseModelCollection
    PvsStreamingVDiskResponseModel:
      description: PVS vDisk object.
      properties:
        DiskLocatorId:
          description: Id of the PVS vDisk.
          type: string
        DiskLocatorName:
          description: Name of the PVS vDisk.
          minLength: 1
          type: string
        SiteId:
          description: Id of the PVS site.
          type: string
        SiteName:
          description: Name of the PVS site.
          type: string
        StoreId:
          description: Id of the PVS store.
          type: string
        StoreName:
          description: Name of the PVS store.
          type: string
      required:
      - DiskLocatorName
      title: PvsStreamingVDiskResponseModel
      type: object
    PvsStreamingVDiskResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfPvsStreamingVDiskResponseModel'
      - description: Response object for collections of PvsStreamingVDiskResponseModel.
        type: object
      title: PvsStreamingVDiskResponseModelCollection
    RebootCycleRequestModel:
      description: Request object for specifying reboot cycle properties.
      example:
        IgnoreMaintenanceMode: true
        WarningDurationMinutes: 1294386358
        WarningMessage: WarningMessage
        RestrictToTag: RestrictToTag
        WarningRepeatIntervalMinutes: 314780940
        RebootDurationMinutes: 171976544
        WarningTitle: WarningTitle
      properties:
        RebootDurationMinutes:
          description: Approximate maximum number of minutes over which the reboot
            cycle runs.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        IgnoreMaintenanceMode:
          description: Indicates whether the reboot cycle is active for maintained
            machines.
          type: boolean
        RestrictToTag:
          description: "If set, the reboot cycle only applies to machines in the delivery\
            \ group with the specified tag."
          type: string
        WarningTitle:
          description: The window title used when showing the warning message in user
            sessions on a machine to reboot.
          type: string
        WarningMessage:
          description: Warning message displayed in user sessions on a machine to
            reboot.
          type: string
        WarningDurationMinutes:
          description: Time prior to the start of a machine reboot at which a warning
            message is displayed to all the users on the machine.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        WarningRepeatIntervalMinutes:
          description: Time to wait after the previous reboot warning before displaying
            the warning message in all user sessions on that machine again.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      title: RebootCycleRequestModel
      type: object
    RebootMachinesRequestModel:
      description: Options for triggering a reboot of all machines in a machine catalog.
      example:
        WarningRepeatInterval: 1
        WarningMessage: WarningMessage
        RebootDuration: 0
        WarningDuration: 6
        WarningTitle: WarningTitle
      properties:
        RebootDuration:
          default: -1
          description: "Approximate maximum duration over which the reboot cycle runs,\
            \ in minutes."
          format: int32
          type: integer
        WarningDuration:
          default: 0
          description: |-
            Time in minutes prior to a machine reboot at which a warning message is
            displayed in all user sessions on that machine.
          format: int32
          type: integer
        WarningTitle:
          description: |-
            The window title used when showing the warning message in user sessions
            on a machine scheduled for reboot.
          type: string
        WarningMessage:
          description: |-
            Warning message displayed in user sessions on a machine scheduled for a
            reboot.  The optional pattern '%m%' is replaced by the number of minutes
            until the reboot.
          type: string
        WarningRepeatInterval:
          default: 0
          description: Number of minutes to wait before showing the reboot warning
            message again.
          format: int32
          type: integer
      title: RebootMachinesRequestModel
      type: object
    RebootScheduleDays:
      description: Days to use for a reboot schedule.
      enum:
      - Unknown
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
      title: RebootScheduleDays
      type: string
      x-enumNames:
      - Unknown
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Sunday
    RebootScheduleFrequency:
      description: Reboot schedule frequency
      enum:
      - Unknown
      - Daily
      - Weekly
      - Monthly
      - Once
      title: RebootScheduleFrequency
      type: string
      x-enumNames:
      - Unknown
      - Daily
      - Weekly
      - Monthly
      - Once
    RebootScheduleRequestModel:
      description: Request object for specifying reboot schedule properties.
      example:
        IgnoreMaintenanceMode: true
        WarningMessage: WarningMessage
        DaysInWeek:
        - null
        - null
        Description: Description
        UseNaturalReboot: true
        StartTime: StartTime
        Enabled: true
        Name: Name
        FrequencyFactor: 6
        StartDate: StartDate
        WarningDurationMinutes: 763901857
        DayInMonth: "{}"
        RestrictToTag: RestrictToTag
        WarningRepeatIntervalMinutes: 1495747635
        RebootDurationMinutes: 9
        Frequency: "{}"
        WeekInMonth: "{}"
        Id: Id
        WarningTitle: WarningTitle
        Day: "{}"
      properties:
        Id:
          description: |-
            Id of the reboot schedule.
            needs to be globally unique
          type: string
        Name:
          description: A friendly name for the reboot schedule.
          type: string
        RebootDurationMinutes:
          description: Approximate maximum number of minutes over which the scheduled
            reboot cycle runs.
          format: int32
          type: integer
        Day:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleDays'
          description: '`DEPRECATED` DEPRECATED. Use DaysInWeek.'
          type: object
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED
        DaysInWeek:
          description: "For weekly cycles, days of the week on which the scheduled\
            \ reboot cycle starts."
          items:
            $ref: '#/components/schemas/RebootScheduleDays'
          title: "RebootScheduleDays[]"
          type: array
        WeekInMonth:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleWeeks'
          description: "For monthly cycles, the week of the month on which the scheduled\
            \ reboot cycle starts."
          type: object
        DayInMonth:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleDays'
          description: "For monthly cycles, the day of the week on which the scheduled\
            \ reboot cycle starts."
          type: object
        Description:
          description: An optional description for the reboot schedule.
          type: string
        Enabled:
          description: Indicates whether the reboot schedule is enabled.
          type: boolean
        IgnoreMaintenanceMode:
          description: Indicates whether the reboot schedule is active for maintained
            machines.
          type: boolean
        UseNaturalReboot:
          description: |-
            Indicates whether the reboot will be a natural reboot, where the machines
            will be rebooted when they have no sessions.
            Once UseNaturalReboot is set to true, RebootDurationMinutes won't have any effect.
          type: boolean
        Frequency:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleFrequency'
          description: Frequency with which this schedule runs.
          type: object
        FrequencyFactor:
          description: The frequency factor for the schedule.
          format: int32
          type: integer
        RestrictToTag:
          description: |-
            If set, the reboot schedule only applies to machines in the delivery
            group with the specified tag.
          type: string
        StartDate:
          description: |-
            The date on which the schedule is expected to firstly run.
            RFC 3339 compatible format.
          type: string
        StartTime:
          description: |-
            Time of day at which the scheduled reboot cycle starts.
            RFC 3339 compatible format.
          type: string
        WarningDurationMinutes:
          description: |-
            Time prior to the start of a machine reboot at which a warning message
            is displayed to all the users on the machine.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        WarningMessage:
          description: Warning message displayed in user sessions on a machine scheduled
            for reboot.
          type: string
        WarningRepeatIntervalMinutes:
          description: |-
            Time to wait after the previous reboot warning before displaying the warning
            message in all user sessions on that machine again.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        WarningTitle:
          description: |-
            The window title used when showing the warning message in user sessions on a
            machine scheduled for reboot.
          type: string
      title: RebootScheduleRequestModel
      type: object
    RebootScheduleResponseModel:
      description: Response object for reboot schedule properties.
      example:
        IgnoreMaintenanceMode: true
        WarningMessage: WarningMessage
        DaysInWeek:
        - null
        - null
        Description: Description
        UseNaturalReboot: true
        StartTime: StartTime
        Enabled: true
        Name: Name
        FrequencyFactor: 6
        StartDate: StartDate
        WarningDurationMinutes: 1
        DeliveryGroup: null
        DayInMonth: "{}"
        RestrictToTag: null
        WarningRepeatIntervalMinutes: 5
        RebootDurationMinutes: 0
        Frequency: "{}"
        WeekInMonth: "{}"
        Id: Id
        WarningTitle: WarningTitle
        Day: "{}"
      properties:
        Id:
          description: |-
            Id of the reboot schedule.
            needs to be globally unique
          minLength: 1
          type: string
        Name:
          description: A friendly name for the reboot schedule.
          minLength: 1
          type: string
        DeliveryGroup:
          $ref: '#/components/schemas/RebootScheduleResponseModel_DeliveryGroup'
        RebootDurationMinutes:
          description: Approximate maximum number of minutes over which the scheduled
            reboot cycle runs.
          format: int32
          type: integer
        Day:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleDays'
          description: '`DEPRECATED` DEPRECATED. Use DaysInWeek.'
          type: object
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED
        DaysInWeek:
          description: "For weekly cycles, days of the week on which the scheduled\
            \ reboot cycle starts."
          items:
            $ref: '#/components/schemas/RebootScheduleDays'
          title: "RebootScheduleDays[]"
          type: array
        WeekInMonth:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleWeeks'
          description: "For monthly cycles, the week of the month on which the scheduled\
            \ reboot cycle starts."
          type: object
        DayInMonth:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleDays'
          description: "For monthly cycles, the day of the week on which the scheduled\
            \ reboot cycle starts."
          type: object
        Description:
          description: An optional description for the reboot schedule.
          type: string
        Enabled:
          description: Indicates whether the reboot schedule is enabled.
          type: boolean
        IgnoreMaintenanceMode:
          description: Indicates whether the reboot schedule is active for maintained
            machines.
          type: boolean
        UseNaturalReboot:
          description: |-
            Indicates whether the reboot will be a natural reboot, where the machines
            will be rebooted when they have no sessions.
          type: boolean
        Frequency:
          allOf:
          - $ref: '#/components/schemas/RebootScheduleFrequency'
          description: Frequency with which this schedule runs.
          type: object
        FrequencyFactor:
          description: The frequency factor for the schedule.
          format: int32
          type: integer
        RestrictToTag:
          $ref: '#/components/schemas/RebootScheduleResponseModel_RestrictToTag'
        StartDate:
          description: |-
            The date on which the schedule is expected to firstly run.
            RFC 3339 compatible format.
          type: string
        StartTime:
          description: |-
            Time of day at which the scheduled reboot cycle starts.
            RFC 3339 compatible format.
          minLength: 1
          type: string
        WarningDurationMinutes:
          description: |-
            Time prior to the start of a machine reboot at which a warning message
            is displayed to all the users on the machine.
          format: int32
          type: integer
        WarningMessage:
          description: Warning message displayed in user sessions on a machine scheduled
            for reboot.
          type: string
        WarningRepeatIntervalMinutes:
          description: |-
            Time to wait after the previous reboot warning before displaying the warning
            message in all user sessions on that machine again.
          format: int32
          type: integer
        WarningTitle:
          description: |-
            The window title used when showing the warning message in user sessions on a
            machine scheduled for reboot.
          type: string
      required:
      - DeliveryGroup
      - Enabled
      - Frequency
      - Id
      - IgnoreMaintenanceMode
      - Name
      - RebootDurationMinutes
      - StartTime
      - WarningDurationMinutes
      - WarningRepeatIntervalMinutes
      title: RebootScheduleResponseModel
      type: object
    RebootScheduleResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfRebootScheduleResponseModel'
      - description: Reboot schedule response model collection.
        type: object
      title: RebootScheduleResponseModelCollection
    RebootScheduleWeeks:
      description: Weeks to use for a reboot schedule.
      enum:
      - Unknown
      - First
      - Second
      - Third
      - Fourth
      - Last
      title: RebootScheduleWeeks
      type: string
      x-enumNames:
      - Unknown
      - First
      - Second
      - Third
      - Fourth
      - Last
    RefResponseModel:
      description: Response object for an object reference.
      example:
        Uid: 6
        Id: Id
        Name: Name
      properties:
        Id:
          description: |-
            Id of the object.
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          type: string
        Uid:
          description: DEPRECATED. Use Id.
          format: int32
          type: integer
        Name:
          description: Name of the object.
          type: string
      title: RefResponseModel
      type: object
    RefSafetyRulesAttribute:
      allOf:
      - $ref: '#/components/schemas/Attribute'
      - $ref: '#/components/schemas/RefSafetyRulesAttribute_allOf'
      title: RefSafetyRulesAttribute
    RefsRequestModel:
      description: |-
        Request object allowing caller to specify a list of
        object references, referenced by ID and/or Name.
      example:
        Items:
        - Items
        - Items
      properties:
        Items:
          description: List of item references.
          items:
            type: string
          type: array
      required:
      - Items
      title: RefsRequestModel
      type: object
    RegistrationState:
      description: Machine registration states.
      enum:
      - Unknown
      - Unregistered
      - Initializing
      - Registered
      - AgentError
      title: RegistrationState
      type: string
      x-enumNames:
      - Unknown
      - Unregistered
      - Initializing
      - Registered
      - AgentError
    RemotePCEnrollmentScopeCheckModel:
      description: Enrollment scope for remote PCs.
      example:
        Name: Name
      properties:
        Name:
          description: Distinguished name of an OU containing machines allowed to
            enroll as remote PCs.
          minLength: 1
          type: string
      required:
      - Name
      title: RemotePCEnrollmentScopeCheckModel
      type: object
    RemotePCEnrollmentScopeRequestModel:
      description: Enrollment scope for remote PCs.
      example:
        IncludeSubfolders: false
        OU: OU
        MachinesExcluded:
        - MachinesExcluded
        - MachinesExcluded
        IsOrganizationalUnit: false
        MachinesIncluded:
        - MachinesIncluded
        - MachinesIncluded
        AssignedUsers:
        - AssignedUsers
        - AssignedUsers
      properties:
        OU:
          description: Specifies the DN of an AD container containing machines allowed
            to enroll as remote PCs.
          maxLength: 64
          minLength: 1
          pattern: .*|any
          type: string
        IncludeSubfolders:
          default: false
          description: |-
            Indicates whether machines in subfolders of OU are allowed to enroll
            as remote PCs.
          type: boolean
        IsOrganizationalUnit:
          default: false
          description: Indicates whether this objet is for a OU or for a machine
          type: boolean
        MachinesExcluded:
          description: Machines which are explicitly excluded from matching the enrollment
            scope.
          items:
            type: string
          type: array
        MachinesIncluded:
          description: Machines which are included in the enrollment scope.
          items:
            type: string
          type: array
        AssignedUsers:
          description: |-
            The user(s) to whom this machine will be assigned. Machines can be assigned
            to multiple users, a single client IP address, or a single client name, but only to
            one of these categories at a time.
          items:
            type: string
          type: array
      required:
      - OU
      title: RemotePCEnrollmentScopeRequestModel
      type: object
    RemotePCEnrollmentScopeResponseModel:
      description: Enrollment scope for remote PCs.
      properties:
        OU:
          description: Specifies the DN of an AD container containing machines allowed
            to enroll as remote PCs.
          maxLength: 64
          minLength: 1
          pattern: .*|any
          type: string
        IncludeSubfolders:
          default: false
          description: |-
            Indicates whether machines in subfolders of OU are allowed to enroll
            as remote PCs.
          type: boolean
        IsOrganizationalUnit:
          default: false
          description: Indicates whether this objet is for a OU or for a machine
          type: boolean
        MachinesExcluded:
          description: Machines which are explicitly excluded from matching the enrollment
            scope.
          items:
            type: string
          type: array
        MachinesIncluded:
          description: Machines which are included in the enrollment scope.
          items:
            type: string
          type: array
      required:
      - OU
      title: RemotePCEnrollmentScopeResponseModel
      type: object
    ResourceValidationCategory:
      description: The resource validation category.
      enum:
      - MachineProfile
      - HibernationSupport
      title: ResourceValidationCategory
      type: string
      x-enumNames:
      - MachineProfile
      - HibernationSupport
    ResourceValidationReportModel:
      description: The validation report.
      example:
        Category: "{}"
        Violations:
        - RelativePath: RelativePath
          Message: Message
          Level: "{}"
          Detail: Detail
        - RelativePath: RelativePath
          Message: Message
          Level: "{}"
          Detail: Detail
        Result: "{}"
      properties:
        Category:
          allOf:
          - $ref: '#/components/schemas/ResourceValidationCategory'
          description: The validation category.
          type: object
        Result:
          allOf:
          - $ref: '#/components/schemas/ResourceValidationResult'
          description: The validation result.
          type: object
        Violations:
          description: A list of violations.
          items:
            $ref: '#/components/schemas/ResourceValidationViolationModel'
          title: "ResourceValidationViolationModel[]"
          type: array
      title: ResourceValidationReportModel
      type: object
    ResourceValidationResult:
      description: The resource validation result.
      enum:
      - Passed
      - PassedWithWarning
      - Failed
      title: ResourceValidationResult
      type: string
      x-enumNames:
      - Passed
      - PassedWithWarning
      - Failed
    ResourceValidationViolationModel:
      description: A resource validation violation entry.
      example:
        RelativePath: RelativePath
        Message: Message
        Level: "{}"
        Detail: Detail
      properties:
        Level:
          allOf:
          - $ref: '#/components/schemas/ResourceViolationLevel'
          description: Severe Level of the violation.
          type: object
        Message:
          description: A violation message.
          minLength: 1
          type: string
        Detail:
          description: "The attached detail, could be null."
          type: string
        RelativePath:
          description: "The relative path of the resource which owns this violation,\
            \ could be null."
          type: string
      required:
      - Level
      - Message
      title: ResourceValidationViolationModel
      type: object
    ResourceViolationLevel:
      description: Resource Validation Level.
      enum:
      - Error
      - Warn
      title: ResourceViolationLevel
      type: string
      x-enumNames:
      - Error
      - Warn
    RestApiStatus:
      description: Orchestration RESTFul API status.
      enum:
      - Unknown
      - Starting
      - Started
      - Stopping
      - Stopped
      title: RestApiStatus
      type: string
      x-enumNames:
      - Unknown
      - Starting
      - Started
      - Stopping
      - Stopped
    RoleResponseModel:
      description: Response object for a delegated admin role.
      example:
        Description: Description
        CanLaunchManage: true
        CanLaunchMonitor: true
        Permissions:
        - Description: Description
          Id: Id
          IsReadOnly: true
          Operations:
          - Operations
          - Operations
          Name: Name
        - Description: Description
          Id: Id
          IsReadOnly: true
          Operations:
          - Operations
          - Operations
          Name: Name
        Id: Id
        IsBuiltIn: true
        Name: Name
      properties:
        Id:
          description: |-
            Id of role.
            Needs to be made globally unique (perhaps add site id)
          minLength: 1
          type: string
        Name:
          description: Name of role.
          minLength: 1
          type: string
        Description:
          description: Description of role.
          type: string
        IsBuiltIn:
          description: Indicates whether the role is built-in.
          type: boolean
        CanLaunchManage:
          description: Indicate that if the mangement page could be launch on xdconsole
          type: boolean
        CanLaunchMonitor:
          description: Indicate that if the monitor page could be launch on xdconsole
          type: boolean
        Permissions:
          description: List of permissions granted by the role.
          items:
            $ref: '#/components/schemas/DelegatedAdminPermissionResponseModel'
          title: "DelegatedAdminPermissionResponseModel[]"
          type: array
      required:
      - Id
      - IsBuiltIn
      - Name
      title: RoleResponseModel
      type: object
    RoleResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfRoleResponseModel'
      - description: Response object for collections of items.
        type: object
      title: RoleResponseModelCollection
    ScheduledReboot:
      description: Scheduled reboot states.
      enum:
      - Unknown
      - None
      - Pending
      - Draining
      - InProgress
      - Natural
      title: ScheduledReboot
      type: string
      x-enumNames:
      - Unknown
      - None
      - Pending
      - Draining
      - InProgress
      - Natural
    ScopedObjectRequestModel:
      description: |-
        A scoped object; that is, a reference to an object of a different type
        which is contained within a delegated admin scope.
      example:
        ObjectType: "{}"
        Object: Object
      properties:
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ScopedObjectType'
          description: Type of the scoped object.
          type: object
        Object:
          description: Name or Id of the scoped object.
          minLength: 1
          type: string
      required:
      - Object
      - ObjectType
      title: ScopedObjectRequestModel
      type: object
    ScopedObjectResponseModel:
      description: |-
        A scoped object; that is, a reference to an object of a different type which is contained within a delegated
        admin scope.
      properties:
        Object:
          $ref: '#/components/schemas/ScopedObjectResponseModel_Object'
        ObjectDescription:
          description: "Description of the scoped object, if it has one."
          type: string
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ScopedObjectType'
          description: Type of the scoped object.
          type: object
      required:
      - Object
      - ObjectType
      title: ScopedObjectResponseModel
      type: object
    ScopedObjectResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfScopedObjectResponseModel'
      - description: Response object for collections of items.
        type: object
      title: ScopedObjectResponseModelCollection
    ScopedObjectType:
      description: Type of an object within a delegated admin scope.
      enum:
      - Unknown
      - HypervisorConnection
      - MachineCatalog
      - DeliveryGroup
      - ApplicationGroup
      - Tag
      - PolicySet
      title: ScopedObjectType
      type: string
      x-enumNames:
      - Unknown
      - HypervisorConnection
      - MachineCatalog
      - DeliveryGroup
      - ApplicationGroup
      - Tag
      - PolicySet
    ScopeReferenceModel:
      allOf:
      - $ref: '#/components/schemas/ModelBase'
      - $ref: '#/components/schemas/ScopeReferenceModel_allOf'
      title: ScopeReferenceModel
    ScopeResponseModel:
      description: Response object representing an administrative scope.
      example:
        Uid: 0
        TenantId: TenantId
        Description: Description
        IsAllScope: true
        TenantName: TenantName
        IsTenantScope: true
        Id: Id
        IsBuiltIn: true
        Name: Name
      properties:
        Id:
          description: |-
            Id of the administrative scope.
            Used to be: ScopeId (and it was not globally unique)
            Needs to be globally unique
            Might be constructed from site ID + internal Uid
          minLength: 1
          type: string
        Uid:
          description: '`DEPRECATED.  Use <see cref=''Id''/>.` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.  Use <see cref='Id'/>.
        Name:
          description: Name of the administrative scope.
          minLength: 1
          type: string
        Description:
          description: Description of the administrative scope.
          type: string
        IsBuiltIn:
          description: Whether the administrative scope is built-in.
          type: boolean
        IsAllScope:
          description: |-
            Indicates the built-in "All" scope.  There will be
            exactly one scope with this property set to `true`.
          type: boolean
        IsTenantScope:
          description: Whether the scope is created for CSP tenant.
          type: boolean
        TenantId:
          description: Id of the CSP tenant. Valid when IsTenantScope is true.
          type: string
        TenantName:
          description: Name of the CSP tenant. Valid when IsTenantScope is true.
          type: string
      required:
      - Id
      - IsAllScope
      - IsBuiltIn
      - IsTenantScope
      - Name
      title: ScopeResponseModel
      type: object
    ScopeResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfScopeResponseModel'
      - description: Response object for collections of items.
        type: object
      title: ScopeResponseModelCollection
    SdkGpoPolicySetType:
      description: ""
      enum:
      - SitePolicies
      - DeliveryGroupPolicies
      - SiteTemplates
      - CustomTemplates
      title: SdkGpoPolicySetType
      type: string
      x-enumNames:
      - SitePolicies
      - DeliveryGroupPolicies
      - SiteTemplates
      - CustomTemplates
    SearchDateOption:
      description: Enum options for search time filter
      enum:
      - LastMinute
      - Last5Minutes
      - Last30Minutes
      - LastHour
      - Last12Hours
      - Last24Hours
      - Today
      - Yesterday
      - LastMonth
      - LastSixMonths
      - LastThreeMonths
      - Last28Days
      - Last7Days
      type: string
      x-enumNames:
      - LastMinute
      - Last5Minutes
      - Last30Minutes
      - LastHour
      - Last12Hours
      - Last24Hours
      - Today
      - Yesterday
      - LastMonth
      - LastSixMonths
      - LastThreeMonths
      - Last28Days
      - Last7Days
    SearchOperator:
      description: Search operators.
      enum:
      - Equals
      - NotEquals
      - LessThan
      - GreaterThan
      - Like
      - NotLike
      - StartsWith
      - NotStartsWith
      - EndsWith
      - None
      - Any
      - Contains
      - ContainsLike
      - ContainsStartsWith
      - ContainsEndsWith
      - NotContains
      - In
      - NotIn
      - IsWithin
      - IsNotWithin
      - LessThanOrEquals
      - GreaterThanOrEquals
      title: SearchOperator
      type: string
      x-enumNames:
      - Equals
      - NotEquals
      - LessThan
      - GreaterThan
      - Like
      - NotLike
      - StartsWith
      - NotStartsWith
      - EndsWith
      - None
      - Any
      - Contains
      - ContainsLike
      - ContainsStartsWith
      - ContainsEndsWith
      - NotContains
      - In
      - NotIn
      - IsWithin
      - IsNotWithin
      - LessThanOrEquals
      - GreaterThanOrEquals
    SearchStartMenuApplicationsRequestModel:
      description: Search Start Menu Applications Request Model.
      example:
        ApplicationGroups:
        - ApplicationGroups
        - ApplicationGroups
        DeliveryGroups:
        - DeliveryGroups
        - DeliveryGroups
        TagRestrictions:
        - TagRestrictions
        - TagRestrictions
      properties:
        ApplicationGroups:
          description: The Application Groups which the start menu applications will
            be browsed from.
          items:
            type: string
          type: array
        DeliveryGroups:
          description: The Delivery Groups which the start menu applications will
            be browsed from
          items:
            type: string
          type: array
        TagRestrictions:
          description: "The Tag Restrictions, which means only machines with these\
            \ tags can be used to browse start menu applications."
          items:
            type: string
          type: array
      title: SearchStartMenuApplicationsRequestModel
      type: object
    SecurityKeyConfigurationRequestModel:
      description: Request object for modification of the site security key configuration.
      example:
        Key2: Key2
        Key1: Key1
        RequireKeyForXml: true
        RequireKeyForSta: true
      properties:
        Key1:
          description: The first security key.
          type: string
        Key2:
          description: The second security key.
          type: string
        RequireKeyForSta:
          description: Indicates whether to require a key to authenticate communications
            over the STA port.
          type: boolean
        RequireKeyForXml:
          description: Indicates whether to require a key to authenticate communications
            over the XML port.
          type: boolean
      title: SecurityKeyConfigurationRequestModel
      type: object
    SecurityKeyConfigurationResponseModel:
      description: Response object for the site security key configuration.
      example:
        Key2: Key2
        Key1: Key1
        RequireKeyForXml: true
        RequireKeyForSta: true
      properties:
        Key1:
          description: The first security key.
          minLength: 1
          type: string
        Key2:
          description: The second security key.
          minLength: 1
          type: string
        RequireKeyForSta:
          description: Indicates whether to require a key to authenticate communications
            over the STA port.
          type: boolean
        RequireKeyForXml:
          description: Indicates whether to require a key to authenticate communications
            over the XML port.
          type: boolean
      required:
      - Key1
      - Key2
      - RequireKeyForSta
      - RequireKeyForXml
      title: SecurityKeyConfigurationResponseModel
      type: object
    SendMessageRequestModel:
      description: Request to send a message to a session.
      example:
        Style: "{}"
        Title: Title
        Text: Text
      properties:
        Style:
          allOf:
          - $ref: '#/components/schemas/MessageStyle'
          description: The style of message box to use.
          type: object
        Title:
          description: Text to display in the message box title bar.
          type: string
        Text:
          description: The message to display.
          type: string
      title: SendMessageRequestModel
      type: object
    ServiceStatus:
      description: A status code to indicate the health of the service and database
        combined
      enum:
      - Stopped
      - DBUnConfigured
      - DBRejectedConnection
      - InvalidDBConfigured
      - DBNotFound
      - DBMissingOptionalFeature
      - DBMissingMandatoryFeature
      - DBNewerVersionThanService
      - DBOlderVersionThanService
      - DBVersionChangeInProgress
      - OK
      - PendingFailure
      - Failed
      - Unknown
      - ServiceNotInSiteDB
      - InvalidDBConnectionString
      - PendingServiceDiscovery
      - PendingServiceRegistration
      - PendingConfiguration
      title: ServiceStatus
      type: string
      x-enumNames:
      - Stopped
      - DBUnConfigured
      - DBRejectedConnection
      - InvalidDBConfigured
      - DBNotFound
      - DBMissingOptionalFeature
      - DBMissingMandatoryFeature
      - DBNewerVersionThanService
      - DBOlderVersionThanService
      - DBVersionChangeInProgress
      - OK
      - PendingFailure
      - Failed
      - Unknown
      - ServiceNotInSiteDB
      - InvalidDBConnectionString
      - PendingServiceDiscovery
      - PendingServiceRegistration
      - PendingConfiguration
    SessionBrokeringResponseModel:
      description: Response object for details about how a session was brokered.
      properties:
        AutonomouslyBrokered:
          description: |-
            Indicates whether this is an HDX session established by direct connection
            without being brokered.
          type: boolean
        DurationMilliseconds:
          description: Time taken to broker the session.
          format: int32
          type: integer
        Time:
          description: Time at which the session was brokered.
          type: string
        FormattedTime:
          description: |-
            Formatted time at which the session was brokered.
            RFC 3339 compatible format.
          type: string
        UserName:
          description: The user name of the brokering user.
          type: string
        UserSid:
          description: The SID of the brokering user.
          type: string
      required:
      - AutonomouslyBrokered
      title: SessionBrokeringResponseModel
      type: object
    SessionChangeHostingAction:
      description: |-
        Hosting actions which may be taken when a session
        change occurs on a machine.
      enum:
      - Unknown
      - Nothing
      - Suspend
      - Shutdown
      title: SessionChangeHostingAction
      type: string
      x-enumNames:
      - Unknown
      - Nothing
      - Suspend
      - Shutdown
    SessionClientResponseModel:
      description: Response object for details about the client connected to a session.
      properties:
        DeviceId:
          description: Unique identifier for the client device that has most recently
            been associated with the session.
          type: string
        HardwareId:
          description: Unique identifier for the client hardware that has been most
            recently associated with the session.
          type: string
        IPAddress:
          description: The IP address of the client connected to the session.
          type: string
        Name:
          description: The host name of the client connected to the session.
          type: string
        Platform:
          description: "The name of client platform, as indicated by client product\
            \ ID."
          type: string
        ProductId:
          description: The product ID of the client connected to the session.
          format: int32
          type: integer
        ReceiverIPAddress:
          description: |-
            The IP address of the client as supplied by Receiver (for example,
            Receiver for Web) when the session was launched, or reconnected.
          type: string
        ReceiverName:
          description: |-
            The name of the client as supplied by Receiver (for example,
            Receiver for Web) when the session was launched, or reconnected.
          type: string
        Version:
          description: The version of the Citrix Receiver running on the client connected
            to the session.
          type: string
      title: SessionClientResponseModel
      type: object
    SessionConnectionResponseModel:
      description: Response model for details about the connection from the client
        to the session.
      properties:
        ConnectedViaHostName:
          description: "The host name of the incoming connection. This is usually\
            \ a gateway, router or client."
          type: string
        ConnectedViaIP:
          description: "The IP address of the incoming connection This is usually\
            \ a gateway, router or client."
          type: string
        ConnectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          description: The way in which the most recent connection to the session
            was established.
          type: object
        LaunchedViaHostName:
          description: The host name of the StoreFront server used to launch the session.
          type: string
        LaunchedViaIP:
          description: The IP address of the StoreFront server used to launch the
            session.
          type: string
        Protocol:
          allOf:
          - $ref: '#/components/schemas/ProtocolType'
          description: The protocol that the session is using.
          type: object
        SecureIcaActive:
          description: Indicates whether SecureICA is active on the session.
          type: boolean
        SmartAccessTags:
          description: The Smart Access tags for this session.
          items:
            $ref: '#/components/schemas/SmartAccessTagResponseModel'
          title: "SmartAccessTagResponseModel[]"
          type: array
      title: SessionConnectionResponseModel
      type: object
    SessionReconnection:
      description: Session reconnection modes.
      enum:
      - Unknown
      - Always
      - DisconnectedOnly
      - SameEndpointOnly
      title: SessionReconnection
      type: string
      x-enumNames:
      - Unknown
      - Always
      - DisconnectedOnly
      - SameEndpointOnly
    SessionRecordingStatusResponseModel:
      description: "Session Recording Status model of current Orchestration instance.\n\
        \            "
      example:
        IsSessionBeingRecorded: true
      properties:
        IsSessionBeingRecorded:
          description: Indicates if current session is being recorded.
          type: boolean
      title: SessionRecordingStatusResponseModel
      type: object
    SessionResponseModel:
      description: Response object for a session.
      example:
        EstablishmentDurationMilliseconds: 6
        SessionType: "{}"
        User: null
        EstablishmentTime: EstablishmentTime
        UntrustedUserName: UntrustedUserName
        LogonInProgress: true
        Machine: null
        Brokering: null
        FormattedStartTime: FormattedStartTime
        FormattedEstablishmentTime: FormattedEstablishmentTime
        ContainerScopes:
        - ScopeType: "{}"
          Scopes:
          - Uid: 0
            TenantId: TenantId
            Description: Description
            IsAllScope: true
            TenantName: TenantName
            IsTenantScope: true
            Id: Id
            IsBuiltIn: true
            Name: Name
          - Uid: 0
            TenantId: TenantId
            Description: Description
            IsAllScope: true
            TenantName: TenantName
            IsTenantScope: true
            Id: Id
            IsBuiltIn: true
            Name: Name
        - ScopeType: "{}"
          Scopes:
          - Uid: 0
            TenantId: TenantId
            Description: Description
            IsAllScope: true
            TenantName: TenantName
            IsTenantScope: true
            Id: Id
            IsBuiltIn: true
            Name: Name
          - Uid: 0
            TenantId: TenantId
            Description: Description
            IsAllScope: true
            TenantName: TenantName
            IsTenantScope: true
            Id: Id
            IsBuiltIn: true
            Name: Name
        IsAnonymousUser: true
        AppState: "{}"
        Client: null
        IsHidden: true
        ApplicationsInUse:
        - Uid: 6
          Id: Id
          Name: Name
        - Uid: 6
          Id: Id
          Name: Name
        Connection: null
        StartTime: StartTime
        StateChangeTime: StateChangeTime
        FormattedStateChangeTime: FormattedStateChangeTime
        Uid: 0
        LogoffInProgress: true
        AppStateLastChangeTime: AppStateLastChangeTime
        State: "{}"
        Id: Id
        FormattedAppStateLastChangeTime: FormattedAppStateLastChangeTime
      properties:
        Id:
          description: Id of the session.
          minLength: 1
          type: string
        Uid:
          description: "`Deprecated, use Id.` DEPRECATED. Use Id."
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: "Deprecated, use Id."
        ApplicationsInUse:
          description: List of applications in use in the session.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        AppState:
          allOf:
          - $ref: '#/components/schemas/AppState'
          description: The app state of the session.
          type: object
        AppStateLastChangeTime:
          description: The time when the session entered the current app state.
          type: string
        FormattedAppStateLastChangeTime:
          description: |-
            The formatted time when the session entered the current app state.
            RFC 3339 compatible format.
          type: string
        Brokering:
          $ref: '#/components/schemas/SessionResponseModel_Brokering'
        Client:
          $ref: '#/components/schemas/SessionResponseModel_Client'
        Connection:
          $ref: '#/components/schemas/SessionResponseModel_Connection'
        ContainerScopes:
          description: |-
            Delegated admin scopes in which the containers of the
            session reside.
          items:
            $ref: '#/components/schemas/ContainerScopeResponseModel'
          title: "ContainerScopeResponseModel[]"
          type: array
        EstablishmentDurationMilliseconds:
          description: Duration that it took to establish the session.
          format: int32
          type: integer
        EstablishmentTime:
          description: Time at which the session was established.
          type: string
        FormattedEstablishmentTime:
          description: |-
            Formatted time at which the session was established.
            RFC 3339 compatible format.
          type: string
        IsAnonymousUser:
          description: |-
            Indicates whether the session was established anonymously
            (without user credentials), in this case a temporary local
            user account on the machine is used.
          type: boolean
        IsHidden:
          description: Flag to indicate if the session is currently hidden from the
            user and not to be reconnected to.
          type: boolean
        LogoffInProgress:
          description: Indicates whether the session is in the process of being logged
            off.
          type: boolean
        LogonInProgress:
          description: Indicates whether the session is still executing user logon
            processing or not.
          type: boolean
        Machine:
          $ref: '#/components/schemas/SessionResponseModel_Machine'
        SessionType:
          allOf:
          - $ref: '#/components/schemas/SessionType'
          description: Indicates if this is an Application or Desktop session.
          type: object
        StartTime:
          description: The time indicates when the session was started.
          type: string
        FormattedStartTime:
          description: |-
            The formatted time indicates when the session was started.
            RFC 3339 compatible format.
          type: string
        State:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          description: The state of the session.
          type: object
        StateChangeTime:
          description: The time of the most recent state change for the session.
          minLength: 1
          type: string
        FormattedStateChangeTime:
          description: |-
            The formatted time of the most recent state change for the session.
            RFC 3339 compatible format.
          minLength: 1
          type: string
        UntrustedUserName:
          description: |-
            The name of the logged-on user reported directly from the machine (in
            the form DOMAIN\user). This may be useful where the user is logged in
            to a non-domain account, however the name cannot be verified and must
            therefore be considered untrusted.
          type: string
        User:
          $ref: '#/components/schemas/SessionResponseModel_User'
      required:
      - AppState
      - Brokering
      - FormattedStateChangeTime
      - Id
      - IsAnonymousUser
      - IsHidden
      - LogoffInProgress
      - LogonInProgress
      - Machine
      - SessionType
      - State
      - StateChangeTime
      title: SessionResponseModel
      type: object
    SessionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfSessionResponseModel'
      - description: Application group response model collection
        type: object
      title: SessionResponseModelCollection
    SessionState:
      description: Session states.
      enum:
      - Unknown
      - Connected
      - Active
      - Disconnected
      title: SessionState
      type: string
      x-enumNames:
      - Unknown
      - Connected
      - Active
      - Disconnected
    SessionsTrendResponseModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfSessionTrendItem'
      - type: object
      title: SessionsTrendResponseModel
    SessionSupport:
      description: Quantity of sessions supported per-machine.
      enum:
      - Unknown
      - SingleSession
      - MultiSession
      title: SessionSupport
      type: string
      x-enumNames:
      - Unknown
      - SingleSession
      - MultiSession
    SessionTrendItem:
      properties:
        Date:
          description: The date and time for this SessionTrendItem.
          type: string
        ConcurrentSessions:
          description: ActiveSessions
          format: int32
          type: integer
        ConnectedSessions:
          description: ConnectedSessions
          format: int32
          type: integer
        DisconnectedSessions:
          description: DisconnectedSessions
          format: int32
          type: integer
      title: SessionTrendItem
      type: object
    SessionType:
      description: Types of sessions.
      enum:
      - Unknown
      - Desktop
      - Application
      title: SessionType
      type: string
      x-enumNames:
      - Unknown
      - Desktop
      - Application
    SetPreferenceModel:
      description: Set a user preference.
      example:
        Value: Value
        Name: Name
      properties:
        Name:
          description: Name.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        Value:
          description: Value.
          maxLength: 1000000
          minLength: 1
          pattern: "^[\\w\\s\\[\\]\\(\\)\\{\\}:;<>,./?\"'!@#$%^&*+=|\\\\~`]*$"
          type: string
      required:
      - Name
      - Value
      title: SetPreferenceModel
      type: object
    SettingDefinition:
      description: Setting definition contract. This class should be read-only.
      example:
        displayName: displayName
        defaultValue: defaultValue
        enumType: null
        valueUnit: valueUnit
        deniedText: deniedText
        explanation: explanation
        isEnableDisable: true
        settingName: settingName
        relatedSettings:
        - relatedSettings
        - relatedSettings
        valueMinimum: valueMinimum
        valueType: valueType
        allowedText: allowedText
        valueMaximum: valueMaximum
        initialValue: initialValue
        editorName: editorName
        disabledValue: disabledValue
        versionDetails:
        - product: product
          displayName: displayName
          edition: edition
          version: version
        - product: product
          displayName: displayName
          edition: edition
          version: version
        isUserSetting: true
        versionCode: versionCode
        validatorError: validatorError
        gpoScope: gpoScope
        productGroup: productGroup
        category: category
        valueValidator: valueValidator
        vdaVersions:
        - vdaVersions
        - vdaVersions
      properties:
        settingName:
          description: Setting name; Is globally unique
          type: string
        editorName:
          description: The setting editor name.
          type: string
        displayName:
          description: Translated setting name. Is globally unique.
          type: string
        category:
          description: "Setting category, e.g., ICA\\Printing."
          type: string
        explanation:
          description: Setting detailed description
          type: string
        isUserSetting:
          description: "true = user, false = machine"
          type: boolean
        valueType:
          description: Type of setting value
          type: string
        isEnableDisable:
          description: "Label test for a boolean setting, display enable/disable if\
            \ true, otherwise allow/prohibit"
          type: boolean
        defaultValue:
          description: Setting default value
          type: string
        disabledValue:
          description: Disabled value for toggled settings
          type: string
        initialValue:
          description: Initial value for toggled settings when value is not disabled.
          type: string
        valueMinimum:
          description: Minimal value for integer setting
          type: string
        valueMaximum:
          description: Maximal value for integer setting
          type: string
        valueValidator:
          description: An expression executed to validate the value
          type: string
        validatorError:
          description: Warning message issued when validator fails (throws exception)
          type: string
        relatedSettings:
          description: Related settings.
          items:
            type: string
          type: array
        valueUnit:
          description: Unit of value in translated text
          type: string
        allowedText:
          description: Custom text for the allowed explanation for some boolean settings.
          type: string
        deniedText:
          description: Custom text for the denied explanation for some boolean settings.
          type: string
        enumType:
          $ref: '#/components/schemas/SettingDefinition_enumType'
        versionDetails:
          description: VDA versions honoring this setting.
          items:
            $ref: '#/components/schemas/VersionDetail'
          title: "VersionDetail[]"
          type: array
        versionCode:
          description: "The version string in GPFX file, e.g., XD=7.8,*,B."
          type: string
        vdaVersions:
          description: "Array of VDA versions, e.g., 7.8S, 7.8M. This is much lighter\
            \ than VersionDetails."
          items:
            type: string
          type: array
        gpoScope:
          description: "Scope, e.g. ConfigSlot"
          type: string
        productGroup:
          description: "Group, e.g., UPM."
          type: string
      required:
      - isEnableDisable
      - isUserSetting
      title: SettingDefinition
      type: object
    SettingDefinitionContract:
      description: Setting definition contract. This class should be read-only.
      example:
        ProductGroup: ProductGroup
        Category: Category
        AllowedText: AllowedText
        ValueType: ValueType
        ValueValidator: ValueValidator
        SettingName: SettingName
        Explanation: Explanation
        ValueMinimum: ValueMinimum
        SettingType: SettingType
        IsUserSetting: true
        ValueMaximum: ValueMaximum
        DefaultValue: DefaultValue
        EditorName: EditorName
        IsEnableDisable: true
        VdaVersions:
        - Version: Version
          DisplayName: DisplayName
          Product: Product
          Edition: Edition
        - Version: Version
          DisplayName: DisplayName
          Product: Product
          Edition: Edition
        InitialValue: InitialValue
        EnumType: null
        DisplayName: DisplayName
        GpoScope: GpoScope
        DisabledValue: DisabledValue
        ValueUnit: ValueUnit
        DeniedText: DeniedText
        ValidatorError: ValidatorError
        RelatedSettings:
          key: RelatedSettings
      properties:
        EditorName:
          description: The setting editor name.
          type: string
        SettingName:
          description: Setting name; Is globally unique
          type: string
        SettingType:
          description: The setting type as defined by its value.
          type: string
        DisplayName:
          description: Translated setting name. Is globally unique.
          type: string
        Category:
          description: "Setting category, e.g., ICA\\Printing."
          type: string
        Explanation:
          description: Setting detailed description
          type: string
        IsUserSetting:
          description: "true = user, false = machine"
          type: boolean
        ValueType:
          description: Type of setting value
          type: string
        IsEnableDisable:
          description: "Label test for a boolean setting, display enable/disable if\
            \ true, otherwise allow/prohibit"
          type: boolean
        DefaultValue:
          description: Setting default value
          type: string
        DisabledValue:
          description: Disabled value for toggled settings
          type: string
        InitialValue:
          description: Initial value for taggled settings when value is not disabled.
          type: string
        ValueMinimum:
          description: Minimal value for integer setting
          type: string
        ValueMaximum:
          description: Maximal value for integer settin
          type: string
        ValueValidator:
          description: An expression executed to validate the value
          type: string
        ValidatorError:
          description: Warning message issued when validator fails (throws exception)
          type: string
        RelatedSettings:
          additionalProperties:
            type: string
          description: Related settings.
          title: Dictionary`2
          type: object
        ValueUnit:
          description: Unit of value in translated text
          type: string
        AllowedText:
          description: Custom text for the allowed explanation for some boolean settings.
          type: string
        DeniedText:
          description: Custom text for the denied explaination for some boolean settings.
          type: string
        EnumType:
          $ref: '#/components/schemas/SettingDefinitionContract_EnumType'
        VdaVersions:
          description: VDA versions honoring this setting.
          items:
            $ref: '#/components/schemas/VdaVersionContract'
          title: "VdaVersionContract[]"
          type: array
        GpoScope:
          description: "Scope, e.g. ConfigSlot"
          type: string
        ProductGroup:
          description: "Group, e.g., UPM."
          type: string
      title: SettingDefinitionContract
      type: object
    SettingDefinitionEnvelope:
      description: Top level object for setting definitions. Should support paging.
        Should support HATEOAS links.
      example:
        items:
        - displayName: displayName
          defaultValue: defaultValue
          enumType: null
          valueUnit: valueUnit
          deniedText: deniedText
          explanation: explanation
          isEnableDisable: true
          settingName: settingName
          relatedSettings:
          - relatedSettings
          - relatedSettings
          valueMinimum: valueMinimum
          valueType: valueType
          allowedText: allowedText
          valueMaximum: valueMaximum
          initialValue: initialValue
          editorName: editorName
          disabledValue: disabledValue
          versionDetails:
          - product: product
            displayName: displayName
            edition: edition
            version: version
          - product: product
            displayName: displayName
            edition: edition
            version: version
          isUserSetting: true
          versionCode: versionCode
          validatorError: validatorError
          gpoScope: gpoScope
          productGroup: productGroup
          category: category
          valueValidator: valueValidator
          vdaVersions:
          - vdaVersions
          - vdaVersions
        - displayName: displayName
          defaultValue: defaultValue
          enumType: null
          valueUnit: valueUnit
          deniedText: deniedText
          explanation: explanation
          isEnableDisable: true
          settingName: settingName
          relatedSettings:
          - relatedSettings
          - relatedSettings
          valueMinimum: valueMinimum
          valueType: valueType
          allowedText: allowedText
          valueMaximum: valueMaximum
          initialValue: initialValue
          editorName: editorName
          disabledValue: disabledValue
          versionDetails:
          - product: product
            displayName: displayName
            edition: edition
            version: version
          - product: product
            displayName: displayName
            edition: edition
            version: version
          isUserSetting: true
          versionCode: versionCode
          validatorError: validatorError
          gpoScope: gpoScope
          productGroup: productGroup
          category: category
          valueValidator: valueValidator
          vdaVersions:
          - vdaVersions
          - vdaVersions
        continuationToken: continuationToken
      properties:
        items:
          description: Items of collection.
          items:
            $ref: '#/components/schemas/SettingDefinition'
          title: "SettingDefinition[]"
          type: array
        continuationToken:
          description: |-
            Continuation token if paging is requested. This is a compressed JSON string of the SettingSearchFilters
            object.
          type: string
      title: SettingDefinitionEnvelope
      type: object
    SettingRequest:
      description: Setting instance contract
      example:
        settingValue: settingValue
        useDefault: true
        settingName: settingName
      properties:
        settingName:
          description: Setting type. Is globally unique.
          type: string
        useDefault:
          description: |-
            Indicate if the default setting value is used. If the setting data type is bool, this is ignored. For all
            other settings, if this value is true, the setting value is ignored and if this value is false, the setting
            value is used.
          type: boolean
        settingValue:
          description: The setting value.
          type: string
      required:
      - useDefault
      title: SettingRequest
      type: object
    SettingRequestContract:
      description: Setting instance contract
      example:
        SettingValue: SettingValue
        SettingType: SettingType
        TypedValue: "{}"
      properties:
        SettingType:
          description: Setting type. Is globally unique.
          type: string
        SettingValue:
          description: |-
            The setting value.
            * For all setting types, excluding booleans, if null, use the default value.
            * For all setting types, including booleans, otherwise, use the specified value.
            * For boolean types, the value can be "true"/"false", "1"/"0", null will be accepted as using default value.
          type: string
        TypedValue:
          description: "The value in native C# type. If this value is null, use SettingValue,\
            \ otherwise use this value."
          properties: {}
          title: Object
          type: object
      title: SettingRequestContract
      type: object
    SettingResponse:
      description: Setting instance contract
      example:
        settingValue: settingValue
        settingGuid: settingGuid
        useDefault: true
        policyGuid: policyGuid
        settingName: settingName
      properties:
        policyGuid:
          description: The policy GUID.
          format: guid
          type: string
        settingGuid:
          description: The setting GUID.
          format: guid
          type: string
        settingName:
          description: Setting name. Is globally unique.
          type: string
        useDefault:
          description: |-
            Indicate if the default setting value is used. If the setting data type is bool, this is ignored. For all
            other settings, if this value is true, the setting value is ignored and if this value is false, the
            setting value is used.
          type: boolean
        settingValue:
          description: |-
            The current setting value. For boolean types, the returned value is "True"/"False". The caller should
            assume the value is case-insensitive.
          type: string
      required:
      - policyGuid
      - settingGuid
      - useDefault
      title: SettingResponse
      type: object
    SettingResponseContract:
      description: Setting instance contract
      example:
        SettingName: SettingName
        CurrentValue: CurrentValue
      properties:
        SettingName:
          description: Setting name. Is globally unique.
          type: string
        CurrentValue:
          description: |-
            The current setting value.
            * For boolean types, the returned value is "True"/"False". The caller should assume the value is
              case-insensitive.
            * For all other types, if the value is null, use default value, otherwise use the specified value.
          type: string
      title: SettingResponseContract
      type: object
    SharingKind:
      description: How machines are shared.
      enum:
      - Unknown
      - Private
      - Shared
      title: SharingKind
      type: string
      x-enumNames:
      - Unknown
      - Private
      - Shared
    SimplifiedAccessPolicyRequestModel:
      description: Request object for a simplified access policy for delivery groups.
      properties:
        AllowAnonymous:
          description: Whether to allow anonymous connections to the delivery group.
          type: boolean
        AllowHdxAccess:
          default: true
          description: |-
            Whether to allow connections using HDX.
            Was: AllowsHdxAccess
          type: boolean
        AllowMachineRestart:
          default: true
          description: Whether to allow users to self-service restart machines.
          type: boolean
        AllowRdpAccess:
          default: true
          description: |-
            Whether to allow connections using RDP.
            Was: AllowsRdpAccess
          type: boolean
        ConnectNotViaNetScalerGatewayAllowed:
          default: true
          description: |-
            Whether to allow connections that do not come through
            NetScaler Gateway.
          type: boolean
        ConnectViaNetScalerGatewayAllowed:
          default: true
          description: |-
            Whether to allow connections that come through
            NetScaler Gateway.
          type: boolean
        IncludedSmartAccessFilterEnabled:
          default: true
          description: |-
            Specifies whether the IncludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
          type: boolean
        IncludedSmartAccessTags:
          description: |-
            Specifies the SmartAccess tags which grant access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagRequestModel'
          title: "SmartAccessTagRequestModel[]"
          type: array
        IncludedUserFilterEnabled:
          default: false
          description: |-
            Specifies whether the IncludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        IncludedUsers:
          description: |-
            Specifies the users and groups who are granted access to
            the delivery group.
          items:
            type: string
          type: array
        ExcludedUserFilterEnabled:
          default: false
          description: |-
            Specifies whether the ExcludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        ExcludedUsers:
          description: |-
            Specifies the users and groups who are denied access to
            the delivery group.
          items:
            type: string
          type: array
      title: SimplifiedAccessPolicyRequestModel
      type: object
    SimplifiedAccessPolicyResponseModel:
      description: |-
        The response object indicating the simplified access model for a
        delivery group.
        The following two properties used to be just one confusing enum that doesn't match the UI.
        OLD -> NEW
        ==========
        AllowedUser.AnyAuthenticated -> IncludedUserFilterEnabled=false + AllowAnonymous=false
        AllowedUser.Filtered -> IncludedUserFilterEnabled=true + AllowAnonymous=false
        AllowedUser.Any -> IncludedUserFilterEnabled=false + AllowAnonymous=true
        AllowedUser.FilteredOrAnonymous -> IncludedUserFilterEnabled=true + AllowAnonymous=true
        AllowedUser.AnonymousOnly -> NOT SUPPORTED by SimplifiedAccessPolicy
      properties:
        AllowAnonymous:
          description: Whether anonymous connections are allowed to the delivery group.
          type: boolean
        AllowHdxAccess:
          description: |-
            Whether HDX connections are allowed to the delivery group.
            CHANGE: was:
            public bool AllowsHdxAccess { get; set; }
          type: boolean
        AllowMachineRestart:
          description: Whether users are allowed to self-service restart machines.
          type: boolean
        AllowRdpAccess:
          description: |-
            Whether RDP connections are allowed to the delivery group.
            CHANGE: was:
            public bool AllowsRdpAccess { get; set; }
          type: boolean
        ConnectNotViaNetScalerGatewayAllowed:
          description: |-
            Whether connections that do not come through
            NetScaler Gateway are allowed.
            CHANGE: was:
            public bool ConnectNotViaAccessGatewayAllowed { get; set; }
          type: boolean
        ConnectViaNetScalerGatewayAllowed:
          description: |-
            Whether connections that come through
            NetScaler Gateway are allowed.
            CHANGE: was:
            public bool ConnectViaAccessGatewayAllowed { get; set; }
          type: boolean
        IncludedSmartAccessFilterEnabled:
          description: |-
            Indicates whether the IncludedSmartAccessTags
            filter is enabled.  If the filter is disabled, it is ignored
            when the access policy is evaluated.
            CHANGE: was:
            public bool AccessGatewayConnectionsUseFilters { get; set; }
          type: boolean
        IncludedSmartAccessTags:
          description: |-
            The SmartAccess tags which grant access to
            the delivery group, if any occur in those provided by
            NetScaler Gateway with the user's connection.
          items:
            $ref: '#/components/schemas/SmartAccessTagResponseModel'
          title: "SmartAccessTagResponseModel[]"
          type: array
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        IncludedUsers:
          description: |-
            The users and groups who are granted access to
            the delivery group.
            CHANGE: was:
            public ADAccount[] IncludedUsers { get; set; }
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        ExcludedUserFilterEnabled:
          description: |-
            Indicates whether the ExcludedUsers filter is enabled.
            If the filter is disabled, it is ignored when the access policy
            is evaluated.
          type: boolean
        ExcludedUsers:
          description: |-
            The users and groups who are denied access to
            the delivery group.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
      required:
      - AllowAnonymous
      - AllowHdxAccess
      - AllowRdpAccess
      - ConnectNotViaNetScalerGatewayAllowed
      - ConnectViaNetScalerGatewayAllowed
      - ExcludedUserFilterEnabled
      - IncludedSmartAccessFilterEnabled
      - IncludedUserFilterEnabled
      title: SimplifiedAccessPolicyResponseModel
      type: object
    SiteDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/SiteResponseModel'
      - $ref: '#/components/schemas/SiteDetailResponseModel_allOf'
      title: SiteDetailResponseModel
    SiteResponseModel:
      description: Site response model.
      properties:
        Id:
          description: Globally unique id of the site.
          minLength: 1
          type: string
        Name:
          description: Site name.  Not guaranteed to be unique.
          minLength: 1
          type: string
      required:
      - Id
      - Name
      title: SiteResponseModel
      type: object
    SiteResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfSiteResponseModel'
      - description: Response object for collections of SiteResponseModel.
        type: object
      title: SiteResponseModelCollection
    SiteServiceResponseModel:
      description: Service capabilities.
      properties:
        ServiceName:
          description: Name of the service.
          minLength: 1
          type: string
        ServiceType:
          description: "Type of the service, which will not be changed across languages."
          minLength: 1
          type: string
        CurrentSchemaVersion:
          description: |-
            Current schema version of the service.
            Will be `null` for XenApp & XenDesktop service.
          type: string
        DesiredSchemaVersion:
          description: |-
            Desired schema version of the service.
            Will be `null` for XenApp & XenDesktop service.
          type: string
        Capabilities:
          description: List of capabilities exposed by the service.
          items:
            type: string
          type: array
      required:
      - Capabilities
      - ServiceName
      - ServiceType
      title: SiteServiceResponseModel
      type: object
    SiteSettingsResponseModel:
      example:
        WebUiPolicySetEnabled: true
        DnsResolutionEnabled: true
        UseVerticalScalingForRdsLaunches: true
        TrustRequestsSentToTheXmlServicePortEnabled: true
      properties:
        UseVerticalScalingForRdsLaunches:
          type: boolean
        DnsResolutionEnabled:
          type: boolean
        TrustRequestsSentToTheXmlServicePortEnabled:
          type: boolean
        WebUiPolicySetEnabled:
          description: The policy set in web UI is enabled or not
          type: boolean
      title: SiteSettingsResponseModel
      type: object
    SiteState:
      description: Site state.
      enum:
      - Unknown
      - Configured
      - Unconfigured
      - UpgradeRequired
      - Error
      title: SiteState
      type: string
      x-enumNames:
      - Unknown
      - Configured
      - Unconfigured
      - UpgradeRequired
      - Error
    SiteStatusResponseModel:
      description: Site status.
      example:
        LatestControllerVersion: LatestControllerVersion
        DatabaseServersRequiringUpgrade:
        - DatabaseServersRequiringUpgrade
        - DatabaseServersRequiringUpgrade
        SiteState: "{}"
        DataStoresRequiringUpgrade:
        - DataStoresRequiringUpgrade
        - DataStoresRequiringUpgrade
        UpgradedControllers:
        - UpgradedControllers
        - UpgradedControllers
        ControllersRequiringBinaryUpgrade:
        - ControllersRequiringBinaryUpgrade
        - ControllersRequiringBinaryUpgrade
        CurrentUserCanPerformUpgrade: true
      properties:
        SiteState:
          allOf:
          - $ref: '#/components/schemas/SiteState'
          description: State of the site.
          type: object
        CurrentUserCanPerformUpgrade:
          description: If the current administrator can perform upgrade.
          type: boolean
        UpgradedControllers:
          description: "These controllers have been upgraded and will function normally\
            \ at the latest version.\n            "
          items:
            type: string
          type: array
        ControllersRequiringBinaryUpgrade:
          description: These controllers require their binaries to be upgraded to
            bring them inline with the rest of the site.
          items:
            type: string
          type: array
        LatestControllerVersion:
          description: The highest of all controller versions in the site. All controllers
            should be upgraded to this version.
          type: string
        DatabaseServersRequiringUpgrade:
          description: These database servers must be upgraded to be compatible with
            the site controllers.
          items:
            type: string
          type: array
        DataStoresRequiringUpgrade:
          description: The database versions for these data stores are older than
            what is required by the most up-to-date controllers.
          items:
            type: string
          type: array
      required:
      - SiteState
      title: SiteStatusResponseModel
      type: object
    SiteTestResponseModel:
      description: Response object for a site test result.
      example:
        Site: null
        NumWarnings: 6
        NumFailures: 1
        NumPassed: 0
      properties:
        Site:
          $ref: '#/components/schemas/SiteTestResponseModel_Site'
        NumPassed:
          description: The number of tests that passed.
          format: int32
          type: integer
        NumWarnings:
          description: The number of warnings that were found.
          format: int32
          type: integer
        NumFailures:
          description: The number of tests that failed.
          format: int32
          type: integer
      required:
      - NumFailures
      - NumPassed
      - NumWarnings
      - Site
      title: SiteTestResponseModel
      type: object
    SmartAccessTagRequestModel:
      description: Request object specifying properties of a NetScaler SmartAccess
        Tag.
      example:
        Filter: Filter
        Farm: Farm
      properties:
        Farm:
          description: SmartAccess Farm name.
          minLength: 1
          type: string
        Filter:
          description: SmartAccess filter name.
          minLength: 1
          type: string
      required:
      - Farm
      - Filter
      title: SmartAccessTagRequestModel
      type: object
    SmartAccessTagResponseModel:
      description: Response object for a NetScaler SmartAccess Tag.
      example:
        Filter: Filter
        Farm: Farm
      properties:
        Farm:
          description: SmartAccess farm name.
          minLength: 1
          type: string
        Filter:
          description: SmartAccess filter name.
          minLength: 1
          type: string
      required:
      - Farm
      - Filter
      title: SmartAccessTagResponseModel
      type: object
    StartMenuApplicationResponseModel:
      description: Response object for a start menu application.
      properties:
        CommandLineArguments:
          description: Command line arguments.
          type: string
        CommandLineExecutable:
          description: Command line executable.
          minLength: 1
          type: string
        Description:
          description: Description.
          type: string
        DisplayName:
          description: Display name.
          minLength: 1
          type: string
        ShortcutPath:
          description: Path to the shortcut within the start menu.
          minLength: 1
          type: string
        WorkingDirectory:
          description: Working directory.
          type: string
        Machine:
          $ref: '#/components/schemas/StartMenuApplicationResponseModel_Machine'
      required:
      - CommandLineExecutable
      - DisplayName
      - Machine
      - ShortcutPath
      title: StartMenuApplicationResponseModel
      type: object
    StartMenuApplicationResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfStartMenuApplicationResponseModel'
      - description: The collection of StartMenuApplicationResponseModel
        type: object
      title: StartMenuApplicationResponseModelCollection
    StatusModel:
      description: The status of the product.
      example:
        OrchRESTFulApiStatus: "{}"
        ProductInternalVersion: ProductInternalVersion
        ProductExternalVersion: ProductExternalVersion
        OrchServiceStatus: "{}"
        OrchServiceVersion: OrchServiceVersion
      properties:
        OrchServiceVersion:
          description: The Orchestration service version.
          type: string
        ProductInternalVersion:
          description: The Product internal version.
          type: string
        ProductExternalVersion:
          description: The product external version.
          type: string
        OrchServiceStatus:
          allOf:
          - $ref: '#/components/schemas/ServiceStatus'
          description: The Orchestration service status.
          type: object
        OrchRESTFulApiStatus:
          allOf:
          - $ref: '#/components/schemas/RestApiStatus'
          description: The Orchestration RESTFul Api running status.
          type: object
      title: StatusModel
      type: object
    StoreFrontDeliveryGroupResponseModel:
      properties:
        DeliveryGroupUid:
          description: Gets or sets the DeliveryGroupUid.
          format: int32
          type: integer
        DeliveryGroupName:
          description: Gets or sets the DeliveryGroupName.
          type: string
      title: StoreFrontDeliveryGroupResponseModel
      type: object
    StoreFrontDeliveryGroupResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfStoreFrontDeliveryGroupResponseModel'
      - type: object
      title: StoreFrontDeliveryGroupResponseModelCollection
    StoreFrontServerRequestModel:
      description: |-
        Request object for specifying StoreFront URLs to configure
        within Receivers when they are hosted on a VDA.
      example:
        Description: Description
        Enabled: true
        Id: Id
        Url: Url
        Name: Name
      properties:
        Id:
          description: |-
            ID of an existing StoreFront server.  If specified, this must be the
            only property specified in the request model.
          type: string
        Name:
          description: Name of the StoreFront server.
          maxLength: 64
          pattern: (.*)*
          type: string
        Description:
          description: Description of the StoreFront server.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        Url:
          description: Url of the StoreFront server.
          maxLength: 2000
          pattern: UNKNOWN
          type: string
        Enabled:
          default: true
          description: |-
            Whether the StoreFront server is enabled.  Disabled StoreFront
            servers will not have thier URLs added to hosted receiver.
          type: boolean
      title: StoreFrontServerRequestModel
      type: object
    StoreFrontServerResponseModel:
      description: |-
        Request object indicating StoreFront URLs to configure
        within Receivers when they are hosted on a VDA.
      example:
        Description: Description
        DesktopGroupRefCount: 0
        Enabled: true
        Id: Id
        Url: Url
        Name: Name
      properties:
        Id:
          description: ID of the StoreFront server.
          minLength: 1
          type: string
        Name:
          description: Name of the StoreFront server.
          minLength: 1
          type: string
        Description:
          description: Description of the StoreFront server.
          type: string
        Url:
          description: Url of the StoreFront server.
          minLength: 1
          type: string
        Enabled:
          description: |-
            Indicates whether the StoreFront server is enabled.
            Disabled StoreFront servers will not have their
            URLs added to hosted receiver.
          type: boolean
        DesktopGroupRefCount:
          description: DesktopGroupRefCount
          format: int32
          type: integer
      required:
      - Enabled
      - Id
      - Name
      - Url
      title: StoreFrontServerResponseModel
      type: object
    StoreFrontServerResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfStoreFrontServerResponseModel'
      - description: StoreFront server response model collection
        type: object
      title: StoreFrontServerResponseModelCollection
    SuiteMask:
      description: Windows product suit list.
      enum:
      - SmallBusiness
      - Enterprise
      - BackOffice
      - Terminal
      - SmallBusinessRestricted
      - EmbeddedNT
      - Datacenter
      - SingleUserTS
      - Personal
      - Blade
      - StorageServer
      - ComputeServer
      - WindowsHomeServer
      title: SuiteMask
      type: string
      x-enumFlags: true
      x-enumNames:
      - SmallBusiness
      - Enterprise
      - BackOffice
      - Terminal
      - SmallBusinessRestricted
      - EmbeddedNT
      - Datacenter
      - SingleUserTS
      - Personal
      - Blade
      - StorageServer
      - ComputeServer
      - WindowsHomeServer
    SummaryState:
      description: Overall summary state of the desktop associated with a machine.
      enum:
      - Unknown
      - "Off"
      - Unregistered
      - Available
      - Disconnected
      - InUse
      - Preparing
      title: SummaryState
      type: string
      x-enumNames:
      - Unknown
      - "Off"
      - Unregistered
      - Available
      - Disconnected
      - InUse
      - Preparing
    SupportedPowerAction:
      description: Power actions which may be supported by a machine.
      enum:
      - Unknown
      - PowerOn
      - PowerOff
      - SuspendResume
      - Restart
      - Reset
      - Shutdown
      title: SupportedPowerAction
      type: string
      x-enumNames:
      - Unknown
      - PowerOn
      - PowerOff
      - SuspendResume
      - Restart
      - Reset
      - Shutdown
    SystemManagementInfoResponseModel:
      description: System management information.
      properties:
        AzureADJoinStatus:
          $ref: '#/components/schemas/SystemManagementInfoResponseModel_AzureADJoinStatus'
        DeviceRegistrationStatus:
          $ref: '#/components/schemas/SystemManagementInfoResponseModel_DeviceRegistrationStatus'
        PagingFileSettings:
          description: System paging file settings.
          items:
            $ref: '#/components/schemas/PagingFileSettingResponseModel'
          title: "PagingFileSettingResponseModel[]"
          type: array
      title: SystemManagementInfoResponseModel
      type: object
    TagDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/TagResponseModel'
      - $ref: '#/components/schemas/TagDetailResponseModel_allOf'
      title: TagDetailResponseModel
    TagRequestModel:
      description: Request object for tags.
      example:
        Description: Description
        Uuid: Uuid
        Scopes:
        - Scopes
        - Scopes
        Name: Name
      properties:
        Name:
          description: Name of the tag.
          type: string
        Description:
          description: Description of the tag.
          type: string
        Uuid:
          description: Unique Id of the tag.
          type: string
        Scopes:
          description: Name of the Scopes.
          items:
            type: string
          type: array
      title: TagRequestModel
      type: object
    TagResponseModel:
      description: Response object for a tag.
      example:
        IsUsedByGpo: true
        NumApplications: 1
        NumAutoscale: 7
        Description: Description
        NumMachines: 6
        NumMachineCatalogs: 5
        NumDeliveryGroups: 2
        Name: Name
        NumApplicationGroups: 5
        Uid: 0
        NumUnknownObjects: 9
        ScopeReferences:
        - null
        - null
        Id: Id
      properties:
        Name:
          description: Name of the tag.
          minLength: 1
          type: string
        Id:
          description: |-
            Id of the tag.
            Used to be: Guid
            Needs to be globally unique
            This is likely to contain a guid but the property type should be string for future flexibility
          minLength: 1
          type: string
        Description:
          description: Description of the tag.
          type: string
        Uid:
          description: '`DEPRECATED` DEPRECATED.  Use Id.'
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED
        IsUsedByGpo:
          description: Used by Gpo or not.
          type: boolean
        NumMachines:
          description: "Number of machines the tag is applied to, within the context\
            \ of the query."
          format: int32
          type: integer
        NumApplications:
          description: "Number of applications the tag is applied to, within the context\
            \ of the query."
          format: int32
          type: integer
        NumApplicationGroups:
          description: "Number of application groups the tag is applied to, within\
            \ the context of the query."
          format: int32
          type: integer
        NumMachineCatalogs:
          description: "Number of machine catalogs the tag is applied to, within the\
            \ context of the query."
          format: int32
          type: integer
        NumDeliveryGroups:
          description: "Number of delivery groups the tag is applied to, within the\
            \ context of the query."
          format: int32
          type: integer
        NumAutoscale:
          description: "Number of delivery groups using this tag for Autoscale, within\
            \ the context of the query."
          format: int32
          type: integer
        NumUnknownObjects:
          description: |-
            The number of objects of all types that are tagged with this tag and that are
            *not* visible to the calling delegated administrator.
          format: int32
          type: integer
        ScopeReferences:
          description: The list of the delegated admin scopes to which the tag belongs.
          items:
            $ref: '#/components/schemas/ScopeReferenceModel'
          title: "ScopeReferenceModel[]"
          type: array
      required:
      - Id
      - Name
      - NumApplicationGroups
      - NumApplications
      - NumDeliveryGroups
      - NumMachineCatalogs
      - NumMachines
      - NumUnknownObjects
      title: TagResponseModel
      type: object
    TagResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfTagResponseModel'
      - description: Tag response collection
        type: object
      title: TagResponseModelCollection
    TagsRequestModel:
      description: |-
        Request object allowing caller to specify a list of
        tags to associate with an object.
      example:
        Items:
        - Items
        - Items
        CreateTags:
        - Description: Description
          Uuid: Uuid
          Scopes:
          - Scopes
          - Scopes
          Name: Name
        - Description: Description
          Uuid: Uuid
          Scopes:
          - Scopes
          - Scopes
          Name: Name
        DeleteTags:
        - DeleteTags
        - DeleteTags
      properties:
        Items:
          description: List of references to tags.
          items:
            type: string
          type: array
        CreateTags:
          description: List of tags to both create and associate with the object.
          items:
            $ref: '#/components/schemas/TagRequestModel'
          title: "TagRequestModel[]"
          type: array
        DeleteTags:
          description: |-
            List of tags to delete from the site.  This removes the tag not only from the referenced
            object, but from *all* objects within the site, and also deletes the tag itself.
          items:
            type: string
          type: array
      title: TagsRequestModel
      type: object
    TemplateRequestContract:
      description: Template request
      example:
        Description: Description
        TemplateName: TemplateName
        ForceWrite: true
        Settings:
        - SettingValue: SettingValue
          SettingType: SettingType
          TypedValue: "{}"
        - SettingValue: SettingValue
          SettingType: SettingType
          TypedValue: "{}"
      properties:
        TemplateName:
          description: Template name as identifier
          type: string
        Description:
          description: Template description
          type: string
        Settings:
          description: Settings
          items:
            $ref: '#/components/schemas/SettingRequestContract'
          title: IEnumerable`1
          type: array
        ForceWrite:
          description: True to force this change to the database even if changes have
            been made by another user
          type: boolean
      title: TemplateRequestContract
      type: object
    TemplateResponseContract:
      description: Template
      example:
        Description: Description
        TemplateName: TemplateName
        IsReadOnly: true
        Settings:
        - SettingName: SettingName
          CurrentValue: CurrentValue
        - SettingName: SettingName
          CurrentValue: CurrentValue
      properties:
        TemplateName:
          description: Template name as identifier
          type: string
        IsReadOnly:
          description: Is template builtin.
          type: boolean
        Description:
          description: Template description
          type: string
        Settings:
          description: Settings
          items:
            $ref: '#/components/schemas/SettingResponseContract'
          title: IEnumerable`1
          type: array
      title: TemplateResponseContract
      type: object
    TenancyType:
      description: "Indicates whether to use tenancy type Shared, Instance or Host\
        \ when creating machines in Cloud Hypervisors."
      enum:
      - Unknown
      - Shared
      - Instance
      - Host
      title: TenancyType
      type: string
      x-enumNames:
      - Unknown
      - Shared
      - Instance
      - Host
    TenantDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/TenantResponseModel'
      - description: Tenant detail object.
        type: object
      title: TenantDetailResponseModel
    TenantResponseModel:
      description: Tenant object.
      properties:
        Id:
          description: ID of the tenant.
          minLength: 1
          type: string
        Name:
          description: Name of the zone.
          minLength: 1
          type: string
      required:
      - Id
      - Name
      title: TenantResponseModel
      type: object
    TenantResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfTenantResponseModel'
      - description: Response object for collections of items.
        type: object
      title: TenantResponseModelCollection
    TestComponentResultDetailModel:
      description: Represents one piece of test result explanatory data
      example:
        Action: Action
        ServiceSource: ServiceSource
        Serverity: Serverity
        Explanation: Explanation
      properties:
        ServiceSource:
          description: |-
            The service source of any error information present in this record.
            Typically, this will be the service that ran the test.  In some cases,
            particularly where an orphaned object target was detected and the test could not
            be run at all, the service source may be the framework itself, EnvTestService.
          type: string
        Serverity:
          description: The severity of the problem.
          type: string
        Explanation:
          description: The explanation of the problem.
          type: string
        Action:
          description: The action to be take to fix this problem.
          type: string
      title: TestComponentResultDetailModel
      type: object
    TestComponentResultModel:
      description: |-
        A test component result is the result of running a test
        against a particular controller.  If a test has EnvTestScope.Site,
        the test result will have only one component.  If a test has EnvTestScope.Controller,
        the test will have as many component results as there are controllers in the site.
      example:
        ResultDetails:
        - Action: Action
          ServiceSource: ServiceSource
          Serverity: Serverity
          Explanation: Explanation
        - Action: Action
          ServiceSource: ServiceSource
          Serverity: Serverity
          Explanation: Explanation
        TestComponentStartTime: TestComponentStartTime
        FormattedTestComponentEndTime: FormattedTestComponentEndTime
        TestComponentStatus: "{}"
        TestComponentTarget: TestComponentTarget
        TestComponentEndTime: TestComponentEndTime
        FormattedTestComponentStartTime: FormattedTestComponentStartTime
      properties:
        TestComponentTarget:
          description: "Gets or sets the test component target, usually the machine\
            \ the test was run on."
          type: string
        TestComponentStartTime:
          description: |-
            Gets or sets the test component start time.
            If the test has not yet been run, this may be null.
          type: string
        FormattedTestComponentStartTime:
          description: |-
            Gets or sets the formatted test component start time.
            If the test has not yet been run, this may be null.
            RFC 3339 compatible format.
          type: string
        TestComponentEndTime:
          description: |-
            Gets or sets the test component end time.
            If the test has not yet been run, this may be null.
          type: string
        FormattedTestComponentEndTime:
          description: |-
            Gets or sets the formatted test component end time.
            If the test has not yet been run, this may be null.
            RFC 3339 compatible format.
          type: string
        TestComponentStatus:
          allOf:
          - $ref: '#/components/schemas/TestStatus'
          description: |-
            Gets or sets the test component status, representing the success or failure
            state of the test run on this machine.
          type: object
        ResultDetails:
          description: |-
            Gets or sets the result details, which is a list of
            additional information about the state
            of a machine when a test succeeds, but has warnings,
            or fails.  There may be more than one value for each severity, for example,
            multiple warnings about the state of the License server.
            The values must be localized.
          items:
            $ref: '#/components/schemas/TestComponentResultDetailModel'
          title: "TestComponentResultDetailModel[]"
          type: array
      title: TestComponentResultModel
      type: object
    TestReportResponseModel:
      description: The test report object.
      example:
        ReportTime: ReportTime
        CreatedBy: CreatedBy
        FormattedReportTime: FormattedReportTime
        TestResults:
        - TestEndTime: TestEndTime
          TestName: TestName
          TestStartTime: TestStartTime
          FormattedTestEndTime: FormattedTestEndTime
          TestDescription: TestDescription
          TestComponents:
          - ResultDetails:
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            TestComponentStartTime: TestComponentStartTime
            FormattedTestComponentEndTime: FormattedTestComponentEndTime
            TestComponentStatus: "{}"
            TestComponentTarget: TestComponentTarget
            TestComponentEndTime: TestComponentEndTime
            FormattedTestComponentStartTime: FormattedTestComponentStartTime
          - ResultDetails:
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            TestComponentStartTime: TestComponentStartTime
            FormattedTestComponentEndTime: FormattedTestComponentEndTime
            TestComponentStatus: "{}"
            TestComponentTarget: TestComponentTarget
            TestComponentEndTime: TestComponentEndTime
            FormattedTestComponentStartTime: FormattedTestComponentStartTime
          TestComponentStatus: TestComponentStatus
          TestScope: "{}"
          FormattedTestStartTime: FormattedTestStartTime
          TestServiceTarget: TestServiceTarget
        - TestEndTime: TestEndTime
          TestName: TestName
          TestStartTime: TestStartTime
          FormattedTestEndTime: FormattedTestEndTime
          TestDescription: TestDescription
          TestComponents:
          - ResultDetails:
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            TestComponentStartTime: TestComponentStartTime
            FormattedTestComponentEndTime: FormattedTestComponentEndTime
            TestComponentStatus: "{}"
            TestComponentTarget: TestComponentTarget
            TestComponentEndTime: TestComponentEndTime
            FormattedTestComponentStartTime: FormattedTestComponentStartTime
          - ResultDetails:
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            - Action: Action
              ServiceSource: ServiceSource
              Serverity: Serverity
              Explanation: Explanation
            TestComponentStartTime: TestComponentStartTime
            FormattedTestComponentEndTime: FormattedTestComponentEndTime
            TestComponentStatus: "{}"
            TestComponentTarget: TestComponentTarget
            TestComponentEndTime: TestComponentEndTime
            FormattedTestComponentStartTime: FormattedTestComponentStartTime
          TestComponentStatus: TestComponentStatus
          TestScope: "{}"
          FormattedTestStartTime: FormattedTestStartTime
          TestServiceTarget: TestServiceTarget
        TestType: "{}"
      properties:
        TestType:
          allOf:
          - $ref: '#/components/schemas/TestType'
          description: The type of test report
          type: object
        CreatedBy:
          description: The owner of the test report
          type: string
        ReportTime:
          description: The time of the test report created
          type: string
        FormattedReportTime:
          description: |-
            The formatted time of the test report created
            RFC 3339 compatible format.
          type: string
        TestResults:
          description: The test results
          items:
            $ref: '#/components/schemas/TestReportResultModel'
          title: "TestReportResultModel[]"
          type: array
      title: TestReportResponseModel
      type: object
    TestReportResultModel:
      description: |-
        The result of running a test.  The result is composed of
        a test id, scope and collection of 1 or more component results
      example:
        TestEndTime: TestEndTime
        TestName: TestName
        TestStartTime: TestStartTime
        FormattedTestEndTime: FormattedTestEndTime
        TestDescription: TestDescription
        TestComponents:
        - ResultDetails:
          - Action: Action
            ServiceSource: ServiceSource
            Serverity: Serverity
            Explanation: Explanation
          - Action: Action
            ServiceSource: ServiceSource
            Serverity: Serverity
            Explanation: Explanation
          TestComponentStartTime: TestComponentStartTime
          FormattedTestComponentEndTime: FormattedTestComponentEndTime
          TestComponentStatus: "{}"
          TestComponentTarget: TestComponentTarget
          TestComponentEndTime: TestComponentEndTime
          FormattedTestComponentStartTime: FormattedTestComponentStartTime
        - ResultDetails:
          - Action: Action
            ServiceSource: ServiceSource
            Serverity: Serverity
            Explanation: Explanation
          - Action: Action
            ServiceSource: ServiceSource
            Serverity: Serverity
            Explanation: Explanation
          TestComponentStartTime: TestComponentStartTime
          FormattedTestComponentEndTime: FormattedTestComponentEndTime
          TestComponentStatus: "{}"
          TestComponentTarget: TestComponentTarget
          TestComponentEndTime: TestComponentEndTime
          FormattedTestComponentStartTime: FormattedTestComponentStartTime
        TestComponentStatus: TestComponentStatus
        TestScope: "{}"
        FormattedTestStartTime: FormattedTestStartTime
        TestServiceTarget: TestServiceTarget
      properties:
        TestName:
          description: The localized display name of the test.
          type: string
        TestDescription:
          description: The description of the localized end user description of the
            test.
          type: string
        TestStartTime:
          description: |-
            Gets or sets the test start time.
            If the test has not yet been run, this may be null.
          type: string
        FormattedTestStartTime:
          description: |-
            Gets or sets the formatted test start time.
            If the test has not yet been run, this may be null.
            RFC 3339 compatible format.
          type: string
        TestEndTime:
          description: |-
            Gets or sets the test end time.
            If the test has not yet been run, this may be null.
          type: string
        FormattedTestEndTime:
          description: |-
            Gets or sets the formatted test end time.
            If the test has not yet been run, this may be null.
            RFC 3339 compatible format.
          type: string
        TestServiceTarget:
          description: "Gets or sets the test service target, generally the name of\
            \ the service the test is being run against."
          type: string
        TestComponentStatus:
          description: |-
            Gets or sets the overall status of this test run.  If the test
            was run against more than one controller, it is the result of
            or'ing together of the statuses of each component result.
          type: string
        TestScope:
          allOf:
          - $ref: '#/components/schemas/TestScope'
          description: "The target of a test: one controller (site wide test) or each\
            \ controller"
          type: object
        TestComponents:
          description: |-
            Gets or sets the list of component results.
            Each machine that the test is run against will be represented by
            a component result and their statuses aggregated into TestComponentStatus
          items:
            $ref: '#/components/schemas/TestComponentResultModel'
          title: "TestComponentResultModel[]"
          type: array
      title: TestReportResultModel
      type: object
    TestScope:
      description: Defines how a test must be run against a site.
      enum:
      - Site
      - Controller
      - Unknown
      title: TestScope
      type: string
      x-enumNames:
      - Site
      - Controller
      - Unknown
    TestStatus:
      description: The test status.
      enum:
      - Failed
      - Warnings
      - NotRun
      - Successful
      - Pending
      - Unknown
      title: TestStatus
      type: string
      x-enumNames:
      - Failed
      - Warnings
      - NotRun
      - Successful
      - Pending
      - Unknown
    TestType:
      description: Defines test type.
      enum:
      - Site
      - DeliveryGroup
      - MachineCatalog
      - ResourcePool
      - Hypervisor
      - Machine
      - Unknown
      title: TestType
      type: string
      x-enumNames:
      - Site
      - DeliveryGroup
      - MachineCatalog
      - ResourcePool
      - Hypervisor
      - Machine
      - Unknown
    TimeSchemeDays:
      description: Time scheme days.
      enum:
      - Unknown
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Weekdays
      - Weekend
      title: TimeSchemeDays
      type: string
      x-enumNames:
      - Unknown
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      - Weekdays
      - Weekend
    TimeZoneResponseModel:
      description: Time zone response details.
      properties:
        Name:
          description: |-
            Human-readable name of the time zone, including the UTC offset of
            the standard (non-daylight-savings) time within the time zone.  For
            example, "(UTC-10:00) Aleutian Islands".


            This is localized into the language requested by the caller.
          type: string
        FullName:
          description: |-
            Human-readable name of the time zone, including the UTC offset of
            the standard (non-daylight-savings) time within the time zone.  For
            example, "(UTC-10:00) Aleutian Islands".


            This is localized into the language requested by the caller.
          type: string
        Primary:
          description: |-
            IANA identifier of the time zone within the primary territory
            covered by the time zone.


            The  and  identifiers
            are usually, but not always, the same.  For example, the primary
            entry for "India Standard Time" is "Asia/Calcutta" while the
            canonical entry is "Asia/Kolkata".
          type: string
        Canonical:
          description: |-
            Canonical IANA identifier of the time zone.


            The  and  identifiers
            are usually, but not always, the same.  For example, the primary
            entry for "India Standard Time" is "Asia/Calcutta" while the
            canonical entry is "Asia/Kolkata".
          type: string
        WindowsId:
          description: |-
            Windows identifier of the time zone.


            Note that although this may appear to be human-readable, it is
            **NOT** localized and therefore, should not be displayed in user
            interfaces.  Instead, use  or
             properties for this purpose.
          type: string
        UtcOffsetSeconds:
          description: |-
            UTC offset of the standard (non-daylight-savings) time within the
            time zone.
          format: int32
          type: integer
        UtcOffset:
          description: |-
            String representation of UtcOffsetSeconds.  Always
            starts with `+` or `-`, followed by a two hours digits, `:`, and two
            minutes digits.  (e.g. `-05:00` / `+00:00`)
          type: string
        TzdbIds:
          description: |-
            List of IANA identifiers which can be used to represent this time
            zone.  May be non-exhaustive.
          items:
            type: string
          type: array
      title: TimeZoneResponseModel
      type: object
    TimeZoneResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfTimeZoneResponseModel'
      - description: TimeZone response collection
        type: object
      title: TimeZoneResponseModelCollection
    UpdateAdminAdministratorRequestModel:
      description: Model for editing administrator.
      example:
        Rights:
        - Role: Role
          Scope: Scope
        - Role: Role
          Scope: Scope
        Enabled: true
      properties:
        Rights:
          description: Rights associated with the administrator.
          items:
            $ref: '#/components/schemas/AdminRightRequestModel'
          title: "AdminRightRequestModel[]"
          type: array
        Enabled:
          description: |-
            Indicates whether the administrator is enabled.  Disabled
            administrators cannot administer the site unless they are a member
            of a different user group which is granted access by a different
            administrator record.
          type: boolean
      title: UpdateAdminAdministratorRequestModel
      type: object
    UpdateAppVIsolationGroupRequestModel:
      description: Request object for an App-V IsolationGroup.
      example:
        Description: Description
        IncludedAppVPackages:
        - Uid: 0
          ExplicitInclusion: true
        - Uid: 0
          ExplicitInclusion: true
        Name: Name
      properties:
        Name:
          description: Name of IsolationGroup
          type: string
        Description:
          description: Description of IsolationGroup
          type: string
        IncludedAppVPackages:
          description: Included AppV packages
          items:
            $ref: '#/components/schemas/AppVIsolationGroupPackageRequestModel'
          title: "AppVIsolationGroupPackageRequestModel[]"
          type: array
      title: UpdateAppVIsolationGroupRequestModel
      type: object
    UpdateAppVServerRequestModel:
      description: Request model to update AppV server.
      example:
        PublishingServer: PublishingServer
        ManagementServer: ManagementServer
      properties:
        ManagementServer:
          description: The url of the App-V Management server that packages will be
            discovered from.
          maxLength: 250
          type: string
        PublishingServer:
          description: The url of the App-V Publishing server that packages will be
            discovered from.
          maxLength: 250
          type: string
      title: UpdateAppVServerRequestModel
      type: object
    UpdateImageDefinitionRequestModel:
      example:
        Description: Description
        Name: Name
      properties:
        Name:
          description: The name associated with the image definition.
          maxLength: 64
          pattern: (.*)*
          type: string
        Description:
          description: The description associated with the image definition.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
      title: UpdateImageDefinitionRequestModel
      type: object
    UpdateImageVersionRequestModel:
      example:
        Description: Description
      properties:
        Description:
          description: The description associated with the image version.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
      title: UpdateImageVersionRequestModel
      type: object
    UpdateLicensingAdminRequestModel:
      description: Request object for creation of licensing admin.
      example:
        Permissions: "{}"
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/LicensingPermissionLevel'
          description: The permission of the licensing admin
          type: object
      title: UpdateLicensingAdminRequestModel
      type: object
    UpdateMachineAccountCreationRulesRequestModel:
      description: Updates to machine account creation rules.
      properties:
        NamingScheme:
          description: |-
            Defines the template name for AD accounts created in the identity pool.


            If this is not specified, it will remain unchanged.


            If the provisioning scheme is configured with a NamingScheme already,
            and this value is set to an empty string, the provisioning scheme will
            be reconfigured so that it will no longer automatically create machine
            accounts.
          maxLength: 15
          pattern: "^^$|(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'`=+;.(){}_\\\
            s]*$)(?=^[^\\.])(?=^.*[^\\d].*$).*(?<!-([tT][aA][cC])|([gG][wW])|([gG][aA][tT][eE][wW][aA][yY]))$"
          type: string
        NamingSchemeType:
          allOf:
          - $ref: '#/components/schemas/NamingSchemeType'
          description: |-
            The type of naming scheme. This defines the format of the variable part of the AD account names that will be created.


            If not specified, will not be changed.


            Cannot be specified if  is set to an empty string.


            If  was not previously set, but is being set now, then the default if not specified is .
          type: object
        OU:
          description: |-
            The OU that computer accounts will be created into.


            If not specified, will not be changed.


            Cannot be specified if  is set to an empty string.


            If  was not previously set, but is being set now, then use the default account container specified by AD.
            This is the `Computers` container for out-of-the-box installations of AD.
          maxLength: 64
          pattern: .*
          type: string
        Domain:
          description: |-
            The AD domain name for the pool. Specify this in FQDN format; for example, MyDomain.com.


            If not specified, will not be changed.


            Cannot be specified if  is set to an empty string.


            If  was not previously set, but is being set now, this property is required.
          maxLength: 255
          pattern: "^(?=^.{2,15}$)(?=^[^\\\\\\/:\\*\\?\"<>|,~!@$%^&'(){}_\\s]*$).*$"
          type: string
        NextValue:
          description: |-
            Defines the next value that will be used if creating new AD accounts.


            If not specified, will not be changed.


            Cannot be specified if  is set to an empty string.


            If  was not previously set, but is being set now, the default is a sequence of `0`s or `A`s,
            depending on the .
          maxLength: 15
          pattern: ^\w+$
          type: string
      title: UpdateMachineAccountCreationRulesRequestModel
      type: object
    UpdateMachineAccountRequestModel:
      description: Update an Active directory machine account which was externally
        created.
      example:
        ResetPassword: true
        PasswordFormat: "{}"
        Password: Password
      properties:
        ResetPassword:
          description: Indicates whether the machine account password should be reset.
          type: boolean
        Password:
          description: |-
            The current password for the machine account, in the format specified by
            PasswordFormat.
          maxLength: 20480
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: The format of the machine account password.
          type: object
      title: UpdateMachineAccountRequestModel
      type: object
    UpdateMachineCatalogProvisioningSchemeRequestModel:
      description: |-
        Request object for updating the master image used for provisioned
        machines in a machine catalog.
      example:
        MasterImageNote: MasterImageNote
        MachineProfilePath: MachineProfilePath
        StoreOldImage: true
        ServiceOfferingPath: ServiceOfferingPath
        CpuCount: 0
        MasterImagePath: MasterImagePath
        ImageVersion: null
        MemoryMB: 6
        MachineAccountCreationRules: null
        NumTotalMachines: 314780940
        AddAvailableMachineAccounts:
        - ResetPassword: true
          PasswordFormat: "{}"
          ADAccountName: ADAccountName
          Password: Password
        - ResetPassword: true
          PasswordFormat: "{}"
          ADAccountName: ADAccountName
          Password: Password
        MachineAccountDeleteOption: "{}"
        MinimumFunctionalLevel: "{}"
        RemoveAvailableMachineAccounts:
        - RemoveAvailableMachineAccounts
        - RemoveAvailableMachineAccounts
        CustomProperties:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        RebootOptions: null
      properties:
        MasterImagePath:
          description: |-
            The path in the resource pool to the virtual machine snapshot
            or VM template that will be used. This identifies the hard disk
            to be used and the default values for the memory and processors.
            This must be a path to a Snapshot or Template item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        MachineProfilePath:
          description: |-
            The path in the resource pool to the virtual machine template that will be used.
            This identifies the VM template to be used and the default values for the tags,
            virtual machine size, boot diagnostics, host cache property of OS disk,
            accelerated networking and availability zone.
            This must be a path to a Virtual machine or Template item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        StoreOldImage:
          description: Whether the old image is stored in the catalog history.
          type: boolean
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: The functional level of the VDA installed on the new image.
          type: object
        MasterImageNote:
          description: The note of the new image.
          type: string
        CpuCount:
          description: |-
            `DEPRECATED.` The number of processors that virtual machines created from the
            provisioning scheme should use.
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        MemoryMB:
          description: |-
            `DEPRECATED.` The maximum amount of memory that virtual machines created from the
            provisioning scheme should use.
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        ServiceOfferingPath:
          description: '`DEPRECATED.` The hypervisor resource path of the Cloud service
            offering to use when creating machines.'
          type: string
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        CustomProperties:
          description: |-
            `DEPRECATED.` The properties of the provisioning scheme that are specific to the
            target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        RebootOptions:
          $ref: '#/components/schemas/UpdateMachineCatalogProvisioningSchemeRequestModel_RebootOptions'
        NumTotalMachines:
          description: |-
            `DEPRECATED.` Total number of machines desired within the catalog.
            Optional; default is to leave the number of machines in the catalog unchanged.
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        MachineAccountCreationRules:
          $ref: '#/components/schemas/UpdateMachineCatalogProvisioningSchemeRequestModel_MachineAccountCreationRules'
        AddAvailableMachineAccounts:
          description: '`DEPRECATED.` List of Active Directory machine accounts to
            add to the pool of available accounts that are to be used when machines
            are provisioned.'
          items:
            $ref: '#/components/schemas/MachineAccountRequestModel'
          title: "MachineAccountRequestModel[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        RemoveAvailableMachineAccounts:
          description: '`DEPRECATED.` List of Active Directory machine accounts to
            remove from the pool of available accounts that are used when machines
            are provisioned.'
          items:
            type: string
          type: array
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        MachineAccountDeleteOption:
          allOf:
          - $ref: '#/components/schemas/MachineAccountDeleteOption'
          description: '`DEPRECATED.` Indicates how to treat machine accounts that
            are deleted from the provisioning scheme.'
          type: object
          x-deprecated: true
          x-deprecatedMessage: DEPRECATED.
        ImageVersion:
          $ref: '#/components/schemas/CreateMachineCatalogProvisioningSchemeRequestModel_ImageVersion'
      title: UpdateMachineCatalogProvisioningSchemeRequestModel
      type: object
    UpdateMachineCatalogRequestModel:
      description: Request object for updating machine catalogs.
      example:
        Description: Description
        PvsDomain: PvsDomain
        MachineProfilePath: MachineProfilePath
        Zone: Zone
        NetworkMapping:
        - DeviceNameOrId: DeviceNameOrId
          NetworkDeviceNameOrId: NetworkDeviceNameOrId
          NetworkPath: NetworkPath
        - DeviceNameOrId: DeviceNameOrId
          NetworkDeviceNameOrId: NetworkDeviceNameOrId
          NetworkPath: NetworkPath
        Metadata:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Tenants:
        - Tenants
        - Tenants
        Name: Name
        ServiceOfferingPath: ServiceOfferingPath
        HypervisorConnection: HypervisorConnection
        AdminFolder: AdminFolder
        PvsAddress: PvsAddress
        CpuCount: 0
        VdaUpgradeType: "{}"
        RemotePCEnrollmentScopes:
        - IncludeSubfolders: false
          OU: OU
          MachinesExcluded:
          - MachinesExcluded
          - MachinesExcluded
          IsOrganizationalUnit: false
          MachinesIncluded:
          - MachinesIncluded
          - MachinesIncluded
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
        - IncludeSubfolders: false
          OU: OU
          MachinesExcluded:
          - MachinesExcluded
          - MachinesExcluded
          IsOrganizationalUnit: false
          MachinesIncluded:
          - MachinesIncluded
          - MachinesIncluded
          AssignedUsers:
          - AssignedUsers
          - AssignedUsers
        Scopes:
        - Scopes
        - Scopes
        MemoryMB: 6
        AzureADSecurityGroupName: AzureADSecurityGroupName
        AzureADTenantId: AzureADTenantId
        MinimumFunctionalLevel: "{}"
        ShowRdsLicenseWarning: true
        CustomProperties:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
      properties:
        AdminFolder:
          description: |-
            The folder in which the machine catalog resides.
            If not specified, the value will not be changed.
            May be specified as either the folder
            Id or
            Path.
            If specified as a path, and the path does not exist, it will be automatically
            created.
          type: string
        Name:
          description: |-
            Name of the machine catalog.  Each machine catalog within a site must have a unique name.

            If not specified, will not be changed.
          maxLength: 64
          pattern: (.*)*
          type: string
        Description:
          description: |-
            Description of the machine catalog.

            If not specified, will not be changed.
          maxLength: 512
          pattern: "^[A-Za-z]+$"
          type: string
        HypervisorConnection:
          description: |-
            Specifies the hypervisor connection to use for power management of machines in this
            machine catalog.

            If not specified, will not be changed.
          type: string
        RemotePCEnrollmentScopes:
          description: |-
            List of one or more remote PC enrollment scopes.

            If not specified, will not be changed.
            If specified, *all* enrollment scopes must be listed.  Existing enrollment scopes that are
            not listed will be removed.


            Removing an enrollment scope will *not* remove existing remote PCs that were enrolled via
            that scope.
          items:
            $ref: '#/components/schemas/RemotePCEnrollmentScopeRequestModel'
          title: "RemotePCEnrollmentScopeRequestModel[]"
          type: array
        MinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            The minimum functional level of machines in the machine catalog.

            If not specified, will not be changed.
          type: object
        PvsAddress:
          description: |-
            IP address of the PVS server to be used.

            Can only be specified if  is
            .
            If not specified, will not be changed.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        PvsDomain:
          description: |-
            The domain of the PVS server to be used.

            Can only be specified if  is
            .
            If not specified, will not be changed.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        Scopes:
          description: |-
            Administrative scopes which the machine catalog should be a part of.

            The "All" scope, and any tenant scopes, are implicit and cannot be
            removed.  To remove from all non-implicit scopes, specify an empty
            array ([]).


            Specifying tenant scopes is equivalent to specifying the
             property and is subject to the same
            constraints.
          items:
            type: string
          type: array
        Tenants:
          description: Tenants to associate with the machine catalog.
          items:
            type: string
          type: array
        ShowRdsLicenseWarning:
          description: Indicate whether the RDS license warning should appear for
            the machine catalog.
          type: boolean
        Zone:
          description: |-
            Zone the machine catalog is associated with.

            If not specified, will not be changed.
          type: string
        CpuCount:
          description: |-
            The number of processors that virtual machines created from the
            provisioning scheme should use.
          format: int32
          type: integer
        MemoryMB:
          description: |-
            The maximum amount of memory that virtual machines created from the
            provisioning scheme should use.
          format: int32
          type: integer
        ServiceOfferingPath:
          description: The hypervisor resource path of the Cloud service offering
            to use when creating machines.
          type: string
        NetworkMapping:
          description: |-
            Specifies how the attached NICs are mapped to networks.
            If this parameter is omitted, the current NICs setting is not updated.
            If an empty array is specified, new VMs will be created with a single NIC, which
            is mapped to the default network in the hosting unit.
            If an non-empty array is supplied, the NICs setting is updated, and new machines
            will be created with the number of NICs specified in the array, with each NIC
            attached to the specified network.
          items:
            $ref: '#/components/schemas/NetworkMapRequestModel'
          title: "NetworkMapRequestModel[]"
          type: array
        VdaUpgradeType:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeType'
          description: |-
            VDA upgrade type of this machine catalog.
            If not specified, the upgrade type will not be changed.
          type: object
        MachineProfilePath:
          description: |-
            The path in the resource pool to the virtual machine template that will be used.
            This identifies the VM template to be used and the default values for the tags,
            virtual machine size, boot diagnostics, host cache property of OS disk,
            accelerated networking and availability zone.
            This must be a path to a Virtual machine or Template item in the
            resource pool to which the Machine Catalog is associated.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        CustomProperties:
          description: |-
            The properties of the provisioning scheme that are specific to the
            target hosting infrastructure.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        Metadata:
          description: |-
            The metadata of machine catalog. Set the value of the NameValueStringPairModel is null or empty will be remove this metadata.
            Not existing Name and Value NameValueStringPairModel object will be added.
            The same Name but different value object will be updated.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        AzureADSecurityGroupName:
          description: Name of Azure AD security group to be created.
          type: string
        AzureADTenantId:
          description: TenantId of Azure Directory.
          format: guid
          type: string
      title: UpdateMachineCatalogRequestModel
      type: object
    UpdateMachineConfigurationRequestModel:
      example:
        Policy: Policy
        Description: Description
        Name: Name
      properties:
        Name:
          description: |-
            New name for machine configuration.
            This may have the form "ConfigurationSlotName\MachineConfigurationName" or "MachineConfigurationName".
            If the "ConfigurationSlotName" is provided it must match the name of the configuration slot that the machine configuration is associated with.
          maxLength: 64
          type: string
        Policy:
          description: |-
            New binary array of encoded settings data.
            Policy settings data created with the SDK snap-in that matches the SettingsGroup of the configuration slot.
            Base64 encrypted.
          type: string
        Description:
          description: "New description for the machine configuration.\t"
          maxLength: 512
          type: string
      title: UpdateMachineConfigurationRequestModel
      type: object
    UpdateMachineRequestModel:
      description: Update a machine.
      example:
        HypervisorConnection: HypervisorConnection
        HostedMachineId: HostedMachineId
        PublishedName: PublishedName
        AssignedIPAddress: AssignedIPAddress
        AssignedClientName: AssignedClientName
        AssignedUsers:
        - AssignedUsers
        - AssignedUsers
        InMaintenanceMode: true
      properties:
        AssignedClientName:
          description: |-
            The client name to which this machine will be assigned.  Machines can be assigned to
            multiple users, a single client IP address, or a single client name, but only to one
            of these categories at a time.
          type: string
        AssignedIPAddress:
          description: |-
            The client IP address to which this machine will be assigned.  Machines can be assigned
            to multiple users, a single client IP address, or a single client name, but only to
            one of these categories at a time.
          type: string
        AssignedUsers:
          description: |-
            The user(s) to whom this machine will be assigned.  Machines can be assigned
            to multiple users, a single client IP address, or a single client name, but only to
            one of these categories at a time.
          items:
            type: string
          type: array
        HostedMachineId:
          description: |-
            The unique ID by which the hypervisor recognizes the machine.
            Omit this for machines that are not power-managed.
          type: string
        HypervisorConnection:
          description: Hypervisor connection to use for power management of the machine.
          type: string
        InMaintenanceMode:
          description: |-
            Specifies whether the machine is initially in maintenance mode.  A machine in maintenance mode is
            not available for new sessions, and for managed machines all automatic power management is disabled.
            If `null`, will not be changed.
          type: boolean
        PublishedName:
          description: |-
            Customized name of the machine that is displayed in StoreFront, if the machine has been published.
            It can be set only for private desktops.
            If `null`, will not be changed.
            If empty string (`""`), the machine will be unassigned from any published name.
          type: string
      title: UpdateMachineRequestModel
      type: object
    UpdateUpgradeScheduleRequestModel:
      description: |-
        Request object for updating existing VDA upgrade schedule(s) on a
        machine catalog or machine object. The upgrade schedule must be
        in UpgradeScheduled state.
      example:
        DurationInHours: 0
        StartDateTimeUtc: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDateTimeUtc:
          description: UTC time to start the Vda upgrade. Must be a future time.
          format: date-time
          title: DateTime
          type: string
        DurationInHours:
          description: Timeout duration in hours. Valid range is 1 to 24.
          format: int32
          type: integer
      required:
      - DurationInHours
      - StartDateTimeUtc
      title: UpdateUpgradeScheduleRequestModel
      type: object
    UpgradePackageVersionResponseModel:
      description: Response object for a VDA upgrade package version.
      properties:
        UpgradeType:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeType'
          description: |-
            Upgrade type for this record.
            Should be either LTSR or CR.
          type: object
        UpgradePackageVersion:
          description: Latest released package version for the upgrade type.
          minLength: 1
          type: string
      required:
      - UpgradePackageVersion
      - UpgradeType
      title: UpgradePackageVersionResponseModel
      type: object
    UpgradePackageVersionResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfUpgradePackageVersionResponseModel'
      - description: VDA upgrade package version model response collection
        type: object
      title: UpgradePackageVersionResponseModelCollection
    UserManagementModel:
      description: User management model to use for a delivery group.
      enum:
      - Unknown
      - CloudLibrary
      - Studio
      title: UserManagementModel
      type: string
      x-enumNames:
      - Unknown
      - CloudLibrary
      - Studio
    UserZonePreferenceResponseModel:
      description: Data model for user zone preference.
      example:
        Upn: Upn
        Zone: null
        FullName: FullName
        Name: Name
        Sid: Sid
      properties:
        FullName:
          description: The full name of the user or user group.
          type: string
        Name:
          description: Name of the user or user group.
          type: string
        Sid:
          description: Sid of the user or user group.
          type: string
        Upn:
          description: UPN of the user or user group.
          type: string
        Zone:
          $ref: '#/components/schemas/UserZonePreferenceResponseModel_Zone'
      title: UserZonePreferenceResponseModel
      type: object
    UserZonePreferenceResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfUserZonePreferenceResponseModel'
      - description: Collection of UserZonePreferenceResponseModel
        type: object
      title: UserZonePreferenceResponseModelCollection
    VDAComponentModel:
      description: Model of VDA component.
      example:
        ComponentDescription: ComponentDescription
        Parameters:
        - ParameterType: ParameterType
          ParameterName: ParameterName
          ParameterId: ParameterId
          ParameterDescription: ParameterDescription
        - ParameterType: ParameterType
          ParameterName: ParameterName
          ParameterId: ParameterId
          ParameterDescription: ParameterDescription
        ComponentName: ComponentName
        ComponentId: ComponentId
      properties:
        ComponentId:
          description: Id of this component object.
          type: string
        ComponentName:
          description: Name of this component object.
          type: string
        ComponentDescription:
          description: Description of this component object.
          type: string
        Parameters:
          description: Parameters of this component object.
          items:
            $ref: '#/components/schemas/VDAComponentParameterModel'
          title: "VDAComponentParameterModel[]"
          type: array
      title: VDAComponentModel
      type: object
    VDAComponentParameterModel:
      description: Model of VDA component's parameter.
      example:
        ParameterType: ParameterType
        ParameterName: ParameterName
        ParameterId: ParameterId
        ParameterDescription: ParameterDescription
      properties:
        ParameterName:
          description: Name of this parameter object.
          type: string
        ParameterId:
          description: Id of this parameter object.
          type: string
        ParameterDescription:
          description: Description of this parameter object.
          type: string
        ParameterType:
          description: Type of this parameter object.
          type: string
      title: VDAComponentParameterModel
      type: object
    VDAComponentParameterRequestModel:
      example:
        ParameterValue: ParameterValue
        ParameterId: ParameterId
      properties:
        ParameterId:
          description: Id of the parameter.
          format: guid
          minLength: 1
          type: string
        ParameterValue:
          description: Value of the parameter.
          type: string
      required:
      - ParameterId
      title: VDAComponentParameterRequestModel
      type: object
    VDAComponentRequestModel:
      example:
        Parameters:
        - ParameterValue: ParameterValue
          ParameterId: ParameterId
        - ParameterValue: ParameterValue
          ParameterId: ParameterId
        ComponentId: ComponentId
      properties:
        ComponentId:
          description: Id of the component.
          format: guid
          minLength: 1
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/VDAComponentParameterRequestModel'
          title: "VDAComponentParameterRequestModel[]"
          type: array
      required:
      - ComponentId
      title: VDAComponentRequestModel
      type: object
    VdaComponentResponseModel:
      description: Installed VDA components information.
      properties:
        Name:
          description: VDA component name.
          type: string
        Version:
          description: VDA component version.
          type: string
      title: VdaComponentResponseModel
      type: object
    VDAComponentsSelectionValidationRequestModel:
      description: Selection of VDA upgrade components and features related to the
        Machine Catalog.
      example:
        ExcludedComponents:
        - Parameters:
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          ComponentId: ComponentId
        - Parameters:
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          ComponentId: ComponentId
        Features:
        - Features
        - Features
        IncludedAdditionalComponents:
        - Parameters:
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          ComponentId: ComponentId
        - Parameters:
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          - ParameterValue: ParameterValue
            ParameterId: ParameterId
          ComponentId: ComponentId
      properties:
        IncludedAdditionalComponents:
          description: New Components that are to be included/added in this catalog
            level VDA Upgrade schedule.
          items:
            $ref: '#/components/schemas/VDAComponentRequestModel'
          title: "VDAComponentRequestModel[]"
          type: array
        ExcludedComponents:
          description: Installed Components that are to be excluded/omitted in this
            catalog level VDA Upgrade schedule.
          items:
            $ref: '#/components/schemas/VDAComponentRequestModel'
          title: "VDAComponentRequestModel[]"
          type: array
        Features:
          description: Features that needs to enabled on this catalog level VDA Upgrade
            schedule.
          items:
            type: string
          type: array
      title: VDAComponentsSelectionValidationRequestModel
      type: object
    VDAComponentsSelectionValidationResponseModel:
      description: Response model of VDA upgrade components and features related to
        the Machine Catalog.
      example:
        Uid: 0
        Message: Message
        Id: Id
        Name: Name
        IsValid: true
      properties:
        Uid:
          description: Uid of the catalog.
          format: int32
          type: integer
        Id:
          description: Id of the machine catalog.
          minLength: 1
          type: string
        Name:
          description: Name of the catalog.
          minLength: 1
          type: string
        IsValid:
          description: Validation result of VDA components selection of the catalog.
          type: boolean
        Message:
          description: Validation message of VDA components selection of the catalog.
          type: string
      required:
      - Id
      - Name
      title: VDAComponentsSelectionValidationResponseModel
      type: object
    VDAFeatureModel:
      description: Model of VDA feature.
      example:
        FeatureId: FeatureId
        FeatureDescription: FeatureDescription
        FeatureName: FeatureName
      properties:
        FeatureId:
          description: Id of this feature object.
          type: string
        FeatureName:
          description: Name of this feature object.
          type: string
        FeatureDescription:
          description: Description of this feature object.
          type: string
      title: VDAFeatureModel
      type: object
    VdaUpgradeMachineScheduleStatus:
      description: VDA package upgrade schedule status.
      enum:
      - Unknown
      - UpgradeScheduled
      - UpgradeInUpgradeWindow
      - UpgradeInProgress
      - UpgradeCancelled
      - UpgradeFailed
      - UpgradeSuccess
      - UpgradeValidationFailed
      title: VdaUpgradeMachineScheduleStatus
      type: string
      x-enumNames:
      - Unknown
      - UpgradeScheduled
      - UpgradeInUpgradeWindow
      - UpgradeInProgress
      - UpgradeCancelled
      - UpgradeFailed
      - UpgradeSuccess
      - UpgradeValidationFailed
    VdaUpgradeScheduleStatus:
      description: VDA package upgrade schedule status.
      enum:
      - NotScheduled
      - UpgradeScheduled
      - UpgradeInProgress
      - UpgradeCancelled
      - UpgradeFailed
      - UpgradeSuccessful
      title: VdaUpgradeScheduleStatus
      type: string
      x-enumNames:
      - NotScheduled
      - UpgradeScheduled
      - UpgradeInProgress
      - UpgradeCancelled
      - UpgradeFailed
      - UpgradeSuccessful
    VdaUpgradeState:
      description: Machine catalog or machine state for VDA package upgrade actions.
      enum:
      - MissingUpgradeType
      - UpgradeScheduled
      - UpgradeAvailable
      - UpToDate
      - Unknown
      title: VdaUpgradeState
      type: string
      x-enumNames:
      - MissingUpgradeType
      - UpgradeScheduled
      - UpgradeAvailable
      - UpToDate
      - Unknown
    VdaUpgradeType:
      description: "VDA upgrade types\n            "
      enum:
      - NotSet
      - LTSR
      - CR
      title: VdaUpgradeType
      type: string
      x-enumNames:
      - NotSet
      - LTSR
      - CR
    VdaVersionContract:
      example:
        Version: Version
        DisplayName: DisplayName
        Product: Product
        Edition: Edition
      properties:
        Product:
          description: "XA or XD, no other values."
          type: string
        Version:
          description: One of the values in XaVersions or XdVersions.
          type: string
        Edition:
          description: "MS or SS, no other values."
          type: string
        DisplayName:
          description: Display name.
          type: string
      title: VdaVersionContract
      type: object
    VersionDetail:
      description: Detailed VDA version information.
      example:
        product: product
        displayName: displayName
        edition: edition
        version: version
      properties:
        product:
          description: "XA or XD, no other values."
          type: string
        version:
          description: One of the values in XaVersions or XdVersions.
          type: string
        edition:
          description: "MS or SS, no other values."
          type: string
        displayName:
          description: Display name.
          type: string
      title: VersionDetail
      type: object
    VMImageResponseModel:
      description: Details about a virtual machine disk image used for a provisioning
        scheme.
      example:
        FunctionalLevel: "{}"
        MasterImageNote: MasterImageNote
        ImageVersion: null
        ImageStatus: "{}"
        Image: null
        Date: Date
      properties:
        FunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: The functional level of the VDA installed in the VM.
          type: object
        Image:
          $ref: '#/components/schemas/VMImageResponseModel_Image'
        ImageVersion:
          $ref: '#/components/schemas/VMImageResponseModel_ImageVersion'
        ImageStatus:
          allOf:
          - $ref: '#/components/schemas/VMImageStatus'
          description: The status of the provisioning scheme image.
          type: object
        Date:
          description: The date and time when the snapshot was used in the provisioning
            scheme.
          minLength: 1
          type: string
        MasterImageNote:
          description: The note of the provisioning scheme image.
          type: string
      required:
      - Date
      - ImageStatus
      title: VMImageResponseModel
      type: object
    VMImageResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfVMImageResponseModel'
      - description: Collection of VMImageResponseModel
        type: object
      title: VMImageResponseModelCollection
    VMImageStatus:
      description: Status of a virtual machine disk image.
      enum:
      - Unknown
      - Deleted
      - Current
      - Prepared
      title: VMImageStatus
      type: string
      x-enumNames:
      - Unknown
      - Deleted
      - Current
      - Prepared
    VMToolsState:
      description: VM tools state
      enum:
      - Unknown
      - NotPresent
      - NotStarted
      - Running
      title: VMToolsState
      type: string
      x-enumNames:
      - Unknown
      - NotPresent
      - NotStarted
      - Running
    WakeOnLanTransmission:
      description: Method of packet transmission to use for Wake-on-LAN functionality.
      enum:
      - Unknown
      - None
      - SubnetDirectedBroadcast
      - Unicast
      title: WakeOnLanTransmission
      type: string
      x-enumNames:
      - Unknown
      - None
      - SubnetDirectedBroadcast
      - Unicast
    WindowsConnectionSetting:
      description: Windows connection setting.
      enum:
      - Unknown
      - LogonEnabled
      - Draining
      - DrainingUntilRestart
      - LogonDisabled
      title: WindowsConnectionSetting
      type: string
      x-enumNames:
      - Unknown
      - LogonEnabled
      - Draining
      - DrainingUntilRestart
      - LogonDisabled
    X509ChainStatusFlags:
      description: ""
      enum:
      - NoError
      - NotTimeValid
      - NotTimeNested
      - Revoked
      - NotSignatureValid
      - NotValidForUsage
      - UntrustedRoot
      - RevocationStatusUnknown
      - Cyclic
      - InvalidExtension
      - InvalidPolicyConstraints
      - InvalidBasicConstraints
      - InvalidNameConstraints
      - HasNotSupportedNameConstraint
      - HasNotDefinedNameConstraint
      - HasNotPermittedNameConstraint
      - HasExcludedNameConstraint
      - PartialChain
      - CtlNotTimeValid
      - CtlNotSignatureValid
      - CtlNotValidForUsage
      - HasWeakSignature
      - OfflineRevocation
      - NoIssuanceChainPolicy
      - ExplicitDistrust
      - HasNotSupportedCriticalExtension
      title: X509ChainStatusFlags
      type: string
      x-enumFlags: true
      x-enumNames:
      - NoError
      - NotTimeValid
      - NotTimeNested
      - Revoked
      - NotSignatureValid
      - NotValidForUsage
      - UntrustedRoot
      - RevocationStatusUnknown
      - Cyclic
      - InvalidExtension
      - InvalidPolicyConstraints
      - InvalidBasicConstraints
      - InvalidNameConstraints
      - HasNotSupportedNameConstraint
      - HasNotDefinedNameConstraint
      - HasNotPermittedNameConstraint
      - HasExcludedNameConstraint
      - PartialChain
      - CtlNotTimeValid
      - CtlNotSignatureValid
      - CtlNotValidForUsage
      - HasWeakSignature
      - OfflineRevocation
      - NoIssuanceChainPolicy
      - ExplicitDistrust
      - HasNotSupportedCriticalExtension
    ZonableItemType:
      description: Types of zonable items.
      enum:
      - Unknown
      - HypervisorConnection
      - Controller
      - MachineCatalog
      - EdgeServer
      - User
      - Application
      title: ZonableItemType
      type: string
      x-enumNames:
      - Unknown
      - HypervisorConnection
      - Controller
      - MachineCatalog
      - EdgeServer
      - User
      - Application
    ZoneDetailResponseModel:
      allOf:
      - $ref: '#/components/schemas/ZoneResponseModel'
      - $ref: '#/components/schemas/ZoneDetailResponseModel_allOf'
      title: ZoneDetailResponseModel
    ZonedItemRequestModel:
      description: Request model for a zoned item.
      example:
        ItemType: "{}"
        Id: Id
        AdditionalProperties:
        - Value: Value
          Name: Name
        - Value: Value
          Name: Name
        Name: Name
      properties:
        Id:
          description: ID of the zoned item.
          minLength: 1
          type: string
        Name:
          description: Name of the zoned item.
          minLength: 1
          type: string
        ItemType:
          allOf:
          - $ref: '#/components/schemas/ZonableItemType'
          description: Type of the zoned item.
          type: object
        AdditionalProperties:
          description: Additional properties of the zoned item.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - Id
      - ItemType
      - Name
      title: ZonedItemRequestModel
      type: object
    ZonedItemResponseModel:
      description: Response model for a zoned item.
      properties:
        Id:
          description: ID of the zoned item.
          minLength: 1
          type: string
        Name:
          description: Name of the zoned item.
          minLength: 1
          type: string
        Description:
          description: Description of the zoned item.
          type: string
        ItemType:
          allOf:
          - $ref: '#/components/schemas/ZonableItemType'
          description: Type of the zoned item.
          type: object
        Scopes:
          description: Administrative scopes of the zoned item.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        AdditionalProperties:
          description: Additional properties of the zoned item.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ZoneId:
          description: ID of the zone which this item is in.
          type: string
        ZoneName:
          description: Name of the zone which this item is in.
          type: string
      required:
      - Id
      - ItemType
      - Name
      title: ZonedItemResponseModel
      type: object
    ZonedItemResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfZonedItemResponseModel'
      - description: Response object for collections of ZonedItemResponseModel.
        type: object
      title: ZonedItemResponseModelCollection
    ZonedItemSearchRequestModel:
      description: Request model for defining a basic zoned item search criteria.
      example:
        ZoneId: ZoneId
        ItemType: "{}"
        BasicSearchString: BasicSearchString
      properties:
        ZoneId:
          description: Id of the zone in which to search for the zoned item.
          type: string
        ItemType:
          allOf:
          - $ref: '#/components/schemas/ZonableItemType'
          description: Type of the zoned item to search for.
          type: object
        BasicSearchString:
          description: Basic search string. Specify a string which will match if contained
            within name of the zoned item.
          type: string
      title: ZonedItemSearchRequestModel
      type: object
    ZonedItemsRequestModel:
      description: Request model for zoned items.
      example:
        Items:
        - ItemType: "{}"
          Id: Id
          AdditionalProperties:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          Name: Name
        - ItemType: "{}"
          Id: Id
          AdditionalProperties:
          - Value: Value
            Name: Name
          - Value: Value
            Name: Name
          Name: Name
      properties:
        Items:
          items:
            $ref: '#/components/schemas/ZonedItemRequestModel'
          title: "ZonedItemRequestModel[]"
          type: array
      title: ZonedItemsRequestModel
      type: object
    ZonePreference:
      description: Settings for zone preference and failover.
      enum:
      - Unknown
      - UserLocation
      - UserHome
      - UserHomeOnly
      - ApplicationHome
      title: ZonePreference
      type: string
      x-enumNames:
      - Unknown
      - UserLocation
      - UserHome
      - UserHomeOnly
      - ApplicationHome
    ZoneResponseModel:
      description: Zone object.
      properties:
        Id:
          description: ID of the zone.
          minLength: 1
          type: string
        Name:
          description: Name of the zone.
          minLength: 1
          type: string
        Description:
          description: Description of the zone.
          type: string
        IsPrimary:
          description: |-
            Indicates whether the zone is the primary zone for the site.  Resources
            in the site default to the primary zone if not set otherwise.
          type: boolean
        IsHealthy:
          description: The flag to indicate whether the zone is healthy.
          type: boolean
        LastStateChangeTimeInUtc:
          description: The LastStateChangeTimeInUtc of the zone.
          type: string
        Metadata:
          description: The metadata of Zone.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ResourceLocation:
          $ref: '#/components/schemas/ZoneResponseModel_ResourceLocation'
      required:
      - Id
      - IsPrimary
      - Name
      title: ZoneResponseModel
      type: object
    ZoneResponseModelCollection:
      allOf:
      - $ref: '#/components/schemas/CollectionModelOfZoneResponseModel'
      - description: Collection of ZoneResponseMode
        type: object
      title: ZoneResponseModelCollection
    ActionCatalogCreationResponseModel_allOf_MachineCreationData:
      allOf:
      - $ref: '#/components/schemas/ActionMachineCreationDetailsResponseModel'
      description: The machine creation data.
      type: object
    ActionCatalogCreationResponseModel_allOf:
      description: Catalog creation action response model.
      properties:
        MasterImage:
          description: The master image.
          type: string
        MachineCreationData:
          $ref: '#/components/schemas/ActionCatalogCreationResponseModel_allOf_MachineCreationData'
        Snapshot:
          description: The snapshot.
          type: string
      type: object
      example: null
    ActionError_InnerError:
      allOf:
      - $ref: '#/components/schemas/ActionError'
      description: The inner error.
      type: object
    ActionFailedMachineOrAccountResponseModel_ActionError:
      allOf:
      - $ref: '#/components/schemas/ActionError'
      description: The failed action error.
      type: object
    ActionMachineCreationDetailsResponseModel_allOf:
      description: Machine creation details response model class.
      properties:
        MachineRequested:
          description: The machine requested
          format: int32
          type: integer
      type: object
      example: null
    ActionMachineCreationResponseModel_allOf:
      description: Action machine creation response model.
      properties:
        MachineCreationData:
          $ref: '#/components/schemas/ActionCatalogCreationResponseModel_allOf_MachineCreationData'
      type: object
      example: null
    ActionMachineRemovalDetailsResponseModel_allOf:
      description: 'Machine removal details response model class. '
      properties:
        VMAction:
          description: 'The virtual machine actions. '
          type: string
      type: object
      example: null
    ActionMachineRemovalResponseModel_allOf_MachineRemovalData:
      allOf:
      - $ref: '#/components/schemas/ActionMachineRemovalDetailsResponseModel'
      description: The machine removal details response model.
      type: object
    ActionMachineRemovalResponseModel_allOf:
      description: The machine removal response model class.
      properties:
        MachineRemovalData:
          $ref: '#/components/schemas/ActionMachineRemovalResponseModel_allOf_MachineRemovalData'
        DeleteVirtualMachines:
          description: 'The delete virtual machines. '
          type: string
      type: object
      example: null
    ActionResponseModel_TerminatingError:
      allOf:
      - $ref: '#/components/schemas/ActionError'
      description: The action terminating error.
      type: object
    ActionUpdateImageResponseModel_allOf:
      description: 'Action update image response model object. '
      properties:
        MasterImage:
          description: The master image.
          type: string
        Snapshot:
          description: The snapshot.
          type: string
      type: object
      example: null
    ADDirectoryEntryModel_Parent:
      allOf:
      - $ref: '#/components/schemas/ADDirectoryEntryModel'
      description: Parent entry of this object
      type: object
    AddMachineToMachineCatalogDetailRequestModel_allOf_MachineAccountCreationRules:
      allOf:
      - $ref: '#/components/schemas/UpdateMachineAccountCreationRulesRequestModel'
      description: |-
        If specified, the machine account creation rules will be updated.
        If not specified, the machine account creation rules will be left unchanged.
      type: object
    AddMachineToMachineCatalogDetailRequestModel_allOf_AddAvailableMachineAccount:
      allOf:
      - $ref: '#/components/schemas/MachineAccountRequestModel'
      description: Active Directory machine account to add to the pool of available
        accounts that are to be used when machines are provisioned.
      type: object
    AddMachineToMachineCatalogDetailRequestModel_allOf:
      description: Add a machine to a machine catalog.
      properties:
        PvsAddress:
          description: |-
            IP address of the PVS server to be used.  This only applies if the
            ProvisioningType is PVS.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        PvsDomain:
          description: |-
            The domain of the PVS server to be used.
            This only applies if the ProvisioningType is
            PVS.
          maxLength: 255
          pattern: UNKNOWN
          type: string
        PvsCollectionIds:
          description: |-
            Collection IDs of PVS collections containing machines that should be
            added to the catalog.  This only applies if the
            ProvisioningType is
            PVS, and is required in that case.

            Each item must be a valid PVS collection ID residing on the PVS
            server located at the specified .
          items:
            type: string
          type: array
        MachineAccountCreationRules:
          $ref: '#/components/schemas/AddMachineToMachineCatalogDetailRequestModel_allOf_MachineAccountCreationRules'
        AddAvailableMachineAccount:
          $ref: '#/components/schemas/AddMachineToMachineCatalogDetailRequestModel_allOf_AddAvailableMachineAccount'
      type: object
      example: null
    ADDomainModel_DirectoryEntry:
      allOf:
      - $ref: '#/components/schemas/ADDirectoryEntryModel'
      description: DirectoryEntry model representing this domain
      type: object
    AdminFolderResponseModel_Parent:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Parent folder.
      type: object
    AdministratorResponseModel_User:
      allOf:
      - $ref: '#/components/schemas/IdentityUserResponseModel'
      description: |-
        Details about the administrator user account.
        CHANGE: simplify the response model
      type: object
    AdministratorRightResponseModel_Scope:
      allOf:
      - $ref: '#/components/schemas/ScopeResponseModel'
      description: |-
        Administrative scope.  Scope defines the objects on which
        the administrator can act, within the actions allowed by
        the Role.
      type: object
    AdministratorRightResponseModel_Role:
      allOf:
      - $ref: '#/components/schemas/RoleResponseModel'
      description: |-
        Administrative role.  Role defines the actions which the
        administrator is allowed to take, on objects within the
        Scope.
      type: object
    ApplicationDeliveryGroupResponseModel_allOf:
      description: Prioritized delivery group model.
      properties:
        Priority:
          description: |-
            Specifies the priority of the mapping between application and delivery
            group where lower numbers imply higher priority with zero being highest.
          format: int32
          type: integer
      required:
      - Priority
      type: object
      example: null
    ApplicationDetailResponseModel_allOf_HomeZone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        Home zone preference used when launching this
        application.
      type: object
    ApplicationDetailResponseModel_allOf:
      description: Response object for application details.
      properties:
        BrowserName:
          description: Internal name of the application.
          minLength: 1
          type: string
        Categories:
          description: Categories in which the application resides.
          items:
            type: string
          type: array
        ConfiguredFtas:
          description: All file types which are associated with the application.
          items:
            $ref: '#/components/schemas/FtaResponseModel'
          title: "FtaResponseModel[]"
          type: array
        CpuPriorityLevel:
          allOf:
          - $ref: '#/components/schemas/CpuPriorityLevel'
          description: The CPU priority for the launched process.
          type: object
        HomeZone:
          $ref: '#/components/schemas/ApplicationDetailResponseModel_allOf_HomeZone'
        HomeZoneMode:
          allOf:
          - $ref: '#/components/schemas/HomeZoneMode'
          description: The zone preference mode for application launches.
          type: object
        IncludedUserFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            polic(ies) is implicitly granted access to the application.
          type: boolean
        IconFromClient:
          description: |-
            Specifies whether the icon is gotten from user's computer at run time.
            If not specified, will not be changed.
          type: boolean
        IncludedUsers:
          description: |-
            The included users filter of the application; that is,
            the users and groups who are explicitly granted access to the
            published application.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        MaxPerUserInstances:
          description: |-
            The maximum allowed concurrently running instances of
            the application that an individual user can have.
          format: int32
          type: integer
        MaxTotalInstances:
          description: |-
            The maximum allowed total of concurrently running
            instances of the application within the site.
          format: int32
          type: integer
        ShortcutAddedToDesktop:
          description: |-
            Indicates whether or not a shortcut to the application
            should be placed on the user device.
          type: boolean
        ShortcutAddedToStartMenu:
          description: |-
            Indicates whether or not a shortcut to the application
            should be placed in the user's start menu on their user device.
          type: boolean
        StartMenuFolder:
          description: |-
            Name of the start menu folder that holds
            the application shortcut (if any).
          type: string
        WaitForPrinterCreation:
          description: |-
            Indicates whether or not the session waits for the printers to
            be created before allowing the user to interact with the session.
          type: boolean
      required:
      - BrowserName
      - CpuPriorityLevel
      - HomeZone
      - HomeZoneMode
      - IncludedUserFilterEnabled
      type: object
      example: null
    ApplicationGroupDeliveryGroupRefResponseModel_allOf:
      description: Prioritized delivery group reference model.
      properties:
        Priority:
          description: |-
            Specifies the priority of the mapping between application and delivery
            group where lower numbers imply higher priority with zero being highest.
          format: int32
          type: integer
        NumMachines:
          description: |-
            Number of machines within the delivery group that are capable of hosting the
            applications in the application group.
          format: int32
          type: integer
        NumTaggedMachines:
          description: |-
            Number of tagged machines within the delivery group that are capable of hosting the
            applications in the application group.
          format: int32
          type: integer
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: Type of session support provided by machines in the delivery
            group.
          type: object
      type: object
      example: null
    ApplicationGroupDeliveryGroupResponseModel_allOf:
      description: Prioritized delivery group model.
      properties:
        Priority:
          description: |-
            Specifies the priority of the mapping between application and delivery
            group where lower numbers imply higher priority with zero being highest.
          format: int32
          type: integer
        NumMachines:
          description: |-
            Number of machines within the delivery group that are capable of hosting the
            applications in the application group.
          format: int32
          type: integer
      required:
      - NumMachines
      - Priority
      type: object
      example: null
    ApplicationGroupDetailResponseModel_allOf:
      description: Detailed response object for application groups.
      properties:
        ApplicationCount:
          description: Number of applications in the group.
          format: int32
          type: integer
        IncludedUsersFilterEnabled:
          description: |-
            Indicates whether the IncludedUsers filter is
            enabled.  If the filter is disabled then any user who
            satisfies the requirements of the delivery group's access
            polic(ies) is implicitly granted access to the applications
            in the application group.
          type: boolean
        IncludedUsers:
          description: |-
            The included users filter of the application group; that is,
            the users and groups who are explicitly granted access to the
            applications in the application group.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        SessionSharingEnabled:
          description: |-
            Whether applications in this application group can share
            sessions with applications in other application groups
            (or with applications that are not a member of an
            application group).
          type: boolean
        TotalMachines:
          description: |-
            Total number of machines across all delivery groups on
            which the application group is published.
          format: int32
          type: integer
      required:
      - ApplicationCount
      - IncludedUsersFilterEnabled
      - SessionSharingEnabled
      - TotalMachines
      type: object
      example: null
    ApplicationGroupResponseModel_RestrictToTag:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        Optional tag that may be used further to restrict which
        application groups may be made accessible to a user.
      type: object
    ApplicationGroupResponseModel_AdminFolder:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The folder in which the application group resides.
      type: object
    ApplicationResponseModel_ApplicationFolder:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The folder in which the application resides.
      type: object
    ApplicationResponseModel_InstalledAppProperties:
      allOf:
      - $ref: '#/components/schemas/InstalledAppResponseModel'
      description: |-
        Properties of applications that are installed on servers
        or clients.
      type: object
    ApplicationResponseModel_AppVAppProperties:
      allOf:
      - $ref: '#/components/schemas/AppVAppResponseModel'
      description: Properties of applications that are delivered via App-V.
      type: object
    ApplicationSearchRequestModel_SortCriteria:
      allOf:
      - $ref: '#/components/schemas/AppSortCriteriaRequestModel'
      description: Sort criteria for the results.
      type: object
    AppVApplicationDetailResponseModel_allOf:
      description: Response object describing an App-V application details.
      properties:
        SequenceLocation:
          description: App sequence location.
          minLength: 1
          type: string
        TargetInPackage:
          description: Whether the app target is in a package.
          type: boolean
        Users:
          description: Users associated with the App-V application on the management
            server.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        WorkingDirectory:
          description: Working directory for the App-V application as defined on the
            management server.
          minLength: 1
          type: string
      required:
      - SequenceLocation
      - TargetInPackage
      - Users
      - WorkingDirectory
      type: object
      example: null
    BackupRestoreStatusRequestModel_RestoreProgress:
      allOf:
      - $ref: '#/components/schemas/BackupRestoreRestoreSingleMemberModel'
      description: "Restore Progress\n            "
      type: object
    CatalogSearchRequestModel_SortCriteria:
      allOf:
      - $ref: '#/components/schemas/CatalogSortCriteriaRequestModel'
      description: Sort criteria for the results.
      type: object
    CatalogSearchResponseModel_HypervisorPluginResponse:
      allOf:
      - $ref: '#/components/schemas/HypervisorPluginResponseModel'
      description: Hypervisor plugin info that is associated with the machines in
        the catalog.
      type: object
    CatalogSearchResponseModel_AdminFolder:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The folder in which the machinecatalog resides.
      type: object
    CreateApplicationRequestModel_InstalledAppProperties:
      allOf:
      - $ref: '#/components/schemas/CreateInstalledAppRequestModel'
      description: |-
        Properties of applications that are installed on servers
        or clients.
      type: object
    CreateApplicationRequestModel_AppVAppProperties:
      allOf:
      - $ref: '#/components/schemas/AppVAppRequestModel'
      description: Properties of applications that are delivered via App-V.
      type: object
    CreateDeliveryGroupRequestModel_Applications:
      allOf:
      - $ref: '#/components/schemas/DeliveryGroupAddApplicationsRequestModel'
      description: List of applications to publish on the delivery group.
      type: object
    CreateDeliveryGroupRequestModel_AppAccessPolicy:
      allOf:
      - $ref: '#/components/schemas/AppAccessPolicyRequestModel'
      description: |-
        Policy controlling access to all applications delivered from a
        delivery group.
      type: object
    CreateDeliveryGroupRequestModel_LingerSettings:
      allOf:
      - $ref: '#/components/schemas/FastApplicationSettingsRequestModel'
      description: |-
        Session linger settings for sessions launched on machines
        in the delivery group.
      type: object
    CreateDeliveryGroupRequestModel_PrelaunchSettings:
      allOf:
      - $ref: '#/components/schemas/FastApplicationSettingsRequestModel'
      description: |-
        Prelaunch settings for users with resources published from
        the delivery group.
      type: object
    CreateDeliveryGroupRequestModel_SimpleAccessPolicy:
      allOf:
      - $ref: '#/components/schemas/SimplifiedAccessPolicyRequestModel'
      description: Simplified access policy for connections to the delivery group.
      type: object
    CreateHypervisorRequestModel_ConnectionDetails:
      allOf:
      - $ref: '#/components/schemas/HypervisorConnectionDetailRequestModel'
      description: Connection details.  Required.
      type: object
    CreateHypervisorRequestModel_PoolDetails:
      allOf:
      - $ref: '#/components/schemas/CreateHypervisorResourcePoolRequestModel'
      description: Resource pool to create.  Optional.
      type: object
    CreateHypervisorResourcePoolAWSRequestModel_allOf:
      properties:
        VirtualPrivateCloud:
          description: |-
            AWS Virtual Private Cloud (VPC) resource which the resource pool is
            connected to.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        AvailabilityZone:
          description: |-
            Path to the availability zone resource to use for provisioning
            operations in this resource pool.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      required:
      - AvailabilityZone
      - Networks
      - VirtualPrivateCloud
      type: object
      example: null
    CreateHypervisorResourcePoolAzureRequestModel_allOf:
      properties:
        Region:
          description: Azure region which the resource pool is connected to.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        VirtualNetwork:
          description: |-
            Azure virtual network which the resource pool is connected to.
            Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Subnets:
          description: |-
            Path to the subnet(s) that are available for provisioning operations
            in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      required:
      - Region
      - Subnets
      - VirtualNetwork
      type: object
      example: null
    CreateHypervisorResourcePoolGcpRequestModel_allOf:
      properties:
        Region:
          description: Google Cloud Platform region which the resource pool is connected
            to.  Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        VirtualPrivateCloud:
          description: |-
            Google Cloud Platform virtual network which the resource pool is connected to.
            Required.
          maxLength: 2147483647
          minLength: 1
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Networks:
          description: |-
            Path to the subnet(s) that are available for provisioning operations
            in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      required:
      - Networks
      - Region
      - VirtualPrivateCloud
      type: object
      example: null
    CreateHypervisorResourcePoolTraditionalRequestModel_allOf:
      properties:
        RootPath:
          description: |-
            Root path of the resources on the hypervisor which should be
            included in the resource pool.  Required.
          maxLength: 2147483647
          pattern: "(?i)XDHyp:(\\\\{1,2}|\\/{1,2})Connections(\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\
            \\{1,2}|\\/{1,2})HostingUnits(\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\
            \\{1,2}|\\/{1,2}).*|^[^;:#\\*\\?=<>\\|\\[\\]\\(\\)\"'\\{\\}`]*.*"
          type: string
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
        UseLocalStorageCaching:
          default: false
          description: |-
            Indicates whether local storage on the hypervisor will be used for
            caching purposes. Not all hypervisor types support this.  Defaults
            to `false`.
          type: boolean
        Storage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        PersonalvDiskStorage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        TemporaryStorage:
          description: |-
            Path to the storage resource(s) that are used for temporary
            operations in this resource pool.  Required for some hypervisor
            types.
          items:
            type: string
          type: array
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
      required:
      - Networks
      type: object
      example: null
    CreateImageDefinitionRequestModel_ImageDefinition:
      allOf:
      - $ref: '#/components/schemas/CreateImageDefinitionDetailRequestModel'
      description: |-
        Defines the image definition.
        CreateImageDefinitionDetailRequestModel
      type: object
    CreateImageDefinitionRequestModel_ImageVersion:
      allOf:
      - $ref: '#/components/schemas/CreateImageVersionRequestModel'
      description: |-
        Defines the image version.
        CreateImageVersionRequestModel
      type: object
    CreateMachineCatalogProvisioningSchemeRequestModel_ImageVersion:
      allOf:
      - $ref: '#/components/schemas/AssignImageVersionToMachineCatalogRequestModel'
      description: Image version to assign to this machine catalog
      type: object
    CreateMachineCatalogProvisioningSchemeRequestModel_MachineAccountCreationRules:
      allOf:
      - $ref: '#/components/schemas/MachineAccountCreationRulesRequestModel'
      description: Rules specifying how Active Directory machine accounts should be
        created when machines are provisioned.
      type: object
    CreateMachineCatalogRequestModel_ProvisioningScheme:
      allOf:
      - $ref: '#/components/schemas/CreateMachineCatalogProvisioningSchemeRequestModel'
      description: |-
        Defines the provisioning scheme for the catalog.  Required if
        ProvisioningType equals
        MCS.  Must not be specified
        otherwise.
      type: object
    CreateMachineCatalogRequestModel_ProvisioningSchemeImportData:
      allOf:
      - $ref: '#/components/schemas/MCSImportData'
      description: "Special case, the MCS catalog has been exported from another site."
      type: object
    CreateUpgradeScheduleRequestModel_VDAComponentsAndFeaturesRequestModel:
      allOf:
      - $ref: '#/components/schemas/VDAComponentsSelectionValidationRequestModel'
      description: Selection of VDA upgrade components and features related to the
        Machine Catalog.
      type: object
    DeliveryGroupAssociationResponseModel_allOf:
      description: Response object for delivery group association.
      properties:
        Associated:
          description: Whether the delivery group was associated.
          type: boolean
        Priority:
          description: The priority of delivery group association.
          format: int32
          type: integer
      required:
      - Associated
      type: object
      example: null
    DeliveryGroupDetailResponseModel_allOf_AppAccessPolicy:
      allOf:
      - $ref: '#/components/schemas/AppAccessPolicyResponseModel'
      description: |-
        Policy controlling access to all applications delivered from a
        delivery group.
        CHANGE: add
      type: object
    DeliveryGroupDetailResponseModel_allOf_RestrictAutoscaleTag:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Specifies the tag used to restrict autoscale.
      type: object
    DeliveryGroupDetailResponseModel_allOf_LingerSettings:
      allOf:
      - $ref: '#/components/schemas/FastApplicationSettingsResponseModel'
      description: |-
        Session linger settings for sessions launched on machines
        in the delivery group.
      type: object
    DeliveryGroupDetailResponseModel_allOf_PrelaunchSettings:
      allOf:
      - $ref: '#/components/schemas/FastApplicationSettingsResponseModel'
      description: |-
        Prelaunch settings for users with resources published from
        the delivery group.
      type: object
    DeliveryGroupDetailResponseModel_allOf_SimpleAccessPolicy:
      allOf:
      - $ref: '#/components/schemas/SimplifiedAccessPolicyResponseModel'
      description: |-
        Simplified access policy for connections to the delivery group.
        CHANGE: was
        public SimplifiedAccessPolicyResponseModel[] AccessPolicies { get; set; }

        If the delivery group does not have exactly 1 access policy, this
        property will be null.
        If the delivery group has exactly 1 access policy, BUT the access
        policy is Enabled==false, this property will be null.
        If the delivery group has exactly 1 access policy, BUT the access
        policy cannot be represented by the SimplifiedAccessPolicyResponseModel,
        this property will be null.
        -> For example, if any of the Excluded*Enabled properties are true.
        -> For example, if any of the IncludedClient*FilterEnabled properties are true.
        -> For example, if IncludedDesktopGroups or IncludedDesktopGroupFilter are true.

        The intent is to represent access control rules in the same simplified
        model as is exposed through Studio.  Customers who need more control
        can use the low-level PowerShell API or the AdvancedAccessPolicies API
        to access the full expressiveness of the access control model.

        If Studio encounters a delivery group with this property returning null,
        it should switch into a mode that informs the admin they must configure
        access control through the PowerShell API since it cannot be represented
        in the UI.
      type: object
    DeliveryGroupDetailResponseModel_allOf:
      description: Response object for details of a delivery group.
      properties:
        AppAccessPolicy:
          $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf_AppAccessPolicy'
        AppProtectionKeyLoggingRequired:
          description: Specifies whether key logging app protection is required.
          type: boolean
        AppProtectionScreenCaptureRequired:
          description: Specifies whether screen capture app protection is required.
          type: boolean
        AutomaticPowerOnForAssigned:
          description: |-
            Whether assigned (Private)
            machines in the delivery group should be automatically
            powered-on at the start of peak time periods.
          type: boolean
        AutomaticPowerOnForAssignedDuringPeak:
          description: |-
            Whether assigned (Private) machines in the
            delivery group should be automatically powered-on throughout peak
            time periods.
          type: boolean
        AutoScaleEnabled:
          description: Indicates whether auto-scale is enabled for the delivery group.
          type: boolean
        RestrictAutoscaleTag:
          $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf_RestrictAutoscaleTag'
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: |-
            Specifies the color depth that the ICA session should use
            for connections to machines in this group.
          type: object
        DefaultDesktopIconId:
          description: |-
            Default icon to use for desktops published from the delivery group.
            was IconUid
          type: string
        DefaultDesktopPublishedName:
          description: |-
            Default published name to use for desktops published from the delivery group.
            Change: Add
          type: string
        DesktopsInUse:
          description: Number of machines in the delivery group which are currently
            in-use.
          format: int32
          type: integer
        DesktopsNeverRegistered:
          description: Number of machines in the delivery group which have never successfully
            registered.
          format: int32
          type: integer
        DesktopsPreparing:
          description: Number of machines in the delivery group which are preparing
            for a connection.
          format: int32
          type: integer
        HdxSslEnabled:
          description: |-
            Whether connections to machines in the delivery group will
            use SSL.
            CHANGE: add:
          type: boolean
        IsPowerManaged:
          description: |-
            Indicates whether the machines in the delivery group are power-managed.
            NOTE: I used to think that MachineType==Virtual meant the same thing
            as "power-managed"; however that's not the case.  A machine is power-
            managed if it is Virtual OR if it is RemotePC with a hypervisor
            connection (which will still have MachineType==Physical).
          type: boolean
        LingerSettings:
          $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf_LingerSettings'
        PowerOffDelayMinutes:
          description: |-
            Delay before machines are powered off, when scaling down.  Specified
            in minutes.  Applies only to multi-session machines.
          format: int32
          type: integer
        MachineCost:
          description: |-
            Indicates the estimated per-hour cost for machines in the delivery
            group, as set by the administrator.
          format: double
          title: Double
          type: number
        MachinesInMaintenanceMode:
          description: Number of machines in the delivery group which are in maintenance
            mode.
          format: int32
          type: integer
        MachineOperatingSystems:
          description: |-
            List of operating systems of machines in the delivery group,
            along with a count of how many machines use each OS.
            CHANGE: was
            public IDictionary<string,int> MachineOperatingSystems { get; set; }
          items:
            $ref: '#/components/schemas/NameValueIntPairModel'
          title: "NameValueIntPairModel[]"
          type: array
        MachineType:
          allOf:
          - $ref: '#/components/schemas/MachineType'
          description: |-
            Type of the machines in the delivery group, indicating
            whether the machines can be power managed.
          type: object
        OffMachines:
          description: Number of machines in the delivery group which are currently
            powered off.
          format: int32
          type: integer
        OffPeakBufferSizePercent:
          description: |-
            The percentage of machines in the delivery group that should be kept
            available in an idle state outside peak hours.
          format: int32
          type: integer
        OffPeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting outside peak hours.
          type: object
        OffPeakDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          type: integer
        OffPeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a second configurable period of a
            user session disconnecting outside peak hours.
          type: object
        OffPeakExtendedDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects outside peak hours.
          format: int32
          type: integer
        OffPeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending outside peak hours. "
          type: object
        OffPeakLogOffTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends outside peak hours.
          format: int32
          type: integer
        PeakBufferSizePercent:
          description: |-
            The percentage of machines in the delivery group that should be kept
            available in an idle state in peak hours.
          format: int32
          type: integer
        PeakDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: |-
            The action to be performed after a configurable period of a user
            session disconnecting in peak hours.
          type: object
        PeakDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          type: integer
        PeakExtendedDisconnectAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending in peak hours. "
          type: object
        PeakExtendedDisconnectTimeoutMinutes:
          description: |-
            The number of minutes before the second configured action should be
            performed after a user session disconnects in peak hours.
          format: int32
          type: integer
        PeakLogOffAction:
          allOf:
          - $ref: '#/components/schemas/SessionChangeHostingAction'
          description: "The action to be performed after a configurable period of\
            \ a user\nsession ending in peak hours. "
          type: object
        PeakLogOffTimeoutMinutes:
          description: |-
            The number of minutes before the configured action should be
            performed after a user session ends in peak hours.
          format: int32
          type: integer
        DisconnectPeakIdleSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during peak time.
          format: int32
          type: integer
        DisconnectOffPeakIdleSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which an idle session
            belonging to the delivery group is disconnected during off-peak time.
          format: int32
          type: integer
        LogoffPeakDisconnectedSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during peak time.
          format: int32
          type: integer
        LogoffOffPeakDisconnectedSessionAfterSeconds:
          description: |-
            Specifies the time in seconds after which a disconnected session
            belonging to the delivery group is terminated during off-peak time.
          format: int32
          type: integer
        PrelaunchSettings:
          $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf_PrelaunchSettings'
        PowerTimeSchemes:
          description: |-
            Power management time schemes.  No two schemes will cover the same
            day of the week.
          items:
            $ref: '#/components/schemas/PowerTimeSchemeResponseModel'
          title: "PowerTimeSchemeResponseModel[]"
          type: array
          x-deprecated: true
          x-deprecatedMessage: 'DEPRECATED. Use <see cref=''DeliveryGroupsTPController.GetDeliveryGroupPowerTimeSchemes(string)''/> '
        ProtocolPriority:
          description: |-
            A list of protocols in the order in which they will be
            attempted for use during connection.
          items:
            $ref: '#/components/schemas/ProtocolType'
          title: "ProtocolType[]"
          type: array
        RegisteredMachines:
          description: Number of machines in the delivery group that have registered.
          format: int32
          type: integer
        ReuseMachinesWithoutShutdownInOutage:
          description: Whether machines will be reused without a shutdown in case
            of an outage.
          type: boolean
        SecureIcaRequired:
          description: |-
            Whether HDX connections to machines in the delivery group
            require the use of the SecureICA protocol.
          type: boolean
        SettlementPeriodBeforeAutoShutdownSeconds:
          description: |-
            Time after a session ends during which automatic shutdown
            requests (for example, shutdown after use, idle pool
            management) are deferred. Any outstanding shutdown request
            takes effect after the settlement period expires. This is
            typically used to configure time to allow logoff scripts
            to complete.
          format: int32
          type: integer
        SettlementPeriodBeforeUseSeconds:
          description: |-
            Idle period before a machine can be selected to host a new
            session after registration or the end of a previous
            session. This is typically used to allow a machine to
            become idle following processing associated with start-up
            or logoff actions. A machine may still be selected during
            the idle period if no other machine is available for
            immediate use.
          format: int32
          type: integer
        ShutdownDesktopsAfterUse:
          description: |-
            Whether machines in this delivery group should be
            automatically shut down when each user session completes.
          type: boolean
        SimpleAccessPolicy:
          $ref: '#/components/schemas/DeliveryGroupDetailResponseModel_allOf_SimpleAccessPolicy'
        StoreFrontServersForHostedReceiver:
          description: |-
            List of StoreFront server addresses to configure within hosted
            receivers that are delivered from the delivery group.
            CHANGE: was
            public string[] StoreFronts
          items:
            $ref: '#/components/schemas/StoreFrontServerResponseModel'
          title: "StoreFrontServerResponseModel[]"
          type: array
        TimeZone:
          description: The time zone in which this delivery group's machines reside.
          type: string
        TotalApplicationGroups:
          description: Total number of application groups associated with the delivery
            group.
          format: int32
          type: integer
        TotalMachines:
          description: Total number of machines in the delivery group.
          format: int32
          type: integer
        TurnOnAddedMachines:
          description: |-
            Whether to attempt to power on machines when they are added
            to the delivery group.
            was TurnOnAddedMachine
          type: boolean
        UnassignedMachines:
          description: Number of unassigned machines in the delivery group.
          format: int32
          type: integer
        UsedByGroupPolicy:
          description: Check if desktop group is used by group policy.
          type: boolean
        VdaVersions:
          description: |-
            List of the versions, and count of each version, of VDAs within the delivery group.
            CHANGE: was
            public IDictionary<string,int> VdaVersions { get; set; }
          items:
            $ref: '#/components/schemas/NameValueIntPairModel'
          title: "NameValueIntPairModel[]"
          type: array
        ZonePreferences:
          description: |-
            Ordered list of zone preferences to be applied when launching
            resources from this delivery group.
          items:
            $ref: '#/components/schemas/ZonePreference'
          title: "ZonePreference[]"
          type: array
        LimitSecondsToForceLogOffUserDuringPeak:
          description: |-
            Represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging to
            the delivery group are logged off, during peak time.
          format: int32
          type: integer
        LimitSecondsToForceLogOffUserDuringOffPeak:
          description: |-
            Represents the number of seconds that must elapsed before
            the active sessions on the draining machines belonging
            to the delivery group are logged off, during off-peak.
          format: int32
          type: integer
        RestrictAutoscaleMinIdleUntaggedPercentDuringPeak:
          description: |-
            Represents the percentage that the number of untagged single-session machines
            in an idle state, or for multi-session machines, the untagged available
            load capacity must fall below before Autoscale powers on and manages 'tagged'
            machines, as per policy, in peak time. If the number of untagged machines in
            an idle state, or the untagged available load capacity goes above this threshold value,
            Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          type: integer
        RestrictAutoscaleMinIdleUntaggedPercentDuringOffPeak:
          description: |-
            Represents the percentage that the number of untagged single-session machines in an idle state,
            or for multi-session machines, the untagged available load capacity must fall below
            before Autoscale powers on and manages 'tagged' machines, as per policy, in off-peak.
            If the number of untagged machines in an idle state, or the untagged available load capacity
            goes above this threshold value, Autoscale will attempt to shut down 'tagged' machines.
          format: int32
          type: integer
        LogOffWarningMessage:
          description: |-
            The warning message to display to users in active sessions prior to logging off users,
            whether in peak time or off-peak.
          type: string
        LogOffWarningTitle:
          description: The title of the warning message dialog.
          type: string
        AutoscaleLogOffReminderEnabled:
          description: |-
            Boolean value indicating whether the warning messages should be
            sent on an interval to nudge a logoff
            should be sent on an interval when autoscale is enabled.
          type: boolean
        AutoscaleLogOffReminderIntervalSecondsOffPeak:
          description: |-
            Represents the time interval at which messages are  sent to the user during off peak time
            when Autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          type: integer
        AutoscaleLogOffReminderIntervalSecondsPeak:
          description: |-
            Represents the time interval at which messages are  sent to the user during peak time
            when autoscale is enabled.
            This message will nudge users to log off instead of forcibly logging them off.
          format: int32
          type: integer
        AutoscaleLogOffReminderMessage:
          description: |-
            Notification message to display to users in active sessions
            belonging to machines needed by Autoscale for shutdown.
          type: string
        AutoscaleLogOffReminderTitle:
          description: |-
            Notification message dialog title displayed
            when Autoscale issues a logoff reminder request.
          type: string
      required:
      - DesktopsInUse
      - DesktopsNeverRegistered
      - DesktopsPreparing
      - MachineOperatingSystems
      - MachineType
      - MachinesInMaintenanceMode
      - OffMachines
      - RegisteredMachines
      - SecureIcaRequired
      - TotalApplicationGroups
      - TotalMachines
      type: object
      example: null
    DeliveryGroupSearchRequestModel_SortCriteria:
      allOf:
      - $ref: '#/components/schemas/DeliveryGroupSortCriteriaRequestModel'
      description: Sort criteria for the results.
      type: object
    DeliveryGroupTestResponseModel_DeliveryGroup:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The delivery group upon which the test was run.
      type: object
    DesktopResponseModel_RestrictToTag:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        Optional tag that may be used further to restrict which
        desktops may be made accessible to a user.
      type: object
    EditApplicationRequestModel_InstalledAppProperties:
      allOf:
      - $ref: '#/components/schemas/EditInstalledAppRequestModel'
      description: |-
        Properties of applications that are installed on servers
        or clients.
        If not specified, none of the installed app properties will be changed.
      type: object
    EditApplicationRequestModel_AppVAppProperties:
      allOf:
      - $ref: '#/components/schemas/AppVAppRequestModel'
      description: |-
        Properties of applications that are delivered via App-V.
        If not specified, none of the App-V app properties will be changed.
        If specified, ALL App-V properties must be specified.
      type: object
    EditHypervisorAWSConnectionRequestModel_allOf:
      properties:
        ApiKey:
          description: |-
            The API key used to authenticate with the AWS APIs.  Optional.  If
            not specified, will not be changed.  If specified, the
            SecretKey must also be specified.
          maxLength: 64
          pattern: (.*)*
          type: string
        SecretKey:
          description: |-
            The secret key used to authenticate with the AWS APIs.  Optional.
            Must be specified in the format indicated by
            SecretKeyFormat.
          maxLength: 64
          pattern: (.*)*
          type: string
        SecretKeyFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the SecretKey.  Only used if
            SecretKey is specified.  Default is
            PlainText.
          type: object
        MaximumConcurrentProvisioningOperations:
          description: |-
            Maximum number of concurrent AWS provisioning operations.
            Optional.  If not specified, will not be changed.
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      type: object
      example: null
    EditHypervisorAzureConnectionRequestModel_allOf:
      properties:
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.  Optional.  If not specified, will not be changed.  If
            specified, then ApplicationSecret must also be
            specified.
          maxLength: 36
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ApplicationSecret:
          description: |-
            The Application Secret of the service principal used to access the
            Azure APIs.  Optional.  If not specified, will not be changed.  If
            specified, must in the format indicated by
            ApplicationSecretFormat.
          maxLength: 20480
          type: string
        ApplicationSecretFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ApplicationSecret.  Only used if
            ApplicationSecret is specified.  Default is
            PlainText.
          type: object
        CustomProperties:
          description: The properties of host connection that are specific to the
            target hosting infrastructure.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
      type: object
      example: null
    EditHypervisorGCPConnectionRequestModel_allOf:
      properties:
        ServiceAccountId:
          description: |-
            The service account ID used to access the Google Cloud APIs.
            Optional.  If not specified, will not be changed.  If specified,
            ServiceAccountCredentials must also be specified.
          maxLength: 512
          pattern: (.*)*
          type: string
        ServiceAccountCredentials:
          description: |-
            the JSON-encoded service account credentials used to access the
            Google Cloud APIs.  Optional.  If not specified, will not be
            changed.  If specified, must be in the format indicated by
            ServiceAccountCredentialsFormat.
          maxLength: 2147483647
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialsFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredentials.  Only used if
            ServiceAccountCredentials are specified.  Default is
            PlainText.
          type: object
      type: object
      example: null
    EditHypervisorOciConnectionRequestModel_allOf:
      properties:
        ServiceAccountId:
          description: |-
            The service account ID used to access the Oracle Cloud Infrastructure APIs.
            Required.
          maxLength: 128
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountCredential:
          description: |-
            The private key string to access the Oracle Cloud Infrastructure APIs.
            Required. Must be specified in the format
            indicated by ServiceAccountCredentialFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredential.  Default is
            PlainText.
          type: object
        ServiceAccountFingerprint:
          description: The fingerprint of the public key associate with the ServiceAccountCredential.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
      required:
      - ServiceAccountCredential
      - ServiceAccountFingerprint
      - ServiceAccountId
      type: object
      example: null
    EditHypervisorResourcePoolAWSOrGcpRequestModel_allOf:
      description: |-
        Edit an AWS or GCP hypervisor resource pool.  Note that in previous versions of
        the API, a "resource pool" was known as a "hosting unit".
      properties:
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      type: object
      example: null
    EditHypervisorResourcePoolAzureRequestModel_allOf:
      description: |-
        Edit an Azure hypervisor resource pool.  Note that in previous versions of
        the API, a "resource pool" was known as a "hosting unit".
      properties:
        Subnets:
          description: |-
            Path to the subnet(s) that are available for provisioning operations
            in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      type: object
      example: null
    EditHypervisorResourcePoolTraditionalRequestModel_allOf:
      properties:
        Storage:
          description: |-
            Path to the storage resource(s) that are available for provisioning
            operations in this resource pool.
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        TemporaryStorage:
          description: |-
            Path to the storage resource(s) that are used for temporary
            operations in this resource pool.
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        PersonalvDiskStorage:
          description: |-
            Path to the personal virtual disk storage resource(s).
            Optional; if not specified, will not be changed.  If any storage is
            specified, all desired storage must be listed.  Any storage that was
            previously used for the resource pool, but not listed during an edit
            operation, will be removed.
            Note that removing storage from the resource pool will permanently
            disable the ability to update or rollback machines that are
            provisioned using that storage.  Therefore, removal of storage
            should _only_ be done when the storage is terminally broken or is
            being replaced.
          items:
            $ref: '#/components/schemas/HypervisorResourcePoolStorageRequestModel'
          title: "HypervisorResourcePoolStorageRequestModel[]"
          type: array
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
        UseLocalStorageCaching:
          description: |-
            Indicates whether local storage on the hypervisor will be used for
            caching purposes. Not all hypervisor types support this.  Defaults
            to `false`.
          type: boolean
        Networks:
          description: |-
            Path to the network resource(s) that are available for provisioning
            operations in this resource pool.  At least one is required.
          items:
            type: string
          type: array
      type: object
      example: null
    EditHypervisorTraditionalConnectionRequestModel_allOf:
      properties:
        UserName:
          description: |-
            Hypervisor user name.  Optional.  If not specified, will not be
            changed.  If specified, Password must also be
            specified.
          maxLength: 256
          pattern: (.*)*
          type: string
        Password:
          description: |-
            Hypervisor password.  Optional.  If specified, must be in the format
            indicated by PasswordFormat.
          maxLength: 20480
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Only used if
            Password is specified.  Default is
            PlainText.
          type: object
        Addresses:
          description: |-
            Hypervisor address(es).  Optional.  If not specified, will not be
            changed.
          items:
            type: string
          type: array
        SslThumbprints:
          description: |-
            SSL certificate thumbprints to consider acceptable for this
            connection.  Optional.  If not specified, will not be changed.  To
            remove previously specified values, specify an empty array (`[]`).
          items:
            type: string
          type: array
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
      required:
      - Addresses
      type: object
      example: null
    EditHypervisorWOLConnectionRequestModel_allOf:
      properties:
        SccmWakeUpProxy:
          description: |-
            Specifies whether to use Microsoft System Center Configuration
            Manager 2012 SP1 Wake-up Proxy for power management.  Optional.  If
            not specified, will not be changed.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/components/schemas/WakeOnLanTransmission'
          description: |-
            Specifies the Wake on LAN packet transmission method to use for
            power management.
          type: object
      type: object
      example: null
    ErrorData_ErrorReport:
      allOf:
      - $ref: '#/components/schemas/ErrorReport'
      description: The error report for uploading to CER.
      type: object
    HypervisorAvailabilityZoneResourceResponseModel_allOf:
      properties:
        SupportsSecurityGroups:
          description: Indicates whether this zone supports the use of security groups
            for isolation.
          type: boolean
      required:
      - SupportsSecurityGroups
      type: object
      example: null
    HypervisorAWSConnectionDetailRequestModel_allOf:
      properties:
        ApiKey:
          description: The API key used to authenticate with the AWS APIs.  Required.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        SecretKey:
          description: |-
            The secret key used to authenticate with the AWS APIs.  Required.
            Must be specified in the format indicated by
            SecretKeyFormat.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        SecretKeyFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the SecretKey.  Default is
            PlainText.
          type: object
        Region:
          description: |-
            AWS region to connect to.  Optional.  If not specified, will connect
            to the global AWS APIs.  This can be used to discover the regions
            available within AWS.  Access to all other AWS resources requires
            the region to be set explicitly.
          maxLength: 16
          pattern: (.*)*
          type: string
      required:
      - ApiKey
      - SecretKey
      type: object
      example: null
    HypervisorAzureConnectionDetailRequestModel_allOf:
      properties:
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ApplicationSecret:
          description: |-
            The Application Secret of the service principal used to access the
            Azure APIs.  Required. Must be specified in the format indicated by
            ApplicationSecretFormat.
          maxLength: 20480
          minLength: 1
          type: string
        ApplicationSecretFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ApplicationSecret.  Default is
            PlainText.
          type: object
        SubscriptionId:
          description: Azure subscription ID.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        ActiveDirectoryId:
          description: Azure active directory ID.  Required.
          maxLength: 36
          minLength: 1
          pattern: "^([0-9A-Fa-f]{8}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{4}[-][0-9A-Fa-f]{12})$"
          type: string
        Environment:
          allOf:
          - $ref: '#/components/schemas/AzureEnvironment'
          description: |-
            Azure environment.  Optional.  Default is
            AzureCloud.
          type: object
        ManagementEndpoint:
          description: |-
            Azure management endpoint.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        AuthenticationAuthority:
          description: |-
            Azure authentication authority.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        StorageSuffix:
          description: |-
            Azure storage suffix.  Required if
            Environment is Custom.
            Optional otherwise.
          maxLength: 2083
          pattern: (.*)*
          type: string
        CustomProperties:
          description: The properties of host connection that are specific to the
            target hosting infrastructure.
          maxLength: 1024
          pattern: ((.|\n)*)
          type: string
      required:
      - ActiveDirectoryId
      - ApplicationId
      - ApplicationSecret
      - SubscriptionId
      type: object
      example: null
    HypervisorCloudRegionResourceResponseModel_allOf:
      properties:
        Endpoint:
          description: The API address with the region.
          type: string
      type: object
      example: null
    HypervisorDetailAWSResponseModel_allOf:
      properties:
        ApiKey:
          description: The API key used to authenticate with the AWS APIs.
          minLength: 1
          type: string
        Region:
          description: The AWS region which the hypervisor represents.
          minLength: 1
          type: string
        MaximumConcurrentProvisioningOperations:
          description: AWS maximum concurrent provisioning operations.
          format: int32
          type: integer
      required:
      - ApiKey
      - Region
      type: object
      example: null
    HypervisorDetailAzureResponseModel_allOf:
      properties:
        ApplicationId:
          description: |-
            Application ID of the service principal used to access the Azure
            APIs.
          minLength: 1
          type: string
        SubscriptionId:
          description: Azure subscription ID.
          minLength: 1
          type: string
        ActiveDirectoryId:
          description: Azure active directory ID.
          minLength: 1
          type: string
        Environment:
          allOf:
          - $ref: '#/components/schemas/AzureEnvironment'
          description: Azure environment.
          type: object
        ManagementEndpoint:
          description: Azure management endpoint.
          minLength: 1
          type: string
        AuthenticationAuthority:
          description: Azure authentication authority.
          minLength: 1
          type: string
        StorageSuffix:
          description: Azure storage suffix.
          minLength: 1
          type: string
      required:
      - ActiveDirectoryId
      - ApplicationId
      - AuthenticationAuthority
      - Environment
      - ManagementEndpoint
      - StorageSuffix
      - SubscriptionId
      type: object
      example: null
    HypervisorDetailGCPResponseModel_allOf:
      properties:
        ServiceAccountId:
          description: The service account ID used to access the Google Cloud APIs.
          minLength: 1
          type: string
      required:
      - ServiceAccountId
      type: object
      example: null
    HypervisorDetailOciResponseModel_allOf:
      properties:
        TenancyOcid:
          description: |-
            Oracle Cloud Infrastructure tenancy to connect to.
            Required.
          minLength: 1
          type: string
        OciRegion:
          description: The region of Oracle Cloud Infrastructure.
          minLength: 1
          type: string
        ServiceAccountId:
          description: The service account ID used to access the Oracle Cloud Infrastructure
            APIs.
          minLength: 1
          type: string
        OciEnvironment:
          description: "The environment of Oracle Cloud Infrastructure, Commercial\
            \ or Government."
          minLength: 1
          type: string
        Fingerprint:
          description: The fingerprint of Oracle Cloud Infrastructure API key.
          minLength: 1
          type: string
      required:
      - Fingerprint
      - OciEnvironment
      - OciRegion
      - ServiceAccountId
      - TenancyOcid
      type: object
      example: null
    HypervisorDetailResponseModel_allOf:
      properties:
        Capabilities:
          description: List of capabilities supported by the hypervisor.
          items:
            type: string
          type: array
        ConfigurationObjectCapabilities:
          description: |-
            List of configuration capabilities supported by each type of object
            on the hypervisor.
          items:
            $ref: '#/components/schemas/HypervisorConfigurationObjectCapability'
          title: "HypervisorConfigurationObjectCapability[]"
          type: array
        PluginRevision:
          description: Revision of the plugin in use.
          minLength: 1
          type: string
        MaxAbsoluteActiveActions:
          description: |-
            Maximum number of actions that can execute in parallel on the
            hypervisor.
          format: int32
          type: integer
        MaxAbsoluteNewActionsPerMinute:
          description: |-
            Maximum number of actions that can be started on the hypervisor
            per-minute.
          format: int32
          type: integer
        MaxPowerActionsPercentageOfMachines:
          description: |-
            Maximum percentage of machines on the hypervisor which can have
            their power state changed simultaneously.
          format: int32
          type: integer
        ConnectionOptions:
          description: Connection options to use for the hypervisor.
          minLength: 1
          type: string
        SupportsLocalStorageCaching:
          description: Indicates whether the hypervisor supports local storage caching.
          type: boolean
        SupportsPvsVms:
          description: Indicates whether the hypervisor supports PVS VMs.
          type: boolean
        Metadata:
          description: Metadata for hypervisor connections.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
      required:
      - Capabilities
      - ConfigurationObjectCapabilities
      - ConnectionOptions
      - ConnectionType
      - MaxAbsoluteActiveActions
      - MaxAbsoluteNewActionsPerMinute
      - MaxPowerActionsPercentageOfMachines
      - PluginRevision
      - SupportsLocalStorageCaching
      - SupportsPvsVms
      type: object
      example: null
    HypervisorDetailTraditionalResponseModel_allOf:
      properties:
        SslThumbprints:
          description: |-
            SSL thumbprints considered acceptable for the SSL certificate
            presented by the hypervisor.
          items:
            type: string
          type: array
        UserName:
          description: |-
            The user name for the credentials used to communicate with the
            hypervisor.
          minLength: 1
          type: string
      required:
      - UserName
      type: object
      example: null
    HypervisorDetailWOLResponseModel_allOf:
      properties:
        SccmWakeUpProxy:
          description: |-
            Indicates whether Microsoft System Center Configuration Manager 2012
            SP1 Wake-up Proxy is used for power management.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/components/schemas/WakeOnLanTransmission'
          description: |-
            Indicates the Wake on LAN packet transmission method to use for
            power management.
          type: object
      required:
      - SccmWakeUpProxy
      - WakeOnLanPackets
      type: object
      example: null
    HypervisorGCPConnectionDetailRequestModel_allOf:
      properties:
        ServiceAccountId:
          description: |-
            The service account ID used to access the Google Cloud APIs.
            Required.
          maxLength: 512
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountCredentials:
          description: |-
            the JSON-encoded service account credentials used to access the
            Google Cloud APIs.  Required. Must be specified in the format
            indicated by ServiceAccountCredentialsFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialsFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredentials.  Default is
            PlainText.
          type: object
      required:
      - ServiceAccountCredentials
      - ServiceAccountId
      type: object
      example: null
    HypervisorGpuTypeResourceResponseModel_allOf:
      properties:
        Enabled:
          description: Indicates whether the GPU type is enabled on the hypervisor.
          type: boolean
        FrameBufferSizeMB:
          description: Frame Buffer Size in MB
          format: int32
          type: integer
        HasDedicatedResource:
          description: Indicates whether the GPU type has resources dedicated to it.
          type: boolean
      required:
      - Enabled
      - FrameBufferSizeMB
      - HasDedicatedResource
      type: object
      example: null
    HypervisorMachineCatalogResponseModel_allOf:
      description: Machine catalog related to a hypervisor or resource pool.
      properties:
        NumProvisionedMachines:
          description: Number of machines from the catalog that are provisioned on
            the hypervisor or resource pool.
          format: int32
          type: integer
      type: object
      example: null
    HypervisorOciConnectionDetailRequestModel_allOf:
      properties:
        TenancyOcid:
          description: |-
            Oracle Cloud Infrastructure tenancy to connect to.
            Required.
          maxLength: 128
          minLength: 1
          pattern: (.*)*
          type: string
        Region:
          description: |-
            Oracle Cloud Infrastructure region to connect to.
            Required.
          maxLength: 32
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountId:
          description: |-
            The service account ID used to access the Oracle Cloud Infrastructure APIs.
            Required.
          maxLength: 128
          minLength: 1
          pattern: (.*)*
          type: string
        ServiceAccountCredential:
          description: |-
            The private key string to access the Oracle Cloud Infrastructure APIs.
            Required. Must be specified in the format
            indicated by ServiceAccountCredentialFormat.
          maxLength: 2147483647
          minLength: 1
          pattern: ((.|\n)*)
          type: string
        ServiceAccountCredentialFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the ServiceAccountCredential.  Default is
            PlainText.
          type: object
        ServiceAccountFingerprint:
          description: The fingerprint of the public key associate with the ServiceAccountCredential.
          maxLength: 64
          minLength: 1
          pattern: (.*)*
          type: string
        OciEnvironment:
          allOf:
          - $ref: '#/components/schemas/OciEnvironment'
          description: |-
            OCI environment.  Optional.  Default is
            Commercial.
          type: object
      required:
      - Region
      - ServiceAccountCredential
      - ServiceAccountFingerprint
      - ServiceAccountId
      - TenancyOcid
      type: object
      example: null
    HypervisorResourcePoolAWSDetailResponseModel_allOf_VirtualPrivateCloud:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: |-
        AWS Virtual Private Cloud (VPC) which the resource pool is connected
        to.
      type: object
    HypervisorResourcePoolAWSDetailResponseModel_allOf_AvailabilityZone:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Availability zone.
      type: object
    HypervisorResourcePoolAWSDetailResponseModel_allOf:
      properties:
        VirtualPrivateCloud:
          $ref: '#/components/schemas/HypervisorResourcePoolAWSDetailResponseModel_allOf_VirtualPrivateCloud'
        AvailabilityZone:
          $ref: '#/components/schemas/HypervisorResourcePoolAWSDetailResponseModel_allOf_AvailabilityZone'
        Networks:
          description: List of networks that may be used within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
      required:
      - AvailabilityZone
      - Networks
      - VirtualPrivateCloud
      type: object
      example: null
    HypervisorResourcePoolAzureDetailResponseModel_allOf_Region:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Azure region which the resource pool is connected to.
      type: object
    HypervisorResourcePoolAzureDetailResponseModel_allOf_VirtualNetwork:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Azure virtual network which the resource pool is connected to.
      type: object
    HypervisorResourcePoolAzureDetailResponseModel_allOf:
      properties:
        Region:
          $ref: '#/components/schemas/HypervisorResourcePoolAzureDetailResponseModel_allOf_Region'
        VirtualNetwork:
          $ref: '#/components/schemas/HypervisorResourcePoolAzureDetailResponseModel_allOf_VirtualNetwork'
        Subnets:
          description: |-
            List of subnets in the VirtualNetwork that may be used
            within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
      required:
      - Region
      - Subnets
      - VirtualNetwork
      type: object
      example: null
    HypervisorResourcePoolDetailResponseModel_allOf:
      properties:
        GpuTypes:
          description: |-
            GPU types available in the resource pool.  Only applicable to
            hypervisors that support GPU types.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
        UsesExplicitStorage:
          description: If the hypervisor resource pool use ExplicitStorage.
          type: boolean
        Metadata:
          description: 'Metadata for hypervisor resource pool. '
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
      required:
      - ConnectionType
      type: object
      example: null
    HypervisorResourcePoolGcpDetailResponseModel_allOf_Project:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Google Cloud Platform project which the resource pool is connected
        to.
      type: object
    HypervisorResourcePoolGcpDetailResponseModel_allOf_Region:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Google Cloud Platform region which the resource pool is connected
        to.
      type: object
    HypervisorResourcePoolGcpDetailResponseModel_allOf_VirtualPrivateCloud:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Google Cloud Platform virtual network which the resource pool is
        connected to.
      type: object
    HypervisorResourcePoolGcpDetailResponseModel_allOf:
      properties:
        Project:
          $ref: '#/components/schemas/HypervisorResourcePoolGcpDetailResponseModel_allOf_Project'
        Region:
          $ref: '#/components/schemas/HypervisorResourcePoolGcpDetailResponseModel_allOf_Region'
        VirtualPrivateCloud:
          $ref: '#/components/schemas/HypervisorResourcePoolGcpDetailResponseModel_allOf_VirtualPrivateCloud'
        Networks:
          description: |-
            List of networks in the VirtualPrivateCloud that may be used
            within the resource pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
      required:
      - Networks
      - Project
      - Region
      - VirtualPrivateCloud
      type: object
      example: null
    HypervisorResourcePoolRefResponseModel_allOf_Hypervisor:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Hypervisor on which the resource pool resides.
      type: object
    HypervisorResourcePoolRefResponseModel_allOf:
      description: |-
        Reference to a hypervisor resource pool, AKA "HostingUnit". To
        dereference and access the details about the resource pool, use
        GetHypervisorResourcePool
        with Hypervisor.Id
        and Id path parameters.
      properties:
        FullRelativePath:
          description: |-
            Full path to the resources within the resource pool, including the hypervisor, relative to
            the root of the API.
            Example: `Hypervisors/{{hypervisor id}}/ResourcePools/{{resource pool id}}/Resources`
          minLength: 1
          type: string
        Hypervisor:
          $ref: '#/components/schemas/HypervisorResourcePoolRefResponseModel_allOf_Hypervisor'
      required:
      - FullRelativePath
      - Hypervisor
      type: object
      example: null
    HypervisorResourcePoolResponseModel_allOf_HypervisorConnection:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The hypervisor connection associated with this resource pool.
      type: object
    HypervisorResourcePoolResponseModel_allOf_DefaultNetwork:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Default network to use for VMs provisioned using the resource pool.
      type: object
    HypervisorResourcePoolResponseModel_allOf:
      description: Pool of resources available on a hypervisor.
      properties:
        HypervisorConnection:
          $ref: '#/components/schemas/HypervisorResourcePoolResponseModel_allOf_HypervisorConnection'
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
        DefaultNetwork:
          $ref: '#/components/schemas/HypervisorResourcePoolResponseModel_allOf_DefaultNetwork'
        VMTaggingEnabled:
          description: |-
            Indicates whether new virtual machines are tagged with metadata from
            the hypervisor.
          type: boolean
        ResourcePoolRootPath:
          description: Hypervisor resourcePool RootPath.
          type: string
        ResourcePoolRootId:
          description: Hypervisor resourcePool RootId.
          type: string
      required:
      - ConnectionType
      - DefaultNetwork
      - HypervisorConnection
      - VMTaggingEnabled
      type: object
      example: null
    HypervisorResourcePoolTestResponseModel_ResourcePool:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The resource pool upon which the test was run.
      type: object
    HypervisorResourcePoolTraditionalDetailResponseModel_allOf_RootPath:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: |-
        Root resource path, within the full set of hypervisor resources, in
        which the resource pool resides.
      type: object
    HypervisorResourcePoolTraditionalDetailResponseModel_allOf:
      properties:
        RootPath:
          $ref: '#/components/schemas/HypervisorResourcePoolTraditionalDetailResponseModel_allOf_RootPath'
        Networks:
          description: List of networks that are allowed to be used within the resource
            pool.
          items:
            $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
          title: "HypervisorResourceRefResponseModel[]"
          type: array
        Storage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for OS disks of virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        TemporaryStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for temporary data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
        UseLocalStorageCaching:
          description: |-
            Indicates whether virtual machines created within this resource pool
            will use local storage caching for their disk images.
          type: boolean
        CustomProperties:
          description: |-
            Custom properties.  Optional.  If not specified, will not be
            changed.  Only used for hypervisors of type
            Custom.
          type: string
        PersonalvDiskStorage:
          description: |-
            List of hypervisor-connected storage in the resource pool that is
            used for personal v disk data storage for virtual machines.
          items:
            $ref: '#/components/schemas/HypervisorStorageResourceResponseModel'
          title: "HypervisorStorageResourceResponseModel[]"
          type: array
      required:
      - Networks
      - Storage
      - TemporaryStorage
      type: object
      example: null
    HypervisorResourceRefResponseModel_allOf_ResourceContainer:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Container in which the resource resides.
      type: object
    HypervisorResourceRefResponseModel_allOf:
      description: Hypervisor resource reference.
      properties:
        RelativePath:
          description: |-
            Path to the object, relative to the resource pool from which
            it was queried.
            `{{vm name}}.vm/{{snapshot name}}.snapshot`
          type: string
        FullRelativePath:
          description: |-
            Full path to the resource, including the hypervisor, relative to
            the root of the API.
            Example: `Hypervisors/{{hypervisor id}}/ResourcePools/{{resource pool id}}/Resources/{{RelativePath}}`
          type: string
        ResourceType:
          description: Type of resource.
          type: string
        ObjectTypeName:
          description: The type name of the hypervisor resource object.
          type: string
        ResourceContainer:
          $ref: '#/components/schemas/HypervisorResourceRefResponseModel_allOf_ResourceContainer'
        ResourcePoolXDPath:
          description: "Citrix Apps and Desktops path to the resource\non the ResourcePool.\
            \  An example value is:\n`XDHyp:\\HostingUnits\\{{resource pool name}}\\\
            {{resource name}}.{{resource type}}`\nThis value "
          type: string
      type: object
      example: null
    HypervisorResourceResponseModel_allOf_ResourcePool:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolRefResponseModel'
      description: Resource pool from which this resource was queried.
      type: object
    HypervisorResourceResponseModel_allOf:
      properties:
        FullName:
          description: |-
            Name of the resource, with the type concatenated.
            i.e. "name.type".
          minLength: 1
          type: string
        IsContainer:
          description: Indicates whether the resource is a container.
          type: boolean
        Children:
          description: "Child resources, when the resource is a container."
          items:
            $ref: '#/components/schemas/HypervisorResourceResponseModel'
          title: "HypervisorResourceResponseModel[]"
          type: array
        IsMachine:
          description: Indicates whether the resource is a machine.
          type: boolean
        IsSnapshotable:
          description: Indicates whether the resource can have a snapshot taken.
          type: boolean
        AllResourcesRelativePath:
          description: |-
            Path to the resource, relative to the special "AllResources"
            resource pool associated with the hypervisor.
          minLength: 1
          type: string
        ResourcePool:
          $ref: '#/components/schemas/HypervisorResourceResponseModel_allOf_ResourcePool'
        IsSymLink:
          description: Indicates whether the object is a valid symbolic link.
          type: boolean
        AdditionalData:
          description: Additional data about the object in the form of key-value pairs.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ResourceType:
          description: Type of resource.
          minLength: 1
          type: string
      required:
      - AllResourcesRelativePath
      - FullName
      - IsContainer
      - IsMachine
      - IsSnapshotable
      - IsSymLink
      - ResourcePool
      - ResourceType
      type: object
      example: null
    HypervisorResourceValidationResponseModel_ResourceRef:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: |-
        The resource reference. Only the attibute FullRelativePath
        is populated in response.
      type: object
    HypervisorResponseModel_allOf_Zone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Zone which the hypervisor is associated with.
      type: object
    HypervisorResponseModel_allOf_Fault:
      allOf:
      - $ref: '#/components/schemas/HypervisorFaultResponseModel'
      description: Hypervisor fault state info.
      type: object
    HypervisorResponseModel_allOf:
      description: Response object for a hypervisor.
      properties:
        ConnectionType:
          allOf:
          - $ref: '#/components/schemas/HypervisorConnectionType'
          description: Type of hypervisor
          type: object
        Addresses:
          description: |-
            Addresses that can be used to contact the required hypervisor. All the
            addresses are considered equivalent, that is, all of the addresses
            provide access to the same virtual machines, snapshots, network, and
            storage.
          items:
            type: string
          type: array
        InMaintenanceMode:
          description: |-
            Indicates whether the hypervisor is in maintenance mode, which disables
            all communication between XenApp & XenDesktop and the Hypervisor.
          type: boolean
        Unentitled:
          description: Indicates whether is UnEntitled.
          type: boolean
        PluginId:
          description: |-
            The class name for the Citrix Managed Machine library that is used to access
            the hypervisor.
          minLength: 1
          type: string
        Scopes:
          description: |-
            The list of administrative scopes that the connection is a part of.
            The scopes control which administrators are able to work with the
            connection.
          items:
            $ref: '#/components/schemas/ScopeResponseModel'
          title: "ScopeResponseModel[]"
          type: array
        Tenants:
          description: |-
            The tenant(s) that the hypervisor is assigned to.  If `null`, the
            hypervisor is not assigned to tenants, and may be used by any
            tenant, including future added tenants.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        UsesCloudInfrastructure:
          description: Indicates whether the hypervisor uses cloud infrastructure.
          type: boolean
        Zone:
          $ref: '#/components/schemas/HypervisorResponseModel_allOf_Zone'
        Fault:
          $ref: '#/components/schemas/HypervisorResponseModel_allOf_Fault'
        CustomProperties:
          description: CustomProperties of hypervisor connection
          type: string
        Uid:
          description: The broker id.
          format: int32
          type: integer
        IsVirtual:
          description: If this connection is virtual.
          type: boolean
      required:
      - Addresses
      - ConnectionType
      - InMaintenanceMode
      - PluginId
      - Scopes
      - UsesCloudInfrastructure
      - Zone
      type: object
      example: null
    HypervisorsAndResourcePoolsResponseModel_allOf:
      description: |-
        Reference to a HypervisorResponseModel info.
        This class is designed for the UI main view.
      properties:
        DisplayConnectionType:
          description: Hypervisor connection connection type display name.
          minLength: 1
          type: string
        IsBroken:
          description: Indicates whether the hypervisor connection is broken.
          type: boolean
        Errors:
          description: Hypervisor connection broken errors.
          items:
            type: string
          type: array
        ErrorState:
          description: Current hypervisor connection error status.
          minLength: 1
          type: string
        Metadata:
          description: The metadata of hypervisor connections.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        ResourcePools:
          description: Hypervisor resource pools ref response list.
          items:
            $ref: '#/components/schemas/HypervisorBaseResponseModel'
          title: "HypervisorBaseResponseModel[]"
          type: array
      required:
      - DisplayConnectionType
      - ErrorState
      - Errors
      - IsBroken
      type: object
      example: null
    HypervisorSecurityGroupResourceResponseModel_allOf:
      properties:
        Description:
          description: Description of the security group.
          type: string
        EgressRules:
          description: Egress rules governing outbound network traffic.
          items:
            $ref: '#/components/schemas/HypervisorSecurityGroupRuleResponseModel'
          title: "HypervisorSecurityGroupRuleResponseModel[]"
          type: array
        IngressRules:
          description: Ingress rules governing inbound network traffic.
          items:
            $ref: '#/components/schemas/HypervisorSecurityGroupRuleResponseModel'
          title: "HypervisorSecurityGroupRuleResponseModel[]"
          type: array
        VirtualPrivateCloudId:
          description: The identifier of the associated VPC.
          type: string
      required:
      - EgressRules
      - IngressRules
      type: object
      example: null
    HypervisorServerHAAddressesResponseModel_allOf:
      description: Hypervisor Server HA Addresses response model.
      properties:
        HAAddresses:
          description: The HA addresses array.
          items:
            type: string
          type: array
      type: object
      example: null
    HypervisorServiceOfferingResourceResponseModel_allOf:
      properties:
        DedicatedTenancy:
          description: |-
            Indicates whether this service offering prescribes dedicated tenancy for the instances
            that use it.
          type: string
        Description:
          description: |-
            A human-readable description of this service offering, as supplied when the offering was created in the cloud
            management API or console.
          type: string
        MemorySizeMB:
          description: "The amount of memory that is available to instances using\
            \ this service offering, measured in megabytes."
          format: decimal
          title: Decimal
          type: number
        NumberOfCores:
          description: The number of virtual cores that are available to instances
            using this service offering.
          format: decimal
          title: Decimal
          type: number
        AmazonComputeUnits:
          description: |-
            The number of Amazon EC2 compute units that are available to instances using this service offering. This
            property is only meaningful for EC2-based cloud connections.
          format: decimal
          title: Decimal
          type: number
        OptimizedForPooledDesktops:
          description: |-
            Indicates whether this service offering is intended specifically for usage with pooled
            desktops.
          type: boolean
        NetworkPerformance:
          description: The network performance available to instances using this service
            offering.
          type: string
        NetworkPerformanceIsUnlimited:
          description: Indicates whether this service offering has no limit for it's
            network rate.
          type: boolean
        NetworkPerformanceIsDefault:
          description: Indicates whether this service offering has a default limit
            for it's network rate.
          type: boolean
        IsUsedInSite:
          description: Indicates whether the service offering is used by any machine
            catalogs in the site.
          type: boolean
        SupportsAzurePremiumStorage:
          description: |-
            Indicates whether the service offering supports premium storage.
            This property is only meaningful on Azure.
          type: boolean
      required:
      - IsUsedInSite
      - MemorySizeMB
      - NetworkPerformanceIsDefault
      - NetworkPerformanceIsUnlimited
      - NumberOfCores
      - OptimizedForPooledDesktops
      type: object
      example: null
    HypervisorStorageResourceResponseModel_allOf:
      properties:
        Superseded:
          description: |-
            Indicates whether storage has been superseded.  Superseded storage
            may be used for existing virtual machines, but is not used when
            provisioning new virtual machines.
          type: boolean
      required:
      - Superseded
      type: object
      example: null
    HypervisorTemplateResourceResponseModel_allOf:
      description: Cloud-based machine template.
      properties:
        Owner:
          description: The account ID for the owner of this template.
          type: string
        IsWindowsTemplate:
          description: "Indicates whether this is a Windows OS template, if known."
          type: boolean
        Description:
          description: |-
            Human-readable description of this template, as supplied when the offering was created in the cloud
            management API or console.
          type: string
        HasPersistentRootVolume:
          description: |-
            Indicates whether this template has a persistent root volume (eg. is an EBS-backed image
            on AWS).
          type: boolean
      required:
      - HasPersistentRootVolume
      type: object
      example: null
    HypervisorTestResponseModel_Hypervisor:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The hypervisor upon which the test was run.
      type: object
    HypervisorTraditionalConnectionDetailRequestModel_allOf:
      properties:
        UserName:
          description: Hypervisor user name.  Required.
          maxLength: 256
          minLength: 1
          pattern: (.*)*
          type: string
        Password:
          description: |-
            Hypervisor password.  Required. Must be specified in the format
            indicated by PasswordFormat.
          maxLength: 20480
          minLength: 1
          pattern: "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,}|^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$|(.*)*"
          type: string
        PasswordFormat:
          allOf:
          - $ref: '#/components/schemas/IdentityPasswordFormat'
          description: |-
            Format of the Password.  Default is
            PlainText.
          type: object
        Addresses:
          description: Hypervisor address(es).  At least one is required.
          items:
            type: string
          type: array
        PluginId:
          description: |-
            Custom hypervisor plugin ID.  Required if the
            ConnectionType is
            Custom.  Otherwise must not
            be specified.
          maxLength: 64
          pattern: (.*)*
          type: string
        SslThumbprints:
          description: |-
            SSL certificate thumbprints to consider acceptable for this
            connection.  Optional.  If not specified, and the hypervisor uses
            SSL for its connection, the SSL certificate's root certification
            authority and any intermediate certificates must be trusted.
          items:
            type: string
          type: array
      required:
      - Addresses
      - Password
      - UserName
      type: object
      example: null
    HypervisorVmResourceResponseModel_allOf:
      properties:
        VMId:
          description: "Id of the VM, as defined by the hypervisor."
          minLength: 1
          type: string
        MacAddress:
          description: MAC address of the VM.
          type: string
      required:
      - VMId
      type: object
      example: null
    HypervisorVmSnapshotResourceResponseModel_allOf:
      properties:
        CpuCount:
          description: "Number of CPUs, if known."
          format: int32
          type: integer
        MemoryMB:
          description: "Memory in megabytes, if known."
          format: int32
          type: integer
        HardDiskSizeGB:
          description: "Hard disk size in gigabytes, if known."
          format: int32
          type: integer
        MinMemoryMB:
          description: "Minimum memory required to run this VM or snapshot, in megabytes,\
            \ if known."
          format: int32
          type: integer
        NetworkMappings:
          description: "Network mappings associated with the VM, if known."
          items:
            $ref: '#/components/schemas/NetworkMapResponseModel'
          title: "NetworkMapResponseModel[]"
          type: array
        AttachedDisks:
          description: "Disks attached to the VM, if known."
          items:
            $ref: '#/components/schemas/AttachedDiskResponseModel'
          title: "AttachedDiskResponseModel[]"
          type: array
      type: object
      example: null
    HypervisorVmValidationResponseModel_HypervisorVmResource:
      allOf:
      - $ref: '#/components/schemas/HypervisorVmResourceResponseModel'
      description: Virtual machine info.
      type: object
    HypervisorVmValidationResponseModel_HypervisorConnection:
      allOf:
      - $ref: '#/components/schemas/HypervisorResponseModel'
      description: Response object for a hypervisor.
      type: object
    HypervisorVpcResourceResponseModel_allOf:
      properties:
        InstanceSecurityGroupLimit:
          description: Indicates the maximum number of security groups allowed per
            instance in this VPC
          format: int32
          type: integer
      required:
      - InstanceSecurityGroupLimit
      type: object
      example: null
    HypervisorWOLConnectionDetailRequestModel_allOf:
      properties:
        SccmWakeUpProxy:
          description: |-
            Indicates whether Microsoft System Center Configuration Manager 2012
            SP1 Wake-up Proxy is used for power management.  Optional; default
            is `false`.
          type: boolean
        WakeOnLanPackets:
          allOf:
          - $ref: '#/components/schemas/WakeOnLanTransmission'
          description: "Indicates the Wake on LAN packet transmission method to use\
            \ for\npower management.  Optional; default is "
          type: object
      type: object
      example: null
    IconResponseModel_allOf:
      description: Response object used for icon details.
      properties:
        Id:
          description: Id of the icon.
          minLength: 1
          type: string
        IsBuiltIn:
          description: |-
            Indicates if the icon is built-in (i.e. Citrix-provided).  The built-in icons
            can be used for applications or desktops that don't have their own icons.
          type: boolean
        Uid:
          description: DEPRECATED.  Use Id.
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: Obsolete
      required:
      - Id
      - IsBuiltIn
      type: object
      example: null
    IdentityContainerResponseModel_allOf:
      description: The Container identity object.
      properties:
        Name:
          description: The name of the container.
          type: string
        Type:
          allOf:
          - $ref: '#/components/schemas/IdentityContainerType'
          description: The container type represented in this object.
          type: object
        PropertiesFetched:
          description: Properties fetched and populated in the Container object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
      required:
      - PropertiesFetched
      type: object
      example: null
    IdentityMachineResponseModel_allOf:
      description: The Machine identity object.
      properties:
        SamName:
          description: Fully qualified sAMAccountName of the Machine object (including
            domain).
          type: string
        SamAccountName:
          description: "Unqualified SAM name (Directory property) of the Machine object.\
            \ \nDoes not include the domain. The sAMAccountName is unique within a\
            \ domain."
          type: string
        DnsName:
          description: The full qualified domain name associated with the Machine
            object.
          type: string
        Sid:
          description: The Security Identifier associated with the Machine object.
          type: string
        ServicePrincipalNames:
          description: The service principal names (SPN) associated with the Machine
            object.
          items:
            type: string
          title: IEnumerable`1
          type: array
        IPAddress:
          description: The IP addresses associated with the Machine object.
          items:
            type: string
          type: array
        IPAddressResolveMethod:
          allOf:
          - $ref: '#/components/schemas/IdentityMachineIPAddressResolveMethod'
          description: The method used to resolve the IP address associated with the
            Machine object.
          type: object
        Enabled:
          description: |-
            Indicates whether the Machine object is enabled.
            NOTE that this is opposite of the low-level SDK, which has "IsDisabled".
            By changing to "Enabled" it avoids a confusing double-negative.  It also
            matches all other SDK objects by using "Enabled" rather than "IsEnabled".
          type: boolean
        Locked:
          description: |-
            Indicates whether the Machine object is locked.
            low-level has "IsLocked".
          type: boolean
        PropertiesFetched:
          description: Properties fetched and populated in the Machine object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
      required:
      - PropertiesFetched
      type: object
      example: null
    IdentityUserResponseModel_allOf_Claims:
      allOf:
      - $ref: '#/components/schemas/IdentityClaimsResponseModel'
      description: The universal claims of the user object.
      type: object
    IdentityUserResponseModel_allOf_Directory:
      allOf:
      - $ref: '#/components/schemas/IdentityDirectoryResponseModel'
      description: The directory context of the user object.
      type: object
    IdentityUserResponseModel_allOf:
      description: The User/Group identity object.
      properties:
        DisplayName:
          description: |-
            Display name of the user or group.
            Usually something like "John Q. Doe".
          minLength: 1
          type: string
        SamName:
          description: Fully qualified sAMAccountName of the User or Group object
            (including domain).
          type: string
        SamAccountName:
          description: "Unqualified SAM name (Directory property) of the User or Group\
            \ object. \nDoes not include the domain. The sAMAccountName is unique\
            \ within a domain."
          type: string
        CommonName:
          description: The common name associated with the User or Group object.
          type: string
        PrincipalName:
          description: |-
            The user principal name of a User object.
            The UPN must be unique among all security principal
            objects within the directory forest.
          type: string
        Oid:
          description: The Object Identifier associated with the User or Group object.
          type: string
        Sid:
          description: The Security Identifier associated with the User or Group object.
          type: string
        UserIdentity:
          description: The User Identity.
          type: string
        GroupSids:
          description: Security Identifiers of groups of which the object is a member.
          items:
            type: string
          title: IList`1
          type: array
        DenyOnlySids:
          description: Security Identifiers of resources to which the object is explicitly
            denied access.
          items:
            type: string
          title: IList`1
          type: array
        PasswordCanExpire:
          description: Indicates whether the password can expire on this User object.
          type: boolean
        DaysUntilPasswordExpiry:
          description: Indicates the number of days before the password can expire
            on this User object.
          format: int64
          title: Int64
          type: integer
        IsBuiltIn:
          description: Indicates whether this a built-in object.
          type: boolean
        IsGroup:
          description: Indicates whether this is a User or Group object.
          type: boolean
        Name:
          description: The name of the User or Group object.
          type: string
        StreetAddress:
          description: The street address associated with the User object.
          type: string
        City:
          description: The city associated with the User object.
          type: string
        State:
          description: The state associated with the User object.
          type: string
        Country:
          description: The country associated with the user object.
          type: string
        Mail:
          description: The e-mail address associated with the user object.
          type: string
        TelephoneNumber:
          description: The telephone number associated with the user object.
          type: string
        HomePhone:
          description: The home telephone number associated with the user object.
          type: string
        Mobile:
          description: The mobile telephone number associated with the user object.
          type: string
        Enabled:
          description: |-
            Indicates whether the User object is disabled.
            NOTE that this is opposite of the low-level SDK, which has "IsDisabled".
            By changing to "Enabled" it avoids a confusing double-negative.  It also
            matches all other SDK objects by using "Enabled" rather than "IsEnabled".
          type: boolean
        Locked:
          description: Indicates whether the User object is locked.
          type: boolean
        PropertiesFetched:
          description: Properties fetched and populated in the User or Group object.  This
            is a bitfield indicating the fetched properties.
          title: UInt32
          type: integer
        Claims:
          $ref: '#/components/schemas/IdentityUserResponseModel_allOf_Claims'
        Directory:
          $ref: '#/components/schemas/IdentityUserResponseModel_allOf_Directory'
      required:
      - DisplayName
      - PropertiesFetched
      type: object
      example: null
    ImageRuntimeInfoResponseModel_OperatingSystemInfo:
      allOf:
      - $ref: '#/components/schemas/OperatingSystemInfoResponseModel'
      description: Operating system type
      type: object
    ImageRuntimeInfoResponseModel_SystemManagementInfo:
      allOf:
      - $ref: '#/components/schemas/SystemManagementInfoResponseModel'
      description: System management information
      type: object
    ImageSchemeResponseModel_MachineProfile:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: The machine profile that the scheme uses.
      type: object
    ImageVersionDetailResponseModel_allOf_ImageDefinition:
      allOf:
      - $ref: '#/components/schemas/ImageDefinitionResponseModel'
      description: Image definition info related to this image version.
      type: object
    ImageVersionDetailResponseModel_allOf_ImageScheme:
      allOf:
      - $ref: '#/components/schemas/ImageSchemeResponseModel'
      description: Image scheme info related to this image version.
      type: object
    ImageVersionDetailResponseModel_allOf_VMMetadata:
      allOf:
      - $ref: '#/components/schemas/ProvisioningSchemeVmMetadataResponseModel'
      description: The opaque VM metadata block.
      type: object
    ImageVersionDetailResponseModel_allOf_MasterImage:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: The VM snapshot that the image version uses.
      type: object
    ImageVersionDetailResponseModel_allOf:
      description: Response model for image version details.
      properties:
        ImageDefinition:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_ImageDefinition'
        ImageScheme:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_ImageScheme'
        VMMetadata:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_VMMetadata'
        MasterImage:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_MasterImage'
      required:
      - MasterImage
      type: object
      example: null
    ImageVersionResponseModel_allOf_ImageDefinition:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Image definition info related to this image version.
      type: object
    ImageVersionResponseModel_allOf:
      description: Response object for image version.
      properties:
        ImageDefinition:
          $ref: '#/components/schemas/ImageVersionResponseModel_allOf_ImageDefinition'
        ImageScheme:
          $ref: '#/components/schemas/ImageVersionDetailResponseModel_allOf_ImageScheme'
      type: object
      example: null
    LicenseSummaryResponseModel_LicenseInformation:
      allOf:
      - $ref: '#/components/schemas/LicenseInformationModel'
      description: Overview information of license server and current license.
      type: object
    LogOperationSearchRequestModel_SortCriteria:
      allOf:
      - $ref: '#/components/schemas/LogOperationSortCriteriaRequestModel'
      description: Sort criteria for the results.
      type: object
    MachineAccountCreationRulesResponseModel_Domain:
      allOf:
      - $ref: '#/components/schemas/IdentityDomainResponseModel'
      description: The AD domain for the pool.
      type: object
    MachineAndSessionSearchRequestModel_SortCriteria:
      allOf:
      - $ref: '#/components/schemas/MachineAndSessionSortCriteriaRequestModel'
      description: Sort criteria for the results.
      type: object
    MachineApplicationResponseModel_allOf:
      description: "Application published on, or in use on, a machine."
      properties:
        Published:
          description: Indicates whether the application is published on the machine.
          type: boolean
        InUse:
          description: Indicates whether the application is in use on the machine.
          type: boolean
      type: object
      example: null
    MachineBaseResponseModel_MachineCatalog:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Machine catalog which the machine is a member of.
      type: object
    MachineCatalogDeliveryGroupRefResponseModel_allOf:
      description: Reference from a machine catalog to a delivery group.
      properties:
        Priority:
          description: RemotePC machine allocation priority for delivery group.
          format: int32
          type: integer
        NumAssigned:
          description: Number of machines assigned from the machine catalog into the
            delivery group.
          format: int32
          type: integer
        Total:
          description: Total number of machines in the delivery group.
          format: int32
          type: integer
      required:
      - NumAssigned
      - Total
      type: object
      example: null
    MachineCatalogDetailResponseModel_allOf_HypervisorConnection:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        The hypervisor connection that is associated with the machines in the catalog.
        This property only applies when ProvisioningType is
        MCS OR when
        IsRemotePC is `true` and
        the Remote PCs are configured for power management via a hypervisor.  For other
        provisioning types, machines can be from one or more different hypervisor
        connections.
      type: object
    MachineCatalogDetailResponseModel_allOf_UpgradeDetail:
      allOf:
      - $ref: '#/components/schemas/MachineCatalogUpgradeDetail'
      description: Status detail of last VDA upgrade schedule for this machine catalog.
      type: object
    MachineCatalogDetailResponseModel_allOf:
      description: Response object for machine catalog details.
      properties:
        AgentVersion:
          description: Version of the Citrix Virtual Delivery Agent (VDA) installed
            on the machine.
          type: string
        HypervisorConnection:
          $ref: '#/components/schemas/MachineCatalogDetailResponseModel_allOf_HypervisorConnection'
        OSType:
          description: |-
            A string that can be used to identify the operating system that
            is running on machines in the catalog.
          type: string
        OSVersion:
          description: "A string that can be used to identify the version of the operating\
            \ system running on the machine, if known."
          type: string
        DeliveryGroups:
          description: Delivery groups associated with this catalog.
          items:
            $ref: '#/components/schemas/MachineCatalogDeliveryGroupRefResponseModel'
          title: "MachineCatalogDeliveryGroupRefResponseModel[]"
          type: array
        UpgradeDetail:
          $ref: '#/components/schemas/MachineCatalogDetailResponseModel_allOf_UpgradeDetail'
      required:
      - DeliveryGroups
      type: object
      example: null
    MachineCatalogResponseModel_ProvisioningScheme:
      allOf:
      - $ref: '#/components/schemas/ProvisioningSchemeResponseModel'
      description: Details about how machines in a catalog are provisioned.
      type: object
    MachineCatalogResponseModel_ProvisioningProgress:
      allOf:
      - $ref: '#/components/schemas/ProvisioningProgressResponseModel'
      description: Specifies progress of provisioning for the machine catalog.
      type: object
    MachineCatalogResponseModel_UpgradeInfo:
      allOf:
      - $ref: '#/components/schemas/MachineCatalogUpgradeInfo'
      description: VDA upgrade information the machine catalog is associated with.
      type: object
    MachineCatalogResponseModel_Zone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Zone the machine catalog is associated with.
      type: object
    MachineCatalogTestResponseModel_MachineCatalog:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The machine catalog upon which the test was run.
      type: object
    MachineConfigurationResponseModel_ConfigurationSlot:
      allOf:
      - $ref: '#/components/schemas/ConfigurationSlotResponseModel'
      description: The associated configuration slot.
      type: object
    MachineDetailResponseModel_allOf:
      description: Response model for machine details.
      properties:
        AssignedClientName:
          description: |-
            The name of the endpoint client device that the machine has
            been assigned to.
          type: string
        AssignedIPAddress:
          description: |-
            The IP address of the endpoint client device that the machine
            has been assigned to.
          type: string
        BrowserName:
          description: |-
            Site-wide unique name identifying associated desktop to other components
            (for example StoreFront). This is typically non-null only for machines
            backing assigned private desktops.
          type: string
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: The color depth setting configured on the machine.
          type: object
        IconId:
          description: The machine's icon that is displayed in Receiver.
          type: string
        IsReserved:
          description: |-
            Indicates if machine is reserved for special use, for example for
            AppDisk preparation. A reserved machine cannot be a member of a
            delivery group.
          type: boolean
        LoadIndexes:
          description: |-
            Gives the last reported individual load indexes that were used
            in the calculation of the LoadIndex value. Note that
            the LoadIndex value may have been subsequently
            adjusted due to session brokering operations. This value is only
            set when SessionSupport
            is equal to MultiSession.
          items:
            format: int32
            type: integer
          title: "Int32[]"
          type: array
        SecureIcaRequired:
          description: |-
            Flag indicating whether SecureICA is required or not when starting
            a session on the machine.
          type: boolean
        SessionsEstablished:
          description: |-
            Number of established sessions on this machine.  When
            SessionSupport is equal to
            MultiSession, this excludes
            established sessions which have not yet completed their logon
            processing.
          format: int32
          type: integer
        SessionsPending:
          description: |-
            Number of pending (brokered but not yet established) sessions
            on this machine.  When
            SessionSupport is equal to
            MultiSession, this also includes
            established sessions which have not yet completed their logon
            processing.
          format: int32
          type: integer
        StoreFrontServersForHostedReceiver:
          description: |-
            StoreFront servers to use for Receiver when it is hosted on
            the machine.
          items:
            $ref: '#/components/schemas/StoreFrontServerResponseModel'
          title: "StoreFrontServerResponseModel[]"
          type: array
        VMToolsState:
          allOf:
          - $ref: '#/components/schemas/VMToolsState'
          description: State of the hypervisor tools present on the VM (if any).
          type: object
        FailureReason:
          description: Failure reason of power action.
          type: string
      required:
      - IsReserved
      - SessionsEstablished
      - SessionsPending
      type: object
      example: null
    MachineHostingResponseModel_HypervisorConnection:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        The hypervisor connection that the machine’s hosting server
        is accessed through.
      type: object
    MachineIdentityPoolResponseModel_DefaultOUDomain:
      allOf:
      - $ref: '#/components/schemas/ADDomainModel'
      description: Default OU domain
      type: object
    MachineResponseModel_allOf_DeliveryGroup:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        Delivery group which the machine is a member of.
        May be null if the machine is not a member of a
        delivery group.
      type: object
    MachineResponseModel_allOf_Hosting:
      allOf:
      - $ref: '#/components/schemas/MachineHostingResponseModel'
      description: "Details about the hosting of the machine, if the machine is hosted."
      type: object
    MachineResponseModel_allOf_LastConnectionUser:
      allOf:
      - $ref: '#/components/schemas/IdentityUserResponseModel'
      description: The user that last attempted a connection with the machine.
      type: object
    MachineResponseModel_allOf_Zone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The zone in which the machine is located.
      type: object
    MachineResponseModel_allOf_ContainerMetadata:
      allOf:
      - $ref: '#/components/schemas/ContainerMetadataModel'
      description: The metadata of Container.
      type: object
    MachineResponseModel_allOf_UpgradeDetail:
      allOf:
      - $ref: '#/components/schemas/MachineUpgradeDetail'
      description: |-
        Detail about the VDA upgrade schedule status object associated
        with this machine.
      type: object
    MachineResponseModel_allOf:
      description: Response model for machine.
      properties:
        Uid:
          description: |-
            DEPRECATED. Use Id.
            Used to be: DesktopUid
          format: int32
          type: integer
          x-deprecated: true
          x-deprecatedMessage: Should not use it.
        AgentVersion:
          description: Version of the Citrix Virtual Delivery Agent (VDA) installed
            on the machine.
          type: string
        AllocationType:
          allOf:
          - $ref: '#/components/schemas/AllocationType'
          description: Describes how the machine is allocated to the user.
          type: object
        ApplicationsInUse:
          description: List of applications in use in the session.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        AssignedUsers:
          description: |-
            List of one or more users to whom the machine is assigned.
            Only used when AllocationType
            is equal to Static.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        AssociatedUsers:
          description: The current user(s) for shared machines and the assigned users
            for private machines.
          items:
            $ref: '#/components/schemas/IdentityUserResponseModel'
          title: "IdentityUserResponseModel[]"
          type: array
        AzureAdJoinedMode:
          allOf:
          - $ref: '#/components/schemas/AzureAdJoinedMode'
          description: The type of Azure AD Domain join that took place in VDA.
          type: object
        ContainerScopes:
          description: |-
            Delegated admin scopes in which the containers of the
            machine reside.
          items:
            $ref: '#/components/schemas/ContainerScopeResponseModel'
          title: "ContainerScopeResponseModel[]"
          type: array
        ControllerDnsName:
          description: |-
            The DNS host name of the controller that the machine is
            registered to.
          type: string
        DeliveryGroup:
          $ref: '#/components/schemas/MachineResponseModel_allOf_DeliveryGroup'
        DeliveryType:
          allOf:
          - $ref: '#/components/schemas/DeliveryKind'
          description: Denotes the type(s) of published resources which the machine
            may deliver.
          type: object
        Description:
          description: Description of the machine.
          type: string
        DesktopConditions:
          description: List of outstanding desktop conditions for the machine.
          items:
            $ref: '#/components/schemas/DesktopCondition'
          title: "DesktopCondition[]"
          type: array
        DnsName:
          description: The DNS host name of the machine.
          type: string
        FunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: "Functional level of the machine, if known."
          type: object
        Hosting:
          $ref: '#/components/schemas/MachineResponseModel_allOf_Hosting'
        InMaintenanceMode:
          description: |-
            Denotes if the machine is in maintenance mode.
            Machines in maintenance mode will not accept new sessions.
          type: boolean
        DrainingUntilShutdown:
          description: Denotes if the machine is placed to drain until shutdown
          type: boolean
        IPAddress:
          description: The IP address of the machine.
          type: string
        IsAssigned:
          description: |-
            Denotes whether a private desktop has been assigned to a user/users,
            or a client name/address. Users can be assigned explicitly or by
            assigning on first use of the machine.
            Only relevant for privately assigned machines.
          type: boolean
        MachineType:
          allOf:
          - $ref: '#/components/schemas/MachineType'
          description: Type of machine.
          type: object
        LastConnectionFailure:
          allOf:
          - $ref: '#/components/schemas/ConnectionFailureReason'
          description: |-
            The reason for the last failed connection between a client and
            the machine.
          type: object
        LastConnectionTime:
          description: Time of the last detected connection attempt that either failed
            or succeeded.
          type: string
        FormattedLastConnectionTime:
          description: |-
            Formatted time of the last detected connection attempt that either failed or succeeded.
            RFC 3339 compatible format.
          type: string
        LastConnectionUser:
          $ref: '#/components/schemas/MachineResponseModel_allOf_LastConnectionUser'
        LastDeregistrationReason:
          allOf:
          - $ref: '#/components/schemas/DeregistrationReason'
          description: |-
            The reason for the last deregistration of the machine with
            the broker.
          type: object
        LastDeregistrationTime:
          description: Time of the last deregistration of the machine from the controller.
          type: string
        FormattedLastDeregistrationTime:
          description: |-
            Formatted time of the last deregistration of the machine from the controller.
            RFC 3339 compatible format.
          type: string
        LastErrorReason:
          description: The reason for the last error detected in the machine.
          type: string
        LastErrorTime:
          description: The time of the last detected error.
          type: string
        FormattedLastErrorTime:
          description: |-
            The formatted time of the last detected error.
            RFC 3339 compatible format.
          type: string
        LoadIndex:
          description: |-
            Gives current effective load index.
            Only used when SessionSupport
            is equal to MultiSession.
          format: int32
          type: integer
        MachineUnavailableReason:
          allOf:
          - $ref: '#/components/schemas/MachineUnavailableReason'
          description: Reason reported from the VDA showing why it is not yet available
            for use even though it is registered.
          type: object
        OSType:
          description: A string that can be used to identify the operating system
            that is running on the machine.
          type: string
        OSVersion:
          description: "A string that can be used to identify the version of the operating\
            \ system running on the machine, if known."
          type: string
        PersistUserChanges:
          allOf:
          - $ref: '#/components/schemas/PersistChanges'
          description: Describes if and how user changes are persisted.
          type: object
        PowerActionPending:
          description: |-
            Indicates if there are any pending power actions for the machine.
            Only relevant for power-managed machines.
          type: boolean
        PowerState:
          allOf:
          - $ref: '#/components/schemas/PowerState'
          description: The current power state of the machine.
          type: object
        ProvisioningType:
          allOf:
          - $ref: '#/components/schemas/ProvisioningType'
          description: Describes how the machine was provisioned.
          type: object
        PublishedApplications:
          description: Indicates the published applications.
          items:
            type: string
          type: array
        PublishedName:
          description: |-
            The name of the machine that is displayed in Receiver, if the
            machine has been published.
          type: string
        RegistrationState:
          allOf:
          - $ref: '#/components/schemas/RegistrationState'
          description: Indicates the registration state of the machine.
          type: object
        ScheduledReboot:
          allOf:
          - $ref: '#/components/schemas/ScheduledReboot'
          description: Indicates the state of any scheduled reboot operation for a
            machine.
          type: object
        SessionClientAddress:
          description: The IP address of the client connected to the session.
          type: string
        SessionClientName:
          description: The host name of the client connected to the session.
          type: string
        SessionClientVersion:
          description: The version of the Citrix Receiver running on the client connected
            to the session.
          type: string
        SessionConnectedViaHostName:
          description: "The host name of the incoming connection. This is usually\
            \ a gateway, router or client."
          type: string
        SessionConnectedViaIP:
          description: "The IP address of the incoming connection This is usually\
            \ a gateway, router or client."
          type: string
        SessionCount:
          description: Number of sessions running on the machine.
          format: int32
          type: integer
        SessionLaunchedViaHostName:
          description: The host name of the StoreFront server used to launch the session.
          type: string
        SessionLaunchedViaIP:
          description: The IP address of the StoreFront server used to launch the
            session.
          type: string
        SessionProtocol:
          allOf:
          - $ref: '#/components/schemas/ProtocolType'
          description: The protocol that the session is using.
          type: object
        SessionSecureIcaActive:
          description: Indicates whether SecureICA is active on the session.
          type: boolean
        SessionSmartAccessTags:
          description: The Smart Access tags for this session.
          items:
            type: string
          type: array
        SessionStartTime:
          description: The time indicates when the session was started.
          type: string
        FormattedSessionStartTime:
          description: |-
            The formatted time indicates when the session was started.
            RFC 3339 compatible format.
          type: string
        SessionState:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          description: The state of the session.
          type: object
        SessionStateChangeTime:
          description: The time of the most recent state change for the session.
          type: string
        FormattedSessionStateChangeTime:
          description: |-
            The formatted time of the most recent state change for the session.
            RFC 3339 compatible format.
          type: string
        SessionSupport:
          allOf:
          - $ref: '#/components/schemas/SessionSupport'
          description: Indicates the session support of the machine.
          type: object
        SessionUserName:
          description: The session user name.
          type: string
        Sid:
          description: |-
            The SID of the machine.
            Used to be: DesktopSid or SID (based on the context)
          minLength: 1
          type: string
        SummaryState:
          allOf:
          - $ref: '#/components/schemas/SummaryState'
          description: "Indicates the overall state of the desktop associated with\
            \ the machine. The overall state is a result of other more specific states\
            \ such as session state, registration state and power state."
          type: object
        WillShutdownAfterUse:
          description: |-
            Flag indicating if this machine is tainted and will be shut down
            after all sessions on the machine have ended. This flag is only
            ever non-null on power-managed, single-session machines.
          type: boolean
        WindowsConnectionSetting:
          allOf:
          - $ref: '#/components/schemas/WindowsConnectionSetting'
          description: |-
            The logon mode reported by Windows itself (multi-session machines
            only). For single-session machines the value is always hardwired
            to LogonEnabled.
          type: object
        Zone:
          $ref: '#/components/schemas/MachineResponseModel_allOf_Zone'
        SupportedPowerActions:
          description: A list of power actions supported by this machine.
          items:
            $ref: '#/components/schemas/SupportedPowerAction'
          title: "SupportedPowerAction[]"
          type: array
        FaultState:
          allOf:
          - $ref: '#/components/schemas/FaultState'
          description: Summary state of any current fault state of the machine.
          type: object
        ContainerMetadata:
          $ref: '#/components/schemas/MachineResponseModel_allOf_ContainerMetadata'
        Tags:
          description: The tags for this machine.
          items:
            type: string
          type: array
        UpgradeType:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeType'
          description: VDA upgrade type of this machine.
          type: object
        UpgradeState:
          allOf:
          - $ref: '#/components/schemas/VdaUpgradeState'
          description: Upgrade state of this machine.
          type: object
        MachineConfigurationOutOfSync:
          description: Flag indicating whether the machine's configuration is out
            of sync with the catalog's latest configuration
          type: boolean
        UpgradeDetail:
          $ref: '#/components/schemas/MachineResponseModel_allOf_UpgradeDetail'
      required:
      - DrainingUntilShutdown
      - FaultState
      - InMaintenanceMode
      - MachineType
      - PowerState
      - ProvisioningType
      - SessionSupport
      - Sid
      - SummaryState
      - Zone
      type: object
      example: null
    MachineTestResponseModel_Machine:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The Machine upon which the test was run.
      type: object
    ModelingResponseContract_Result:
      allOf:
      - $ref: '#/components/schemas/ModelingResultContract'
      description: Simulation result
      type: object
    NetworkMapResponseModel_Network:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: 'Network which the device is attached to. '
      type: object
    PrinterPropertiesContract_Settings:
      allOf:
      - $ref: '#/components/schemas/PrinterSettingsContract'
      description: The detailed settings.
      type: object
    ProjectedAutoscaleMachinesResponseModel_ProjectedAutoscaleMachines:
      allOf:
      - $ref: '#/components/schemas/ProjectedMachineResponseModel'
      description: |-
        The number of machines belonging to the desktop group
        that are expected to be powered on for each 30 minute slot over the specified number of days.
      type: object
    ProvisioningSchemeMachineAccountResponseModel_allOf:
      description: Machine identity associated with a provisioning scheme.
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ProvisioningSchemeMachineAccountState'
          description: The current state of the identity in regards to the provisioning
            scheme that it is associated with.
          type: object
      required:
      - State
      type: object
      example: null
    ProvisioningSchemeResponseModel_CurrentDiskImage:
      allOf:
      - $ref: '#/components/schemas/VMImageResponseModel'
      description: The current disk image used to provision new machines in the machine
        catalog.
      type: object
    ProvisioningSchemeResponseModel_ImageRuntimeInfo:
      allOf:
      - $ref: '#/components/schemas/ImageRuntimeInfoResponseModel'
      description: Image runtime information.
      type: object
    ProvisioningSchemeResponseModel_ResourcePool:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourcePoolRefResponseModel'
      description: The resource pool on which machines are provisioned.
      type: object
    ProvisioningSchemeResponseModel_IdentityPool:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: "The identity pool that the scheme uses, when determining provisioned\
        \ VM identity."
      type: object
    ProvisioningSchemeResponseModel_MasterImage:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: The VM snapshot that the scheme uses.
      type: object
    ProvisioningSchemeResponseModel_MachineAccountCreationRules:
      allOf:
      - $ref: '#/components/schemas/MachineAccountCreationRulesResponseModel'
      description: Machine account creation rules.
      type: object
    PvsCollectionResponseModel_PvsSite:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: PVS site in which the collection resides.
      type: object
    PvsDeviceResponseModel_PvsSite:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: PVS site in which the device resides.
      type: object
    PvsDeviceResponseModel_PvsCollection:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: PVS collection in which the device resides.
      type: object
    RebootScheduleResponseModel_DeliveryGroup:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The delivery group to which the reboot schedule is associated.
      type: object
    RebootScheduleResponseModel_RestrictToTag:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        If set, the reboot schedule only applies to machines in the delivery
        group with the specified tag.
      type: object
    RefSafetyRulesAttribute_allOf:
      properties:
        Version:
          format: int32
          type: integer
      required:
      - Version
      type: object
      example: null
    ScopedObjectResponseModel_Object:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: |-
        Reference to the object. To determine the type of the object, and how to dereference it, see
        ObjectType.
      type: object
    ScopeReferenceModel_allOf:
      properties:
        ScopeId:
          format: guid
          type: string
        ScopeName:
          type: string
      type: object
      example: null
    SessionResponseModel_Brokering:
      allOf:
      - $ref: '#/components/schemas/SessionBrokeringResponseModel'
      description: Details about how the session was brokered.
      type: object
    SessionResponseModel_Client:
      allOf:
      - $ref: '#/components/schemas/SessionClientResponseModel'
      description: Details about the client connected to the session.
      type: object
    SessionResponseModel_Connection:
      allOf:
      - $ref: '#/components/schemas/SessionConnectionResponseModel'
      description: Details about the connection from the client to the session.
      type: object
    SessionResponseModel_Machine:
      allOf:
      - $ref: '#/components/schemas/MachineResponseModel'
      description: The machine on which the session is hosted.
      type: object
    SessionResponseModel_User:
      allOf:
      - $ref: '#/components/schemas/IdentityUserResponseModel'
      description: The session user.
      type: object
    SettingDefinition_enumType:
      allOf:
      - $ref: '#/components/schemas/EnumerationType'
      description: Enum type information if this setting is an enum.
      type: object
    SettingDefinitionContract_EnumType:
      allOf:
      - $ref: '#/components/schemas/EnumerationTypeContract'
      description: Enum type information if this setting is an enum.
      type: object
    SiteDetailResponseModel_allOf_PrimaryZone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Primary zone for the site.
      type: object
    SiteDetailResponseModel_allOf:
      description: Site response model.
      properties:
        OrchestationApiVersion:
          description: Orchestration API version
          format: int32
          type: integer
        AppProtectionAuthorized:
          type: boolean
        LicenseServerName:
          description: |-
            Hostname of the licensing server for the site.
            Will be null for XenApp & XenDesktop service.
          type: string
        LicenseServerPort:
          description: |-
            License server port.
            Will be null for XenApp & XenDesktop service.
          format: int32
          type: integer
        LicenseServerUri:
          description: |-
            License server URI.
            Will be null for XenApp & XenDesktop service.
          type: string
        LicensingModel:
          allOf:
          - $ref: '#/components/schemas/LicenseModel'
          description: Licensing model.
          type: object
        SiteConfigurationComplete:
          description: Indicates whether the site's initial configuration is complete.
          type: boolean
        PrimaryZone:
          $ref: '#/components/schemas/SiteDetailResponseModel_allOf_PrimaryZone'
        ProductCode:
          description: Product code for the site license.
          minLength: 1
          type: string
        ProductEdition:
          description: Product edition for the site license.
          minLength: 1
          type: string
        ProductVersion:
          description: Product version.
          minLength: 1
          type: string
        Metadata:
          description: The metadata of Site.
          items:
            $ref: '#/components/schemas/NameValueStringPairModel'
          title: "NameValueStringPairModel[]"
          type: array
        SiteServices:
          description: Services running within the site.
          items:
            $ref: '#/components/schemas/SiteServiceResponseModel'
          title: "SiteServiceResponseModel[]"
          type: array
        EnabledFeatures:
          description: Enabled features within the site.
          items:
            type: string
          type: array
        BaseOU:
          description: The objectGUID property identifying the base OU in Active Directory
            used for desktop registrations.
          type: string
        ColorDepth:
          allOf:
          - $ref: '#/components/schemas/ColorDepth'
          description: The default color depth for new delivery groups.
          type: object
        ConnectionLeasingEnabled:
          description: Indicates whether connection leasing is enabled.
          type: boolean
        DefaultMinimumFunctionalLevel:
          allOf:
          - $ref: '#/components/schemas/FunctionalLevel'
          description: |-
            The default minimum functional level used for new machine catalogs and delivery groups
            when no explicit value is provided.
          type: object
        DefaultDesktopIconId:
          description: The default desktop icon used for new delivery groups.
          minLength: 1
          type: string
        DnsResolutionEnabled:
          description: Indicates whether numeric IP addresses or DNS names are present
            in ICA files.
          type: boolean
        LicenseGraceSessionsRemaining:
          description: The number of licensing grace sessions remaining.
          format: int32
          type: integer
        LicensedSessionsActive:
          description: "The number of active, licensed sessions."
          format: int32
          type: integer
        LicensingGraceHoursLeft:
          description: "When in an active licensing grace period, indicates the \n\
            number of hours remaining in the grace period.\nWill be null for XenApp\
            \ & XenDesktop service."
          format: int32
          type: integer
        LicensingGracePeriodActive:
          description: |-
            Indicates whether a licensing grace period is active.
            Will be null for XenApp & XenDesktop service.
          type: boolean
        PeakConcurrentLicenseUsers:
          description: |-
            The peak number of concurrent licensed users.
            Only applies if LicensingModel is Concurrent.
          format: int32
          type: integer
        ReuseMachinesWithoutShutdownInOutageAllowed:
          description: |-
            Allow sessions to launch on shared machines without an intermediate shutdown
            while the system is operating in outage mode.
          type: boolean
        DefaultSecureIcaRequired:
          description: The default SecureICA usage for new delivery groups.
          type: boolean
        TotalUniqueLicenseUsers:
          description: The total count of unique license users.
          format: int32
          type: integer
        TrustRequestsSentToTheXmlServicePort:
          description: Indicates whether the XML service trusts the caller to specify
            user identity.
          type: boolean
        LicensingAlerts:
          description: |-
            Get active licensing alerts in the site.
            Will be null for XenApp & XenDesktop service.
          items:
            $ref: '#/components/schemas/LicensingAlertResponseModel'
          title: "LicensingAlertResponseModel[]"
          type: array
      required:
      - ColorDepth
      - DefaultDesktopIconId
      - EnabledFeatures
      - OrchestationApiVersion
      - PrimaryZone
      - ProductCode
      - ProductEdition
      - ProductVersion
      - SiteServices
      type: object
      example: null
    SiteTestResponseModel_Site:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: The site upon which the test was run.
      type: object
    StartMenuApplicationResponseModel_Machine:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Machine from which the start menu application was obtained.
      type: object
    SystemManagementInfoResponseModel_AzureADJoinStatus:
      allOf:
      - $ref: '#/components/schemas/AzureADJoinStatusResponseModel'
      description: Azure AD join status.
      type: object
    SystemManagementInfoResponseModel_DeviceRegistrationStatus:
      allOf:
      - $ref: '#/components/schemas/DeviceRegistrationStatusResponseModel'
      description: Device registration status.
      type: object
    TagDetailResponseModel_allOf:
      description: Detail response object for a tag.
      properties:
        RestrictedDesktops:
          description: Desktops which are restricted to be used with machines that
            are tagged with this tag.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        RestrictedApplicationGroups:
          description: |-
            Application groups which are restricted such that the applications contained within
            will be launched only on machines that are tagged with this tag.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        RestrictedDeliveryGroups:
          description: |-
            Delivery groups with reboot schedules that are restricted to machines that are
            tagged with this tag.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        RestrictedRebootSchedules:
          description: |-
            Reboot schedules that are restricted to machines that are tagged with this tag.
            Only reboot schedules that are visible to the calling delegated administrator are counted.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        RestrictedAutoscale:
          description: Delivery groups that are using this tag for autoscale
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
        NumUnknownRestrictedObjects:
          description: |-
            The number of objects of all types that have this tag restriction and that are
            *not* visible to the calling delegated administrator.
          format: int32
          type: integer
      required:
      - NumUnknownRestrictedObjects
      - RestrictedApplicationGroups
      - RestrictedDeliveryGroups
      - RestrictedDesktops
      - RestrictedRebootSchedules
      type: object
      example: null
    UpdateMachineCatalogProvisioningSchemeRequestModel_RebootOptions:
      allOf:
      - $ref: '#/components/schemas/RebootMachinesRequestModel'
      description: Reboot options for machines in the catalog.
      type: object
    UpdateMachineCatalogProvisioningSchemeRequestModel_MachineAccountCreationRules:
      allOf:
      - $ref: '#/components/schemas/UpdateMachineAccountCreationRulesRequestModel'
      description: |-
        `DEPRECATED.` If specified, the machine account creation rules will be updated.
        If not specified, the machine account creation rules will be left unchanged.
      type: object
      x-deprecated: true
      x-deprecatedMessage: DEPRECATED.
    UserZonePreferenceResponseModel_Zone:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Zone.
      type: object
    VMImageResponseModel_Image:
      allOf:
      - $ref: '#/components/schemas/HypervisorResourceRefResponseModel'
      description: Reference to the VM image resource on the hypervisor.
      type: object
    VMImageResponseModel_ImageVersion:
      allOf:
      - $ref: '#/components/schemas/ImageVersionRefResponseModel'
      description: Reference to image version on the hypervisor.
      type: object
    ZoneDetailResponseModel_allOf:
      description: Zone detail object.
      properties:
        Controllers:
          description: List of controllers in the zone.
          items:
            $ref: '#/components/schemas/RefResponseModel'
          title: "RefResponseModel[]"
          type: array
      type: object
      example: null
    ZoneResponseModel_ResourceLocation:
      allOf:
      - $ref: '#/components/schemas/RefResponseModel'
      description: Citrix Cloud resource location that corresponds to this zone.
      type: object
  securitySchemes:
    BearerAuth:
      description: bearer token
      in: header
      name: Authorization
      type: apiKey
x-generator: NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))
x-original-swagger-version: "2.0"
