/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageVersionRefResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageVersionRefResponseModel{}

// ImageVersionRefResponseModel Image version reference.
type ImageVersionRefResponseModel struct {
	// The image definition name.
	ImageDefinitionName NullableString `json:"ImageDefinitionName,omitempty"`
	// The image version number.
	ImageVersionNumber NullableString `json:"ImageVersionNumber,omitempty"`
	// The image version uid.
	ImageVersionUid *string `json:"ImageVersionUid,omitempty"`
}

// NewImageVersionRefResponseModel instantiates a new ImageVersionRefResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageVersionRefResponseModel() *ImageVersionRefResponseModel {
	this := ImageVersionRefResponseModel{}
	return &this
}

// NewImageVersionRefResponseModelWithDefaults instantiates a new ImageVersionRefResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageVersionRefResponseModelWithDefaults() *ImageVersionRefResponseModel {
	this := ImageVersionRefResponseModel{}
	return &this
}

// GetImageDefinitionName returns the ImageDefinitionName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionRefResponseModel) GetImageDefinitionName() string {
	if o == nil || IsNil(o.ImageDefinitionName.Get()) {
		var ret string
		return ret
	}
	return *o.ImageDefinitionName.Get()
}

// GetImageDefinitionNameOk returns a tuple with the ImageDefinitionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionRefResponseModel) GetImageDefinitionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageDefinitionName.Get(), o.ImageDefinitionName.IsSet()
}

// HasImageDefinitionName returns a boolean if a field has been set.
func (o *ImageVersionRefResponseModel) HasImageDefinitionName() bool {
	if o != nil && o.ImageDefinitionName.IsSet() {
		return true
	}

	return false
}

// SetImageDefinitionName gets a reference to the given NullableString and assigns it to the ImageDefinitionName field.
func (o *ImageVersionRefResponseModel) SetImageDefinitionName(v string) {
	o.ImageDefinitionName.Set(&v)
}
// SetImageDefinitionNameNil sets the value for ImageDefinitionName to be an explicit nil
func (o *ImageVersionRefResponseModel) SetImageDefinitionNameNil() {
	o.ImageDefinitionName.Set(nil)
}

// UnsetImageDefinitionName ensures that no value is present for ImageDefinitionName, not even an explicit nil
func (o *ImageVersionRefResponseModel) UnsetImageDefinitionName() {
	o.ImageDefinitionName.Unset()
}

// GetImageVersionNumber returns the ImageVersionNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionRefResponseModel) GetImageVersionNumber() string {
	if o == nil || IsNil(o.ImageVersionNumber.Get()) {
		var ret string
		return ret
	}
	return *o.ImageVersionNumber.Get()
}

// GetImageVersionNumberOk returns a tuple with the ImageVersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionRefResponseModel) GetImageVersionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageVersionNumber.Get(), o.ImageVersionNumber.IsSet()
}

// HasImageVersionNumber returns a boolean if a field has been set.
func (o *ImageVersionRefResponseModel) HasImageVersionNumber() bool {
	if o != nil && o.ImageVersionNumber.IsSet() {
		return true
	}

	return false
}

// SetImageVersionNumber gets a reference to the given NullableString and assigns it to the ImageVersionNumber field.
func (o *ImageVersionRefResponseModel) SetImageVersionNumber(v string) {
	o.ImageVersionNumber.Set(&v)
}
// SetImageVersionNumberNil sets the value for ImageVersionNumber to be an explicit nil
func (o *ImageVersionRefResponseModel) SetImageVersionNumberNil() {
	o.ImageVersionNumber.Set(nil)
}

// UnsetImageVersionNumber ensures that no value is present for ImageVersionNumber, not even an explicit nil
func (o *ImageVersionRefResponseModel) UnsetImageVersionNumber() {
	o.ImageVersionNumber.Unset()
}

// GetImageVersionUid returns the ImageVersionUid field value if set, zero value otherwise.
func (o *ImageVersionRefResponseModel) GetImageVersionUid() string {
	if o == nil || IsNil(o.ImageVersionUid) {
		var ret string
		return ret
	}
	return *o.ImageVersionUid
}

// GetImageVersionUidOk returns a tuple with the ImageVersionUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionRefResponseModel) GetImageVersionUidOk() (*string, bool) {
	if o == nil || IsNil(o.ImageVersionUid) {
		return nil, false
	}
	return o.ImageVersionUid, true
}

// HasImageVersionUid returns a boolean if a field has been set.
func (o *ImageVersionRefResponseModel) HasImageVersionUid() bool {
	if o != nil && !IsNil(o.ImageVersionUid) {
		return true
	}

	return false
}

// SetImageVersionUid gets a reference to the given string and assigns it to the ImageVersionUid field.
func (o *ImageVersionRefResponseModel) SetImageVersionUid(v string) {
	o.ImageVersionUid = &v
}

func (o ImageVersionRefResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageVersionRefResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageDefinitionName.IsSet() {
		toSerialize["ImageDefinitionName"] = o.ImageDefinitionName.Get()
	}
	if o.ImageVersionNumber.IsSet() {
		toSerialize["ImageVersionNumber"] = o.ImageVersionNumber.Get()
	}
	if !IsNil(o.ImageVersionUid) {
		toSerialize["ImageVersionUid"] = o.ImageVersionUid
	}
	return toSerialize, nil
}

type NullableImageVersionRefResponseModel struct {
	value *ImageVersionRefResponseModel
	isSet bool
}

func (v NullableImageVersionRefResponseModel) Get() *ImageVersionRefResponseModel {
	return v.value
}

func (v *NullableImageVersionRefResponseModel) Set(val *ImageVersionRefResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageVersionRefResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageVersionRefResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageVersionRefResponseModel(val *ImageVersionRefResponseModel) *NullableImageVersionRefResponseModel {
	return &NullableImageVersionRefResponseModel{value: val, isSet: true}
}

func (v NullableImageVersionRefResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageVersionRefResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


