/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DeliveryControllerResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryControllerResponseModel{}

// DeliveryControllerResponseModel Delivery Controller response model.
type DeliveryControllerResponseModel struct {
	// The sid of the delivery controller
	Sid NullableString `json:"Sid,omitempty"`
	// The id(uuid) of the delivery controller
	Id NullableString `json:"Id,omitempty"`
	// The machine name of the delivery controller
	MachineName NullableString `json:"MachineName,omitempty"`
	// The dns name of the delivery controller
	DnsName NullableString `json:"DnsName,omitempty"`
	// The service host id of the delivery controller
	ServiceHostId *string `json:"ServiceHostId,omitempty"`
	// The controller version of the delivery controller
	ControllerVersion NullableString `json:"ControllerVersion,omitempty"`
	// The number of registered desktops in the delivery controller
	RegisteredDesktops *int32 `json:"RegisteredDesktops,omitempty"`
	// The LastActivityTime of the delivery controller
	LastActivityTime NullableString `json:"LastActivityTime,omitempty"`
	// The LastStartTime of the delivery controller
	LastStartTime NullableString `json:"LastStartTime,omitempty"`
	// The OSVersion of the delivery controller
	OSVersion NullableString `json:"OSVersion,omitempty"`
	// The OSType of the delivery controller
	OSType NullableString `json:"OSType,omitempty"`
	// The service statuses of the delivery controller.
	ServiceStatuses []DeliveryControllerServiceStatusResponseModel `json:"ServiceStatuses,omitempty"`
	ControllerState *DeliveryControllerState `json:"ControllerState,omitempty"`
	// The ID of the zone this zonable item belongs to
	ZoneId NullableString `json:"ZoneId,omitempty"`
	// The Id of this zonable Item. This is a generic name to access non-generic properties
	ZonableItemId NullableString `json:"ZonableItemId,omitempty"`
	ZonableItemType *ZonableItemType `json:"ZonableItemType,omitempty"`
	// The Zone's Name
	ZoneName NullableString `json:"ZoneName,omitempty"`
	// Tthe name of this zonable Item
	ZonableItemName NullableString `json:"ZonableItemName,omitempty"`
	// The description of this zonable Item
	ZonableItemDescription NullableString `json:"ZonableItemDescription,omitempty"`
}

// NewDeliveryControllerResponseModel instantiates a new DeliveryControllerResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryControllerResponseModel() *DeliveryControllerResponseModel {
	this := DeliveryControllerResponseModel{}
	return &this
}

// NewDeliveryControllerResponseModelWithDefaults instantiates a new DeliveryControllerResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryControllerResponseModelWithDefaults() *DeliveryControllerResponseModel {
	this := DeliveryControllerResponseModel{}
	return &this
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetSid() string {
	if o == nil || IsNil(o.Sid.Get()) {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *DeliveryControllerResponseModel) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *DeliveryControllerResponseModel) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetSid() {
	o.Sid.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *DeliveryControllerResponseModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *DeliveryControllerResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetMachineName returns the MachineName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetMachineName() string {
	if o == nil || IsNil(o.MachineName.Get()) {
		var ret string
		return ret
	}
	return *o.MachineName.Get()
}

// GetMachineNameOk returns a tuple with the MachineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetMachineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MachineName.Get(), o.MachineName.IsSet()
}

// HasMachineName returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasMachineName() bool {
	if o != nil && o.MachineName.IsSet() {
		return true
	}

	return false
}

// SetMachineName gets a reference to the given NullableString and assigns it to the MachineName field.
func (o *DeliveryControllerResponseModel) SetMachineName(v string) {
	o.MachineName.Set(&v)
}
// SetMachineNameNil sets the value for MachineName to be an explicit nil
func (o *DeliveryControllerResponseModel) SetMachineNameNil() {
	o.MachineName.Set(nil)
}

// UnsetMachineName ensures that no value is present for MachineName, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetMachineName() {
	o.MachineName.Unset()
}

// GetDnsName returns the DnsName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetDnsName() string {
	if o == nil || IsNil(o.DnsName.Get()) {
		var ret string
		return ret
	}
	return *o.DnsName.Get()
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetDnsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DnsName.Get(), o.DnsName.IsSet()
}

// HasDnsName returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasDnsName() bool {
	if o != nil && o.DnsName.IsSet() {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given NullableString and assigns it to the DnsName field.
func (o *DeliveryControllerResponseModel) SetDnsName(v string) {
	o.DnsName.Set(&v)
}
// SetDnsNameNil sets the value for DnsName to be an explicit nil
func (o *DeliveryControllerResponseModel) SetDnsNameNil() {
	o.DnsName.Set(nil)
}

// UnsetDnsName ensures that no value is present for DnsName, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetDnsName() {
	o.DnsName.Unset()
}

// GetServiceHostId returns the ServiceHostId field value if set, zero value otherwise.
func (o *DeliveryControllerResponseModel) GetServiceHostId() string {
	if o == nil || IsNil(o.ServiceHostId) {
		var ret string
		return ret
	}
	return *o.ServiceHostId
}

// GetServiceHostIdOk returns a tuple with the ServiceHostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerResponseModel) GetServiceHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceHostId) {
		return nil, false
	}
	return o.ServiceHostId, true
}

// HasServiceHostId returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasServiceHostId() bool {
	if o != nil && !IsNil(o.ServiceHostId) {
		return true
	}

	return false
}

// SetServiceHostId gets a reference to the given string and assigns it to the ServiceHostId field.
func (o *DeliveryControllerResponseModel) SetServiceHostId(v string) {
	o.ServiceHostId = &v
}

// GetControllerVersion returns the ControllerVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetControllerVersion() string {
	if o == nil || IsNil(o.ControllerVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ControllerVersion.Get()
}

// GetControllerVersionOk returns a tuple with the ControllerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetControllerVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ControllerVersion.Get(), o.ControllerVersion.IsSet()
}

// HasControllerVersion returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasControllerVersion() bool {
	if o != nil && o.ControllerVersion.IsSet() {
		return true
	}

	return false
}

// SetControllerVersion gets a reference to the given NullableString and assigns it to the ControllerVersion field.
func (o *DeliveryControllerResponseModel) SetControllerVersion(v string) {
	o.ControllerVersion.Set(&v)
}
// SetControllerVersionNil sets the value for ControllerVersion to be an explicit nil
func (o *DeliveryControllerResponseModel) SetControllerVersionNil() {
	o.ControllerVersion.Set(nil)
}

// UnsetControllerVersion ensures that no value is present for ControllerVersion, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetControllerVersion() {
	o.ControllerVersion.Unset()
}

// GetRegisteredDesktops returns the RegisteredDesktops field value if set, zero value otherwise.
func (o *DeliveryControllerResponseModel) GetRegisteredDesktops() int32 {
	if o == nil || IsNil(o.RegisteredDesktops) {
		var ret int32
		return ret
	}
	return *o.RegisteredDesktops
}

// GetRegisteredDesktopsOk returns a tuple with the RegisteredDesktops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerResponseModel) GetRegisteredDesktopsOk() (*int32, bool) {
	if o == nil || IsNil(o.RegisteredDesktops) {
		return nil, false
	}
	return o.RegisteredDesktops, true
}

// HasRegisteredDesktops returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasRegisteredDesktops() bool {
	if o != nil && !IsNil(o.RegisteredDesktops) {
		return true
	}

	return false
}

// SetRegisteredDesktops gets a reference to the given int32 and assigns it to the RegisteredDesktops field.
func (o *DeliveryControllerResponseModel) SetRegisteredDesktops(v int32) {
	o.RegisteredDesktops = &v
}

// GetLastActivityTime returns the LastActivityTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetLastActivityTime() string {
	if o == nil || IsNil(o.LastActivityTime.Get()) {
		var ret string
		return ret
	}
	return *o.LastActivityTime.Get()
}

// GetLastActivityTimeOk returns a tuple with the LastActivityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetLastActivityTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastActivityTime.Get(), o.LastActivityTime.IsSet()
}

// HasLastActivityTime returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasLastActivityTime() bool {
	if o != nil && o.LastActivityTime.IsSet() {
		return true
	}

	return false
}

// SetLastActivityTime gets a reference to the given NullableString and assigns it to the LastActivityTime field.
func (o *DeliveryControllerResponseModel) SetLastActivityTime(v string) {
	o.LastActivityTime.Set(&v)
}
// SetLastActivityTimeNil sets the value for LastActivityTime to be an explicit nil
func (o *DeliveryControllerResponseModel) SetLastActivityTimeNil() {
	o.LastActivityTime.Set(nil)
}

// UnsetLastActivityTime ensures that no value is present for LastActivityTime, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetLastActivityTime() {
	o.LastActivityTime.Unset()
}

// GetLastStartTime returns the LastStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetLastStartTime() string {
	if o == nil || IsNil(o.LastStartTime.Get()) {
		var ret string
		return ret
	}
	return *o.LastStartTime.Get()
}

// GetLastStartTimeOk returns a tuple with the LastStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetLastStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastStartTime.Get(), o.LastStartTime.IsSet()
}

// HasLastStartTime returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasLastStartTime() bool {
	if o != nil && o.LastStartTime.IsSet() {
		return true
	}

	return false
}

// SetLastStartTime gets a reference to the given NullableString and assigns it to the LastStartTime field.
func (o *DeliveryControllerResponseModel) SetLastStartTime(v string) {
	o.LastStartTime.Set(&v)
}
// SetLastStartTimeNil sets the value for LastStartTime to be an explicit nil
func (o *DeliveryControllerResponseModel) SetLastStartTimeNil() {
	o.LastStartTime.Set(nil)
}

// UnsetLastStartTime ensures that no value is present for LastStartTime, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetLastStartTime() {
	o.LastStartTime.Unset()
}

// GetOSVersion returns the OSVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetOSVersion() string {
	if o == nil || IsNil(o.OSVersion.Get()) {
		var ret string
		return ret
	}
	return *o.OSVersion.Get()
}

// GetOSVersionOk returns a tuple with the OSVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetOSVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OSVersion.Get(), o.OSVersion.IsSet()
}

// HasOSVersion returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasOSVersion() bool {
	if o != nil && o.OSVersion.IsSet() {
		return true
	}

	return false
}

// SetOSVersion gets a reference to the given NullableString and assigns it to the OSVersion field.
func (o *DeliveryControllerResponseModel) SetOSVersion(v string) {
	o.OSVersion.Set(&v)
}
// SetOSVersionNil sets the value for OSVersion to be an explicit nil
func (o *DeliveryControllerResponseModel) SetOSVersionNil() {
	o.OSVersion.Set(nil)
}

// UnsetOSVersion ensures that no value is present for OSVersion, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetOSVersion() {
	o.OSVersion.Unset()
}

// GetOSType returns the OSType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetOSType() string {
	if o == nil || IsNil(o.OSType.Get()) {
		var ret string
		return ret
	}
	return *o.OSType.Get()
}

// GetOSTypeOk returns a tuple with the OSType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetOSTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OSType.Get(), o.OSType.IsSet()
}

// HasOSType returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasOSType() bool {
	if o != nil && o.OSType.IsSet() {
		return true
	}

	return false
}

// SetOSType gets a reference to the given NullableString and assigns it to the OSType field.
func (o *DeliveryControllerResponseModel) SetOSType(v string) {
	o.OSType.Set(&v)
}
// SetOSTypeNil sets the value for OSType to be an explicit nil
func (o *DeliveryControllerResponseModel) SetOSTypeNil() {
	o.OSType.Set(nil)
}

// UnsetOSType ensures that no value is present for OSType, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetOSType() {
	o.OSType.Unset()
}

// GetServiceStatuses returns the ServiceStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetServiceStatuses() []DeliveryControllerServiceStatusResponseModel {
	if o == nil {
		var ret []DeliveryControllerServiceStatusResponseModel
		return ret
	}
	return o.ServiceStatuses
}

// GetServiceStatusesOk returns a tuple with the ServiceStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetServiceStatusesOk() ([]DeliveryControllerServiceStatusResponseModel, bool) {
	if o == nil || IsNil(o.ServiceStatuses) {
		return nil, false
	}
	return o.ServiceStatuses, true
}

// HasServiceStatuses returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasServiceStatuses() bool {
	if o != nil && IsNil(o.ServiceStatuses) {
		return true
	}

	return false
}

// SetServiceStatuses gets a reference to the given []DeliveryControllerServiceStatusResponseModel and assigns it to the ServiceStatuses field.
func (o *DeliveryControllerResponseModel) SetServiceStatuses(v []DeliveryControllerServiceStatusResponseModel) {
	o.ServiceStatuses = v
}

// GetControllerState returns the ControllerState field value if set, zero value otherwise.
func (o *DeliveryControllerResponseModel) GetControllerState() DeliveryControllerState {
	if o == nil || IsNil(o.ControllerState) {
		var ret DeliveryControllerState
		return ret
	}
	return *o.ControllerState
}

// GetControllerStateOk returns a tuple with the ControllerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerResponseModel) GetControllerStateOk() (*DeliveryControllerState, bool) {
	if o == nil || IsNil(o.ControllerState) {
		return nil, false
	}
	return o.ControllerState, true
}

// HasControllerState returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasControllerState() bool {
	if o != nil && !IsNil(o.ControllerState) {
		return true
	}

	return false
}

// SetControllerState gets a reference to the given DeliveryControllerState and assigns it to the ControllerState field.
func (o *DeliveryControllerResponseModel) SetControllerState(v DeliveryControllerState) {
	o.ControllerState = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneId.Get()
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneId.Get(), o.ZoneId.IsSet()
}

// HasZoneId returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZoneId() bool {
	if o != nil && o.ZoneId.IsSet() {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given NullableString and assigns it to the ZoneId field.
func (o *DeliveryControllerResponseModel) SetZoneId(v string) {
	o.ZoneId.Set(&v)
}
// SetZoneIdNil sets the value for ZoneId to be an explicit nil
func (o *DeliveryControllerResponseModel) SetZoneIdNil() {
	o.ZoneId.Set(nil)
}

// UnsetZoneId ensures that no value is present for ZoneId, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetZoneId() {
	o.ZoneId.Unset()
}

// GetZonableItemId returns the ZonableItemId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetZonableItemId() string {
	if o == nil || IsNil(o.ZonableItemId.Get()) {
		var ret string
		return ret
	}
	return *o.ZonableItemId.Get()
}

// GetZonableItemIdOk returns a tuple with the ZonableItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetZonableItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZonableItemId.Get(), o.ZonableItemId.IsSet()
}

// HasZonableItemId returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZonableItemId() bool {
	if o != nil && o.ZonableItemId.IsSet() {
		return true
	}

	return false
}

// SetZonableItemId gets a reference to the given NullableString and assigns it to the ZonableItemId field.
func (o *DeliveryControllerResponseModel) SetZonableItemId(v string) {
	o.ZonableItemId.Set(&v)
}
// SetZonableItemIdNil sets the value for ZonableItemId to be an explicit nil
func (o *DeliveryControllerResponseModel) SetZonableItemIdNil() {
	o.ZonableItemId.Set(nil)
}

// UnsetZonableItemId ensures that no value is present for ZonableItemId, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetZonableItemId() {
	o.ZonableItemId.Unset()
}

// GetZonableItemType returns the ZonableItemType field value if set, zero value otherwise.
func (o *DeliveryControllerResponseModel) GetZonableItemType() ZonableItemType {
	if o == nil || IsNil(o.ZonableItemType) {
		var ret ZonableItemType
		return ret
	}
	return *o.ZonableItemType
}

// GetZonableItemTypeOk returns a tuple with the ZonableItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerResponseModel) GetZonableItemTypeOk() (*ZonableItemType, bool) {
	if o == nil || IsNil(o.ZonableItemType) {
		return nil, false
	}
	return o.ZonableItemType, true
}

// HasZonableItemType returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZonableItemType() bool {
	if o != nil && !IsNil(o.ZonableItemType) {
		return true
	}

	return false
}

// SetZonableItemType gets a reference to the given ZonableItemType and assigns it to the ZonableItemType field.
func (o *DeliveryControllerResponseModel) SetZonableItemType(v ZonableItemType) {
	o.ZonableItemType = &v
}

// GetZoneName returns the ZoneName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetZoneName() string {
	if o == nil || IsNil(o.ZoneName.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneName.Get()
}

// GetZoneNameOk returns a tuple with the ZoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetZoneNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneName.Get(), o.ZoneName.IsSet()
}

// HasZoneName returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZoneName() bool {
	if o != nil && o.ZoneName.IsSet() {
		return true
	}

	return false
}

// SetZoneName gets a reference to the given NullableString and assigns it to the ZoneName field.
func (o *DeliveryControllerResponseModel) SetZoneName(v string) {
	o.ZoneName.Set(&v)
}
// SetZoneNameNil sets the value for ZoneName to be an explicit nil
func (o *DeliveryControllerResponseModel) SetZoneNameNil() {
	o.ZoneName.Set(nil)
}

// UnsetZoneName ensures that no value is present for ZoneName, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetZoneName() {
	o.ZoneName.Unset()
}

// GetZonableItemName returns the ZonableItemName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetZonableItemName() string {
	if o == nil || IsNil(o.ZonableItemName.Get()) {
		var ret string
		return ret
	}
	return *o.ZonableItemName.Get()
}

// GetZonableItemNameOk returns a tuple with the ZonableItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetZonableItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZonableItemName.Get(), o.ZonableItemName.IsSet()
}

// HasZonableItemName returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZonableItemName() bool {
	if o != nil && o.ZonableItemName.IsSet() {
		return true
	}

	return false
}

// SetZonableItemName gets a reference to the given NullableString and assigns it to the ZonableItemName field.
func (o *DeliveryControllerResponseModel) SetZonableItemName(v string) {
	o.ZonableItemName.Set(&v)
}
// SetZonableItemNameNil sets the value for ZonableItemName to be an explicit nil
func (o *DeliveryControllerResponseModel) SetZonableItemNameNil() {
	o.ZonableItemName.Set(nil)
}

// UnsetZonableItemName ensures that no value is present for ZonableItemName, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetZonableItemName() {
	o.ZonableItemName.Unset()
}

// GetZonableItemDescription returns the ZonableItemDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeliveryControllerResponseModel) GetZonableItemDescription() string {
	if o == nil || IsNil(o.ZonableItemDescription.Get()) {
		var ret string
		return ret
	}
	return *o.ZonableItemDescription.Get()
}

// GetZonableItemDescriptionOk returns a tuple with the ZonableItemDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeliveryControllerResponseModel) GetZonableItemDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZonableItemDescription.Get(), o.ZonableItemDescription.IsSet()
}

// HasZonableItemDescription returns a boolean if a field has been set.
func (o *DeliveryControllerResponseModel) HasZonableItemDescription() bool {
	if o != nil && o.ZonableItemDescription.IsSet() {
		return true
	}

	return false
}

// SetZonableItemDescription gets a reference to the given NullableString and assigns it to the ZonableItemDescription field.
func (o *DeliveryControllerResponseModel) SetZonableItemDescription(v string) {
	o.ZonableItemDescription.Set(&v)
}
// SetZonableItemDescriptionNil sets the value for ZonableItemDescription to be an explicit nil
func (o *DeliveryControllerResponseModel) SetZonableItemDescriptionNil() {
	o.ZonableItemDescription.Set(nil)
}

// UnsetZonableItemDescription ensures that no value is present for ZonableItemDescription, not even an explicit nil
func (o *DeliveryControllerResponseModel) UnsetZonableItemDescription() {
	o.ZonableItemDescription.Unset()
}

func (o DeliveryControllerResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryControllerResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Sid.IsSet() {
		toSerialize["Sid"] = o.Sid.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.MachineName.IsSet() {
		toSerialize["MachineName"] = o.MachineName.Get()
	}
	if o.DnsName.IsSet() {
		toSerialize["DnsName"] = o.DnsName.Get()
	}
	if !IsNil(o.ServiceHostId) {
		toSerialize["ServiceHostId"] = o.ServiceHostId
	}
	if o.ControllerVersion.IsSet() {
		toSerialize["ControllerVersion"] = o.ControllerVersion.Get()
	}
	if !IsNil(o.RegisteredDesktops) {
		toSerialize["RegisteredDesktops"] = o.RegisteredDesktops
	}
	if o.LastActivityTime.IsSet() {
		toSerialize["LastActivityTime"] = o.LastActivityTime.Get()
	}
	if o.LastStartTime.IsSet() {
		toSerialize["LastStartTime"] = o.LastStartTime.Get()
	}
	if o.OSVersion.IsSet() {
		toSerialize["OSVersion"] = o.OSVersion.Get()
	}
	if o.OSType.IsSet() {
		toSerialize["OSType"] = o.OSType.Get()
	}
	if o.ServiceStatuses != nil {
		toSerialize["ServiceStatuses"] = o.ServiceStatuses
	}
	if !IsNil(o.ControllerState) {
		toSerialize["ControllerState"] = o.ControllerState
	}
	if o.ZoneId.IsSet() {
		toSerialize["ZoneId"] = o.ZoneId.Get()
	}
	if o.ZonableItemId.IsSet() {
		toSerialize["ZonableItemId"] = o.ZonableItemId.Get()
	}
	if !IsNil(o.ZonableItemType) {
		toSerialize["ZonableItemType"] = o.ZonableItemType
	}
	if o.ZoneName.IsSet() {
		toSerialize["ZoneName"] = o.ZoneName.Get()
	}
	if o.ZonableItemName.IsSet() {
		toSerialize["ZonableItemName"] = o.ZonableItemName.Get()
	}
	if o.ZonableItemDescription.IsSet() {
		toSerialize["ZonableItemDescription"] = o.ZonableItemDescription.Get()
	}
	return toSerialize, nil
}

type NullableDeliveryControllerResponseModel struct {
	value *DeliveryControllerResponseModel
	isSet bool
}

func (v NullableDeliveryControllerResponseModel) Get() *DeliveryControllerResponseModel {
	return v.value
}

func (v *NullableDeliveryControllerResponseModel) Set(val *DeliveryControllerResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryControllerResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryControllerResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryControllerResponseModel(val *DeliveryControllerResponseModel) *NullableDeliveryControllerResponseModel {
	return &NullableDeliveryControllerResponseModel{value: val, isSet: true}
}

func (v NullableDeliveryControllerResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryControllerResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


