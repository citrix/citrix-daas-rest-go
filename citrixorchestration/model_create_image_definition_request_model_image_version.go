/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateImageDefinitionRequestModelImageVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateImageDefinitionRequestModelImageVersion{}

// CreateImageDefinitionRequestModelImageVersion Defines the image version. CreateImageVersionRequestModel
type CreateImageDefinitionRequestModelImageVersion struct {
	// The path in the resource pool to the virtual machine snapshot or VM template that will be used. This identifies the hard disk to be used and the default values for the memory and processors. This must be a path to a Snapshot or Template item in the resource pool to which the Image Version is associated.
	MasterImageVM *string `json:"MasterImageVM,omitempty"`
	// The hypervisor resource path of the Cloud service offering to use when creating machines.
	ServiceOffering *string `json:"ServiceOffering,omitempty"`
	// The path in the resource pool to the virtual machine template that will be used. This identifies the VM template to be used and the default values for the tags, virtual machine size, boot diagnostics, host cache property of OS disk, accelerated networking and availability zone. This must be a path to a Virtual machine or Template item in the resource pool to which the Image Version is associated.
	MachineProfile *string `json:"MachineProfile,omitempty"`
	// The number of processors that virtual machines created for the image preparing should use.
	VMCpuCount *int32 `json:"VMCpuCount,omitempty"`
	// The maximum amount of memory that virtual machines created for the image preparing should use.
	VMMemoryMB *int32 `json:"VMMemoryMB,omitempty"`
	// The size in GB of any temporary storage disk used by the write back cache. Should be used in conjunction with WriteBackCacheMemorySizeMB.
	WriteBackCacheDiskSizeGB *int32 `json:"WriteBackCacheDiskSizeGB,omitempty"`
	// The size in MB of any write back cache if required. Should be used in conjunction with WriteBackCacheDiskSizeGB.
	WriteBackCacheMemorySizeMB *int32 `json:"WriteBackCacheMemorySizeMB,omitempty"`
	// Administrative scopes which the newly created image version will be a part of.
	Scopes []string `json:"Scopes,omitempty"`
	// Specifies how the attached NICs are mapped to networks.  If this parameter is omitted, provisioned VMs are created with a single NIC, which is mapped to the default network in the hypervisor resource pool.  If this parameter is supplied, machines are created with the number of NICs specified in the map, and each NIC is attached to the specified network.
	NetworkMapping []NetworkMapRequestModel `json:"NetworkMapping,omitempty"`
	// The properties of the image version that are specific to the target hosting infrastructure.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
	// The description associated with the image version.
	ImageVersionDescription *string `json:"ImageVersionDescription,omitempty"`
}

// NewCreateImageDefinitionRequestModelImageVersion instantiates a new CreateImageDefinitionRequestModelImageVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageDefinitionRequestModelImageVersion() *CreateImageDefinitionRequestModelImageVersion {
	this := CreateImageDefinitionRequestModelImageVersion{}
	return &this
}

// NewCreateImageDefinitionRequestModelImageVersionWithDefaults instantiates a new CreateImageDefinitionRequestModelImageVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageDefinitionRequestModelImageVersionWithDefaults() *CreateImageDefinitionRequestModelImageVersion {
	this := CreateImageDefinitionRequestModelImageVersion{}
	return &this
}

// GetMasterImageVM returns the MasterImageVM field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetMasterImageVM() string {
	if o == nil || IsNil(o.MasterImageVM) {
		var ret string
		return ret
	}
	return *o.MasterImageVM
}

// GetMasterImageVMOk returns a tuple with the MasterImageVM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetMasterImageVMOk() (*string, bool) {
	if o == nil || IsNil(o.MasterImageVM) {
		return nil, false
	}
	return o.MasterImageVM, true
}

// HasMasterImageVM returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasMasterImageVM() bool {
	if o != nil && !IsNil(o.MasterImageVM) {
		return true
	}

	return false
}

// SetMasterImageVM gets a reference to the given string and assigns it to the MasterImageVM field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetMasterImageVM(v string) {
	o.MasterImageVM = &v
}

// GetServiceOffering returns the ServiceOffering field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetServiceOffering() string {
	if o == nil || IsNil(o.ServiceOffering) {
		var ret string
		return ret
	}
	return *o.ServiceOffering
}

// GetServiceOfferingOk returns a tuple with the ServiceOffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetServiceOfferingOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceOffering) {
		return nil, false
	}
	return o.ServiceOffering, true
}

// HasServiceOffering returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasServiceOffering() bool {
	if o != nil && !IsNil(o.ServiceOffering) {
		return true
	}

	return false
}

// SetServiceOffering gets a reference to the given string and assigns it to the ServiceOffering field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetServiceOffering(v string) {
	o.ServiceOffering = &v
}

// GetMachineProfile returns the MachineProfile field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetMachineProfile() string {
	if o == nil || IsNil(o.MachineProfile) {
		var ret string
		return ret
	}
	return *o.MachineProfile
}

// GetMachineProfileOk returns a tuple with the MachineProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetMachineProfileOk() (*string, bool) {
	if o == nil || IsNil(o.MachineProfile) {
		return nil, false
	}
	return o.MachineProfile, true
}

// HasMachineProfile returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasMachineProfile() bool {
	if o != nil && !IsNil(o.MachineProfile) {
		return true
	}

	return false
}

// SetMachineProfile gets a reference to the given string and assigns it to the MachineProfile field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetMachineProfile(v string) {
	o.MachineProfile = &v
}

// GetVMCpuCount returns the VMCpuCount field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetVMCpuCount() int32 {
	if o == nil || IsNil(o.VMCpuCount) {
		var ret int32
		return ret
	}
	return *o.VMCpuCount
}

// GetVMCpuCountOk returns a tuple with the VMCpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetVMCpuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VMCpuCount) {
		return nil, false
	}
	return o.VMCpuCount, true
}

// HasVMCpuCount returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasVMCpuCount() bool {
	if o != nil && !IsNil(o.VMCpuCount) {
		return true
	}

	return false
}

// SetVMCpuCount gets a reference to the given int32 and assigns it to the VMCpuCount field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetVMCpuCount(v int32) {
	o.VMCpuCount = &v
}

// GetVMMemoryMB returns the VMMemoryMB field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetVMMemoryMB() int32 {
	if o == nil || IsNil(o.VMMemoryMB) {
		var ret int32
		return ret
	}
	return *o.VMMemoryMB
}

// GetVMMemoryMBOk returns a tuple with the VMMemoryMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetVMMemoryMBOk() (*int32, bool) {
	if o == nil || IsNil(o.VMMemoryMB) {
		return nil, false
	}
	return o.VMMemoryMB, true
}

// HasVMMemoryMB returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasVMMemoryMB() bool {
	if o != nil && !IsNil(o.VMMemoryMB) {
		return true
	}

	return false
}

// SetVMMemoryMB gets a reference to the given int32 and assigns it to the VMMemoryMB field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetVMMemoryMB(v int32) {
	o.VMMemoryMB = &v
}

// GetWriteBackCacheDiskSizeGB returns the WriteBackCacheDiskSizeGB field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetWriteBackCacheDiskSizeGB() int32 {
	if o == nil || IsNil(o.WriteBackCacheDiskSizeGB) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheDiskSizeGB
}

// GetWriteBackCacheDiskSizeGBOk returns a tuple with the WriteBackCacheDiskSizeGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetWriteBackCacheDiskSizeGBOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheDiskSizeGB) {
		return nil, false
	}
	return o.WriteBackCacheDiskSizeGB, true
}

// HasWriteBackCacheDiskSizeGB returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasWriteBackCacheDiskSizeGB() bool {
	if o != nil && !IsNil(o.WriteBackCacheDiskSizeGB) {
		return true
	}

	return false
}

// SetWriteBackCacheDiskSizeGB gets a reference to the given int32 and assigns it to the WriteBackCacheDiskSizeGB field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetWriteBackCacheDiskSizeGB(v int32) {
	o.WriteBackCacheDiskSizeGB = &v
}

// GetWriteBackCacheMemorySizeMB returns the WriteBackCacheMemorySizeMB field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetWriteBackCacheMemorySizeMB() int32 {
	if o == nil || IsNil(o.WriteBackCacheMemorySizeMB) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheMemorySizeMB
}

// GetWriteBackCacheMemorySizeMBOk returns a tuple with the WriteBackCacheMemorySizeMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetWriteBackCacheMemorySizeMBOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheMemorySizeMB) {
		return nil, false
	}
	return o.WriteBackCacheMemorySizeMB, true
}

// HasWriteBackCacheMemorySizeMB returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasWriteBackCacheMemorySizeMB() bool {
	if o != nil && !IsNil(o.WriteBackCacheMemorySizeMB) {
		return true
	}

	return false
}

// SetWriteBackCacheMemorySizeMB gets a reference to the given int32 and assigns it to the WriteBackCacheMemorySizeMB field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetWriteBackCacheMemorySizeMB(v int32) {
	o.WriteBackCacheMemorySizeMB = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetScopes(v []string) {
	o.Scopes = v
}

// GetNetworkMapping returns the NetworkMapping field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetNetworkMapping() []NetworkMapRequestModel {
	if o == nil || IsNil(o.NetworkMapping) {
		var ret []NetworkMapRequestModel
		return ret
	}
	return o.NetworkMapping
}

// GetNetworkMappingOk returns a tuple with the NetworkMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetNetworkMappingOk() ([]NetworkMapRequestModel, bool) {
	if o == nil || IsNil(o.NetworkMapping) {
		return nil, false
	}
	return o.NetworkMapping, true
}

// HasNetworkMapping returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasNetworkMapping() bool {
	if o != nil && !IsNil(o.NetworkMapping) {
		return true
	}

	return false
}

// SetNetworkMapping gets a reference to the given []NetworkMapRequestModel and assigns it to the NetworkMapping field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetNetworkMapping(v []NetworkMapRequestModel) {
	o.NetworkMapping = v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetCustomProperties() []NameValueStringPairModel {
	if o == nil || IsNil(o.CustomProperties) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

// GetImageVersionDescription returns the ImageVersionDescription field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageVersion) GetImageVersionDescription() string {
	if o == nil || IsNil(o.ImageVersionDescription) {
		var ret string
		return ret
	}
	return *o.ImageVersionDescription
}

// GetImageVersionDescriptionOk returns a tuple with the ImageVersionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) GetImageVersionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ImageVersionDescription) {
		return nil, false
	}
	return o.ImageVersionDescription, true
}

// HasImageVersionDescription returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageVersion) HasImageVersionDescription() bool {
	if o != nil && !IsNil(o.ImageVersionDescription) {
		return true
	}

	return false
}

// SetImageVersionDescription gets a reference to the given string and assigns it to the ImageVersionDescription field.
func (o *CreateImageDefinitionRequestModelImageVersion) SetImageVersionDescription(v string) {
	o.ImageVersionDescription = &v
}

func (o CreateImageDefinitionRequestModelImageVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateImageDefinitionRequestModelImageVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MasterImageVM) {
		toSerialize["MasterImageVM"] = o.MasterImageVM
	}
	if !IsNil(o.ServiceOffering) {
		toSerialize["ServiceOffering"] = o.ServiceOffering
	}
	if !IsNil(o.MachineProfile) {
		toSerialize["MachineProfile"] = o.MachineProfile
	}
	if !IsNil(o.VMCpuCount) {
		toSerialize["VMCpuCount"] = o.VMCpuCount
	}
	if !IsNil(o.VMMemoryMB) {
		toSerialize["VMMemoryMB"] = o.VMMemoryMB
	}
	if !IsNil(o.WriteBackCacheDiskSizeGB) {
		toSerialize["WriteBackCacheDiskSizeGB"] = o.WriteBackCacheDiskSizeGB
	}
	if !IsNil(o.WriteBackCacheMemorySizeMB) {
		toSerialize["WriteBackCacheMemorySizeMB"] = o.WriteBackCacheMemorySizeMB
	}
	if !IsNil(o.Scopes) {
		toSerialize["Scopes"] = o.Scopes
	}
	if !IsNil(o.NetworkMapping) {
		toSerialize["NetworkMapping"] = o.NetworkMapping
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	if !IsNil(o.ImageVersionDescription) {
		toSerialize["ImageVersionDescription"] = o.ImageVersionDescription
	}
	return toSerialize, nil
}

type NullableCreateImageDefinitionRequestModelImageVersion struct {
	value *CreateImageDefinitionRequestModelImageVersion
	isSet bool
}

func (v NullableCreateImageDefinitionRequestModelImageVersion) Get() *CreateImageDefinitionRequestModelImageVersion {
	return v.value
}

func (v *NullableCreateImageDefinitionRequestModelImageVersion) Set(val *CreateImageDefinitionRequestModelImageVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageDefinitionRequestModelImageVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageDefinitionRequestModelImageVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageDefinitionRequestModelImageVersion(val *CreateImageDefinitionRequestModelImageVersion) *NullableCreateImageDefinitionRequestModelImageVersion {
	return &NullableCreateImageDefinitionRequestModelImageVersion{value: val, isSet: true}
}

func (v NullableCreateImageDefinitionRequestModelImageVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageDefinitionRequestModelImageVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


