/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityBaseResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityBaseResponseModel{}

// IdentityBaseResponseModel Base Identity object for User, Machine and Container Identity objects.
type IdentityBaseResponseModel struct {
	// The Domain the object belongs to. NOTE: When doing a forest level search, the domain property is populated only if the object contains a SID and the SID was requested as property to be fetched.
	Domain *string `json:"Domain,omitempty"`
	// The forest the object belongs to.
	Forest *string `json:"Forest,omitempty"`
	// The GUID of the object, the GUID is unique across the enterprise and anywhere else.
	Guid *string `json:"Guid,omitempty"`
	// The Distinguished name of the object. Distinguished names (DNs) are unique and they unambiguously identify objects in the directory.
	DistinguishedName *string `json:"DistinguishedName,omitempty"`
	// The unique distinguished name of the object in canonical format.
	CanonicalName *string `json:"CanonicalName,omitempty"`
	// Set to True during a bulk identity lookup operation. For individual identity lookup, usually an exception will be thrown.
	PossibleLookupFailure *bool `json:"PossibleLookupFailure,omitempty"`
	// Domain controller that performed the add/update operation on this object
	DirectoryServer *string `json:"DirectoryServer,omitempty"`
}

// NewIdentityBaseResponseModel instantiates a new IdentityBaseResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityBaseResponseModel() *IdentityBaseResponseModel {
	this := IdentityBaseResponseModel{}
	return &this
}

// NewIdentityBaseResponseModelWithDefaults instantiates a new IdentityBaseResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityBaseResponseModelWithDefaults() *IdentityBaseResponseModel {
	this := IdentityBaseResponseModel{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *IdentityBaseResponseModel) SetDomain(v string) {
	o.Domain = &v
}

// GetForest returns the Forest field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest) {
		var ret string
		return ret
	}
	return *o.Forest
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetForestOk() (*string, bool) {
	if o == nil || IsNil(o.Forest) {
		return nil, false
	}
	return o.Forest, true
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasForest() bool {
	if o != nil && !IsNil(o.Forest) {
		return true
	}

	return false
}

// SetForest gets a reference to the given string and assigns it to the Forest field.
func (o *IdentityBaseResponseModel) SetForest(v string) {
	o.Forest = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *IdentityBaseResponseModel) SetGuid(v string) {
	o.Guid = &v
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName) {
		var ret string
		return ret
	}
	return *o.DistinguishedName
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetDistinguishedNameOk() (*string, bool) {
	if o == nil || IsNil(o.DistinguishedName) {
		return nil, false
	}
	return o.DistinguishedName, true
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasDistinguishedName() bool {
	if o != nil && !IsNil(o.DistinguishedName) {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given string and assigns it to the DistinguishedName field.
func (o *IdentityBaseResponseModel) SetDistinguishedName(v string) {
	o.DistinguishedName = &v
}

// GetCanonicalName returns the CanonicalName field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetCanonicalName() string {
	if o == nil || IsNil(o.CanonicalName) {
		var ret string
		return ret
	}
	return *o.CanonicalName
}

// GetCanonicalNameOk returns a tuple with the CanonicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetCanonicalNameOk() (*string, bool) {
	if o == nil || IsNil(o.CanonicalName) {
		return nil, false
	}
	return o.CanonicalName, true
}

// HasCanonicalName returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasCanonicalName() bool {
	if o != nil && !IsNil(o.CanonicalName) {
		return true
	}

	return false
}

// SetCanonicalName gets a reference to the given string and assigns it to the CanonicalName field.
func (o *IdentityBaseResponseModel) SetCanonicalName(v string) {
	o.CanonicalName = &v
}

// GetPossibleLookupFailure returns the PossibleLookupFailure field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetPossibleLookupFailure() bool {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		var ret bool
		return ret
	}
	return *o.PossibleLookupFailure
}

// GetPossibleLookupFailureOk returns a tuple with the PossibleLookupFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetPossibleLookupFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		return nil, false
	}
	return o.PossibleLookupFailure, true
}

// HasPossibleLookupFailure returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasPossibleLookupFailure() bool {
	if o != nil && !IsNil(o.PossibleLookupFailure) {
		return true
	}

	return false
}

// SetPossibleLookupFailure gets a reference to the given bool and assigns it to the PossibleLookupFailure field.
func (o *IdentityBaseResponseModel) SetPossibleLookupFailure(v bool) {
	o.PossibleLookupFailure = &v
}

// GetDirectoryServer returns the DirectoryServer field value if set, zero value otherwise.
func (o *IdentityBaseResponseModel) GetDirectoryServer() string {
	if o == nil || IsNil(o.DirectoryServer) {
		var ret string
		return ret
	}
	return *o.DirectoryServer
}

// GetDirectoryServerOk returns a tuple with the DirectoryServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityBaseResponseModel) GetDirectoryServerOk() (*string, bool) {
	if o == nil || IsNil(o.DirectoryServer) {
		return nil, false
	}
	return o.DirectoryServer, true
}

// HasDirectoryServer returns a boolean if a field has been set.
func (o *IdentityBaseResponseModel) HasDirectoryServer() bool {
	if o != nil && !IsNil(o.DirectoryServer) {
		return true
	}

	return false
}

// SetDirectoryServer gets a reference to the given string and assigns it to the DirectoryServer field.
func (o *IdentityBaseResponseModel) SetDirectoryServer(v string) {
	o.DirectoryServer = &v
}

func (o IdentityBaseResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityBaseResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["Domain"] = o.Domain
	}
	if !IsNil(o.Forest) {
		toSerialize["Forest"] = o.Forest
	}
	if !IsNil(o.Guid) {
		toSerialize["Guid"] = o.Guid
	}
	if !IsNil(o.DistinguishedName) {
		toSerialize["DistinguishedName"] = o.DistinguishedName
	}
	if !IsNil(o.CanonicalName) {
		toSerialize["CanonicalName"] = o.CanonicalName
	}
	if !IsNil(o.PossibleLookupFailure) {
		toSerialize["PossibleLookupFailure"] = o.PossibleLookupFailure
	}
	if !IsNil(o.DirectoryServer) {
		toSerialize["DirectoryServer"] = o.DirectoryServer
	}
	return toSerialize, nil
}

type NullableIdentityBaseResponseModel struct {
	value *IdentityBaseResponseModel
	isSet bool
}

func (v NullableIdentityBaseResponseModel) Get() *IdentityBaseResponseModel {
	return v.value
}

func (v *NullableIdentityBaseResponseModel) Set(val *IdentityBaseResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityBaseResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityBaseResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityBaseResponseModel(val *IdentityBaseResponseModel) *NullableIdentityBaseResponseModel {
	return &NullableIdentityBaseResponseModel{value: val, isSet: true}
}

func (v NullableIdentityBaseResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityBaseResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


