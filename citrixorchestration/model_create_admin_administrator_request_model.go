/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateAdminAdministratorRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAdminAdministratorRequestModel{}

// CreateAdminAdministratorRequestModel Model for adding an administrator
type CreateAdminAdministratorRequestModel struct {
	// The administrator to add.
	User NullableString `json:"User,omitempty"`
	// Rights associated with the administrator. It is ok if there is no rights specified.
	Rights []AdminRightRequestModel `json:"Rights,omitempty"`
	// Indicates whether the administrator is enabled.  Disabled administrators cannot administer the site unless they are a member of a different user group which is granted access by a different administrator record.
	Enabled NullableBool `json:"Enabled,omitempty"`
}

// NewCreateAdminAdministratorRequestModel instantiates a new CreateAdminAdministratorRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAdminAdministratorRequestModel() *CreateAdminAdministratorRequestModel {
	this := CreateAdminAdministratorRequestModel{}
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	return &this
}

// NewCreateAdminAdministratorRequestModelWithDefaults instantiates a new CreateAdminAdministratorRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAdminAdministratorRequestModelWithDefaults() *CreateAdminAdministratorRequestModel {
	this := CreateAdminAdministratorRequestModel{}
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	return &this
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdminAdministratorRequestModel) GetUser() string {
	if o == nil || IsNil(o.User.Get()) {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdminAdministratorRequestModel) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *CreateAdminAdministratorRequestModel) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *CreateAdminAdministratorRequestModel) SetUser(v string) {
	o.User.Set(&v)
}

// SetUserNil sets the value for User to be an explicit nil
func (o *CreateAdminAdministratorRequestModel) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *CreateAdminAdministratorRequestModel) UnsetUser() {
	o.User.Unset()
}

// GetRights returns the Rights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdminAdministratorRequestModel) GetRights() []AdminRightRequestModel {
	if o == nil {
		var ret []AdminRightRequestModel
		return ret
	}
	return o.Rights
}

// GetRightsOk returns a tuple with the Rights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdminAdministratorRequestModel) GetRightsOk() ([]AdminRightRequestModel, bool) {
	if o == nil || IsNil(o.Rights) {
		return nil, false
	}
	return o.Rights, true
}

// HasRights returns a boolean if a field has been set.
func (o *CreateAdminAdministratorRequestModel) HasRights() bool {
	if o != nil && !IsNil(o.Rights) {
		return true
	}

	return false
}

// SetRights gets a reference to the given []AdminRightRequestModel and assigns it to the Rights field.
func (o *CreateAdminAdministratorRequestModel) SetRights(v []AdminRightRequestModel) {
	o.Rights = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdminAdministratorRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdminAdministratorRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateAdminAdministratorRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *CreateAdminAdministratorRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *CreateAdminAdministratorRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *CreateAdminAdministratorRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

func (o CreateAdminAdministratorRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAdminAdministratorRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.User.IsSet() {
		toSerialize["User"] = o.User.Get()
	}
	if o.Rights != nil {
		toSerialize["Rights"] = o.Rights
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	return toSerialize, nil
}

type NullableCreateAdminAdministratorRequestModel struct {
	value *CreateAdminAdministratorRequestModel
	isSet bool
}

func (v NullableCreateAdminAdministratorRequestModel) Get() *CreateAdminAdministratorRequestModel {
	return v.value
}

func (v *NullableCreateAdminAdministratorRequestModel) Set(val *CreateAdminAdministratorRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAdminAdministratorRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAdminAdministratorRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAdminAdministratorRequestModel(val *CreateAdminAdministratorRequestModel) *NullableCreateAdminAdministratorRequestModel {
	return &NullableCreateAdminAdministratorRequestModel{value: val, isSet: true}
}

func (v NullableCreateAdminAdministratorRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAdminAdministratorRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
