/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SessionTrendItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionTrendItem{}

// SessionTrendItem struct for SessionTrendItem
type SessionTrendItem struct {
	// The date and time for this SessionTrendItem.
	Date *string `json:"Date,omitempty"`
	// ActiveSessions
	ConcurrentSessions *int32 `json:"ConcurrentSessions,omitempty"`
	// ConnectedSessions
	ConnectedSessions *int32 `json:"ConnectedSessions,omitempty"`
	// DisconnectedSessions
	DisconnectedSessions *int32 `json:"DisconnectedSessions,omitempty"`
}

// NewSessionTrendItem instantiates a new SessionTrendItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTrendItem() *SessionTrendItem {
	this := SessionTrendItem{}
	return &this
}

// NewSessionTrendItemWithDefaults instantiates a new SessionTrendItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTrendItemWithDefaults() *SessionTrendItem {
	this := SessionTrendItem{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *SessionTrendItem) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTrendItem) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *SessionTrendItem) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *SessionTrendItem) SetDate(v string) {
	o.Date = &v
}

// GetConcurrentSessions returns the ConcurrentSessions field value if set, zero value otherwise.
func (o *SessionTrendItem) GetConcurrentSessions() int32 {
	if o == nil || IsNil(o.ConcurrentSessions) {
		var ret int32
		return ret
	}
	return *o.ConcurrentSessions
}

// GetConcurrentSessionsOk returns a tuple with the ConcurrentSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTrendItem) GetConcurrentSessionsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConcurrentSessions) {
		return nil, false
	}
	return o.ConcurrentSessions, true
}

// HasConcurrentSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasConcurrentSessions() bool {
	if o != nil && !IsNil(o.ConcurrentSessions) {
		return true
	}

	return false
}

// SetConcurrentSessions gets a reference to the given int32 and assigns it to the ConcurrentSessions field.
func (o *SessionTrendItem) SetConcurrentSessions(v int32) {
	o.ConcurrentSessions = &v
}

// GetConnectedSessions returns the ConnectedSessions field value if set, zero value otherwise.
func (o *SessionTrendItem) GetConnectedSessions() int32 {
	if o == nil || IsNil(o.ConnectedSessions) {
		var ret int32
		return ret
	}
	return *o.ConnectedSessions
}

// GetConnectedSessionsOk returns a tuple with the ConnectedSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTrendItem) GetConnectedSessionsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectedSessions) {
		return nil, false
	}
	return o.ConnectedSessions, true
}

// HasConnectedSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasConnectedSessions() bool {
	if o != nil && !IsNil(o.ConnectedSessions) {
		return true
	}

	return false
}

// SetConnectedSessions gets a reference to the given int32 and assigns it to the ConnectedSessions field.
func (o *SessionTrendItem) SetConnectedSessions(v int32) {
	o.ConnectedSessions = &v
}

// GetDisconnectedSessions returns the DisconnectedSessions field value if set, zero value otherwise.
func (o *SessionTrendItem) GetDisconnectedSessions() int32 {
	if o == nil || IsNil(o.DisconnectedSessions) {
		var ret int32
		return ret
	}
	return *o.DisconnectedSessions
}

// GetDisconnectedSessionsOk returns a tuple with the DisconnectedSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionTrendItem) GetDisconnectedSessionsOk() (*int32, bool) {
	if o == nil || IsNil(o.DisconnectedSessions) {
		return nil, false
	}
	return o.DisconnectedSessions, true
}

// HasDisconnectedSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasDisconnectedSessions() bool {
	if o != nil && !IsNil(o.DisconnectedSessions) {
		return true
	}

	return false
}

// SetDisconnectedSessions gets a reference to the given int32 and assigns it to the DisconnectedSessions field.
func (o *SessionTrendItem) SetDisconnectedSessions(v int32) {
	o.DisconnectedSessions = &v
}

func (o SessionTrendItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionTrendItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["Date"] = o.Date
	}
	if !IsNil(o.ConcurrentSessions) {
		toSerialize["ConcurrentSessions"] = o.ConcurrentSessions
	}
	if !IsNil(o.ConnectedSessions) {
		toSerialize["ConnectedSessions"] = o.ConnectedSessions
	}
	if !IsNil(o.DisconnectedSessions) {
		toSerialize["DisconnectedSessions"] = o.DisconnectedSessions
	}
	return toSerialize, nil
}

type NullableSessionTrendItem struct {
	value *SessionTrendItem
	isSet bool
}

func (v NullableSessionTrendItem) Get() *SessionTrendItem {
	return v.value
}

func (v *NullableSessionTrendItem) Set(val *SessionTrendItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTrendItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTrendItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTrendItem(val *SessionTrendItem) *NullableSessionTrendItem {
	return &NullableSessionTrendItem{value: val, isSet: true}
}

func (v NullableSessionTrendItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTrendItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


