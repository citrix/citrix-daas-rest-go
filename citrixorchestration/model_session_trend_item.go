/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SessionTrendItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionTrendItem{}

// SessionTrendItem struct for SessionTrendItem
type SessionTrendItem struct {
	// The date and time for this SessionTrendItem.
	Date NullableString `json:"Date,omitempty"`
	// ActiveSessions
	ConcurrentSessions NullableInt32 `json:"ConcurrentSessions,omitempty"`
	// ConnectedSessions
	ConnectedSessions NullableInt32 `json:"ConnectedSessions,omitempty"`
	// DisconnectedSessions
	DisconnectedSessions NullableInt32 `json:"DisconnectedSessions,omitempty"`
}

// NewSessionTrendItem instantiates a new SessionTrendItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionTrendItem() *SessionTrendItem {
	this := SessionTrendItem{}
	return &this
}

// NewSessionTrendItemWithDefaults instantiates a new SessionTrendItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionTrendItemWithDefaults() *SessionTrendItem {
	this := SessionTrendItem{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionTrendItem) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionTrendItem) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *SessionTrendItem) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *SessionTrendItem) SetDate(v string) {
	o.Date.Set(&v)
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *SessionTrendItem) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *SessionTrendItem) UnsetDate() {
	o.Date.Unset()
}

// GetConcurrentSessions returns the ConcurrentSessions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionTrendItem) GetConcurrentSessions() int32 {
	if o == nil || IsNil(o.ConcurrentSessions.Get()) {
		var ret int32
		return ret
	}
	return *o.ConcurrentSessions.Get()
}

// GetConcurrentSessionsOk returns a tuple with the ConcurrentSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionTrendItem) GetConcurrentSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConcurrentSessions.Get(), o.ConcurrentSessions.IsSet()
}

// HasConcurrentSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasConcurrentSessions() bool {
	if o != nil && o.ConcurrentSessions.IsSet() {
		return true
	}

	return false
}

// SetConcurrentSessions gets a reference to the given NullableInt32 and assigns it to the ConcurrentSessions field.
func (o *SessionTrendItem) SetConcurrentSessions(v int32) {
	o.ConcurrentSessions.Set(&v)
}
// SetConcurrentSessionsNil sets the value for ConcurrentSessions to be an explicit nil
func (o *SessionTrendItem) SetConcurrentSessionsNil() {
	o.ConcurrentSessions.Set(nil)
}

// UnsetConcurrentSessions ensures that no value is present for ConcurrentSessions, not even an explicit nil
func (o *SessionTrendItem) UnsetConcurrentSessions() {
	o.ConcurrentSessions.Unset()
}

// GetConnectedSessions returns the ConnectedSessions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionTrendItem) GetConnectedSessions() int32 {
	if o == nil || IsNil(o.ConnectedSessions.Get()) {
		var ret int32
		return ret
	}
	return *o.ConnectedSessions.Get()
}

// GetConnectedSessionsOk returns a tuple with the ConnectedSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionTrendItem) GetConnectedSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectedSessions.Get(), o.ConnectedSessions.IsSet()
}

// HasConnectedSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasConnectedSessions() bool {
	if o != nil && o.ConnectedSessions.IsSet() {
		return true
	}

	return false
}

// SetConnectedSessions gets a reference to the given NullableInt32 and assigns it to the ConnectedSessions field.
func (o *SessionTrendItem) SetConnectedSessions(v int32) {
	o.ConnectedSessions.Set(&v)
}
// SetConnectedSessionsNil sets the value for ConnectedSessions to be an explicit nil
func (o *SessionTrendItem) SetConnectedSessionsNil() {
	o.ConnectedSessions.Set(nil)
}

// UnsetConnectedSessions ensures that no value is present for ConnectedSessions, not even an explicit nil
func (o *SessionTrendItem) UnsetConnectedSessions() {
	o.ConnectedSessions.Unset()
}

// GetDisconnectedSessions returns the DisconnectedSessions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SessionTrendItem) GetDisconnectedSessions() int32 {
	if o == nil || IsNil(o.DisconnectedSessions.Get()) {
		var ret int32
		return ret
	}
	return *o.DisconnectedSessions.Get()
}

// GetDisconnectedSessionsOk returns a tuple with the DisconnectedSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SessionTrendItem) GetDisconnectedSessionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisconnectedSessions.Get(), o.DisconnectedSessions.IsSet()
}

// HasDisconnectedSessions returns a boolean if a field has been set.
func (o *SessionTrendItem) HasDisconnectedSessions() bool {
	if o != nil && o.DisconnectedSessions.IsSet() {
		return true
	}

	return false
}

// SetDisconnectedSessions gets a reference to the given NullableInt32 and assigns it to the DisconnectedSessions field.
func (o *SessionTrendItem) SetDisconnectedSessions(v int32) {
	o.DisconnectedSessions.Set(&v)
}
// SetDisconnectedSessionsNil sets the value for DisconnectedSessions to be an explicit nil
func (o *SessionTrendItem) SetDisconnectedSessionsNil() {
	o.DisconnectedSessions.Set(nil)
}

// UnsetDisconnectedSessions ensures that no value is present for DisconnectedSessions, not even an explicit nil
func (o *SessionTrendItem) UnsetDisconnectedSessions() {
	o.DisconnectedSessions.Unset()
}

func (o SessionTrendItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionTrendItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Date.IsSet() {
		toSerialize["Date"] = o.Date.Get()
	}
	if o.ConcurrentSessions.IsSet() {
		toSerialize["ConcurrentSessions"] = o.ConcurrentSessions.Get()
	}
	if o.ConnectedSessions.IsSet() {
		toSerialize["ConnectedSessions"] = o.ConnectedSessions.Get()
	}
	if o.DisconnectedSessions.IsSet() {
		toSerialize["DisconnectedSessions"] = o.DisconnectedSessions.Get()
	}
	return toSerialize, nil
}

type NullableSessionTrendItem struct {
	value *SessionTrendItem
	isSet bool
}

func (v NullableSessionTrendItem) Get() *SessionTrendItem {
	return v.value
}

func (v *NullableSessionTrendItem) Set(val *SessionTrendItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTrendItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTrendItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTrendItem(val *SessionTrendItem) *NullableSessionTrendItem {
	return &NullableSessionTrendItem{value: val, isSet: true}
}

func (v NullableSessionTrendItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTrendItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


