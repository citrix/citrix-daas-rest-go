/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the MeResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeResponseModel{}

// MeResponseModel Details about the currently logged-in administrator.
type MeResponseModel struct {
	// Id of the logged-in user. Internally: this is the *sub* from the bearer token.  NOT the user_id.
	UserId string `json:"UserId"`
	// Display name of the user. Internally: the *displayname* from the bearer token.
	DisplayName string `json:"DisplayName"`
	// Time when the login token expires. RFC 3339 compatible format. Internally: the *exp* from the bearer token, converted to RFC 3339.
	ExpiryTime string `json:"ExpiryTime"`
	// Time after which the login token can no longer be refreshed. RFC 3339 compatible format. Internally: the *refresh_expiration* from the bearer token, converted to RFC 3339.
	RefreshExpirationTime string `json:"RefreshExpirationTime"`
	// Verified email of the user.
	VerifiedEmail *string `json:"VerifiedEmail,omitempty"`
	// True if the current customer is a csp customer(partner/tenant)
	IsCspCustomer *bool `json:"IsCspCustomer,omitempty"`
	// List of customers and sites accessible by the user.
	Customers []MyCustomerResponseModel `json:"Customers"`
}

// NewMeResponseModel instantiates a new MeResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeResponseModel(userId string, displayName string, expiryTime string, refreshExpirationTime string, customers []MyCustomerResponseModel) *MeResponseModel {
	this := MeResponseModel{}
	this.UserId = userId
	this.DisplayName = displayName
	this.ExpiryTime = expiryTime
	this.RefreshExpirationTime = refreshExpirationTime
	this.Customers = customers
	return &this
}

// NewMeResponseModelWithDefaults instantiates a new MeResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeResponseModelWithDefaults() *MeResponseModel {
	this := MeResponseModel{}
	return &this
}

// GetUserId returns the UserId field value
func (o *MeResponseModel) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MeResponseModel) SetUserId(v string) {
	o.UserId = v
}

// GetDisplayName returns the DisplayName field value
func (o *MeResponseModel) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *MeResponseModel) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetExpiryTime returns the ExpiryTime field value
func (o *MeResponseModel) GetExpiryTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetExpiryTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryTime, true
}

// SetExpiryTime sets field value
func (o *MeResponseModel) SetExpiryTime(v string) {
	o.ExpiryTime = v
}

// GetRefreshExpirationTime returns the RefreshExpirationTime field value
func (o *MeResponseModel) GetRefreshExpirationTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshExpirationTime
}

// GetRefreshExpirationTimeOk returns a tuple with the RefreshExpirationTime field value
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetRefreshExpirationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshExpirationTime, true
}

// SetRefreshExpirationTime sets field value
func (o *MeResponseModel) SetRefreshExpirationTime(v string) {
	o.RefreshExpirationTime = v
}

// GetVerifiedEmail returns the VerifiedEmail field value if set, zero value otherwise.
func (o *MeResponseModel) GetVerifiedEmail() string {
	if o == nil || IsNil(o.VerifiedEmail) {
		var ret string
		return ret
	}
	return *o.VerifiedEmail
}

// GetVerifiedEmailOk returns a tuple with the VerifiedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetVerifiedEmailOk() (*string, bool) {
	if o == nil || IsNil(o.VerifiedEmail) {
		return nil, false
	}
	return o.VerifiedEmail, true
}

// HasVerifiedEmail returns a boolean if a field has been set.
func (o *MeResponseModel) HasVerifiedEmail() bool {
	if o != nil && !IsNil(o.VerifiedEmail) {
		return true
	}

	return false
}

// SetVerifiedEmail gets a reference to the given string and assigns it to the VerifiedEmail field.
func (o *MeResponseModel) SetVerifiedEmail(v string) {
	o.VerifiedEmail = &v
}

// GetIsCspCustomer returns the IsCspCustomer field value if set, zero value otherwise.
func (o *MeResponseModel) GetIsCspCustomer() bool {
	if o == nil || IsNil(o.IsCspCustomer) {
		var ret bool
		return ret
	}
	return *o.IsCspCustomer
}

// GetIsCspCustomerOk returns a tuple with the IsCspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetIsCspCustomerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCspCustomer) {
		return nil, false
	}
	return o.IsCspCustomer, true
}

// HasIsCspCustomer returns a boolean if a field has been set.
func (o *MeResponseModel) HasIsCspCustomer() bool {
	if o != nil && !IsNil(o.IsCspCustomer) {
		return true
	}

	return false
}

// SetIsCspCustomer gets a reference to the given bool and assigns it to the IsCspCustomer field.
func (o *MeResponseModel) SetIsCspCustomer(v bool) {
	o.IsCspCustomer = &v
}

// GetCustomers returns the Customers field value
func (o *MeResponseModel) GetCustomers() []MyCustomerResponseModel {
	if o == nil {
		var ret []MyCustomerResponseModel
		return ret
	}

	return o.Customers
}

// GetCustomersOk returns a tuple with the Customers field value
// and a boolean to check if the value has been set.
func (o *MeResponseModel) GetCustomersOk() ([]MyCustomerResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Customers, true
}

// SetCustomers sets field value
func (o *MeResponseModel) SetCustomers(v []MyCustomerResponseModel) {
	o.Customers = v
}

func (o MeResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["UserId"] = o.UserId
	toSerialize["DisplayName"] = o.DisplayName
	toSerialize["ExpiryTime"] = o.ExpiryTime
	toSerialize["RefreshExpirationTime"] = o.RefreshExpirationTime
	if !IsNil(o.VerifiedEmail) {
		toSerialize["VerifiedEmail"] = o.VerifiedEmail
	}
	if !IsNil(o.IsCspCustomer) {
		toSerialize["IsCspCustomer"] = o.IsCspCustomer
	}
	toSerialize["Customers"] = o.Customers
	return toSerialize, nil
}

type NullableMeResponseModel struct {
	value *MeResponseModel
	isSet bool
}

func (v NullableMeResponseModel) Get() *MeResponseModel {
	return v.value
}

func (v *NullableMeResponseModel) Set(val *MeResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMeResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMeResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeResponseModel(val *MeResponseModel) *NullableMeResponseModel {
	return &NullableMeResponseModel{value: val, isSet: true}
}

func (v NullableMeResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


