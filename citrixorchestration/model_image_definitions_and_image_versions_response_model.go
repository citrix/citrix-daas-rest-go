/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageDefinitionsAndImageVersionsResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageDefinitionsAndImageVersionsResponseModel{}

// ImageDefinitionsAndImageVersionsResponseModel Response object for image definition and associated image versions.
type ImageDefinitionsAndImageVersionsResponseModel struct {
	// The Uid of the image definition.
	Id NullableString `json:"Id,omitempty"`
	// The name of the image definition.
	Name NullableString `json:"Name,omitempty"`
	// The create date for this image definition.
	CreationTime NullableString `json:"CreationTime,omitempty"`
	// Description.
	Description NullableString `json:"Description,omitempty"`
	OsType      OsType         `json:"OsType"`
	// The latest version for the image definition.
	LatestVersion     int32          `json:"LatestVersion"`
	VDASessionSupport SessionSupport `json:"VDASessionSupport"`
	// The hypervisor connections on which image definition is associated.
	HypervisorConnections []ImageDefinitionHypervisorConnectionResponseModel `json:"HypervisorConnections,omitempty"`
	// The image versions associated with this image definition.
	ImageVersions []ImageVersionResponseModel `json:"ImageVersions,omitempty"`
}

// NewImageDefinitionsAndImageVersionsResponseModel instantiates a new ImageDefinitionsAndImageVersionsResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageDefinitionsAndImageVersionsResponseModel(osType OsType, latestVersion int32, vDASessionSupport SessionSupport) *ImageDefinitionsAndImageVersionsResponseModel {
	this := ImageDefinitionsAndImageVersionsResponseModel{}
	this.OsType = osType
	this.LatestVersion = latestVersion
	this.VDASessionSupport = vDASessionSupport
	return &this
}

// NewImageDefinitionsAndImageVersionsResponseModelWithDefaults instantiates a new ImageDefinitionsAndImageVersionsResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageDefinitionsAndImageVersionsResponseModelWithDefaults() *ImageDefinitionsAndImageVersionsResponseModel {
	this := ImageDefinitionsAndImageVersionsResponseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetCreationTime() string {
	if o == nil || IsNil(o.CreationTime.Get()) {
		var ret string
		return ret
	}
	return *o.CreationTime.Get()
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationTime.Get(), o.CreationTime.IsSet()
}

// HasCreationTime returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasCreationTime() bool {
	if o != nil && o.CreationTime.IsSet() {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given NullableString and assigns it to the CreationTime field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetCreationTime(v string) {
	o.CreationTime.Set(&v)
}

// SetCreationTimeNil sets the value for CreationTime to be an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetCreationTimeNil() {
	o.CreationTime.Set(nil)
}

// UnsetCreationTime ensures that no value is present for CreationTime, not even an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) UnsetCreationTime() {
	o.CreationTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ImageDefinitionsAndImageVersionsResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetOsType returns the OsType field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetOsType() OsType {
	if o == nil {
		var ret OsType
		return ret
	}

	return o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetOsTypeOk() (*OsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsType, true
}

// SetOsType sets field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetOsType(v OsType) {
	o.OsType = v
}

// GetLatestVersion returns the LatestVersion field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetLatestVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetLatestVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestVersion, true
}

// SetLatestVersion sets field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetLatestVersion(v int32) {
	o.LatestVersion = v
}

// GetVDASessionSupport returns the VDASessionSupport field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetVDASessionSupport() SessionSupport {
	if o == nil {
		var ret SessionSupport
		return ret
	}

	return o.VDASessionSupport
}

// GetVDASessionSupportOk returns a tuple with the VDASessionSupport field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetVDASessionSupportOk() (*SessionSupport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VDASessionSupport, true
}

// SetVDASessionSupport sets field value
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetVDASessionSupport(v SessionSupport) {
	o.VDASessionSupport = v
}

// GetHypervisorConnections returns the HypervisorConnections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetHypervisorConnections() []ImageDefinitionHypervisorConnectionResponseModel {
	if o == nil {
		var ret []ImageDefinitionHypervisorConnectionResponseModel
		return ret
	}
	return o.HypervisorConnections
}

// GetHypervisorConnectionsOk returns a tuple with the HypervisorConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetHypervisorConnectionsOk() ([]ImageDefinitionHypervisorConnectionResponseModel, bool) {
	if o == nil || IsNil(o.HypervisorConnections) {
		return nil, false
	}
	return o.HypervisorConnections, true
}

// HasHypervisorConnections returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasHypervisorConnections() bool {
	if o != nil && IsNil(o.HypervisorConnections) {
		return true
	}

	return false
}

// SetHypervisorConnections gets a reference to the given []ImageDefinitionHypervisorConnectionResponseModel and assigns it to the HypervisorConnections field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetHypervisorConnections(v []ImageDefinitionHypervisorConnectionResponseModel) {
	o.HypervisorConnections = v
}

// GetImageVersions returns the ImageVersions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetImageVersions() []ImageVersionResponseModel {
	if o == nil {
		var ret []ImageVersionResponseModel
		return ret
	}
	return o.ImageVersions
}

// GetImageVersionsOk returns a tuple with the ImageVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionsAndImageVersionsResponseModel) GetImageVersionsOk() ([]ImageVersionResponseModel, bool) {
	if o == nil || IsNil(o.ImageVersions) {
		return nil, false
	}
	return o.ImageVersions, true
}

// HasImageVersions returns a boolean if a field has been set.
func (o *ImageDefinitionsAndImageVersionsResponseModel) HasImageVersions() bool {
	if o != nil && IsNil(o.ImageVersions) {
		return true
	}

	return false
}

// SetImageVersions gets a reference to the given []ImageVersionResponseModel and assigns it to the ImageVersions field.
func (o *ImageDefinitionsAndImageVersionsResponseModel) SetImageVersions(v []ImageVersionResponseModel) {
	o.ImageVersions = v
}

func (o ImageDefinitionsAndImageVersionsResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageDefinitionsAndImageVersionsResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.CreationTime.IsSet() {
		toSerialize["CreationTime"] = o.CreationTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	toSerialize["OsType"] = o.OsType
	toSerialize["LatestVersion"] = o.LatestVersion
	toSerialize["VDASessionSupport"] = o.VDASessionSupport
	if o.HypervisorConnections != nil {
		toSerialize["HypervisorConnections"] = o.HypervisorConnections
	}
	if o.ImageVersions != nil {
		toSerialize["ImageVersions"] = o.ImageVersions
	}
	return toSerialize, nil
}

type NullableImageDefinitionsAndImageVersionsResponseModel struct {
	value *ImageDefinitionsAndImageVersionsResponseModel
	isSet bool
}

func (v NullableImageDefinitionsAndImageVersionsResponseModel) Get() *ImageDefinitionsAndImageVersionsResponseModel {
	return v.value
}

func (v *NullableImageDefinitionsAndImageVersionsResponseModel) Set(val *ImageDefinitionsAndImageVersionsResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageDefinitionsAndImageVersionsResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageDefinitionsAndImageVersionsResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageDefinitionsAndImageVersionsResponseModel(val *ImageDefinitionsAndImageVersionsResponseModel) *NullableImageDefinitionsAndImageVersionsResponseModel {
	return &NullableImageDefinitionsAndImageVersionsResponseModel{value: val, isSet: true}
}

func (v NullableImageDefinitionsAndImageVersionsResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageDefinitionsAndImageVersionsResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
