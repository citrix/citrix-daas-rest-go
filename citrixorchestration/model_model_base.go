/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ModelBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelBase{}

// ModelBase struct for ModelBase
type ModelBase struct {
}

// NewModelBase instantiates a new ModelBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelBase() *ModelBase {
	this := ModelBase{}
	return &this
}

// NewModelBaseWithDefaults instantiates a new ModelBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelBaseWithDefaults() *ModelBase {
	this := ModelBase{}
	return &this
}

func (o ModelBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableModelBase struct {
	value *ModelBase
	isSet bool
}

func (v NullableModelBase) Get() *ModelBase {
	return v.value
}

func (v *NullableModelBase) Set(val *ModelBase) {
	v.value = val
	v.isSet = true
}

func (v NullableModelBase) IsSet() bool {
	return v.isSet
}

func (v *NullableModelBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelBase(val *ModelBase) *NullableModelBase {
	return &NullableModelBase{value: val, isSet: true}
}

func (v NullableModelBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


