/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the StatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusModel{}

// StatusModel The status of the product.
type StatusModel struct {
	// The Orchestration service version.
	OrchServiceVersion NullableString `json:"OrchServiceVersion,omitempty"`
	// The Product internal version.
	ProductInternalVersion NullableString `json:"ProductInternalVersion,omitempty"`
	// The product external version.
	ProductExternalVersion NullableString `json:"ProductExternalVersion,omitempty"`
	OrchServiceStatus *ServiceStatus `json:"OrchServiceStatus,omitempty"`
	OrchRESTFulApiStatus *RestApiStatus `json:"OrchRESTFulApiStatus,omitempty"`
	SupportedAuthenticators *Authenticator `json:"SupportedAuthenticators,omitempty"`
}

// NewStatusModel instantiates a new StatusModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusModel() *StatusModel {
	this := StatusModel{}
	return &this
}

// NewStatusModelWithDefaults instantiates a new StatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusModelWithDefaults() *StatusModel {
	this := StatusModel{}
	return &this
}

// GetOrchServiceVersion returns the OrchServiceVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StatusModel) GetOrchServiceVersion() string {
	if o == nil || IsNil(o.OrchServiceVersion.Get()) {
		var ret string
		return ret
	}
	return *o.OrchServiceVersion.Get()
}

// GetOrchServiceVersionOk returns a tuple with the OrchServiceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StatusModel) GetOrchServiceVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrchServiceVersion.Get(), o.OrchServiceVersion.IsSet()
}

// HasOrchServiceVersion returns a boolean if a field has been set.
func (o *StatusModel) HasOrchServiceVersion() bool {
	if o != nil && o.OrchServiceVersion.IsSet() {
		return true
	}

	return false
}

// SetOrchServiceVersion gets a reference to the given NullableString and assigns it to the OrchServiceVersion field.
func (o *StatusModel) SetOrchServiceVersion(v string) {
	o.OrchServiceVersion.Set(&v)
}
// SetOrchServiceVersionNil sets the value for OrchServiceVersion to be an explicit nil
func (o *StatusModel) SetOrchServiceVersionNil() {
	o.OrchServiceVersion.Set(nil)
}

// UnsetOrchServiceVersion ensures that no value is present for OrchServiceVersion, not even an explicit nil
func (o *StatusModel) UnsetOrchServiceVersion() {
	o.OrchServiceVersion.Unset()
}

// GetProductInternalVersion returns the ProductInternalVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StatusModel) GetProductInternalVersion() string {
	if o == nil || IsNil(o.ProductInternalVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ProductInternalVersion.Get()
}

// GetProductInternalVersionOk returns a tuple with the ProductInternalVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StatusModel) GetProductInternalVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductInternalVersion.Get(), o.ProductInternalVersion.IsSet()
}

// HasProductInternalVersion returns a boolean if a field has been set.
func (o *StatusModel) HasProductInternalVersion() bool {
	if o != nil && o.ProductInternalVersion.IsSet() {
		return true
	}

	return false
}

// SetProductInternalVersion gets a reference to the given NullableString and assigns it to the ProductInternalVersion field.
func (o *StatusModel) SetProductInternalVersion(v string) {
	o.ProductInternalVersion.Set(&v)
}
// SetProductInternalVersionNil sets the value for ProductInternalVersion to be an explicit nil
func (o *StatusModel) SetProductInternalVersionNil() {
	o.ProductInternalVersion.Set(nil)
}

// UnsetProductInternalVersion ensures that no value is present for ProductInternalVersion, not even an explicit nil
func (o *StatusModel) UnsetProductInternalVersion() {
	o.ProductInternalVersion.Unset()
}

// GetProductExternalVersion returns the ProductExternalVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StatusModel) GetProductExternalVersion() string {
	if o == nil || IsNil(o.ProductExternalVersion.Get()) {
		var ret string
		return ret
	}
	return *o.ProductExternalVersion.Get()
}

// GetProductExternalVersionOk returns a tuple with the ProductExternalVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StatusModel) GetProductExternalVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProductExternalVersion.Get(), o.ProductExternalVersion.IsSet()
}

// HasProductExternalVersion returns a boolean if a field has been set.
func (o *StatusModel) HasProductExternalVersion() bool {
	if o != nil && o.ProductExternalVersion.IsSet() {
		return true
	}

	return false
}

// SetProductExternalVersion gets a reference to the given NullableString and assigns it to the ProductExternalVersion field.
func (o *StatusModel) SetProductExternalVersion(v string) {
	o.ProductExternalVersion.Set(&v)
}
// SetProductExternalVersionNil sets the value for ProductExternalVersion to be an explicit nil
func (o *StatusModel) SetProductExternalVersionNil() {
	o.ProductExternalVersion.Set(nil)
}

// UnsetProductExternalVersion ensures that no value is present for ProductExternalVersion, not even an explicit nil
func (o *StatusModel) UnsetProductExternalVersion() {
	o.ProductExternalVersion.Unset()
}

// GetOrchServiceStatus returns the OrchServiceStatus field value if set, zero value otherwise.
func (o *StatusModel) GetOrchServiceStatus() ServiceStatus {
	if o == nil || IsNil(o.OrchServiceStatus) {
		var ret ServiceStatus
		return ret
	}
	return *o.OrchServiceStatus
}

// GetOrchServiceStatusOk returns a tuple with the OrchServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusModel) GetOrchServiceStatusOk() (*ServiceStatus, bool) {
	if o == nil || IsNil(o.OrchServiceStatus) {
		return nil, false
	}
	return o.OrchServiceStatus, true
}

// HasOrchServiceStatus returns a boolean if a field has been set.
func (o *StatusModel) HasOrchServiceStatus() bool {
	if o != nil && !IsNil(o.OrchServiceStatus) {
		return true
	}

	return false
}

// SetOrchServiceStatus gets a reference to the given ServiceStatus and assigns it to the OrchServiceStatus field.
func (o *StatusModel) SetOrchServiceStatus(v ServiceStatus) {
	o.OrchServiceStatus = &v
}

// GetOrchRESTFulApiStatus returns the OrchRESTFulApiStatus field value if set, zero value otherwise.
func (o *StatusModel) GetOrchRESTFulApiStatus() RestApiStatus {
	if o == nil || IsNil(o.OrchRESTFulApiStatus) {
		var ret RestApiStatus
		return ret
	}
	return *o.OrchRESTFulApiStatus
}

// GetOrchRESTFulApiStatusOk returns a tuple with the OrchRESTFulApiStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusModel) GetOrchRESTFulApiStatusOk() (*RestApiStatus, bool) {
	if o == nil || IsNil(o.OrchRESTFulApiStatus) {
		return nil, false
	}
	return o.OrchRESTFulApiStatus, true
}

// HasOrchRESTFulApiStatus returns a boolean if a field has been set.
func (o *StatusModel) HasOrchRESTFulApiStatus() bool {
	if o != nil && !IsNil(o.OrchRESTFulApiStatus) {
		return true
	}

	return false
}

// SetOrchRESTFulApiStatus gets a reference to the given RestApiStatus and assigns it to the OrchRESTFulApiStatus field.
func (o *StatusModel) SetOrchRESTFulApiStatus(v RestApiStatus) {
	o.OrchRESTFulApiStatus = &v
}

// GetSupportedAuthenticators returns the SupportedAuthenticators field value if set, zero value otherwise.
func (o *StatusModel) GetSupportedAuthenticators() Authenticator {
	if o == nil || IsNil(o.SupportedAuthenticators) {
		var ret Authenticator
		return ret
	}
	return *o.SupportedAuthenticators
}

// GetSupportedAuthenticatorsOk returns a tuple with the SupportedAuthenticators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusModel) GetSupportedAuthenticatorsOk() (*Authenticator, bool) {
	if o == nil || IsNil(o.SupportedAuthenticators) {
		return nil, false
	}
	return o.SupportedAuthenticators, true
}

// HasSupportedAuthenticators returns a boolean if a field has been set.
func (o *StatusModel) HasSupportedAuthenticators() bool {
	if o != nil && !IsNil(o.SupportedAuthenticators) {
		return true
	}

	return false
}

// SetSupportedAuthenticators gets a reference to the given Authenticator and assigns it to the SupportedAuthenticators field.
func (o *StatusModel) SetSupportedAuthenticators(v Authenticator) {
	o.SupportedAuthenticators = &v
}

func (o StatusModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrchServiceVersion.IsSet() {
		toSerialize["OrchServiceVersion"] = o.OrchServiceVersion.Get()
	}
	if o.ProductInternalVersion.IsSet() {
		toSerialize["ProductInternalVersion"] = o.ProductInternalVersion.Get()
	}
	if o.ProductExternalVersion.IsSet() {
		toSerialize["ProductExternalVersion"] = o.ProductExternalVersion.Get()
	}
	if !IsNil(o.OrchServiceStatus) {
		toSerialize["OrchServiceStatus"] = o.OrchServiceStatus
	}
	if !IsNil(o.OrchRESTFulApiStatus) {
		toSerialize["OrchRESTFulApiStatus"] = o.OrchRESTFulApiStatus
	}
	if !IsNil(o.SupportedAuthenticators) {
		toSerialize["SupportedAuthenticators"] = o.SupportedAuthenticators
	}
	return toSerialize, nil
}

type NullableStatusModel struct {
	value *StatusModel
	isSet bool
}

func (v NullableStatusModel) Get() *StatusModel {
	return v.value
}

func (v *NullableStatusModel) Set(val *StatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusModel(val *StatusModel) *NullableStatusModel {
	return &NullableStatusModel{value: val, isSet: true}
}

func (v NullableStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


