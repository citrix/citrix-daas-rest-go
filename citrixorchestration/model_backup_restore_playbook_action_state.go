/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// BackupRestorePlaybookActionState Backup / Restore Restore Progress
type BackupRestorePlaybookActionState string

// List of BackupRestorePlaybookActionState
const (
	BACKUPRESTOREPLAYBOOKACTIONSTATE_UNKNOWN BackupRestorePlaybookActionState = "Unknown"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_READING BackupRestorePlaybookActionState = "Reading"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_READING_CLOUD BackupRestorePlaybookActionState = "ReadingCloud"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_EVALUATING BackupRestorePlaybookActionState = "Evaluating"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_PREREQ_EVALUATING BackupRestorePlaybookActionState = "PrereqEvaluating"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_ADDING_UPDATING_DELETING BackupRestorePlaybookActionState = "AddingUpdatingDeleting"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_ADDING BackupRestorePlaybookActionState = "Adding"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_UPDATING BackupRestorePlaybookActionState = "Updating"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_DELETING BackupRestorePlaybookActionState = "Deleting"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_RE_READING BackupRestorePlaybookActionState = "ReReading"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_VERIFYING BackupRestorePlaybookActionState = "Verifying"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_VERIFIED BackupRestorePlaybookActionState = "Verified"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_VERIFY_FAILED BackupRestorePlaybookActionState = "VerifyFailed"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_COMPLETE BackupRestorePlaybookActionState = "Complete"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_WRITING BackupRestorePlaybookActionState = "Writing"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_FAILED BackupRestorePlaybookActionState = "Failed"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_SKIPPING BackupRestorePlaybookActionState = "Skipping"
	BACKUPRESTOREPLAYBOOKACTIONSTATE_SKIP_DUE_TO_MISSING_INFO BackupRestorePlaybookActionState = "SkipDueToMissingInfo"
)

// All allowed values of BackupRestorePlaybookActionState enum
var AllowedBackupRestorePlaybookActionStateEnumValues = []BackupRestorePlaybookActionState{
	"Unknown",
	"Reading",
	"ReadingCloud",
	"Evaluating",
	"PrereqEvaluating",
	"AddingUpdatingDeleting",
	"Adding",
	"Updating",
	"Deleting",
	"ReReading",
	"Verifying",
	"Verified",
	"VerifyFailed",
	"Complete",
	"Writing",
	"Failed",
	"Skipping",
	"SkipDueToMissingInfo",
}

func (v *BackupRestorePlaybookActionState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BackupRestorePlaybookActionState(value)
	for _, existing := range AllowedBackupRestorePlaybookActionStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BackupRestorePlaybookActionState", value)
}

// NewBackupRestorePlaybookActionStateFromValue returns a pointer to a valid BackupRestorePlaybookActionState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBackupRestorePlaybookActionStateFromValue(v string) (*BackupRestorePlaybookActionState, error) {
	ev := BackupRestorePlaybookActionState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BackupRestorePlaybookActionState: valid values are %v", v, AllowedBackupRestorePlaybookActionStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BackupRestorePlaybookActionState) IsValid() bool {
	for _, existing := range AllowedBackupRestorePlaybookActionStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BackupRestorePlaybookActionState value
func (v BackupRestorePlaybookActionState) Ptr() *BackupRestorePlaybookActionState {
	return &v
}

type NullableBackupRestorePlaybookActionState struct {
	value *BackupRestorePlaybookActionState
	isSet bool
}

func (v NullableBackupRestorePlaybookActionState) Get() *BackupRestorePlaybookActionState {
	return v.value
}

func (v *NullableBackupRestorePlaybookActionState) Set(val *BackupRestorePlaybookActionState) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestorePlaybookActionState) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestorePlaybookActionState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestorePlaybookActionState(val *BackupRestorePlaybookActionState) *NullableBackupRestorePlaybookActionState {
	return &NullableBackupRestorePlaybookActionState{value: val, isSet: true}
}

func (v NullableBackupRestorePlaybookActionState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestorePlaybookActionState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

