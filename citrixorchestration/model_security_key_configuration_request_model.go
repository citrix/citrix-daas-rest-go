/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SecurityKeyConfigurationRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityKeyConfigurationRequestModel{}

// SecurityKeyConfigurationRequestModel Request object for modification of the site security key configuration.
type SecurityKeyConfigurationRequestModel struct {
	// The first security key.
	Key1 NullableString `json:"Key1,omitempty"`
	// The second security key.
	Key2 NullableString `json:"Key2,omitempty"`
	// Indicates whether to require a key to authenticate communications over the STA port.
	RequireKeyForSta NullableBool `json:"RequireKeyForSta,omitempty"`
	// Indicates whether to require a key to authenticate communications over the XML port.
	RequireKeyForXml NullableBool `json:"RequireKeyForXml,omitempty"`
}

// NewSecurityKeyConfigurationRequestModel instantiates a new SecurityKeyConfigurationRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityKeyConfigurationRequestModel() *SecurityKeyConfigurationRequestModel {
	this := SecurityKeyConfigurationRequestModel{}
	return &this
}

// NewSecurityKeyConfigurationRequestModelWithDefaults instantiates a new SecurityKeyConfigurationRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityKeyConfigurationRequestModelWithDefaults() *SecurityKeyConfigurationRequestModel {
	this := SecurityKeyConfigurationRequestModel{}
	return &this
}

// GetKey1 returns the Key1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityKeyConfigurationRequestModel) GetKey1() string {
	if o == nil || IsNil(o.Key1.Get()) {
		var ret string
		return ret
	}
	return *o.Key1.Get()
}

// GetKey1Ok returns a tuple with the Key1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityKeyConfigurationRequestModel) GetKey1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key1.Get(), o.Key1.IsSet()
}

// HasKey1 returns a boolean if a field has been set.
func (o *SecurityKeyConfigurationRequestModel) HasKey1() bool {
	if o != nil && o.Key1.IsSet() {
		return true
	}

	return false
}

// SetKey1 gets a reference to the given NullableString and assigns it to the Key1 field.
func (o *SecurityKeyConfigurationRequestModel) SetKey1(v string) {
	o.Key1.Set(&v)
}

// SetKey1Nil sets the value for Key1 to be an explicit nil
func (o *SecurityKeyConfigurationRequestModel) SetKey1Nil() {
	o.Key1.Set(nil)
}

// UnsetKey1 ensures that no value is present for Key1, not even an explicit nil
func (o *SecurityKeyConfigurationRequestModel) UnsetKey1() {
	o.Key1.Unset()
}

// GetKey2 returns the Key2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityKeyConfigurationRequestModel) GetKey2() string {
	if o == nil || IsNil(o.Key2.Get()) {
		var ret string
		return ret
	}
	return *o.Key2.Get()
}

// GetKey2Ok returns a tuple with the Key2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityKeyConfigurationRequestModel) GetKey2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key2.Get(), o.Key2.IsSet()
}

// HasKey2 returns a boolean if a field has been set.
func (o *SecurityKeyConfigurationRequestModel) HasKey2() bool {
	if o != nil && o.Key2.IsSet() {
		return true
	}

	return false
}

// SetKey2 gets a reference to the given NullableString and assigns it to the Key2 field.
func (o *SecurityKeyConfigurationRequestModel) SetKey2(v string) {
	o.Key2.Set(&v)
}

// SetKey2Nil sets the value for Key2 to be an explicit nil
func (o *SecurityKeyConfigurationRequestModel) SetKey2Nil() {
	o.Key2.Set(nil)
}

// UnsetKey2 ensures that no value is present for Key2, not even an explicit nil
func (o *SecurityKeyConfigurationRequestModel) UnsetKey2() {
	o.Key2.Unset()
}

// GetRequireKeyForSta returns the RequireKeyForSta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityKeyConfigurationRequestModel) GetRequireKeyForSta() bool {
	if o == nil || IsNil(o.RequireKeyForSta.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireKeyForSta.Get()
}

// GetRequireKeyForStaOk returns a tuple with the RequireKeyForSta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityKeyConfigurationRequestModel) GetRequireKeyForStaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireKeyForSta.Get(), o.RequireKeyForSta.IsSet()
}

// HasRequireKeyForSta returns a boolean if a field has been set.
func (o *SecurityKeyConfigurationRequestModel) HasRequireKeyForSta() bool {
	if o != nil && o.RequireKeyForSta.IsSet() {
		return true
	}

	return false
}

// SetRequireKeyForSta gets a reference to the given NullableBool and assigns it to the RequireKeyForSta field.
func (o *SecurityKeyConfigurationRequestModel) SetRequireKeyForSta(v bool) {
	o.RequireKeyForSta.Set(&v)
}

// SetRequireKeyForStaNil sets the value for RequireKeyForSta to be an explicit nil
func (o *SecurityKeyConfigurationRequestModel) SetRequireKeyForStaNil() {
	o.RequireKeyForSta.Set(nil)
}

// UnsetRequireKeyForSta ensures that no value is present for RequireKeyForSta, not even an explicit nil
func (o *SecurityKeyConfigurationRequestModel) UnsetRequireKeyForSta() {
	o.RequireKeyForSta.Unset()
}

// GetRequireKeyForXml returns the RequireKeyForXml field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityKeyConfigurationRequestModel) GetRequireKeyForXml() bool {
	if o == nil || IsNil(o.RequireKeyForXml.Get()) {
		var ret bool
		return ret
	}
	return *o.RequireKeyForXml.Get()
}

// GetRequireKeyForXmlOk returns a tuple with the RequireKeyForXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityKeyConfigurationRequestModel) GetRequireKeyForXmlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequireKeyForXml.Get(), o.RequireKeyForXml.IsSet()
}

// HasRequireKeyForXml returns a boolean if a field has been set.
func (o *SecurityKeyConfigurationRequestModel) HasRequireKeyForXml() bool {
	if o != nil && o.RequireKeyForXml.IsSet() {
		return true
	}

	return false
}

// SetRequireKeyForXml gets a reference to the given NullableBool and assigns it to the RequireKeyForXml field.
func (o *SecurityKeyConfigurationRequestModel) SetRequireKeyForXml(v bool) {
	o.RequireKeyForXml.Set(&v)
}

// SetRequireKeyForXmlNil sets the value for RequireKeyForXml to be an explicit nil
func (o *SecurityKeyConfigurationRequestModel) SetRequireKeyForXmlNil() {
	o.RequireKeyForXml.Set(nil)
}

// UnsetRequireKeyForXml ensures that no value is present for RequireKeyForXml, not even an explicit nil
func (o *SecurityKeyConfigurationRequestModel) UnsetRequireKeyForXml() {
	o.RequireKeyForXml.Unset()
}

func (o SecurityKeyConfigurationRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityKeyConfigurationRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Key1.IsSet() {
		toSerialize["Key1"] = o.Key1.Get()
	}
	if o.Key2.IsSet() {
		toSerialize["Key2"] = o.Key2.Get()
	}
	if o.RequireKeyForSta.IsSet() {
		toSerialize["RequireKeyForSta"] = o.RequireKeyForSta.Get()
	}
	if o.RequireKeyForXml.IsSet() {
		toSerialize["RequireKeyForXml"] = o.RequireKeyForXml.Get()
	}
	return toSerialize, nil
}

type NullableSecurityKeyConfigurationRequestModel struct {
	value *SecurityKeyConfigurationRequestModel
	isSet bool
}

func (v NullableSecurityKeyConfigurationRequestModel) Get() *SecurityKeyConfigurationRequestModel {
	return v.value
}

func (v *NullableSecurityKeyConfigurationRequestModel) Set(val *SecurityKeyConfigurationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityKeyConfigurationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityKeyConfigurationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityKeyConfigurationRequestModel(val *SecurityKeyConfigurationRequestModel) *NullableSecurityKeyConfigurationRequestModel {
	return &NullableSecurityKeyConfigurationRequestModel{value: val, isSet: true}
}

func (v NullableSecurityKeyConfigurationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityKeyConfigurationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
