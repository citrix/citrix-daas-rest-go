/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PvsStreamingVDiskResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PvsStreamingVDiskResponseModel{}

// PvsStreamingVDiskResponseModel PVS vDisk object.
type PvsStreamingVDiskResponseModel struct {
	// Is AD password enabled.
	ADPasswordEnabled NullableBool `json:"ADPasswordEnabled,omitempty"`
	// Id of the PVS vDisk.
	DiskLocatorId NullableString `json:"DiskLocatorId,omitempty"`
	// Name of the PVS vDisk.
	DiskLocatorName string `json:"DiskLocatorName"`
	// Id of the PVS site.
	SiteId NullableString `json:"SiteId,omitempty"`
	// Name of the PVS site.
	SiteName NullableString `json:"SiteName,omitempty"`
	// Id of the PVS store.
	StoreId NullableString `json:"StoreId,omitempty"`
	// Name of the PVS store.
	StoreName NullableString `json:"StoreName,omitempty"`
	// Is streaming enabled.
	StreamingEnabled NullableBool `json:"StreamingEnabled,omitempty"`
	// Write cache size of the vDisk.
	WriteCacheSize NullableInt32 `json:"WriteCacheSize,omitempty"`
	// Write cache type of the vDisk.
	WriteCacheType NullableInt32 `json:"WriteCacheType,omitempty"`
}

// NewPvsStreamingVDiskResponseModel instantiates a new PvsStreamingVDiskResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPvsStreamingVDiskResponseModel(diskLocatorName string) *PvsStreamingVDiskResponseModel {
	this := PvsStreamingVDiskResponseModel{}
	this.DiskLocatorName = diskLocatorName
	return &this
}

// NewPvsStreamingVDiskResponseModelWithDefaults instantiates a new PvsStreamingVDiskResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPvsStreamingVDiskResponseModelWithDefaults() *PvsStreamingVDiskResponseModel {
	this := PvsStreamingVDiskResponseModel{}
	return &this
}

// GetADPasswordEnabled returns the ADPasswordEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetADPasswordEnabled() bool {
	if o == nil || IsNil(o.ADPasswordEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ADPasswordEnabled.Get()
}

// GetADPasswordEnabledOk returns a tuple with the ADPasswordEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetADPasswordEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ADPasswordEnabled.Get(), o.ADPasswordEnabled.IsSet()
}

// HasADPasswordEnabled returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasADPasswordEnabled() bool {
	if o != nil && o.ADPasswordEnabled.IsSet() {
		return true
	}

	return false
}

// SetADPasswordEnabled gets a reference to the given NullableBool and assigns it to the ADPasswordEnabled field.
func (o *PvsStreamingVDiskResponseModel) SetADPasswordEnabled(v bool) {
	o.ADPasswordEnabled.Set(&v)
}
// SetADPasswordEnabledNil sets the value for ADPasswordEnabled to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetADPasswordEnabledNil() {
	o.ADPasswordEnabled.Set(nil)
}

// UnsetADPasswordEnabled ensures that no value is present for ADPasswordEnabled, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetADPasswordEnabled() {
	o.ADPasswordEnabled.Unset()
}

// GetDiskLocatorId returns the DiskLocatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorId() string {
	if o == nil || IsNil(o.DiskLocatorId.Get()) {
		var ret string
		return ret
	}
	return *o.DiskLocatorId.Get()
}

// GetDiskLocatorIdOk returns a tuple with the DiskLocatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskLocatorId.Get(), o.DiskLocatorId.IsSet()
}

// HasDiskLocatorId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasDiskLocatorId() bool {
	if o != nil && o.DiskLocatorId.IsSet() {
		return true
	}

	return false
}

// SetDiskLocatorId gets a reference to the given NullableString and assigns it to the DiskLocatorId field.
func (o *PvsStreamingVDiskResponseModel) SetDiskLocatorId(v string) {
	o.DiskLocatorId.Set(&v)
}
// SetDiskLocatorIdNil sets the value for DiskLocatorId to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetDiskLocatorIdNil() {
	o.DiskLocatorId.Set(nil)
}

// UnsetDiskLocatorId ensures that no value is present for DiskLocatorId, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetDiskLocatorId() {
	o.DiskLocatorId.Unset()
}

// GetDiskLocatorName returns the DiskLocatorName field value
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskLocatorName
}

// GetDiskLocatorNameOk returns a tuple with the DiskLocatorName field value
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskLocatorName, true
}

// SetDiskLocatorName sets field value
func (o *PvsStreamingVDiskResponseModel) SetDiskLocatorName(v string) {
	o.DiskLocatorName = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetSiteId() string {
	if o == nil || IsNil(o.SiteId.Get()) {
		var ret string
		return ret
	}
	return *o.SiteId.Get()
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteId.Get(), o.SiteId.IsSet()
}

// HasSiteId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasSiteId() bool {
	if o != nil && o.SiteId.IsSet() {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given NullableString and assigns it to the SiteId field.
func (o *PvsStreamingVDiskResponseModel) SetSiteId(v string) {
	o.SiteId.Set(&v)
}
// SetSiteIdNil sets the value for SiteId to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetSiteIdNil() {
	o.SiteId.Set(nil)
}

// UnsetSiteId ensures that no value is present for SiteId, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetSiteId() {
	o.SiteId.Unset()
}

// GetSiteName returns the SiteName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetSiteName() string {
	if o == nil || IsNil(o.SiteName.Get()) {
		var ret string
		return ret
	}
	return *o.SiteName.Get()
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetSiteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteName.Get(), o.SiteName.IsSet()
}

// HasSiteName returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasSiteName() bool {
	if o != nil && o.SiteName.IsSet() {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given NullableString and assigns it to the SiteName field.
func (o *PvsStreamingVDiskResponseModel) SetSiteName(v string) {
	o.SiteName.Set(&v)
}
// SetSiteNameNil sets the value for SiteName to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetSiteNameNil() {
	o.SiteName.Set(nil)
}

// UnsetSiteName ensures that no value is present for SiteName, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetSiteName() {
	o.SiteName.Unset()
}

// GetStoreId returns the StoreId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetStoreId() string {
	if o == nil || IsNil(o.StoreId.Get()) {
		var ret string
		return ret
	}
	return *o.StoreId.Get()
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetStoreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreId.Get(), o.StoreId.IsSet()
}

// HasStoreId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasStoreId() bool {
	if o != nil && o.StoreId.IsSet() {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given NullableString and assigns it to the StoreId field.
func (o *PvsStreamingVDiskResponseModel) SetStoreId(v string) {
	o.StoreId.Set(&v)
}
// SetStoreIdNil sets the value for StoreId to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetStoreIdNil() {
	o.StoreId.Set(nil)
}

// UnsetStoreId ensures that no value is present for StoreId, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetStoreId() {
	o.StoreId.Unset()
}

// GetStoreName returns the StoreName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetStoreName() string {
	if o == nil || IsNil(o.StoreName.Get()) {
		var ret string
		return ret
	}
	return *o.StoreName.Get()
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetStoreNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreName.Get(), o.StoreName.IsSet()
}

// HasStoreName returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasStoreName() bool {
	if o != nil && o.StoreName.IsSet() {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given NullableString and assigns it to the StoreName field.
func (o *PvsStreamingVDiskResponseModel) SetStoreName(v string) {
	o.StoreName.Set(&v)
}
// SetStoreNameNil sets the value for StoreName to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetStoreNameNil() {
	o.StoreName.Set(nil)
}

// UnsetStoreName ensures that no value is present for StoreName, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetStoreName() {
	o.StoreName.Unset()
}

// GetStreamingEnabled returns the StreamingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetStreamingEnabled() bool {
	if o == nil || IsNil(o.StreamingEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.StreamingEnabled.Get()
}

// GetStreamingEnabledOk returns a tuple with the StreamingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetStreamingEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StreamingEnabled.Get(), o.StreamingEnabled.IsSet()
}

// HasStreamingEnabled returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasStreamingEnabled() bool {
	if o != nil && o.StreamingEnabled.IsSet() {
		return true
	}

	return false
}

// SetStreamingEnabled gets a reference to the given NullableBool and assigns it to the StreamingEnabled field.
func (o *PvsStreamingVDiskResponseModel) SetStreamingEnabled(v bool) {
	o.StreamingEnabled.Set(&v)
}
// SetStreamingEnabledNil sets the value for StreamingEnabled to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetStreamingEnabledNil() {
	o.StreamingEnabled.Set(nil)
}

// UnsetStreamingEnabled ensures that no value is present for StreamingEnabled, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetStreamingEnabled() {
	o.StreamingEnabled.Unset()
}

// GetWriteCacheSize returns the WriteCacheSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetWriteCacheSize() int32 {
	if o == nil || IsNil(o.WriteCacheSize.Get()) {
		var ret int32
		return ret
	}
	return *o.WriteCacheSize.Get()
}

// GetWriteCacheSizeOk returns a tuple with the WriteCacheSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetWriteCacheSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WriteCacheSize.Get(), o.WriteCacheSize.IsSet()
}

// HasWriteCacheSize returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasWriteCacheSize() bool {
	if o != nil && o.WriteCacheSize.IsSet() {
		return true
	}

	return false
}

// SetWriteCacheSize gets a reference to the given NullableInt32 and assigns it to the WriteCacheSize field.
func (o *PvsStreamingVDiskResponseModel) SetWriteCacheSize(v int32) {
	o.WriteCacheSize.Set(&v)
}
// SetWriteCacheSizeNil sets the value for WriteCacheSize to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetWriteCacheSizeNil() {
	o.WriteCacheSize.Set(nil)
}

// UnsetWriteCacheSize ensures that no value is present for WriteCacheSize, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetWriteCacheSize() {
	o.WriteCacheSize.Unset()
}

// GetWriteCacheType returns the WriteCacheType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PvsStreamingVDiskResponseModel) GetWriteCacheType() int32 {
	if o == nil || IsNil(o.WriteCacheType.Get()) {
		var ret int32
		return ret
	}
	return *o.WriteCacheType.Get()
}

// GetWriteCacheTypeOk returns a tuple with the WriteCacheType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PvsStreamingVDiskResponseModel) GetWriteCacheTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WriteCacheType.Get(), o.WriteCacheType.IsSet()
}

// HasWriteCacheType returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasWriteCacheType() bool {
	if o != nil && o.WriteCacheType.IsSet() {
		return true
	}

	return false
}

// SetWriteCacheType gets a reference to the given NullableInt32 and assigns it to the WriteCacheType field.
func (o *PvsStreamingVDiskResponseModel) SetWriteCacheType(v int32) {
	o.WriteCacheType.Set(&v)
}
// SetWriteCacheTypeNil sets the value for WriteCacheType to be an explicit nil
func (o *PvsStreamingVDiskResponseModel) SetWriteCacheTypeNil() {
	o.WriteCacheType.Set(nil)
}

// UnsetWriteCacheType ensures that no value is present for WriteCacheType, not even an explicit nil
func (o *PvsStreamingVDiskResponseModel) UnsetWriteCacheType() {
	o.WriteCacheType.Unset()
}

func (o PvsStreamingVDiskResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PvsStreamingVDiskResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ADPasswordEnabled.IsSet() {
		toSerialize["ADPasswordEnabled"] = o.ADPasswordEnabled.Get()
	}
	if o.DiskLocatorId.IsSet() {
		toSerialize["DiskLocatorId"] = o.DiskLocatorId.Get()
	}
	toSerialize["DiskLocatorName"] = o.DiskLocatorName
	if o.SiteId.IsSet() {
		toSerialize["SiteId"] = o.SiteId.Get()
	}
	if o.SiteName.IsSet() {
		toSerialize["SiteName"] = o.SiteName.Get()
	}
	if o.StoreId.IsSet() {
		toSerialize["StoreId"] = o.StoreId.Get()
	}
	if o.StoreName.IsSet() {
		toSerialize["StoreName"] = o.StoreName.Get()
	}
	if o.StreamingEnabled.IsSet() {
		toSerialize["StreamingEnabled"] = o.StreamingEnabled.Get()
	}
	if o.WriteCacheSize.IsSet() {
		toSerialize["WriteCacheSize"] = o.WriteCacheSize.Get()
	}
	if o.WriteCacheType.IsSet() {
		toSerialize["WriteCacheType"] = o.WriteCacheType.Get()
	}
	return toSerialize, nil
}

type NullablePvsStreamingVDiskResponseModel struct {
	value *PvsStreamingVDiskResponseModel
	isSet bool
}

func (v NullablePvsStreamingVDiskResponseModel) Get() *PvsStreamingVDiskResponseModel {
	return v.value
}

func (v *NullablePvsStreamingVDiskResponseModel) Set(val *PvsStreamingVDiskResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePvsStreamingVDiskResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePvsStreamingVDiskResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePvsStreamingVDiskResponseModel(val *PvsStreamingVDiskResponseModel) *NullablePvsStreamingVDiskResponseModel {
	return &NullablePvsStreamingVDiskResponseModel{value: val, isSet: true}
}

func (v NullablePvsStreamingVDiskResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePvsStreamingVDiskResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


