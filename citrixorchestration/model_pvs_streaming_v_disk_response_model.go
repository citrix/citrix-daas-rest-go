/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PvsStreamingVDiskResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PvsStreamingVDiskResponseModel{}

// PvsStreamingVDiskResponseModel PVS vDisk object.
type PvsStreamingVDiskResponseModel struct {
	// Id of the PVS vDisk.
	DiskLocatorId *string `json:"DiskLocatorId,omitempty"`
	// Name of the PVS vDisk.
	DiskLocatorName string `json:"DiskLocatorName"`
	// Id of the PVS site.
	SiteId *string `json:"SiteId,omitempty"`
	// Name of the PVS site.
	SiteName *string `json:"SiteName,omitempty"`
	// Id of the PVS store.
	StoreId *string `json:"StoreId,omitempty"`
	// Name of the PVS store.
	StoreName *string `json:"StoreName,omitempty"`
}

// NewPvsStreamingVDiskResponseModel instantiates a new PvsStreamingVDiskResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPvsStreamingVDiskResponseModel(diskLocatorName string) *PvsStreamingVDiskResponseModel {
	this := PvsStreamingVDiskResponseModel{}
	this.DiskLocatorName = diskLocatorName
	return &this
}

// NewPvsStreamingVDiskResponseModelWithDefaults instantiates a new PvsStreamingVDiskResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPvsStreamingVDiskResponseModelWithDefaults() *PvsStreamingVDiskResponseModel {
	this := PvsStreamingVDiskResponseModel{}
	return &this
}

// GetDiskLocatorId returns the DiskLocatorId field value if set, zero value otherwise.
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorId() string {
	if o == nil || IsNil(o.DiskLocatorId) {
		var ret string
		return ret
	}
	return *o.DiskLocatorId
}

// GetDiskLocatorIdOk returns a tuple with the DiskLocatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.DiskLocatorId) {
		return nil, false
	}
	return o.DiskLocatorId, true
}

// HasDiskLocatorId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasDiskLocatorId() bool {
	if o != nil && !IsNil(o.DiskLocatorId) {
		return true
	}

	return false
}

// SetDiskLocatorId gets a reference to the given string and assigns it to the DiskLocatorId field.
func (o *PvsStreamingVDiskResponseModel) SetDiskLocatorId(v string) {
	o.DiskLocatorId = &v
}

// GetDiskLocatorName returns the DiskLocatorName field value
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskLocatorName
}

// GetDiskLocatorNameOk returns a tuple with the DiskLocatorName field value
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetDiskLocatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskLocatorName, true
}

// SetDiskLocatorName sets field value
func (o *PvsStreamingVDiskResponseModel) SetDiskLocatorName(v string) {
	o.DiskLocatorName = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *PvsStreamingVDiskResponseModel) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *PvsStreamingVDiskResponseModel) SetSiteId(v string) {
	o.SiteId = &v
}

// GetSiteName returns the SiteName field value if set, zero value otherwise.
func (o *PvsStreamingVDiskResponseModel) GetSiteName() string {
	if o == nil || IsNil(o.SiteName) {
		var ret string
		return ret
	}
	return *o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetSiteNameOk() (*string, bool) {
	if o == nil || IsNil(o.SiteName) {
		return nil, false
	}
	return o.SiteName, true
}

// HasSiteName returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasSiteName() bool {
	if o != nil && !IsNil(o.SiteName) {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given string and assigns it to the SiteName field.
func (o *PvsStreamingVDiskResponseModel) SetSiteName(v string) {
	o.SiteName = &v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *PvsStreamingVDiskResponseModel) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *PvsStreamingVDiskResponseModel) SetStoreId(v string) {
	o.StoreId = &v
}

// GetStoreName returns the StoreName field value if set, zero value otherwise.
func (o *PvsStreamingVDiskResponseModel) GetStoreName() string {
	if o == nil || IsNil(o.StoreName) {
		var ret string
		return ret
	}
	return *o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingVDiskResponseModel) GetStoreNameOk() (*string, bool) {
	if o == nil || IsNil(o.StoreName) {
		return nil, false
	}
	return o.StoreName, true
}

// HasStoreName returns a boolean if a field has been set.
func (o *PvsStreamingVDiskResponseModel) HasStoreName() bool {
	if o != nil && !IsNil(o.StoreName) {
		return true
	}

	return false
}

// SetStoreName gets a reference to the given string and assigns it to the StoreName field.
func (o *PvsStreamingVDiskResponseModel) SetStoreName(v string) {
	o.StoreName = &v
}

func (o PvsStreamingVDiskResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PvsStreamingVDiskResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiskLocatorId) {
		toSerialize["DiskLocatorId"] = o.DiskLocatorId
	}
	toSerialize["DiskLocatorName"] = o.DiskLocatorName
	if !IsNil(o.SiteId) {
		toSerialize["SiteId"] = o.SiteId
	}
	if !IsNil(o.SiteName) {
		toSerialize["SiteName"] = o.SiteName
	}
	if !IsNil(o.StoreId) {
		toSerialize["StoreId"] = o.StoreId
	}
	if !IsNil(o.StoreName) {
		toSerialize["StoreName"] = o.StoreName
	}
	return toSerialize, nil
}

type NullablePvsStreamingVDiskResponseModel struct {
	value *PvsStreamingVDiskResponseModel
	isSet bool
}

func (v NullablePvsStreamingVDiskResponseModel) Get() *PvsStreamingVDiskResponseModel {
	return v.value
}

func (v *NullablePvsStreamingVDiskResponseModel) Set(val *PvsStreamingVDiskResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePvsStreamingVDiskResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePvsStreamingVDiskResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePvsStreamingVDiskResponseModel(val *PvsStreamingVDiskResponseModel) *NullablePvsStreamingVDiskResponseModel {
	return &NullablePvsStreamingVDiskResponseModel{value: val, isSet: true}
}

func (v NullablePvsStreamingVDiskResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePvsStreamingVDiskResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


