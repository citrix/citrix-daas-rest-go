/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageDefinitionAndImageVersionSearchRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageDefinitionAndImageVersionSearchRequestModel{}

// ImageDefinitionAndImageVersionSearchRequestModel Request model for defining advanced image definition and image version search criteria.
type ImageDefinitionAndImageVersionSearchRequestModel struct {
	// Resource pool in which to search for the image definition and image version.
	ResourcePool NullableString `json:"ResourcePool,omitempty"`
	VDASessionSupport *SessionSupport `json:"VDASessionSupport,omitempty"`
	OsType *OsType `json:"OsType,omitempty"`
}

// NewImageDefinitionAndImageVersionSearchRequestModel instantiates a new ImageDefinitionAndImageVersionSearchRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageDefinitionAndImageVersionSearchRequestModel() *ImageDefinitionAndImageVersionSearchRequestModel {
	this := ImageDefinitionAndImageVersionSearchRequestModel{}
	return &this
}

// NewImageDefinitionAndImageVersionSearchRequestModelWithDefaults instantiates a new ImageDefinitionAndImageVersionSearchRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageDefinitionAndImageVersionSearchRequestModelWithDefaults() *ImageDefinitionAndImageVersionSearchRequestModel {
	this := ImageDefinitionAndImageVersionSearchRequestModel{}
	return &this
}

// GetResourcePool returns the ResourcePool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetResourcePool() string {
	if o == nil || IsNil(o.ResourcePool.Get()) {
		var ret string
		return ret
	}
	return *o.ResourcePool.Get()
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetResourcePoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourcePool.Get(), o.ResourcePool.IsSet()
}

// HasResourcePool returns a boolean if a field has been set.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) HasResourcePool() bool {
	if o != nil && o.ResourcePool.IsSet() {
		return true
	}

	return false
}

// SetResourcePool gets a reference to the given NullableString and assigns it to the ResourcePool field.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) SetResourcePool(v string) {
	o.ResourcePool.Set(&v)
}
// SetResourcePoolNil sets the value for ResourcePool to be an explicit nil
func (o *ImageDefinitionAndImageVersionSearchRequestModel) SetResourcePoolNil() {
	o.ResourcePool.Set(nil)
}

// UnsetResourcePool ensures that no value is present for ResourcePool, not even an explicit nil
func (o *ImageDefinitionAndImageVersionSearchRequestModel) UnsetResourcePool() {
	o.ResourcePool.Unset()
}

// GetVDASessionSupport returns the VDASessionSupport field value if set, zero value otherwise.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetVDASessionSupport() SessionSupport {
	if o == nil || IsNil(o.VDASessionSupport) {
		var ret SessionSupport
		return ret
	}
	return *o.VDASessionSupport
}

// GetVDASessionSupportOk returns a tuple with the VDASessionSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetVDASessionSupportOk() (*SessionSupport, bool) {
	if o == nil || IsNil(o.VDASessionSupport) {
		return nil, false
	}
	return o.VDASessionSupport, true
}

// HasVDASessionSupport returns a boolean if a field has been set.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) HasVDASessionSupport() bool {
	if o != nil && !IsNil(o.VDASessionSupport) {
		return true
	}

	return false
}

// SetVDASessionSupport gets a reference to the given SessionSupport and assigns it to the VDASessionSupport field.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) SetVDASessionSupport(v SessionSupport) {
	o.VDASessionSupport = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetOsType() OsType {
	if o == nil || IsNil(o.OsType) {
		var ret OsType
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) GetOsTypeOk() (*OsType, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given OsType and assigns it to the OsType field.
func (o *ImageDefinitionAndImageVersionSearchRequestModel) SetOsType(v OsType) {
	o.OsType = &v
}

func (o ImageDefinitionAndImageVersionSearchRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageDefinitionAndImageVersionSearchRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourcePool.IsSet() {
		toSerialize["ResourcePool"] = o.ResourcePool.Get()
	}
	if !IsNil(o.VDASessionSupport) {
		toSerialize["VDASessionSupport"] = o.VDASessionSupport
	}
	if !IsNil(o.OsType) {
		toSerialize["OsType"] = o.OsType
	}
	return toSerialize, nil
}

type NullableImageDefinitionAndImageVersionSearchRequestModel struct {
	value *ImageDefinitionAndImageVersionSearchRequestModel
	isSet bool
}

func (v NullableImageDefinitionAndImageVersionSearchRequestModel) Get() *ImageDefinitionAndImageVersionSearchRequestModel {
	return v.value
}

func (v *NullableImageDefinitionAndImageVersionSearchRequestModel) Set(val *ImageDefinitionAndImageVersionSearchRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageDefinitionAndImageVersionSearchRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageDefinitionAndImageVersionSearchRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageDefinitionAndImageVersionSearchRequestModel(val *ImageDefinitionAndImageVersionSearchRequestModel) *NullableImageDefinitionAndImageVersionSearchRequestModel {
	return &NullableImageDefinitionAndImageVersionSearchRequestModel{value: val, isSet: true}
}

func (v NullableImageDefinitionAndImageVersionSearchRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageDefinitionAndImageVersionSearchRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


