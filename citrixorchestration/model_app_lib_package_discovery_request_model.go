/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AppLibPackageDiscoveryRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppLibPackageDiscoveryRequestModel{}

// AppLibPackageDiscoveryRequestModel Request model to create an AppLib Package Discovery Session.
type AppLibPackageDiscoveryRequestModel struct {
	DiscoveryType *AppLibPackageDiscoveryType `json:"DiscoveryType,omitempty"`
	// the UID of AppLib package discovery profile
	DiscoveryProfileUid *int32 `json:"DiscoveryProfileUid,omitempty"`
	// The UID of the DesktopGroup from which the broker will select a VDA to run the discover session.
	DesktopGroupUid *int32 `json:"DesktopGroupUid,omitempty"`
	// The root directory where the discovery session will run.
	Path *string `json:"Path,omitempty"`
	// A value indicating whether or not to search the child directory tree.
	Recurse *bool `json:"Recurse,omitempty"`
	// A value indicating whether or not to discover App-V packages
	DiscoverAppV *bool `json:"DiscoverAppV,omitempty"`
	// A value indicating whether or not to discover MSIX packages
	DiscoverMsiX *bool `json:"DiscoverMsiX,omitempty"`
	// A value indicating whether or not to discover AppAttach packages
	DiscoverAppAttach *bool `json:"DiscoverAppAttach,omitempty"`
	// The url of the App-V Management Server that packages will be discovered from.
	ManagementServer *string `json:"ManagementServer,omitempty"`
	// A value indicating whether or not to discover AppAttach packages
	PublishingServer *string `json:"PublishingServer,omitempty"`
	// the username of App-V server admin
	Username *string `json:"Username,omitempty"`
	// the password of App-V server admin
	Password *string `json:"Password,omitempty"`
	PasswordFormat *IdentityPasswordFormat `json:"PasswordFormat,omitempty"`
}

// NewAppLibPackageDiscoveryRequestModel instantiates a new AppLibPackageDiscoveryRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppLibPackageDiscoveryRequestModel() *AppLibPackageDiscoveryRequestModel {
	this := AppLibPackageDiscoveryRequestModel{}
	var recurse bool = true
	this.Recurse = &recurse
	var discoverAppV bool = false
	this.DiscoverAppV = &discoverAppV
	var discoverMsiX bool = false
	this.DiscoverMsiX = &discoverMsiX
	var discoverAppAttach bool = false
	this.DiscoverAppAttach = &discoverAppAttach
	return &this
}

// NewAppLibPackageDiscoveryRequestModelWithDefaults instantiates a new AppLibPackageDiscoveryRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppLibPackageDiscoveryRequestModelWithDefaults() *AppLibPackageDiscoveryRequestModel {
	this := AppLibPackageDiscoveryRequestModel{}
	var recurse bool = true
	this.Recurse = &recurse
	var discoverAppV bool = false
	this.DiscoverAppV = &discoverAppV
	var discoverMsiX bool = false
	this.DiscoverMsiX = &discoverMsiX
	var discoverAppAttach bool = false
	this.DiscoverAppAttach = &discoverAppAttach
	return &this
}

// GetDiscoveryType returns the DiscoveryType field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoveryType() AppLibPackageDiscoveryType {
	if o == nil || IsNil(o.DiscoveryType) {
		var ret AppLibPackageDiscoveryType
		return ret
	}
	return *o.DiscoveryType
}

// GetDiscoveryTypeOk returns a tuple with the DiscoveryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoveryTypeOk() (*AppLibPackageDiscoveryType, bool) {
	if o == nil || IsNil(o.DiscoveryType) {
		return nil, false
	}
	return o.DiscoveryType, true
}

// HasDiscoveryType returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDiscoveryType() bool {
	if o != nil && !IsNil(o.DiscoveryType) {
		return true
	}

	return false
}

// SetDiscoveryType gets a reference to the given AppLibPackageDiscoveryType and assigns it to the DiscoveryType field.
func (o *AppLibPackageDiscoveryRequestModel) SetDiscoveryType(v AppLibPackageDiscoveryType) {
	o.DiscoveryType = &v
}

// GetDiscoveryProfileUid returns the DiscoveryProfileUid field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoveryProfileUid() int32 {
	if o == nil || IsNil(o.DiscoveryProfileUid) {
		var ret int32
		return ret
	}
	return *o.DiscoveryProfileUid
}

// GetDiscoveryProfileUidOk returns a tuple with the DiscoveryProfileUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoveryProfileUidOk() (*int32, bool) {
	if o == nil || IsNil(o.DiscoveryProfileUid) {
		return nil, false
	}
	return o.DiscoveryProfileUid, true
}

// HasDiscoveryProfileUid returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDiscoveryProfileUid() bool {
	if o != nil && !IsNil(o.DiscoveryProfileUid) {
		return true
	}

	return false
}

// SetDiscoveryProfileUid gets a reference to the given int32 and assigns it to the DiscoveryProfileUid field.
func (o *AppLibPackageDiscoveryRequestModel) SetDiscoveryProfileUid(v int32) {
	o.DiscoveryProfileUid = &v
}

// GetDesktopGroupUid returns the DesktopGroupUid field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDesktopGroupUid() int32 {
	if o == nil || IsNil(o.DesktopGroupUid) {
		var ret int32
		return ret
	}
	return *o.DesktopGroupUid
}

// GetDesktopGroupUidOk returns a tuple with the DesktopGroupUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDesktopGroupUidOk() (*int32, bool) {
	if o == nil || IsNil(o.DesktopGroupUid) {
		return nil, false
	}
	return o.DesktopGroupUid, true
}

// HasDesktopGroupUid returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDesktopGroupUid() bool {
	if o != nil && !IsNil(o.DesktopGroupUid) {
		return true
	}

	return false
}

// SetDesktopGroupUid gets a reference to the given int32 and assigns it to the DesktopGroupUid field.
func (o *AppLibPackageDiscoveryRequestModel) SetDesktopGroupUid(v int32) {
	o.DesktopGroupUid = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *AppLibPackageDiscoveryRequestModel) SetPath(v string) {
	o.Path = &v
}

// GetRecurse returns the Recurse field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetRecurse() bool {
	if o == nil || IsNil(o.Recurse) {
		var ret bool
		return ret
	}
	return *o.Recurse
}

// GetRecurseOk returns a tuple with the Recurse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetRecurseOk() (*bool, bool) {
	if o == nil || IsNil(o.Recurse) {
		return nil, false
	}
	return o.Recurse, true
}

// HasRecurse returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasRecurse() bool {
	if o != nil && !IsNil(o.Recurse) {
		return true
	}

	return false
}

// SetRecurse gets a reference to the given bool and assigns it to the Recurse field.
func (o *AppLibPackageDiscoveryRequestModel) SetRecurse(v bool) {
	o.Recurse = &v
}

// GetDiscoverAppV returns the DiscoverAppV field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverAppV() bool {
	if o == nil || IsNil(o.DiscoverAppV) {
		var ret bool
		return ret
	}
	return *o.DiscoverAppV
}

// GetDiscoverAppVOk returns a tuple with the DiscoverAppV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverAppVOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscoverAppV) {
		return nil, false
	}
	return o.DiscoverAppV, true
}

// HasDiscoverAppV returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDiscoverAppV() bool {
	if o != nil && !IsNil(o.DiscoverAppV) {
		return true
	}

	return false
}

// SetDiscoverAppV gets a reference to the given bool and assigns it to the DiscoverAppV field.
func (o *AppLibPackageDiscoveryRequestModel) SetDiscoverAppV(v bool) {
	o.DiscoverAppV = &v
}

// GetDiscoverMsiX returns the DiscoverMsiX field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverMsiX() bool {
	if o == nil || IsNil(o.DiscoverMsiX) {
		var ret bool
		return ret
	}
	return *o.DiscoverMsiX
}

// GetDiscoverMsiXOk returns a tuple with the DiscoverMsiX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverMsiXOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscoverMsiX) {
		return nil, false
	}
	return o.DiscoverMsiX, true
}

// HasDiscoverMsiX returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDiscoverMsiX() bool {
	if o != nil && !IsNil(o.DiscoverMsiX) {
		return true
	}

	return false
}

// SetDiscoverMsiX gets a reference to the given bool and assigns it to the DiscoverMsiX field.
func (o *AppLibPackageDiscoveryRequestModel) SetDiscoverMsiX(v bool) {
	o.DiscoverMsiX = &v
}

// GetDiscoverAppAttach returns the DiscoverAppAttach field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverAppAttach() bool {
	if o == nil || IsNil(o.DiscoverAppAttach) {
		var ret bool
		return ret
	}
	return *o.DiscoverAppAttach
}

// GetDiscoverAppAttachOk returns a tuple with the DiscoverAppAttach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetDiscoverAppAttachOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscoverAppAttach) {
		return nil, false
	}
	return o.DiscoverAppAttach, true
}

// HasDiscoverAppAttach returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasDiscoverAppAttach() bool {
	if o != nil && !IsNil(o.DiscoverAppAttach) {
		return true
	}

	return false
}

// SetDiscoverAppAttach gets a reference to the given bool and assigns it to the DiscoverAppAttach field.
func (o *AppLibPackageDiscoveryRequestModel) SetDiscoverAppAttach(v bool) {
	o.DiscoverAppAttach = &v
}

// GetManagementServer returns the ManagementServer field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetManagementServer() string {
	if o == nil || IsNil(o.ManagementServer) {
		var ret string
		return ret
	}
	return *o.ManagementServer
}

// GetManagementServerOk returns a tuple with the ManagementServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetManagementServerOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementServer) {
		return nil, false
	}
	return o.ManagementServer, true
}

// HasManagementServer returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasManagementServer() bool {
	if o != nil && !IsNil(o.ManagementServer) {
		return true
	}

	return false
}

// SetManagementServer gets a reference to the given string and assigns it to the ManagementServer field.
func (o *AppLibPackageDiscoveryRequestModel) SetManagementServer(v string) {
	o.ManagementServer = &v
}

// GetPublishingServer returns the PublishingServer field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetPublishingServer() string {
	if o == nil || IsNil(o.PublishingServer) {
		var ret string
		return ret
	}
	return *o.PublishingServer
}

// GetPublishingServerOk returns a tuple with the PublishingServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetPublishingServerOk() (*string, bool) {
	if o == nil || IsNil(o.PublishingServer) {
		return nil, false
	}
	return o.PublishingServer, true
}

// HasPublishingServer returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasPublishingServer() bool {
	if o != nil && !IsNil(o.PublishingServer) {
		return true
	}

	return false
}

// SetPublishingServer gets a reference to the given string and assigns it to the PublishingServer field.
func (o *AppLibPackageDiscoveryRequestModel) SetPublishingServer(v string) {
	o.PublishingServer = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AppLibPackageDiscoveryRequestModel) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AppLibPackageDiscoveryRequestModel) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordFormat returns the PasswordFormat field value if set, zero value otherwise.
func (o *AppLibPackageDiscoveryRequestModel) GetPasswordFormat() IdentityPasswordFormat {
	if o == nil || IsNil(o.PasswordFormat) {
		var ret IdentityPasswordFormat
		return ret
	}
	return *o.PasswordFormat
}

// GetPasswordFormatOk returns a tuple with the PasswordFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppLibPackageDiscoveryRequestModel) GetPasswordFormatOk() (*IdentityPasswordFormat, bool) {
	if o == nil || IsNil(o.PasswordFormat) {
		return nil, false
	}
	return o.PasswordFormat, true
}

// HasPasswordFormat returns a boolean if a field has been set.
func (o *AppLibPackageDiscoveryRequestModel) HasPasswordFormat() bool {
	if o != nil && !IsNil(o.PasswordFormat) {
		return true
	}

	return false
}

// SetPasswordFormat gets a reference to the given IdentityPasswordFormat and assigns it to the PasswordFormat field.
func (o *AppLibPackageDiscoveryRequestModel) SetPasswordFormat(v IdentityPasswordFormat) {
	o.PasswordFormat = &v
}

func (o AppLibPackageDiscoveryRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppLibPackageDiscoveryRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscoveryType) {
		toSerialize["DiscoveryType"] = o.DiscoveryType
	}
	if !IsNil(o.DiscoveryProfileUid) {
		toSerialize["DiscoveryProfileUid"] = o.DiscoveryProfileUid
	}
	if !IsNil(o.DesktopGroupUid) {
		toSerialize["DesktopGroupUid"] = o.DesktopGroupUid
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.Recurse) {
		toSerialize["Recurse"] = o.Recurse
	}
	if !IsNil(o.DiscoverAppV) {
		toSerialize["DiscoverAppV"] = o.DiscoverAppV
	}
	if !IsNil(o.DiscoverMsiX) {
		toSerialize["DiscoverMsiX"] = o.DiscoverMsiX
	}
	if !IsNil(o.DiscoverAppAttach) {
		toSerialize["DiscoverAppAttach"] = o.DiscoverAppAttach
	}
	if !IsNil(o.ManagementServer) {
		toSerialize["ManagementServer"] = o.ManagementServer
	}
	if !IsNil(o.PublishingServer) {
		toSerialize["PublishingServer"] = o.PublishingServer
	}
	if !IsNil(o.Username) {
		toSerialize["Username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	if !IsNil(o.PasswordFormat) {
		toSerialize["PasswordFormat"] = o.PasswordFormat
	}
	return toSerialize, nil
}

type NullableAppLibPackageDiscoveryRequestModel struct {
	value *AppLibPackageDiscoveryRequestModel
	isSet bool
}

func (v NullableAppLibPackageDiscoveryRequestModel) Get() *AppLibPackageDiscoveryRequestModel {
	return v.value
}

func (v *NullableAppLibPackageDiscoveryRequestModel) Set(val *AppLibPackageDiscoveryRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAppLibPackageDiscoveryRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAppLibPackageDiscoveryRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppLibPackageDiscoveryRequestModel(val *AppLibPackageDiscoveryRequestModel) *NullableAppLibPackageDiscoveryRequestModel {
	return &NullableAppLibPackageDiscoveryRequestModel{value: val, isSet: true}
}

func (v NullableAppLibPackageDiscoveryRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppLibPackageDiscoveryRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


