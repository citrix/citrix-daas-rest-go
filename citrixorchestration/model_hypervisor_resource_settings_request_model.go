/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorResourceSettingsRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorResourceSettingsRequestModel{}

// HypervisorResourceSettingsRequestModel Request object allowing caller to specify the settings of different hypervisor resources.
type HypervisorResourceSettingsRequestModel struct {
	// The settings for the virtual machines.
	VmSettings []VmSettingRequestModel `json:"VmSettings,omitempty"`
	// The settings for the disks.
	DiskSettings []DiskSettingRequestModel `json:"DiskSettings,omitempty"`
}

// NewHypervisorResourceSettingsRequestModel instantiates a new HypervisorResourceSettingsRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorResourceSettingsRequestModel() *HypervisorResourceSettingsRequestModel {
	this := HypervisorResourceSettingsRequestModel{}
	return &this
}

// NewHypervisorResourceSettingsRequestModelWithDefaults instantiates a new HypervisorResourceSettingsRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorResourceSettingsRequestModelWithDefaults() *HypervisorResourceSettingsRequestModel {
	this := HypervisorResourceSettingsRequestModel{}
	return &this
}

// GetVmSettings returns the VmSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorResourceSettingsRequestModel) GetVmSettings() []VmSettingRequestModel {
	if o == nil {
		var ret []VmSettingRequestModel
		return ret
	}
	return o.VmSettings
}

// GetVmSettingsOk returns a tuple with the VmSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorResourceSettingsRequestModel) GetVmSettingsOk() ([]VmSettingRequestModel, bool) {
	if o == nil || IsNil(o.VmSettings) {
		return nil, false
	}
	return o.VmSettings, true
}

// HasVmSettings returns a boolean if a field has been set.
func (o *HypervisorResourceSettingsRequestModel) HasVmSettings() bool {
	if o != nil && !IsNil(o.VmSettings) {
		return true
	}

	return false
}

// SetVmSettings gets a reference to the given []VmSettingRequestModel and assigns it to the VmSettings field.
func (o *HypervisorResourceSettingsRequestModel) SetVmSettings(v []VmSettingRequestModel) {
	o.VmSettings = v
}

// GetDiskSettings returns the DiskSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorResourceSettingsRequestModel) GetDiskSettings() []DiskSettingRequestModel {
	if o == nil {
		var ret []DiskSettingRequestModel
		return ret
	}
	return o.DiskSettings
}

// GetDiskSettingsOk returns a tuple with the DiskSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorResourceSettingsRequestModel) GetDiskSettingsOk() ([]DiskSettingRequestModel, bool) {
	if o == nil || IsNil(o.DiskSettings) {
		return nil, false
	}
	return o.DiskSettings, true
}

// HasDiskSettings returns a boolean if a field has been set.
func (o *HypervisorResourceSettingsRequestModel) HasDiskSettings() bool {
	if o != nil && !IsNil(o.DiskSettings) {
		return true
	}

	return false
}

// SetDiskSettings gets a reference to the given []DiskSettingRequestModel and assigns it to the DiskSettings field.
func (o *HypervisorResourceSettingsRequestModel) SetDiskSettings(v []DiskSettingRequestModel) {
	o.DiskSettings = v
}

func (o HypervisorResourceSettingsRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorResourceSettingsRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.VmSettings != nil {
		toSerialize["VmSettings"] = o.VmSettings
	}
	if o.DiskSettings != nil {
		toSerialize["DiskSettings"] = o.DiskSettings
	}
	return toSerialize, nil
}

type NullableHypervisorResourceSettingsRequestModel struct {
	value *HypervisorResourceSettingsRequestModel
	isSet bool
}

func (v NullableHypervisorResourceSettingsRequestModel) Get() *HypervisorResourceSettingsRequestModel {
	return v.value
}

func (v *NullableHypervisorResourceSettingsRequestModel) Set(val *HypervisorResourceSettingsRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorResourceSettingsRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorResourceSettingsRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorResourceSettingsRequestModel(val *HypervisorResourceSettingsRequestModel) *NullableHypervisorResourceSettingsRequestModel {
	return &NullableHypervisorResourceSettingsRequestModel{value: val, isSet: true}
}

func (v NullableHypervisorResourceSettingsRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorResourceSettingsRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
