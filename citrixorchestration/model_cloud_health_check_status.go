/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// CloudHealthCheckStatus Cloud HealthCheck Status.
type CloudHealthCheckStatus string

// List of CloudHealthCheckStatus
const (
	CLOUDHEALTHCHECKSTATUS_UNKNOWN         CloudHealthCheckStatus = "Unknown"
	CLOUDHEALTHCHECKSTATUS_OK              CloudHealthCheckStatus = "Ok"
	CLOUDHEALTHCHECKSTATUS_FAIL            CloudHealthCheckStatus = "Fail"
	CLOUDHEALTHCHECKSTATUS_INVALID_COMMAND CloudHealthCheckStatus = "InvalidCommand"
)

// All allowed values of CloudHealthCheckStatus enum
var AllowedCloudHealthCheckStatusEnumValues = []CloudHealthCheckStatus{
	"Unknown",
	"Ok",
	"Fail",
	"InvalidCommand",
}

func (v *CloudHealthCheckStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = CloudHealthCheckStatus(value)
	return nil
}

// NewCloudHealthCheckStatusFromValue returns a pointer to a valid CloudHealthCheckStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCloudHealthCheckStatusFromValue(v string) (*CloudHealthCheckStatus, error) {
	ev := CloudHealthCheckStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CloudHealthCheckStatus: valid values are %v", v, AllowedCloudHealthCheckStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CloudHealthCheckStatus) IsValid() bool {
	for _, existing := range AllowedCloudHealthCheckStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CloudHealthCheckStatus value
func (v CloudHealthCheckStatus) Ptr() *CloudHealthCheckStatus {
	return &v
}

type NullableCloudHealthCheckStatus struct {
	value *CloudHealthCheckStatus
	isSet bool
}

func (v NullableCloudHealthCheckStatus) Get() *CloudHealthCheckStatus {
	return v.value
}

func (v *NullableCloudHealthCheckStatus) Set(val *CloudHealthCheckStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudHealthCheckStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudHealthCheckStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudHealthCheckStatus(val *CloudHealthCheckStatus) *NullableCloudHealthCheckStatus {
	return &NullableCloudHealthCheckStatus{value: val, isSet: true}
}

func (v NullableCloudHealthCheckStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudHealthCheckStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
