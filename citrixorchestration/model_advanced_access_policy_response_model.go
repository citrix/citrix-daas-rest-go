/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AdvancedAccessPolicyResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAccessPolicyResponseModel{}

// AdvancedAccessPolicyResponseModel Response object for an advanced access policy
type AdvancedAccessPolicyResponseModel struct {
	// Id
	Id *string `json:"Id,omitempty"`
	// `DEPRECATED` DEPRECATED. Use Id.
	Uid *int32 `json:"Uid,omitempty"`
	// Name of the advanced access policy.
	Name *string `json:"Name,omitempty"`
	// Whether HDX connections are allowed to the delivery group. CHANGE: was: public bool AllowsHdxAccess { get; set; }
	AllowHdxAccess *bool `json:"AllowHdxAccess,omitempty"`
	// Whether users are allowed to self-service restart machines.
	AllowMachineRestart *bool `json:"AllowMachineRestart,omitempty"`
	// Whether RDP connections are allowed to the delivery group. CHANGE: was: public bool AllowsRdpAccess { get; set; }
	AllowRdpAccess *bool `json:"AllowRdpAccess,omitempty"`
	AllowedConnection *AllowedConnection `json:"AllowedConnection,omitempty"`
	AllowedUsers *AllowedUser `json:"AllowedUsers,omitempty"`
	// Description.
	Description *string `json:"Description,omitempty"`
	// Whether the advanced access policy is enabled.  If a policy is disabled it is not considered when evaluating whether a user may access the delivery group.
	Enabled bool `json:"Enabled"`
	// Indicates whether the ExcludedClientIPs filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedClientIPFilterEnabled *bool `json:"ExcludedClientIPFilterEnabled,omitempty"`
	// The client IPs which will be denied access to the delivery group.
	ExcludedClientIPs []string `json:"ExcludedClientIPs,omitempty"`
	// Indicates whether the ExcludedClientNames filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedClientNameFilterEnabled *bool `json:"ExcludedClientNameFilterEnabled,omitempty"`
	// The client names which will be denied access to the delivery group.
	ExcludedClientNames []string `json:"ExcludedClientNames,omitempty"`
	// Indicates whether the ExcludedSmartAccessTags filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedSmartAccessFilterEnabled *bool `json:"ExcludedSmartAccessFilterEnabled,omitempty"`
	// The SmartAccess tags which will be denied access to the delivery group, if any occur in those provided by NetScaler Gateway with the user's connection.
	ExcludedSmartAccessTags []SmartAccessTagResponseModel `json:"ExcludedSmartAccessTags,omitempty"`
	// Indicates whether the ExcludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedUserFilterEnabled *bool `json:"ExcludedUserFilterEnabled,omitempty"`
	// The users and groups who are denied access to the delivery group.
	ExcludedUsers []IdentityUserResponseModel `json:"ExcludedUsers,omitempty"`
	// Indicates whether the IncludedClientIPs filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedClientIPFilterEnabled *bool `json:"IncludedClientIPFilterEnabled,omitempty"`
	// The client IPs which will be allowed access to the delivery group.
	IncludedClientIPs []string `json:"IncludedClientIPs,omitempty"`
	// Indicates whether the IncludedClientNames filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedClientNameFilterEnabled *bool `json:"IncludedClientNameFilterEnabled,omitempty"`
	// The client names which will be granted access to the delivery group.
	IncludedClientNames []string `json:"IncludedClientNames,omitempty"`
	// Indicates whether the IncludedSmartAccessTags filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated. CHANGE: was: public bool AccessGatewayConnectionsUseFilters { get; set; }
	IncludedSmartAccessFilterEnabled *bool `json:"IncludedSmartAccessFilterEnabled,omitempty"`
	// The SmartAccess tags which grant access to the delivery group, if any occur in those provided by NetScaler Gateway with the user's connection.
	IncludedSmartAccessTags []SmartAccessTagResponseModel `json:"IncludedSmartAccessTags,omitempty"`
	// Indicates whether the IncludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedUserFilterEnabled *bool `json:"IncludedUserFilterEnabled,omitempty"`
	// The users and groups who are granted access to the delivery group. CHANGE: was: public ADAccount[] IncludedUsers { get; set; }
	IncludedUsers []IdentityUserResponseModel `json:"IncludedUsers,omitempty"`
}

// NewAdvancedAccessPolicyResponseModel instantiates a new AdvancedAccessPolicyResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAccessPolicyResponseModel(enabled bool) *AdvancedAccessPolicyResponseModel {
	this := AdvancedAccessPolicyResponseModel{}
	this.Enabled = enabled
	return &this
}

// NewAdvancedAccessPolicyResponseModelWithDefaults instantiates a new AdvancedAccessPolicyResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAccessPolicyResponseModelWithDefaults() *AdvancedAccessPolicyResponseModel {
	this := AdvancedAccessPolicyResponseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AdvancedAccessPolicyResponseModel) SetId(v string) {
	o.Id = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *AdvancedAccessPolicyResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdvancedAccessPolicyResponseModel) SetName(v string) {
	o.Name = &v
}

// GetAllowHdxAccess returns the AllowHdxAccess field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetAllowHdxAccess() bool {
	if o == nil || IsNil(o.AllowHdxAccess) {
		var ret bool
		return ret
	}
	return *o.AllowHdxAccess
}

// GetAllowHdxAccessOk returns a tuple with the AllowHdxAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetAllowHdxAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowHdxAccess) {
		return nil, false
	}
	return o.AllowHdxAccess, true
}

// HasAllowHdxAccess returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasAllowHdxAccess() bool {
	if o != nil && !IsNil(o.AllowHdxAccess) {
		return true
	}

	return false
}

// SetAllowHdxAccess gets a reference to the given bool and assigns it to the AllowHdxAccess field.
func (o *AdvancedAccessPolicyResponseModel) SetAllowHdxAccess(v bool) {
	o.AllowHdxAccess = &v
}

// GetAllowMachineRestart returns the AllowMachineRestart field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetAllowMachineRestart() bool {
	if o == nil || IsNil(o.AllowMachineRestart) {
		var ret bool
		return ret
	}
	return *o.AllowMachineRestart
}

// GetAllowMachineRestartOk returns a tuple with the AllowMachineRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetAllowMachineRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMachineRestart) {
		return nil, false
	}
	return o.AllowMachineRestart, true
}

// HasAllowMachineRestart returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasAllowMachineRestart() bool {
	if o != nil && !IsNil(o.AllowMachineRestart) {
		return true
	}

	return false
}

// SetAllowMachineRestart gets a reference to the given bool and assigns it to the AllowMachineRestart field.
func (o *AdvancedAccessPolicyResponseModel) SetAllowMachineRestart(v bool) {
	o.AllowMachineRestart = &v
}

// GetAllowRdpAccess returns the AllowRdpAccess field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetAllowRdpAccess() bool {
	if o == nil || IsNil(o.AllowRdpAccess) {
		var ret bool
		return ret
	}
	return *o.AllowRdpAccess
}

// GetAllowRdpAccessOk returns a tuple with the AllowRdpAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetAllowRdpAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowRdpAccess) {
		return nil, false
	}
	return o.AllowRdpAccess, true
}

// HasAllowRdpAccess returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasAllowRdpAccess() bool {
	if o != nil && !IsNil(o.AllowRdpAccess) {
		return true
	}

	return false
}

// SetAllowRdpAccess gets a reference to the given bool and assigns it to the AllowRdpAccess field.
func (o *AdvancedAccessPolicyResponseModel) SetAllowRdpAccess(v bool) {
	o.AllowRdpAccess = &v
}

// GetAllowedConnection returns the AllowedConnection field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetAllowedConnection() AllowedConnection {
	if o == nil || IsNil(o.AllowedConnection) {
		var ret AllowedConnection
		return ret
	}
	return *o.AllowedConnection
}

// GetAllowedConnectionOk returns a tuple with the AllowedConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetAllowedConnectionOk() (*AllowedConnection, bool) {
	if o == nil || IsNil(o.AllowedConnection) {
		return nil, false
	}
	return o.AllowedConnection, true
}

// HasAllowedConnection returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasAllowedConnection() bool {
	if o != nil && !IsNil(o.AllowedConnection) {
		return true
	}

	return false
}

// SetAllowedConnection gets a reference to the given AllowedConnection and assigns it to the AllowedConnection field.
func (o *AdvancedAccessPolicyResponseModel) SetAllowedConnection(v AllowedConnection) {
	o.AllowedConnection = &v
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetAllowedUsers() AllowedUser {
	if o == nil || IsNil(o.AllowedUsers) {
		var ret AllowedUser
		return ret
	}
	return *o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetAllowedUsersOk() (*AllowedUser, bool) {
	if o == nil || IsNil(o.AllowedUsers) {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasAllowedUsers() bool {
	if o != nil && !IsNil(o.AllowedUsers) {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given AllowedUser and assigns it to the AllowedUsers field.
func (o *AdvancedAccessPolicyResponseModel) SetAllowedUsers(v AllowedUser) {
	o.AllowedUsers = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdvancedAccessPolicyResponseModel) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AdvancedAccessPolicyResponseModel) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AdvancedAccessPolicyResponseModel) SetEnabled(v bool) {
	o.Enabled = v
}

// GetExcludedClientIPFilterEnabled returns the ExcludedClientIPFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientIPFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedClientIPFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.ExcludedClientIPFilterEnabled
}

// GetExcludedClientIPFilterEnabledOk returns a tuple with the ExcludedClientIPFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientIPFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludedClientIPFilterEnabled) {
		return nil, false
	}
	return o.ExcludedClientIPFilterEnabled, true
}

// HasExcludedClientIPFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedClientIPFilterEnabled() bool {
	if o != nil && !IsNil(o.ExcludedClientIPFilterEnabled) {
		return true
	}

	return false
}

// SetExcludedClientIPFilterEnabled gets a reference to the given bool and assigns it to the ExcludedClientIPFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedClientIPFilterEnabled(v bool) {
	o.ExcludedClientIPFilterEnabled = &v
}

// GetExcludedClientIPs returns the ExcludedClientIPs field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientIPs() []string {
	if o == nil || IsNil(o.ExcludedClientIPs) {
		var ret []string
		return ret
	}
	return o.ExcludedClientIPs
}

// GetExcludedClientIPsOk returns a tuple with the ExcludedClientIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedClientIPs) {
		return nil, false
	}
	return o.ExcludedClientIPs, true
}

// HasExcludedClientIPs returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedClientIPs() bool {
	if o != nil && !IsNil(o.ExcludedClientIPs) {
		return true
	}

	return false
}

// SetExcludedClientIPs gets a reference to the given []string and assigns it to the ExcludedClientIPs field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedClientIPs(v []string) {
	o.ExcludedClientIPs = v
}

// GetExcludedClientNameFilterEnabled returns the ExcludedClientNameFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientNameFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedClientNameFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.ExcludedClientNameFilterEnabled
}

// GetExcludedClientNameFilterEnabledOk returns a tuple with the ExcludedClientNameFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientNameFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludedClientNameFilterEnabled) {
		return nil, false
	}
	return o.ExcludedClientNameFilterEnabled, true
}

// HasExcludedClientNameFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedClientNameFilterEnabled() bool {
	if o != nil && !IsNil(o.ExcludedClientNameFilterEnabled) {
		return true
	}

	return false
}

// SetExcludedClientNameFilterEnabled gets a reference to the given bool and assigns it to the ExcludedClientNameFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedClientNameFilterEnabled(v bool) {
	o.ExcludedClientNameFilterEnabled = &v
}

// GetExcludedClientNames returns the ExcludedClientNames field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientNames() []string {
	if o == nil || IsNil(o.ExcludedClientNames) {
		var ret []string
		return ret
	}
	return o.ExcludedClientNames
}

// GetExcludedClientNamesOk returns a tuple with the ExcludedClientNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedClientNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedClientNames) {
		return nil, false
	}
	return o.ExcludedClientNames, true
}

// HasExcludedClientNames returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedClientNames() bool {
	if o != nil && !IsNil(o.ExcludedClientNames) {
		return true
	}

	return false
}

// SetExcludedClientNames gets a reference to the given []string and assigns it to the ExcludedClientNames field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedClientNames(v []string) {
	o.ExcludedClientNames = v
}

// GetExcludedSmartAccessFilterEnabled returns the ExcludedSmartAccessFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedSmartAccessFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedSmartAccessFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.ExcludedSmartAccessFilterEnabled
}

// GetExcludedSmartAccessFilterEnabledOk returns a tuple with the ExcludedSmartAccessFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedSmartAccessFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludedSmartAccessFilterEnabled) {
		return nil, false
	}
	return o.ExcludedSmartAccessFilterEnabled, true
}

// HasExcludedSmartAccessFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedSmartAccessFilterEnabled() bool {
	if o != nil && !IsNil(o.ExcludedSmartAccessFilterEnabled) {
		return true
	}

	return false
}

// SetExcludedSmartAccessFilterEnabled gets a reference to the given bool and assigns it to the ExcludedSmartAccessFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedSmartAccessFilterEnabled(v bool) {
	o.ExcludedSmartAccessFilterEnabled = &v
}

// GetExcludedSmartAccessTags returns the ExcludedSmartAccessTags field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedSmartAccessTags() []SmartAccessTagResponseModel {
	if o == nil || IsNil(o.ExcludedSmartAccessTags) {
		var ret []SmartAccessTagResponseModel
		return ret
	}
	return o.ExcludedSmartAccessTags
}

// GetExcludedSmartAccessTagsOk returns a tuple with the ExcludedSmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedSmartAccessTagsOk() ([]SmartAccessTagResponseModel, bool) {
	if o == nil || IsNil(o.ExcludedSmartAccessTags) {
		return nil, false
	}
	return o.ExcludedSmartAccessTags, true
}

// HasExcludedSmartAccessTags returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedSmartAccessTags() bool {
	if o != nil && !IsNil(o.ExcludedSmartAccessTags) {
		return true
	}

	return false
}

// SetExcludedSmartAccessTags gets a reference to the given []SmartAccessTagResponseModel and assigns it to the ExcludedSmartAccessTags field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedSmartAccessTags(v []SmartAccessTagResponseModel) {
	o.ExcludedSmartAccessTags = v
}

// GetExcludedUserFilterEnabled returns the ExcludedUserFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedUserFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.ExcludedUserFilterEnabled
}

// GetExcludedUserFilterEnabledOk returns a tuple with the ExcludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExcludedUserFilterEnabled) {
		return nil, false
	}
	return o.ExcludedUserFilterEnabled, true
}

// HasExcludedUserFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedUserFilterEnabled() bool {
	if o != nil && !IsNil(o.ExcludedUserFilterEnabled) {
		return true
	}

	return false
}

// SetExcludedUserFilterEnabled gets a reference to the given bool and assigns it to the ExcludedUserFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedUserFilterEnabled(v bool) {
	o.ExcludedUserFilterEnabled = &v
}

// GetExcludedUsers returns the ExcludedUsers field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedUsers() []IdentityUserResponseModel {
	if o == nil || IsNil(o.ExcludedUsers) {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.ExcludedUsers
}

// GetExcludedUsersOk returns a tuple with the ExcludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetExcludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.ExcludedUsers) {
		return nil, false
	}
	return o.ExcludedUsers, true
}

// HasExcludedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasExcludedUsers() bool {
	if o != nil && !IsNil(o.ExcludedUsers) {
		return true
	}

	return false
}

// SetExcludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the ExcludedUsers field.
func (o *AdvancedAccessPolicyResponseModel) SetExcludedUsers(v []IdentityUserResponseModel) {
	o.ExcludedUsers = v
}

// GetIncludedClientIPFilterEnabled returns the IncludedClientIPFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientIPFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedClientIPFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedClientIPFilterEnabled
}

// GetIncludedClientIPFilterEnabledOk returns a tuple with the IncludedClientIPFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientIPFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedClientIPFilterEnabled) {
		return nil, false
	}
	return o.IncludedClientIPFilterEnabled, true
}

// HasIncludedClientIPFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedClientIPFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedClientIPFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedClientIPFilterEnabled gets a reference to the given bool and assigns it to the IncludedClientIPFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedClientIPFilterEnabled(v bool) {
	o.IncludedClientIPFilterEnabled = &v
}

// GetIncludedClientIPs returns the IncludedClientIPs field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientIPs() []string {
	if o == nil || IsNil(o.IncludedClientIPs) {
		var ret []string
		return ret
	}
	return o.IncludedClientIPs
}

// GetIncludedClientIPsOk returns a tuple with the IncludedClientIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedClientIPs) {
		return nil, false
	}
	return o.IncludedClientIPs, true
}

// HasIncludedClientIPs returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedClientIPs() bool {
	if o != nil && !IsNil(o.IncludedClientIPs) {
		return true
	}

	return false
}

// SetIncludedClientIPs gets a reference to the given []string and assigns it to the IncludedClientIPs field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedClientIPs(v []string) {
	o.IncludedClientIPs = v
}

// GetIncludedClientNameFilterEnabled returns the IncludedClientNameFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientNameFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedClientNameFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedClientNameFilterEnabled
}

// GetIncludedClientNameFilterEnabledOk returns a tuple with the IncludedClientNameFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientNameFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedClientNameFilterEnabled) {
		return nil, false
	}
	return o.IncludedClientNameFilterEnabled, true
}

// HasIncludedClientNameFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedClientNameFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedClientNameFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedClientNameFilterEnabled gets a reference to the given bool and assigns it to the IncludedClientNameFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedClientNameFilterEnabled(v bool) {
	o.IncludedClientNameFilterEnabled = &v
}

// GetIncludedClientNames returns the IncludedClientNames field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientNames() []string {
	if o == nil || IsNil(o.IncludedClientNames) {
		var ret []string
		return ret
	}
	return o.IncludedClientNames
}

// GetIncludedClientNamesOk returns a tuple with the IncludedClientNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedClientNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedClientNames) {
		return nil, false
	}
	return o.IncludedClientNames, true
}

// HasIncludedClientNames returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedClientNames() bool {
	if o != nil && !IsNil(o.IncludedClientNames) {
		return true
	}

	return false
}

// SetIncludedClientNames gets a reference to the given []string and assigns it to the IncludedClientNames field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedClientNames(v []string) {
	o.IncludedClientNames = v
}

// GetIncludedSmartAccessFilterEnabled returns the IncludedSmartAccessFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedSmartAccessFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedSmartAccessFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedSmartAccessFilterEnabled
}

// GetIncludedSmartAccessFilterEnabledOk returns a tuple with the IncludedSmartAccessFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedSmartAccessFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedSmartAccessFilterEnabled) {
		return nil, false
	}
	return o.IncludedSmartAccessFilterEnabled, true
}

// HasIncludedSmartAccessFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedSmartAccessFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedSmartAccessFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedSmartAccessFilterEnabled gets a reference to the given bool and assigns it to the IncludedSmartAccessFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedSmartAccessFilterEnabled(v bool) {
	o.IncludedSmartAccessFilterEnabled = &v
}

// GetIncludedSmartAccessTags returns the IncludedSmartAccessTags field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedSmartAccessTags() []SmartAccessTagResponseModel {
	if o == nil || IsNil(o.IncludedSmartAccessTags) {
		var ret []SmartAccessTagResponseModel
		return ret
	}
	return o.IncludedSmartAccessTags
}

// GetIncludedSmartAccessTagsOk returns a tuple with the IncludedSmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedSmartAccessTagsOk() ([]SmartAccessTagResponseModel, bool) {
	if o == nil || IsNil(o.IncludedSmartAccessTags) {
		return nil, false
	}
	return o.IncludedSmartAccessTags, true
}

// HasIncludedSmartAccessTags returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedSmartAccessTags() bool {
	if o != nil && !IsNil(o.IncludedSmartAccessTags) {
		return true
	}

	return false
}

// SetIncludedSmartAccessTags gets a reference to the given []SmartAccessTagResponseModel and assigns it to the IncludedSmartAccessTags field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedSmartAccessTags(v []SmartAccessTagResponseModel) {
	o.IncludedSmartAccessTags = v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		return nil, false
	}
	return o.IncludedUserFilterEnabled, true
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedUserFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given bool and assigns it to the IncludedUserFilterEnabled field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = &v
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedUsers() []IdentityUserResponseModel {
	if o == nil || IsNil(o.IncludedUsers) {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyResponseModel) GetIncludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyResponseModel) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the IncludedUsers field.
func (o *AdvancedAccessPolicyResponseModel) SetIncludedUsers(v []IdentityUserResponseModel) {
	o.IncludedUsers = v
}

func (o AdvancedAccessPolicyResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAccessPolicyResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.AllowHdxAccess) {
		toSerialize["AllowHdxAccess"] = o.AllowHdxAccess
	}
	if !IsNil(o.AllowMachineRestart) {
		toSerialize["AllowMachineRestart"] = o.AllowMachineRestart
	}
	if !IsNil(o.AllowRdpAccess) {
		toSerialize["AllowRdpAccess"] = o.AllowRdpAccess
	}
	if !IsNil(o.AllowedConnection) {
		toSerialize["AllowedConnection"] = o.AllowedConnection
	}
	if !IsNil(o.AllowedUsers) {
		toSerialize["AllowedUsers"] = o.AllowedUsers
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	toSerialize["Enabled"] = o.Enabled
	if !IsNil(o.ExcludedClientIPFilterEnabled) {
		toSerialize["ExcludedClientIPFilterEnabled"] = o.ExcludedClientIPFilterEnabled
	}
	if !IsNil(o.ExcludedClientIPs) {
		toSerialize["ExcludedClientIPs"] = o.ExcludedClientIPs
	}
	if !IsNil(o.ExcludedClientNameFilterEnabled) {
		toSerialize["ExcludedClientNameFilterEnabled"] = o.ExcludedClientNameFilterEnabled
	}
	if !IsNil(o.ExcludedClientNames) {
		toSerialize["ExcludedClientNames"] = o.ExcludedClientNames
	}
	if !IsNil(o.ExcludedSmartAccessFilterEnabled) {
		toSerialize["ExcludedSmartAccessFilterEnabled"] = o.ExcludedSmartAccessFilterEnabled
	}
	if !IsNil(o.ExcludedSmartAccessTags) {
		toSerialize["ExcludedSmartAccessTags"] = o.ExcludedSmartAccessTags
	}
	if !IsNil(o.ExcludedUserFilterEnabled) {
		toSerialize["ExcludedUserFilterEnabled"] = o.ExcludedUserFilterEnabled
	}
	if !IsNil(o.ExcludedUsers) {
		toSerialize["ExcludedUsers"] = o.ExcludedUsers
	}
	if !IsNil(o.IncludedClientIPFilterEnabled) {
		toSerialize["IncludedClientIPFilterEnabled"] = o.IncludedClientIPFilterEnabled
	}
	if !IsNil(o.IncludedClientIPs) {
		toSerialize["IncludedClientIPs"] = o.IncludedClientIPs
	}
	if !IsNil(o.IncludedClientNameFilterEnabled) {
		toSerialize["IncludedClientNameFilterEnabled"] = o.IncludedClientNameFilterEnabled
	}
	if !IsNil(o.IncludedClientNames) {
		toSerialize["IncludedClientNames"] = o.IncludedClientNames
	}
	if !IsNil(o.IncludedSmartAccessFilterEnabled) {
		toSerialize["IncludedSmartAccessFilterEnabled"] = o.IncludedSmartAccessFilterEnabled
	}
	if !IsNil(o.IncludedSmartAccessTags) {
		toSerialize["IncludedSmartAccessTags"] = o.IncludedSmartAccessTags
	}
	if !IsNil(o.IncludedUserFilterEnabled) {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	}
	if !IsNil(o.IncludedUsers) {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	return toSerialize, nil
}

type NullableAdvancedAccessPolicyResponseModel struct {
	value *AdvancedAccessPolicyResponseModel
	isSet bool
}

func (v NullableAdvancedAccessPolicyResponseModel) Get() *AdvancedAccessPolicyResponseModel {
	return v.value
}

func (v *NullableAdvancedAccessPolicyResponseModel) Set(val *AdvancedAccessPolicyResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAccessPolicyResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAccessPolicyResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAccessPolicyResponseModel(val *AdvancedAccessPolicyResponseModel) *NullableAdvancedAccessPolicyResponseModel {
	return &NullableAdvancedAccessPolicyResponseModel{value: val, isSet: true}
}

func (v NullableAdvancedAccessPolicyResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAccessPolicyResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


