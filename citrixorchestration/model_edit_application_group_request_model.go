/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditApplicationGroupRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditApplicationGroupRequestModel{}

// EditApplicationGroupRequestModel Request object for editing an application group.
type EditApplicationGroupRequestModel struct {
	// The folder in which the application group resides. If not specified, the value will not be changed. May be specified as either the folder Id or Path. If specified as a path, and the path does not exist, it will be automatically created.
	AdminFolder *string `json:"AdminFolder,omitempty"`
	// Name of the application group.   If not specified, will not be changed.
	Name *string `json:"Name,omitempty"`
	// Description of the application group.   If not specified, will not be changed.  To remove a previously set description, use the empty string (\"\").
	Description *string `json:"Description,omitempty"`
	// Whether the application group's applications can be launched by end users.   If not specified, will not be changed.
	Enabled *bool `json:"Enabled,omitempty"`
	// Optional tag that may be used further to restrict which machines may be used for launching the application group's applications.   A machine may be used by an application group if either the application group has no tag restriction or the application group does have a tag restriction and the machine is tagged with the same tag.   If not specified, will not be changed.  To remove a previously set tag restriction, use the empty string (\"\").
	RestrictToTag *string `json:"RestrictToTag,omitempty"`
	// Administrative scopes which the application group should be a part of.   If not specified, will not be changed.   The \"All\" scope, and any tenant scopes, are implicit.  To remove from all non-implicit scopes, specify an empty array ([]).   Specifying tenant scopes is equivalent to specifying the  property and is subject to the same constraints.
	Scopes []string `json:"Scopes,omitempty"`
	// Tenants to associate with the application group.
	Tenants []string `json:"Tenants,omitempty"`
	// Whether the application group's applications can share sessions with applications that are not a member of this application group.   If not specified, will not be changed.
	SessionSharingEnabled *bool `json:"SessionSharingEnabled,omitempty"`
	// Specifies whether the  filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery groups' access polic(ies) is implicitly granted access to the applications within the application group.   If not specified, will not be changed.
	IncludedUserFilterEnabled *bool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the included users filter of the application group; that is, the users and groups who are explicitly granted access to the applications in the application group.   If not specified, will not be changed.   If specified, all desired users must be listed.  To remove all users, specify an empty array ([]).
	IncludedUsers []string `json:"IncludedUsers,omitempty"`
	// List of delivery groups to associate with the application group.   If not specified, will not be changed.   If specified, all desired delivery groups must be listed.  The application group must be associated with at least one delivery group.
	DeliveryGroups []PriorityRefRequestModel `json:"DeliveryGroups,omitempty"`
}

// NewEditApplicationGroupRequestModel instantiates a new EditApplicationGroupRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditApplicationGroupRequestModel() *EditApplicationGroupRequestModel {
	this := EditApplicationGroupRequestModel{}
	return &this
}

// NewEditApplicationGroupRequestModelWithDefaults instantiates a new EditApplicationGroupRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditApplicationGroupRequestModelWithDefaults() *EditApplicationGroupRequestModel {
	this := EditApplicationGroupRequestModel{}
	return &this
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetAdminFolder() string {
	if o == nil || IsNil(o.AdminFolder) {
		var ret string
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetAdminFolderOk() (*string, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given string and assigns it to the AdminFolder field.
func (o *EditApplicationGroupRequestModel) SetAdminFolder(v string) {
	o.AdminFolder = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EditApplicationGroupRequestModel) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EditApplicationGroupRequestModel) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *EditApplicationGroupRequestModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag) {
		var ret string
		return ret
	}
	return *o.RestrictToTag
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictToTag) {
		return nil, false
	}
	return o.RestrictToTag, true
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasRestrictToTag() bool {
	if o != nil && !IsNil(o.RestrictToTag) {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given string and assigns it to the RestrictToTag field.
func (o *EditApplicationGroupRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *EditApplicationGroupRequestModel) SetScopes(v []string) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetTenants() []string {
	if o == nil || IsNil(o.Tenants) {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *EditApplicationGroupRequestModel) SetTenants(v []string) {
	o.Tenants = v
}

// GetSessionSharingEnabled returns the SessionSharingEnabled field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetSessionSharingEnabled() bool {
	if o == nil || IsNil(o.SessionSharingEnabled) {
		var ret bool
		return ret
	}
	return *o.SessionSharingEnabled
}

// GetSessionSharingEnabledOk returns a tuple with the SessionSharingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetSessionSharingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionSharingEnabled) {
		return nil, false
	}
	return o.SessionSharingEnabled, true
}

// HasSessionSharingEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasSessionSharingEnabled() bool {
	if o != nil && !IsNil(o.SessionSharingEnabled) {
		return true
	}

	return false
}

// SetSessionSharingEnabled gets a reference to the given bool and assigns it to the SessionSharingEnabled field.
func (o *EditApplicationGroupRequestModel) SetSessionSharingEnabled(v bool) {
	o.SessionSharingEnabled = &v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		return nil, false
	}
	return o.IncludedUserFilterEnabled, true
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedUserFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given bool and assigns it to the IncludedUserFilterEnabled field.
func (o *EditApplicationGroupRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = &v
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetIncludedUsers() []string {
	if o == nil || IsNil(o.IncludedUsers) {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *EditApplicationGroupRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

// GetDeliveryGroups returns the DeliveryGroups field value if set, zero value otherwise.
func (o *EditApplicationGroupRequestModel) GetDeliveryGroups() []PriorityRefRequestModel {
	if o == nil || IsNil(o.DeliveryGroups) {
		var ret []PriorityRefRequestModel
		return ret
	}
	return o.DeliveryGroups
}

// GetDeliveryGroupsOk returns a tuple with the DeliveryGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationGroupRequestModel) GetDeliveryGroupsOk() ([]PriorityRefRequestModel, bool) {
	if o == nil || IsNil(o.DeliveryGroups) {
		return nil, false
	}
	return o.DeliveryGroups, true
}

// HasDeliveryGroups returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasDeliveryGroups() bool {
	if o != nil && !IsNil(o.DeliveryGroups) {
		return true
	}

	return false
}

// SetDeliveryGroups gets a reference to the given []PriorityRefRequestModel and assigns it to the DeliveryGroups field.
func (o *EditApplicationGroupRequestModel) SetDeliveryGroups(v []PriorityRefRequestModel) {
	o.DeliveryGroups = v
}

func (o EditApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditApplicationGroupRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !IsNil(o.RestrictToTag) {
		toSerialize["RestrictToTag"] = o.RestrictToTag
	}
	if !IsNil(o.Scopes) {
		toSerialize["Scopes"] = o.Scopes
	}
	if !IsNil(o.Tenants) {
		toSerialize["Tenants"] = o.Tenants
	}
	if !IsNil(o.SessionSharingEnabled) {
		toSerialize["SessionSharingEnabled"] = o.SessionSharingEnabled
	}
	if !IsNil(o.IncludedUserFilterEnabled) {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	}
	if !IsNil(o.IncludedUsers) {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if !IsNil(o.DeliveryGroups) {
		toSerialize["DeliveryGroups"] = o.DeliveryGroups
	}
	return toSerialize, nil
}

type NullableEditApplicationGroupRequestModel struct {
	value *EditApplicationGroupRequestModel
	isSet bool
}

func (v NullableEditApplicationGroupRequestModel) Get() *EditApplicationGroupRequestModel {
	return v.value
}

func (v *NullableEditApplicationGroupRequestModel) Set(val *EditApplicationGroupRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditApplicationGroupRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditApplicationGroupRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditApplicationGroupRequestModel(val *EditApplicationGroupRequestModel) *NullableEditApplicationGroupRequestModel {
	return &NullableEditApplicationGroupRequestModel{value: val, isSet: true}
}

func (v NullableEditApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditApplicationGroupRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


