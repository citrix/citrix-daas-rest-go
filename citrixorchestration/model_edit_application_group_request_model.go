/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditApplicationGroupRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditApplicationGroupRequestModel{}

// EditApplicationGroupRequestModel Request object for editing an application group.
type EditApplicationGroupRequestModel struct {
	// The folder in which the application group resides. If not specified, the value will not be changed. May be specified as either the folder Id or Path. If specified as a path, and the path does not exist, it will be automatically created.
	AdminFolder NullableString `json:"AdminFolder,omitempty"`
	// Name of the application group.   If not specified, will not be changed.
	Name NullableString `json:"Name,omitempty"`
	// Description of the application group.   If not specified, will not be changed.  To remove a previously set description, use the empty string (\"\").
	Description NullableString `json:"Description,omitempty"`
	// Whether the application group's applications can be launched by end users.   If not specified, will not be changed.
	Enabled NullableBool `json:"Enabled,omitempty"`
	// Optional tag that may be used further to restrict which machines may be used for launching the application group's applications.   A machine may be used by an application group if either the application group has no tag restriction or the application group does have a tag restriction and the machine is tagged with the same tag.   If not specified, will not be changed.  To remove a previously set tag restriction, use the empty string (\"\").
	RestrictToTag NullableString `json:"RestrictToTag,omitempty"`
	// Administrative scopes which the application group should be a part of.   If not specified, will not be changed.   The \"All\" scope, and any tenant scopes, are implicit.  To remove from all non-implicit scopes, specify an empty array ([]).   Specifying tenant scopes is equivalent to specifying the  property and is subject to the same constraints.
	Scopes []string `json:"Scopes,omitempty"`
	// Tenants to associate with the application group.
	Tenants []string `json:"Tenants,omitempty"`
	// Whether the application group's applications can share sessions with applications that are not a member of this application group.   If not specified, will not be changed.
	SessionSharingEnabled NullableBool `json:"SessionSharingEnabled,omitempty"`
	// Specifies whether the  filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery groups' access polic(ies) is implicitly granted access to the applications within the application group.   If not specified, will not be changed.
	IncludedUserFilterEnabled NullableBool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the included users filter of the application group; that is, the users and groups who are explicitly granted access to the applications in the application group.   If not specified, will not be changed.   If specified, all desired users must be listed.  To remove all users, specify an empty array ([]).
	IncludedUsers []string `json:"IncludedUsers,omitempty"`
	// List of delivery groups to associate with the application group.   If not specified, will not be changed.   If specified, all desired delivery groups must be listed.  The application group must be associated with at least one delivery group.
	DeliveryGroups []PriorityRefRequestModel `json:"DeliveryGroups,omitempty"`
	// The metadata of the application group. When set the property value equal to null/empty means to remove this property.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
}

// NewEditApplicationGroupRequestModel instantiates a new EditApplicationGroupRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditApplicationGroupRequestModel() *EditApplicationGroupRequestModel {
	this := EditApplicationGroupRequestModel{}
	return &this
}

// NewEditApplicationGroupRequestModelWithDefaults instantiates a new EditApplicationGroupRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditApplicationGroupRequestModelWithDefaults() *EditApplicationGroupRequestModel {
	this := EditApplicationGroupRequestModel{}
	return &this
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetAdminFolder() string {
	if o == nil || IsNil(o.AdminFolder.Get()) {
		var ret string
		return ret
	}
	return *o.AdminFolder.Get()
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetAdminFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminFolder.Get(), o.AdminFolder.IsSet()
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasAdminFolder() bool {
	if o != nil && o.AdminFolder.IsSet() {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given NullableString and assigns it to the AdminFolder field.
func (o *EditApplicationGroupRequestModel) SetAdminFolder(v string) {
	o.AdminFolder.Set(&v)
}

// SetAdminFolderNil sets the value for AdminFolder to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetAdminFolderNil() {
	o.AdminFolder.Set(nil)
}

// UnsetAdminFolder ensures that no value is present for AdminFolder, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetAdminFolder() {
	o.AdminFolder.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditApplicationGroupRequestModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EditApplicationGroupRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *EditApplicationGroupRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag.Get()) {
		var ret string
		return ret
	}
	return *o.RestrictToTag.Get()
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictToTag.Get(), o.RestrictToTag.IsSet()
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasRestrictToTag() bool {
	if o != nil && o.RestrictToTag.IsSet() {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given NullableString and assigns it to the RestrictToTag field.
func (o *EditApplicationGroupRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag.Set(&v)
}

// SetRestrictToTagNil sets the value for RestrictToTag to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetRestrictToTagNil() {
	o.RestrictToTag.Set(nil)
}

// UnsetRestrictToTag ensures that no value is present for RestrictToTag, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetRestrictToTag() {
	o.RestrictToTag.Unset()
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasScopes() bool {
	if o != nil && IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *EditApplicationGroupRequestModel) SetScopes(v []string) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetTenants() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasTenants() bool {
	if o != nil && IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *EditApplicationGroupRequestModel) SetTenants(v []string) {
	o.Tenants = v
}

// GetSessionSharingEnabled returns the SessionSharingEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetSessionSharingEnabled() bool {
	if o == nil || IsNil(o.SessionSharingEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.SessionSharingEnabled.Get()
}

// GetSessionSharingEnabledOk returns a tuple with the SessionSharingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetSessionSharingEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionSharingEnabled.Get(), o.SessionSharingEnabled.IsSet()
}

// HasSessionSharingEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasSessionSharingEnabled() bool {
	if o != nil && o.SessionSharingEnabled.IsSet() {
		return true
	}

	return false
}

// SetSessionSharingEnabled gets a reference to the given NullableBool and assigns it to the SessionSharingEnabled field.
func (o *EditApplicationGroupRequestModel) SetSessionSharingEnabled(v bool) {
	o.SessionSharingEnabled.Set(&v)
}

// SetSessionSharingEnabledNil sets the value for SessionSharingEnabled to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetSessionSharingEnabledNil() {
	o.SessionSharingEnabled.Set(nil)
}

// UnsetSessionSharingEnabled ensures that no value is present for SessionSharingEnabled, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetSessionSharingEnabled() {
	o.SessionSharingEnabled.Unset()
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled.Get()
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedUserFilterEnabled.Get(), o.IncludedUserFilterEnabled.IsSet()
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && o.IncludedUserFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedUserFilterEnabled field.
func (o *EditApplicationGroupRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled.Set(&v)
}

// SetIncludedUserFilterEnabledNil sets the value for IncludedUserFilterEnabled to be an explicit nil
func (o *EditApplicationGroupRequestModel) SetIncludedUserFilterEnabledNil() {
	o.IncludedUserFilterEnabled.Set(nil)
}

// UnsetIncludedUserFilterEnabled ensures that no value is present for IncludedUserFilterEnabled, not even an explicit nil
func (o *EditApplicationGroupRequestModel) UnsetIncludedUserFilterEnabled() {
	o.IncludedUserFilterEnabled.Unset()
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetIncludedUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasIncludedUsers() bool {
	if o != nil && IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *EditApplicationGroupRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

// GetDeliveryGroups returns the DeliveryGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetDeliveryGroups() []PriorityRefRequestModel {
	if o == nil {
		var ret []PriorityRefRequestModel
		return ret
	}
	return o.DeliveryGroups
}

// GetDeliveryGroupsOk returns a tuple with the DeliveryGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetDeliveryGroupsOk() ([]PriorityRefRequestModel, bool) {
	if o == nil || IsNil(o.DeliveryGroups) {
		return nil, false
	}
	return o.DeliveryGroups, true
}

// HasDeliveryGroups returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasDeliveryGroups() bool {
	if o != nil && IsNil(o.DeliveryGroups) {
		return true
	}

	return false
}

// SetDeliveryGroups gets a reference to the given []PriorityRefRequestModel and assigns it to the DeliveryGroups field.
func (o *EditApplicationGroupRequestModel) SetDeliveryGroups(v []PriorityRefRequestModel) {
	o.DeliveryGroups = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationGroupRequestModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationGroupRequestModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EditApplicationGroupRequestModel) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *EditApplicationGroupRequestModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

func (o EditApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditApplicationGroupRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminFolder.IsSet() {
		toSerialize["AdminFolder"] = o.AdminFolder.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	if o.RestrictToTag.IsSet() {
		toSerialize["RestrictToTag"] = o.RestrictToTag.Get()
	}
	if o.Scopes != nil {
		toSerialize["Scopes"] = o.Scopes
	}
	if o.Tenants != nil {
		toSerialize["Tenants"] = o.Tenants
	}
	if o.SessionSharingEnabled.IsSet() {
		toSerialize["SessionSharingEnabled"] = o.SessionSharingEnabled.Get()
	}
	if o.IncludedUserFilterEnabled.IsSet() {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled.Get()
	}
	if o.IncludedUsers != nil {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if o.DeliveryGroups != nil {
		toSerialize["DeliveryGroups"] = o.DeliveryGroups
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableEditApplicationGroupRequestModel struct {
	value *EditApplicationGroupRequestModel
	isSet bool
}

func (v NullableEditApplicationGroupRequestModel) Get() *EditApplicationGroupRequestModel {
	return v.value
}

func (v *NullableEditApplicationGroupRequestModel) Set(val *EditApplicationGroupRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditApplicationGroupRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditApplicationGroupRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditApplicationGroupRequestModel(val *EditApplicationGroupRequestModel) *NullableEditApplicationGroupRequestModel {
	return &NullableEditApplicationGroupRequestModel{value: val, isSet: true}
}

func (v NullableEditApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditApplicationGroupRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
