/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the UserZonePreferenceResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserZonePreferenceResponseModel{}

// UserZonePreferenceResponseModel Data model for user zone preference.
type UserZonePreferenceResponseModel struct {
	// The full name of the user or user group.
	FullName *string `json:"FullName,omitempty"`
	// Name of the user or user group.
	Name *string `json:"Name,omitempty"`
	// Sid of the user or user group.
	Sid *string `json:"Sid,omitempty"`
	// UPN of the user or user group.
	Upn *string `json:"Upn,omitempty"`
	Zone *UserZonePreferenceResponseModelZone `json:"Zone,omitempty"`
}

// NewUserZonePreferenceResponseModel instantiates a new UserZonePreferenceResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserZonePreferenceResponseModel() *UserZonePreferenceResponseModel {
	this := UserZonePreferenceResponseModel{}
	return &this
}

// NewUserZonePreferenceResponseModelWithDefaults instantiates a new UserZonePreferenceResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserZonePreferenceResponseModelWithDefaults() *UserZonePreferenceResponseModel {
	this := UserZonePreferenceResponseModel{}
	return &this
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *UserZonePreferenceResponseModel) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserZonePreferenceResponseModel) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *UserZonePreferenceResponseModel) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *UserZonePreferenceResponseModel) SetFullName(v string) {
	o.FullName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserZonePreferenceResponseModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserZonePreferenceResponseModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserZonePreferenceResponseModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserZonePreferenceResponseModel) SetName(v string) {
	o.Name = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *UserZonePreferenceResponseModel) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserZonePreferenceResponseModel) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *UserZonePreferenceResponseModel) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *UserZonePreferenceResponseModel) SetSid(v string) {
	o.Sid = &v
}

// GetUpn returns the Upn field value if set, zero value otherwise.
func (o *UserZonePreferenceResponseModel) GetUpn() string {
	if o == nil || IsNil(o.Upn) {
		var ret string
		return ret
	}
	return *o.Upn
}

// GetUpnOk returns a tuple with the Upn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserZonePreferenceResponseModel) GetUpnOk() (*string, bool) {
	if o == nil || IsNil(o.Upn) {
		return nil, false
	}
	return o.Upn, true
}

// HasUpn returns a boolean if a field has been set.
func (o *UserZonePreferenceResponseModel) HasUpn() bool {
	if o != nil && !IsNil(o.Upn) {
		return true
	}

	return false
}

// SetUpn gets a reference to the given string and assigns it to the Upn field.
func (o *UserZonePreferenceResponseModel) SetUpn(v string) {
	o.Upn = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *UserZonePreferenceResponseModel) GetZone() UserZonePreferenceResponseModelZone {
	if o == nil || IsNil(o.Zone) {
		var ret UserZonePreferenceResponseModelZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserZonePreferenceResponseModel) GetZoneOk() (*UserZonePreferenceResponseModelZone, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *UserZonePreferenceResponseModel) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given UserZonePreferenceResponseModelZone and assigns it to the Zone field.
func (o *UserZonePreferenceResponseModel) SetZone(v UserZonePreferenceResponseModelZone) {
	o.Zone = &v
}

func (o UserZonePreferenceResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserZonePreferenceResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullName) {
		toSerialize["FullName"] = o.FullName
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Sid) {
		toSerialize["Sid"] = o.Sid
	}
	if !IsNil(o.Upn) {
		toSerialize["Upn"] = o.Upn
	}
	if !IsNil(o.Zone) {
		toSerialize["Zone"] = o.Zone
	}
	return toSerialize, nil
}

type NullableUserZonePreferenceResponseModel struct {
	value *UserZonePreferenceResponseModel
	isSet bool
}

func (v NullableUserZonePreferenceResponseModel) Get() *UserZonePreferenceResponseModel {
	return v.value
}

func (v *NullableUserZonePreferenceResponseModel) Set(val *UserZonePreferenceResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUserZonePreferenceResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUserZonePreferenceResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserZonePreferenceResponseModel(val *UserZonePreferenceResponseModel) *NullableUserZonePreferenceResponseModel {
	return &NullableUserZonePreferenceResponseModel{value: val, isSet: true}
}

func (v NullableUserZonePreferenceResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserZonePreferenceResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


