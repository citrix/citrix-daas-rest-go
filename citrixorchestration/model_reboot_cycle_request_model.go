/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the RebootCycleRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RebootCycleRequestModel{}

// RebootCycleRequestModel Request object for specifying reboot cycle properties.
type RebootCycleRequestModel struct {
	// Approximate maximum number of minutes over which the reboot cycle runs.
	RebootDurationMinutes NullableInt32 `json:"RebootDurationMinutes,omitempty"`
	// Indicates whether the reboot cycle is active for maintained machines.
	IgnoreMaintenanceMode NullableBool `json:"IgnoreMaintenanceMode,omitempty"`
	// If set, the reboot cycle only applies to machines in the delivery group with the specified tag.
	RestrictToTag NullableString `json:"RestrictToTag,omitempty"`
	// The window title used when showing the warning message in user sessions on a machine to reboot.
	WarningTitle NullableString `json:"WarningTitle,omitempty"`
	// Warning message displayed in user sessions on a machine to reboot.
	WarningMessage NullableString `json:"WarningMessage,omitempty"`
	// Time prior to the start of a machine reboot at which a warning message is displayed to all the users on the machine.
	WarningDurationMinutes NullableInt32 `json:"WarningDurationMinutes,omitempty"`
	// Time to wait after the previous reboot warning before displaying the warning message in all user sessions on that machine again.
	WarningRepeatIntervalMinutes NullableInt32 `json:"WarningRepeatIntervalMinutes,omitempty"`
}

// NewRebootCycleRequestModel instantiates a new RebootCycleRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootCycleRequestModel() *RebootCycleRequestModel {
	this := RebootCycleRequestModel{}
	return &this
}

// NewRebootCycleRequestModelWithDefaults instantiates a new RebootCycleRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootCycleRequestModelWithDefaults() *RebootCycleRequestModel {
	this := RebootCycleRequestModel{}
	return &this
}

// GetRebootDurationMinutes returns the RebootDurationMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetRebootDurationMinutes() int32 {
	if o == nil || IsNil(o.RebootDurationMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.RebootDurationMinutes.Get()
}

// GetRebootDurationMinutesOk returns a tuple with the RebootDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetRebootDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RebootDurationMinutes.Get(), o.RebootDurationMinutes.IsSet()
}

// HasRebootDurationMinutes returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasRebootDurationMinutes() bool {
	if o != nil && o.RebootDurationMinutes.IsSet() {
		return true
	}

	return false
}

// SetRebootDurationMinutes gets a reference to the given NullableInt32 and assigns it to the RebootDurationMinutes field.
func (o *RebootCycleRequestModel) SetRebootDurationMinutes(v int32) {
	o.RebootDurationMinutes.Set(&v)
}
// SetRebootDurationMinutesNil sets the value for RebootDurationMinutes to be an explicit nil
func (o *RebootCycleRequestModel) SetRebootDurationMinutesNil() {
	o.RebootDurationMinutes.Set(nil)
}

// UnsetRebootDurationMinutes ensures that no value is present for RebootDurationMinutes, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetRebootDurationMinutes() {
	o.RebootDurationMinutes.Unset()
}

// GetIgnoreMaintenanceMode returns the IgnoreMaintenanceMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetIgnoreMaintenanceMode() bool {
	if o == nil || IsNil(o.IgnoreMaintenanceMode.Get()) {
		var ret bool
		return ret
	}
	return *o.IgnoreMaintenanceMode.Get()
}

// GetIgnoreMaintenanceModeOk returns a tuple with the IgnoreMaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetIgnoreMaintenanceModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IgnoreMaintenanceMode.Get(), o.IgnoreMaintenanceMode.IsSet()
}

// HasIgnoreMaintenanceMode returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasIgnoreMaintenanceMode() bool {
	if o != nil && o.IgnoreMaintenanceMode.IsSet() {
		return true
	}

	return false
}

// SetIgnoreMaintenanceMode gets a reference to the given NullableBool and assigns it to the IgnoreMaintenanceMode field.
func (o *RebootCycleRequestModel) SetIgnoreMaintenanceMode(v bool) {
	o.IgnoreMaintenanceMode.Set(&v)
}
// SetIgnoreMaintenanceModeNil sets the value for IgnoreMaintenanceMode to be an explicit nil
func (o *RebootCycleRequestModel) SetIgnoreMaintenanceModeNil() {
	o.IgnoreMaintenanceMode.Set(nil)
}

// UnsetIgnoreMaintenanceMode ensures that no value is present for IgnoreMaintenanceMode, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetIgnoreMaintenanceMode() {
	o.IgnoreMaintenanceMode.Unset()
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag.Get()) {
		var ret string
		return ret
	}
	return *o.RestrictToTag.Get()
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictToTag.Get(), o.RestrictToTag.IsSet()
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasRestrictToTag() bool {
	if o != nil && o.RestrictToTag.IsSet() {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given NullableString and assigns it to the RestrictToTag field.
func (o *RebootCycleRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag.Set(&v)
}
// SetRestrictToTagNil sets the value for RestrictToTag to be an explicit nil
func (o *RebootCycleRequestModel) SetRestrictToTagNil() {
	o.RestrictToTag.Set(nil)
}

// UnsetRestrictToTag ensures that no value is present for RestrictToTag, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetRestrictToTag() {
	o.RestrictToTag.Unset()
}

// GetWarningTitle returns the WarningTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetWarningTitle() string {
	if o == nil || IsNil(o.WarningTitle.Get()) {
		var ret string
		return ret
	}
	return *o.WarningTitle.Get()
}

// GetWarningTitleOk returns a tuple with the WarningTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetWarningTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningTitle.Get(), o.WarningTitle.IsSet()
}

// HasWarningTitle returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasWarningTitle() bool {
	if o != nil && o.WarningTitle.IsSet() {
		return true
	}

	return false
}

// SetWarningTitle gets a reference to the given NullableString and assigns it to the WarningTitle field.
func (o *RebootCycleRequestModel) SetWarningTitle(v string) {
	o.WarningTitle.Set(&v)
}
// SetWarningTitleNil sets the value for WarningTitle to be an explicit nil
func (o *RebootCycleRequestModel) SetWarningTitleNil() {
	o.WarningTitle.Set(nil)
}

// UnsetWarningTitle ensures that no value is present for WarningTitle, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetWarningTitle() {
	o.WarningTitle.Unset()
}

// GetWarningMessage returns the WarningMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetWarningMessage() string {
	if o == nil || IsNil(o.WarningMessage.Get()) {
		var ret string
		return ret
	}
	return *o.WarningMessage.Get()
}

// GetWarningMessageOk returns a tuple with the WarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetWarningMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningMessage.Get(), o.WarningMessage.IsSet()
}

// HasWarningMessage returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasWarningMessage() bool {
	if o != nil && o.WarningMessage.IsSet() {
		return true
	}

	return false
}

// SetWarningMessage gets a reference to the given NullableString and assigns it to the WarningMessage field.
func (o *RebootCycleRequestModel) SetWarningMessage(v string) {
	o.WarningMessage.Set(&v)
}
// SetWarningMessageNil sets the value for WarningMessage to be an explicit nil
func (o *RebootCycleRequestModel) SetWarningMessageNil() {
	o.WarningMessage.Set(nil)
}

// UnsetWarningMessage ensures that no value is present for WarningMessage, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetWarningMessage() {
	o.WarningMessage.Unset()
}

// GetWarningDurationMinutes returns the WarningDurationMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetWarningDurationMinutes() int32 {
	if o == nil || IsNil(o.WarningDurationMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.WarningDurationMinutes.Get()
}

// GetWarningDurationMinutesOk returns a tuple with the WarningDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetWarningDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningDurationMinutes.Get(), o.WarningDurationMinutes.IsSet()
}

// HasWarningDurationMinutes returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasWarningDurationMinutes() bool {
	if o != nil && o.WarningDurationMinutes.IsSet() {
		return true
	}

	return false
}

// SetWarningDurationMinutes gets a reference to the given NullableInt32 and assigns it to the WarningDurationMinutes field.
func (o *RebootCycleRequestModel) SetWarningDurationMinutes(v int32) {
	o.WarningDurationMinutes.Set(&v)
}
// SetWarningDurationMinutesNil sets the value for WarningDurationMinutes to be an explicit nil
func (o *RebootCycleRequestModel) SetWarningDurationMinutesNil() {
	o.WarningDurationMinutes.Set(nil)
}

// UnsetWarningDurationMinutes ensures that no value is present for WarningDurationMinutes, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetWarningDurationMinutes() {
	o.WarningDurationMinutes.Unset()
}

// GetWarningRepeatIntervalMinutes returns the WarningRepeatIntervalMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootCycleRequestModel) GetWarningRepeatIntervalMinutes() int32 {
	if o == nil || IsNil(o.WarningRepeatIntervalMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.WarningRepeatIntervalMinutes.Get()
}

// GetWarningRepeatIntervalMinutesOk returns a tuple with the WarningRepeatIntervalMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootCycleRequestModel) GetWarningRepeatIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningRepeatIntervalMinutes.Get(), o.WarningRepeatIntervalMinutes.IsSet()
}

// HasWarningRepeatIntervalMinutes returns a boolean if a field has been set.
func (o *RebootCycleRequestModel) HasWarningRepeatIntervalMinutes() bool {
	if o != nil && o.WarningRepeatIntervalMinutes.IsSet() {
		return true
	}

	return false
}

// SetWarningRepeatIntervalMinutes gets a reference to the given NullableInt32 and assigns it to the WarningRepeatIntervalMinutes field.
func (o *RebootCycleRequestModel) SetWarningRepeatIntervalMinutes(v int32) {
	o.WarningRepeatIntervalMinutes.Set(&v)
}
// SetWarningRepeatIntervalMinutesNil sets the value for WarningRepeatIntervalMinutes to be an explicit nil
func (o *RebootCycleRequestModel) SetWarningRepeatIntervalMinutesNil() {
	o.WarningRepeatIntervalMinutes.Set(nil)
}

// UnsetWarningRepeatIntervalMinutes ensures that no value is present for WarningRepeatIntervalMinutes, not even an explicit nil
func (o *RebootCycleRequestModel) UnsetWarningRepeatIntervalMinutes() {
	o.WarningRepeatIntervalMinutes.Unset()
}

func (o RebootCycleRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RebootCycleRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RebootDurationMinutes.IsSet() {
		toSerialize["RebootDurationMinutes"] = o.RebootDurationMinutes.Get()
	}
	if o.IgnoreMaintenanceMode.IsSet() {
		toSerialize["IgnoreMaintenanceMode"] = o.IgnoreMaintenanceMode.Get()
	}
	if o.RestrictToTag.IsSet() {
		toSerialize["RestrictToTag"] = o.RestrictToTag.Get()
	}
	if o.WarningTitle.IsSet() {
		toSerialize["WarningTitle"] = o.WarningTitle.Get()
	}
	if o.WarningMessage.IsSet() {
		toSerialize["WarningMessage"] = o.WarningMessage.Get()
	}
	if o.WarningDurationMinutes.IsSet() {
		toSerialize["WarningDurationMinutes"] = o.WarningDurationMinutes.Get()
	}
	if o.WarningRepeatIntervalMinutes.IsSet() {
		toSerialize["WarningRepeatIntervalMinutes"] = o.WarningRepeatIntervalMinutes.Get()
	}
	return toSerialize, nil
}

type NullableRebootCycleRequestModel struct {
	value *RebootCycleRequestModel
	isSet bool
}

func (v NullableRebootCycleRequestModel) Get() *RebootCycleRequestModel {
	return v.value
}

func (v *NullableRebootCycleRequestModel) Set(val *RebootCycleRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootCycleRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootCycleRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootCycleRequestModel(val *RebootCycleRequestModel) *NullableRebootCycleRequestModel {
	return &NullableRebootCycleRequestModel{value: val, isSet: true}
}

func (v NullableRebootCycleRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootCycleRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


