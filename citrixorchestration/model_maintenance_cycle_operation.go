/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MaintenanceCycleOperation Represents the various types of maintenance operations that can be performed.
type MaintenanceCycleOperation string

// List of MaintenanceCycleOperation
const (
	MAINTENANCECYCLEOPERATION_UNKNOWN MaintenanceCycleOperation = "Unknown"
	MAINTENANCECYCLEOPERATION_IMAGE_UPDATE MaintenanceCycleOperation = "ImageUpdate"
	MAINTENANCECYCLEOPERATION_HARDWARE_UPDATE MaintenanceCycleOperation = "HardwareUpdate"
	MAINTENANCECYCLEOPERATION_RESET_OS_DISK MaintenanceCycleOperation = "ResetOSDisk"
	MAINTENANCECYCLEOPERATION_RESET_ID_DISK MaintenanceCycleOperation = "ResetIDDisk"
)

// All allowed values of MaintenanceCycleOperation enum
var AllowedMaintenanceCycleOperationEnumValues = []MaintenanceCycleOperation{
	"Unknown",
	"ImageUpdate",
	"HardwareUpdate",
	"ResetOSDisk",
	"ResetIDDisk",
}

func (v *MaintenanceCycleOperation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MaintenanceCycleOperation(value)
	for _, existing := range AllowedMaintenanceCycleOperationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MaintenanceCycleOperation", value)
}

// NewMaintenanceCycleOperationFromValue returns a pointer to a valid MaintenanceCycleOperation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMaintenanceCycleOperationFromValue(v string) (*MaintenanceCycleOperation, error) {
	ev := MaintenanceCycleOperation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MaintenanceCycleOperation: valid values are %v", v, AllowedMaintenanceCycleOperationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MaintenanceCycleOperation) IsValid() bool {
	for _, existing := range AllowedMaintenanceCycleOperationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MaintenanceCycleOperation value
func (v MaintenanceCycleOperation) Ptr() *MaintenanceCycleOperation {
	return &v
}

type NullableMaintenanceCycleOperation struct {
	value *MaintenanceCycleOperation
	isSet bool
}

func (v NullableMaintenanceCycleOperation) Get() *MaintenanceCycleOperation {
	return v.value
}

func (v *NullableMaintenanceCycleOperation) Set(val *MaintenanceCycleOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceCycleOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceCycleOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceCycleOperation(val *MaintenanceCycleOperation) *NullableMaintenanceCycleOperation {
	return &NullableMaintenanceCycleOperation{value: val, isSet: true}
}

func (v NullableMaintenanceCycleOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceCycleOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

