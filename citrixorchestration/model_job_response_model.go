/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the JobResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobResponseModel{}

// JobResponseModel Response object indicating status of an asynchronous job.
type JobResponseModel struct {
	// Id of the job in progress.
	Id string `json:"Id"`
	Type JobType `json:"Type"`
	// Overall progress percent; 0..100. May be null if the job does not support progress reporting.
	OverallProgressPercent NullableInt32 `json:"OverallProgressPercent,omitempty"`
	// Indicates whether the job may be cancelled. DeleteJob
	IsCancellable NullableBool `json:"IsCancellable,omitempty"`
	// Indicators to the caller about what object(s) the job is affecting.  Consult the documentation for APIs that initiate jobs to see the properties expected to be present.
	Parameters []NameValueStringPairModel `json:"Parameters"`
	// List of sub-jobs contained within the job.
	SubJobs []JobResponseModel `json:"SubJobs,omitempty"`
	Status JobStatus `json:"Status"`
	// URL where the job results can be obtained.
	ResultLocation NullableString `json:"ResultLocation,omitempty"`
	// If a job or subjob failed, this will be the reason why the failure occurred, presented in a human-readable format.
	ErrorString NullableString `json:"ErrorString,omitempty"`
	ErrorCode *JobErrorCode `json:"ErrorCode,omitempty"`
	// If a job or subjob failed, this will be information about related objects that were involved in the failure.
	ErrorParameters []NameValueStringPairModel `json:"ErrorParameters,omitempty"`
	// Time when the job was created.
	CreationTime string `json:"CreationTime"`
	// Formatted time when the job was created. RFC 3339 compatible format.
	FormattedCreationTime string `json:"FormattedCreationTime"`
	// Time when the job was started. Will be null if the job has not yet started.
	StartTime NullableString `json:"StartTime,omitempty"`
	// Formatted time when the job was started. Will be null if the job has not yet started. RFC 3339 compatible format.
	FormattedStartTime NullableString `json:"FormattedStartTime,omitempty"`
	// Time when the job was completed. Will be null if the job has not yet completed.
	EndTime NullableString `json:"EndTime,omitempty"`
	// Formatted time when the job was completed. Will be null if the job has not yet completed. RFC 3339 compatible format.
	FormattedEndTime NullableString `json:"FormattedEndTime,omitempty"`
}

// NewJobResponseModel instantiates a new JobResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobResponseModel(id string, type_ JobType, parameters []NameValueStringPairModel, status JobStatus, creationTime string, formattedCreationTime string) *JobResponseModel {
	this := JobResponseModel{}
	this.Id = id
	this.Type = type_
	this.Parameters = parameters
	this.Status = status
	this.CreationTime = creationTime
	this.FormattedCreationTime = formattedCreationTime
	return &this
}

// NewJobResponseModelWithDefaults instantiates a new JobResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobResponseModelWithDefaults() *JobResponseModel {
	this := JobResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *JobResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *JobResponseModel) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *JobResponseModel) GetType() JobType {
	if o == nil {
		var ret JobType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetTypeOk() (*JobType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *JobResponseModel) SetType(v JobType) {
	o.Type = v
}

// GetOverallProgressPercent returns the OverallProgressPercent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetOverallProgressPercent() int32 {
	if o == nil || IsNil(o.OverallProgressPercent.Get()) {
		var ret int32
		return ret
	}
	return *o.OverallProgressPercent.Get()
}

// GetOverallProgressPercentOk returns a tuple with the OverallProgressPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetOverallProgressPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.OverallProgressPercent.Get(), o.OverallProgressPercent.IsSet()
}

// HasOverallProgressPercent returns a boolean if a field has been set.
func (o *JobResponseModel) HasOverallProgressPercent() bool {
	if o != nil && o.OverallProgressPercent.IsSet() {
		return true
	}

	return false
}

// SetOverallProgressPercent gets a reference to the given NullableInt32 and assigns it to the OverallProgressPercent field.
func (o *JobResponseModel) SetOverallProgressPercent(v int32) {
	o.OverallProgressPercent.Set(&v)
}
// SetOverallProgressPercentNil sets the value for OverallProgressPercent to be an explicit nil
func (o *JobResponseModel) SetOverallProgressPercentNil() {
	o.OverallProgressPercent.Set(nil)
}

// UnsetOverallProgressPercent ensures that no value is present for OverallProgressPercent, not even an explicit nil
func (o *JobResponseModel) UnsetOverallProgressPercent() {
	o.OverallProgressPercent.Unset()
}

// GetIsCancellable returns the IsCancellable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetIsCancellable() bool {
	if o == nil || IsNil(o.IsCancellable.Get()) {
		var ret bool
		return ret
	}
	return *o.IsCancellable.Get()
}

// GetIsCancellableOk returns a tuple with the IsCancellable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetIsCancellableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCancellable.Get(), o.IsCancellable.IsSet()
}

// HasIsCancellable returns a boolean if a field has been set.
func (o *JobResponseModel) HasIsCancellable() bool {
	if o != nil && o.IsCancellable.IsSet() {
		return true
	}

	return false
}

// SetIsCancellable gets a reference to the given NullableBool and assigns it to the IsCancellable field.
func (o *JobResponseModel) SetIsCancellable(v bool) {
	o.IsCancellable.Set(&v)
}
// SetIsCancellableNil sets the value for IsCancellable to be an explicit nil
func (o *JobResponseModel) SetIsCancellableNil() {
	o.IsCancellable.Set(nil)
}

// UnsetIsCancellable ensures that no value is present for IsCancellable, not even an explicit nil
func (o *JobResponseModel) UnsetIsCancellable() {
	o.IsCancellable.Unset()
}

// GetParameters returns the Parameters field value
func (o *JobResponseModel) GetParameters() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetParametersOk() ([]NameValueStringPairModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parameters, true
}

// SetParameters sets field value
func (o *JobResponseModel) SetParameters(v []NameValueStringPairModel) {
	o.Parameters = v
}

// GetSubJobs returns the SubJobs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetSubJobs() []JobResponseModel {
	if o == nil {
		var ret []JobResponseModel
		return ret
	}
	return o.SubJobs
}

// GetSubJobsOk returns a tuple with the SubJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetSubJobsOk() ([]JobResponseModel, bool) {
	if o == nil || IsNil(o.SubJobs) {
		return nil, false
	}
	return o.SubJobs, true
}

// HasSubJobs returns a boolean if a field has been set.
func (o *JobResponseModel) HasSubJobs() bool {
	if o != nil && IsNil(o.SubJobs) {
		return true
	}

	return false
}

// SetSubJobs gets a reference to the given []JobResponseModel and assigns it to the SubJobs field.
func (o *JobResponseModel) SetSubJobs(v []JobResponseModel) {
	o.SubJobs = v
}

// GetStatus returns the Status field value
func (o *JobResponseModel) GetStatus() JobStatus {
	if o == nil {
		var ret JobStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetStatusOk() (*JobStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *JobResponseModel) SetStatus(v JobStatus) {
	o.Status = v
}

// GetResultLocation returns the ResultLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetResultLocation() string {
	if o == nil || IsNil(o.ResultLocation.Get()) {
		var ret string
		return ret
	}
	return *o.ResultLocation.Get()
}

// GetResultLocationOk returns a tuple with the ResultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetResultLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResultLocation.Get(), o.ResultLocation.IsSet()
}

// HasResultLocation returns a boolean if a field has been set.
func (o *JobResponseModel) HasResultLocation() bool {
	if o != nil && o.ResultLocation.IsSet() {
		return true
	}

	return false
}

// SetResultLocation gets a reference to the given NullableString and assigns it to the ResultLocation field.
func (o *JobResponseModel) SetResultLocation(v string) {
	o.ResultLocation.Set(&v)
}
// SetResultLocationNil sets the value for ResultLocation to be an explicit nil
func (o *JobResponseModel) SetResultLocationNil() {
	o.ResultLocation.Set(nil)
}

// UnsetResultLocation ensures that no value is present for ResultLocation, not even an explicit nil
func (o *JobResponseModel) UnsetResultLocation() {
	o.ResultLocation.Unset()
}

// GetErrorString returns the ErrorString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetErrorString() string {
	if o == nil || IsNil(o.ErrorString.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorString.Get()
}

// GetErrorStringOk returns a tuple with the ErrorString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetErrorStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorString.Get(), o.ErrorString.IsSet()
}

// HasErrorString returns a boolean if a field has been set.
func (o *JobResponseModel) HasErrorString() bool {
	if o != nil && o.ErrorString.IsSet() {
		return true
	}

	return false
}

// SetErrorString gets a reference to the given NullableString and assigns it to the ErrorString field.
func (o *JobResponseModel) SetErrorString(v string) {
	o.ErrorString.Set(&v)
}
// SetErrorStringNil sets the value for ErrorString to be an explicit nil
func (o *JobResponseModel) SetErrorStringNil() {
	o.ErrorString.Set(nil)
}

// UnsetErrorString ensures that no value is present for ErrorString, not even an explicit nil
func (o *JobResponseModel) UnsetErrorString() {
	o.ErrorString.Unset()
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *JobResponseModel) GetErrorCode() JobErrorCode {
	if o == nil || IsNil(o.ErrorCode) {
		var ret JobErrorCode
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetErrorCodeOk() (*JobErrorCode, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *JobResponseModel) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given JobErrorCode and assigns it to the ErrorCode field.
func (o *JobResponseModel) SetErrorCode(v JobErrorCode) {
	o.ErrorCode = &v
}

// GetErrorParameters returns the ErrorParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetErrorParameters() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.ErrorParameters
}

// GetErrorParametersOk returns a tuple with the ErrorParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetErrorParametersOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.ErrorParameters) {
		return nil, false
	}
	return o.ErrorParameters, true
}

// HasErrorParameters returns a boolean if a field has been set.
func (o *JobResponseModel) HasErrorParameters() bool {
	if o != nil && IsNil(o.ErrorParameters) {
		return true
	}

	return false
}

// SetErrorParameters gets a reference to the given []NameValueStringPairModel and assigns it to the ErrorParameters field.
func (o *JobResponseModel) SetErrorParameters(v []NameValueStringPairModel) {
	o.ErrorParameters = v
}

// GetCreationTime returns the CreationTime field value
func (o *JobResponseModel) GetCreationTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *JobResponseModel) SetCreationTime(v string) {
	o.CreationTime = v
}

// GetFormattedCreationTime returns the FormattedCreationTime field value
func (o *JobResponseModel) GetFormattedCreationTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormattedCreationTime
}

// GetFormattedCreationTimeOk returns a tuple with the FormattedCreationTime field value
// and a boolean to check if the value has been set.
func (o *JobResponseModel) GetFormattedCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormattedCreationTime, true
}

// SetFormattedCreationTime sets field value
func (o *JobResponseModel) SetFormattedCreationTime(v string) {
	o.FormattedCreationTime = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetStartTime() string {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret string
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *JobResponseModel) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableString and assigns it to the StartTime field.
func (o *JobResponseModel) SetStartTime(v string) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *JobResponseModel) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *JobResponseModel) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetFormattedStartTime returns the FormattedStartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetFormattedStartTime() string {
	if o == nil || IsNil(o.FormattedStartTime.Get()) {
		var ret string
		return ret
	}
	return *o.FormattedStartTime.Get()
}

// GetFormattedStartTimeOk returns a tuple with the FormattedStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetFormattedStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedStartTime.Get(), o.FormattedStartTime.IsSet()
}

// HasFormattedStartTime returns a boolean if a field has been set.
func (o *JobResponseModel) HasFormattedStartTime() bool {
	if o != nil && o.FormattedStartTime.IsSet() {
		return true
	}

	return false
}

// SetFormattedStartTime gets a reference to the given NullableString and assigns it to the FormattedStartTime field.
func (o *JobResponseModel) SetFormattedStartTime(v string) {
	o.FormattedStartTime.Set(&v)
}
// SetFormattedStartTimeNil sets the value for FormattedStartTime to be an explicit nil
func (o *JobResponseModel) SetFormattedStartTimeNil() {
	o.FormattedStartTime.Set(nil)
}

// UnsetFormattedStartTime ensures that no value is present for FormattedStartTime, not even an explicit nil
func (o *JobResponseModel) UnsetFormattedStartTime() {
	o.FormattedStartTime.Unset()
}

// GetEndTime returns the EndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetEndTime() string {
	if o == nil || IsNil(o.EndTime.Get()) {
		var ret string
		return ret
	}
	return *o.EndTime.Get()
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndTime.Get(), o.EndTime.IsSet()
}

// HasEndTime returns a boolean if a field has been set.
func (o *JobResponseModel) HasEndTime() bool {
	if o != nil && o.EndTime.IsSet() {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given NullableString and assigns it to the EndTime field.
func (o *JobResponseModel) SetEndTime(v string) {
	o.EndTime.Set(&v)
}
// SetEndTimeNil sets the value for EndTime to be an explicit nil
func (o *JobResponseModel) SetEndTimeNil() {
	o.EndTime.Set(nil)
}

// UnsetEndTime ensures that no value is present for EndTime, not even an explicit nil
func (o *JobResponseModel) UnsetEndTime() {
	o.EndTime.Unset()
}

// GetFormattedEndTime returns the FormattedEndTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobResponseModel) GetFormattedEndTime() string {
	if o == nil || IsNil(o.FormattedEndTime.Get()) {
		var ret string
		return ret
	}
	return *o.FormattedEndTime.Get()
}

// GetFormattedEndTimeOk returns a tuple with the FormattedEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobResponseModel) GetFormattedEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedEndTime.Get(), o.FormattedEndTime.IsSet()
}

// HasFormattedEndTime returns a boolean if a field has been set.
func (o *JobResponseModel) HasFormattedEndTime() bool {
	if o != nil && o.FormattedEndTime.IsSet() {
		return true
	}

	return false
}

// SetFormattedEndTime gets a reference to the given NullableString and assigns it to the FormattedEndTime field.
func (o *JobResponseModel) SetFormattedEndTime(v string) {
	o.FormattedEndTime.Set(&v)
}
// SetFormattedEndTimeNil sets the value for FormattedEndTime to be an explicit nil
func (o *JobResponseModel) SetFormattedEndTimeNil() {
	o.FormattedEndTime.Set(nil)
}

// UnsetFormattedEndTime ensures that no value is present for FormattedEndTime, not even an explicit nil
func (o *JobResponseModel) UnsetFormattedEndTime() {
	o.FormattedEndTime.Unset()
}

func (o JobResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Type"] = o.Type
	if o.OverallProgressPercent.IsSet() {
		toSerialize["OverallProgressPercent"] = o.OverallProgressPercent.Get()
	}
	if o.IsCancellable.IsSet() {
		toSerialize["IsCancellable"] = o.IsCancellable.Get()
	}
	toSerialize["Parameters"] = o.Parameters
	if o.SubJobs != nil {
		toSerialize["SubJobs"] = o.SubJobs
	}
	toSerialize["Status"] = o.Status
	if o.ResultLocation.IsSet() {
		toSerialize["ResultLocation"] = o.ResultLocation.Get()
	}
	if o.ErrorString.IsSet() {
		toSerialize["ErrorString"] = o.ErrorString.Get()
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if o.ErrorParameters != nil {
		toSerialize["ErrorParameters"] = o.ErrorParameters
	}
	toSerialize["CreationTime"] = o.CreationTime
	toSerialize["FormattedCreationTime"] = o.FormattedCreationTime
	if o.StartTime.IsSet() {
		toSerialize["StartTime"] = o.StartTime.Get()
	}
	if o.FormattedStartTime.IsSet() {
		toSerialize["FormattedStartTime"] = o.FormattedStartTime.Get()
	}
	if o.EndTime.IsSet() {
		toSerialize["EndTime"] = o.EndTime.Get()
	}
	if o.FormattedEndTime.IsSet() {
		toSerialize["FormattedEndTime"] = o.FormattedEndTime.Get()
	}
	return toSerialize, nil
}

type NullableJobResponseModel struct {
	value *JobResponseModel
	isSet bool
}

func (v NullableJobResponseModel) Get() *JobResponseModel {
	return v.value
}

func (v *NullableJobResponseModel) Set(val *JobResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableJobResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableJobResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobResponseModel(val *JobResponseModel) *NullableJobResponseModel {
	return &NullableJobResponseModel{value: val, isSet: true}
}

func (v NullableJobResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


