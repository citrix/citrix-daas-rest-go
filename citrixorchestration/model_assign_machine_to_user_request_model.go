/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AssignMachineToUserRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignMachineToUserRequestModel{}

// AssignMachineToUserRequestModel Request object representing the assignment of machines to a delivery group, and/or to users.
type AssignMachineToUserRequestModel struct {
	// The machine to assign. May be an Id or name.
	Machine string `json:"Machine"`
	// The user(s) to whom the machine should be assigned. Caller can specify SamName, UPN, or SID for each user. The system should look up the entity to determine the other AD properties (such as DisplayName and IsGroup properties). Groups should be rejected. If the caller passes an empty list, the machine is de-allocated if it was previously allocated.
	Users []string `json:"Users,omitempty"`
}

// NewAssignMachineToUserRequestModel instantiates a new AssignMachineToUserRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignMachineToUserRequestModel(machine string) *AssignMachineToUserRequestModel {
	this := AssignMachineToUserRequestModel{}
	this.Machine = machine
	return &this
}

// NewAssignMachineToUserRequestModelWithDefaults instantiates a new AssignMachineToUserRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignMachineToUserRequestModelWithDefaults() *AssignMachineToUserRequestModel {
	this := AssignMachineToUserRequestModel{}
	return &this
}

// GetMachine returns the Machine field value
func (o *AssignMachineToUserRequestModel) GetMachine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Machine
}

// GetMachineOk returns a tuple with the Machine field value
// and a boolean to check if the value has been set.
func (o *AssignMachineToUserRequestModel) GetMachineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Machine, true
}

// SetMachine sets field value
func (o *AssignMachineToUserRequestModel) SetMachine(v string) {
	o.Machine = v
}

// GetUsers returns the Users field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssignMachineToUserRequestModel) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssignMachineToUserRequestModel) GetUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *AssignMachineToUserRequestModel) HasUsers() bool {
	if o != nil && IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *AssignMachineToUserRequestModel) SetUsers(v []string) {
	o.Users = v
}

func (o AssignMachineToUserRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignMachineToUserRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Machine"] = o.Machine
	if o.Users != nil {
		toSerialize["Users"] = o.Users
	}
	return toSerialize, nil
}

type NullableAssignMachineToUserRequestModel struct {
	value *AssignMachineToUserRequestModel
	isSet bool
}

func (v NullableAssignMachineToUserRequestModel) Get() *AssignMachineToUserRequestModel {
	return v.value
}

func (v *NullableAssignMachineToUserRequestModel) Set(val *AssignMachineToUserRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignMachineToUserRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignMachineToUserRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignMachineToUserRequestModel(val *AssignMachineToUserRequestModel) *NullableAssignMachineToUserRequestModel {
	return &NullableAssignMachineToUserRequestModel{value: val, isSet: true}
}

func (v NullableAssignMachineToUserRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignMachineToUserRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


