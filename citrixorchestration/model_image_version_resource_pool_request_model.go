/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageVersionResourcePoolRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageVersionResourcePoolRequestModel{}

// ImageVersionResourcePoolRequestModel Image Version resource pool request object.
type ImageVersionResourcePoolRequestModel struct {
	// Hypervisor resource pool Id or name with which image version associates
	ResourcePool NullableString `json:"ResourcePool,omitempty"`
	// The properties of the image that are specific to the target hosting infrastructure.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
}

// NewImageVersionResourcePoolRequestModel instantiates a new ImageVersionResourcePoolRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageVersionResourcePoolRequestModel() *ImageVersionResourcePoolRequestModel {
	this := ImageVersionResourcePoolRequestModel{}
	return &this
}

// NewImageVersionResourcePoolRequestModelWithDefaults instantiates a new ImageVersionResourcePoolRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageVersionResourcePoolRequestModelWithDefaults() *ImageVersionResourcePoolRequestModel {
	this := ImageVersionResourcePoolRequestModel{}
	return &this
}

// GetResourcePool returns the ResourcePool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionResourcePoolRequestModel) GetResourcePool() string {
	if o == nil || IsNil(o.ResourcePool.Get()) {
		var ret string
		return ret
	}
	return *o.ResourcePool.Get()
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionResourcePoolRequestModel) GetResourcePoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourcePool.Get(), o.ResourcePool.IsSet()
}

// HasResourcePool returns a boolean if a field has been set.
func (o *ImageVersionResourcePoolRequestModel) HasResourcePool() bool {
	if o != nil && o.ResourcePool.IsSet() {
		return true
	}

	return false
}

// SetResourcePool gets a reference to the given NullableString and assigns it to the ResourcePool field.
func (o *ImageVersionResourcePoolRequestModel) SetResourcePool(v string) {
	o.ResourcePool.Set(&v)
}

// SetResourcePoolNil sets the value for ResourcePool to be an explicit nil
func (o *ImageVersionResourcePoolRequestModel) SetResourcePoolNil() {
	o.ResourcePool.Set(nil)
}

// UnsetResourcePool ensures that no value is present for ResourcePool, not even an explicit nil
func (o *ImageVersionResourcePoolRequestModel) UnsetResourcePool() {
	o.ResourcePool.Unset()
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionResourcePoolRequestModel) GetCustomProperties() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionResourcePoolRequestModel) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *ImageVersionResourcePoolRequestModel) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *ImageVersionResourcePoolRequestModel) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

func (o ImageVersionResourcePoolRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageVersionResourcePoolRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourcePool.IsSet() {
		toSerialize["ResourcePool"] = o.ResourcePool.Get()
	}
	if o.CustomProperties != nil {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	return toSerialize, nil
}

type NullableImageVersionResourcePoolRequestModel struct {
	value *ImageVersionResourcePoolRequestModel
	isSet bool
}

func (v NullableImageVersionResourcePoolRequestModel) Get() *ImageVersionResourcePoolRequestModel {
	return v.value
}

func (v *NullableImageVersionResourcePoolRequestModel) Set(val *ImageVersionResourcePoolRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageVersionResourcePoolRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageVersionResourcePoolRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageVersionResourcePoolRequestModel(val *ImageVersionResourcePoolRequestModel) *NullableImageVersionResourcePoolRequestModel {
	return &NullableImageVersionResourcePoolRequestModel{value: val, isSet: true}
}

func (v NullableImageVersionResourcePoolRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageVersionResourcePoolRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
