/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// ImportMachineStatus ImportMachineStatus enum.
type ImportMachineStatus string

// List of ImportMachineStatus
const (
	IMPORTMACHINESTATUS_UNKNOWN               ImportMachineStatus = "Unknown"
	IMPORTMACHINESTATUS_IMPORT_FAILED         ImportMachineStatus = "ImportFailed"
	IMPORTMACHINESTATUS_ADD_TO_CATALOG_FAILED ImportMachineStatus = "AddToCatalogFailed"
	IMPORTMACHINESTATUS_SUCCESS               ImportMachineStatus = "Success"
)

// All allowed values of ImportMachineStatus enum
var AllowedImportMachineStatusEnumValues = []ImportMachineStatus{
	"Unknown",
	"ImportFailed",
	"AddToCatalogFailed",
	"Success",
}

func (v *ImportMachineStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = ImportMachineStatus(value)
	return nil
}

// NewImportMachineStatusFromValue returns a pointer to a valid ImportMachineStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewImportMachineStatusFromValue(v string) (*ImportMachineStatus, error) {
	ev := ImportMachineStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ImportMachineStatus: valid values are %v", v, AllowedImportMachineStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ImportMachineStatus) IsValid() bool {
	for _, existing := range AllowedImportMachineStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ImportMachineStatus value
func (v ImportMachineStatus) Ptr() *ImportMachineStatus {
	return &v
}

type NullableImportMachineStatus struct {
	value *ImportMachineStatus
	isSet bool
}

func (v NullableImportMachineStatus) Get() *ImportMachineStatus {
	return v.value
}

func (v *NullableImportMachineStatus) Set(val *ImportMachineStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableImportMachineStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableImportMachineStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportMachineStatus(val *ImportMachineStatus) *NullableImportMachineStatus {
	return &NullableImportMachineStatus{value: val, isSet: true}
}

func (v NullableImportMachineStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportMachineStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
