/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SessionConnectionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SessionConnectionResponseModel{}

// SessionConnectionResponseModel Response model for details about the connection from the client to the session.
type SessionConnectionResponseModel struct {
	// The host name of the incoming connection. This is usually a gateway, router or client.
	ConnectedViaHostName *string `json:"ConnectedViaHostName,omitempty"`
	// The IP address of the incoming connection This is usually a gateway, router or client.
	ConnectedViaIP *string `json:"ConnectedViaIP,omitempty"`
	ConnectionMode *ConnectionMode `json:"ConnectionMode,omitempty"`
	// The host name of the StoreFront server used to launch the session.
	LaunchedViaHostName *string `json:"LaunchedViaHostName,omitempty"`
	// The IP address of the StoreFront server used to launch the session.
	LaunchedViaIP *string `json:"LaunchedViaIP,omitempty"`
	Protocol *ProtocolType `json:"Protocol,omitempty"`
	// Indicates whether SecureICA is active on the session.
	SecureIcaActive *bool `json:"SecureIcaActive,omitempty"`
	// The Smart Access tags for this session.
	SmartAccessTags []SmartAccessTagResponseModel `json:"SmartAccessTags,omitempty"`
}

// NewSessionConnectionResponseModel instantiates a new SessionConnectionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionConnectionResponseModel() *SessionConnectionResponseModel {
	this := SessionConnectionResponseModel{}
	return &this
}

// NewSessionConnectionResponseModelWithDefaults instantiates a new SessionConnectionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionConnectionResponseModelWithDefaults() *SessionConnectionResponseModel {
	this := SessionConnectionResponseModel{}
	return &this
}

// GetConnectedViaHostName returns the ConnectedViaHostName field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetConnectedViaHostName() string {
	if o == nil || IsNil(o.ConnectedViaHostName) {
		var ret string
		return ret
	}
	return *o.ConnectedViaHostName
}

// GetConnectedViaHostNameOk returns a tuple with the ConnectedViaHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetConnectedViaHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedViaHostName) {
		return nil, false
	}
	return o.ConnectedViaHostName, true
}

// HasConnectedViaHostName returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasConnectedViaHostName() bool {
	if o != nil && !IsNil(o.ConnectedViaHostName) {
		return true
	}

	return false
}

// SetConnectedViaHostName gets a reference to the given string and assigns it to the ConnectedViaHostName field.
func (o *SessionConnectionResponseModel) SetConnectedViaHostName(v string) {
	o.ConnectedViaHostName = &v
}

// GetConnectedViaIP returns the ConnectedViaIP field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetConnectedViaIP() string {
	if o == nil || IsNil(o.ConnectedViaIP) {
		var ret string
		return ret
	}
	return *o.ConnectedViaIP
}

// GetConnectedViaIPOk returns a tuple with the ConnectedViaIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetConnectedViaIPOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectedViaIP) {
		return nil, false
	}
	return o.ConnectedViaIP, true
}

// HasConnectedViaIP returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasConnectedViaIP() bool {
	if o != nil && !IsNil(o.ConnectedViaIP) {
		return true
	}

	return false
}

// SetConnectedViaIP gets a reference to the given string and assigns it to the ConnectedViaIP field.
func (o *SessionConnectionResponseModel) SetConnectedViaIP(v string) {
	o.ConnectedViaIP = &v
}

// GetConnectionMode returns the ConnectionMode field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetConnectionMode() ConnectionMode {
	if o == nil || IsNil(o.ConnectionMode) {
		var ret ConnectionMode
		return ret
	}
	return *o.ConnectionMode
}

// GetConnectionModeOk returns a tuple with the ConnectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetConnectionModeOk() (*ConnectionMode, bool) {
	if o == nil || IsNil(o.ConnectionMode) {
		return nil, false
	}
	return o.ConnectionMode, true
}

// HasConnectionMode returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasConnectionMode() bool {
	if o != nil && !IsNil(o.ConnectionMode) {
		return true
	}

	return false
}

// SetConnectionMode gets a reference to the given ConnectionMode and assigns it to the ConnectionMode field.
func (o *SessionConnectionResponseModel) SetConnectionMode(v ConnectionMode) {
	o.ConnectionMode = &v
}

// GetLaunchedViaHostName returns the LaunchedViaHostName field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetLaunchedViaHostName() string {
	if o == nil || IsNil(o.LaunchedViaHostName) {
		var ret string
		return ret
	}
	return *o.LaunchedViaHostName
}

// GetLaunchedViaHostNameOk returns a tuple with the LaunchedViaHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetLaunchedViaHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchedViaHostName) {
		return nil, false
	}
	return o.LaunchedViaHostName, true
}

// HasLaunchedViaHostName returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasLaunchedViaHostName() bool {
	if o != nil && !IsNil(o.LaunchedViaHostName) {
		return true
	}

	return false
}

// SetLaunchedViaHostName gets a reference to the given string and assigns it to the LaunchedViaHostName field.
func (o *SessionConnectionResponseModel) SetLaunchedViaHostName(v string) {
	o.LaunchedViaHostName = &v
}

// GetLaunchedViaIP returns the LaunchedViaIP field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetLaunchedViaIP() string {
	if o == nil || IsNil(o.LaunchedViaIP) {
		var ret string
		return ret
	}
	return *o.LaunchedViaIP
}

// GetLaunchedViaIPOk returns a tuple with the LaunchedViaIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetLaunchedViaIPOk() (*string, bool) {
	if o == nil || IsNil(o.LaunchedViaIP) {
		return nil, false
	}
	return o.LaunchedViaIP, true
}

// HasLaunchedViaIP returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasLaunchedViaIP() bool {
	if o != nil && !IsNil(o.LaunchedViaIP) {
		return true
	}

	return false
}

// SetLaunchedViaIP gets a reference to the given string and assigns it to the LaunchedViaIP field.
func (o *SessionConnectionResponseModel) SetLaunchedViaIP(v string) {
	o.LaunchedViaIP = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetProtocol() ProtocolType {
	if o == nil || IsNil(o.Protocol) {
		var ret ProtocolType
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetProtocolOk() (*ProtocolType, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given ProtocolType and assigns it to the Protocol field.
func (o *SessionConnectionResponseModel) SetProtocol(v ProtocolType) {
	o.Protocol = &v
}

// GetSecureIcaActive returns the SecureIcaActive field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetSecureIcaActive() bool {
	if o == nil || IsNil(o.SecureIcaActive) {
		var ret bool
		return ret
	}
	return *o.SecureIcaActive
}

// GetSecureIcaActiveOk returns a tuple with the SecureIcaActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetSecureIcaActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureIcaActive) {
		return nil, false
	}
	return o.SecureIcaActive, true
}

// HasSecureIcaActive returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasSecureIcaActive() bool {
	if o != nil && !IsNil(o.SecureIcaActive) {
		return true
	}

	return false
}

// SetSecureIcaActive gets a reference to the given bool and assigns it to the SecureIcaActive field.
func (o *SessionConnectionResponseModel) SetSecureIcaActive(v bool) {
	o.SecureIcaActive = &v
}

// GetSmartAccessTags returns the SmartAccessTags field value if set, zero value otherwise.
func (o *SessionConnectionResponseModel) GetSmartAccessTags() []SmartAccessTagResponseModel {
	if o == nil || IsNil(o.SmartAccessTags) {
		var ret []SmartAccessTagResponseModel
		return ret
	}
	return o.SmartAccessTags
}

// GetSmartAccessTagsOk returns a tuple with the SmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionConnectionResponseModel) GetSmartAccessTagsOk() ([]SmartAccessTagResponseModel, bool) {
	if o == nil || IsNil(o.SmartAccessTags) {
		return nil, false
	}
	return o.SmartAccessTags, true
}

// HasSmartAccessTags returns a boolean if a field has been set.
func (o *SessionConnectionResponseModel) HasSmartAccessTags() bool {
	if o != nil && !IsNil(o.SmartAccessTags) {
		return true
	}

	return false
}

// SetSmartAccessTags gets a reference to the given []SmartAccessTagResponseModel and assigns it to the SmartAccessTags field.
func (o *SessionConnectionResponseModel) SetSmartAccessTags(v []SmartAccessTagResponseModel) {
	o.SmartAccessTags = v
}

func (o SessionConnectionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SessionConnectionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectedViaHostName) {
		toSerialize["ConnectedViaHostName"] = o.ConnectedViaHostName
	}
	if !IsNil(o.ConnectedViaIP) {
		toSerialize["ConnectedViaIP"] = o.ConnectedViaIP
	}
	if !IsNil(o.ConnectionMode) {
		toSerialize["ConnectionMode"] = o.ConnectionMode
	}
	if !IsNil(o.LaunchedViaHostName) {
		toSerialize["LaunchedViaHostName"] = o.LaunchedViaHostName
	}
	if !IsNil(o.LaunchedViaIP) {
		toSerialize["LaunchedViaIP"] = o.LaunchedViaIP
	}
	if !IsNil(o.Protocol) {
		toSerialize["Protocol"] = o.Protocol
	}
	if !IsNil(o.SecureIcaActive) {
		toSerialize["SecureIcaActive"] = o.SecureIcaActive
	}
	if !IsNil(o.SmartAccessTags) {
		toSerialize["SmartAccessTags"] = o.SmartAccessTags
	}
	return toSerialize, nil
}

type NullableSessionConnectionResponseModel struct {
	value *SessionConnectionResponseModel
	isSet bool
}

func (v NullableSessionConnectionResponseModel) Get() *SessionConnectionResponseModel {
	return v.value
}

func (v *NullableSessionConnectionResponseModel) Set(val *SessionConnectionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionConnectionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionConnectionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionConnectionResponseModel(val *SessionConnectionResponseModel) *NullableSessionConnectionResponseModel {
	return &NullableSessionConnectionResponseModel{value: val, isSet: true}
}

func (v NullableSessionConnectionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionConnectionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


