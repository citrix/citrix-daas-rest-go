/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PolicySetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicySetRequest{}

// PolicySetRequest Policy set request.
type PolicySetRequest struct {
	// The policy set type.
	PolicySetType *string `json:"policySetType,omitempty"`
	// Name of the policy set.
	Name *string `json:"name,omitempty"`
	// Policy set description.
	Description *string `json:"description,omitempty"`
	// Delegated administration scopes for the policy set.
	Scopes []string `json:"scopes,omitempty"`
}

// NewPolicySetRequest instantiates a new PolicySetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicySetRequest() *PolicySetRequest {
	this := PolicySetRequest{}
	return &this
}

// NewPolicySetRequestWithDefaults instantiates a new PolicySetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicySetRequestWithDefaults() *PolicySetRequest {
	this := PolicySetRequest{}
	return &this
}

// GetPolicySetType returns the PolicySetType field value if set, zero value otherwise.
func (o *PolicySetRequest) GetPolicySetType() string {
	if o == nil || IsNil(o.PolicySetType) {
		var ret string
		return ret
	}
	return *o.PolicySetType
}

// GetPolicySetTypeOk returns a tuple with the PolicySetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySetRequest) GetPolicySetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicySetType) {
		return nil, false
	}
	return o.PolicySetType, true
}

// HasPolicySetType returns a boolean if a field has been set.
func (o *PolicySetRequest) HasPolicySetType() bool {
	if o != nil && !IsNil(o.PolicySetType) {
		return true
	}

	return false
}

// SetPolicySetType gets a reference to the given string and assigns it to the PolicySetType field.
func (o *PolicySetRequest) SetPolicySetType(v string) {
	o.PolicySetType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicySetRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySetRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicySetRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicySetRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicySetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicySetRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicySetRequest) SetDescription(v string) {
	o.Description = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *PolicySetRequest) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySetRequest) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *PolicySetRequest) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *PolicySetRequest) SetScopes(v []string) {
	o.Scopes = v
}

func (o PolicySetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicySetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicySetType) {
		toSerialize["policySetType"] = o.PolicySetType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

type NullablePolicySetRequest struct {
	value *PolicySetRequest
	isSet bool
}

func (v NullablePolicySetRequest) Get() *PolicySetRequest {
	return v.value
}

func (v *NullablePolicySetRequest) Set(val *PolicySetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicySetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicySetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicySetRequest(val *PolicySetRequest) *NullablePolicySetRequest {
	return &NullablePolicySetRequest{value: val, isSet: true}
}

func (v NullablePolicySetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicySetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


