/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the RebootScheduleRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RebootScheduleRequestModel{}

// RebootScheduleRequestModel Request object for specifying reboot schedule properties.
type RebootScheduleRequestModel struct {
	// Id of the reboot schedule. needs to be globally unique
	Id NullableString `json:"Id,omitempty"`
	// A friendly name for the reboot schedule.
	Name NullableString `json:"Name,omitempty"`
	// Approximate maximum number of minutes over which the scheduled reboot cycle runs.
	RebootDurationMinutes NullableInt32       `json:"RebootDurationMinutes,omitempty"`
	Day                   *RebootScheduleDays `json:"Day,omitempty"`
	// For weekly cycles, days of the week on which the scheduled reboot cycle starts.
	DaysInWeek  []RebootScheduleDays `json:"DaysInWeek,omitempty"`
	WeekInMonth *RebootScheduleWeeks `json:"WeekInMonth,omitempty"`
	DayInMonth  *RebootScheduleDays  `json:"DayInMonth,omitempty"`
	// An optional description for the reboot schedule.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether the reboot schedule is enabled.
	Enabled NullableBool `json:"Enabled,omitempty"`
	// Indicates whether the reboot schedule is active for maintained machines.
	IgnoreMaintenanceMode NullableBool `json:"IgnoreMaintenanceMode,omitempty"`
	// Indicates whether the reboot will be a natural reboot, where the machines will be rebooted when they have no sessions. Once UseNaturalReboot is set to true, RebootDurationMinutes won't have any effect.
	UseNaturalReboot NullableBool             `json:"UseNaturalReboot,omitempty"`
	Frequency        *RebootScheduleFrequency `json:"Frequency,omitempty"`
	// The frequency factor for the schedule.
	FrequencyFactor NullableInt32 `json:"FrequencyFactor,omitempty"`
	// If set, the reboot schedule only applies to machines in the delivery group with the specified tag.
	RestrictToTag NullableString `json:"RestrictToTag,omitempty"`
	// The date on which the schedule is expected to firstly run. RFC 3339 compatible format.
	StartDate NullableString `json:"StartDate,omitempty"`
	// Time of day at which the scheduled reboot cycle starts. RFC 3339 compatible format.
	StartTime NullableString `json:"StartTime,omitempty"`
	// Time prior to the start of a machine reboot at which a warning message is displayed to all the users on the machine.
	WarningDurationMinutes NullableInt32 `json:"WarningDurationMinutes,omitempty"`
	// Warning message displayed in user sessions on a machine scheduled for reboot.
	WarningMessage NullableString `json:"WarningMessage,omitempty"`
	// Time to wait after the previous reboot warning before displaying the warning message in all user sessions on that machine again.
	WarningRepeatIntervalMinutes NullableInt32 `json:"WarningRepeatIntervalMinutes,omitempty"`
	// The window title used when showing the warning message in user sessions on a machine scheduled for reboot.
	WarningTitle NullableString `json:"WarningTitle,omitempty"`
}

// NewRebootScheduleRequestModel instantiates a new RebootScheduleRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootScheduleRequestModel() *RebootScheduleRequestModel {
	this := RebootScheduleRequestModel{}
	return &this
}

// NewRebootScheduleRequestModelWithDefaults instantiates a new RebootScheduleRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootScheduleRequestModelWithDefaults() *RebootScheduleRequestModel {
	this := RebootScheduleRequestModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *RebootScheduleRequestModel) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *RebootScheduleRequestModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RebootScheduleRequestModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *RebootScheduleRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetRebootDurationMinutes returns the RebootDurationMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetRebootDurationMinutes() int32 {
	if o == nil || IsNil(o.RebootDurationMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.RebootDurationMinutes.Get()
}

// GetRebootDurationMinutesOk returns a tuple with the RebootDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetRebootDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RebootDurationMinutes.Get(), o.RebootDurationMinutes.IsSet()
}

// HasRebootDurationMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasRebootDurationMinutes() bool {
	if o != nil && o.RebootDurationMinutes.IsSet() {
		return true
	}

	return false
}

// SetRebootDurationMinutes gets a reference to the given NullableInt32 and assigns it to the RebootDurationMinutes field.
func (o *RebootScheduleRequestModel) SetRebootDurationMinutes(v int32) {
	o.RebootDurationMinutes.Set(&v)
}

// SetRebootDurationMinutesNil sets the value for RebootDurationMinutes to be an explicit nil
func (o *RebootScheduleRequestModel) SetRebootDurationMinutesNil() {
	o.RebootDurationMinutes.Set(nil)
}

// UnsetRebootDurationMinutes ensures that no value is present for RebootDurationMinutes, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetRebootDurationMinutes() {
	o.RebootDurationMinutes.Unset()
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDay() RebootScheduleDays {
	if o == nil || IsNil(o.Day) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDayOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given RebootScheduleDays and assigns it to the Day field.
func (o *RebootScheduleRequestModel) SetDay(v RebootScheduleDays) {
	o.Day = &v
}

// GetDaysInWeek returns the DaysInWeek field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetDaysInWeek() []RebootScheduleDays {
	if o == nil {
		var ret []RebootScheduleDays
		return ret
	}
	return o.DaysInWeek
}

// GetDaysInWeekOk returns a tuple with the DaysInWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetDaysInWeekOk() ([]RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DaysInWeek) {
		return nil, false
	}
	return o.DaysInWeek, true
}

// HasDaysInWeek returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDaysInWeek() bool {
	if o != nil && IsNil(o.DaysInWeek) {
		return true
	}

	return false
}

// SetDaysInWeek gets a reference to the given []RebootScheduleDays and assigns it to the DaysInWeek field.
func (o *RebootScheduleRequestModel) SetDaysInWeek(v []RebootScheduleDays) {
	o.DaysInWeek = v
}

// GetWeekInMonth returns the WeekInMonth field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWeekInMonth() RebootScheduleWeeks {
	if o == nil || IsNil(o.WeekInMonth) {
		var ret RebootScheduleWeeks
		return ret
	}
	return *o.WeekInMonth
}

// GetWeekInMonthOk returns a tuple with the WeekInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWeekInMonthOk() (*RebootScheduleWeeks, bool) {
	if o == nil || IsNil(o.WeekInMonth) {
		return nil, false
	}
	return o.WeekInMonth, true
}

// HasWeekInMonth returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWeekInMonth() bool {
	if o != nil && !IsNil(o.WeekInMonth) {
		return true
	}

	return false
}

// SetWeekInMonth gets a reference to the given RebootScheduleWeeks and assigns it to the WeekInMonth field.
func (o *RebootScheduleRequestModel) SetWeekInMonth(v RebootScheduleWeeks) {
	o.WeekInMonth = &v
}

// GetDayInMonth returns the DayInMonth field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDayInMonth() RebootScheduleDays {
	if o == nil || IsNil(o.DayInMonth) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.DayInMonth
}

// GetDayInMonthOk returns a tuple with the DayInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDayInMonthOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DayInMonth) {
		return nil, false
	}
	return o.DayInMonth, true
}

// HasDayInMonth returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDayInMonth() bool {
	if o != nil && !IsNil(o.DayInMonth) {
		return true
	}

	return false
}

// SetDayInMonth gets a reference to the given RebootScheduleDays and assigns it to the DayInMonth field.
func (o *RebootScheduleRequestModel) SetDayInMonth(v RebootScheduleDays) {
	o.DayInMonth = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *RebootScheduleRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *RebootScheduleRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *RebootScheduleRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *RebootScheduleRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetIgnoreMaintenanceMode returns the IgnoreMaintenanceMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetIgnoreMaintenanceMode() bool {
	if o == nil || IsNil(o.IgnoreMaintenanceMode.Get()) {
		var ret bool
		return ret
	}
	return *o.IgnoreMaintenanceMode.Get()
}

// GetIgnoreMaintenanceModeOk returns a tuple with the IgnoreMaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetIgnoreMaintenanceModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IgnoreMaintenanceMode.Get(), o.IgnoreMaintenanceMode.IsSet()
}

// HasIgnoreMaintenanceMode returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasIgnoreMaintenanceMode() bool {
	if o != nil && o.IgnoreMaintenanceMode.IsSet() {
		return true
	}

	return false
}

// SetIgnoreMaintenanceMode gets a reference to the given NullableBool and assigns it to the IgnoreMaintenanceMode field.
func (o *RebootScheduleRequestModel) SetIgnoreMaintenanceMode(v bool) {
	o.IgnoreMaintenanceMode.Set(&v)
}

// SetIgnoreMaintenanceModeNil sets the value for IgnoreMaintenanceMode to be an explicit nil
func (o *RebootScheduleRequestModel) SetIgnoreMaintenanceModeNil() {
	o.IgnoreMaintenanceMode.Set(nil)
}

// UnsetIgnoreMaintenanceMode ensures that no value is present for IgnoreMaintenanceMode, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetIgnoreMaintenanceMode() {
	o.IgnoreMaintenanceMode.Unset()
}

// GetUseNaturalReboot returns the UseNaturalReboot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetUseNaturalReboot() bool {
	if o == nil || IsNil(o.UseNaturalReboot.Get()) {
		var ret bool
		return ret
	}
	return *o.UseNaturalReboot.Get()
}

// GetUseNaturalRebootOk returns a tuple with the UseNaturalReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetUseNaturalRebootOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseNaturalReboot.Get(), o.UseNaturalReboot.IsSet()
}

// HasUseNaturalReboot returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasUseNaturalReboot() bool {
	if o != nil && o.UseNaturalReboot.IsSet() {
		return true
	}

	return false
}

// SetUseNaturalReboot gets a reference to the given NullableBool and assigns it to the UseNaturalReboot field.
func (o *RebootScheduleRequestModel) SetUseNaturalReboot(v bool) {
	o.UseNaturalReboot.Set(&v)
}

// SetUseNaturalRebootNil sets the value for UseNaturalReboot to be an explicit nil
func (o *RebootScheduleRequestModel) SetUseNaturalRebootNil() {
	o.UseNaturalReboot.Set(nil)
}

// UnsetUseNaturalReboot ensures that no value is present for UseNaturalReboot, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetUseNaturalReboot() {
	o.UseNaturalReboot.Unset()
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetFrequency() RebootScheduleFrequency {
	if o == nil || IsNil(o.Frequency) {
		var ret RebootScheduleFrequency
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetFrequencyOk() (*RebootScheduleFrequency, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given RebootScheduleFrequency and assigns it to the Frequency field.
func (o *RebootScheduleRequestModel) SetFrequency(v RebootScheduleFrequency) {
	o.Frequency = &v
}

// GetFrequencyFactor returns the FrequencyFactor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetFrequencyFactor() int32 {
	if o == nil || IsNil(o.FrequencyFactor.Get()) {
		var ret int32
		return ret
	}
	return *o.FrequencyFactor.Get()
}

// GetFrequencyFactorOk returns a tuple with the FrequencyFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetFrequencyFactorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FrequencyFactor.Get(), o.FrequencyFactor.IsSet()
}

// HasFrequencyFactor returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasFrequencyFactor() bool {
	if o != nil && o.FrequencyFactor.IsSet() {
		return true
	}

	return false
}

// SetFrequencyFactor gets a reference to the given NullableInt32 and assigns it to the FrequencyFactor field.
func (o *RebootScheduleRequestModel) SetFrequencyFactor(v int32) {
	o.FrequencyFactor.Set(&v)
}

// SetFrequencyFactorNil sets the value for FrequencyFactor to be an explicit nil
func (o *RebootScheduleRequestModel) SetFrequencyFactorNil() {
	o.FrequencyFactor.Set(nil)
}

// UnsetFrequencyFactor ensures that no value is present for FrequencyFactor, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetFrequencyFactor() {
	o.FrequencyFactor.Unset()
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag.Get()) {
		var ret string
		return ret
	}
	return *o.RestrictToTag.Get()
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RestrictToTag.Get(), o.RestrictToTag.IsSet()
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasRestrictToTag() bool {
	if o != nil && o.RestrictToTag.IsSet() {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given NullableString and assigns it to the RestrictToTag field.
func (o *RebootScheduleRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag.Set(&v)
}

// SetRestrictToTagNil sets the value for RestrictToTag to be an explicit nil
func (o *RebootScheduleRequestModel) SetRestrictToTagNil() {
	o.RestrictToTag.Set(nil)
}

// UnsetRestrictToTag ensures that no value is present for RestrictToTag, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetRestrictToTag() {
	o.RestrictToTag.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetStartDate() string {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *RebootScheduleRequestModel) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *RebootScheduleRequestModel) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetStartTime() string {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret string
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableString and assigns it to the StartTime field.
func (o *RebootScheduleRequestModel) SetStartTime(v string) {
	o.StartTime.Set(&v)
}

// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *RebootScheduleRequestModel) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetWarningDurationMinutes returns the WarningDurationMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetWarningDurationMinutes() int32 {
	if o == nil || IsNil(o.WarningDurationMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.WarningDurationMinutes.Get()
}

// GetWarningDurationMinutesOk returns a tuple with the WarningDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetWarningDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningDurationMinutes.Get(), o.WarningDurationMinutes.IsSet()
}

// HasWarningDurationMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningDurationMinutes() bool {
	if o != nil && o.WarningDurationMinutes.IsSet() {
		return true
	}

	return false
}

// SetWarningDurationMinutes gets a reference to the given NullableInt32 and assigns it to the WarningDurationMinutes field.
func (o *RebootScheduleRequestModel) SetWarningDurationMinutes(v int32) {
	o.WarningDurationMinutes.Set(&v)
}

// SetWarningDurationMinutesNil sets the value for WarningDurationMinutes to be an explicit nil
func (o *RebootScheduleRequestModel) SetWarningDurationMinutesNil() {
	o.WarningDurationMinutes.Set(nil)
}

// UnsetWarningDurationMinutes ensures that no value is present for WarningDurationMinutes, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetWarningDurationMinutes() {
	o.WarningDurationMinutes.Unset()
}

// GetWarningMessage returns the WarningMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetWarningMessage() string {
	if o == nil || IsNil(o.WarningMessage.Get()) {
		var ret string
		return ret
	}
	return *o.WarningMessage.Get()
}

// GetWarningMessageOk returns a tuple with the WarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetWarningMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningMessage.Get(), o.WarningMessage.IsSet()
}

// HasWarningMessage returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningMessage() bool {
	if o != nil && o.WarningMessage.IsSet() {
		return true
	}

	return false
}

// SetWarningMessage gets a reference to the given NullableString and assigns it to the WarningMessage field.
func (o *RebootScheduleRequestModel) SetWarningMessage(v string) {
	o.WarningMessage.Set(&v)
}

// SetWarningMessageNil sets the value for WarningMessage to be an explicit nil
func (o *RebootScheduleRequestModel) SetWarningMessageNil() {
	o.WarningMessage.Set(nil)
}

// UnsetWarningMessage ensures that no value is present for WarningMessage, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetWarningMessage() {
	o.WarningMessage.Unset()
}

// GetWarningRepeatIntervalMinutes returns the WarningRepeatIntervalMinutes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetWarningRepeatIntervalMinutes() int32 {
	if o == nil || IsNil(o.WarningRepeatIntervalMinutes.Get()) {
		var ret int32
		return ret
	}
	return *o.WarningRepeatIntervalMinutes.Get()
}

// GetWarningRepeatIntervalMinutesOk returns a tuple with the WarningRepeatIntervalMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetWarningRepeatIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningRepeatIntervalMinutes.Get(), o.WarningRepeatIntervalMinutes.IsSet()
}

// HasWarningRepeatIntervalMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningRepeatIntervalMinutes() bool {
	if o != nil && o.WarningRepeatIntervalMinutes.IsSet() {
		return true
	}

	return false
}

// SetWarningRepeatIntervalMinutes gets a reference to the given NullableInt32 and assigns it to the WarningRepeatIntervalMinutes field.
func (o *RebootScheduleRequestModel) SetWarningRepeatIntervalMinutes(v int32) {
	o.WarningRepeatIntervalMinutes.Set(&v)
}

// SetWarningRepeatIntervalMinutesNil sets the value for WarningRepeatIntervalMinutes to be an explicit nil
func (o *RebootScheduleRequestModel) SetWarningRepeatIntervalMinutesNil() {
	o.WarningRepeatIntervalMinutes.Set(nil)
}

// UnsetWarningRepeatIntervalMinutes ensures that no value is present for WarningRepeatIntervalMinutes, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetWarningRepeatIntervalMinutes() {
	o.WarningRepeatIntervalMinutes.Unset()
}

// GetWarningTitle returns the WarningTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleRequestModel) GetWarningTitle() string {
	if o == nil || IsNil(o.WarningTitle.Get()) {
		var ret string
		return ret
	}
	return *o.WarningTitle.Get()
}

// GetWarningTitleOk returns a tuple with the WarningTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleRequestModel) GetWarningTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningTitle.Get(), o.WarningTitle.IsSet()
}

// HasWarningTitle returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningTitle() bool {
	if o != nil && o.WarningTitle.IsSet() {
		return true
	}

	return false
}

// SetWarningTitle gets a reference to the given NullableString and assigns it to the WarningTitle field.
func (o *RebootScheduleRequestModel) SetWarningTitle(v string) {
	o.WarningTitle.Set(&v)
}

// SetWarningTitleNil sets the value for WarningTitle to be an explicit nil
func (o *RebootScheduleRequestModel) SetWarningTitleNil() {
	o.WarningTitle.Set(nil)
}

// UnsetWarningTitle ensures that no value is present for WarningTitle, not even an explicit nil
func (o *RebootScheduleRequestModel) UnsetWarningTitle() {
	o.WarningTitle.Unset()
}

func (o RebootScheduleRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RebootScheduleRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.RebootDurationMinutes.IsSet() {
		toSerialize["RebootDurationMinutes"] = o.RebootDurationMinutes.Get()
	}
	if !IsNil(o.Day) {
		toSerialize["Day"] = o.Day
	}
	if o.DaysInWeek != nil {
		toSerialize["DaysInWeek"] = o.DaysInWeek
	}
	if !IsNil(o.WeekInMonth) {
		toSerialize["WeekInMonth"] = o.WeekInMonth
	}
	if !IsNil(o.DayInMonth) {
		toSerialize["DayInMonth"] = o.DayInMonth
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	if o.IgnoreMaintenanceMode.IsSet() {
		toSerialize["IgnoreMaintenanceMode"] = o.IgnoreMaintenanceMode.Get()
	}
	if o.UseNaturalReboot.IsSet() {
		toSerialize["UseNaturalReboot"] = o.UseNaturalReboot.Get()
	}
	if !IsNil(o.Frequency) {
		toSerialize["Frequency"] = o.Frequency
	}
	if o.FrequencyFactor.IsSet() {
		toSerialize["FrequencyFactor"] = o.FrequencyFactor.Get()
	}
	if o.RestrictToTag.IsSet() {
		toSerialize["RestrictToTag"] = o.RestrictToTag.Get()
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	if o.StartTime.IsSet() {
		toSerialize["StartTime"] = o.StartTime.Get()
	}
	if o.WarningDurationMinutes.IsSet() {
		toSerialize["WarningDurationMinutes"] = o.WarningDurationMinutes.Get()
	}
	if o.WarningMessage.IsSet() {
		toSerialize["WarningMessage"] = o.WarningMessage.Get()
	}
	if o.WarningRepeatIntervalMinutes.IsSet() {
		toSerialize["WarningRepeatIntervalMinutes"] = o.WarningRepeatIntervalMinutes.Get()
	}
	if o.WarningTitle.IsSet() {
		toSerialize["WarningTitle"] = o.WarningTitle.Get()
	}
	return toSerialize, nil
}

type NullableRebootScheduleRequestModel struct {
	value *RebootScheduleRequestModel
	isSet bool
}

func (v NullableRebootScheduleRequestModel) Get() *RebootScheduleRequestModel {
	return v.value
}

func (v *NullableRebootScheduleRequestModel) Set(val *RebootScheduleRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootScheduleRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootScheduleRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootScheduleRequestModel(val *RebootScheduleRequestModel) *NullableRebootScheduleRequestModel {
	return &NullableRebootScheduleRequestModel{value: val, isSet: true}
}

func (v NullableRebootScheduleRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootScheduleRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
