/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the RebootScheduleRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RebootScheduleRequestModel{}

// RebootScheduleRequestModel Request object for specifying reboot schedule properties.
type RebootScheduleRequestModel struct {
	// Id of the reboot schedule. needs to be globally unique
	Id *string `json:"Id,omitempty"`
	// A friendly name for the reboot schedule.
	Name *string `json:"Name,omitempty"`
	// Approximate maximum number of minutes over which the scheduled reboot cycle runs.
	RebootDurationMinutes *int32 `json:"RebootDurationMinutes,omitempty"`
	Day *RebootScheduleDays `json:"Day,omitempty"`
	// For weekly cycles, days of the week on which the scheduled reboot cycle starts.
	DaysInWeek []RebootScheduleDays `json:"DaysInWeek,omitempty"`
	WeekInMonth *RebootScheduleWeeks `json:"WeekInMonth,omitempty"`
	DayInMonth *RebootScheduleDays `json:"DayInMonth,omitempty"`
	// An optional description for the reboot schedule.
	Description *string `json:"Description,omitempty"`
	// Indicates whether the reboot schedule is enabled.
	Enabled *bool `json:"Enabled,omitempty"`
	// Indicates whether the reboot schedule is active for maintained machines.
	IgnoreMaintenanceMode *bool `json:"IgnoreMaintenanceMode,omitempty"`
	// Indicates whether the reboot will be a natural reboot, where the machines will be rebooted when they have no sessions. Once UseNaturalReboot is set to true, RebootDurationMinutes won't have any effect.
	UseNaturalReboot *bool `json:"UseNaturalReboot,omitempty"`
	Frequency *RebootScheduleFrequency `json:"Frequency,omitempty"`
	// The frequency factor for the schedule.
	FrequencyFactor *int32 `json:"FrequencyFactor,omitempty"`
	// If set, the reboot schedule only applies to machines in the delivery group with the specified tag.
	RestrictToTag *string `json:"RestrictToTag,omitempty"`
	// The date on which the schedule is expected to firstly run. RFC 3339 compatible format.
	StartDate *string `json:"StartDate,omitempty"`
	// Time of day at which the scheduled reboot cycle starts. RFC 3339 compatible format.
	StartTime *string `json:"StartTime,omitempty"`
	// Time prior to the start of a machine reboot at which a warning message is displayed to all the users on the machine.
	WarningDurationMinutes *int32 `json:"WarningDurationMinutes,omitempty"`
	// Warning message displayed in user sessions on a machine scheduled for reboot.
	WarningMessage *string `json:"WarningMessage,omitempty"`
	// Time to wait after the previous reboot warning before displaying the warning message in all user sessions on that machine again.
	WarningRepeatIntervalMinutes *int32 `json:"WarningRepeatIntervalMinutes,omitempty"`
	// The window title used when showing the warning message in user sessions on a machine scheduled for reboot.
	WarningTitle *string `json:"WarningTitle,omitempty"`
}

// NewRebootScheduleRequestModel instantiates a new RebootScheduleRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootScheduleRequestModel() *RebootScheduleRequestModel {
	this := RebootScheduleRequestModel{}
	return &this
}

// NewRebootScheduleRequestModelWithDefaults instantiates a new RebootScheduleRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootScheduleRequestModelWithDefaults() *RebootScheduleRequestModel {
	this := RebootScheduleRequestModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RebootScheduleRequestModel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RebootScheduleRequestModel) SetName(v string) {
	o.Name = &v
}

// GetRebootDurationMinutes returns the RebootDurationMinutes field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetRebootDurationMinutes() int32 {
	if o == nil || IsNil(o.RebootDurationMinutes) {
		var ret int32
		return ret
	}
	return *o.RebootDurationMinutes
}

// GetRebootDurationMinutesOk returns a tuple with the RebootDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetRebootDurationMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.RebootDurationMinutes) {
		return nil, false
	}
	return o.RebootDurationMinutes, true
}

// HasRebootDurationMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasRebootDurationMinutes() bool {
	if o != nil && !IsNil(o.RebootDurationMinutes) {
		return true
	}

	return false
}

// SetRebootDurationMinutes gets a reference to the given int32 and assigns it to the RebootDurationMinutes field.
func (o *RebootScheduleRequestModel) SetRebootDurationMinutes(v int32) {
	o.RebootDurationMinutes = &v
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDay() RebootScheduleDays {
	if o == nil || IsNil(o.Day) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDayOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given RebootScheduleDays and assigns it to the Day field.
func (o *RebootScheduleRequestModel) SetDay(v RebootScheduleDays) {
	o.Day = &v
}

// GetDaysInWeek returns the DaysInWeek field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDaysInWeek() []RebootScheduleDays {
	if o == nil || IsNil(o.DaysInWeek) {
		var ret []RebootScheduleDays
		return ret
	}
	return o.DaysInWeek
}

// GetDaysInWeekOk returns a tuple with the DaysInWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDaysInWeekOk() ([]RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DaysInWeek) {
		return nil, false
	}
	return o.DaysInWeek, true
}

// HasDaysInWeek returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDaysInWeek() bool {
	if o != nil && !IsNil(o.DaysInWeek) {
		return true
	}

	return false
}

// SetDaysInWeek gets a reference to the given []RebootScheduleDays and assigns it to the DaysInWeek field.
func (o *RebootScheduleRequestModel) SetDaysInWeek(v []RebootScheduleDays) {
	o.DaysInWeek = v
}

// GetWeekInMonth returns the WeekInMonth field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWeekInMonth() RebootScheduleWeeks {
	if o == nil || IsNil(o.WeekInMonth) {
		var ret RebootScheduleWeeks
		return ret
	}
	return *o.WeekInMonth
}

// GetWeekInMonthOk returns a tuple with the WeekInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWeekInMonthOk() (*RebootScheduleWeeks, bool) {
	if o == nil || IsNil(o.WeekInMonth) {
		return nil, false
	}
	return o.WeekInMonth, true
}

// HasWeekInMonth returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWeekInMonth() bool {
	if o != nil && !IsNil(o.WeekInMonth) {
		return true
	}

	return false
}

// SetWeekInMonth gets a reference to the given RebootScheduleWeeks and assigns it to the WeekInMonth field.
func (o *RebootScheduleRequestModel) SetWeekInMonth(v RebootScheduleWeeks) {
	o.WeekInMonth = &v
}

// GetDayInMonth returns the DayInMonth field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDayInMonth() RebootScheduleDays {
	if o == nil || IsNil(o.DayInMonth) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.DayInMonth
}

// GetDayInMonthOk returns a tuple with the DayInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDayInMonthOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DayInMonth) {
		return nil, false
	}
	return o.DayInMonth, true
}

// HasDayInMonth returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDayInMonth() bool {
	if o != nil && !IsNil(o.DayInMonth) {
		return true
	}

	return false
}

// SetDayInMonth gets a reference to the given RebootScheduleDays and assigns it to the DayInMonth field.
func (o *RebootScheduleRequestModel) SetDayInMonth(v RebootScheduleDays) {
	o.DayInMonth = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RebootScheduleRequestModel) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RebootScheduleRequestModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIgnoreMaintenanceMode returns the IgnoreMaintenanceMode field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetIgnoreMaintenanceMode() bool {
	if o == nil || IsNil(o.IgnoreMaintenanceMode) {
		var ret bool
		return ret
	}
	return *o.IgnoreMaintenanceMode
}

// GetIgnoreMaintenanceModeOk returns a tuple with the IgnoreMaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetIgnoreMaintenanceModeOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreMaintenanceMode) {
		return nil, false
	}
	return o.IgnoreMaintenanceMode, true
}

// HasIgnoreMaintenanceMode returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasIgnoreMaintenanceMode() bool {
	if o != nil && !IsNil(o.IgnoreMaintenanceMode) {
		return true
	}

	return false
}

// SetIgnoreMaintenanceMode gets a reference to the given bool and assigns it to the IgnoreMaintenanceMode field.
func (o *RebootScheduleRequestModel) SetIgnoreMaintenanceMode(v bool) {
	o.IgnoreMaintenanceMode = &v
}

// GetUseNaturalReboot returns the UseNaturalReboot field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetUseNaturalReboot() bool {
	if o == nil || IsNil(o.UseNaturalReboot) {
		var ret bool
		return ret
	}
	return *o.UseNaturalReboot
}

// GetUseNaturalRebootOk returns a tuple with the UseNaturalReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetUseNaturalRebootOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNaturalReboot) {
		return nil, false
	}
	return o.UseNaturalReboot, true
}

// HasUseNaturalReboot returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasUseNaturalReboot() bool {
	if o != nil && !IsNil(o.UseNaturalReboot) {
		return true
	}

	return false
}

// SetUseNaturalReboot gets a reference to the given bool and assigns it to the UseNaturalReboot field.
func (o *RebootScheduleRequestModel) SetUseNaturalReboot(v bool) {
	o.UseNaturalReboot = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetFrequency() RebootScheduleFrequency {
	if o == nil || IsNil(o.Frequency) {
		var ret RebootScheduleFrequency
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetFrequencyOk() (*RebootScheduleFrequency, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given RebootScheduleFrequency and assigns it to the Frequency field.
func (o *RebootScheduleRequestModel) SetFrequency(v RebootScheduleFrequency) {
	o.Frequency = &v
}

// GetFrequencyFactor returns the FrequencyFactor field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetFrequencyFactor() int32 {
	if o == nil || IsNil(o.FrequencyFactor) {
		var ret int32
		return ret
	}
	return *o.FrequencyFactor
}

// GetFrequencyFactorOk returns a tuple with the FrequencyFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetFrequencyFactorOk() (*int32, bool) {
	if o == nil || IsNil(o.FrequencyFactor) {
		return nil, false
	}
	return o.FrequencyFactor, true
}

// HasFrequencyFactor returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasFrequencyFactor() bool {
	if o != nil && !IsNil(o.FrequencyFactor) {
		return true
	}

	return false
}

// SetFrequencyFactor gets a reference to the given int32 and assigns it to the FrequencyFactor field.
func (o *RebootScheduleRequestModel) SetFrequencyFactor(v int32) {
	o.FrequencyFactor = &v
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag) {
		var ret string
		return ret
	}
	return *o.RestrictToTag
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictToTag) {
		return nil, false
	}
	return o.RestrictToTag, true
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasRestrictToTag() bool {
	if o != nil && !IsNil(o.RestrictToTag) {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given string and assigns it to the RestrictToTag field.
func (o *RebootScheduleRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *RebootScheduleRequestModel) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *RebootScheduleRequestModel) SetStartTime(v string) {
	o.StartTime = &v
}

// GetWarningDurationMinutes returns the WarningDurationMinutes field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWarningDurationMinutes() int32 {
	if o == nil || IsNil(o.WarningDurationMinutes) {
		var ret int32
		return ret
	}
	return *o.WarningDurationMinutes
}

// GetWarningDurationMinutesOk returns a tuple with the WarningDurationMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWarningDurationMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningDurationMinutes) {
		return nil, false
	}
	return o.WarningDurationMinutes, true
}

// HasWarningDurationMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningDurationMinutes() bool {
	if o != nil && !IsNil(o.WarningDurationMinutes) {
		return true
	}

	return false
}

// SetWarningDurationMinutes gets a reference to the given int32 and assigns it to the WarningDurationMinutes field.
func (o *RebootScheduleRequestModel) SetWarningDurationMinutes(v int32) {
	o.WarningDurationMinutes = &v
}

// GetWarningMessage returns the WarningMessage field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWarningMessage() string {
	if o == nil || IsNil(o.WarningMessage) {
		var ret string
		return ret
	}
	return *o.WarningMessage
}

// GetWarningMessageOk returns a tuple with the WarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWarningMessageOk() (*string, bool) {
	if o == nil || IsNil(o.WarningMessage) {
		return nil, false
	}
	return o.WarningMessage, true
}

// HasWarningMessage returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningMessage() bool {
	if o != nil && !IsNil(o.WarningMessage) {
		return true
	}

	return false
}

// SetWarningMessage gets a reference to the given string and assigns it to the WarningMessage field.
func (o *RebootScheduleRequestModel) SetWarningMessage(v string) {
	o.WarningMessage = &v
}

// GetWarningRepeatIntervalMinutes returns the WarningRepeatIntervalMinutes field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWarningRepeatIntervalMinutes() int32 {
	if o == nil || IsNil(o.WarningRepeatIntervalMinutes) {
		var ret int32
		return ret
	}
	return *o.WarningRepeatIntervalMinutes
}

// GetWarningRepeatIntervalMinutesOk returns a tuple with the WarningRepeatIntervalMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWarningRepeatIntervalMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.WarningRepeatIntervalMinutes) {
		return nil, false
	}
	return o.WarningRepeatIntervalMinutes, true
}

// HasWarningRepeatIntervalMinutes returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningRepeatIntervalMinutes() bool {
	if o != nil && !IsNil(o.WarningRepeatIntervalMinutes) {
		return true
	}

	return false
}

// SetWarningRepeatIntervalMinutes gets a reference to the given int32 and assigns it to the WarningRepeatIntervalMinutes field.
func (o *RebootScheduleRequestModel) SetWarningRepeatIntervalMinutes(v int32) {
	o.WarningRepeatIntervalMinutes = &v
}

// GetWarningTitle returns the WarningTitle field value if set, zero value otherwise.
func (o *RebootScheduleRequestModel) GetWarningTitle() string {
	if o == nil || IsNil(o.WarningTitle) {
		var ret string
		return ret
	}
	return *o.WarningTitle
}

// GetWarningTitleOk returns a tuple with the WarningTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleRequestModel) GetWarningTitleOk() (*string, bool) {
	if o == nil || IsNil(o.WarningTitle) {
		return nil, false
	}
	return o.WarningTitle, true
}

// HasWarningTitle returns a boolean if a field has been set.
func (o *RebootScheduleRequestModel) HasWarningTitle() bool {
	if o != nil && !IsNil(o.WarningTitle) {
		return true
	}

	return false
}

// SetWarningTitle gets a reference to the given string and assigns it to the WarningTitle field.
func (o *RebootScheduleRequestModel) SetWarningTitle(v string) {
	o.WarningTitle = &v
}

func (o RebootScheduleRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RebootScheduleRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.RebootDurationMinutes) {
		toSerialize["RebootDurationMinutes"] = o.RebootDurationMinutes
	}
	if !IsNil(o.Day) {
		toSerialize["Day"] = o.Day
	}
	if !IsNil(o.DaysInWeek) {
		toSerialize["DaysInWeek"] = o.DaysInWeek
	}
	if !IsNil(o.WeekInMonth) {
		toSerialize["WeekInMonth"] = o.WeekInMonth
	}
	if !IsNil(o.DayInMonth) {
		toSerialize["DayInMonth"] = o.DayInMonth
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !IsNil(o.IgnoreMaintenanceMode) {
		toSerialize["IgnoreMaintenanceMode"] = o.IgnoreMaintenanceMode
	}
	if !IsNil(o.UseNaturalReboot) {
		toSerialize["UseNaturalReboot"] = o.UseNaturalReboot
	}
	if !IsNil(o.Frequency) {
		toSerialize["Frequency"] = o.Frequency
	}
	if !IsNil(o.FrequencyFactor) {
		toSerialize["FrequencyFactor"] = o.FrequencyFactor
	}
	if !IsNil(o.RestrictToTag) {
		toSerialize["RestrictToTag"] = o.RestrictToTag
	}
	if !IsNil(o.StartDate) {
		toSerialize["StartDate"] = o.StartDate
	}
	if !IsNil(o.StartTime) {
		toSerialize["StartTime"] = o.StartTime
	}
	if !IsNil(o.WarningDurationMinutes) {
		toSerialize["WarningDurationMinutes"] = o.WarningDurationMinutes
	}
	if !IsNil(o.WarningMessage) {
		toSerialize["WarningMessage"] = o.WarningMessage
	}
	if !IsNil(o.WarningRepeatIntervalMinutes) {
		toSerialize["WarningRepeatIntervalMinutes"] = o.WarningRepeatIntervalMinutes
	}
	if !IsNil(o.WarningTitle) {
		toSerialize["WarningTitle"] = o.WarningTitle
	}
	return toSerialize, nil
}

type NullableRebootScheduleRequestModel struct {
	value *RebootScheduleRequestModel
	isSet bool
}

func (v NullableRebootScheduleRequestModel) Get() *RebootScheduleRequestModel {
	return v.value
}

func (v *NullableRebootScheduleRequestModel) Set(val *RebootScheduleRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootScheduleRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootScheduleRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootScheduleRequestModel(val *RebootScheduleRequestModel) *NullableRebootScheduleRequestModel {
	return &NullableRebootScheduleRequestModel{value: val, isSet: true}
}

func (v NullableRebootScheduleRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootScheduleRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


