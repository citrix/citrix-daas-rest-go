/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ModelingRequestContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelingRequestContract{}

// ModelingRequestContract Modeling request model
type ModelingRequestContract struct {
	// The domain controller
	DomainController NullableString `json:"DomainController,omitempty"`
	// The computer
	ComputerIdentity NullableString `json:"ComputerIdentity,omitempty"`
	// The user
	UserIdentity NullableString `json:"UserIdentity,omitempty"`
	// The site name
	SiteName NullableString `json:"SiteName,omitempty"`
	// The selected computer
	Computer NullableString `json:"Computer,omitempty"`
	// Selected computer container
	ComputerContainer NullableString `json:"ComputerContainer,omitempty"`
	// Selected user
	User NullableString `json:"User,omitempty"`
	// SID of the selected user.
	UserSid NullableString `json:"UserSid,omitempty"`
	// User distinguished name.
	DistinguishedName NullableString `json:"DistinguishedName,omitempty"`
	// SIDs of the groups to which the user belongs.
	GroupSids []string `json:"GroupSids,omitempty"`
	// Selected user container
	UserContainer NullableString `json:"UserContainer,omitempty"`
	// Client IP address
	ClientIPAddress NullableString `json:"ClientIPAddress,omitempty"`
	// Client name
	ClientName NullableString `json:"ClientName,omitempty"`
	// Delivery group
	DeliveryGroup NullableString `json:"DeliveryGroup,omitempty"`
	// Delivery group type, values are members of enum DesktopKind.
	DeliveryGroupType NullableString `json:"DeliveryGroupType,omitempty"`
	// Delivery group tags
	DeliveryGroupTags []string `json:"DeliveryGroupTags,omitempty"`
	// Using Access Gateway
	IsUsingAccessGateway *bool `json:"IsUsingAccessGateway,omitempty"`
	// Access Gateway farm
	AccessGatewayFarm NullableString `json:"AccessGatewayFarm,omitempty"`
	// Access Gateway tags
	AccessGatewayTags []string `json:"AccessGatewayTags,omitempty"`
	// Using WanScaler (NetScaler SD-WAN)
	IsUsingWanScaler *bool `json:"IsUsingWanScaler,omitempty"`
}

// NewModelingRequestContract instantiates a new ModelingRequestContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelingRequestContract() *ModelingRequestContract {
	this := ModelingRequestContract{}
	return &this
}

// NewModelingRequestContractWithDefaults instantiates a new ModelingRequestContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelingRequestContractWithDefaults() *ModelingRequestContract {
	this := ModelingRequestContract{}
	return &this
}

// GetDomainController returns the DomainController field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetDomainController() string {
	if o == nil || IsNil(o.DomainController.Get()) {
		var ret string
		return ret
	}
	return *o.DomainController.Get()
}

// GetDomainControllerOk returns a tuple with the DomainController field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetDomainControllerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainController.Get(), o.DomainController.IsSet()
}

// HasDomainController returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasDomainController() bool {
	if o != nil && o.DomainController.IsSet() {
		return true
	}

	return false
}

// SetDomainController gets a reference to the given NullableString and assigns it to the DomainController field.
func (o *ModelingRequestContract) SetDomainController(v string) {
	o.DomainController.Set(&v)
}
// SetDomainControllerNil sets the value for DomainController to be an explicit nil
func (o *ModelingRequestContract) SetDomainControllerNil() {
	o.DomainController.Set(nil)
}

// UnsetDomainController ensures that no value is present for DomainController, not even an explicit nil
func (o *ModelingRequestContract) UnsetDomainController() {
	o.DomainController.Unset()
}

// GetComputerIdentity returns the ComputerIdentity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetComputerIdentity() string {
	if o == nil || IsNil(o.ComputerIdentity.Get()) {
		var ret string
		return ret
	}
	return *o.ComputerIdentity.Get()
}

// GetComputerIdentityOk returns a tuple with the ComputerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetComputerIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputerIdentity.Get(), o.ComputerIdentity.IsSet()
}

// HasComputerIdentity returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasComputerIdentity() bool {
	if o != nil && o.ComputerIdentity.IsSet() {
		return true
	}

	return false
}

// SetComputerIdentity gets a reference to the given NullableString and assigns it to the ComputerIdentity field.
func (o *ModelingRequestContract) SetComputerIdentity(v string) {
	o.ComputerIdentity.Set(&v)
}
// SetComputerIdentityNil sets the value for ComputerIdentity to be an explicit nil
func (o *ModelingRequestContract) SetComputerIdentityNil() {
	o.ComputerIdentity.Set(nil)
}

// UnsetComputerIdentity ensures that no value is present for ComputerIdentity, not even an explicit nil
func (o *ModelingRequestContract) UnsetComputerIdentity() {
	o.ComputerIdentity.Unset()
}

// GetUserIdentity returns the UserIdentity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetUserIdentity() string {
	if o == nil || IsNil(o.UserIdentity.Get()) {
		var ret string
		return ret
	}
	return *o.UserIdentity.Get()
}

// GetUserIdentityOk returns a tuple with the UserIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetUserIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserIdentity.Get(), o.UserIdentity.IsSet()
}

// HasUserIdentity returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasUserIdentity() bool {
	if o != nil && o.UserIdentity.IsSet() {
		return true
	}

	return false
}

// SetUserIdentity gets a reference to the given NullableString and assigns it to the UserIdentity field.
func (o *ModelingRequestContract) SetUserIdentity(v string) {
	o.UserIdentity.Set(&v)
}
// SetUserIdentityNil sets the value for UserIdentity to be an explicit nil
func (o *ModelingRequestContract) SetUserIdentityNil() {
	o.UserIdentity.Set(nil)
}

// UnsetUserIdentity ensures that no value is present for UserIdentity, not even an explicit nil
func (o *ModelingRequestContract) UnsetUserIdentity() {
	o.UserIdentity.Unset()
}

// GetSiteName returns the SiteName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetSiteName() string {
	if o == nil || IsNil(o.SiteName.Get()) {
		var ret string
		return ret
	}
	return *o.SiteName.Get()
}

// GetSiteNameOk returns a tuple with the SiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetSiteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteName.Get(), o.SiteName.IsSet()
}

// HasSiteName returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasSiteName() bool {
	if o != nil && o.SiteName.IsSet() {
		return true
	}

	return false
}

// SetSiteName gets a reference to the given NullableString and assigns it to the SiteName field.
func (o *ModelingRequestContract) SetSiteName(v string) {
	o.SiteName.Set(&v)
}
// SetSiteNameNil sets the value for SiteName to be an explicit nil
func (o *ModelingRequestContract) SetSiteNameNil() {
	o.SiteName.Set(nil)
}

// UnsetSiteName ensures that no value is present for SiteName, not even an explicit nil
func (o *ModelingRequestContract) UnsetSiteName() {
	o.SiteName.Unset()
}

// GetComputer returns the Computer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetComputer() string {
	if o == nil || IsNil(o.Computer.Get()) {
		var ret string
		return ret
	}
	return *o.Computer.Get()
}

// GetComputerOk returns a tuple with the Computer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetComputerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Computer.Get(), o.Computer.IsSet()
}

// HasComputer returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasComputer() bool {
	if o != nil && o.Computer.IsSet() {
		return true
	}

	return false
}

// SetComputer gets a reference to the given NullableString and assigns it to the Computer field.
func (o *ModelingRequestContract) SetComputer(v string) {
	o.Computer.Set(&v)
}
// SetComputerNil sets the value for Computer to be an explicit nil
func (o *ModelingRequestContract) SetComputerNil() {
	o.Computer.Set(nil)
}

// UnsetComputer ensures that no value is present for Computer, not even an explicit nil
func (o *ModelingRequestContract) UnsetComputer() {
	o.Computer.Unset()
}

// GetComputerContainer returns the ComputerContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetComputerContainer() string {
	if o == nil || IsNil(o.ComputerContainer.Get()) {
		var ret string
		return ret
	}
	return *o.ComputerContainer.Get()
}

// GetComputerContainerOk returns a tuple with the ComputerContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetComputerContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputerContainer.Get(), o.ComputerContainer.IsSet()
}

// HasComputerContainer returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasComputerContainer() bool {
	if o != nil && o.ComputerContainer.IsSet() {
		return true
	}

	return false
}

// SetComputerContainer gets a reference to the given NullableString and assigns it to the ComputerContainer field.
func (o *ModelingRequestContract) SetComputerContainer(v string) {
	o.ComputerContainer.Set(&v)
}
// SetComputerContainerNil sets the value for ComputerContainer to be an explicit nil
func (o *ModelingRequestContract) SetComputerContainerNil() {
	o.ComputerContainer.Set(nil)
}

// UnsetComputerContainer ensures that no value is present for ComputerContainer, not even an explicit nil
func (o *ModelingRequestContract) UnsetComputerContainer() {
	o.ComputerContainer.Unset()
}

// GetUser returns the User field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetUser() string {
	if o == nil || IsNil(o.User.Get()) {
		var ret string
		return ret
	}
	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// HasUser returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasUser() bool {
	if o != nil && o.User.IsSet() {
		return true
	}

	return false
}

// SetUser gets a reference to the given NullableString and assigns it to the User field.
func (o *ModelingRequestContract) SetUser(v string) {
	o.User.Set(&v)
}
// SetUserNil sets the value for User to be an explicit nil
func (o *ModelingRequestContract) SetUserNil() {
	o.User.Set(nil)
}

// UnsetUser ensures that no value is present for User, not even an explicit nil
func (o *ModelingRequestContract) UnsetUser() {
	o.User.Unset()
}

// GetUserSid returns the UserSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetUserSid() string {
	if o == nil || IsNil(o.UserSid.Get()) {
		var ret string
		return ret
	}
	return *o.UserSid.Get()
}

// GetUserSidOk returns a tuple with the UserSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetUserSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserSid.Get(), o.UserSid.IsSet()
}

// HasUserSid returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasUserSid() bool {
	if o != nil && o.UserSid.IsSet() {
		return true
	}

	return false
}

// SetUserSid gets a reference to the given NullableString and assigns it to the UserSid field.
func (o *ModelingRequestContract) SetUserSid(v string) {
	o.UserSid.Set(&v)
}
// SetUserSidNil sets the value for UserSid to be an explicit nil
func (o *ModelingRequestContract) SetUserSidNil() {
	o.UserSid.Set(nil)
}

// UnsetUserSid ensures that no value is present for UserSid, not even an explicit nil
func (o *ModelingRequestContract) UnsetUserSid() {
	o.UserSid.Unset()
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName.Get()) {
		var ret string
		return ret
	}
	return *o.DistinguishedName.Get()
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetDistinguishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DistinguishedName.Get(), o.DistinguishedName.IsSet()
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName.IsSet() {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given NullableString and assigns it to the DistinguishedName field.
func (o *ModelingRequestContract) SetDistinguishedName(v string) {
	o.DistinguishedName.Set(&v)
}
// SetDistinguishedNameNil sets the value for DistinguishedName to be an explicit nil
func (o *ModelingRequestContract) SetDistinguishedNameNil() {
	o.DistinguishedName.Set(nil)
}

// UnsetDistinguishedName ensures that no value is present for DistinguishedName, not even an explicit nil
func (o *ModelingRequestContract) UnsetDistinguishedName() {
	o.DistinguishedName.Unset()
}

// GetGroupSids returns the GroupSids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetGroupSids() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.GroupSids
}

// GetGroupSidsOk returns a tuple with the GroupSids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetGroupSidsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupSids) {
		return nil, false
	}
	return o.GroupSids, true
}

// HasGroupSids returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasGroupSids() bool {
	if o != nil && IsNil(o.GroupSids) {
		return true
	}

	return false
}

// SetGroupSids gets a reference to the given []string and assigns it to the GroupSids field.
func (o *ModelingRequestContract) SetGroupSids(v []string) {
	o.GroupSids = v
}

// GetUserContainer returns the UserContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetUserContainer() string {
	if o == nil || IsNil(o.UserContainer.Get()) {
		var ret string
		return ret
	}
	return *o.UserContainer.Get()
}

// GetUserContainerOk returns a tuple with the UserContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetUserContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserContainer.Get(), o.UserContainer.IsSet()
}

// HasUserContainer returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasUserContainer() bool {
	if o != nil && o.UserContainer.IsSet() {
		return true
	}

	return false
}

// SetUserContainer gets a reference to the given NullableString and assigns it to the UserContainer field.
func (o *ModelingRequestContract) SetUserContainer(v string) {
	o.UserContainer.Set(&v)
}
// SetUserContainerNil sets the value for UserContainer to be an explicit nil
func (o *ModelingRequestContract) SetUserContainerNil() {
	o.UserContainer.Set(nil)
}

// UnsetUserContainer ensures that no value is present for UserContainer, not even an explicit nil
func (o *ModelingRequestContract) UnsetUserContainer() {
	o.UserContainer.Unset()
}

// GetClientIPAddress returns the ClientIPAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetClientIPAddress() string {
	if o == nil || IsNil(o.ClientIPAddress.Get()) {
		var ret string
		return ret
	}
	return *o.ClientIPAddress.Get()
}

// GetClientIPAddressOk returns a tuple with the ClientIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetClientIPAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientIPAddress.Get(), o.ClientIPAddress.IsSet()
}

// HasClientIPAddress returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasClientIPAddress() bool {
	if o != nil && o.ClientIPAddress.IsSet() {
		return true
	}

	return false
}

// SetClientIPAddress gets a reference to the given NullableString and assigns it to the ClientIPAddress field.
func (o *ModelingRequestContract) SetClientIPAddress(v string) {
	o.ClientIPAddress.Set(&v)
}
// SetClientIPAddressNil sets the value for ClientIPAddress to be an explicit nil
func (o *ModelingRequestContract) SetClientIPAddressNil() {
	o.ClientIPAddress.Set(nil)
}

// UnsetClientIPAddress ensures that no value is present for ClientIPAddress, not even an explicit nil
func (o *ModelingRequestContract) UnsetClientIPAddress() {
	o.ClientIPAddress.Unset()
}

// GetClientName returns the ClientName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetClientName() string {
	if o == nil || IsNil(o.ClientName.Get()) {
		var ret string
		return ret
	}
	return *o.ClientName.Get()
}

// GetClientNameOk returns a tuple with the ClientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetClientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientName.Get(), o.ClientName.IsSet()
}

// HasClientName returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasClientName() bool {
	if o != nil && o.ClientName.IsSet() {
		return true
	}

	return false
}

// SetClientName gets a reference to the given NullableString and assigns it to the ClientName field.
func (o *ModelingRequestContract) SetClientName(v string) {
	o.ClientName.Set(&v)
}
// SetClientNameNil sets the value for ClientName to be an explicit nil
func (o *ModelingRequestContract) SetClientNameNil() {
	o.ClientName.Set(nil)
}

// UnsetClientName ensures that no value is present for ClientName, not even an explicit nil
func (o *ModelingRequestContract) UnsetClientName() {
	o.ClientName.Unset()
}

// GetDeliveryGroup returns the DeliveryGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetDeliveryGroup() string {
	if o == nil || IsNil(o.DeliveryGroup.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryGroup.Get()
}

// GetDeliveryGroupOk returns a tuple with the DeliveryGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetDeliveryGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryGroup.Get(), o.DeliveryGroup.IsSet()
}

// HasDeliveryGroup returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasDeliveryGroup() bool {
	if o != nil && o.DeliveryGroup.IsSet() {
		return true
	}

	return false
}

// SetDeliveryGroup gets a reference to the given NullableString and assigns it to the DeliveryGroup field.
func (o *ModelingRequestContract) SetDeliveryGroup(v string) {
	o.DeliveryGroup.Set(&v)
}
// SetDeliveryGroupNil sets the value for DeliveryGroup to be an explicit nil
func (o *ModelingRequestContract) SetDeliveryGroupNil() {
	o.DeliveryGroup.Set(nil)
}

// UnsetDeliveryGroup ensures that no value is present for DeliveryGroup, not even an explicit nil
func (o *ModelingRequestContract) UnsetDeliveryGroup() {
	o.DeliveryGroup.Unset()
}

// GetDeliveryGroupType returns the DeliveryGroupType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetDeliveryGroupType() string {
	if o == nil || IsNil(o.DeliveryGroupType.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryGroupType.Get()
}

// GetDeliveryGroupTypeOk returns a tuple with the DeliveryGroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetDeliveryGroupTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryGroupType.Get(), o.DeliveryGroupType.IsSet()
}

// HasDeliveryGroupType returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasDeliveryGroupType() bool {
	if o != nil && o.DeliveryGroupType.IsSet() {
		return true
	}

	return false
}

// SetDeliveryGroupType gets a reference to the given NullableString and assigns it to the DeliveryGroupType field.
func (o *ModelingRequestContract) SetDeliveryGroupType(v string) {
	o.DeliveryGroupType.Set(&v)
}
// SetDeliveryGroupTypeNil sets the value for DeliveryGroupType to be an explicit nil
func (o *ModelingRequestContract) SetDeliveryGroupTypeNil() {
	o.DeliveryGroupType.Set(nil)
}

// UnsetDeliveryGroupType ensures that no value is present for DeliveryGroupType, not even an explicit nil
func (o *ModelingRequestContract) UnsetDeliveryGroupType() {
	o.DeliveryGroupType.Unset()
}

// GetDeliveryGroupTags returns the DeliveryGroupTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetDeliveryGroupTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.DeliveryGroupTags
}

// GetDeliveryGroupTagsOk returns a tuple with the DeliveryGroupTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetDeliveryGroupTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.DeliveryGroupTags) {
		return nil, false
	}
	return o.DeliveryGroupTags, true
}

// HasDeliveryGroupTags returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasDeliveryGroupTags() bool {
	if o != nil && IsNil(o.DeliveryGroupTags) {
		return true
	}

	return false
}

// SetDeliveryGroupTags gets a reference to the given []string and assigns it to the DeliveryGroupTags field.
func (o *ModelingRequestContract) SetDeliveryGroupTags(v []string) {
	o.DeliveryGroupTags = v
}

// GetIsUsingAccessGateway returns the IsUsingAccessGateway field value if set, zero value otherwise.
func (o *ModelingRequestContract) GetIsUsingAccessGateway() bool {
	if o == nil || IsNil(o.IsUsingAccessGateway) {
		var ret bool
		return ret
	}
	return *o.IsUsingAccessGateway
}

// GetIsUsingAccessGatewayOk returns a tuple with the IsUsingAccessGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingRequestContract) GetIsUsingAccessGatewayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingAccessGateway) {
		return nil, false
	}
	return o.IsUsingAccessGateway, true
}

// HasIsUsingAccessGateway returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasIsUsingAccessGateway() bool {
	if o != nil && !IsNil(o.IsUsingAccessGateway) {
		return true
	}

	return false
}

// SetIsUsingAccessGateway gets a reference to the given bool and assigns it to the IsUsingAccessGateway field.
func (o *ModelingRequestContract) SetIsUsingAccessGateway(v bool) {
	o.IsUsingAccessGateway = &v
}

// GetAccessGatewayFarm returns the AccessGatewayFarm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetAccessGatewayFarm() string {
	if o == nil || IsNil(o.AccessGatewayFarm.Get()) {
		var ret string
		return ret
	}
	return *o.AccessGatewayFarm.Get()
}

// GetAccessGatewayFarmOk returns a tuple with the AccessGatewayFarm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetAccessGatewayFarmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessGatewayFarm.Get(), o.AccessGatewayFarm.IsSet()
}

// HasAccessGatewayFarm returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasAccessGatewayFarm() bool {
	if o != nil && o.AccessGatewayFarm.IsSet() {
		return true
	}

	return false
}

// SetAccessGatewayFarm gets a reference to the given NullableString and assigns it to the AccessGatewayFarm field.
func (o *ModelingRequestContract) SetAccessGatewayFarm(v string) {
	o.AccessGatewayFarm.Set(&v)
}
// SetAccessGatewayFarmNil sets the value for AccessGatewayFarm to be an explicit nil
func (o *ModelingRequestContract) SetAccessGatewayFarmNil() {
	o.AccessGatewayFarm.Set(nil)
}

// UnsetAccessGatewayFarm ensures that no value is present for AccessGatewayFarm, not even an explicit nil
func (o *ModelingRequestContract) UnsetAccessGatewayFarm() {
	o.AccessGatewayFarm.Unset()
}

// GetAccessGatewayTags returns the AccessGatewayTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelingRequestContract) GetAccessGatewayTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AccessGatewayTags
}

// GetAccessGatewayTagsOk returns a tuple with the AccessGatewayTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelingRequestContract) GetAccessGatewayTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccessGatewayTags) {
		return nil, false
	}
	return o.AccessGatewayTags, true
}

// HasAccessGatewayTags returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasAccessGatewayTags() bool {
	if o != nil && IsNil(o.AccessGatewayTags) {
		return true
	}

	return false
}

// SetAccessGatewayTags gets a reference to the given []string and assigns it to the AccessGatewayTags field.
func (o *ModelingRequestContract) SetAccessGatewayTags(v []string) {
	o.AccessGatewayTags = v
}

// GetIsUsingWanScaler returns the IsUsingWanScaler field value if set, zero value otherwise.
func (o *ModelingRequestContract) GetIsUsingWanScaler() bool {
	if o == nil || IsNil(o.IsUsingWanScaler) {
		var ret bool
		return ret
	}
	return *o.IsUsingWanScaler
}

// GetIsUsingWanScalerOk returns a tuple with the IsUsingWanScaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingRequestContract) GetIsUsingWanScalerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingWanScaler) {
		return nil, false
	}
	return o.IsUsingWanScaler, true
}

// HasIsUsingWanScaler returns a boolean if a field has been set.
func (o *ModelingRequestContract) HasIsUsingWanScaler() bool {
	if o != nil && !IsNil(o.IsUsingWanScaler) {
		return true
	}

	return false
}

// SetIsUsingWanScaler gets a reference to the given bool and assigns it to the IsUsingWanScaler field.
func (o *ModelingRequestContract) SetIsUsingWanScaler(v bool) {
	o.IsUsingWanScaler = &v
}

func (o ModelingRequestContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelingRequestContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainController.IsSet() {
		toSerialize["DomainController"] = o.DomainController.Get()
	}
	if o.ComputerIdentity.IsSet() {
		toSerialize["ComputerIdentity"] = o.ComputerIdentity.Get()
	}
	if o.UserIdentity.IsSet() {
		toSerialize["UserIdentity"] = o.UserIdentity.Get()
	}
	if o.SiteName.IsSet() {
		toSerialize["SiteName"] = o.SiteName.Get()
	}
	if o.Computer.IsSet() {
		toSerialize["Computer"] = o.Computer.Get()
	}
	if o.ComputerContainer.IsSet() {
		toSerialize["ComputerContainer"] = o.ComputerContainer.Get()
	}
	if o.User.IsSet() {
		toSerialize["User"] = o.User.Get()
	}
	if o.UserSid.IsSet() {
		toSerialize["UserSid"] = o.UserSid.Get()
	}
	if o.DistinguishedName.IsSet() {
		toSerialize["DistinguishedName"] = o.DistinguishedName.Get()
	}
	if o.GroupSids != nil {
		toSerialize["GroupSids"] = o.GroupSids
	}
	if o.UserContainer.IsSet() {
		toSerialize["UserContainer"] = o.UserContainer.Get()
	}
	if o.ClientIPAddress.IsSet() {
		toSerialize["ClientIPAddress"] = o.ClientIPAddress.Get()
	}
	if o.ClientName.IsSet() {
		toSerialize["ClientName"] = o.ClientName.Get()
	}
	if o.DeliveryGroup.IsSet() {
		toSerialize["DeliveryGroup"] = o.DeliveryGroup.Get()
	}
	if o.DeliveryGroupType.IsSet() {
		toSerialize["DeliveryGroupType"] = o.DeliveryGroupType.Get()
	}
	if o.DeliveryGroupTags != nil {
		toSerialize["DeliveryGroupTags"] = o.DeliveryGroupTags
	}
	if !IsNil(o.IsUsingAccessGateway) {
		toSerialize["IsUsingAccessGateway"] = o.IsUsingAccessGateway
	}
	if o.AccessGatewayFarm.IsSet() {
		toSerialize["AccessGatewayFarm"] = o.AccessGatewayFarm.Get()
	}
	if o.AccessGatewayTags != nil {
		toSerialize["AccessGatewayTags"] = o.AccessGatewayTags
	}
	if !IsNil(o.IsUsingWanScaler) {
		toSerialize["IsUsingWanScaler"] = o.IsUsingWanScaler
	}
	return toSerialize, nil
}

type NullableModelingRequestContract struct {
	value *ModelingRequestContract
	isSet bool
}

func (v NullableModelingRequestContract) Get() *ModelingRequestContract {
	return v.value
}

func (v *NullableModelingRequestContract) Set(val *ModelingRequestContract) {
	v.value = val
	v.isSet = true
}

func (v NullableModelingRequestContract) IsSet() bool {
	return v.isSet
}

func (v *NullableModelingRequestContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelingRequestContract(val *ModelingRequestContract) *NullableModelingRequestContract {
	return &NullableModelingRequestContract{value: val, isSet: true}
}

func (v NullableModelingRequestContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelingRequestContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


