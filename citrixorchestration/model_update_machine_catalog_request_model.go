/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the UpdateMachineCatalogRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMachineCatalogRequestModel{}

// UpdateMachineCatalogRequestModel Request object for updating machine catalogs.
type UpdateMachineCatalogRequestModel struct {
	// The folder in which the machine catalog resides. If not specified, the value will not be changed. May be specified as either the folder Id or Path. If specified as a path, and the path does not exist, it will be automatically created.
	AdminFolder NullableString `json:"AdminFolder,omitempty"`
	// Name of the machine catalog.  Each machine catalog within a site must have a unique name.  If not specified, will not be changed.
	Name NullableString `json:"Name,omitempty"`
	// Description of the machine catalog.  If not specified, will not be changed.
	Description NullableString `json:"Description,omitempty"`
	// Specifies the hypervisor connection to use for power management of machines in this machine catalog.  If not specified, will not be changed.
	HypervisorConnection NullableString `json:"HypervisorConnection,omitempty"`
	// List of one or more remote PC enrollment scopes.  If not specified, will not be changed. If specified, *all* enrollment scopes must be listed.  Existing enrollment scopes that are not listed will be removed.   Removing an enrollment scope will *not* remove existing remote PCs that were enrolled via that scope.
	RemotePCEnrollmentScopes []RemotePCEnrollmentScopeRequestModel `json:"RemotePCEnrollmentScopes,omitempty"`
	MinimumFunctionalLevel *FunctionalLevel `json:"MinimumFunctionalLevel,omitempty"`
	// IP address of the PVS server to be used.  Can only be specified if  is . If not specified, will not be changed.
	PvsAddress NullableString `json:"PvsAddress,omitempty"`
	// The domain of the PVS server to be used.  Can only be specified if  is . If not specified, will not be changed.
	PvsDomain NullableString `json:"PvsDomain,omitempty"`
	// Administrative scopes which the machine catalog should be a part of.  The \"All\" scope, and any tenant scopes, are implicit and cannot be removed.  To remove from all non-implicit scopes, specify an empty array ([]).   Specifying tenant scopes is equivalent to specifying the  property and is subject to the same constraints.
	Scopes []string `json:"Scopes,omitempty"`
	// Tenants to associate with the machine catalog.
	Tenants []string `json:"Tenants,omitempty"`
	// Indicate whether the RDS license warning should appear for the machine catalog.
	ShowRdsLicenseWarning NullableBool `json:"ShowRdsLicenseWarning,omitempty"`
	// Zone the machine catalog is associated with.  If not specified, will not be changed.
	Zone NullableString `json:"Zone,omitempty"`
	// The number of processors that virtual machines created from the provisioning scheme should use.
	CpuCount NullableInt32 `json:"CpuCount,omitempty"`
	// The maximum amount of memory that virtual machines created from the provisioning scheme should use.
	MemoryMB NullableInt32 `json:"MemoryMB,omitempty"`
	// The hypervisor resource path of the Cloud service offering to use when creating machines.
	ServiceOfferingPath NullableString `json:"ServiceOfferingPath,omitempty"`
	// The hypervisor resource path(s) of the Cloud security group(s) to use when creating machines.
	SecurityGroups []string `json:"SecurityGroups,omitempty"`
	// Specifies how the attached NICs are mapped to networks. If this parameter is omitted, the current NICs setting is not updated. If an empty array is specified, new VMs will be created with a single NIC, which is mapped to the default network in the hosting unit. If an non-empty array is supplied, the NICs setting is updated, and new machines will be created with the number of NICs specified in the array, with each NIC attached to the specified network.
	NetworkMapping []NetworkMapRequestModel `json:"NetworkMapping,omitempty"`
	VdaUpgradeType *VdaUpgradeType `json:"VdaUpgradeType,omitempty"`
	// The path in the resource pool to the virtual machine template that will be used. This identifies the VM template to be used and the default values for the tags, virtual machine size, boot diagnostics, host cache property of OS disk, accelerated networking and availability zone. This must be a path to a Virtual machine or Template item in the resource pool to which the Machine Catalog is associated.
	MachineProfilePath NullableString `json:"MachineProfilePath,omitempty"`
	// The properties of the provisioning scheme that are specific to the target hosting infrastructure.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
	// The metadata of machine catalog. Set the value of the NameValueStringPairModel is null or empty will be remove this metadata. Not existing Name and Value NameValueStringPairModel object will be added. The same Name but different value object will be updated.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	// The size in GB of any temporary storage disk used by the write back cache. Should be used in conjunction with WriteBackCacheMemorySizeMB.
	WriteBackCacheDiskSizeGB NullableInt32 `json:"WriteBackCacheDiskSizeGB,omitempty"`
	// The size in MB of any write back cache if required. Should be used in conjunction with WriteBackCacheDiskSizeGB.
	WriteBackCacheMemorySizeMB NullableInt32 `json:"WriteBackCacheMemorySizeMB,omitempty"`
	// Name of Azure AD security group to be created.
	AzureADSecurityGroupName NullableString `json:"AzureADSecurityGroupName,omitempty"`
	// TenantId of Azure Directory.
	AzureADTenantId NullableString `json:"AzureADTenantId,omitempty"`
}

// NewUpdateMachineCatalogRequestModel instantiates a new UpdateMachineCatalogRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMachineCatalogRequestModel() *UpdateMachineCatalogRequestModel {
	this := UpdateMachineCatalogRequestModel{}
	return &this
}

// NewUpdateMachineCatalogRequestModelWithDefaults instantiates a new UpdateMachineCatalogRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMachineCatalogRequestModelWithDefaults() *UpdateMachineCatalogRequestModel {
	this := UpdateMachineCatalogRequestModel{}
	return &this
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetAdminFolder() string {
	if o == nil || IsNil(o.AdminFolder.Get()) {
		var ret string
		return ret
	}
	return *o.AdminFolder.Get()
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetAdminFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdminFolder.Get(), o.AdminFolder.IsSet()
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAdminFolder() bool {
	if o != nil && o.AdminFolder.IsSet() {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given NullableString and assigns it to the AdminFolder field.
func (o *UpdateMachineCatalogRequestModel) SetAdminFolder(v string) {
	o.AdminFolder.Set(&v)
}
// SetAdminFolderNil sets the value for AdminFolder to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetAdminFolderNil() {
	o.AdminFolder.Set(nil)
}

// UnsetAdminFolder ensures that no value is present for AdminFolder, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetAdminFolder() {
	o.AdminFolder.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateMachineCatalogRequestModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateMachineCatalogRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetHypervisorConnection returns the HypervisorConnection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetHypervisorConnection() string {
	if o == nil || IsNil(o.HypervisorConnection.Get()) {
		var ret string
		return ret
	}
	return *o.HypervisorConnection.Get()
}

// GetHypervisorConnectionOk returns a tuple with the HypervisorConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetHypervisorConnectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HypervisorConnection.Get(), o.HypervisorConnection.IsSet()
}

// HasHypervisorConnection returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasHypervisorConnection() bool {
	if o != nil && o.HypervisorConnection.IsSet() {
		return true
	}

	return false
}

// SetHypervisorConnection gets a reference to the given NullableString and assigns it to the HypervisorConnection field.
func (o *UpdateMachineCatalogRequestModel) SetHypervisorConnection(v string) {
	o.HypervisorConnection.Set(&v)
}
// SetHypervisorConnectionNil sets the value for HypervisorConnection to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetHypervisorConnectionNil() {
	o.HypervisorConnection.Set(nil)
}

// UnsetHypervisorConnection ensures that no value is present for HypervisorConnection, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetHypervisorConnection() {
	o.HypervisorConnection.Unset()
}

// GetRemotePCEnrollmentScopes returns the RemotePCEnrollmentScopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetRemotePCEnrollmentScopes() []RemotePCEnrollmentScopeRequestModel {
	if o == nil {
		var ret []RemotePCEnrollmentScopeRequestModel
		return ret
	}
	return o.RemotePCEnrollmentScopes
}

// GetRemotePCEnrollmentScopesOk returns a tuple with the RemotePCEnrollmentScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetRemotePCEnrollmentScopesOk() ([]RemotePCEnrollmentScopeRequestModel, bool) {
	if o == nil || IsNil(o.RemotePCEnrollmentScopes) {
		return nil, false
	}
	return o.RemotePCEnrollmentScopes, true
}

// HasRemotePCEnrollmentScopes returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasRemotePCEnrollmentScopes() bool {
	if o != nil && IsNil(o.RemotePCEnrollmentScopes) {
		return true
	}

	return false
}

// SetRemotePCEnrollmentScopes gets a reference to the given []RemotePCEnrollmentScopeRequestModel and assigns it to the RemotePCEnrollmentScopes field.
func (o *UpdateMachineCatalogRequestModel) SetRemotePCEnrollmentScopes(v []RemotePCEnrollmentScopeRequestModel) {
	o.RemotePCEnrollmentScopes = v
}

// GetMinimumFunctionalLevel returns the MinimumFunctionalLevel field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetMinimumFunctionalLevel() FunctionalLevel {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		var ret FunctionalLevel
		return ret
	}
	return *o.MinimumFunctionalLevel
}

// GetMinimumFunctionalLevelOk returns a tuple with the MinimumFunctionalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetMinimumFunctionalLevelOk() (*FunctionalLevel, bool) {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		return nil, false
	}
	return o.MinimumFunctionalLevel, true
}

// HasMinimumFunctionalLevel returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMinimumFunctionalLevel() bool {
	if o != nil && !IsNil(o.MinimumFunctionalLevel) {
		return true
	}

	return false
}

// SetMinimumFunctionalLevel gets a reference to the given FunctionalLevel and assigns it to the MinimumFunctionalLevel field.
func (o *UpdateMachineCatalogRequestModel) SetMinimumFunctionalLevel(v FunctionalLevel) {
	o.MinimumFunctionalLevel = &v
}

// GetPvsAddress returns the PvsAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetPvsAddress() string {
	if o == nil || IsNil(o.PvsAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PvsAddress.Get()
}

// GetPvsAddressOk returns a tuple with the PvsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetPvsAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsAddress.Get(), o.PvsAddress.IsSet()
}

// HasPvsAddress returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasPvsAddress() bool {
	if o != nil && o.PvsAddress.IsSet() {
		return true
	}

	return false
}

// SetPvsAddress gets a reference to the given NullableString and assigns it to the PvsAddress field.
func (o *UpdateMachineCatalogRequestModel) SetPvsAddress(v string) {
	o.PvsAddress.Set(&v)
}
// SetPvsAddressNil sets the value for PvsAddress to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetPvsAddressNil() {
	o.PvsAddress.Set(nil)
}

// UnsetPvsAddress ensures that no value is present for PvsAddress, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetPvsAddress() {
	o.PvsAddress.Unset()
}

// GetPvsDomain returns the PvsDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetPvsDomain() string {
	if o == nil || IsNil(o.PvsDomain.Get()) {
		var ret string
		return ret
	}
	return *o.PvsDomain.Get()
}

// GetPvsDomainOk returns a tuple with the PvsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetPvsDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsDomain.Get(), o.PvsDomain.IsSet()
}

// HasPvsDomain returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasPvsDomain() bool {
	if o != nil && o.PvsDomain.IsSet() {
		return true
	}

	return false
}

// SetPvsDomain gets a reference to the given NullableString and assigns it to the PvsDomain field.
func (o *UpdateMachineCatalogRequestModel) SetPvsDomain(v string) {
	o.PvsDomain.Set(&v)
}
// SetPvsDomainNil sets the value for PvsDomain to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetPvsDomainNil() {
	o.PvsDomain.Set(nil)
}

// UnsetPvsDomain ensures that no value is present for PvsDomain, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetPvsDomain() {
	o.PvsDomain.Unset()
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasScopes() bool {
	if o != nil && IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *UpdateMachineCatalogRequestModel) SetScopes(v []string) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetTenants() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasTenants() bool {
	if o != nil && IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *UpdateMachineCatalogRequestModel) SetTenants(v []string) {
	o.Tenants = v
}

// GetShowRdsLicenseWarning returns the ShowRdsLicenseWarning field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetShowRdsLicenseWarning() bool {
	if o == nil || IsNil(o.ShowRdsLicenseWarning.Get()) {
		var ret bool
		return ret
	}
	return *o.ShowRdsLicenseWarning.Get()
}

// GetShowRdsLicenseWarningOk returns a tuple with the ShowRdsLicenseWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetShowRdsLicenseWarningOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShowRdsLicenseWarning.Get(), o.ShowRdsLicenseWarning.IsSet()
}

// HasShowRdsLicenseWarning returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasShowRdsLicenseWarning() bool {
	if o != nil && o.ShowRdsLicenseWarning.IsSet() {
		return true
	}

	return false
}

// SetShowRdsLicenseWarning gets a reference to the given NullableBool and assigns it to the ShowRdsLicenseWarning field.
func (o *UpdateMachineCatalogRequestModel) SetShowRdsLicenseWarning(v bool) {
	o.ShowRdsLicenseWarning.Set(&v)
}
// SetShowRdsLicenseWarningNil sets the value for ShowRdsLicenseWarning to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetShowRdsLicenseWarningNil() {
	o.ShowRdsLicenseWarning.Set(nil)
}

// UnsetShowRdsLicenseWarning ensures that no value is present for ShowRdsLicenseWarning, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetShowRdsLicenseWarning() {
	o.ShowRdsLicenseWarning.Unset()
}

// GetZone returns the Zone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetZone() string {
	if o == nil || IsNil(o.Zone.Get()) {
		var ret string
		return ret
	}
	return *o.Zone.Get()
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Zone.Get(), o.Zone.IsSet()
}

// HasZone returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasZone() bool {
	if o != nil && o.Zone.IsSet() {
		return true
	}

	return false
}

// SetZone gets a reference to the given NullableString and assigns it to the Zone field.
func (o *UpdateMachineCatalogRequestModel) SetZone(v string) {
	o.Zone.Set(&v)
}
// SetZoneNil sets the value for Zone to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetZoneNil() {
	o.Zone.Set(nil)
}

// UnsetZone ensures that no value is present for Zone, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetZone() {
	o.Zone.Unset()
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetCpuCount() int32 {
	if o == nil || IsNil(o.CpuCount.Get()) {
		var ret int32
		return ret
	}
	return *o.CpuCount.Get()
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetCpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CpuCount.Get(), o.CpuCount.IsSet()
}

// HasCpuCount returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasCpuCount() bool {
	if o != nil && o.CpuCount.IsSet() {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given NullableInt32 and assigns it to the CpuCount field.
func (o *UpdateMachineCatalogRequestModel) SetCpuCount(v int32) {
	o.CpuCount.Set(&v)
}
// SetCpuCountNil sets the value for CpuCount to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetCpuCountNil() {
	o.CpuCount.Set(nil)
}

// UnsetCpuCount ensures that no value is present for CpuCount, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetCpuCount() {
	o.CpuCount.Unset()
}

// GetMemoryMB returns the MemoryMB field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetMemoryMB() int32 {
	if o == nil || IsNil(o.MemoryMB.Get()) {
		var ret int32
		return ret
	}
	return *o.MemoryMB.Get()
}

// GetMemoryMBOk returns a tuple with the MemoryMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetMemoryMBOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MemoryMB.Get(), o.MemoryMB.IsSet()
}

// HasMemoryMB returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMemoryMB() bool {
	if o != nil && o.MemoryMB.IsSet() {
		return true
	}

	return false
}

// SetMemoryMB gets a reference to the given NullableInt32 and assigns it to the MemoryMB field.
func (o *UpdateMachineCatalogRequestModel) SetMemoryMB(v int32) {
	o.MemoryMB.Set(&v)
}
// SetMemoryMBNil sets the value for MemoryMB to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetMemoryMBNil() {
	o.MemoryMB.Set(nil)
}

// UnsetMemoryMB ensures that no value is present for MemoryMB, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetMemoryMB() {
	o.MemoryMB.Unset()
}

// GetServiceOfferingPath returns the ServiceOfferingPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetServiceOfferingPath() string {
	if o == nil || IsNil(o.ServiceOfferingPath.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceOfferingPath.Get()
}

// GetServiceOfferingPathOk returns a tuple with the ServiceOfferingPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetServiceOfferingPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceOfferingPath.Get(), o.ServiceOfferingPath.IsSet()
}

// HasServiceOfferingPath returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasServiceOfferingPath() bool {
	if o != nil && o.ServiceOfferingPath.IsSet() {
		return true
	}

	return false
}

// SetServiceOfferingPath gets a reference to the given NullableString and assigns it to the ServiceOfferingPath field.
func (o *UpdateMachineCatalogRequestModel) SetServiceOfferingPath(v string) {
	o.ServiceOfferingPath.Set(&v)
}
// SetServiceOfferingPathNil sets the value for ServiceOfferingPath to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetServiceOfferingPathNil() {
	o.ServiceOfferingPath.Set(nil)
}

// UnsetServiceOfferingPath ensures that no value is present for ServiceOfferingPath, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetServiceOfferingPath() {
	o.ServiceOfferingPath.Unset()
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetSecurityGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetSecurityGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasSecurityGroups() bool {
	if o != nil && IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []string and assigns it to the SecurityGroups field.
func (o *UpdateMachineCatalogRequestModel) SetSecurityGroups(v []string) {
	o.SecurityGroups = v
}

// GetNetworkMapping returns the NetworkMapping field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetNetworkMapping() []NetworkMapRequestModel {
	if o == nil {
		var ret []NetworkMapRequestModel
		return ret
	}
	return o.NetworkMapping
}

// GetNetworkMappingOk returns a tuple with the NetworkMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetNetworkMappingOk() ([]NetworkMapRequestModel, bool) {
	if o == nil || IsNil(o.NetworkMapping) {
		return nil, false
	}
	return o.NetworkMapping, true
}

// HasNetworkMapping returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasNetworkMapping() bool {
	if o != nil && IsNil(o.NetworkMapping) {
		return true
	}

	return false
}

// SetNetworkMapping gets a reference to the given []NetworkMapRequestModel and assigns it to the NetworkMapping field.
func (o *UpdateMachineCatalogRequestModel) SetNetworkMapping(v []NetworkMapRequestModel) {
	o.NetworkMapping = v
}

// GetVdaUpgradeType returns the VdaUpgradeType field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetVdaUpgradeType() VdaUpgradeType {
	if o == nil || IsNil(o.VdaUpgradeType) {
		var ret VdaUpgradeType
		return ret
	}
	return *o.VdaUpgradeType
}

// GetVdaUpgradeTypeOk returns a tuple with the VdaUpgradeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetVdaUpgradeTypeOk() (*VdaUpgradeType, bool) {
	if o == nil || IsNil(o.VdaUpgradeType) {
		return nil, false
	}
	return o.VdaUpgradeType, true
}

// HasVdaUpgradeType returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasVdaUpgradeType() bool {
	if o != nil && !IsNil(o.VdaUpgradeType) {
		return true
	}

	return false
}

// SetVdaUpgradeType gets a reference to the given VdaUpgradeType and assigns it to the VdaUpgradeType field.
func (o *UpdateMachineCatalogRequestModel) SetVdaUpgradeType(v VdaUpgradeType) {
	o.VdaUpgradeType = &v
}

// GetMachineProfilePath returns the MachineProfilePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetMachineProfilePath() string {
	if o == nil || IsNil(o.MachineProfilePath.Get()) {
		var ret string
		return ret
	}
	return *o.MachineProfilePath.Get()
}

// GetMachineProfilePathOk returns a tuple with the MachineProfilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetMachineProfilePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MachineProfilePath.Get(), o.MachineProfilePath.IsSet()
}

// HasMachineProfilePath returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMachineProfilePath() bool {
	if o != nil && o.MachineProfilePath.IsSet() {
		return true
	}

	return false
}

// SetMachineProfilePath gets a reference to the given NullableString and assigns it to the MachineProfilePath field.
func (o *UpdateMachineCatalogRequestModel) SetMachineProfilePath(v string) {
	o.MachineProfilePath.Set(&v)
}
// SetMachineProfilePathNil sets the value for MachineProfilePath to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetMachineProfilePathNil() {
	o.MachineProfilePath.Set(nil)
}

// UnsetMachineProfilePath ensures that no value is present for MachineProfilePath, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetMachineProfilePath() {
	o.MachineProfilePath.Unset()
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetCustomProperties() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasCustomProperties() bool {
	if o != nil && IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *UpdateMachineCatalogRequestModel) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *UpdateMachineCatalogRequestModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetWriteBackCacheDiskSizeGB returns the WriteBackCacheDiskSizeGB field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetWriteBackCacheDiskSizeGB() int32 {
	if o == nil || IsNil(o.WriteBackCacheDiskSizeGB.Get()) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheDiskSizeGB.Get()
}

// GetWriteBackCacheDiskSizeGBOk returns a tuple with the WriteBackCacheDiskSizeGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetWriteBackCacheDiskSizeGBOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WriteBackCacheDiskSizeGB.Get(), o.WriteBackCacheDiskSizeGB.IsSet()
}

// HasWriteBackCacheDiskSizeGB returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasWriteBackCacheDiskSizeGB() bool {
	if o != nil && o.WriteBackCacheDiskSizeGB.IsSet() {
		return true
	}

	return false
}

// SetWriteBackCacheDiskSizeGB gets a reference to the given NullableInt32 and assigns it to the WriteBackCacheDiskSizeGB field.
func (o *UpdateMachineCatalogRequestModel) SetWriteBackCacheDiskSizeGB(v int32) {
	o.WriteBackCacheDiskSizeGB.Set(&v)
}
// SetWriteBackCacheDiskSizeGBNil sets the value for WriteBackCacheDiskSizeGB to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetWriteBackCacheDiskSizeGBNil() {
	o.WriteBackCacheDiskSizeGB.Set(nil)
}

// UnsetWriteBackCacheDiskSizeGB ensures that no value is present for WriteBackCacheDiskSizeGB, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetWriteBackCacheDiskSizeGB() {
	o.WriteBackCacheDiskSizeGB.Unset()
}

// GetWriteBackCacheMemorySizeMB returns the WriteBackCacheMemorySizeMB field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetWriteBackCacheMemorySizeMB() int32 {
	if o == nil || IsNil(o.WriteBackCacheMemorySizeMB.Get()) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheMemorySizeMB.Get()
}

// GetWriteBackCacheMemorySizeMBOk returns a tuple with the WriteBackCacheMemorySizeMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetWriteBackCacheMemorySizeMBOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WriteBackCacheMemorySizeMB.Get(), o.WriteBackCacheMemorySizeMB.IsSet()
}

// HasWriteBackCacheMemorySizeMB returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasWriteBackCacheMemorySizeMB() bool {
	if o != nil && o.WriteBackCacheMemorySizeMB.IsSet() {
		return true
	}

	return false
}

// SetWriteBackCacheMemorySizeMB gets a reference to the given NullableInt32 and assigns it to the WriteBackCacheMemorySizeMB field.
func (o *UpdateMachineCatalogRequestModel) SetWriteBackCacheMemorySizeMB(v int32) {
	o.WriteBackCacheMemorySizeMB.Set(&v)
}
// SetWriteBackCacheMemorySizeMBNil sets the value for WriteBackCacheMemorySizeMB to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetWriteBackCacheMemorySizeMBNil() {
	o.WriteBackCacheMemorySizeMB.Set(nil)
}

// UnsetWriteBackCacheMemorySizeMB ensures that no value is present for WriteBackCacheMemorySizeMB, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetWriteBackCacheMemorySizeMB() {
	o.WriteBackCacheMemorySizeMB.Unset()
}

// GetAzureADSecurityGroupName returns the AzureADSecurityGroupName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetAzureADSecurityGroupName() string {
	if o == nil || IsNil(o.AzureADSecurityGroupName.Get()) {
		var ret string
		return ret
	}
	return *o.AzureADSecurityGroupName.Get()
}

// GetAzureADSecurityGroupNameOk returns a tuple with the AzureADSecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetAzureADSecurityGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureADSecurityGroupName.Get(), o.AzureADSecurityGroupName.IsSet()
}

// HasAzureADSecurityGroupName returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAzureADSecurityGroupName() bool {
	if o != nil && o.AzureADSecurityGroupName.IsSet() {
		return true
	}

	return false
}

// SetAzureADSecurityGroupName gets a reference to the given NullableString and assigns it to the AzureADSecurityGroupName field.
func (o *UpdateMachineCatalogRequestModel) SetAzureADSecurityGroupName(v string) {
	o.AzureADSecurityGroupName.Set(&v)
}
// SetAzureADSecurityGroupNameNil sets the value for AzureADSecurityGroupName to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetAzureADSecurityGroupNameNil() {
	o.AzureADSecurityGroupName.Set(nil)
}

// UnsetAzureADSecurityGroupName ensures that no value is present for AzureADSecurityGroupName, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetAzureADSecurityGroupName() {
	o.AzureADSecurityGroupName.Unset()
}

// GetAzureADTenantId returns the AzureADTenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMachineCatalogRequestModel) GetAzureADTenantId() string {
	if o == nil || IsNil(o.AzureADTenantId.Get()) {
		var ret string
		return ret
	}
	return *o.AzureADTenantId.Get()
}

// GetAzureADTenantIdOk returns a tuple with the AzureADTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMachineCatalogRequestModel) GetAzureADTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureADTenantId.Get(), o.AzureADTenantId.IsSet()
}

// HasAzureADTenantId returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAzureADTenantId() bool {
	if o != nil && o.AzureADTenantId.IsSet() {
		return true
	}

	return false
}

// SetAzureADTenantId gets a reference to the given NullableString and assigns it to the AzureADTenantId field.
func (o *UpdateMachineCatalogRequestModel) SetAzureADTenantId(v string) {
	o.AzureADTenantId.Set(&v)
}
// SetAzureADTenantIdNil sets the value for AzureADTenantId to be an explicit nil
func (o *UpdateMachineCatalogRequestModel) SetAzureADTenantIdNil() {
	o.AzureADTenantId.Set(nil)
}

// UnsetAzureADTenantId ensures that no value is present for AzureADTenantId, not even an explicit nil
func (o *UpdateMachineCatalogRequestModel) UnsetAzureADTenantId() {
	o.AzureADTenantId.Unset()
}

func (o UpdateMachineCatalogRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMachineCatalogRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminFolder.IsSet() {
		toSerialize["AdminFolder"] = o.AdminFolder.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.HypervisorConnection.IsSet() {
		toSerialize["HypervisorConnection"] = o.HypervisorConnection.Get()
	}
	if o.RemotePCEnrollmentScopes != nil {
		toSerialize["RemotePCEnrollmentScopes"] = o.RemotePCEnrollmentScopes
	}
	if !IsNil(o.MinimumFunctionalLevel) {
		toSerialize["MinimumFunctionalLevel"] = o.MinimumFunctionalLevel
	}
	if o.PvsAddress.IsSet() {
		toSerialize["PvsAddress"] = o.PvsAddress.Get()
	}
	if o.PvsDomain.IsSet() {
		toSerialize["PvsDomain"] = o.PvsDomain.Get()
	}
	if o.Scopes != nil {
		toSerialize["Scopes"] = o.Scopes
	}
	if o.Tenants != nil {
		toSerialize["Tenants"] = o.Tenants
	}
	if o.ShowRdsLicenseWarning.IsSet() {
		toSerialize["ShowRdsLicenseWarning"] = o.ShowRdsLicenseWarning.Get()
	}
	if o.Zone.IsSet() {
		toSerialize["Zone"] = o.Zone.Get()
	}
	if o.CpuCount.IsSet() {
		toSerialize["CpuCount"] = o.CpuCount.Get()
	}
	if o.MemoryMB.IsSet() {
		toSerialize["MemoryMB"] = o.MemoryMB.Get()
	}
	if o.ServiceOfferingPath.IsSet() {
		toSerialize["ServiceOfferingPath"] = o.ServiceOfferingPath.Get()
	}
	if o.SecurityGroups != nil {
		toSerialize["SecurityGroups"] = o.SecurityGroups
	}
	if o.NetworkMapping != nil {
		toSerialize["NetworkMapping"] = o.NetworkMapping
	}
	if !IsNil(o.VdaUpgradeType) {
		toSerialize["VdaUpgradeType"] = o.VdaUpgradeType
	}
	if o.MachineProfilePath.IsSet() {
		toSerialize["MachineProfilePath"] = o.MachineProfilePath.Get()
	}
	if o.CustomProperties != nil {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	if o.WriteBackCacheDiskSizeGB.IsSet() {
		toSerialize["WriteBackCacheDiskSizeGB"] = o.WriteBackCacheDiskSizeGB.Get()
	}
	if o.WriteBackCacheMemorySizeMB.IsSet() {
		toSerialize["WriteBackCacheMemorySizeMB"] = o.WriteBackCacheMemorySizeMB.Get()
	}
	if o.AzureADSecurityGroupName.IsSet() {
		toSerialize["AzureADSecurityGroupName"] = o.AzureADSecurityGroupName.Get()
	}
	if o.AzureADTenantId.IsSet() {
		toSerialize["AzureADTenantId"] = o.AzureADTenantId.Get()
	}
	return toSerialize, nil
}

type NullableUpdateMachineCatalogRequestModel struct {
	value *UpdateMachineCatalogRequestModel
	isSet bool
}

func (v NullableUpdateMachineCatalogRequestModel) Get() *UpdateMachineCatalogRequestModel {
	return v.value
}

func (v *NullableUpdateMachineCatalogRequestModel) Set(val *UpdateMachineCatalogRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMachineCatalogRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMachineCatalogRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMachineCatalogRequestModel(val *UpdateMachineCatalogRequestModel) *NullableUpdateMachineCatalogRequestModel {
	return &NullableUpdateMachineCatalogRequestModel{value: val, isSet: true}
}

func (v NullableUpdateMachineCatalogRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMachineCatalogRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


