/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the UpdateMachineCatalogRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMachineCatalogRequestModel{}

// UpdateMachineCatalogRequestModel Request object for updating machine catalogs.
type UpdateMachineCatalogRequestModel struct {
	// The folder in which the machine catalog resides. If not specified, the value will not be changed. May be specified as either the folder Id or Path. If specified as a path, and the path does not exist, it will be automatically created.
	AdminFolder *string `json:"AdminFolder,omitempty"`
	// Name of the machine catalog.  Each machine catalog within a site must have a unique name.  If not specified, will not be changed.
	Name *string `json:"Name,omitempty"`
	// Description of the machine catalog.  If not specified, will not be changed.
	Description *string `json:"Description,omitempty"`
	// Specifies the hypervisor connection to use for power management of machines in this machine catalog.  If not specified, will not be changed.
	HypervisorConnection *string `json:"HypervisorConnection,omitempty"`
	// List of one or more remote PC enrollment scopes.  If not specified, will not be changed. If specified, *all* enrollment scopes must be listed.  Existing enrollment scopes that are not listed will be removed.   Removing an enrollment scope will *not* remove existing remote PCs that were enrolled via that scope.
	RemotePCEnrollmentScopes []RemotePCEnrollmentScopeRequestModel `json:"RemotePCEnrollmentScopes,omitempty"`
	MinimumFunctionalLevel *FunctionalLevel `json:"MinimumFunctionalLevel,omitempty"`
	// IP address of the PVS server to be used.  Can only be specified if  is . If not specified, will not be changed.
	PvsAddress *string `json:"PvsAddress,omitempty"`
	// The domain of the PVS server to be used.  Can only be specified if  is . If not specified, will not be changed.
	PvsDomain *string `json:"PvsDomain,omitempty"`
	// Administrative scopes which the machine catalog should be a part of.  The \"All\" scope, and any tenant scopes, are implicit and cannot be removed.  To remove from all non-implicit scopes, specify an empty array ([]).   Specifying tenant scopes is equivalent to specifying the  property and is subject to the same constraints.
	Scopes []string `json:"Scopes,omitempty"`
	// Tenants to associate with the machine catalog.
	Tenants []string `json:"Tenants,omitempty"`
	// Indicate whether the RDS license warning should appear for the machine catalog.
	ShowRdsLicenseWarning *bool `json:"ShowRdsLicenseWarning,omitempty"`
	// Zone the machine catalog is associated with.  If not specified, will not be changed.
	Zone *string `json:"Zone,omitempty"`
	// The number of processors that virtual machines created from the provisioning scheme should use.
	CpuCount *int32 `json:"CpuCount,omitempty"`
	// The maximum amount of memory that virtual machines created from the provisioning scheme should use.
	MemoryMB *int32 `json:"MemoryMB,omitempty"`
	// The hypervisor resource path of the Cloud service offering to use when creating machines.
	ServiceOfferingPath *string `json:"ServiceOfferingPath,omitempty"`
	// Specifies how the attached NICs are mapped to networks. If this parameter is omitted, the current NICs setting is not updated. If an empty array is specified, new VMs will be created with a single NIC, which is mapped to the default network in the hosting unit. If an non-empty array is supplied, the NICs setting is updated, and new machines will be created with the number of NICs specified in the array, with each NIC attached to the specified network.
	NetworkMapping []NetworkMapRequestModel `json:"NetworkMapping,omitempty"`
	VdaUpgradeType *VdaUpgradeType `json:"VdaUpgradeType,omitempty"`
	// The path in the resource pool to the virtual machine template that will be used. This identifies the VM template to be used and the default values for the tags, virtual machine size, boot diagnostics, host cache property of OS disk, accelerated networking and availability zone. This must be a path to a Virtual machine or Template item in the resource pool to which the Machine Catalog is associated.
	MachineProfilePath *string `json:"MachineProfilePath,omitempty"`
	// The properties of the provisioning scheme that are specific to the target hosting infrastructure.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
	// The metadata of machine catalog. Set the value of the NameValueStringPairModel is null or empty will be remove this metadata. Not existing Name and Value NameValueStringPairModel object will be added. The same Name but different value object will be updated.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	// Name of Azure AD security group to be created.
	AzureADSecurityGroupName *string `json:"AzureADSecurityGroupName,omitempty"`
	// TenantId of Azure Directory.
	AzureADTenantId *string `json:"AzureADTenantId,omitempty"`
}

// NewUpdateMachineCatalogRequestModel instantiates a new UpdateMachineCatalogRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMachineCatalogRequestModel() *UpdateMachineCatalogRequestModel {
	this := UpdateMachineCatalogRequestModel{}
	return &this
}

// NewUpdateMachineCatalogRequestModelWithDefaults instantiates a new UpdateMachineCatalogRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMachineCatalogRequestModelWithDefaults() *UpdateMachineCatalogRequestModel {
	this := UpdateMachineCatalogRequestModel{}
	return &this
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetAdminFolder() string {
	if o == nil || IsNil(o.AdminFolder) {
		var ret string
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetAdminFolderOk() (*string, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given string and assigns it to the AdminFolder field.
func (o *UpdateMachineCatalogRequestModel) SetAdminFolder(v string) {
	o.AdminFolder = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateMachineCatalogRequestModel) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateMachineCatalogRequestModel) SetDescription(v string) {
	o.Description = &v
}

// GetHypervisorConnection returns the HypervisorConnection field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetHypervisorConnection() string {
	if o == nil || IsNil(o.HypervisorConnection) {
		var ret string
		return ret
	}
	return *o.HypervisorConnection
}

// GetHypervisorConnectionOk returns a tuple with the HypervisorConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetHypervisorConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.HypervisorConnection) {
		return nil, false
	}
	return o.HypervisorConnection, true
}

// HasHypervisorConnection returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasHypervisorConnection() bool {
	if o != nil && !IsNil(o.HypervisorConnection) {
		return true
	}

	return false
}

// SetHypervisorConnection gets a reference to the given string and assigns it to the HypervisorConnection field.
func (o *UpdateMachineCatalogRequestModel) SetHypervisorConnection(v string) {
	o.HypervisorConnection = &v
}

// GetRemotePCEnrollmentScopes returns the RemotePCEnrollmentScopes field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetRemotePCEnrollmentScopes() []RemotePCEnrollmentScopeRequestModel {
	if o == nil || IsNil(o.RemotePCEnrollmentScopes) {
		var ret []RemotePCEnrollmentScopeRequestModel
		return ret
	}
	return o.RemotePCEnrollmentScopes
}

// GetRemotePCEnrollmentScopesOk returns a tuple with the RemotePCEnrollmentScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetRemotePCEnrollmentScopesOk() ([]RemotePCEnrollmentScopeRequestModel, bool) {
	if o == nil || IsNil(o.RemotePCEnrollmentScopes) {
		return nil, false
	}
	return o.RemotePCEnrollmentScopes, true
}

// HasRemotePCEnrollmentScopes returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasRemotePCEnrollmentScopes() bool {
	if o != nil && !IsNil(o.RemotePCEnrollmentScopes) {
		return true
	}

	return false
}

// SetRemotePCEnrollmentScopes gets a reference to the given []RemotePCEnrollmentScopeRequestModel and assigns it to the RemotePCEnrollmentScopes field.
func (o *UpdateMachineCatalogRequestModel) SetRemotePCEnrollmentScopes(v []RemotePCEnrollmentScopeRequestModel) {
	o.RemotePCEnrollmentScopes = v
}

// GetMinimumFunctionalLevel returns the MinimumFunctionalLevel field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetMinimumFunctionalLevel() FunctionalLevel {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		var ret FunctionalLevel
		return ret
	}
	return *o.MinimumFunctionalLevel
}

// GetMinimumFunctionalLevelOk returns a tuple with the MinimumFunctionalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetMinimumFunctionalLevelOk() (*FunctionalLevel, bool) {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		return nil, false
	}
	return o.MinimumFunctionalLevel, true
}

// HasMinimumFunctionalLevel returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMinimumFunctionalLevel() bool {
	if o != nil && !IsNil(o.MinimumFunctionalLevel) {
		return true
	}

	return false
}

// SetMinimumFunctionalLevel gets a reference to the given FunctionalLevel and assigns it to the MinimumFunctionalLevel field.
func (o *UpdateMachineCatalogRequestModel) SetMinimumFunctionalLevel(v FunctionalLevel) {
	o.MinimumFunctionalLevel = &v
}

// GetPvsAddress returns the PvsAddress field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetPvsAddress() string {
	if o == nil || IsNil(o.PvsAddress) {
		var ret string
		return ret
	}
	return *o.PvsAddress
}

// GetPvsAddressOk returns a tuple with the PvsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetPvsAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PvsAddress) {
		return nil, false
	}
	return o.PvsAddress, true
}

// HasPvsAddress returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasPvsAddress() bool {
	if o != nil && !IsNil(o.PvsAddress) {
		return true
	}

	return false
}

// SetPvsAddress gets a reference to the given string and assigns it to the PvsAddress field.
func (o *UpdateMachineCatalogRequestModel) SetPvsAddress(v string) {
	o.PvsAddress = &v
}

// GetPvsDomain returns the PvsDomain field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetPvsDomain() string {
	if o == nil || IsNil(o.PvsDomain) {
		var ret string
		return ret
	}
	return *o.PvsDomain
}

// GetPvsDomainOk returns a tuple with the PvsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetPvsDomainOk() (*string, bool) {
	if o == nil || IsNil(o.PvsDomain) {
		return nil, false
	}
	return o.PvsDomain, true
}

// HasPvsDomain returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasPvsDomain() bool {
	if o != nil && !IsNil(o.PvsDomain) {
		return true
	}

	return false
}

// SetPvsDomain gets a reference to the given string and assigns it to the PvsDomain field.
func (o *UpdateMachineCatalogRequestModel) SetPvsDomain(v string) {
	o.PvsDomain = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *UpdateMachineCatalogRequestModel) SetScopes(v []string) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetTenants() []string {
	if o == nil || IsNil(o.Tenants) {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *UpdateMachineCatalogRequestModel) SetTenants(v []string) {
	o.Tenants = v
}

// GetShowRdsLicenseWarning returns the ShowRdsLicenseWarning field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetShowRdsLicenseWarning() bool {
	if o == nil || IsNil(o.ShowRdsLicenseWarning) {
		var ret bool
		return ret
	}
	return *o.ShowRdsLicenseWarning
}

// GetShowRdsLicenseWarningOk returns a tuple with the ShowRdsLicenseWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetShowRdsLicenseWarningOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRdsLicenseWarning) {
		return nil, false
	}
	return o.ShowRdsLicenseWarning, true
}

// HasShowRdsLicenseWarning returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasShowRdsLicenseWarning() bool {
	if o != nil && !IsNil(o.ShowRdsLicenseWarning) {
		return true
	}

	return false
}

// SetShowRdsLicenseWarning gets a reference to the given bool and assigns it to the ShowRdsLicenseWarning field.
func (o *UpdateMachineCatalogRequestModel) SetShowRdsLicenseWarning(v bool) {
	o.ShowRdsLicenseWarning = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *UpdateMachineCatalogRequestModel) SetZone(v string) {
	o.Zone = &v
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetCpuCount() int32 {
	if o == nil || IsNil(o.CpuCount) {
		var ret int32
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetCpuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuCount) {
		return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasCpuCount() bool {
	if o != nil && !IsNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int32 and assigns it to the CpuCount field.
func (o *UpdateMachineCatalogRequestModel) SetCpuCount(v int32) {
	o.CpuCount = &v
}

// GetMemoryMB returns the MemoryMB field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetMemoryMB() int32 {
	if o == nil || IsNil(o.MemoryMB) {
		var ret int32
		return ret
	}
	return *o.MemoryMB
}

// GetMemoryMBOk returns a tuple with the MemoryMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetMemoryMBOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMB) {
		return nil, false
	}
	return o.MemoryMB, true
}

// HasMemoryMB returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMemoryMB() bool {
	if o != nil && !IsNil(o.MemoryMB) {
		return true
	}

	return false
}

// SetMemoryMB gets a reference to the given int32 and assigns it to the MemoryMB field.
func (o *UpdateMachineCatalogRequestModel) SetMemoryMB(v int32) {
	o.MemoryMB = &v
}

// GetServiceOfferingPath returns the ServiceOfferingPath field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetServiceOfferingPath() string {
	if o == nil || IsNil(o.ServiceOfferingPath) {
		var ret string
		return ret
	}
	return *o.ServiceOfferingPath
}

// GetServiceOfferingPathOk returns a tuple with the ServiceOfferingPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetServiceOfferingPathOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceOfferingPath) {
		return nil, false
	}
	return o.ServiceOfferingPath, true
}

// HasServiceOfferingPath returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasServiceOfferingPath() bool {
	if o != nil && !IsNil(o.ServiceOfferingPath) {
		return true
	}

	return false
}

// SetServiceOfferingPath gets a reference to the given string and assigns it to the ServiceOfferingPath field.
func (o *UpdateMachineCatalogRequestModel) SetServiceOfferingPath(v string) {
	o.ServiceOfferingPath = &v
}

// GetNetworkMapping returns the NetworkMapping field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetNetworkMapping() []NetworkMapRequestModel {
	if o == nil || IsNil(o.NetworkMapping) {
		var ret []NetworkMapRequestModel
		return ret
	}
	return o.NetworkMapping
}

// GetNetworkMappingOk returns a tuple with the NetworkMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetNetworkMappingOk() ([]NetworkMapRequestModel, bool) {
	if o == nil || IsNil(o.NetworkMapping) {
		return nil, false
	}
	return o.NetworkMapping, true
}

// HasNetworkMapping returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasNetworkMapping() bool {
	if o != nil && !IsNil(o.NetworkMapping) {
		return true
	}

	return false
}

// SetNetworkMapping gets a reference to the given []NetworkMapRequestModel and assigns it to the NetworkMapping field.
func (o *UpdateMachineCatalogRequestModel) SetNetworkMapping(v []NetworkMapRequestModel) {
	o.NetworkMapping = v
}

// GetVdaUpgradeType returns the VdaUpgradeType field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetVdaUpgradeType() VdaUpgradeType {
	if o == nil || IsNil(o.VdaUpgradeType) {
		var ret VdaUpgradeType
		return ret
	}
	return *o.VdaUpgradeType
}

// GetVdaUpgradeTypeOk returns a tuple with the VdaUpgradeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetVdaUpgradeTypeOk() (*VdaUpgradeType, bool) {
	if o == nil || IsNil(o.VdaUpgradeType) {
		return nil, false
	}
	return o.VdaUpgradeType, true
}

// HasVdaUpgradeType returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasVdaUpgradeType() bool {
	if o != nil && !IsNil(o.VdaUpgradeType) {
		return true
	}

	return false
}

// SetVdaUpgradeType gets a reference to the given VdaUpgradeType and assigns it to the VdaUpgradeType field.
func (o *UpdateMachineCatalogRequestModel) SetVdaUpgradeType(v VdaUpgradeType) {
	o.VdaUpgradeType = &v
}

// GetMachineProfilePath returns the MachineProfilePath field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetMachineProfilePath() string {
	if o == nil || IsNil(o.MachineProfilePath) {
		var ret string
		return ret
	}
	return *o.MachineProfilePath
}

// GetMachineProfilePathOk returns a tuple with the MachineProfilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetMachineProfilePathOk() (*string, bool) {
	if o == nil || IsNil(o.MachineProfilePath) {
		return nil, false
	}
	return o.MachineProfilePath, true
}

// HasMachineProfilePath returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMachineProfilePath() bool {
	if o != nil && !IsNil(o.MachineProfilePath) {
		return true
	}

	return false
}

// SetMachineProfilePath gets a reference to the given string and assigns it to the MachineProfilePath field.
func (o *UpdateMachineCatalogRequestModel) SetMachineProfilePath(v string) {
	o.MachineProfilePath = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetCustomProperties() []NameValueStringPairModel {
	if o == nil || IsNil(o.CustomProperties) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *UpdateMachineCatalogRequestModel) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetMetadata() []NameValueStringPairModel {
	if o == nil || IsNil(o.Metadata) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *UpdateMachineCatalogRequestModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetAzureADSecurityGroupName returns the AzureADSecurityGroupName field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetAzureADSecurityGroupName() string {
	if o == nil || IsNil(o.AzureADSecurityGroupName) {
		var ret string
		return ret
	}
	return *o.AzureADSecurityGroupName
}

// GetAzureADSecurityGroupNameOk returns a tuple with the AzureADSecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetAzureADSecurityGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzureADSecurityGroupName) {
		return nil, false
	}
	return o.AzureADSecurityGroupName, true
}

// HasAzureADSecurityGroupName returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAzureADSecurityGroupName() bool {
	if o != nil && !IsNil(o.AzureADSecurityGroupName) {
		return true
	}

	return false
}

// SetAzureADSecurityGroupName gets a reference to the given string and assigns it to the AzureADSecurityGroupName field.
func (o *UpdateMachineCatalogRequestModel) SetAzureADSecurityGroupName(v string) {
	o.AzureADSecurityGroupName = &v
}

// GetAzureADTenantId returns the AzureADTenantId field value if set, zero value otherwise.
func (o *UpdateMachineCatalogRequestModel) GetAzureADTenantId() string {
	if o == nil || IsNil(o.AzureADTenantId) {
		var ret string
		return ret
	}
	return *o.AzureADTenantId
}

// GetAzureADTenantIdOk returns a tuple with the AzureADTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMachineCatalogRequestModel) GetAzureADTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureADTenantId) {
		return nil, false
	}
	return o.AzureADTenantId, true
}

// HasAzureADTenantId returns a boolean if a field has been set.
func (o *UpdateMachineCatalogRequestModel) HasAzureADTenantId() bool {
	if o != nil && !IsNil(o.AzureADTenantId) {
		return true
	}

	return false
}

// SetAzureADTenantId gets a reference to the given string and assigns it to the AzureADTenantId field.
func (o *UpdateMachineCatalogRequestModel) SetAzureADTenantId(v string) {
	o.AzureADTenantId = &v
}

func (o UpdateMachineCatalogRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMachineCatalogRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.HypervisorConnection) {
		toSerialize["HypervisorConnection"] = o.HypervisorConnection
	}
	if !IsNil(o.RemotePCEnrollmentScopes) {
		toSerialize["RemotePCEnrollmentScopes"] = o.RemotePCEnrollmentScopes
	}
	if !IsNil(o.MinimumFunctionalLevel) {
		toSerialize["MinimumFunctionalLevel"] = o.MinimumFunctionalLevel
	}
	if !IsNil(o.PvsAddress) {
		toSerialize["PvsAddress"] = o.PvsAddress
	}
	if !IsNil(o.PvsDomain) {
		toSerialize["PvsDomain"] = o.PvsDomain
	}
	if !IsNil(o.Scopes) {
		toSerialize["Scopes"] = o.Scopes
	}
	if !IsNil(o.Tenants) {
		toSerialize["Tenants"] = o.Tenants
	}
	if !IsNil(o.ShowRdsLicenseWarning) {
		toSerialize["ShowRdsLicenseWarning"] = o.ShowRdsLicenseWarning
	}
	if !IsNil(o.Zone) {
		toSerialize["Zone"] = o.Zone
	}
	if !IsNil(o.CpuCount) {
		toSerialize["CpuCount"] = o.CpuCount
	}
	if !IsNil(o.MemoryMB) {
		toSerialize["MemoryMB"] = o.MemoryMB
	}
	if !IsNil(o.ServiceOfferingPath) {
		toSerialize["ServiceOfferingPath"] = o.ServiceOfferingPath
	}
	if !IsNil(o.NetworkMapping) {
		toSerialize["NetworkMapping"] = o.NetworkMapping
	}
	if !IsNil(o.VdaUpgradeType) {
		toSerialize["VdaUpgradeType"] = o.VdaUpgradeType
	}
	if !IsNil(o.MachineProfilePath) {
		toSerialize["MachineProfilePath"] = o.MachineProfilePath
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	if !IsNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	if !IsNil(o.AzureADSecurityGroupName) {
		toSerialize["AzureADSecurityGroupName"] = o.AzureADSecurityGroupName
	}
	if !IsNil(o.AzureADTenantId) {
		toSerialize["AzureADTenantId"] = o.AzureADTenantId
	}
	return toSerialize, nil
}

type NullableUpdateMachineCatalogRequestModel struct {
	value *UpdateMachineCatalogRequestModel
	isSet bool
}

func (v NullableUpdateMachineCatalogRequestModel) Get() *UpdateMachineCatalogRequestModel {
	return v.value
}

func (v *NullableUpdateMachineCatalogRequestModel) Set(val *UpdateMachineCatalogRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMachineCatalogRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMachineCatalogRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMachineCatalogRequestModel(val *UpdateMachineCatalogRequestModel) *NullableUpdateMachineCatalogRequestModel {
	return &NullableUpdateMachineCatalogRequestModel{value: val, isSet: true}
}

func (v NullableUpdateMachineCatalogRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMachineCatalogRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


