/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AssignImageVersionToProvisioningSchemeRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignImageVersionToProvisioningSchemeRequestModel{}

// AssignImageVersionToProvisioningSchemeRequestModel Request object representing the assignment of image version to a provisioning scheme.
type AssignImageVersionToProvisioningSchemeRequestModel struct {
	// The image definition of the image version to assign. May be an Id or name.
	ImageDefinition string `json:"ImageDefinition"`
	// The image version to assign. May be an Id or number.
	ImageVersion string `json:"ImageVersion"`
	// The note for assigning the prepared image to provs cheme.
	ImageAssignmentNote NullableString `json:"ImageAssignmentNote,omitempty"`
}

// NewAssignImageVersionToProvisioningSchemeRequestModel instantiates a new AssignImageVersionToProvisioningSchemeRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignImageVersionToProvisioningSchemeRequestModel(imageDefinition string, imageVersion string) *AssignImageVersionToProvisioningSchemeRequestModel {
	this := AssignImageVersionToProvisioningSchemeRequestModel{}
	this.ImageDefinition = imageDefinition
	this.ImageVersion = imageVersion
	return &this
}

// NewAssignImageVersionToProvisioningSchemeRequestModelWithDefaults instantiates a new AssignImageVersionToProvisioningSchemeRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignImageVersionToProvisioningSchemeRequestModelWithDefaults() *AssignImageVersionToProvisioningSchemeRequestModel {
	this := AssignImageVersionToProvisioningSchemeRequestModel{}
	return &this
}

// GetImageDefinition returns the ImageDefinition field value
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageDefinition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageDefinition
}

// GetImageDefinitionOk returns a tuple with the ImageDefinition field value
// and a boolean to check if the value has been set.
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageDefinitionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageDefinition, true
}

// SetImageDefinition sets field value
func (o *AssignImageVersionToProvisioningSchemeRequestModel) SetImageDefinition(v string) {
	o.ImageDefinition = v
}

// GetImageVersion returns the ImageVersion field value
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageVersion
}

// GetImageVersionOk returns a tuple with the ImageVersion field value
// and a boolean to check if the value has been set.
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageVersion, true
}

// SetImageVersion sets field value
func (o *AssignImageVersionToProvisioningSchemeRequestModel) SetImageVersion(v string) {
	o.ImageVersion = v
}

// GetImageAssignmentNote returns the ImageAssignmentNote field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageAssignmentNote() string {
	if o == nil || IsNil(o.ImageAssignmentNote.Get()) {
		var ret string
		return ret
	}
	return *o.ImageAssignmentNote.Get()
}

// GetImageAssignmentNoteOk returns a tuple with the ImageAssignmentNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssignImageVersionToProvisioningSchemeRequestModel) GetImageAssignmentNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageAssignmentNote.Get(), o.ImageAssignmentNote.IsSet()
}

// HasImageAssignmentNote returns a boolean if a field has been set.
func (o *AssignImageVersionToProvisioningSchemeRequestModel) HasImageAssignmentNote() bool {
	if o != nil && o.ImageAssignmentNote.IsSet() {
		return true
	}

	return false
}

// SetImageAssignmentNote gets a reference to the given NullableString and assigns it to the ImageAssignmentNote field.
func (o *AssignImageVersionToProvisioningSchemeRequestModel) SetImageAssignmentNote(v string) {
	o.ImageAssignmentNote.Set(&v)
}
// SetImageAssignmentNoteNil sets the value for ImageAssignmentNote to be an explicit nil
func (o *AssignImageVersionToProvisioningSchemeRequestModel) SetImageAssignmentNoteNil() {
	o.ImageAssignmentNote.Set(nil)
}

// UnsetImageAssignmentNote ensures that no value is present for ImageAssignmentNote, not even an explicit nil
func (o *AssignImageVersionToProvisioningSchemeRequestModel) UnsetImageAssignmentNote() {
	o.ImageAssignmentNote.Unset()
}

func (o AssignImageVersionToProvisioningSchemeRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignImageVersionToProvisioningSchemeRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ImageDefinition"] = o.ImageDefinition
	toSerialize["ImageVersion"] = o.ImageVersion
	if o.ImageAssignmentNote.IsSet() {
		toSerialize["ImageAssignmentNote"] = o.ImageAssignmentNote.Get()
	}
	return toSerialize, nil
}

type NullableAssignImageVersionToProvisioningSchemeRequestModel struct {
	value *AssignImageVersionToProvisioningSchemeRequestModel
	isSet bool
}

func (v NullableAssignImageVersionToProvisioningSchemeRequestModel) Get() *AssignImageVersionToProvisioningSchemeRequestModel {
	return v.value
}

func (v *NullableAssignImageVersionToProvisioningSchemeRequestModel) Set(val *AssignImageVersionToProvisioningSchemeRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignImageVersionToProvisioningSchemeRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignImageVersionToProvisioningSchemeRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignImageVersionToProvisioningSchemeRequestModel(val *AssignImageVersionToProvisioningSchemeRequestModel) *NullableAssignImageVersionToProvisioningSchemeRequestModel {
	return &NullableAssignImageVersionToProvisioningSchemeRequestModel{value: val, isSet: true}
}

func (v NullableAssignImageVersionToProvisioningSchemeRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignImageVersionToProvisioningSchemeRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


