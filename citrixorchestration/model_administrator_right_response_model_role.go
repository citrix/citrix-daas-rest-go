/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AdministratorRightResponseModelRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdministratorRightResponseModelRole{}

// AdministratorRightResponseModelRole Administrative role.  Role defines the actions which the administrator is allowed to take, on objects within the Scope.
type AdministratorRightResponseModelRole struct {
	// Id of role. Needs to be made globally unique (perhaps add site id)
	Id string `json:"Id"`
	// Name of role.
	Name string `json:"Name"`
	// Description of role.
	Description *string `json:"Description,omitempty"`
	// Indicates whether the role is built-in.
	IsBuiltIn bool `json:"IsBuiltIn"`
	// Indicate that if the mangement page could be launch on xdconsole
	CanLaunchManage *bool `json:"CanLaunchManage,omitempty"`
	// Indicate that if the monitor page could be launch on xdconsole
	CanLaunchMonitor *bool `json:"CanLaunchMonitor,omitempty"`
	// List of permissions granted by the role.
	Permissions []DelegatedAdminPermissionResponseModel `json:"Permissions,omitempty"`
}

// NewAdministratorRightResponseModelRole instantiates a new AdministratorRightResponseModelRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministratorRightResponseModelRole(id string, name string, isBuiltIn bool) *AdministratorRightResponseModelRole {
	this := AdministratorRightResponseModelRole{}
	this.Id = id
	this.Name = name
	this.IsBuiltIn = isBuiltIn
	return &this
}

// NewAdministratorRightResponseModelRoleWithDefaults instantiates a new AdministratorRightResponseModelRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministratorRightResponseModelRoleWithDefaults() *AdministratorRightResponseModelRole {
	this := AdministratorRightResponseModelRole{}
	return &this
}

// GetId returns the Id field value
func (o *AdministratorRightResponseModelRole) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AdministratorRightResponseModelRole) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AdministratorRightResponseModelRole) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AdministratorRightResponseModelRole) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdministratorRightResponseModelRole) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdministratorRightResponseModelRole) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdministratorRightResponseModelRole) SetDescription(v string) {
	o.Description = &v
}

// GetIsBuiltIn returns the IsBuiltIn field value
func (o *AdministratorRightResponseModelRole) GetIsBuiltIn() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBuiltIn
}

// GetIsBuiltInOk returns a tuple with the IsBuiltIn field value
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetIsBuiltInOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBuiltIn, true
}

// SetIsBuiltIn sets field value
func (o *AdministratorRightResponseModelRole) SetIsBuiltIn(v bool) {
	o.IsBuiltIn = v
}

// GetCanLaunchManage returns the CanLaunchManage field value if set, zero value otherwise.
func (o *AdministratorRightResponseModelRole) GetCanLaunchManage() bool {
	if o == nil || IsNil(o.CanLaunchManage) {
		var ret bool
		return ret
	}
	return *o.CanLaunchManage
}

// GetCanLaunchManageOk returns a tuple with the CanLaunchManage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetCanLaunchManageOk() (*bool, bool) {
	if o == nil || IsNil(o.CanLaunchManage) {
		return nil, false
	}
	return o.CanLaunchManage, true
}

// HasCanLaunchManage returns a boolean if a field has been set.
func (o *AdministratorRightResponseModelRole) HasCanLaunchManage() bool {
	if o != nil && !IsNil(o.CanLaunchManage) {
		return true
	}

	return false
}

// SetCanLaunchManage gets a reference to the given bool and assigns it to the CanLaunchManage field.
func (o *AdministratorRightResponseModelRole) SetCanLaunchManage(v bool) {
	o.CanLaunchManage = &v
}

// GetCanLaunchMonitor returns the CanLaunchMonitor field value if set, zero value otherwise.
func (o *AdministratorRightResponseModelRole) GetCanLaunchMonitor() bool {
	if o == nil || IsNil(o.CanLaunchMonitor) {
		var ret bool
		return ret
	}
	return *o.CanLaunchMonitor
}

// GetCanLaunchMonitorOk returns a tuple with the CanLaunchMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetCanLaunchMonitorOk() (*bool, bool) {
	if o == nil || IsNil(o.CanLaunchMonitor) {
		return nil, false
	}
	return o.CanLaunchMonitor, true
}

// HasCanLaunchMonitor returns a boolean if a field has been set.
func (o *AdministratorRightResponseModelRole) HasCanLaunchMonitor() bool {
	if o != nil && !IsNil(o.CanLaunchMonitor) {
		return true
	}

	return false
}

// SetCanLaunchMonitor gets a reference to the given bool and assigns it to the CanLaunchMonitor field.
func (o *AdministratorRightResponseModelRole) SetCanLaunchMonitor(v bool) {
	o.CanLaunchMonitor = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AdministratorRightResponseModelRole) GetPermissions() []DelegatedAdminPermissionResponseModel {
	if o == nil || IsNil(o.Permissions) {
		var ret []DelegatedAdminPermissionResponseModel
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministratorRightResponseModelRole) GetPermissionsOk() ([]DelegatedAdminPermissionResponseModel, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AdministratorRightResponseModelRole) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []DelegatedAdminPermissionResponseModel and assigns it to the Permissions field.
func (o *AdministratorRightResponseModelRole) SetPermissions(v []DelegatedAdminPermissionResponseModel) {
	o.Permissions = v
}

func (o AdministratorRightResponseModelRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdministratorRightResponseModelRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	toSerialize["IsBuiltIn"] = o.IsBuiltIn
	if !IsNil(o.CanLaunchManage) {
		toSerialize["CanLaunchManage"] = o.CanLaunchManage
	}
	if !IsNil(o.CanLaunchMonitor) {
		toSerialize["CanLaunchMonitor"] = o.CanLaunchMonitor
	}
	if !IsNil(o.Permissions) {
		toSerialize["Permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableAdministratorRightResponseModelRole struct {
	value *AdministratorRightResponseModelRole
	isSet bool
}

func (v NullableAdministratorRightResponseModelRole) Get() *AdministratorRightResponseModelRole {
	return v.value
}

func (v *NullableAdministratorRightResponseModelRole) Set(val *AdministratorRightResponseModelRole) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministratorRightResponseModelRole) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministratorRightResponseModelRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministratorRightResponseModelRole(val *AdministratorRightResponseModelRole) *NullableAdministratorRightResponseModelRole {
	return &NullableAdministratorRightResponseModelRole{value: val, isSet: true}
}

func (v NullableAdministratorRightResponseModelRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministratorRightResponseModelRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


