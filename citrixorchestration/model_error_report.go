/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ErrorReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorReport{}

// ErrorReport The error data that will be submitted to the Citrix Error Reporting service
type ErrorReport struct {
	// Gets or sets CitrixErrorId
	CitrixErrorId string `json:"CitrixErrorId"`
	// Gets or sets  the name of the component that threw the error
	ComponentName string `json:"ComponentName"`
	// Gets or sets the version of the component that threw the error             
	ComponentVersion string `json:"ComponentVersion"`
	// Gets Key/value pairs of error information to be added to the error report
	ErrorData map[string]string `json:"ErrorData"`
}

// NewErrorReport instantiates a new ErrorReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorReport(citrixErrorId string, componentName string, componentVersion string, errorData map[string]string) *ErrorReport {
	this := ErrorReport{}
	this.CitrixErrorId = citrixErrorId
	this.ComponentName = componentName
	this.ComponentVersion = componentVersion
	this.ErrorData = errorData
	return &this
}

// NewErrorReportWithDefaults instantiates a new ErrorReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorReportWithDefaults() *ErrorReport {
	this := ErrorReport{}
	return &this
}

// GetCitrixErrorId returns the CitrixErrorId field value
func (o *ErrorReport) GetCitrixErrorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CitrixErrorId
}

// GetCitrixErrorIdOk returns a tuple with the CitrixErrorId field value
// and a boolean to check if the value has been set.
func (o *ErrorReport) GetCitrixErrorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CitrixErrorId, true
}

// SetCitrixErrorId sets field value
func (o *ErrorReport) SetCitrixErrorId(v string) {
	o.CitrixErrorId = v
}

// GetComponentName returns the ComponentName field value
func (o *ErrorReport) GetComponentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentName
}

// GetComponentNameOk returns a tuple with the ComponentName field value
// and a boolean to check if the value has been set.
func (o *ErrorReport) GetComponentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentName, true
}

// SetComponentName sets field value
func (o *ErrorReport) SetComponentName(v string) {
	o.ComponentName = v
}

// GetComponentVersion returns the ComponentVersion field value
func (o *ErrorReport) GetComponentVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentVersion
}

// GetComponentVersionOk returns a tuple with the ComponentVersion field value
// and a boolean to check if the value has been set.
func (o *ErrorReport) GetComponentVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentVersion, true
}

// SetComponentVersion sets field value
func (o *ErrorReport) SetComponentVersion(v string) {
	o.ComponentVersion = v
}

// GetErrorData returns the ErrorData field value
func (o *ErrorReport) GetErrorData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.ErrorData
}

// GetErrorDataOk returns a tuple with the ErrorData field value
// and a boolean to check if the value has been set.
func (o *ErrorReport) GetErrorDataOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorData, true
}

// SetErrorData sets field value
func (o *ErrorReport) SetErrorData(v map[string]string) {
	o.ErrorData = v
}

func (o ErrorReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CitrixErrorId"] = o.CitrixErrorId
	toSerialize["ComponentName"] = o.ComponentName
	toSerialize["ComponentVersion"] = o.ComponentVersion
	toSerialize["ErrorData"] = o.ErrorData
	return toSerialize, nil
}

type NullableErrorReport struct {
	value *ErrorReport
	isSet bool
}

func (v NullableErrorReport) Get() *ErrorReport {
	return v.value
}

func (v *NullableErrorReport) Set(val *ErrorReport) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorReport) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorReport(val *ErrorReport) *NullableErrorReport {
	return &NullableErrorReport{value: val, isSet: true}
}

func (v NullableErrorReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


