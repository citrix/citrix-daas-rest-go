/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseRequestModel{}

// LicenseRequestModel Request object for modification of the site license.
type LicenseRequestModel struct {
	// The product code.
	ProductCode *string `json:"ProductCode,omitempty"`
	// The product edition.
	ProductEdition *string `json:"ProductEdition,omitempty"`
	LicenseModel *LicenseModel `json:"LicenseModel,omitempty"`
}

// NewLicenseRequestModel instantiates a new LicenseRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseRequestModel() *LicenseRequestModel {
	this := LicenseRequestModel{}
	return &this
}

// NewLicenseRequestModelWithDefaults instantiates a new LicenseRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseRequestModelWithDefaults() *LicenseRequestModel {
	this := LicenseRequestModel{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *LicenseRequestModel) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseRequestModel) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *LicenseRequestModel) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *LicenseRequestModel) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductEdition returns the ProductEdition field value if set, zero value otherwise.
func (o *LicenseRequestModel) GetProductEdition() string {
	if o == nil || IsNil(o.ProductEdition) {
		var ret string
		return ret
	}
	return *o.ProductEdition
}

// GetProductEditionOk returns a tuple with the ProductEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseRequestModel) GetProductEditionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductEdition) {
		return nil, false
	}
	return o.ProductEdition, true
}

// HasProductEdition returns a boolean if a field has been set.
func (o *LicenseRequestModel) HasProductEdition() bool {
	if o != nil && !IsNil(o.ProductEdition) {
		return true
	}

	return false
}

// SetProductEdition gets a reference to the given string and assigns it to the ProductEdition field.
func (o *LicenseRequestModel) SetProductEdition(v string) {
	o.ProductEdition = &v
}

// GetLicenseModel returns the LicenseModel field value if set, zero value otherwise.
func (o *LicenseRequestModel) GetLicenseModel() LicenseModel {
	if o == nil || IsNil(o.LicenseModel) {
		var ret LicenseModel
		return ret
	}
	return *o.LicenseModel
}

// GetLicenseModelOk returns a tuple with the LicenseModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseRequestModel) GetLicenseModelOk() (*LicenseModel, bool) {
	if o == nil || IsNil(o.LicenseModel) {
		return nil, false
	}
	return o.LicenseModel, true
}

// HasLicenseModel returns a boolean if a field has been set.
func (o *LicenseRequestModel) HasLicenseModel() bool {
	if o != nil && !IsNil(o.LicenseModel) {
		return true
	}

	return false
}

// SetLicenseModel gets a reference to the given LicenseModel and assigns it to the LicenseModel field.
func (o *LicenseRequestModel) SetLicenseModel(v LicenseModel) {
	o.LicenseModel = &v
}

func (o LicenseRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductCode) {
		toSerialize["ProductCode"] = o.ProductCode
	}
	if !IsNil(o.ProductEdition) {
		toSerialize["ProductEdition"] = o.ProductEdition
	}
	if !IsNil(o.LicenseModel) {
		toSerialize["LicenseModel"] = o.LicenseModel
	}
	return toSerialize, nil
}

type NullableLicenseRequestModel struct {
	value *LicenseRequestModel
	isSet bool
}

func (v NullableLicenseRequestModel) Get() *LicenseRequestModel {
	return v.value
}

func (v *NullableLicenseRequestModel) Set(val *LicenseRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseRequestModel(val *LicenseRequestModel) *NullableLicenseRequestModel {
	return &NullableLicenseRequestModel{value: val, isSet: true}
}

func (v NullableLicenseRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


