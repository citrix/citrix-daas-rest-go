/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EmbeddedAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddedAttribute{}

// EmbeddedAttribute struct for EmbeddedAttribute
type EmbeddedAttribute struct {
	TypeId map[string]interface{} `json:"TypeId,omitempty"`
}

// NewEmbeddedAttribute instantiates a new EmbeddedAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddedAttribute() *EmbeddedAttribute {
	this := EmbeddedAttribute{}
	return &this
}

// NewEmbeddedAttributeWithDefaults instantiates a new EmbeddedAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddedAttributeWithDefaults() *EmbeddedAttribute {
	this := EmbeddedAttribute{}
	return &this
}

// GetTypeId returns the TypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EmbeddedAttribute) GetTypeId() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EmbeddedAttribute) GetTypeIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TypeId) {
		return map[string]interface{}{}, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *EmbeddedAttribute) HasTypeId() bool {
	if o != nil && IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given map[string]interface{} and assigns it to the TypeId field.
func (o *EmbeddedAttribute) SetTypeId(v map[string]interface{}) {
	o.TypeId = v
}

func (o EmbeddedAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddedAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TypeId != nil {
		toSerialize["TypeId"] = o.TypeId
	}
	return toSerialize, nil
}

type NullableEmbeddedAttribute struct {
	value *EmbeddedAttribute
	isSet bool
}

func (v NullableEmbeddedAttribute) Get() *EmbeddedAttribute {
	return v.value
}

func (v *NullableEmbeddedAttribute) Set(val *EmbeddedAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddedAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddedAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddedAttribute(val *EmbeddedAttribute) *NullableEmbeddedAttribute {
	return &NullableEmbeddedAttribute{value: val, isSet: true}
}

func (v NullableEmbeddedAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddedAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


