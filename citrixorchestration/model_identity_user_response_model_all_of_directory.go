/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityUserResponseModelAllOfDirectory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityUserResponseModelAllOfDirectory{}

// IdentityUserResponseModelAllOfDirectory The directory context of the user object.
type IdentityUserResponseModelAllOfDirectory struct {
	// Forest of the directory.
	Forest *string `json:"Forest,omitempty"`
	// Domain of the directory.
	Domain *string `json:"Domain,omitempty"`
	// Tenant of the directory.
	Tenant *string `json:"Tenant,omitempty"`
	IdentityProvider *IdentityProviderType `json:"IdentityProvider,omitempty"`
}

// NewIdentityUserResponseModelAllOfDirectory instantiates a new IdentityUserResponseModelAllOfDirectory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUserResponseModelAllOfDirectory() *IdentityUserResponseModelAllOfDirectory {
	this := IdentityUserResponseModelAllOfDirectory{}
	return &this
}

// NewIdentityUserResponseModelAllOfDirectoryWithDefaults instantiates a new IdentityUserResponseModelAllOfDirectory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUserResponseModelAllOfDirectoryWithDefaults() *IdentityUserResponseModelAllOfDirectory {
	this := IdentityUserResponseModelAllOfDirectory{}
	return &this
}

// GetForest returns the Forest field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfDirectory) GetForest() string {
	if o == nil || IsNil(o.Forest) {
		var ret string
		return ret
	}
	return *o.Forest
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfDirectory) GetForestOk() (*string, bool) {
	if o == nil || IsNil(o.Forest) {
		return nil, false
	}
	return o.Forest, true
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfDirectory) HasForest() bool {
	if o != nil && !IsNil(o.Forest) {
		return true
	}

	return false
}

// SetForest gets a reference to the given string and assigns it to the Forest field.
func (o *IdentityUserResponseModelAllOfDirectory) SetForest(v string) {
	o.Forest = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfDirectory) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfDirectory) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfDirectory) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *IdentityUserResponseModelAllOfDirectory) SetDomain(v string) {
	o.Domain = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfDirectory) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfDirectory) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfDirectory) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *IdentityUserResponseModelAllOfDirectory) SetTenant(v string) {
	o.Tenant = &v
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfDirectory) GetIdentityProvider() IdentityProviderType {
	if o == nil || IsNil(o.IdentityProvider) {
		var ret IdentityProviderType
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfDirectory) GetIdentityProviderOk() (*IdentityProviderType, bool) {
	if o == nil || IsNil(o.IdentityProvider) {
		return nil, false
	}
	return o.IdentityProvider, true
}

// HasIdentityProvider returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfDirectory) HasIdentityProvider() bool {
	if o != nil && !IsNil(o.IdentityProvider) {
		return true
	}

	return false
}

// SetIdentityProvider gets a reference to the given IdentityProviderType and assigns it to the IdentityProvider field.
func (o *IdentityUserResponseModelAllOfDirectory) SetIdentityProvider(v IdentityProviderType) {
	o.IdentityProvider = &v
}

func (o IdentityUserResponseModelAllOfDirectory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityUserResponseModelAllOfDirectory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Forest) {
		toSerialize["Forest"] = o.Forest
	}
	if !IsNil(o.Domain) {
		toSerialize["Domain"] = o.Domain
	}
	if !IsNil(o.Tenant) {
		toSerialize["Tenant"] = o.Tenant
	}
	if !IsNil(o.IdentityProvider) {
		toSerialize["IdentityProvider"] = o.IdentityProvider
	}
	return toSerialize, nil
}

type NullableIdentityUserResponseModelAllOfDirectory struct {
	value *IdentityUserResponseModelAllOfDirectory
	isSet bool
}

func (v NullableIdentityUserResponseModelAllOfDirectory) Get() *IdentityUserResponseModelAllOfDirectory {
	return v.value
}

func (v *NullableIdentityUserResponseModelAllOfDirectory) Set(val *IdentityUserResponseModelAllOfDirectory) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUserResponseModelAllOfDirectory) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUserResponseModelAllOfDirectory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUserResponseModelAllOfDirectory(val *IdentityUserResponseModelAllOfDirectory) *NullableIdentityUserResponseModelAllOfDirectory {
	return &NullableIdentityUserResponseModelAllOfDirectory{value: val, isSet: true}
}

func (v NullableIdentityUserResponseModelAllOfDirectory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUserResponseModelAllOfDirectory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


