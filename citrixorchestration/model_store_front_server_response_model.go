/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the StoreFrontServerResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoreFrontServerResponseModel{}

// StoreFrontServerResponseModel Request object indicating StoreFront URLs to configure within Receivers when they are hosted on a VDA.
type StoreFrontServerResponseModel struct {
	// ID of the StoreFront server.
	Id string `json:"Id"`
	// Name of the StoreFront server.
	Name string `json:"Name"`
	// Description of the StoreFront server.
	Description NullableString `json:"Description,omitempty"`
	// Url of the StoreFront server.
	Url string `json:"Url"`
	// Indicates whether the StoreFront server is enabled. Disabled StoreFront servers will not have their URLs added to hosted receiver.
	Enabled bool `json:"Enabled"`
	// DesktopGroupRefCount
	DesktopGroupRefCount *int32 `json:"DesktopGroupRefCount,omitempty"`
}

type _StoreFrontServerResponseModel StoreFrontServerResponseModel

// NewStoreFrontServerResponseModel instantiates a new StoreFrontServerResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreFrontServerResponseModel(id string, name string, url string, enabled bool) *StoreFrontServerResponseModel {
	this := StoreFrontServerResponseModel{}
	this.Id = id
	this.Name = name
	this.Url = url
	this.Enabled = enabled
	return &this
}

// NewStoreFrontServerResponseModelWithDefaults instantiates a new StoreFrontServerResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreFrontServerResponseModelWithDefaults() *StoreFrontServerResponseModel {
	this := StoreFrontServerResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *StoreFrontServerResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StoreFrontServerResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StoreFrontServerResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *StoreFrontServerResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StoreFrontServerResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StoreFrontServerResponseModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StoreFrontServerResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StoreFrontServerResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *StoreFrontServerResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *StoreFrontServerResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *StoreFrontServerResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *StoreFrontServerResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetUrl returns the Url field value
func (o *StoreFrontServerResponseModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *StoreFrontServerResponseModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *StoreFrontServerResponseModel) SetUrl(v string) {
	o.Url = v
}

// GetEnabled returns the Enabled field value
func (o *StoreFrontServerResponseModel) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *StoreFrontServerResponseModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *StoreFrontServerResponseModel) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDesktopGroupRefCount returns the DesktopGroupRefCount field value if set, zero value otherwise.
func (o *StoreFrontServerResponseModel) GetDesktopGroupRefCount() int32 {
	if o == nil || IsNil(o.DesktopGroupRefCount) {
		var ret int32
		return ret
	}
	return *o.DesktopGroupRefCount
}

// GetDesktopGroupRefCountOk returns a tuple with the DesktopGroupRefCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerResponseModel) GetDesktopGroupRefCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DesktopGroupRefCount) {
		return nil, false
	}
	return o.DesktopGroupRefCount, true
}

// HasDesktopGroupRefCount returns a boolean if a field has been set.
func (o *StoreFrontServerResponseModel) HasDesktopGroupRefCount() bool {
	if o != nil && !IsNil(o.DesktopGroupRefCount) {
		return true
	}

	return false
}

// SetDesktopGroupRefCount gets a reference to the given int32 and assigns it to the DesktopGroupRefCount field.
func (o *StoreFrontServerResponseModel) SetDesktopGroupRefCount(v int32) {
	o.DesktopGroupRefCount = &v
}

func (o StoreFrontServerResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoreFrontServerResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	toSerialize["Url"] = o.Url
	toSerialize["Enabled"] = o.Enabled
	if !IsNil(o.DesktopGroupRefCount) {
		toSerialize["DesktopGroupRefCount"] = o.DesktopGroupRefCount
	}
	return toSerialize, nil
}

type NullableStoreFrontServerResponseModel struct {
	value *StoreFrontServerResponseModel
	isSet bool
}

func (v NullableStoreFrontServerResponseModel) Get() *StoreFrontServerResponseModel {
	return v.value
}

func (v *NullableStoreFrontServerResponseModel) Set(val *StoreFrontServerResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreFrontServerResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreFrontServerResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreFrontServerResponseModel(val *StoreFrontServerResponseModel) *NullableStoreFrontServerResponseModel {
	return &NullableStoreFrontServerResponseModel{value: val, isSet: true}
}

func (v NullableStoreFrontServerResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreFrontServerResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
