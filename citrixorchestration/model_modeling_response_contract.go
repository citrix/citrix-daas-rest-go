/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ModelingResponseContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelingResponseContract{}

// ModelingResponseContract Data contract for group policy modeling
type ModelingResponseContract struct {
	// Gets or sets Name
	Name *string `json:"Name,omitempty"`
	// Gets or sets User
	User *string `json:"User,omitempty"`
	// Gets or sets Machine
	Machine *string `json:"Machine,omitempty"`
	Result *ModelingResponseContractResult `json:"Result,omitempty"`
}

// NewModelingResponseContract instantiates a new ModelingResponseContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelingResponseContract() *ModelingResponseContract {
	this := ModelingResponseContract{}
	return &this
}

// NewModelingResponseContractWithDefaults instantiates a new ModelingResponseContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelingResponseContractWithDefaults() *ModelingResponseContract {
	this := ModelingResponseContract{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelingResponseContract) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContract) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelingResponseContract) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelingResponseContract) SetName(v string) {
	o.Name = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ModelingResponseContract) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContract) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ModelingResponseContract) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ModelingResponseContract) SetUser(v string) {
	o.User = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *ModelingResponseContract) GetMachine() string {
	if o == nil || IsNil(o.Machine) {
		var ret string
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContract) GetMachineOk() (*string, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *ModelingResponseContract) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given string and assigns it to the Machine field.
func (o *ModelingResponseContract) SetMachine(v string) {
	o.Machine = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ModelingResponseContract) GetResult() ModelingResponseContractResult {
	if o == nil || IsNil(o.Result) {
		var ret ModelingResponseContractResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContract) GetResultOk() (*ModelingResponseContractResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ModelingResponseContract) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ModelingResponseContractResult and assigns it to the Result field.
func (o *ModelingResponseContract) SetResult(v ModelingResponseContractResult) {
	o.Result = &v
}

func (o ModelingResponseContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelingResponseContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.User) {
		toSerialize["User"] = o.User
	}
	if !IsNil(o.Machine) {
		toSerialize["Machine"] = o.Machine
	}
	if !IsNil(o.Result) {
		toSerialize["Result"] = o.Result
	}
	return toSerialize, nil
}

type NullableModelingResponseContract struct {
	value *ModelingResponseContract
	isSet bool
}

func (v NullableModelingResponseContract) Get() *ModelingResponseContract {
	return v.value
}

func (v *NullableModelingResponseContract) Set(val *ModelingResponseContract) {
	v.value = val
	v.isSet = true
}

func (v NullableModelingResponseContract) IsSet() bool {
	return v.isSet
}

func (v *NullableModelingResponseContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelingResponseContract(val *ModelingResponseContract) *NullableModelingResponseContract {
	return &NullableModelingResponseContract{value: val, isSet: true}
}

func (v NullableModelingResponseContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelingResponseContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


