/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EnrollmentResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentResponseModel{}

// EnrollmentResponseModel Response object for a enrollment.
type EnrollmentResponseModel struct {
	// Gets or sets the unique id of this VDA enrollment token meta data object.
	Id *string `json:"Id,omitempty"`
	// Gets or sets the name used to more easily identify this VDA enrollment token.
	TokenName NullableString `json:"TokenName,omitempty"`
	// Gets or sets the unique id of the admin who created this VDA enrollment token meta data object.
	IssuerId NullableString `json:"IssuerId,omitempty"`
	// Gets or sets the name of the user to whom this VDA enrollment token meta data object is issued.
	IssuedToUser NullableString `json:"IssuedToUser,omitempty"`
	// Gets or sets the date this VDA enrollment token meta data object was created.
	DateIssued NullableString `json:"DateIssued,omitempty"`
	// Gets or sets the date this VDA enrollment token expires.
	ExpirationDate NullableString `json:"ExpirationDate,omitempty"`
	// Gets or sets the UTC date before which this VDA enrollment token will not be valid.
	NotValidBeforeDate NullableString `json:"NotValidBeforeDate,omitempty"`
	// Gets or sets the number of machines this VDA enrollment token allows to be added to the catalog.
	NumMachinesAllowed *int32 `json:"NumMachinesAllowed,omitempty"`
	// Gets or sets the Catalog Id that this VDA enrollment token allows machines to be added to.
	CatalogId NullableString `json:"CatalogId,omitempty"`
	// Gets or sets the flag indicating that this VDA enrollment token has been revoked.
	IsRevoked *bool `json:"IsRevoked,omitempty"`
	// Gets or sets the date this VDA enrollment token was last used to add a machine to a catalog.
	LastUsed NullableString `json:"LastUsed,omitempty"`
	// Gets or sets the number of times this token was used to attempt to add machines to the specified catalog.
	NumTimesUsed *int32 `json:"NumTimesUsed,omitempty"`
	// The JWT VDA enrollment token created from the  data properties.
	Token NullableString `json:"Token,omitempty"`
	// Gets or sets the HostConnectionId  which will be  used to determine how to handle power management.
	HostConnectionId NullableString `json:"HostConnectionId,omitempty"`
}

// NewEnrollmentResponseModel instantiates a new EnrollmentResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentResponseModel() *EnrollmentResponseModel {
	this := EnrollmentResponseModel{}
	return &this
}

// NewEnrollmentResponseModelWithDefaults instantiates a new EnrollmentResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentResponseModelWithDefaults() *EnrollmentResponseModel {
	this := EnrollmentResponseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnrollmentResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnrollmentResponseModel) SetId(v string) {
	o.Id = &v
}

// GetTokenName returns the TokenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetTokenName() string {
	if o == nil || IsNil(o.TokenName.Get()) {
		var ret string
		return ret
	}
	return *o.TokenName.Get()
}

// GetTokenNameOk returns a tuple with the TokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetTokenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenName.Get(), o.TokenName.IsSet()
}

// HasTokenName returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasTokenName() bool {
	if o != nil && o.TokenName.IsSet() {
		return true
	}

	return false
}

// SetTokenName gets a reference to the given NullableString and assigns it to the TokenName field.
func (o *EnrollmentResponseModel) SetTokenName(v string) {
	o.TokenName.Set(&v)
}
// SetTokenNameNil sets the value for TokenName to be an explicit nil
func (o *EnrollmentResponseModel) SetTokenNameNil() {
	o.TokenName.Set(nil)
}

// UnsetTokenName ensures that no value is present for TokenName, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetTokenName() {
	o.TokenName.Unset()
}

// GetIssuerId returns the IssuerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetIssuerId() string {
	if o == nil || IsNil(o.IssuerId.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerId.Get()
}

// GetIssuerIdOk returns a tuple with the IssuerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetIssuerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerId.Get(), o.IssuerId.IsSet()
}

// HasIssuerId returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasIssuerId() bool {
	if o != nil && o.IssuerId.IsSet() {
		return true
	}

	return false
}

// SetIssuerId gets a reference to the given NullableString and assigns it to the IssuerId field.
func (o *EnrollmentResponseModel) SetIssuerId(v string) {
	o.IssuerId.Set(&v)
}
// SetIssuerIdNil sets the value for IssuerId to be an explicit nil
func (o *EnrollmentResponseModel) SetIssuerIdNil() {
	o.IssuerId.Set(nil)
}

// UnsetIssuerId ensures that no value is present for IssuerId, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetIssuerId() {
	o.IssuerId.Unset()
}

// GetIssuedToUser returns the IssuedToUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetIssuedToUser() string {
	if o == nil || IsNil(o.IssuedToUser.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedToUser.Get()
}

// GetIssuedToUserOk returns a tuple with the IssuedToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetIssuedToUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedToUser.Get(), o.IssuedToUser.IsSet()
}

// HasIssuedToUser returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasIssuedToUser() bool {
	if o != nil && o.IssuedToUser.IsSet() {
		return true
	}

	return false
}

// SetIssuedToUser gets a reference to the given NullableString and assigns it to the IssuedToUser field.
func (o *EnrollmentResponseModel) SetIssuedToUser(v string) {
	o.IssuedToUser.Set(&v)
}
// SetIssuedToUserNil sets the value for IssuedToUser to be an explicit nil
func (o *EnrollmentResponseModel) SetIssuedToUserNil() {
	o.IssuedToUser.Set(nil)
}

// UnsetIssuedToUser ensures that no value is present for IssuedToUser, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetIssuedToUser() {
	o.IssuedToUser.Unset()
}

// GetDateIssued returns the DateIssued field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetDateIssued() string {
	if o == nil || IsNil(o.DateIssued.Get()) {
		var ret string
		return ret
	}
	return *o.DateIssued.Get()
}

// GetDateIssuedOk returns a tuple with the DateIssued field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetDateIssuedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateIssued.Get(), o.DateIssued.IsSet()
}

// HasDateIssued returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasDateIssued() bool {
	if o != nil && o.DateIssued.IsSet() {
		return true
	}

	return false
}

// SetDateIssued gets a reference to the given NullableString and assigns it to the DateIssued field.
func (o *EnrollmentResponseModel) SetDateIssued(v string) {
	o.DateIssued.Set(&v)
}
// SetDateIssuedNil sets the value for DateIssued to be an explicit nil
func (o *EnrollmentResponseModel) SetDateIssuedNil() {
	o.DateIssued.Set(nil)
}

// UnsetDateIssued ensures that no value is present for DateIssued, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetDateIssued() {
	o.DateIssued.Unset()
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate.Get()) {
		var ret string
		return ret
	}
	return *o.ExpirationDate.Get()
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpirationDate.Get(), o.ExpirationDate.IsSet()
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate.IsSet() {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given NullableString and assigns it to the ExpirationDate field.
func (o *EnrollmentResponseModel) SetExpirationDate(v string) {
	o.ExpirationDate.Set(&v)
}
// SetExpirationDateNil sets the value for ExpirationDate to be an explicit nil
func (o *EnrollmentResponseModel) SetExpirationDateNil() {
	o.ExpirationDate.Set(nil)
}

// UnsetExpirationDate ensures that no value is present for ExpirationDate, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetExpirationDate() {
	o.ExpirationDate.Unset()
}

// GetNotValidBeforeDate returns the NotValidBeforeDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetNotValidBeforeDate() string {
	if o == nil || IsNil(o.NotValidBeforeDate.Get()) {
		var ret string
		return ret
	}
	return *o.NotValidBeforeDate.Get()
}

// GetNotValidBeforeDateOk returns a tuple with the NotValidBeforeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetNotValidBeforeDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotValidBeforeDate.Get(), o.NotValidBeforeDate.IsSet()
}

// HasNotValidBeforeDate returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasNotValidBeforeDate() bool {
	if o != nil && o.NotValidBeforeDate.IsSet() {
		return true
	}

	return false
}

// SetNotValidBeforeDate gets a reference to the given NullableString and assigns it to the NotValidBeforeDate field.
func (o *EnrollmentResponseModel) SetNotValidBeforeDate(v string) {
	o.NotValidBeforeDate.Set(&v)
}
// SetNotValidBeforeDateNil sets the value for NotValidBeforeDate to be an explicit nil
func (o *EnrollmentResponseModel) SetNotValidBeforeDateNil() {
	o.NotValidBeforeDate.Set(nil)
}

// UnsetNotValidBeforeDate ensures that no value is present for NotValidBeforeDate, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetNotValidBeforeDate() {
	o.NotValidBeforeDate.Unset()
}

// GetNumMachinesAllowed returns the NumMachinesAllowed field value if set, zero value otherwise.
func (o *EnrollmentResponseModel) GetNumMachinesAllowed() int32 {
	if o == nil || IsNil(o.NumMachinesAllowed) {
		var ret int32
		return ret
	}
	return *o.NumMachinesAllowed
}

// GetNumMachinesAllowedOk returns a tuple with the NumMachinesAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentResponseModel) GetNumMachinesAllowedOk() (*int32, bool) {
	if o == nil || IsNil(o.NumMachinesAllowed) {
		return nil, false
	}
	return o.NumMachinesAllowed, true
}

// HasNumMachinesAllowed returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasNumMachinesAllowed() bool {
	if o != nil && !IsNil(o.NumMachinesAllowed) {
		return true
	}

	return false
}

// SetNumMachinesAllowed gets a reference to the given int32 and assigns it to the NumMachinesAllowed field.
func (o *EnrollmentResponseModel) SetNumMachinesAllowed(v int32) {
	o.NumMachinesAllowed = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogId.Get()
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetCatalogIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogId.Get(), o.CatalogId.IsSet()
}

// HasCatalogId returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasCatalogId() bool {
	if o != nil && o.CatalogId.IsSet() {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given NullableString and assigns it to the CatalogId field.
func (o *EnrollmentResponseModel) SetCatalogId(v string) {
	o.CatalogId.Set(&v)
}
// SetCatalogIdNil sets the value for CatalogId to be an explicit nil
func (o *EnrollmentResponseModel) SetCatalogIdNil() {
	o.CatalogId.Set(nil)
}

// UnsetCatalogId ensures that no value is present for CatalogId, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetCatalogId() {
	o.CatalogId.Unset()
}

// GetIsRevoked returns the IsRevoked field value if set, zero value otherwise.
func (o *EnrollmentResponseModel) GetIsRevoked() bool {
	if o == nil || IsNil(o.IsRevoked) {
		var ret bool
		return ret
	}
	return *o.IsRevoked
}

// GetIsRevokedOk returns a tuple with the IsRevoked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentResponseModel) GetIsRevokedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRevoked) {
		return nil, false
	}
	return o.IsRevoked, true
}

// HasIsRevoked returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasIsRevoked() bool {
	if o != nil && !IsNil(o.IsRevoked) {
		return true
	}

	return false
}

// SetIsRevoked gets a reference to the given bool and assigns it to the IsRevoked field.
func (o *EnrollmentResponseModel) SetIsRevoked(v bool) {
	o.IsRevoked = &v
}

// GetLastUsed returns the LastUsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetLastUsed() string {
	if o == nil || IsNil(o.LastUsed.Get()) {
		var ret string
		return ret
	}
	return *o.LastUsed.Get()
}

// GetLastUsedOk returns a tuple with the LastUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetLastUsedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUsed.Get(), o.LastUsed.IsSet()
}

// HasLastUsed returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasLastUsed() bool {
	if o != nil && o.LastUsed.IsSet() {
		return true
	}

	return false
}

// SetLastUsed gets a reference to the given NullableString and assigns it to the LastUsed field.
func (o *EnrollmentResponseModel) SetLastUsed(v string) {
	o.LastUsed.Set(&v)
}
// SetLastUsedNil sets the value for LastUsed to be an explicit nil
func (o *EnrollmentResponseModel) SetLastUsedNil() {
	o.LastUsed.Set(nil)
}

// UnsetLastUsed ensures that no value is present for LastUsed, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetLastUsed() {
	o.LastUsed.Unset()
}

// GetNumTimesUsed returns the NumTimesUsed field value if set, zero value otherwise.
func (o *EnrollmentResponseModel) GetNumTimesUsed() int32 {
	if o == nil || IsNil(o.NumTimesUsed) {
		var ret int32
		return ret
	}
	return *o.NumTimesUsed
}

// GetNumTimesUsedOk returns a tuple with the NumTimesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentResponseModel) GetNumTimesUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.NumTimesUsed) {
		return nil, false
	}
	return o.NumTimesUsed, true
}

// HasNumTimesUsed returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasNumTimesUsed() bool {
	if o != nil && !IsNil(o.NumTimesUsed) {
		return true
	}

	return false
}

// SetNumTimesUsed gets a reference to the given int32 and assigns it to the NumTimesUsed field.
func (o *EnrollmentResponseModel) SetNumTimesUsed(v int32) {
	o.NumTimesUsed = &v
}

// GetToken returns the Token field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetToken() string {
	if o == nil || IsNil(o.Token.Get()) {
		var ret string
		return ret
	}
	return *o.Token.Get()
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Token.Get(), o.Token.IsSet()
}

// HasToken returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasToken() bool {
	if o != nil && o.Token.IsSet() {
		return true
	}

	return false
}

// SetToken gets a reference to the given NullableString and assigns it to the Token field.
func (o *EnrollmentResponseModel) SetToken(v string) {
	o.Token.Set(&v)
}
// SetTokenNil sets the value for Token to be an explicit nil
func (o *EnrollmentResponseModel) SetTokenNil() {
	o.Token.Set(nil)
}

// UnsetToken ensures that no value is present for Token, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetToken() {
	o.Token.Unset()
}

// GetHostConnectionId returns the HostConnectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnrollmentResponseModel) GetHostConnectionId() string {
	if o == nil || IsNil(o.HostConnectionId.Get()) {
		var ret string
		return ret
	}
	return *o.HostConnectionId.Get()
}

// GetHostConnectionIdOk returns a tuple with the HostConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnrollmentResponseModel) GetHostConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostConnectionId.Get(), o.HostConnectionId.IsSet()
}

// HasHostConnectionId returns a boolean if a field has been set.
func (o *EnrollmentResponseModel) HasHostConnectionId() bool {
	if o != nil && o.HostConnectionId.IsSet() {
		return true
	}

	return false
}

// SetHostConnectionId gets a reference to the given NullableString and assigns it to the HostConnectionId field.
func (o *EnrollmentResponseModel) SetHostConnectionId(v string) {
	o.HostConnectionId.Set(&v)
}
// SetHostConnectionIdNil sets the value for HostConnectionId to be an explicit nil
func (o *EnrollmentResponseModel) SetHostConnectionIdNil() {
	o.HostConnectionId.Set(nil)
}

// UnsetHostConnectionId ensures that no value is present for HostConnectionId, not even an explicit nil
func (o *EnrollmentResponseModel) UnsetHostConnectionId() {
	o.HostConnectionId.Unset()
}

func (o EnrollmentResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.TokenName.IsSet() {
		toSerialize["TokenName"] = o.TokenName.Get()
	}
	if o.IssuerId.IsSet() {
		toSerialize["IssuerId"] = o.IssuerId.Get()
	}
	if o.IssuedToUser.IsSet() {
		toSerialize["IssuedToUser"] = o.IssuedToUser.Get()
	}
	if o.DateIssued.IsSet() {
		toSerialize["DateIssued"] = o.DateIssued.Get()
	}
	if o.ExpirationDate.IsSet() {
		toSerialize["ExpirationDate"] = o.ExpirationDate.Get()
	}
	if o.NotValidBeforeDate.IsSet() {
		toSerialize["NotValidBeforeDate"] = o.NotValidBeforeDate.Get()
	}
	if !IsNil(o.NumMachinesAllowed) {
		toSerialize["NumMachinesAllowed"] = o.NumMachinesAllowed
	}
	if o.CatalogId.IsSet() {
		toSerialize["CatalogId"] = o.CatalogId.Get()
	}
	if !IsNil(o.IsRevoked) {
		toSerialize["IsRevoked"] = o.IsRevoked
	}
	if o.LastUsed.IsSet() {
		toSerialize["LastUsed"] = o.LastUsed.Get()
	}
	if !IsNil(o.NumTimesUsed) {
		toSerialize["NumTimesUsed"] = o.NumTimesUsed
	}
	if o.Token.IsSet() {
		toSerialize["Token"] = o.Token.Get()
	}
	if o.HostConnectionId.IsSet() {
		toSerialize["HostConnectionId"] = o.HostConnectionId.Get()
	}
	return toSerialize, nil
}

type NullableEnrollmentResponseModel struct {
	value *EnrollmentResponseModel
	isSet bool
}

func (v NullableEnrollmentResponseModel) Get() *EnrollmentResponseModel {
	return v.value
}

func (v *NullableEnrollmentResponseModel) Set(val *EnrollmentResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentResponseModel(val *EnrollmentResponseModel) *NullableEnrollmentResponseModel {
	return &NullableEnrollmentResponseModel{value: val, isSet: true}
}

func (v NullableEnrollmentResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


