/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DailyCostItemResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyCostItemResponseModel{}

// DailyCostItemResponseModel The response model for the daily cost item.
type DailyCostItemResponseModel struct {
	// The date of the usage.
	UsageDate *int64 `json:"UsageDate,omitempty"`
	// The cost of the resources.
	ResourceCostItems []ResourceCostItemResponseModel `json:"ResourceCostItems,omitempty"`
}

// NewDailyCostItemResponseModel instantiates a new DailyCostItemResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyCostItemResponseModel() *DailyCostItemResponseModel {
	this := DailyCostItemResponseModel{}
	return &this
}

// NewDailyCostItemResponseModelWithDefaults instantiates a new DailyCostItemResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyCostItemResponseModelWithDefaults() *DailyCostItemResponseModel {
	this := DailyCostItemResponseModel{}
	return &this
}

// GetUsageDate returns the UsageDate field value if set, zero value otherwise.
func (o *DailyCostItemResponseModel) GetUsageDate() int64 {
	if o == nil || IsNil(o.UsageDate) {
		var ret int64
		return ret
	}
	return *o.UsageDate
}

// GetUsageDateOk returns a tuple with the UsageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyCostItemResponseModel) GetUsageDateOk() (*int64, bool) {
	if o == nil || IsNil(o.UsageDate) {
		return nil, false
	}
	return o.UsageDate, true
}

// HasUsageDate returns a boolean if a field has been set.
func (o *DailyCostItemResponseModel) HasUsageDate() bool {
	if o != nil && !IsNil(o.UsageDate) {
		return true
	}

	return false
}

// SetUsageDate gets a reference to the given int64 and assigns it to the UsageDate field.
func (o *DailyCostItemResponseModel) SetUsageDate(v int64) {
	o.UsageDate = &v
}

// GetResourceCostItems returns the ResourceCostItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DailyCostItemResponseModel) GetResourceCostItems() []ResourceCostItemResponseModel {
	if o == nil {
		var ret []ResourceCostItemResponseModel
		return ret
	}
	return o.ResourceCostItems
}

// GetResourceCostItemsOk returns a tuple with the ResourceCostItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyCostItemResponseModel) GetResourceCostItemsOk() ([]ResourceCostItemResponseModel, bool) {
	if o == nil || IsNil(o.ResourceCostItems) {
		return nil, false
	}
	return o.ResourceCostItems, true
}

// HasResourceCostItems returns a boolean if a field has been set.
func (o *DailyCostItemResponseModel) HasResourceCostItems() bool {
	if o != nil && !IsNil(o.ResourceCostItems) {
		return true
	}

	return false
}

// SetResourceCostItems gets a reference to the given []ResourceCostItemResponseModel and assigns it to the ResourceCostItems field.
func (o *DailyCostItemResponseModel) SetResourceCostItems(v []ResourceCostItemResponseModel) {
	o.ResourceCostItems = v
}

func (o DailyCostItemResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyCostItemResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UsageDate) {
		toSerialize["UsageDate"] = o.UsageDate
	}
	if o.ResourceCostItems != nil {
		toSerialize["ResourceCostItems"] = o.ResourceCostItems
	}
	return toSerialize, nil
}

type NullableDailyCostItemResponseModel struct {
	value *DailyCostItemResponseModel
	isSet bool
}

func (v NullableDailyCostItemResponseModel) Get() *DailyCostItemResponseModel {
	return v.value
}

func (v *NullableDailyCostItemResponseModel) Set(val *DailyCostItemResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyCostItemResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyCostItemResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyCostItemResponseModel(val *DailyCostItemResponseModel) *NullableDailyCostItemResponseModel {
	return &NullableDailyCostItemResponseModel{value: val, isSet: true}
}

func (v NullableDailyCostItemResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyCostItemResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
