/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AdvancedAccessPolicyRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvancedAccessPolicyRequestModel{}

// AdvancedAccessPolicyRequestModel Request object for creating or updating an advanced access policy.
type AdvancedAccessPolicyRequestModel struct {
	// Id of the broker access policy.
	Id NullableString `json:"Id,omitempty"`
	// Name of the advanced access policy.
	Name NullableString `json:"Name,omitempty"`
	// Whether to allow connections using HDX. Was: AllowsHdxAccess
	AllowHdxAccess NullableBool `json:"AllowHdxAccess,omitempty"`
	// Whether to allow users to self-service restart machines.
	AllowMachineRestart NullableBool `json:"AllowMachineRestart,omitempty"`
	// Whether to allow connections using RDP. Was: AllowsRdpAccess
	AllowRdpAccess NullableBool `json:"AllowRdpAccess,omitempty"`
	AllowedConnection *AllowedConnection `json:"AllowedConnection,omitempty"`
	AllowedUsers *AllowedUser `json:"AllowedUsers,omitempty"`
	// Description.
	Description NullableString `json:"Description,omitempty"`
	// Whether the advanced access policy is enabled.  If a policy is disabled it is not considered when evaluating whether a user may access the delivery group.
	Enabled NullableBool `json:"Enabled,omitempty"`
	// Specifies whether the ExcludedClientIPs filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedClientIPFilterEnabled NullableBool `json:"ExcludedClientIPFilterEnabled,omitempty"`
	// Specifies the client IPs which will be denied access to the delivery group.
	ExcludedClientIPs []string `json:"ExcludedClientIPs,omitempty"`
	// Specifies whether the ExcludedClientNames filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedClientNameFilterEnabled NullableBool `json:"ExcludedClientNameFilterEnabled,omitempty"`
	// Specifies the client names which will be denied access to the delivery group. Validation: each specified item must have a maximum length and regex match
	ExcludedClientNames []string `json:"ExcludedClientNames,omitempty"`
	// Specifies whether the ExcludedSmartAccessTags filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedSmartAccessFilterEnabled NullableBool `json:"ExcludedSmartAccessFilterEnabled,omitempty"`
	// Specifies the SmartAccess tags which will be denied access to the delivery group, if any occur in those provided by NetScaler Gateway with the user's connection.
	ExcludedSmartAccessTags []SmartAccessTagRequestModel `json:"ExcludedSmartAccessTags,omitempty"`
	// Specifies whether the ExcludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedUserFilterEnabled NullableBool `json:"ExcludedUserFilterEnabled,omitempty"`
	// Specifies the users and groups who are denied access to the delivery group.
	ExcludedUsers []string `json:"ExcludedUsers,omitempty"`
	// Specifies whether the IncludedClientIPs filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedClientIPFilterEnabled NullableBool `json:"IncludedClientIPFilterEnabled,omitempty"`
	// Specifies the client IPs which will be allowed access to the delivery group.
	IncludedClientIPs []string `json:"IncludedClientIPs,omitempty"`
	// Specifies whether the IncludedClientNames filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedClientNameFilterEnabled NullableBool `json:"IncludedClientNameFilterEnabled,omitempty"`
	// Specifies the client names which will be granted access to the delivery group. Validation: each specified item must have a maximum length and regex match
	IncludedClientNames []string `json:"IncludedClientNames,omitempty"`
	// Specifies whether the IncludedSmartAccessTags filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedSmartAccessFilterEnabled NullableBool `json:"IncludedSmartAccessFilterEnabled,omitempty"`
	// Specifies the SmartAccess tags which grant access to the delivery group, if any occur in those provided by NetScaler Gateway with the user's connection.
	IncludedSmartAccessTags []SmartAccessTagRequestModel `json:"IncludedSmartAccessTags,omitempty"`
	IncludedSmartAccessFilterType *FilterMatchType `json:"IncludedSmartAccessFilterType,omitempty"`
	// Specifies whether the IncludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedUserFilterEnabled NullableBool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the users and groups who are granted access to the delivery group.
	IncludedUsers []string `json:"IncludedUsers,omitempty"`
}

// NewAdvancedAccessPolicyRequestModel instantiates a new AdvancedAccessPolicyRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedAccessPolicyRequestModel() *AdvancedAccessPolicyRequestModel {
	this := AdvancedAccessPolicyRequestModel{}
	var allowHdxAccess bool = true
	this.AllowHdxAccess = *NewNullableBool(&allowHdxAccess)
	var allowMachineRestart bool = true
	this.AllowMachineRestart = *NewNullableBool(&allowMachineRestart)
	var allowRdpAccess bool = true
	this.AllowRdpAccess = *NewNullableBool(&allowRdpAccess)
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	return &this
}

// NewAdvancedAccessPolicyRequestModelWithDefaults instantiates a new AdvancedAccessPolicyRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedAccessPolicyRequestModelWithDefaults() *AdvancedAccessPolicyRequestModel {
	this := AdvancedAccessPolicyRequestModel{}
	var allowHdxAccess bool = true
	this.AllowHdxAccess = *NewNullableBool(&allowHdxAccess)
	var allowMachineRestart bool = true
	this.AllowMachineRestart = *NewNullableBool(&allowMachineRestart)
	var allowRdpAccess bool = true
	this.AllowRdpAccess = *NewNullableBool(&allowRdpAccess)
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *AdvancedAccessPolicyRequestModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AdvancedAccessPolicyRequestModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetAllowHdxAccess returns the AllowHdxAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetAllowHdxAccess() bool {
	if o == nil || IsNil(o.AllowHdxAccess.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowHdxAccess.Get()
}

// GetAllowHdxAccessOk returns a tuple with the AllowHdxAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetAllowHdxAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowHdxAccess.Get(), o.AllowHdxAccess.IsSet()
}

// HasAllowHdxAccess returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasAllowHdxAccess() bool {
	if o != nil && o.AllowHdxAccess.IsSet() {
		return true
	}

	return false
}

// SetAllowHdxAccess gets a reference to the given NullableBool and assigns it to the AllowHdxAccess field.
func (o *AdvancedAccessPolicyRequestModel) SetAllowHdxAccess(v bool) {
	o.AllowHdxAccess.Set(&v)
}
// SetAllowHdxAccessNil sets the value for AllowHdxAccess to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetAllowHdxAccessNil() {
	o.AllowHdxAccess.Set(nil)
}

// UnsetAllowHdxAccess ensures that no value is present for AllowHdxAccess, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetAllowHdxAccess() {
	o.AllowHdxAccess.Unset()
}

// GetAllowMachineRestart returns the AllowMachineRestart field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetAllowMachineRestart() bool {
	if o == nil || IsNil(o.AllowMachineRestart.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowMachineRestart.Get()
}

// GetAllowMachineRestartOk returns a tuple with the AllowMachineRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetAllowMachineRestartOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowMachineRestart.Get(), o.AllowMachineRestart.IsSet()
}

// HasAllowMachineRestart returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasAllowMachineRestart() bool {
	if o != nil && o.AllowMachineRestart.IsSet() {
		return true
	}

	return false
}

// SetAllowMachineRestart gets a reference to the given NullableBool and assigns it to the AllowMachineRestart field.
func (o *AdvancedAccessPolicyRequestModel) SetAllowMachineRestart(v bool) {
	o.AllowMachineRestart.Set(&v)
}
// SetAllowMachineRestartNil sets the value for AllowMachineRestart to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetAllowMachineRestartNil() {
	o.AllowMachineRestart.Set(nil)
}

// UnsetAllowMachineRestart ensures that no value is present for AllowMachineRestart, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetAllowMachineRestart() {
	o.AllowMachineRestart.Unset()
}

// GetAllowRdpAccess returns the AllowRdpAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetAllowRdpAccess() bool {
	if o == nil || IsNil(o.AllowRdpAccess.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowRdpAccess.Get()
}

// GetAllowRdpAccessOk returns a tuple with the AllowRdpAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetAllowRdpAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowRdpAccess.Get(), o.AllowRdpAccess.IsSet()
}

// HasAllowRdpAccess returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasAllowRdpAccess() bool {
	if o != nil && o.AllowRdpAccess.IsSet() {
		return true
	}

	return false
}

// SetAllowRdpAccess gets a reference to the given NullableBool and assigns it to the AllowRdpAccess field.
func (o *AdvancedAccessPolicyRequestModel) SetAllowRdpAccess(v bool) {
	o.AllowRdpAccess.Set(&v)
}
// SetAllowRdpAccessNil sets the value for AllowRdpAccess to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetAllowRdpAccessNil() {
	o.AllowRdpAccess.Set(nil)
}

// UnsetAllowRdpAccess ensures that no value is present for AllowRdpAccess, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetAllowRdpAccess() {
	o.AllowRdpAccess.Unset()
}

// GetAllowedConnection returns the AllowedConnection field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyRequestModel) GetAllowedConnection() AllowedConnection {
	if o == nil || IsNil(o.AllowedConnection) {
		var ret AllowedConnection
		return ret
	}
	return *o.AllowedConnection
}

// GetAllowedConnectionOk returns a tuple with the AllowedConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyRequestModel) GetAllowedConnectionOk() (*AllowedConnection, bool) {
	if o == nil || IsNil(o.AllowedConnection) {
		return nil, false
	}
	return o.AllowedConnection, true
}

// HasAllowedConnection returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasAllowedConnection() bool {
	if o != nil && !IsNil(o.AllowedConnection) {
		return true
	}

	return false
}

// SetAllowedConnection gets a reference to the given AllowedConnection and assigns it to the AllowedConnection field.
func (o *AdvancedAccessPolicyRequestModel) SetAllowedConnection(v AllowedConnection) {
	o.AllowedConnection = &v
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyRequestModel) GetAllowedUsers() AllowedUser {
	if o == nil || IsNil(o.AllowedUsers) {
		var ret AllowedUser
		return ret
	}
	return *o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyRequestModel) GetAllowedUsersOk() (*AllowedUser, bool) {
	if o == nil || IsNil(o.AllowedUsers) {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasAllowedUsers() bool {
	if o != nil && !IsNil(o.AllowedUsers) {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given AllowedUser and assigns it to the AllowedUsers field.
func (o *AdvancedAccessPolicyRequestModel) SetAllowedUsers(v AllowedUser) {
	o.AllowedUsers = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AdvancedAccessPolicyRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *AdvancedAccessPolicyRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}
// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetExcludedClientIPFilterEnabled returns the ExcludedClientIPFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientIPFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedClientIPFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludedClientIPFilterEnabled.Get()
}

// GetExcludedClientIPFilterEnabledOk returns a tuple with the ExcludedClientIPFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientIPFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludedClientIPFilterEnabled.Get(), o.ExcludedClientIPFilterEnabled.IsSet()
}

// HasExcludedClientIPFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedClientIPFilterEnabled() bool {
	if o != nil && o.ExcludedClientIPFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetExcludedClientIPFilterEnabled gets a reference to the given NullableBool and assigns it to the ExcludedClientIPFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientIPFilterEnabled(v bool) {
	o.ExcludedClientIPFilterEnabled.Set(&v)
}
// SetExcludedClientIPFilterEnabledNil sets the value for ExcludedClientIPFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientIPFilterEnabledNil() {
	o.ExcludedClientIPFilterEnabled.Set(nil)
}

// UnsetExcludedClientIPFilterEnabled ensures that no value is present for ExcludedClientIPFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetExcludedClientIPFilterEnabled() {
	o.ExcludedClientIPFilterEnabled.Unset()
}

// GetExcludedClientIPs returns the ExcludedClientIPs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientIPs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludedClientIPs
}

// GetExcludedClientIPsOk returns a tuple with the ExcludedClientIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedClientIPs) {
		return nil, false
	}
	return o.ExcludedClientIPs, true
}

// HasExcludedClientIPs returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedClientIPs() bool {
	if o != nil && IsNil(o.ExcludedClientIPs) {
		return true
	}

	return false
}

// SetExcludedClientIPs gets a reference to the given []string and assigns it to the ExcludedClientIPs field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientIPs(v []string) {
	o.ExcludedClientIPs = v
}

// GetExcludedClientNameFilterEnabled returns the ExcludedClientNameFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientNameFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedClientNameFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludedClientNameFilterEnabled.Get()
}

// GetExcludedClientNameFilterEnabledOk returns a tuple with the ExcludedClientNameFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientNameFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludedClientNameFilterEnabled.Get(), o.ExcludedClientNameFilterEnabled.IsSet()
}

// HasExcludedClientNameFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedClientNameFilterEnabled() bool {
	if o != nil && o.ExcludedClientNameFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetExcludedClientNameFilterEnabled gets a reference to the given NullableBool and assigns it to the ExcludedClientNameFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientNameFilterEnabled(v bool) {
	o.ExcludedClientNameFilterEnabled.Set(&v)
}
// SetExcludedClientNameFilterEnabledNil sets the value for ExcludedClientNameFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientNameFilterEnabledNil() {
	o.ExcludedClientNameFilterEnabled.Set(nil)
}

// UnsetExcludedClientNameFilterEnabled ensures that no value is present for ExcludedClientNameFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetExcludedClientNameFilterEnabled() {
	o.ExcludedClientNameFilterEnabled.Unset()
}

// GetExcludedClientNames returns the ExcludedClientNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludedClientNames
}

// GetExcludedClientNamesOk returns a tuple with the ExcludedClientNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedClientNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedClientNames) {
		return nil, false
	}
	return o.ExcludedClientNames, true
}

// HasExcludedClientNames returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedClientNames() bool {
	if o != nil && IsNil(o.ExcludedClientNames) {
		return true
	}

	return false
}

// SetExcludedClientNames gets a reference to the given []string and assigns it to the ExcludedClientNames field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedClientNames(v []string) {
	o.ExcludedClientNames = v
}

// GetExcludedSmartAccessFilterEnabled returns the ExcludedSmartAccessFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedSmartAccessFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedSmartAccessFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludedSmartAccessFilterEnabled.Get()
}

// GetExcludedSmartAccessFilterEnabledOk returns a tuple with the ExcludedSmartAccessFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedSmartAccessFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludedSmartAccessFilterEnabled.Get(), o.ExcludedSmartAccessFilterEnabled.IsSet()
}

// HasExcludedSmartAccessFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedSmartAccessFilterEnabled() bool {
	if o != nil && o.ExcludedSmartAccessFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetExcludedSmartAccessFilterEnabled gets a reference to the given NullableBool and assigns it to the ExcludedSmartAccessFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedSmartAccessFilterEnabled(v bool) {
	o.ExcludedSmartAccessFilterEnabled.Set(&v)
}
// SetExcludedSmartAccessFilterEnabledNil sets the value for ExcludedSmartAccessFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetExcludedSmartAccessFilterEnabledNil() {
	o.ExcludedSmartAccessFilterEnabled.Set(nil)
}

// UnsetExcludedSmartAccessFilterEnabled ensures that no value is present for ExcludedSmartAccessFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetExcludedSmartAccessFilterEnabled() {
	o.ExcludedSmartAccessFilterEnabled.Unset()
}

// GetExcludedSmartAccessTags returns the ExcludedSmartAccessTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedSmartAccessTags() []SmartAccessTagRequestModel {
	if o == nil {
		var ret []SmartAccessTagRequestModel
		return ret
	}
	return o.ExcludedSmartAccessTags
}

// GetExcludedSmartAccessTagsOk returns a tuple with the ExcludedSmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedSmartAccessTagsOk() ([]SmartAccessTagRequestModel, bool) {
	if o == nil || IsNil(o.ExcludedSmartAccessTags) {
		return nil, false
	}
	return o.ExcludedSmartAccessTags, true
}

// HasExcludedSmartAccessTags returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedSmartAccessTags() bool {
	if o != nil && IsNil(o.ExcludedSmartAccessTags) {
		return true
	}

	return false
}

// SetExcludedSmartAccessTags gets a reference to the given []SmartAccessTagRequestModel and assigns it to the ExcludedSmartAccessTags field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedSmartAccessTags(v []SmartAccessTagRequestModel) {
	o.ExcludedSmartAccessTags = v
}

// GetExcludedUserFilterEnabled returns the ExcludedUserFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.ExcludedUserFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.ExcludedUserFilterEnabled.Get()
}

// GetExcludedUserFilterEnabledOk returns a tuple with the ExcludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExcludedUserFilterEnabled.Get(), o.ExcludedUserFilterEnabled.IsSet()
}

// HasExcludedUserFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedUserFilterEnabled() bool {
	if o != nil && o.ExcludedUserFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetExcludedUserFilterEnabled gets a reference to the given NullableBool and assigns it to the ExcludedUserFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedUserFilterEnabled(v bool) {
	o.ExcludedUserFilterEnabled.Set(&v)
}
// SetExcludedUserFilterEnabledNil sets the value for ExcludedUserFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetExcludedUserFilterEnabledNil() {
	o.ExcludedUserFilterEnabled.Set(nil)
}

// UnsetExcludedUserFilterEnabled ensures that no value is present for ExcludedUserFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetExcludedUserFilterEnabled() {
	o.ExcludedUserFilterEnabled.Unset()
}

// GetExcludedUsers returns the ExcludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetExcludedUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludedUsers
}

// GetExcludedUsersOk returns a tuple with the ExcludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetExcludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedUsers) {
		return nil, false
	}
	return o.ExcludedUsers, true
}

// HasExcludedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasExcludedUsers() bool {
	if o != nil && IsNil(o.ExcludedUsers) {
		return true
	}

	return false
}

// SetExcludedUsers gets a reference to the given []string and assigns it to the ExcludedUsers field.
func (o *AdvancedAccessPolicyRequestModel) SetExcludedUsers(v []string) {
	o.ExcludedUsers = v
}

// GetIncludedClientIPFilterEnabled returns the IncludedClientIPFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientIPFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedClientIPFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedClientIPFilterEnabled.Get()
}

// GetIncludedClientIPFilterEnabledOk returns a tuple with the IncludedClientIPFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientIPFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedClientIPFilterEnabled.Get(), o.IncludedClientIPFilterEnabled.IsSet()
}

// HasIncludedClientIPFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedClientIPFilterEnabled() bool {
	if o != nil && o.IncludedClientIPFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedClientIPFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedClientIPFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientIPFilterEnabled(v bool) {
	o.IncludedClientIPFilterEnabled.Set(&v)
}
// SetIncludedClientIPFilterEnabledNil sets the value for IncludedClientIPFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientIPFilterEnabledNil() {
	o.IncludedClientIPFilterEnabled.Set(nil)
}

// UnsetIncludedClientIPFilterEnabled ensures that no value is present for IncludedClientIPFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetIncludedClientIPFilterEnabled() {
	o.IncludedClientIPFilterEnabled.Unset()
}

// GetIncludedClientIPs returns the IncludedClientIPs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientIPs() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedClientIPs
}

// GetIncludedClientIPsOk returns a tuple with the IncludedClientIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedClientIPs) {
		return nil, false
	}
	return o.IncludedClientIPs, true
}

// HasIncludedClientIPs returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedClientIPs() bool {
	if o != nil && IsNil(o.IncludedClientIPs) {
		return true
	}

	return false
}

// SetIncludedClientIPs gets a reference to the given []string and assigns it to the IncludedClientIPs field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientIPs(v []string) {
	o.IncludedClientIPs = v
}

// GetIncludedClientNameFilterEnabled returns the IncludedClientNameFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientNameFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedClientNameFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedClientNameFilterEnabled.Get()
}

// GetIncludedClientNameFilterEnabledOk returns a tuple with the IncludedClientNameFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientNameFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedClientNameFilterEnabled.Get(), o.IncludedClientNameFilterEnabled.IsSet()
}

// HasIncludedClientNameFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedClientNameFilterEnabled() bool {
	if o != nil && o.IncludedClientNameFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedClientNameFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedClientNameFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientNameFilterEnabled(v bool) {
	o.IncludedClientNameFilterEnabled.Set(&v)
}
// SetIncludedClientNameFilterEnabledNil sets the value for IncludedClientNameFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientNameFilterEnabledNil() {
	o.IncludedClientNameFilterEnabled.Set(nil)
}

// UnsetIncludedClientNameFilterEnabled ensures that no value is present for IncludedClientNameFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetIncludedClientNameFilterEnabled() {
	o.IncludedClientNameFilterEnabled.Unset()
}

// GetIncludedClientNames returns the IncludedClientNames field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientNames() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedClientNames
}

// GetIncludedClientNamesOk returns a tuple with the IncludedClientNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedClientNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedClientNames) {
		return nil, false
	}
	return o.IncludedClientNames, true
}

// HasIncludedClientNames returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedClientNames() bool {
	if o != nil && IsNil(o.IncludedClientNames) {
		return true
	}

	return false
}

// SetIncludedClientNames gets a reference to the given []string and assigns it to the IncludedClientNames field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedClientNames(v []string) {
	o.IncludedClientNames = v
}

// GetIncludedSmartAccessFilterEnabled returns the IncludedSmartAccessFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedSmartAccessFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedSmartAccessFilterEnabled.Get()
}

// GetIncludedSmartAccessFilterEnabledOk returns a tuple with the IncludedSmartAccessFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedSmartAccessFilterEnabled.Get(), o.IncludedSmartAccessFilterEnabled.IsSet()
}

// HasIncludedSmartAccessFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedSmartAccessFilterEnabled() bool {
	if o != nil && o.IncludedSmartAccessFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedSmartAccessFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedSmartAccessFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedSmartAccessFilterEnabled(v bool) {
	o.IncludedSmartAccessFilterEnabled.Set(&v)
}
// SetIncludedSmartAccessFilterEnabledNil sets the value for IncludedSmartAccessFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetIncludedSmartAccessFilterEnabledNil() {
	o.IncludedSmartAccessFilterEnabled.Set(nil)
}

// UnsetIncludedSmartAccessFilterEnabled ensures that no value is present for IncludedSmartAccessFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetIncludedSmartAccessFilterEnabled() {
	o.IncludedSmartAccessFilterEnabled.Unset()
}

// GetIncludedSmartAccessTags returns the IncludedSmartAccessTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessTags() []SmartAccessTagRequestModel {
	if o == nil {
		var ret []SmartAccessTagRequestModel
		return ret
	}
	return o.IncludedSmartAccessTags
}

// GetIncludedSmartAccessTagsOk returns a tuple with the IncludedSmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessTagsOk() ([]SmartAccessTagRequestModel, bool) {
	if o == nil || IsNil(o.IncludedSmartAccessTags) {
		return nil, false
	}
	return o.IncludedSmartAccessTags, true
}

// HasIncludedSmartAccessTags returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedSmartAccessTags() bool {
	if o != nil && IsNil(o.IncludedSmartAccessTags) {
		return true
	}

	return false
}

// SetIncludedSmartAccessTags gets a reference to the given []SmartAccessTagRequestModel and assigns it to the IncludedSmartAccessTags field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedSmartAccessTags(v []SmartAccessTagRequestModel) {
	o.IncludedSmartAccessTags = v
}

// GetIncludedSmartAccessFilterType returns the IncludedSmartAccessFilterType field value if set, zero value otherwise.
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessFilterType() FilterMatchType {
	if o == nil || IsNil(o.IncludedSmartAccessFilterType) {
		var ret FilterMatchType
		return ret
	}
	return *o.IncludedSmartAccessFilterType
}

// GetIncludedSmartAccessFilterTypeOk returns a tuple with the IncludedSmartAccessFilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvancedAccessPolicyRequestModel) GetIncludedSmartAccessFilterTypeOk() (*FilterMatchType, bool) {
	if o == nil || IsNil(o.IncludedSmartAccessFilterType) {
		return nil, false
	}
	return o.IncludedSmartAccessFilterType, true
}

// HasIncludedSmartAccessFilterType returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedSmartAccessFilterType() bool {
	if o != nil && !IsNil(o.IncludedSmartAccessFilterType) {
		return true
	}

	return false
}

// SetIncludedSmartAccessFilterType gets a reference to the given FilterMatchType and assigns it to the IncludedSmartAccessFilterType field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedSmartAccessFilterType(v FilterMatchType) {
	o.IncludedSmartAccessFilterType = &v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled.Get()
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedUserFilterEnabled.Get(), o.IncludedUserFilterEnabled.IsSet()
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && o.IncludedUserFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedUserFilterEnabled field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled.Set(&v)
}
// SetIncludedUserFilterEnabledNil sets the value for IncludedUserFilterEnabled to be an explicit nil
func (o *AdvancedAccessPolicyRequestModel) SetIncludedUserFilterEnabledNil() {
	o.IncludedUserFilterEnabled.Set(nil)
}

// UnsetIncludedUserFilterEnabled ensures that no value is present for IncludedUserFilterEnabled, not even an explicit nil
func (o *AdvancedAccessPolicyRequestModel) UnsetIncludedUserFilterEnabled() {
	o.IncludedUserFilterEnabled.Unset()
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdvancedAccessPolicyRequestModel) GetIncludedUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdvancedAccessPolicyRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *AdvancedAccessPolicyRequestModel) HasIncludedUsers() bool {
	if o != nil && IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *AdvancedAccessPolicyRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

func (o AdvancedAccessPolicyRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvancedAccessPolicyRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.AllowHdxAccess.IsSet() {
		toSerialize["AllowHdxAccess"] = o.AllowHdxAccess.Get()
	}
	if o.AllowMachineRestart.IsSet() {
		toSerialize["AllowMachineRestart"] = o.AllowMachineRestart.Get()
	}
	if o.AllowRdpAccess.IsSet() {
		toSerialize["AllowRdpAccess"] = o.AllowRdpAccess.Get()
	}
	if !IsNil(o.AllowedConnection) {
		toSerialize["AllowedConnection"] = o.AllowedConnection
	}
	if !IsNil(o.AllowedUsers) {
		toSerialize["AllowedUsers"] = o.AllowedUsers
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	if o.ExcludedClientIPFilterEnabled.IsSet() {
		toSerialize["ExcludedClientIPFilterEnabled"] = o.ExcludedClientIPFilterEnabled.Get()
	}
	if o.ExcludedClientIPs != nil {
		toSerialize["ExcludedClientIPs"] = o.ExcludedClientIPs
	}
	if o.ExcludedClientNameFilterEnabled.IsSet() {
		toSerialize["ExcludedClientNameFilterEnabled"] = o.ExcludedClientNameFilterEnabled.Get()
	}
	if o.ExcludedClientNames != nil {
		toSerialize["ExcludedClientNames"] = o.ExcludedClientNames
	}
	if o.ExcludedSmartAccessFilterEnabled.IsSet() {
		toSerialize["ExcludedSmartAccessFilterEnabled"] = o.ExcludedSmartAccessFilterEnabled.Get()
	}
	if o.ExcludedSmartAccessTags != nil {
		toSerialize["ExcludedSmartAccessTags"] = o.ExcludedSmartAccessTags
	}
	if o.ExcludedUserFilterEnabled.IsSet() {
		toSerialize["ExcludedUserFilterEnabled"] = o.ExcludedUserFilterEnabled.Get()
	}
	if o.ExcludedUsers != nil {
		toSerialize["ExcludedUsers"] = o.ExcludedUsers
	}
	if o.IncludedClientIPFilterEnabled.IsSet() {
		toSerialize["IncludedClientIPFilterEnabled"] = o.IncludedClientIPFilterEnabled.Get()
	}
	if o.IncludedClientIPs != nil {
		toSerialize["IncludedClientIPs"] = o.IncludedClientIPs
	}
	if o.IncludedClientNameFilterEnabled.IsSet() {
		toSerialize["IncludedClientNameFilterEnabled"] = o.IncludedClientNameFilterEnabled.Get()
	}
	if o.IncludedClientNames != nil {
		toSerialize["IncludedClientNames"] = o.IncludedClientNames
	}
	if o.IncludedSmartAccessFilterEnabled.IsSet() {
		toSerialize["IncludedSmartAccessFilterEnabled"] = o.IncludedSmartAccessFilterEnabled.Get()
	}
	if o.IncludedSmartAccessTags != nil {
		toSerialize["IncludedSmartAccessTags"] = o.IncludedSmartAccessTags
	}
	if !IsNil(o.IncludedSmartAccessFilterType) {
		toSerialize["IncludedSmartAccessFilterType"] = o.IncludedSmartAccessFilterType
	}
	if o.IncludedUserFilterEnabled.IsSet() {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled.Get()
	}
	if o.IncludedUsers != nil {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	return toSerialize, nil
}

type NullableAdvancedAccessPolicyRequestModel struct {
	value *AdvancedAccessPolicyRequestModel
	isSet bool
}

func (v NullableAdvancedAccessPolicyRequestModel) Get() *AdvancedAccessPolicyRequestModel {
	return v.value
}

func (v *NullableAdvancedAccessPolicyRequestModel) Set(val *AdvancedAccessPolicyRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedAccessPolicyRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedAccessPolicyRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedAccessPolicyRequestModel(val *AdvancedAccessPolicyRequestModel) *NullableAdvancedAccessPolicyRequestModel {
	return &NullableAdvancedAccessPolicyRequestModel{value: val, isSet: true}
}

func (v NullableAdvancedAccessPolicyRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedAccessPolicyRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


