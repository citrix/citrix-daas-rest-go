/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SiteConfigurationProfileModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteConfigurationProfileModel{}

// SiteConfigurationProfileModel struct for SiteConfigurationProfileModel
type SiteConfigurationProfileModel struct {
	DatabaseServerEdition *DatabaseServerEdition `json:"DatabaseServerEdition,omitempty"`
	DatabaseAuthenticationMode *DatabaseAuthenticationMode `json:"DatabaseAuthenticationMode,omitempty"`
}

// NewSiteConfigurationProfileModel instantiates a new SiteConfigurationProfileModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteConfigurationProfileModel() *SiteConfigurationProfileModel {
	this := SiteConfigurationProfileModel{}
	return &this
}

// NewSiteConfigurationProfileModelWithDefaults instantiates a new SiteConfigurationProfileModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteConfigurationProfileModelWithDefaults() *SiteConfigurationProfileModel {
	this := SiteConfigurationProfileModel{}
	return &this
}

// GetDatabaseServerEdition returns the DatabaseServerEdition field value if set, zero value otherwise.
func (o *SiteConfigurationProfileModel) GetDatabaseServerEdition() DatabaseServerEdition {
	if o == nil || IsNil(o.DatabaseServerEdition) {
		var ret DatabaseServerEdition
		return ret
	}
	return *o.DatabaseServerEdition
}

// GetDatabaseServerEditionOk returns a tuple with the DatabaseServerEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteConfigurationProfileModel) GetDatabaseServerEditionOk() (*DatabaseServerEdition, bool) {
	if o == nil || IsNil(o.DatabaseServerEdition) {
		return nil, false
	}
	return o.DatabaseServerEdition, true
}

// HasDatabaseServerEdition returns a boolean if a field has been set.
func (o *SiteConfigurationProfileModel) HasDatabaseServerEdition() bool {
	if o != nil && !IsNil(o.DatabaseServerEdition) {
		return true
	}

	return false
}

// SetDatabaseServerEdition gets a reference to the given DatabaseServerEdition and assigns it to the DatabaseServerEdition field.
func (o *SiteConfigurationProfileModel) SetDatabaseServerEdition(v DatabaseServerEdition) {
	o.DatabaseServerEdition = &v
}

// GetDatabaseAuthenticationMode returns the DatabaseAuthenticationMode field value if set, zero value otherwise.
func (o *SiteConfigurationProfileModel) GetDatabaseAuthenticationMode() DatabaseAuthenticationMode {
	if o == nil || IsNil(o.DatabaseAuthenticationMode) {
		var ret DatabaseAuthenticationMode
		return ret
	}
	return *o.DatabaseAuthenticationMode
}

// GetDatabaseAuthenticationModeOk returns a tuple with the DatabaseAuthenticationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteConfigurationProfileModel) GetDatabaseAuthenticationModeOk() (*DatabaseAuthenticationMode, bool) {
	if o == nil || IsNil(o.DatabaseAuthenticationMode) {
		return nil, false
	}
	return o.DatabaseAuthenticationMode, true
}

// HasDatabaseAuthenticationMode returns a boolean if a field has been set.
func (o *SiteConfigurationProfileModel) HasDatabaseAuthenticationMode() bool {
	if o != nil && !IsNil(o.DatabaseAuthenticationMode) {
		return true
	}

	return false
}

// SetDatabaseAuthenticationMode gets a reference to the given DatabaseAuthenticationMode and assigns it to the DatabaseAuthenticationMode field.
func (o *SiteConfigurationProfileModel) SetDatabaseAuthenticationMode(v DatabaseAuthenticationMode) {
	o.DatabaseAuthenticationMode = &v
}

func (o SiteConfigurationProfileModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteConfigurationProfileModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DatabaseServerEdition) {
		toSerialize["DatabaseServerEdition"] = o.DatabaseServerEdition
	}
	if !IsNil(o.DatabaseAuthenticationMode) {
		toSerialize["DatabaseAuthenticationMode"] = o.DatabaseAuthenticationMode
	}
	return toSerialize, nil
}

type NullableSiteConfigurationProfileModel struct {
	value *SiteConfigurationProfileModel
	isSet bool
}

func (v NullableSiteConfigurationProfileModel) Get() *SiteConfigurationProfileModel {
	return v.value
}

func (v *NullableSiteConfigurationProfileModel) Set(val *SiteConfigurationProfileModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteConfigurationProfileModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteConfigurationProfileModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteConfigurationProfileModel(val *SiteConfigurationProfileModel) *NullableSiteConfigurationProfileModel {
	return &NullableSiteConfigurationProfileModel{value: val, isSet: true}
}

func (v NullableSiteConfigurationProfileModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteConfigurationProfileModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


