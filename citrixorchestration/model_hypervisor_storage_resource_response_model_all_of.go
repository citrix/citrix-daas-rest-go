/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorStorageResourceResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorStorageResourceResponseModelAllOf{}

// HypervisorStorageResourceResponseModelAllOf struct for HypervisorStorageResourceResponseModelAllOf
type HypervisorStorageResourceResponseModelAllOf struct {
	// Indicates whether storage has been superseded.  Superseded storage may be used for existing virtual machines, but is not used when provisioning new virtual machines.
	Superseded bool `json:"Superseded"`
}

// NewHypervisorStorageResourceResponseModelAllOf instantiates a new HypervisorStorageResourceResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorStorageResourceResponseModelAllOf(superseded bool) *HypervisorStorageResourceResponseModelAllOf {
	this := HypervisorStorageResourceResponseModelAllOf{}
	this.Superseded = superseded
	return &this
}

// NewHypervisorStorageResourceResponseModelAllOfWithDefaults instantiates a new HypervisorStorageResourceResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorStorageResourceResponseModelAllOfWithDefaults() *HypervisorStorageResourceResponseModelAllOf {
	this := HypervisorStorageResourceResponseModelAllOf{}
	return &this
}

// GetSuperseded returns the Superseded field value
func (o *HypervisorStorageResourceResponseModelAllOf) GetSuperseded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Superseded
}

// GetSupersededOk returns a tuple with the Superseded field value
// and a boolean to check if the value has been set.
func (o *HypervisorStorageResourceResponseModelAllOf) GetSupersededOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Superseded, true
}

// SetSuperseded sets field value
func (o *HypervisorStorageResourceResponseModelAllOf) SetSuperseded(v bool) {
	o.Superseded = v
}

func (o HypervisorStorageResourceResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorStorageResourceResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Superseded"] = o.Superseded
	return toSerialize, nil
}

type NullableHypervisorStorageResourceResponseModelAllOf struct {
	value *HypervisorStorageResourceResponseModelAllOf
	isSet bool
}

func (v NullableHypervisorStorageResourceResponseModelAllOf) Get() *HypervisorStorageResourceResponseModelAllOf {
	return v.value
}

func (v *NullableHypervisorStorageResourceResponseModelAllOf) Set(val *HypervisorStorageResourceResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorStorageResourceResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorStorageResourceResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorStorageResourceResponseModelAllOf(val *HypervisorStorageResourceResponseModelAllOf) *NullableHypervisorStorageResourceResponseModelAllOf {
	return &NullableHypervisorStorageResourceResponseModelAllOf{value: val, isSet: true}
}

func (v NullableHypervisorStorageResourceResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorStorageResourceResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


