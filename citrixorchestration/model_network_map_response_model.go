/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the NetworkMapResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkMapResponseModel{}

// NetworkMapResponseModel Network map response object.
type NetworkMapResponseModel struct {
	// The name for the network.  This is for display only and may not be populated.
	DeviceName *string `json:"DeviceName,omitempty"`
	// Network device ID.  Zero indicates the primary network device.
	DeviceId string `json:"DeviceId"`
	Network NetworkMapResponseModelNetwork `json:"Network"`
	// Gets or sets a value indicating whether IsCardEnabled.
	IsCardEnabled *bool `json:"IsCardEnabled,omitempty"`
}

// NewNetworkMapResponseModel instantiates a new NetworkMapResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkMapResponseModel(deviceId string, network NetworkMapResponseModelNetwork) *NetworkMapResponseModel {
	this := NetworkMapResponseModel{}
	this.DeviceId = deviceId
	this.Network = network
	return &this
}

// NewNetworkMapResponseModelWithDefaults instantiates a new NetworkMapResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkMapResponseModelWithDefaults() *NetworkMapResponseModel {
	this := NetworkMapResponseModel{}
	return &this
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *NetworkMapResponseModel) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMapResponseModel) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *NetworkMapResponseModel) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *NetworkMapResponseModel) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetDeviceId returns the DeviceId field value
func (o *NetworkMapResponseModel) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *NetworkMapResponseModel) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *NetworkMapResponseModel) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetNetwork returns the Network field value
func (o *NetworkMapResponseModel) GetNetwork() NetworkMapResponseModelNetwork {
	if o == nil {
		var ret NetworkMapResponseModelNetwork
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *NetworkMapResponseModel) GetNetworkOk() (*NetworkMapResponseModelNetwork, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *NetworkMapResponseModel) SetNetwork(v NetworkMapResponseModelNetwork) {
	o.Network = v
}

// GetIsCardEnabled returns the IsCardEnabled field value if set, zero value otherwise.
func (o *NetworkMapResponseModel) GetIsCardEnabled() bool {
	if o == nil || IsNil(o.IsCardEnabled) {
		var ret bool
		return ret
	}
	return *o.IsCardEnabled
}

// GetIsCardEnabledOk returns a tuple with the IsCardEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMapResponseModel) GetIsCardEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCardEnabled) {
		return nil, false
	}
	return o.IsCardEnabled, true
}

// HasIsCardEnabled returns a boolean if a field has been set.
func (o *NetworkMapResponseModel) HasIsCardEnabled() bool {
	if o != nil && !IsNil(o.IsCardEnabled) {
		return true
	}

	return false
}

// SetIsCardEnabled gets a reference to the given bool and assigns it to the IsCardEnabled field.
func (o *NetworkMapResponseModel) SetIsCardEnabled(v bool) {
	o.IsCardEnabled = &v
}

func (o NetworkMapResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkMapResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceName) {
		toSerialize["DeviceName"] = o.DeviceName
	}
	toSerialize["DeviceId"] = o.DeviceId
	toSerialize["Network"] = o.Network
	if !IsNil(o.IsCardEnabled) {
		toSerialize["IsCardEnabled"] = o.IsCardEnabled
	}
	return toSerialize, nil
}

type NullableNetworkMapResponseModel struct {
	value *NetworkMapResponseModel
	isSet bool
}

func (v NullableNetworkMapResponseModel) Get() *NetworkMapResponseModel {
	return v.value
}

func (v *NullableNetworkMapResponseModel) Set(val *NetworkMapResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkMapResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkMapResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkMapResponseModel(val *NetworkMapResponseModel) *NullableNetworkMapResponseModel {
	return &NullableNetworkMapResponseModel{value: val, isSet: true}
}

func (v NullableNetworkMapResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkMapResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


