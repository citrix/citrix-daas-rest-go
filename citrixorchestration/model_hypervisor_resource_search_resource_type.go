/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// HypervisorResourceSearchResourceType Supported resource type for HypervisorResourceSearchRequestModel.ResourceType.
type HypervisorResourceSearchResourceType string

// List of HypervisorResourceSearchResourceType
const (
	HYPERVISORRESOURCESEARCHRESOURCETYPE_TEMPLATE HypervisorResourceSearchResourceType = "Template"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_VM HypervisorResourceSearchResourceType = "Vm"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_LAUNCH_TEMPLATE_VERSION HypervisorResourceSearchResourceType = "LaunchTemplateVersion"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_FOLDER HypervisorResourceSearchResourceType = "Folder"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_SNAPSHOT HypervisorResourceSearchResourceType = "Snapshot"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_MANAGED_DISK HypervisorResourceSearchResourceType = "ManagedDisk"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_GALLERY HypervisorResourceSearchResourceType = "Gallery"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_IMAGE_DEFINITION HypervisorResourceSearchResourceType = "ImageDefinition"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_TEMPLATE_SPEC HypervisorResourceSearchResourceType = "TemplateSpec"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_TAG HypervisorResourceSearchResourceType = "Tag"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_RESOURCE_GROUP HypervisorResourceSearchResourceType = "ResourceGroup"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_SECURITY_GROUP HypervisorResourceSearchResourceType = "SecurityGroup"
	HYPERVISORRESOURCESEARCHRESOURCETYPE_AVAILABILITY_ZONE HypervisorResourceSearchResourceType = "AvailabilityZone"
)

// All allowed values of HypervisorResourceSearchResourceType enum
var AllowedHypervisorResourceSearchResourceTypeEnumValues = []HypervisorResourceSearchResourceType{
	"Template",
	"Vm",
	"LaunchTemplateVersion",
	"Folder",
	"Snapshot",
	"ManagedDisk",
	"Gallery",
	"ImageDefinition",
	"TemplateSpec",
	"Tag",
	"ResourceGroup",
	"SecurityGroup",
	"AvailabilityZone",
}

func (v *HypervisorResourceSearchResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := HypervisorResourceSearchResourceType(value)
	for _, existing := range AllowedHypervisorResourceSearchResourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid HypervisorResourceSearchResourceType", value)
}

// NewHypervisorResourceSearchResourceTypeFromValue returns a pointer to a valid HypervisorResourceSearchResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewHypervisorResourceSearchResourceTypeFromValue(v string) (*HypervisorResourceSearchResourceType, error) {
	ev := HypervisorResourceSearchResourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for HypervisorResourceSearchResourceType: valid values are %v", v, AllowedHypervisorResourceSearchResourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v HypervisorResourceSearchResourceType) IsValid() bool {
	for _, existing := range AllowedHypervisorResourceSearchResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to HypervisorResourceSearchResourceType value
func (v HypervisorResourceSearchResourceType) Ptr() *HypervisorResourceSearchResourceType {
	return &v
}

type NullableHypervisorResourceSearchResourceType struct {
	value *HypervisorResourceSearchResourceType
	isSet bool
}

func (v NullableHypervisorResourceSearchResourceType) Get() *HypervisorResourceSearchResourceType {
	return v.value
}

func (v *NullableHypervisorResourceSearchResourceType) Set(val *HypervisorResourceSearchResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorResourceSearchResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorResourceSearchResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorResourceSearchResourceType(val *HypervisorResourceSearchResourceType) *NullableHypervisorResourceSearchResourceType {
	return &NullableHypervisorResourceSearchResourceType{value: val, isSet: true}
}

func (v NullableHypervisorResourceSearchResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorResourceSearchResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

