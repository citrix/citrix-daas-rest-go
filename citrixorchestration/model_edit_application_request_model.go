/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditApplicationRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditApplicationRequestModel{}

// EditApplicationRequestModel Request object for editing an application.
type EditApplicationRequestModel struct {
	// The folder in which the application resides. If not specified, the value will not be changed. May be specified as either the folder Id or Path. If specified as a path, and the path does not exist, it will be automatically created.
	ApplicationFolder NullableString `json:"ApplicationFolder,omitempty"`
	// Specifies one or more application groups which the application will be published to. If not specified, will not be changed. If specified, the entire list of application groups must be specified. To disassociate the application from all application groups, specify an empty array ([]).
	ApplicationGroups []string `json:"ApplicationGroups,omitempty"`
	// Specifies one or more delivery groups which the application will be published to. If not specified, will not be changed. If specified, the entire list of delivery groups must be specified. To disassociate the application from all delivery groups, specify an empty array ([]).
	DeliveryGroups []PriorityRefRequestModel `json:"DeliveryGroups,omitempty"`
	// Internal name of the application. If not specified, will not be changed. If specified, must be unique within the site.  For legacy reasons the maximum length of the browser name cannot exceed 38 bytes when encoded using MBCS encoding.
	BrowserName NullableString `json:"BrowserName,omitempty"`
	// Categories in which the application resides. If not specified, the values will not be changed. If specified, the entire list is required.
	Categories []string `json:"Categories,omitempty"`
	// The folder that the application belongs to as the user sees it. If not specified, the value will not be changed. To remove the client folder, specify the empty string (\"\").
	ClientFolder     NullableString    `json:"ClientFolder,omitempty"`
	CpuPriorityLevel *CpuPriorityLevel `json:"CpuPriorityLevel,omitempty"`
	// The description of the application. If not specified, will not be changed.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether or not this application can be launched. If not specified, will not be changed.
	Enabled NullableBool `json:"Enabled,omitempty"`
	// Indicates whether or not this application is enumerable
	DoNotEnumerate NullableBool `json:"DoNotEnumerate,omitempty"`
	// Home zone preference used when launching this application. If not specified, will not be changed. To disassociate the application from a home zone, set this to the empty string (\"\"). Cannot be set for applications where ApplicationType is equal to InstalledOnClient or PublishedContent. Cannot be set if HomeZoneMode is equal to \"HomeZoneMode.Ignore\". If HomeZoneMode is equal to \"HomeZoneMode.Only\" or \"HomeZoneMode.Prefer\", the value must either have been previously set, or is required. May be specified as either the Id or Name of the zone.
	HomeZone     NullableString `json:"HomeZone,omitempty"`
	HomeZoneMode *HomeZoneMode  `json:"HomeZoneMode,omitempty"`
	// Icon used for the application. If not specified, will not be changed.
	Icon NullableString `json:"Icon,omitempty"`
	// Specifies whether the icon is gotten from user's computer at run time. If not specified, will not be changed.
	IconFromClient NullableBool `json:"IconFromClient,omitempty"`
	// Specifies whether the IncludedUsers filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery group's access polic(ies) is implicitly granted access to the application. If not specified, will not be changed.
	IncludedUserFilterEnabled NullableBool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the included users filter of the application; that is, the users and groups who are explicitly granted access to the published application. If not specified, will not be changed. If specified, all users to be included must be specified.
	IncludedUsers                 []string                       `json:"IncludedUsers,omitempty"`
	PackagedApplicationVisibility *PackagedApplicationVisibility `json:"PackagedApplicationVisibility,omitempty"`
	InstalledAppProperties        *EditInstalledAppRequestModel  `json:"InstalledAppProperties,omitempty"`
	PackagedAppProperties         *AppVAppRequestModel           `json:"PackagedAppProperties,omitempty"`
	AppVAppProperties             *AppVAppRequestModel           `json:"AppVAppProperties,omitempty"`
	// Location of published content. If not specified, will not be changed.
	ContentLocation NullableString `json:"ContentLocation,omitempty"`
	// The metadata of the application. When set the property value equal to null/empty means to remove this property.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	// Specifies the maximum allowed concurrently running instances of the application that an individual user can have. If not specified, will not be changed.
	MaxPerUserInstances NullableInt32 `json:"MaxPerUserInstances,omitempty"`
	// Specifies the maximum allowed total of concurrently running instances of the application within the site. If not specified, will not be changed.
	MaxTotalInstances NullableInt32 `json:"MaxTotalInstances,omitempty"`
	// Name of the application.  Only seen by administrators. If not specified, will not be changed. If specified, must be unique within the site.
	Name NullableString `json:"Name,omitempty"`
	// The name seen by end users who have access to the application. If not specified, will not be changed.
	PublishedName NullableString `json:"PublishedName,omitempty"`
	// Specifies whether or not a shortcut to the application should be placed on the user device. If not specified, will not be changed.
	ShortcutAddedToDesktop NullableBool `json:"ShortcutAddedToDesktop,omitempty"`
	// Specifies whether or not a shortcut to the application should be placed in the user's start menu on their user device. If not specified, will not be changed.
	ShortcutAddedToStartMenu NullableBool `json:"ShortcutAddedToStartMenu,omitempty"`
	// Specifies the name of the start menu folder that holds the application shortcut (if any). If not specified, will not be changed. To clear a previously-set value, use the empty string (\"\").
	StartMenuFolder NullableString `json:"StartMenuFolder,omitempty"`
	// Indicates whether or not this application is visible to users. If not specified, will not be changed.
	Visible NullableBool `json:"Visible,omitempty"`
	// Specifies whether or not the session waits for the printers to be created before allowing the user to interact with the session. If not specified, will not be changed.
	WaitForPrinterCreation NullableBool `json:"WaitForPrinterCreation,omitempty"`
}

// NewEditApplicationRequestModel instantiates a new EditApplicationRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditApplicationRequestModel() *EditApplicationRequestModel {
	this := EditApplicationRequestModel{}
	return &this
}

// NewEditApplicationRequestModelWithDefaults instantiates a new EditApplicationRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditApplicationRequestModelWithDefaults() *EditApplicationRequestModel {
	this := EditApplicationRequestModel{}
	return &this
}

// GetApplicationFolder returns the ApplicationFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetApplicationFolder() string {
	if o == nil || IsNil(o.ApplicationFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationFolder.Get()
}

// GetApplicationFolderOk returns a tuple with the ApplicationFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetApplicationFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationFolder.Get(), o.ApplicationFolder.IsSet()
}

// HasApplicationFolder returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasApplicationFolder() bool {
	if o != nil && o.ApplicationFolder.IsSet() {
		return true
	}

	return false
}

// SetApplicationFolder gets a reference to the given NullableString and assigns it to the ApplicationFolder field.
func (o *EditApplicationRequestModel) SetApplicationFolder(v string) {
	o.ApplicationFolder.Set(&v)
}

// SetApplicationFolderNil sets the value for ApplicationFolder to be an explicit nil
func (o *EditApplicationRequestModel) SetApplicationFolderNil() {
	o.ApplicationFolder.Set(nil)
}

// UnsetApplicationFolder ensures that no value is present for ApplicationFolder, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetApplicationFolder() {
	o.ApplicationFolder.Unset()
}

// GetApplicationGroups returns the ApplicationGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetApplicationGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ApplicationGroups
}

// GetApplicationGroupsOk returns a tuple with the ApplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetApplicationGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationGroups) {
		return nil, false
	}
	return o.ApplicationGroups, true
}

// HasApplicationGroups returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasApplicationGroups() bool {
	if o != nil && !IsNil(o.ApplicationGroups) {
		return true
	}

	return false
}

// SetApplicationGroups gets a reference to the given []string and assigns it to the ApplicationGroups field.
func (o *EditApplicationRequestModel) SetApplicationGroups(v []string) {
	o.ApplicationGroups = v
}

// GetDeliveryGroups returns the DeliveryGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetDeliveryGroups() []PriorityRefRequestModel {
	if o == nil {
		var ret []PriorityRefRequestModel
		return ret
	}
	return o.DeliveryGroups
}

// GetDeliveryGroupsOk returns a tuple with the DeliveryGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetDeliveryGroupsOk() ([]PriorityRefRequestModel, bool) {
	if o == nil || IsNil(o.DeliveryGroups) {
		return nil, false
	}
	return o.DeliveryGroups, true
}

// HasDeliveryGroups returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasDeliveryGroups() bool {
	if o != nil && !IsNil(o.DeliveryGroups) {
		return true
	}

	return false
}

// SetDeliveryGroups gets a reference to the given []PriorityRefRequestModel and assigns it to the DeliveryGroups field.
func (o *EditApplicationRequestModel) SetDeliveryGroups(v []PriorityRefRequestModel) {
	o.DeliveryGroups = v
}

// GetBrowserName returns the BrowserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetBrowserName() string {
	if o == nil || IsNil(o.BrowserName.Get()) {
		var ret string
		return ret
	}
	return *o.BrowserName.Get()
}

// GetBrowserNameOk returns a tuple with the BrowserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetBrowserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrowserName.Get(), o.BrowserName.IsSet()
}

// HasBrowserName returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasBrowserName() bool {
	if o != nil && o.BrowserName.IsSet() {
		return true
	}

	return false
}

// SetBrowserName gets a reference to the given NullableString and assigns it to the BrowserName field.
func (o *EditApplicationRequestModel) SetBrowserName(v string) {
	o.BrowserName.Set(&v)
}

// SetBrowserNameNil sets the value for BrowserName to be an explicit nil
func (o *EditApplicationRequestModel) SetBrowserNameNil() {
	o.BrowserName.Set(nil)
}

// UnsetBrowserName ensures that no value is present for BrowserName, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetBrowserName() {
	o.BrowserName.Unset()
}

// GetCategories returns the Categories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetCategories() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *EditApplicationRequestModel) SetCategories(v []string) {
	o.Categories = v
}

// GetClientFolder returns the ClientFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetClientFolder() string {
	if o == nil || IsNil(o.ClientFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ClientFolder.Get()
}

// GetClientFolderOk returns a tuple with the ClientFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetClientFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientFolder.Get(), o.ClientFolder.IsSet()
}

// HasClientFolder returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasClientFolder() bool {
	if o != nil && o.ClientFolder.IsSet() {
		return true
	}

	return false
}

// SetClientFolder gets a reference to the given NullableString and assigns it to the ClientFolder field.
func (o *EditApplicationRequestModel) SetClientFolder(v string) {
	o.ClientFolder.Set(&v)
}

// SetClientFolderNil sets the value for ClientFolder to be an explicit nil
func (o *EditApplicationRequestModel) SetClientFolderNil() {
	o.ClientFolder.Set(nil)
}

// UnsetClientFolder ensures that no value is present for ClientFolder, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetClientFolder() {
	o.ClientFolder.Unset()
}

// GetCpuPriorityLevel returns the CpuPriorityLevel field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetCpuPriorityLevel() CpuPriorityLevel {
	if o == nil || IsNil(o.CpuPriorityLevel) {
		var ret CpuPriorityLevel
		return ret
	}
	return *o.CpuPriorityLevel
}

// GetCpuPriorityLevelOk returns a tuple with the CpuPriorityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetCpuPriorityLevelOk() (*CpuPriorityLevel, bool) {
	if o == nil || IsNil(o.CpuPriorityLevel) {
		return nil, false
	}
	return o.CpuPriorityLevel, true
}

// HasCpuPriorityLevel returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasCpuPriorityLevel() bool {
	if o != nil && !IsNil(o.CpuPriorityLevel) {
		return true
	}

	return false
}

// SetCpuPriorityLevel gets a reference to the given CpuPriorityLevel and assigns it to the CpuPriorityLevel field.
func (o *EditApplicationRequestModel) SetCpuPriorityLevel(v CpuPriorityLevel) {
	o.CpuPriorityLevel = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EditApplicationRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EditApplicationRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *EditApplicationRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *EditApplicationRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetDoNotEnumerate returns the DoNotEnumerate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetDoNotEnumerate() bool {
	if o == nil || IsNil(o.DoNotEnumerate.Get()) {
		var ret bool
		return ret
	}
	return *o.DoNotEnumerate.Get()
}

// GetDoNotEnumerateOk returns a tuple with the DoNotEnumerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetDoNotEnumerateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoNotEnumerate.Get(), o.DoNotEnumerate.IsSet()
}

// HasDoNotEnumerate returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasDoNotEnumerate() bool {
	if o != nil && o.DoNotEnumerate.IsSet() {
		return true
	}

	return false
}

// SetDoNotEnumerate gets a reference to the given NullableBool and assigns it to the DoNotEnumerate field.
func (o *EditApplicationRequestModel) SetDoNotEnumerate(v bool) {
	o.DoNotEnumerate.Set(&v)
}

// SetDoNotEnumerateNil sets the value for DoNotEnumerate to be an explicit nil
func (o *EditApplicationRequestModel) SetDoNotEnumerateNil() {
	o.DoNotEnumerate.Set(nil)
}

// UnsetDoNotEnumerate ensures that no value is present for DoNotEnumerate, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetDoNotEnumerate() {
	o.DoNotEnumerate.Unset()
}

// GetHomeZone returns the HomeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetHomeZone() string {
	if o == nil || IsNil(o.HomeZone.Get()) {
		var ret string
		return ret
	}
	return *o.HomeZone.Get()
}

// GetHomeZoneOk returns a tuple with the HomeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetHomeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomeZone.Get(), o.HomeZone.IsSet()
}

// HasHomeZone returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasHomeZone() bool {
	if o != nil && o.HomeZone.IsSet() {
		return true
	}

	return false
}

// SetHomeZone gets a reference to the given NullableString and assigns it to the HomeZone field.
func (o *EditApplicationRequestModel) SetHomeZone(v string) {
	o.HomeZone.Set(&v)
}

// SetHomeZoneNil sets the value for HomeZone to be an explicit nil
func (o *EditApplicationRequestModel) SetHomeZoneNil() {
	o.HomeZone.Set(nil)
}

// UnsetHomeZone ensures that no value is present for HomeZone, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetHomeZone() {
	o.HomeZone.Unset()
}

// GetHomeZoneMode returns the HomeZoneMode field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetHomeZoneMode() HomeZoneMode {
	if o == nil || IsNil(o.HomeZoneMode) {
		var ret HomeZoneMode
		return ret
	}
	return *o.HomeZoneMode
}

// GetHomeZoneModeOk returns a tuple with the HomeZoneMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetHomeZoneModeOk() (*HomeZoneMode, bool) {
	if o == nil || IsNil(o.HomeZoneMode) {
		return nil, false
	}
	return o.HomeZoneMode, true
}

// HasHomeZoneMode returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasHomeZoneMode() bool {
	if o != nil && !IsNil(o.HomeZoneMode) {
		return true
	}

	return false
}

// SetHomeZoneMode gets a reference to the given HomeZoneMode and assigns it to the HomeZoneMode field.
func (o *EditApplicationRequestModel) SetHomeZoneMode(v HomeZoneMode) {
	o.HomeZoneMode = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *EditApplicationRequestModel) SetIcon(v string) {
	o.Icon.Set(&v)
}

// SetIconNil sets the value for Icon to be an explicit nil
func (o *EditApplicationRequestModel) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetIcon() {
	o.Icon.Unset()
}

// GetIconFromClient returns the IconFromClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetIconFromClient() bool {
	if o == nil || IsNil(o.IconFromClient.Get()) {
		var ret bool
		return ret
	}
	return *o.IconFromClient.Get()
}

// GetIconFromClientOk returns a tuple with the IconFromClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetIconFromClientOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconFromClient.Get(), o.IconFromClient.IsSet()
}

// HasIconFromClient returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasIconFromClient() bool {
	if o != nil && o.IconFromClient.IsSet() {
		return true
	}

	return false
}

// SetIconFromClient gets a reference to the given NullableBool and assigns it to the IconFromClient field.
func (o *EditApplicationRequestModel) SetIconFromClient(v bool) {
	o.IconFromClient.Set(&v)
}

// SetIconFromClientNil sets the value for IconFromClient to be an explicit nil
func (o *EditApplicationRequestModel) SetIconFromClientNil() {
	o.IconFromClient.Set(nil)
}

// UnsetIconFromClient ensures that no value is present for IconFromClient, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetIconFromClient() {
	o.IconFromClient.Unset()
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled.Get()
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedUserFilterEnabled.Get(), o.IncludedUserFilterEnabled.IsSet()
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && o.IncludedUserFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedUserFilterEnabled field.
func (o *EditApplicationRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled.Set(&v)
}

// SetIncludedUserFilterEnabledNil sets the value for IncludedUserFilterEnabled to be an explicit nil
func (o *EditApplicationRequestModel) SetIncludedUserFilterEnabledNil() {
	o.IncludedUserFilterEnabled.Set(nil)
}

// UnsetIncludedUserFilterEnabled ensures that no value is present for IncludedUserFilterEnabled, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetIncludedUserFilterEnabled() {
	o.IncludedUserFilterEnabled.Unset()
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetIncludedUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *EditApplicationRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

// GetPackagedApplicationVisibility returns the PackagedApplicationVisibility field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetPackagedApplicationVisibility() PackagedApplicationVisibility {
	if o == nil || IsNil(o.PackagedApplicationVisibility) {
		var ret PackagedApplicationVisibility
		return ret
	}
	return *o.PackagedApplicationVisibility
}

// GetPackagedApplicationVisibilityOk returns a tuple with the PackagedApplicationVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetPackagedApplicationVisibilityOk() (*PackagedApplicationVisibility, bool) {
	if o == nil || IsNil(o.PackagedApplicationVisibility) {
		return nil, false
	}
	return o.PackagedApplicationVisibility, true
}

// HasPackagedApplicationVisibility returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasPackagedApplicationVisibility() bool {
	if o != nil && !IsNil(o.PackagedApplicationVisibility) {
		return true
	}

	return false
}

// SetPackagedApplicationVisibility gets a reference to the given PackagedApplicationVisibility and assigns it to the PackagedApplicationVisibility field.
func (o *EditApplicationRequestModel) SetPackagedApplicationVisibility(v PackagedApplicationVisibility) {
	o.PackagedApplicationVisibility = &v
}

// GetInstalledAppProperties returns the InstalledAppProperties field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetInstalledAppProperties() EditInstalledAppRequestModel {
	if o == nil || IsNil(o.InstalledAppProperties) {
		var ret EditInstalledAppRequestModel
		return ret
	}
	return *o.InstalledAppProperties
}

// GetInstalledAppPropertiesOk returns a tuple with the InstalledAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetInstalledAppPropertiesOk() (*EditInstalledAppRequestModel, bool) {
	if o == nil || IsNil(o.InstalledAppProperties) {
		return nil, false
	}
	return o.InstalledAppProperties, true
}

// HasInstalledAppProperties returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasInstalledAppProperties() bool {
	if o != nil && !IsNil(o.InstalledAppProperties) {
		return true
	}

	return false
}

// SetInstalledAppProperties gets a reference to the given EditInstalledAppRequestModel and assigns it to the InstalledAppProperties field.
func (o *EditApplicationRequestModel) SetInstalledAppProperties(v EditInstalledAppRequestModel) {
	o.InstalledAppProperties = &v
}

// GetPackagedAppProperties returns the PackagedAppProperties field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetPackagedAppProperties() AppVAppRequestModel {
	if o == nil || IsNil(o.PackagedAppProperties) {
		var ret AppVAppRequestModel
		return ret
	}
	return *o.PackagedAppProperties
}

// GetPackagedAppPropertiesOk returns a tuple with the PackagedAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetPackagedAppPropertiesOk() (*AppVAppRequestModel, bool) {
	if o == nil || IsNil(o.PackagedAppProperties) {
		return nil, false
	}
	return o.PackagedAppProperties, true
}

// HasPackagedAppProperties returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasPackagedAppProperties() bool {
	if o != nil && !IsNil(o.PackagedAppProperties) {
		return true
	}

	return false
}

// SetPackagedAppProperties gets a reference to the given AppVAppRequestModel and assigns it to the PackagedAppProperties field.
func (o *EditApplicationRequestModel) SetPackagedAppProperties(v AppVAppRequestModel) {
	o.PackagedAppProperties = &v
}

// GetAppVAppProperties returns the AppVAppProperties field value if set, zero value otherwise.
func (o *EditApplicationRequestModel) GetAppVAppProperties() AppVAppRequestModel {
	if o == nil || IsNil(o.AppVAppProperties) {
		var ret AppVAppRequestModel
		return ret
	}
	return *o.AppVAppProperties
}

// GetAppVAppPropertiesOk returns a tuple with the AppVAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditApplicationRequestModel) GetAppVAppPropertiesOk() (*AppVAppRequestModel, bool) {
	if o == nil || IsNil(o.AppVAppProperties) {
		return nil, false
	}
	return o.AppVAppProperties, true
}

// HasAppVAppProperties returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasAppVAppProperties() bool {
	if o != nil && !IsNil(o.AppVAppProperties) {
		return true
	}

	return false
}

// SetAppVAppProperties gets a reference to the given AppVAppRequestModel and assigns it to the AppVAppProperties field.
func (o *EditApplicationRequestModel) SetAppVAppProperties(v AppVAppRequestModel) {
	o.AppVAppProperties = &v
}

// GetContentLocation returns the ContentLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetContentLocation() string {
	if o == nil || IsNil(o.ContentLocation.Get()) {
		var ret string
		return ret
	}
	return *o.ContentLocation.Get()
}

// GetContentLocationOk returns a tuple with the ContentLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetContentLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentLocation.Get(), o.ContentLocation.IsSet()
}

// HasContentLocation returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasContentLocation() bool {
	if o != nil && o.ContentLocation.IsSet() {
		return true
	}

	return false
}

// SetContentLocation gets a reference to the given NullableString and assigns it to the ContentLocation field.
func (o *EditApplicationRequestModel) SetContentLocation(v string) {
	o.ContentLocation.Set(&v)
}

// SetContentLocationNil sets the value for ContentLocation to be an explicit nil
func (o *EditApplicationRequestModel) SetContentLocationNil() {
	o.ContentLocation.Set(nil)
}

// UnsetContentLocation ensures that no value is present for ContentLocation, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetContentLocation() {
	o.ContentLocation.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *EditApplicationRequestModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetMaxPerUserInstances returns the MaxPerUserInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetMaxPerUserInstances() int32 {
	if o == nil || IsNil(o.MaxPerUserInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxPerUserInstances.Get()
}

// GetMaxPerUserInstancesOk returns a tuple with the MaxPerUserInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetMaxPerUserInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxPerUserInstances.Get(), o.MaxPerUserInstances.IsSet()
}

// HasMaxPerUserInstances returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasMaxPerUserInstances() bool {
	if o != nil && o.MaxPerUserInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxPerUserInstances gets a reference to the given NullableInt32 and assigns it to the MaxPerUserInstances field.
func (o *EditApplicationRequestModel) SetMaxPerUserInstances(v int32) {
	o.MaxPerUserInstances.Set(&v)
}

// SetMaxPerUserInstancesNil sets the value for MaxPerUserInstances to be an explicit nil
func (o *EditApplicationRequestModel) SetMaxPerUserInstancesNil() {
	o.MaxPerUserInstances.Set(nil)
}

// UnsetMaxPerUserInstances ensures that no value is present for MaxPerUserInstances, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetMaxPerUserInstances() {
	o.MaxPerUserInstances.Unset()
}

// GetMaxTotalInstances returns the MaxTotalInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetMaxTotalInstances() int32 {
	if o == nil || IsNil(o.MaxTotalInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTotalInstances.Get()
}

// GetMaxTotalInstancesOk returns a tuple with the MaxTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetMaxTotalInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTotalInstances.Get(), o.MaxTotalInstances.IsSet()
}

// HasMaxTotalInstances returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasMaxTotalInstances() bool {
	if o != nil && o.MaxTotalInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxTotalInstances gets a reference to the given NullableInt32 and assigns it to the MaxTotalInstances field.
func (o *EditApplicationRequestModel) SetMaxTotalInstances(v int32) {
	o.MaxTotalInstances.Set(&v)
}

// SetMaxTotalInstancesNil sets the value for MaxTotalInstances to be an explicit nil
func (o *EditApplicationRequestModel) SetMaxTotalInstancesNil() {
	o.MaxTotalInstances.Set(nil)
}

// UnsetMaxTotalInstances ensures that no value is present for MaxTotalInstances, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetMaxTotalInstances() {
	o.MaxTotalInstances.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditApplicationRequestModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *EditApplicationRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetPublishedName returns the PublishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetPublishedName() string {
	if o == nil || IsNil(o.PublishedName.Get()) {
		var ret string
		return ret
	}
	return *o.PublishedName.Get()
}

// GetPublishedNameOk returns a tuple with the PublishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetPublishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublishedName.Get(), o.PublishedName.IsSet()
}

// HasPublishedName returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasPublishedName() bool {
	if o != nil && o.PublishedName.IsSet() {
		return true
	}

	return false
}

// SetPublishedName gets a reference to the given NullableString and assigns it to the PublishedName field.
func (o *EditApplicationRequestModel) SetPublishedName(v string) {
	o.PublishedName.Set(&v)
}

// SetPublishedNameNil sets the value for PublishedName to be an explicit nil
func (o *EditApplicationRequestModel) SetPublishedNameNil() {
	o.PublishedName.Set(nil)
}

// UnsetPublishedName ensures that no value is present for PublishedName, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetPublishedName() {
	o.PublishedName.Unset()
}

// GetShortcutAddedToDesktop returns the ShortcutAddedToDesktop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetShortcutAddedToDesktop() bool {
	if o == nil || IsNil(o.ShortcutAddedToDesktop.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToDesktop.Get()
}

// GetShortcutAddedToDesktopOk returns a tuple with the ShortcutAddedToDesktop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetShortcutAddedToDesktopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToDesktop.Get(), o.ShortcutAddedToDesktop.IsSet()
}

// HasShortcutAddedToDesktop returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasShortcutAddedToDesktop() bool {
	if o != nil && o.ShortcutAddedToDesktop.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToDesktop gets a reference to the given NullableBool and assigns it to the ShortcutAddedToDesktop field.
func (o *EditApplicationRequestModel) SetShortcutAddedToDesktop(v bool) {
	o.ShortcutAddedToDesktop.Set(&v)
}

// SetShortcutAddedToDesktopNil sets the value for ShortcutAddedToDesktop to be an explicit nil
func (o *EditApplicationRequestModel) SetShortcutAddedToDesktopNil() {
	o.ShortcutAddedToDesktop.Set(nil)
}

// UnsetShortcutAddedToDesktop ensures that no value is present for ShortcutAddedToDesktop, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetShortcutAddedToDesktop() {
	o.ShortcutAddedToDesktop.Unset()
}

// GetShortcutAddedToStartMenu returns the ShortcutAddedToStartMenu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetShortcutAddedToStartMenu() bool {
	if o == nil || IsNil(o.ShortcutAddedToStartMenu.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToStartMenu.Get()
}

// GetShortcutAddedToStartMenuOk returns a tuple with the ShortcutAddedToStartMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetShortcutAddedToStartMenuOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToStartMenu.Get(), o.ShortcutAddedToStartMenu.IsSet()
}

// HasShortcutAddedToStartMenu returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasShortcutAddedToStartMenu() bool {
	if o != nil && o.ShortcutAddedToStartMenu.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToStartMenu gets a reference to the given NullableBool and assigns it to the ShortcutAddedToStartMenu field.
func (o *EditApplicationRequestModel) SetShortcutAddedToStartMenu(v bool) {
	o.ShortcutAddedToStartMenu.Set(&v)
}

// SetShortcutAddedToStartMenuNil sets the value for ShortcutAddedToStartMenu to be an explicit nil
func (o *EditApplicationRequestModel) SetShortcutAddedToStartMenuNil() {
	o.ShortcutAddedToStartMenu.Set(nil)
}

// UnsetShortcutAddedToStartMenu ensures that no value is present for ShortcutAddedToStartMenu, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetShortcutAddedToStartMenu() {
	o.ShortcutAddedToStartMenu.Unset()
}

// GetStartMenuFolder returns the StartMenuFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetStartMenuFolder() string {
	if o == nil || IsNil(o.StartMenuFolder.Get()) {
		var ret string
		return ret
	}
	return *o.StartMenuFolder.Get()
}

// GetStartMenuFolderOk returns a tuple with the StartMenuFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetStartMenuFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartMenuFolder.Get(), o.StartMenuFolder.IsSet()
}

// HasStartMenuFolder returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasStartMenuFolder() bool {
	if o != nil && o.StartMenuFolder.IsSet() {
		return true
	}

	return false
}

// SetStartMenuFolder gets a reference to the given NullableString and assigns it to the StartMenuFolder field.
func (o *EditApplicationRequestModel) SetStartMenuFolder(v string) {
	o.StartMenuFolder.Set(&v)
}

// SetStartMenuFolderNil sets the value for StartMenuFolder to be an explicit nil
func (o *EditApplicationRequestModel) SetStartMenuFolderNil() {
	o.StartMenuFolder.Set(nil)
}

// UnsetStartMenuFolder ensures that no value is present for StartMenuFolder, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetStartMenuFolder() {
	o.StartMenuFolder.Unset()
}

// GetVisible returns the Visible field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetVisible() bool {
	if o == nil || IsNil(o.Visible.Get()) {
		var ret bool
		return ret
	}
	return *o.Visible.Get()
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Visible.Get(), o.Visible.IsSet()
}

// HasVisible returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasVisible() bool {
	if o != nil && o.Visible.IsSet() {
		return true
	}

	return false
}

// SetVisible gets a reference to the given NullableBool and assigns it to the Visible field.
func (o *EditApplicationRequestModel) SetVisible(v bool) {
	o.Visible.Set(&v)
}

// SetVisibleNil sets the value for Visible to be an explicit nil
func (o *EditApplicationRequestModel) SetVisibleNil() {
	o.Visible.Set(nil)
}

// UnsetVisible ensures that no value is present for Visible, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetVisible() {
	o.Visible.Unset()
}

// GetWaitForPrinterCreation returns the WaitForPrinterCreation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationRequestModel) GetWaitForPrinterCreation() bool {
	if o == nil || IsNil(o.WaitForPrinterCreation.Get()) {
		var ret bool
		return ret
	}
	return *o.WaitForPrinterCreation.Get()
}

// GetWaitForPrinterCreationOk returns a tuple with the WaitForPrinterCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationRequestModel) GetWaitForPrinterCreationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WaitForPrinterCreation.Get(), o.WaitForPrinterCreation.IsSet()
}

// HasWaitForPrinterCreation returns a boolean if a field has been set.
func (o *EditApplicationRequestModel) HasWaitForPrinterCreation() bool {
	if o != nil && o.WaitForPrinterCreation.IsSet() {
		return true
	}

	return false
}

// SetWaitForPrinterCreation gets a reference to the given NullableBool and assigns it to the WaitForPrinterCreation field.
func (o *EditApplicationRequestModel) SetWaitForPrinterCreation(v bool) {
	o.WaitForPrinterCreation.Set(&v)
}

// SetWaitForPrinterCreationNil sets the value for WaitForPrinterCreation to be an explicit nil
func (o *EditApplicationRequestModel) SetWaitForPrinterCreationNil() {
	o.WaitForPrinterCreation.Set(nil)
}

// UnsetWaitForPrinterCreation ensures that no value is present for WaitForPrinterCreation, not even an explicit nil
func (o *EditApplicationRequestModel) UnsetWaitForPrinterCreation() {
	o.WaitForPrinterCreation.Unset()
}

func (o EditApplicationRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditApplicationRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFolder.IsSet() {
		toSerialize["ApplicationFolder"] = o.ApplicationFolder.Get()
	}
	if o.ApplicationGroups != nil {
		toSerialize["ApplicationGroups"] = o.ApplicationGroups
	}
	if o.DeliveryGroups != nil {
		toSerialize["DeliveryGroups"] = o.DeliveryGroups
	}
	if o.BrowserName.IsSet() {
		toSerialize["BrowserName"] = o.BrowserName.Get()
	}
	if o.Categories != nil {
		toSerialize["Categories"] = o.Categories
	}
	if o.ClientFolder.IsSet() {
		toSerialize["ClientFolder"] = o.ClientFolder.Get()
	}
	if !IsNil(o.CpuPriorityLevel) {
		toSerialize["CpuPriorityLevel"] = o.CpuPriorityLevel
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	if o.DoNotEnumerate.IsSet() {
		toSerialize["DoNotEnumerate"] = o.DoNotEnumerate.Get()
	}
	if o.HomeZone.IsSet() {
		toSerialize["HomeZone"] = o.HomeZone.Get()
	}
	if !IsNil(o.HomeZoneMode) {
		toSerialize["HomeZoneMode"] = o.HomeZoneMode
	}
	if o.Icon.IsSet() {
		toSerialize["Icon"] = o.Icon.Get()
	}
	if o.IconFromClient.IsSet() {
		toSerialize["IconFromClient"] = o.IconFromClient.Get()
	}
	if o.IncludedUserFilterEnabled.IsSet() {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled.Get()
	}
	if o.IncludedUsers != nil {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if !IsNil(o.PackagedApplicationVisibility) {
		toSerialize["PackagedApplicationVisibility"] = o.PackagedApplicationVisibility
	}
	if !IsNil(o.InstalledAppProperties) {
		toSerialize["InstalledAppProperties"] = o.InstalledAppProperties
	}
	if !IsNil(o.PackagedAppProperties) {
		toSerialize["PackagedAppProperties"] = o.PackagedAppProperties
	}
	if !IsNil(o.AppVAppProperties) {
		toSerialize["AppVAppProperties"] = o.AppVAppProperties
	}
	if o.ContentLocation.IsSet() {
		toSerialize["ContentLocation"] = o.ContentLocation.Get()
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	if o.MaxPerUserInstances.IsSet() {
		toSerialize["MaxPerUserInstances"] = o.MaxPerUserInstances.Get()
	}
	if o.MaxTotalInstances.IsSet() {
		toSerialize["MaxTotalInstances"] = o.MaxTotalInstances.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.PublishedName.IsSet() {
		toSerialize["PublishedName"] = o.PublishedName.Get()
	}
	if o.ShortcutAddedToDesktop.IsSet() {
		toSerialize["ShortcutAddedToDesktop"] = o.ShortcutAddedToDesktop.Get()
	}
	if o.ShortcutAddedToStartMenu.IsSet() {
		toSerialize["ShortcutAddedToStartMenu"] = o.ShortcutAddedToStartMenu.Get()
	}
	if o.StartMenuFolder.IsSet() {
		toSerialize["StartMenuFolder"] = o.StartMenuFolder.Get()
	}
	if o.Visible.IsSet() {
		toSerialize["Visible"] = o.Visible.Get()
	}
	if o.WaitForPrinterCreation.IsSet() {
		toSerialize["WaitForPrinterCreation"] = o.WaitForPrinterCreation.Get()
	}
	return toSerialize, nil
}

type NullableEditApplicationRequestModel struct {
	value *EditApplicationRequestModel
	isSet bool
}

func (v NullableEditApplicationRequestModel) Get() *EditApplicationRequestModel {
	return v.value
}

func (v *NullableEditApplicationRequestModel) Set(val *EditApplicationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditApplicationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditApplicationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditApplicationRequestModel(val *EditApplicationRequestModel) *NullableEditApplicationRequestModel {
	return &NullableEditApplicationRequestModel{value: val, isSet: true}
}

func (v NullableEditApplicationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditApplicationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
