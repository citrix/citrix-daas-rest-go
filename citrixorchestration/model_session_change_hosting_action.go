/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// SessionChangeHostingAction Hosting actions which may be taken when a session change occurs on a machine.
type SessionChangeHostingAction string

// List of SessionChangeHostingAction
const (
	SESSIONCHANGEHOSTINGACTION_UNKNOWN SessionChangeHostingAction = "Unknown"
	SESSIONCHANGEHOSTINGACTION_NOTHING SessionChangeHostingAction = "Nothing"
	SESSIONCHANGEHOSTINGACTION_SUSPEND SessionChangeHostingAction = "Suspend"
	SESSIONCHANGEHOSTINGACTION_SHUTDOWN SessionChangeHostingAction = "Shutdown"
)

// All allowed values of SessionChangeHostingAction enum
var AllowedSessionChangeHostingActionEnumValues = []SessionChangeHostingAction{
	"Unknown",
	"Nothing",
	"Suspend",
	"Shutdown",
}

func (v *SessionChangeHostingAction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = SessionChangeHostingAction(value)
	return nil
}

// NewSessionChangeHostingActionFromValue returns a pointer to a valid SessionChangeHostingAction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSessionChangeHostingActionFromValue(v string) (*SessionChangeHostingAction, error) {
	ev := SessionChangeHostingAction(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SessionChangeHostingAction: valid values are %v", v, AllowedSessionChangeHostingActionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SessionChangeHostingAction) IsValid() bool {
	for _, existing := range AllowedSessionChangeHostingActionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SessionChangeHostingAction value
func (v SessionChangeHostingAction) Ptr() *SessionChangeHostingAction {
	return &v
}

type NullableSessionChangeHostingAction struct {
	value *SessionChangeHostingAction
	isSet bool
}

func (v NullableSessionChangeHostingAction) Get() *SessionChangeHostingAction {
	return v.value
}

func (v *NullableSessionChangeHostingAction) Set(val *SessionChangeHostingAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionChangeHostingAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionChangeHostingAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionChangeHostingAction(val *SessionChangeHostingAction) *NullableSessionChangeHostingAction {
	return &NullableSessionChangeHostingAction{value: val, isSet: true}
}

func (v NullableSessionChangeHostingAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionChangeHostingAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

