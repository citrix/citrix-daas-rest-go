/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the NetworkMapRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkMapRequestModel{}

// NetworkMapRequestModel Network map request object.
type NetworkMapRequestModel struct {
	// `DEPRECATED.  Use <see cref='NetworkDeviceNameOrId'/>.` The name or Id of the network.  Required.
	DeviceNameOrId *string `json:"DeviceNameOrId,omitempty"`
	// The name or Id of the network device.
	NetworkDeviceNameOrId *string `json:"NetworkDeviceNameOrId,omitempty"`
	// The path in the resource pool to the virtual network that the device should be attached to. This must be a path to a Network item in the resource pool to which the Machine Catalog is associated.
	NetworkPath string `json:"NetworkPath"`
}

// NewNetworkMapRequestModel instantiates a new NetworkMapRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkMapRequestModel(networkPath string) *NetworkMapRequestModel {
	this := NetworkMapRequestModel{}
	this.NetworkPath = networkPath
	return &this
}

// NewNetworkMapRequestModelWithDefaults instantiates a new NetworkMapRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkMapRequestModelWithDefaults() *NetworkMapRequestModel {
	this := NetworkMapRequestModel{}
	return &this
}

// GetDeviceNameOrId returns the DeviceNameOrId field value if set, zero value otherwise.
func (o *NetworkMapRequestModel) GetDeviceNameOrId() string {
	if o == nil || IsNil(o.DeviceNameOrId) {
		var ret string
		return ret
	}
	return *o.DeviceNameOrId
}

// GetDeviceNameOrIdOk returns a tuple with the DeviceNameOrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMapRequestModel) GetDeviceNameOrIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceNameOrId) {
		return nil, false
	}
	return o.DeviceNameOrId, true
}

// HasDeviceNameOrId returns a boolean if a field has been set.
func (o *NetworkMapRequestModel) HasDeviceNameOrId() bool {
	if o != nil && !IsNil(o.DeviceNameOrId) {
		return true
	}

	return false
}

// SetDeviceNameOrId gets a reference to the given string and assigns it to the DeviceNameOrId field.
func (o *NetworkMapRequestModel) SetDeviceNameOrId(v string) {
	o.DeviceNameOrId = &v
}

// GetNetworkDeviceNameOrId returns the NetworkDeviceNameOrId field value if set, zero value otherwise.
func (o *NetworkMapRequestModel) GetNetworkDeviceNameOrId() string {
	if o == nil || IsNil(o.NetworkDeviceNameOrId) {
		var ret string
		return ret
	}
	return *o.NetworkDeviceNameOrId
}

// GetNetworkDeviceNameOrIdOk returns a tuple with the NetworkDeviceNameOrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkMapRequestModel) GetNetworkDeviceNameOrIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkDeviceNameOrId) {
		return nil, false
	}
	return o.NetworkDeviceNameOrId, true
}

// HasNetworkDeviceNameOrId returns a boolean if a field has been set.
func (o *NetworkMapRequestModel) HasNetworkDeviceNameOrId() bool {
	if o != nil && !IsNil(o.NetworkDeviceNameOrId) {
		return true
	}

	return false
}

// SetNetworkDeviceNameOrId gets a reference to the given string and assigns it to the NetworkDeviceNameOrId field.
func (o *NetworkMapRequestModel) SetNetworkDeviceNameOrId(v string) {
	o.NetworkDeviceNameOrId = &v
}

// GetNetworkPath returns the NetworkPath field value
func (o *NetworkMapRequestModel) GetNetworkPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkPath
}

// GetNetworkPathOk returns a tuple with the NetworkPath field value
// and a boolean to check if the value has been set.
func (o *NetworkMapRequestModel) GetNetworkPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkPath, true
}

// SetNetworkPath sets field value
func (o *NetworkMapRequestModel) SetNetworkPath(v string) {
	o.NetworkPath = v
}

func (o NetworkMapRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkMapRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceNameOrId) {
		toSerialize["DeviceNameOrId"] = o.DeviceNameOrId
	}
	if !IsNil(o.NetworkDeviceNameOrId) {
		toSerialize["NetworkDeviceNameOrId"] = o.NetworkDeviceNameOrId
	}
	toSerialize["NetworkPath"] = o.NetworkPath
	return toSerialize, nil
}

type NullableNetworkMapRequestModel struct {
	value *NetworkMapRequestModel
	isSet bool
}

func (v NullableNetworkMapRequestModel) Get() *NetworkMapRequestModel {
	return v.value
}

func (v *NullableNetworkMapRequestModel) Set(val *NetworkMapRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkMapRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkMapRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkMapRequestModel(val *NetworkMapRequestModel) *NullableNetworkMapRequestModel {
	return &NullableNetworkMapRequestModel{value: val, isSet: true}
}

func (v NullableNetworkMapRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkMapRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


