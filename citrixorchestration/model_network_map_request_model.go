/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the NetworkMapRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkMapRequestModel{}

// NetworkMapRequestModel Network map request object.
type NetworkMapRequestModel struct {
	// `DEPRECATED.  Use <see cref='NetworkDeviceNameOrId'/>.` The name or Id of the network.  Required.
	// Deprecated
	DeviceNameOrId NullableString `json:"DeviceNameOrId,omitempty" validate:"regexp=UNKNOWN"`
	// The name or Id of the network device.
	NetworkDeviceNameOrId NullableString `json:"NetworkDeviceNameOrId,omitempty" validate:"regexp=UNKNOWN"`
	// The path in the resource pool to the virtual network that the device should be attached to. This must be a path to a Network item in the resource pool to which the Machine Catalog is associated.
	NetworkPath string "json:\"NetworkPath\" validate:\"regexp=(?i)XDHyp:(\\\\\\\\{1,2}|\\/{1,2})Connections(\\\\\\\\{1,2}|\\/{1,2}).*|(?i)XDHyp:(\\\\\\\\{1,2}|\\/{1,2})HostingUnits(\\\\\\\\{1,2}|\\/{1,2}).*|(?i)hypervisors(\\\\\\\\{1,2}|\\/{1,2}).*|^[^;:#\\\\*\\\\?=<>\\\\|\\\\[\\\\]\\\\(\\\\)\\\"'\\\\{\\\\}`]*.*\""
}

type _NetworkMapRequestModel NetworkMapRequestModel

// NewNetworkMapRequestModel instantiates a new NetworkMapRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkMapRequestModel(networkPath string) *NetworkMapRequestModel {
	this := NetworkMapRequestModel{}
	this.NetworkPath = networkPath
	return &this
}

// NewNetworkMapRequestModelWithDefaults instantiates a new NetworkMapRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkMapRequestModelWithDefaults() *NetworkMapRequestModel {
	this := NetworkMapRequestModel{}
	return &this
}

// GetDeviceNameOrId returns the DeviceNameOrId field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *NetworkMapRequestModel) GetDeviceNameOrId() string {
	if o == nil || IsNil(o.DeviceNameOrId.Get()) {
		var ret string
		return ret
	}
	return *o.DeviceNameOrId.Get()
}

// GetDeviceNameOrIdOk returns a tuple with the DeviceNameOrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *NetworkMapRequestModel) GetDeviceNameOrIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceNameOrId.Get(), o.DeviceNameOrId.IsSet()
}

// HasDeviceNameOrId returns a boolean if a field has been set.
func (o *NetworkMapRequestModel) HasDeviceNameOrId() bool {
	if o != nil && o.DeviceNameOrId.IsSet() {
		return true
	}

	return false
}

// SetDeviceNameOrId gets a reference to the given NullableString and assigns it to the DeviceNameOrId field.
// Deprecated
func (o *NetworkMapRequestModel) SetDeviceNameOrId(v string) {
	o.DeviceNameOrId.Set(&v)
}

// SetDeviceNameOrIdNil sets the value for DeviceNameOrId to be an explicit nil
func (o *NetworkMapRequestModel) SetDeviceNameOrIdNil() {
	o.DeviceNameOrId.Set(nil)
}

// UnsetDeviceNameOrId ensures that no value is present for DeviceNameOrId, not even an explicit nil
func (o *NetworkMapRequestModel) UnsetDeviceNameOrId() {
	o.DeviceNameOrId.Unset()
}

// GetNetworkDeviceNameOrId returns the NetworkDeviceNameOrId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkMapRequestModel) GetNetworkDeviceNameOrId() string {
	if o == nil || IsNil(o.NetworkDeviceNameOrId.Get()) {
		var ret string
		return ret
	}
	return *o.NetworkDeviceNameOrId.Get()
}

// GetNetworkDeviceNameOrIdOk returns a tuple with the NetworkDeviceNameOrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkMapRequestModel) GetNetworkDeviceNameOrIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkDeviceNameOrId.Get(), o.NetworkDeviceNameOrId.IsSet()
}

// HasNetworkDeviceNameOrId returns a boolean if a field has been set.
func (o *NetworkMapRequestModel) HasNetworkDeviceNameOrId() bool {
	if o != nil && o.NetworkDeviceNameOrId.IsSet() {
		return true
	}

	return false
}

// SetNetworkDeviceNameOrId gets a reference to the given NullableString and assigns it to the NetworkDeviceNameOrId field.
func (o *NetworkMapRequestModel) SetNetworkDeviceNameOrId(v string) {
	o.NetworkDeviceNameOrId.Set(&v)
}

// SetNetworkDeviceNameOrIdNil sets the value for NetworkDeviceNameOrId to be an explicit nil
func (o *NetworkMapRequestModel) SetNetworkDeviceNameOrIdNil() {
	o.NetworkDeviceNameOrId.Set(nil)
}

// UnsetNetworkDeviceNameOrId ensures that no value is present for NetworkDeviceNameOrId, not even an explicit nil
func (o *NetworkMapRequestModel) UnsetNetworkDeviceNameOrId() {
	o.NetworkDeviceNameOrId.Unset()
}

// GetNetworkPath returns the NetworkPath field value
func (o *NetworkMapRequestModel) GetNetworkPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkPath
}

// GetNetworkPathOk returns a tuple with the NetworkPath field value
// and a boolean to check if the value has been set.
func (o *NetworkMapRequestModel) GetNetworkPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkPath, true
}

// SetNetworkPath sets field value
func (o *NetworkMapRequestModel) SetNetworkPath(v string) {
	o.NetworkPath = v
}

func (o NetworkMapRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkMapRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceNameOrId.IsSet() {
		toSerialize["DeviceNameOrId"] = o.DeviceNameOrId.Get()
	}
	if o.NetworkDeviceNameOrId.IsSet() {
		toSerialize["NetworkDeviceNameOrId"] = o.NetworkDeviceNameOrId.Get()
	}
	toSerialize["NetworkPath"] = o.NetworkPath
	return toSerialize, nil
}

type NullableNetworkMapRequestModel struct {
	value *NetworkMapRequestModel
	isSet bool
}

func (v NullableNetworkMapRequestModel) Get() *NetworkMapRequestModel {
	return v.value
}

func (v *NullableNetworkMapRequestModel) Set(val *NetworkMapRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkMapRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkMapRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkMapRequestModel(val *NetworkMapRequestModel) *NullableNetworkMapRequestModel {
	return &NullableNetworkMapRequestModel{value: val, isSet: true}
}

func (v NullableNetworkMapRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkMapRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
