/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SetRecommendationRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetRecommendationRequestModel{}

// SetRecommendationRequestModel struct for SetRecommendationRequestModel
type SetRecommendationRequestModel struct {
	State *RecommendationState `json:"State,omitempty"`
	// The reason why you want to dismiss the recommendation.
	Reason NullableString `json:"Reason,omitempty"`
}

// NewSetRecommendationRequestModel instantiates a new SetRecommendationRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetRecommendationRequestModel() *SetRecommendationRequestModel {
	this := SetRecommendationRequestModel{}
	return &this
}

// NewSetRecommendationRequestModelWithDefaults instantiates a new SetRecommendationRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetRecommendationRequestModelWithDefaults() *SetRecommendationRequestModel {
	this := SetRecommendationRequestModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *SetRecommendationRequestModel) GetState() RecommendationState {
	if o == nil || IsNil(o.State) {
		var ret RecommendationState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetRecommendationRequestModel) GetStateOk() (*RecommendationState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *SetRecommendationRequestModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given RecommendationState and assigns it to the State field.
func (o *SetRecommendationRequestModel) SetState(v RecommendationState) {
	o.State = &v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SetRecommendationRequestModel) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SetRecommendationRequestModel) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *SetRecommendationRequestModel) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *SetRecommendationRequestModel) SetReason(v string) {
	o.Reason.Set(&v)
}

// SetReasonNil sets the value for Reason to be an explicit nil
func (o *SetRecommendationRequestModel) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *SetRecommendationRequestModel) UnsetReason() {
	o.Reason.Unset()
}

func (o SetRecommendationRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetRecommendationRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["State"] = o.State
	}
	if o.Reason.IsSet() {
		toSerialize["Reason"] = o.Reason.Get()
	}
	return toSerialize, nil
}

type NullableSetRecommendationRequestModel struct {
	value *SetRecommendationRequestModel
	isSet bool
}

func (v NullableSetRecommendationRequestModel) Get() *SetRecommendationRequestModel {
	return v.value
}

func (v *NullableSetRecommendationRequestModel) Set(val *SetRecommendationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSetRecommendationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSetRecommendationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetRecommendationRequestModel(val *SetRecommendationRequestModel) *NullableSetRecommendationRequestModel {
	return &NullableSetRecommendationRequestModel{value: val, isSet: true}
}

func (v NullableSetRecommendationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetRecommendationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
