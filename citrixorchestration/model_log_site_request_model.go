/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LogSiteRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogSiteRequestModel{}

// LogSiteRequestModel Set logging site model.
type LogSiteRequestModel struct {
	// Configuration logging settings enabled.
	LoggingEnabled *bool `json:"LoggingEnabled,omitempty"`
	// Allow changes to the site configuration when the database is not available.
	AllowChangesWhileDatabaseDown *bool `json:"AllowChangesWhileDatabaseDown,omitempty"`
	// Locale.
	Locale *string `json:"Locale,omitempty"`
}

// NewLogSiteRequestModel instantiates a new LogSiteRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogSiteRequestModel() *LogSiteRequestModel {
	this := LogSiteRequestModel{}
	return &this
}

// NewLogSiteRequestModelWithDefaults instantiates a new LogSiteRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogSiteRequestModelWithDefaults() *LogSiteRequestModel {
	this := LogSiteRequestModel{}
	return &this
}

// GetLoggingEnabled returns the LoggingEnabled field value if set, zero value otherwise.
func (o *LogSiteRequestModel) GetLoggingEnabled() bool {
	if o == nil || IsNil(o.LoggingEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingEnabled
}

// GetLoggingEnabledOk returns a tuple with the LoggingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSiteRequestModel) GetLoggingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingEnabled) {
		return nil, false
	}
	return o.LoggingEnabled, true
}

// HasLoggingEnabled returns a boolean if a field has been set.
func (o *LogSiteRequestModel) HasLoggingEnabled() bool {
	if o != nil && !IsNil(o.LoggingEnabled) {
		return true
	}

	return false
}

// SetLoggingEnabled gets a reference to the given bool and assigns it to the LoggingEnabled field.
func (o *LogSiteRequestModel) SetLoggingEnabled(v bool) {
	o.LoggingEnabled = &v
}

// GetAllowChangesWhileDatabaseDown returns the AllowChangesWhileDatabaseDown field value if set, zero value otherwise.
func (o *LogSiteRequestModel) GetAllowChangesWhileDatabaseDown() bool {
	if o == nil || IsNil(o.AllowChangesWhileDatabaseDown) {
		var ret bool
		return ret
	}
	return *o.AllowChangesWhileDatabaseDown
}

// GetAllowChangesWhileDatabaseDownOk returns a tuple with the AllowChangesWhileDatabaseDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSiteRequestModel) GetAllowChangesWhileDatabaseDownOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowChangesWhileDatabaseDown) {
		return nil, false
	}
	return o.AllowChangesWhileDatabaseDown, true
}

// HasAllowChangesWhileDatabaseDown returns a boolean if a field has been set.
func (o *LogSiteRequestModel) HasAllowChangesWhileDatabaseDown() bool {
	if o != nil && !IsNil(o.AllowChangesWhileDatabaseDown) {
		return true
	}

	return false
}

// SetAllowChangesWhileDatabaseDown gets a reference to the given bool and assigns it to the AllowChangesWhileDatabaseDown field.
func (o *LogSiteRequestModel) SetAllowChangesWhileDatabaseDown(v bool) {
	o.AllowChangesWhileDatabaseDown = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *LogSiteRequestModel) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSiteRequestModel) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *LogSiteRequestModel) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *LogSiteRequestModel) SetLocale(v string) {
	o.Locale = &v
}

func (o LogSiteRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogSiteRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoggingEnabled) {
		toSerialize["LoggingEnabled"] = o.LoggingEnabled
	}
	if !IsNil(o.AllowChangesWhileDatabaseDown) {
		toSerialize["AllowChangesWhileDatabaseDown"] = o.AllowChangesWhileDatabaseDown
	}
	if !IsNil(o.Locale) {
		toSerialize["Locale"] = o.Locale
	}
	return toSerialize, nil
}

type NullableLogSiteRequestModel struct {
	value *LogSiteRequestModel
	isSet bool
}

func (v NullableLogSiteRequestModel) Get() *LogSiteRequestModel {
	return v.value
}

func (v *NullableLogSiteRequestModel) Set(val *LogSiteRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLogSiteRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLogSiteRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogSiteRequestModel(val *LogSiteRequestModel) *NullableLogSiteRequestModel {
	return &NullableLogSiteRequestModel{value: val, isSet: true}
}

func (v NullableLogSiteRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogSiteRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


