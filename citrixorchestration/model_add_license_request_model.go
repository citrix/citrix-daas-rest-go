/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AddLicenseRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddLicenseRequestModel{}

// AddLicenseRequestModel Request to add license.
type AddLicenseRequestModel struct {
	// Encoded Base64 for license file, and the format should be utf-8.
	LicenseFile string `json:"LicenseFile"`
	// Licence file name to be added.
	FileName string `json:"FileName"`
	// Indicate if override exist license file when the license file already exists.
	OverrideFile bool `json:"OverrideFile"`
}

// NewAddLicenseRequestModel instantiates a new AddLicenseRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddLicenseRequestModel(licenseFile string, fileName string, overrideFile bool) *AddLicenseRequestModel {
	this := AddLicenseRequestModel{}
	this.LicenseFile = licenseFile
	this.FileName = fileName
	this.OverrideFile = overrideFile
	return &this
}

// NewAddLicenseRequestModelWithDefaults instantiates a new AddLicenseRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddLicenseRequestModelWithDefaults() *AddLicenseRequestModel {
	this := AddLicenseRequestModel{}
	return &this
}

// GetLicenseFile returns the LicenseFile field value
func (o *AddLicenseRequestModel) GetLicenseFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseFile
}

// GetLicenseFileOk returns a tuple with the LicenseFile field value
// and a boolean to check if the value has been set.
func (o *AddLicenseRequestModel) GetLicenseFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseFile, true
}

// SetLicenseFile sets field value
func (o *AddLicenseRequestModel) SetLicenseFile(v string) {
	o.LicenseFile = v
}

// GetFileName returns the FileName field value
func (o *AddLicenseRequestModel) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *AddLicenseRequestModel) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *AddLicenseRequestModel) SetFileName(v string) {
	o.FileName = v
}

// GetOverrideFile returns the OverrideFile field value
func (o *AddLicenseRequestModel) GetOverrideFile() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OverrideFile
}

// GetOverrideFileOk returns a tuple with the OverrideFile field value
// and a boolean to check if the value has been set.
func (o *AddLicenseRequestModel) GetOverrideFileOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverrideFile, true
}

// SetOverrideFile sets field value
func (o *AddLicenseRequestModel) SetOverrideFile(v bool) {
	o.OverrideFile = v
}

func (o AddLicenseRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddLicenseRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["LicenseFile"] = o.LicenseFile
	toSerialize["FileName"] = o.FileName
	toSerialize["OverrideFile"] = o.OverrideFile
	return toSerialize, nil
}

type NullableAddLicenseRequestModel struct {
	value *AddLicenseRequestModel
	isSet bool
}

func (v NullableAddLicenseRequestModel) Get() *AddLicenseRequestModel {
	return v.value
}

func (v *NullableAddLicenseRequestModel) Set(val *AddLicenseRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLicenseRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLicenseRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLicenseRequestModel(val *AddLicenseRequestModel) *NullableAddLicenseRequestModel {
	return &NullableAddLicenseRequestModel{value: val, isSet: true}
}

func (v NullableAddLicenseRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLicenseRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


