/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditApplicationFolderRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditApplicationFolderRequestModel{}

// EditApplicationFolderRequestModel Request object for editing an application folder.
type EditApplicationFolderRequestModel struct {
	// Name of the application folder.  If not set, will not be changed.  The name must be unique within the folder's parent folder.
	Name NullableString `json:"Name,omitempty"`
	// Parent folder.  If not set, will not be changed.  Can be set to either Id or Path.  To move the application to the root folder, specify the empty string (\"\").  If specified as a path, and the path does not exist, it will be created.
	Parent NullableString `json:"Parent,omitempty"`
}

// NewEditApplicationFolderRequestModel instantiates a new EditApplicationFolderRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditApplicationFolderRequestModel() *EditApplicationFolderRequestModel {
	this := EditApplicationFolderRequestModel{}
	return &this
}

// NewEditApplicationFolderRequestModelWithDefaults instantiates a new EditApplicationFolderRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditApplicationFolderRequestModelWithDefaults() *EditApplicationFolderRequestModel {
	this := EditApplicationFolderRequestModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationFolderRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationFolderRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditApplicationFolderRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditApplicationFolderRequestModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *EditApplicationFolderRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditApplicationFolderRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetParent returns the Parent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditApplicationFolderRequestModel) GetParent() string {
	if o == nil || IsNil(o.Parent.Get()) {
		var ret string
		return ret
	}
	return *o.Parent.Get()
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditApplicationFolderRequestModel) GetParentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parent.Get(), o.Parent.IsSet()
}

// HasParent returns a boolean if a field has been set.
func (o *EditApplicationFolderRequestModel) HasParent() bool {
	if o != nil && o.Parent.IsSet() {
		return true
	}

	return false
}

// SetParent gets a reference to the given NullableString and assigns it to the Parent field.
func (o *EditApplicationFolderRequestModel) SetParent(v string) {
	o.Parent.Set(&v)
}
// SetParentNil sets the value for Parent to be an explicit nil
func (o *EditApplicationFolderRequestModel) SetParentNil() {
	o.Parent.Set(nil)
}

// UnsetParent ensures that no value is present for Parent, not even an explicit nil
func (o *EditApplicationFolderRequestModel) UnsetParent() {
	o.Parent.Unset()
}

func (o EditApplicationFolderRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditApplicationFolderRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Parent.IsSet() {
		toSerialize["Parent"] = o.Parent.Get()
	}
	return toSerialize, nil
}

type NullableEditApplicationFolderRequestModel struct {
	value *EditApplicationFolderRequestModel
	isSet bool
}

func (v NullableEditApplicationFolderRequestModel) Get() *EditApplicationFolderRequestModel {
	return v.value
}

func (v *NullableEditApplicationFolderRequestModel) Set(val *EditApplicationFolderRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditApplicationFolderRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditApplicationFolderRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditApplicationFolderRequestModel(val *EditApplicationFolderRequestModel) *NullableEditApplicationFolderRequestModel {
	return &NullableEditApplicationFolderRequestModel{value: val, isSet: true}
}

func (v NullableEditApplicationFolderRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditApplicationFolderRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


