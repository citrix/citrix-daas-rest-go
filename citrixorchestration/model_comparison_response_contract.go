/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ComparisonResponseContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComparisonResponseContract{}

// ComparisonResponseContract Comparison report/result.
type ComparisonResponseContract struct {
	// A target is either a policy or template. This list stores the target names.
	Targets []string `json:"Targets,omitempty"`
	// Rows in the report.
	Result []ComparisonRowContract `json:"Result,omitempty"`
	// If true, first column is setting default values.
	WithDefaults *bool `json:"WithDefaults,omitempty"`
}

// NewComparisonResponseContract instantiates a new ComparisonResponseContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComparisonResponseContract() *ComparisonResponseContract {
	this := ComparisonResponseContract{}
	return &this
}

// NewComparisonResponseContractWithDefaults instantiates a new ComparisonResponseContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComparisonResponseContractWithDefaults() *ComparisonResponseContract {
	this := ComparisonResponseContract{}
	return &this
}

// GetTargets returns the Targets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparisonResponseContract) GetTargets() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparisonResponseContract) GetTargetsOk() ([]string, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *ComparisonResponseContract) HasTargets() bool {
	if o != nil && IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []string and assigns it to the Targets field.
func (o *ComparisonResponseContract) SetTargets(v []string) {
	o.Targets = v
}

// GetResult returns the Result field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComparisonResponseContract) GetResult() []ComparisonRowContract {
	if o == nil {
		var ret []ComparisonRowContract
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComparisonResponseContract) GetResultOk() ([]ComparisonRowContract, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ComparisonResponseContract) HasResult() bool {
	if o != nil && IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []ComparisonRowContract and assigns it to the Result field.
func (o *ComparisonResponseContract) SetResult(v []ComparisonRowContract) {
	o.Result = v
}

// GetWithDefaults returns the WithDefaults field value if set, zero value otherwise.
func (o *ComparisonResponseContract) GetWithDefaults() bool {
	if o == nil || IsNil(o.WithDefaults) {
		var ret bool
		return ret
	}
	return *o.WithDefaults
}

// GetWithDefaultsOk returns a tuple with the WithDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComparisonResponseContract) GetWithDefaultsOk() (*bool, bool) {
	if o == nil || IsNil(o.WithDefaults) {
		return nil, false
	}
	return o.WithDefaults, true
}

// HasWithDefaults returns a boolean if a field has been set.
func (o *ComparisonResponseContract) HasWithDefaults() bool {
	if o != nil && !IsNil(o.WithDefaults) {
		return true
	}

	return false
}

// SetWithDefaults gets a reference to the given bool and assigns it to the WithDefaults field.
func (o *ComparisonResponseContract) SetWithDefaults(v bool) {
	o.WithDefaults = &v
}

func (o ComparisonResponseContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComparisonResponseContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Targets != nil {
		toSerialize["Targets"] = o.Targets
	}
	if o.Result != nil {
		toSerialize["Result"] = o.Result
	}
	if !IsNil(o.WithDefaults) {
		toSerialize["WithDefaults"] = o.WithDefaults
	}
	return toSerialize, nil
}

type NullableComparisonResponseContract struct {
	value *ComparisonResponseContract
	isSet bool
}

func (v NullableComparisonResponseContract) Get() *ComparisonResponseContract {
	return v.value
}

func (v *NullableComparisonResponseContract) Set(val *ComparisonResponseContract) {
	v.value = val
	v.isSet = true
}

func (v NullableComparisonResponseContract) IsSet() bool {
	return v.isSet
}

func (v *NullableComparisonResponseContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComparisonResponseContract(val *ComparisonResponseContract) *NullableComparisonResponseContract {
	return &NullableComparisonResponseContract{value: val, isSet: true}
}

func (v NullableComparisonResponseContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComparisonResponseContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


