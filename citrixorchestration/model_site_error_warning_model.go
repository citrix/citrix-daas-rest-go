/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SiteErrorWarningModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteErrorWarningModel{}

// SiteErrorWarningModel struct for SiteErrorWarningModel
type SiteErrorWarningModel struct {
	Category *MisConfigurationCategory `json:"Category,omitempty"`
	// The error or warning message.
	Type NullableString `json:"Type,omitempty"`
	// The time of the error or warning in UTC.
	TimeInUtc NullableString `json:"TimeInUtc,omitempty"`
	// Indicate whether the error or warning is high priority.
	IsHighPriority *bool `json:"IsHighPriority,omitempty"`
}

// NewSiteErrorWarningModel instantiates a new SiteErrorWarningModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteErrorWarningModel() *SiteErrorWarningModel {
	this := SiteErrorWarningModel{}
	return &this
}

// NewSiteErrorWarningModelWithDefaults instantiates a new SiteErrorWarningModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteErrorWarningModelWithDefaults() *SiteErrorWarningModel {
	this := SiteErrorWarningModel{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SiteErrorWarningModel) GetCategory() MisConfigurationCategory {
	if o == nil || IsNil(o.Category) {
		var ret MisConfigurationCategory
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteErrorWarningModel) GetCategoryOk() (*MisConfigurationCategory, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SiteErrorWarningModel) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given MisConfigurationCategory and assigns it to the Category field.
func (o *SiteErrorWarningModel) SetCategory(v MisConfigurationCategory) {
	o.Category = &v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SiteErrorWarningModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SiteErrorWarningModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *SiteErrorWarningModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *SiteErrorWarningModel) SetType(v string) {
	o.Type.Set(&v)
}

// SetTypeNil sets the value for Type to be an explicit nil
func (o *SiteErrorWarningModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *SiteErrorWarningModel) UnsetType() {
	o.Type.Unset()
}

// GetTimeInUtc returns the TimeInUtc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SiteErrorWarningModel) GetTimeInUtc() string {
	if o == nil || IsNil(o.TimeInUtc.Get()) {
		var ret string
		return ret
	}
	return *o.TimeInUtc.Get()
}

// GetTimeInUtcOk returns a tuple with the TimeInUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SiteErrorWarningModel) GetTimeInUtcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeInUtc.Get(), o.TimeInUtc.IsSet()
}

// HasTimeInUtc returns a boolean if a field has been set.
func (o *SiteErrorWarningModel) HasTimeInUtc() bool {
	if o != nil && o.TimeInUtc.IsSet() {
		return true
	}

	return false
}

// SetTimeInUtc gets a reference to the given NullableString and assigns it to the TimeInUtc field.
func (o *SiteErrorWarningModel) SetTimeInUtc(v string) {
	o.TimeInUtc.Set(&v)
}

// SetTimeInUtcNil sets the value for TimeInUtc to be an explicit nil
func (o *SiteErrorWarningModel) SetTimeInUtcNil() {
	o.TimeInUtc.Set(nil)
}

// UnsetTimeInUtc ensures that no value is present for TimeInUtc, not even an explicit nil
func (o *SiteErrorWarningModel) UnsetTimeInUtc() {
	o.TimeInUtc.Unset()
}

// GetIsHighPriority returns the IsHighPriority field value if set, zero value otherwise.
func (o *SiteErrorWarningModel) GetIsHighPriority() bool {
	if o == nil || IsNil(o.IsHighPriority) {
		var ret bool
		return ret
	}
	return *o.IsHighPriority
}

// GetIsHighPriorityOk returns a tuple with the IsHighPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteErrorWarningModel) GetIsHighPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHighPriority) {
		return nil, false
	}
	return o.IsHighPriority, true
}

// HasIsHighPriority returns a boolean if a field has been set.
func (o *SiteErrorWarningModel) HasIsHighPriority() bool {
	if o != nil && !IsNil(o.IsHighPriority) {
		return true
	}

	return false
}

// SetIsHighPriority gets a reference to the given bool and assigns it to the IsHighPriority field.
func (o *SiteErrorWarningModel) SetIsHighPriority(v bool) {
	o.IsHighPriority = &v
}

func (o SiteErrorWarningModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteErrorWarningModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["Category"] = o.Category
	}
	if o.Type.IsSet() {
		toSerialize["Type"] = o.Type.Get()
	}
	if o.TimeInUtc.IsSet() {
		toSerialize["TimeInUtc"] = o.TimeInUtc.Get()
	}
	if !IsNil(o.IsHighPriority) {
		toSerialize["IsHighPriority"] = o.IsHighPriority
	}
	return toSerialize, nil
}

type NullableSiteErrorWarningModel struct {
	value *SiteErrorWarningModel
	isSet bool
}

func (v NullableSiteErrorWarningModel) Get() *SiteErrorWarningModel {
	return v.value
}

func (v *NullableSiteErrorWarningModel) Set(val *SiteErrorWarningModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteErrorWarningModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteErrorWarningModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteErrorWarningModel(val *SiteErrorWarningModel) *NullableSiteErrorWarningModel {
	return &NullableSiteErrorWarningModel{value: val, isSet: true}
}

func (v NullableSiteErrorWarningModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteErrorWarningModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
