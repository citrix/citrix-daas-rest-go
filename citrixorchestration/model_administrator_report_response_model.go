/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AdministratorReportResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdministratorReportResponseModel{}

// AdministratorReportResponseModel struct for AdministratorReportResponseModel
type AdministratorReportResponseModel struct {
	// The encoded report as string. That is: RFC-4648-base-64(utf-8(html-report-content))
	EncodedReport NullableString `json:"EncodedReport,omitempty"`
	// The encoding of the EncodedReport.
	Encoding NullableString `json:"Encoding,omitempty"`
	// The media type of the report content;
	MediaType NullableString `json:"MediaType,omitempty"`
}

// NewAdministratorReportResponseModel instantiates a new AdministratorReportResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministratorReportResponseModel() *AdministratorReportResponseModel {
	this := AdministratorReportResponseModel{}
	return &this
}

// NewAdministratorReportResponseModelWithDefaults instantiates a new AdministratorReportResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministratorReportResponseModelWithDefaults() *AdministratorReportResponseModel {
	this := AdministratorReportResponseModel{}
	return &this
}

// GetEncodedReport returns the EncodedReport field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdministratorReportResponseModel) GetEncodedReport() string {
	if o == nil || IsNil(o.EncodedReport.Get()) {
		var ret string
		return ret
	}
	return *o.EncodedReport.Get()
}

// GetEncodedReportOk returns a tuple with the EncodedReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdministratorReportResponseModel) GetEncodedReportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncodedReport.Get(), o.EncodedReport.IsSet()
}

// HasEncodedReport returns a boolean if a field has been set.
func (o *AdministratorReportResponseModel) HasEncodedReport() bool {
	if o != nil && o.EncodedReport.IsSet() {
		return true
	}

	return false
}

// SetEncodedReport gets a reference to the given NullableString and assigns it to the EncodedReport field.
func (o *AdministratorReportResponseModel) SetEncodedReport(v string) {
	o.EncodedReport.Set(&v)
}
// SetEncodedReportNil sets the value for EncodedReport to be an explicit nil
func (o *AdministratorReportResponseModel) SetEncodedReportNil() {
	o.EncodedReport.Set(nil)
}

// UnsetEncodedReport ensures that no value is present for EncodedReport, not even an explicit nil
func (o *AdministratorReportResponseModel) UnsetEncodedReport() {
	o.EncodedReport.Unset()
}

// GetEncoding returns the Encoding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdministratorReportResponseModel) GetEncoding() string {
	if o == nil || IsNil(o.Encoding.Get()) {
		var ret string
		return ret
	}
	return *o.Encoding.Get()
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdministratorReportResponseModel) GetEncodingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Encoding.Get(), o.Encoding.IsSet()
}

// HasEncoding returns a boolean if a field has been set.
func (o *AdministratorReportResponseModel) HasEncoding() bool {
	if o != nil && o.Encoding.IsSet() {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given NullableString and assigns it to the Encoding field.
func (o *AdministratorReportResponseModel) SetEncoding(v string) {
	o.Encoding.Set(&v)
}
// SetEncodingNil sets the value for Encoding to be an explicit nil
func (o *AdministratorReportResponseModel) SetEncodingNil() {
	o.Encoding.Set(nil)
}

// UnsetEncoding ensures that no value is present for Encoding, not even an explicit nil
func (o *AdministratorReportResponseModel) UnsetEncoding() {
	o.Encoding.Unset()
}

// GetMediaType returns the MediaType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdministratorReportResponseModel) GetMediaType() string {
	if o == nil || IsNil(o.MediaType.Get()) {
		var ret string
		return ret
	}
	return *o.MediaType.Get()
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdministratorReportResponseModel) GetMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MediaType.Get(), o.MediaType.IsSet()
}

// HasMediaType returns a boolean if a field has been set.
func (o *AdministratorReportResponseModel) HasMediaType() bool {
	if o != nil && o.MediaType.IsSet() {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given NullableString and assigns it to the MediaType field.
func (o *AdministratorReportResponseModel) SetMediaType(v string) {
	o.MediaType.Set(&v)
}
// SetMediaTypeNil sets the value for MediaType to be an explicit nil
func (o *AdministratorReportResponseModel) SetMediaTypeNil() {
	o.MediaType.Set(nil)
}

// UnsetMediaType ensures that no value is present for MediaType, not even an explicit nil
func (o *AdministratorReportResponseModel) UnsetMediaType() {
	o.MediaType.Unset()
}

func (o AdministratorReportResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdministratorReportResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EncodedReport.IsSet() {
		toSerialize["EncodedReport"] = o.EncodedReport.Get()
	}
	if o.Encoding.IsSet() {
		toSerialize["Encoding"] = o.Encoding.Get()
	}
	if o.MediaType.IsSet() {
		toSerialize["MediaType"] = o.MediaType.Get()
	}
	return toSerialize, nil
}

type NullableAdministratorReportResponseModel struct {
	value *AdministratorReportResponseModel
	isSet bool
}

func (v NullableAdministratorReportResponseModel) Get() *AdministratorReportResponseModel {
	return v.value
}

func (v *NullableAdministratorReportResponseModel) Set(val *AdministratorReportResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministratorReportResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministratorReportResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministratorReportResponseModel(val *AdministratorReportResponseModel) *NullableAdministratorReportResponseModel {
	return &NullableAdministratorReportResponseModel{value: val, isSet: true}
}

func (v NullableAdministratorReportResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministratorReportResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


