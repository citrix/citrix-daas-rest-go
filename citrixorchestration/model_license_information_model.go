/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseInformationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseInformationModel{}

// LicenseInformationModel LicenseInformationModel
type LicenseInformationModel struct {
	// The WSL Address of the license server, the format is https://[FQDN:Port]
	LicenseServerWslAddress *string `json:"LicenseServerWslAddress,omitempty"`
	// The address of License Address
	LicenseServerLicensingAddress *string `json:"LicenseServerLicensingAddress,omitempty"`
	// The address of license server without the schema
	LicenseServer *string `json:"LicenseServer,omitempty"`
	// The port of license server
	LicensePort *int32 `json:"LicensePort,omitempty"`
	// The subscription advantage date of the license
	LicensingBurnInDate *string `json:"LicensingBurnInDate,omitempty"`
	LicenseProduct *LicenseProduct `json:"LicenseProduct,omitempty"`
	ProductEdition *ProductEdition `json:"ProductEdition,omitempty"`
	LicenseModel *LicenseModel `json:"LicenseModel,omitempty"`
	// Indicate if trial license is used
	OutOfBoxGracePeriodActive *bool `json:"OutOfBoxGracePeriodActive,omitempty"`
	// Indicate remaining hours for the trial period
	OutOfBoxGracePeriodHoursLeft *int32 `json:"OutOfBoxGracePeriodHoursLeft,omitempty"`
}

// NewLicenseInformationModel instantiates a new LicenseInformationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseInformationModel() *LicenseInformationModel {
	this := LicenseInformationModel{}
	return &this
}

// NewLicenseInformationModelWithDefaults instantiates a new LicenseInformationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseInformationModelWithDefaults() *LicenseInformationModel {
	this := LicenseInformationModel{}
	return &this
}

// GetLicenseServerWslAddress returns the LicenseServerWslAddress field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicenseServerWslAddress() string {
	if o == nil || IsNil(o.LicenseServerWslAddress) {
		var ret string
		return ret
	}
	return *o.LicenseServerWslAddress
}

// GetLicenseServerWslAddressOk returns a tuple with the LicenseServerWslAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicenseServerWslAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseServerWslAddress) {
		return nil, false
	}
	return o.LicenseServerWslAddress, true
}

// HasLicenseServerWslAddress returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicenseServerWslAddress() bool {
	if o != nil && !IsNil(o.LicenseServerWslAddress) {
		return true
	}

	return false
}

// SetLicenseServerWslAddress gets a reference to the given string and assigns it to the LicenseServerWslAddress field.
func (o *LicenseInformationModel) SetLicenseServerWslAddress(v string) {
	o.LicenseServerWslAddress = &v
}

// GetLicenseServerLicensingAddress returns the LicenseServerLicensingAddress field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicenseServerLicensingAddress() string {
	if o == nil || IsNil(o.LicenseServerLicensingAddress) {
		var ret string
		return ret
	}
	return *o.LicenseServerLicensingAddress
}

// GetLicenseServerLicensingAddressOk returns a tuple with the LicenseServerLicensingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicenseServerLicensingAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseServerLicensingAddress) {
		return nil, false
	}
	return o.LicenseServerLicensingAddress, true
}

// HasLicenseServerLicensingAddress returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicenseServerLicensingAddress() bool {
	if o != nil && !IsNil(o.LicenseServerLicensingAddress) {
		return true
	}

	return false
}

// SetLicenseServerLicensingAddress gets a reference to the given string and assigns it to the LicenseServerLicensingAddress field.
func (o *LicenseInformationModel) SetLicenseServerLicensingAddress(v string) {
	o.LicenseServerLicensingAddress = &v
}

// GetLicenseServer returns the LicenseServer field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicenseServer() string {
	if o == nil || IsNil(o.LicenseServer) {
		var ret string
		return ret
	}
	return *o.LicenseServer
}

// GetLicenseServerOk returns a tuple with the LicenseServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicenseServerOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseServer) {
		return nil, false
	}
	return o.LicenseServer, true
}

// HasLicenseServer returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicenseServer() bool {
	if o != nil && !IsNil(o.LicenseServer) {
		return true
	}

	return false
}

// SetLicenseServer gets a reference to the given string and assigns it to the LicenseServer field.
func (o *LicenseInformationModel) SetLicenseServer(v string) {
	o.LicenseServer = &v
}

// GetLicensePort returns the LicensePort field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicensePort() int32 {
	if o == nil || IsNil(o.LicensePort) {
		var ret int32
		return ret
	}
	return *o.LicensePort
}

// GetLicensePortOk returns a tuple with the LicensePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicensePortOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensePort) {
		return nil, false
	}
	return o.LicensePort, true
}

// HasLicensePort returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicensePort() bool {
	if o != nil && !IsNil(o.LicensePort) {
		return true
	}

	return false
}

// SetLicensePort gets a reference to the given int32 and assigns it to the LicensePort field.
func (o *LicenseInformationModel) SetLicensePort(v int32) {
	o.LicensePort = &v
}

// GetLicensingBurnInDate returns the LicensingBurnInDate field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicensingBurnInDate() string {
	if o == nil || IsNil(o.LicensingBurnInDate) {
		var ret string
		return ret
	}
	return *o.LicensingBurnInDate
}

// GetLicensingBurnInDateOk returns a tuple with the LicensingBurnInDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicensingBurnInDateOk() (*string, bool) {
	if o == nil || IsNil(o.LicensingBurnInDate) {
		return nil, false
	}
	return o.LicensingBurnInDate, true
}

// HasLicensingBurnInDate returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicensingBurnInDate() bool {
	if o != nil && !IsNil(o.LicensingBurnInDate) {
		return true
	}

	return false
}

// SetLicensingBurnInDate gets a reference to the given string and assigns it to the LicensingBurnInDate field.
func (o *LicenseInformationModel) SetLicensingBurnInDate(v string) {
	o.LicensingBurnInDate = &v
}

// GetLicenseProduct returns the LicenseProduct field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicenseProduct() LicenseProduct {
	if o == nil || IsNil(o.LicenseProduct) {
		var ret LicenseProduct
		return ret
	}
	return *o.LicenseProduct
}

// GetLicenseProductOk returns a tuple with the LicenseProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicenseProductOk() (*LicenseProduct, bool) {
	if o == nil || IsNil(o.LicenseProduct) {
		return nil, false
	}
	return o.LicenseProduct, true
}

// HasLicenseProduct returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicenseProduct() bool {
	if o != nil && !IsNil(o.LicenseProduct) {
		return true
	}

	return false
}

// SetLicenseProduct gets a reference to the given LicenseProduct and assigns it to the LicenseProduct field.
func (o *LicenseInformationModel) SetLicenseProduct(v LicenseProduct) {
	o.LicenseProduct = &v
}

// GetProductEdition returns the ProductEdition field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetProductEdition() ProductEdition {
	if o == nil || IsNil(o.ProductEdition) {
		var ret ProductEdition
		return ret
	}
	return *o.ProductEdition
}

// GetProductEditionOk returns a tuple with the ProductEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetProductEditionOk() (*ProductEdition, bool) {
	if o == nil || IsNil(o.ProductEdition) {
		return nil, false
	}
	return o.ProductEdition, true
}

// HasProductEdition returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasProductEdition() bool {
	if o != nil && !IsNil(o.ProductEdition) {
		return true
	}

	return false
}

// SetProductEdition gets a reference to the given ProductEdition and assigns it to the ProductEdition field.
func (o *LicenseInformationModel) SetProductEdition(v ProductEdition) {
	o.ProductEdition = &v
}

// GetLicenseModel returns the LicenseModel field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetLicenseModel() LicenseModel {
	if o == nil || IsNil(o.LicenseModel) {
		var ret LicenseModel
		return ret
	}
	return *o.LicenseModel
}

// GetLicenseModelOk returns a tuple with the LicenseModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetLicenseModelOk() (*LicenseModel, bool) {
	if o == nil || IsNil(o.LicenseModel) {
		return nil, false
	}
	return o.LicenseModel, true
}

// HasLicenseModel returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasLicenseModel() bool {
	if o != nil && !IsNil(o.LicenseModel) {
		return true
	}

	return false
}

// SetLicenseModel gets a reference to the given LicenseModel and assigns it to the LicenseModel field.
func (o *LicenseInformationModel) SetLicenseModel(v LicenseModel) {
	o.LicenseModel = &v
}

// GetOutOfBoxGracePeriodActive returns the OutOfBoxGracePeriodActive field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetOutOfBoxGracePeriodActive() bool {
	if o == nil || IsNil(o.OutOfBoxGracePeriodActive) {
		var ret bool
		return ret
	}
	return *o.OutOfBoxGracePeriodActive
}

// GetOutOfBoxGracePeriodActiveOk returns a tuple with the OutOfBoxGracePeriodActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetOutOfBoxGracePeriodActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.OutOfBoxGracePeriodActive) {
		return nil, false
	}
	return o.OutOfBoxGracePeriodActive, true
}

// HasOutOfBoxGracePeriodActive returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasOutOfBoxGracePeriodActive() bool {
	if o != nil && !IsNil(o.OutOfBoxGracePeriodActive) {
		return true
	}

	return false
}

// SetOutOfBoxGracePeriodActive gets a reference to the given bool and assigns it to the OutOfBoxGracePeriodActive field.
func (o *LicenseInformationModel) SetOutOfBoxGracePeriodActive(v bool) {
	o.OutOfBoxGracePeriodActive = &v
}

// GetOutOfBoxGracePeriodHoursLeft returns the OutOfBoxGracePeriodHoursLeft field value if set, zero value otherwise.
func (o *LicenseInformationModel) GetOutOfBoxGracePeriodHoursLeft() int32 {
	if o == nil || IsNil(o.OutOfBoxGracePeriodHoursLeft) {
		var ret int32
		return ret
	}
	return *o.OutOfBoxGracePeriodHoursLeft
}

// GetOutOfBoxGracePeriodHoursLeftOk returns a tuple with the OutOfBoxGracePeriodHoursLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInformationModel) GetOutOfBoxGracePeriodHoursLeftOk() (*int32, bool) {
	if o == nil || IsNil(o.OutOfBoxGracePeriodHoursLeft) {
		return nil, false
	}
	return o.OutOfBoxGracePeriodHoursLeft, true
}

// HasOutOfBoxGracePeriodHoursLeft returns a boolean if a field has been set.
func (o *LicenseInformationModel) HasOutOfBoxGracePeriodHoursLeft() bool {
	if o != nil && !IsNil(o.OutOfBoxGracePeriodHoursLeft) {
		return true
	}

	return false
}

// SetOutOfBoxGracePeriodHoursLeft gets a reference to the given int32 and assigns it to the OutOfBoxGracePeriodHoursLeft field.
func (o *LicenseInformationModel) SetOutOfBoxGracePeriodHoursLeft(v int32) {
	o.OutOfBoxGracePeriodHoursLeft = &v
}

func (o LicenseInformationModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseInformationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseServerWslAddress) {
		toSerialize["LicenseServerWslAddress"] = o.LicenseServerWslAddress
	}
	if !IsNil(o.LicenseServerLicensingAddress) {
		toSerialize["LicenseServerLicensingAddress"] = o.LicenseServerLicensingAddress
	}
	if !IsNil(o.LicenseServer) {
		toSerialize["LicenseServer"] = o.LicenseServer
	}
	if !IsNil(o.LicensePort) {
		toSerialize["LicensePort"] = o.LicensePort
	}
	if !IsNil(o.LicensingBurnInDate) {
		toSerialize["LicensingBurnInDate"] = o.LicensingBurnInDate
	}
	if !IsNil(o.LicenseProduct) {
		toSerialize["LicenseProduct"] = o.LicenseProduct
	}
	if !IsNil(o.ProductEdition) {
		toSerialize["ProductEdition"] = o.ProductEdition
	}
	if !IsNil(o.LicenseModel) {
		toSerialize["LicenseModel"] = o.LicenseModel
	}
	if !IsNil(o.OutOfBoxGracePeriodActive) {
		toSerialize["OutOfBoxGracePeriodActive"] = o.OutOfBoxGracePeriodActive
	}
	if !IsNil(o.OutOfBoxGracePeriodHoursLeft) {
		toSerialize["OutOfBoxGracePeriodHoursLeft"] = o.OutOfBoxGracePeriodHoursLeft
	}
	return toSerialize, nil
}

type NullableLicenseInformationModel struct {
	value *LicenseInformationModel
	isSet bool
}

func (v NullableLicenseInformationModel) Get() *LicenseInformationModel {
	return v.value
}

func (v *NullableLicenseInformationModel) Set(val *LicenseInformationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseInformationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseInformationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseInformationModel(val *LicenseInformationModel) *NullableLicenseInformationModel {
	return &NullableLicenseInformationModel{value: val, isSet: true}
}

func (v NullableLicenseInformationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseInformationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


