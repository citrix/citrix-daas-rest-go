/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ProvisioningOperationEventSearchResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningOperationEventSearchResponseModel{}

// ProvisioningOperationEventSearchResponseModel Response model for provisioned virtual machine.
type ProvisioningOperationEventSearchResponseModel struct {
	// Linked Object Type.
	LinkedObjectType NullableString `json:"LinkedObjectType,omitempty"`
	// Linked Object Uid.
	LinkedObjectUid NullableString `json:"LinkedObjectUid,omitempty"`
	// Event Record Id.
	EventRecordId *int64 `json:"EventRecordId,omitempty"`
	// Event Categaory.
	EventCategory NullableString `json:"EventCategory,omitempty"`
	// Event Severity.
	EventSeverity NullableString `json:"EventSeverity,omitempty"`
	// Event Source.
	EventSource NullableString `json:"EventSource,omitempty"`
	// Event State.
	EventState NullableString `json:"EventState,omitempty"`
	// Event Message.
	EventMessage NullableString `json:"EventMessage,omitempty"`
	// Event Date Time.
	EventDateTime NullableString `json:"EventDateTime,omitempty"`
	// Event Additional Data.
	EventAdditionalData NullableString `json:"EventAdditionalData,omitempty"`
	// Operation Name.
	OperationName NullableString `json:"OperationName,omitempty"`
	// Operation Target Type.
	OperationTargetType NullableString `json:"OperationTargetType,omitempty"`
	// Operation Target Name.
	OperationTargetName NullableString `json:"OperationTargetName,omitempty"`
	// Operation Type.
	OperationType NullableString `json:"OperationType,omitempty"`
	// Linked Object Name.
	LinkedObjectName NullableString `json:"LinkedObjectName,omitempty"`
	// Recommendation.
	Recommendation NullableString `json:"Recommendation,omitempty"`
}

// NewProvisioningOperationEventSearchResponseModel instantiates a new ProvisioningOperationEventSearchResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningOperationEventSearchResponseModel() *ProvisioningOperationEventSearchResponseModel {
	this := ProvisioningOperationEventSearchResponseModel{}
	return &this
}

// NewProvisioningOperationEventSearchResponseModelWithDefaults instantiates a new ProvisioningOperationEventSearchResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningOperationEventSearchResponseModelWithDefaults() *ProvisioningOperationEventSearchResponseModel {
	this := ProvisioningOperationEventSearchResponseModel{}
	return &this
}

// GetLinkedObjectType returns the LinkedObjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectType() string {
	if o == nil || IsNil(o.LinkedObjectType.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedObjectType.Get()
}

// GetLinkedObjectTypeOk returns a tuple with the LinkedObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedObjectType.Get(), o.LinkedObjectType.IsSet()
}

// HasLinkedObjectType returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasLinkedObjectType() bool {
	if o != nil && o.LinkedObjectType.IsSet() {
		return true
	}

	return false
}

// SetLinkedObjectType gets a reference to the given NullableString and assigns it to the LinkedObjectType field.
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectType(v string) {
	o.LinkedObjectType.Set(&v)
}

// SetLinkedObjectTypeNil sets the value for LinkedObjectType to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectTypeNil() {
	o.LinkedObjectType.Set(nil)
}

// UnsetLinkedObjectType ensures that no value is present for LinkedObjectType, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetLinkedObjectType() {
	o.LinkedObjectType.Unset()
}

// GetLinkedObjectUid returns the LinkedObjectUid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectUid() string {
	if o == nil || IsNil(o.LinkedObjectUid.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedObjectUid.Get()
}

// GetLinkedObjectUidOk returns a tuple with the LinkedObjectUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedObjectUid.Get(), o.LinkedObjectUid.IsSet()
}

// HasLinkedObjectUid returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasLinkedObjectUid() bool {
	if o != nil && o.LinkedObjectUid.IsSet() {
		return true
	}

	return false
}

// SetLinkedObjectUid gets a reference to the given NullableString and assigns it to the LinkedObjectUid field.
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectUid(v string) {
	o.LinkedObjectUid.Set(&v)
}

// SetLinkedObjectUidNil sets the value for LinkedObjectUid to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectUidNil() {
	o.LinkedObjectUid.Set(nil)
}

// UnsetLinkedObjectUid ensures that no value is present for LinkedObjectUid, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetLinkedObjectUid() {
	o.LinkedObjectUid.Unset()
}

// GetEventRecordId returns the EventRecordId field value if set, zero value otherwise.
func (o *ProvisioningOperationEventSearchResponseModel) GetEventRecordId() int64 {
	if o == nil || IsNil(o.EventRecordId) {
		var ret int64
		return ret
	}
	return *o.EventRecordId
}

// GetEventRecordIdOk returns a tuple with the EventRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningOperationEventSearchResponseModel) GetEventRecordIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EventRecordId) {
		return nil, false
	}
	return o.EventRecordId, true
}

// HasEventRecordId returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventRecordId() bool {
	if o != nil && !IsNil(o.EventRecordId) {
		return true
	}

	return false
}

// SetEventRecordId gets a reference to the given int64 and assigns it to the EventRecordId field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventRecordId(v int64) {
	o.EventRecordId = &v
}

// GetEventCategory returns the EventCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventCategory() string {
	if o == nil || IsNil(o.EventCategory.Get()) {
		var ret string
		return ret
	}
	return *o.EventCategory.Get()
}

// GetEventCategoryOk returns a tuple with the EventCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventCategory.Get(), o.EventCategory.IsSet()
}

// HasEventCategory returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventCategory() bool {
	if o != nil && o.EventCategory.IsSet() {
		return true
	}

	return false
}

// SetEventCategory gets a reference to the given NullableString and assigns it to the EventCategory field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventCategory(v string) {
	o.EventCategory.Set(&v)
}

// SetEventCategoryNil sets the value for EventCategory to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventCategoryNil() {
	o.EventCategory.Set(nil)
}

// UnsetEventCategory ensures that no value is present for EventCategory, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventCategory() {
	o.EventCategory.Unset()
}

// GetEventSeverity returns the EventSeverity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventSeverity() string {
	if o == nil || IsNil(o.EventSeverity.Get()) {
		var ret string
		return ret
	}
	return *o.EventSeverity.Get()
}

// GetEventSeverityOk returns a tuple with the EventSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventSeverity.Get(), o.EventSeverity.IsSet()
}

// HasEventSeverity returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventSeverity() bool {
	if o != nil && o.EventSeverity.IsSet() {
		return true
	}

	return false
}

// SetEventSeverity gets a reference to the given NullableString and assigns it to the EventSeverity field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventSeverity(v string) {
	o.EventSeverity.Set(&v)
}

// SetEventSeverityNil sets the value for EventSeverity to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventSeverityNil() {
	o.EventSeverity.Set(nil)
}

// UnsetEventSeverity ensures that no value is present for EventSeverity, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventSeverity() {
	o.EventSeverity.Unset()
}

// GetEventSource returns the EventSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventSource() string {
	if o == nil || IsNil(o.EventSource.Get()) {
		var ret string
		return ret
	}
	return *o.EventSource.Get()
}

// GetEventSourceOk returns a tuple with the EventSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventSource.Get(), o.EventSource.IsSet()
}

// HasEventSource returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventSource() bool {
	if o != nil && o.EventSource.IsSet() {
		return true
	}

	return false
}

// SetEventSource gets a reference to the given NullableString and assigns it to the EventSource field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventSource(v string) {
	o.EventSource.Set(&v)
}

// SetEventSourceNil sets the value for EventSource to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventSourceNil() {
	o.EventSource.Set(nil)
}

// UnsetEventSource ensures that no value is present for EventSource, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventSource() {
	o.EventSource.Unset()
}

// GetEventState returns the EventState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventState() string {
	if o == nil || IsNil(o.EventState.Get()) {
		var ret string
		return ret
	}
	return *o.EventState.Get()
}

// GetEventStateOk returns a tuple with the EventState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventState.Get(), o.EventState.IsSet()
}

// HasEventState returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventState() bool {
	if o != nil && o.EventState.IsSet() {
		return true
	}

	return false
}

// SetEventState gets a reference to the given NullableString and assigns it to the EventState field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventState(v string) {
	o.EventState.Set(&v)
}

// SetEventStateNil sets the value for EventState to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventStateNil() {
	o.EventState.Set(nil)
}

// UnsetEventState ensures that no value is present for EventState, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventState() {
	o.EventState.Unset()
}

// GetEventMessage returns the EventMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventMessage() string {
	if o == nil || IsNil(o.EventMessage.Get()) {
		var ret string
		return ret
	}
	return *o.EventMessage.Get()
}

// GetEventMessageOk returns a tuple with the EventMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventMessage.Get(), o.EventMessage.IsSet()
}

// HasEventMessage returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventMessage() bool {
	if o != nil && o.EventMessage.IsSet() {
		return true
	}

	return false
}

// SetEventMessage gets a reference to the given NullableString and assigns it to the EventMessage field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventMessage(v string) {
	o.EventMessage.Set(&v)
}

// SetEventMessageNil sets the value for EventMessage to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventMessageNil() {
	o.EventMessage.Set(nil)
}

// UnsetEventMessage ensures that no value is present for EventMessage, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventMessage() {
	o.EventMessage.Unset()
}

// GetEventDateTime returns the EventDateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventDateTime() string {
	if o == nil || IsNil(o.EventDateTime.Get()) {
		var ret string
		return ret
	}
	return *o.EventDateTime.Get()
}

// GetEventDateTimeOk returns a tuple with the EventDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventDateTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventDateTime.Get(), o.EventDateTime.IsSet()
}

// HasEventDateTime returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventDateTime() bool {
	if o != nil && o.EventDateTime.IsSet() {
		return true
	}

	return false
}

// SetEventDateTime gets a reference to the given NullableString and assigns it to the EventDateTime field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventDateTime(v string) {
	o.EventDateTime.Set(&v)
}

// SetEventDateTimeNil sets the value for EventDateTime to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventDateTimeNil() {
	o.EventDateTime.Set(nil)
}

// UnsetEventDateTime ensures that no value is present for EventDateTime, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventDateTime() {
	o.EventDateTime.Unset()
}

// GetEventAdditionalData returns the EventAdditionalData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetEventAdditionalData() string {
	if o == nil || IsNil(o.EventAdditionalData.Get()) {
		var ret string
		return ret
	}
	return *o.EventAdditionalData.Get()
}

// GetEventAdditionalDataOk returns a tuple with the EventAdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetEventAdditionalDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventAdditionalData.Get(), o.EventAdditionalData.IsSet()
}

// HasEventAdditionalData returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasEventAdditionalData() bool {
	if o != nil && o.EventAdditionalData.IsSet() {
		return true
	}

	return false
}

// SetEventAdditionalData gets a reference to the given NullableString and assigns it to the EventAdditionalData field.
func (o *ProvisioningOperationEventSearchResponseModel) SetEventAdditionalData(v string) {
	o.EventAdditionalData.Set(&v)
}

// SetEventAdditionalDataNil sets the value for EventAdditionalData to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetEventAdditionalDataNil() {
	o.EventAdditionalData.Set(nil)
}

// UnsetEventAdditionalData ensures that no value is present for EventAdditionalData, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetEventAdditionalData() {
	o.EventAdditionalData.Unset()
}

// GetOperationName returns the OperationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationName() string {
	if o == nil || IsNil(o.OperationName.Get()) {
		var ret string
		return ret
	}
	return *o.OperationName.Get()
}

// GetOperationNameOk returns a tuple with the OperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperationName.Get(), o.OperationName.IsSet()
}

// HasOperationName returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasOperationName() bool {
	if o != nil && o.OperationName.IsSet() {
		return true
	}

	return false
}

// SetOperationName gets a reference to the given NullableString and assigns it to the OperationName field.
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationName(v string) {
	o.OperationName.Set(&v)
}

// SetOperationNameNil sets the value for OperationName to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationNameNil() {
	o.OperationName.Set(nil)
}

// UnsetOperationName ensures that no value is present for OperationName, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetOperationName() {
	o.OperationName.Unset()
}

// GetOperationTargetType returns the OperationTargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationTargetType() string {
	if o == nil || IsNil(o.OperationTargetType.Get()) {
		var ret string
		return ret
	}
	return *o.OperationTargetType.Get()
}

// GetOperationTargetTypeOk returns a tuple with the OperationTargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationTargetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperationTargetType.Get(), o.OperationTargetType.IsSet()
}

// HasOperationTargetType returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasOperationTargetType() bool {
	if o != nil && o.OperationTargetType.IsSet() {
		return true
	}

	return false
}

// SetOperationTargetType gets a reference to the given NullableString and assigns it to the OperationTargetType field.
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationTargetType(v string) {
	o.OperationTargetType.Set(&v)
}

// SetOperationTargetTypeNil sets the value for OperationTargetType to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationTargetTypeNil() {
	o.OperationTargetType.Set(nil)
}

// UnsetOperationTargetType ensures that no value is present for OperationTargetType, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetOperationTargetType() {
	o.OperationTargetType.Unset()
}

// GetOperationTargetName returns the OperationTargetName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationTargetName() string {
	if o == nil || IsNil(o.OperationTargetName.Get()) {
		var ret string
		return ret
	}
	return *o.OperationTargetName.Get()
}

// GetOperationTargetNameOk returns a tuple with the OperationTargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationTargetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperationTargetName.Get(), o.OperationTargetName.IsSet()
}

// HasOperationTargetName returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasOperationTargetName() bool {
	if o != nil && o.OperationTargetName.IsSet() {
		return true
	}

	return false
}

// SetOperationTargetName gets a reference to the given NullableString and assigns it to the OperationTargetName field.
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationTargetName(v string) {
	o.OperationTargetName.Set(&v)
}

// SetOperationTargetNameNil sets the value for OperationTargetName to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationTargetNameNil() {
	o.OperationTargetName.Set(nil)
}

// UnsetOperationTargetName ensures that no value is present for OperationTargetName, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetOperationTargetName() {
	o.OperationTargetName.Unset()
}

// GetOperationType returns the OperationType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationType() string {
	if o == nil || IsNil(o.OperationType.Get()) {
		var ret string
		return ret
	}
	return *o.OperationType.Get()
}

// GetOperationTypeOk returns a tuple with the OperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetOperationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OperationType.Get(), o.OperationType.IsSet()
}

// HasOperationType returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasOperationType() bool {
	if o != nil && o.OperationType.IsSet() {
		return true
	}

	return false
}

// SetOperationType gets a reference to the given NullableString and assigns it to the OperationType field.
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationType(v string) {
	o.OperationType.Set(&v)
}

// SetOperationTypeNil sets the value for OperationType to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetOperationTypeNil() {
	o.OperationType.Set(nil)
}

// UnsetOperationType ensures that no value is present for OperationType, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetOperationType() {
	o.OperationType.Unset()
}

// GetLinkedObjectName returns the LinkedObjectName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectName() string {
	if o == nil || IsNil(o.LinkedObjectName.Get()) {
		var ret string
		return ret
	}
	return *o.LinkedObjectName.Get()
}

// GetLinkedObjectNameOk returns a tuple with the LinkedObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetLinkedObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedObjectName.Get(), o.LinkedObjectName.IsSet()
}

// HasLinkedObjectName returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasLinkedObjectName() bool {
	if o != nil && o.LinkedObjectName.IsSet() {
		return true
	}

	return false
}

// SetLinkedObjectName gets a reference to the given NullableString and assigns it to the LinkedObjectName field.
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectName(v string) {
	o.LinkedObjectName.Set(&v)
}

// SetLinkedObjectNameNil sets the value for LinkedObjectName to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetLinkedObjectNameNil() {
	o.LinkedObjectName.Set(nil)
}

// UnsetLinkedObjectName ensures that no value is present for LinkedObjectName, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetLinkedObjectName() {
	o.LinkedObjectName.Unset()
}

// GetRecommendation returns the Recommendation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningOperationEventSearchResponseModel) GetRecommendation() string {
	if o == nil || IsNil(o.Recommendation.Get()) {
		var ret string
		return ret
	}
	return *o.Recommendation.Get()
}

// GetRecommendationOk returns a tuple with the Recommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningOperationEventSearchResponseModel) GetRecommendationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recommendation.Get(), o.Recommendation.IsSet()
}

// HasRecommendation returns a boolean if a field has been set.
func (o *ProvisioningOperationEventSearchResponseModel) HasRecommendation() bool {
	if o != nil && o.Recommendation.IsSet() {
		return true
	}

	return false
}

// SetRecommendation gets a reference to the given NullableString and assigns it to the Recommendation field.
func (o *ProvisioningOperationEventSearchResponseModel) SetRecommendation(v string) {
	o.Recommendation.Set(&v)
}

// SetRecommendationNil sets the value for Recommendation to be an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) SetRecommendationNil() {
	o.Recommendation.Set(nil)
}

// UnsetRecommendation ensures that no value is present for Recommendation, not even an explicit nil
func (o *ProvisioningOperationEventSearchResponseModel) UnsetRecommendation() {
	o.Recommendation.Unset()
}

func (o ProvisioningOperationEventSearchResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningOperationEventSearchResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LinkedObjectType.IsSet() {
		toSerialize["LinkedObjectType"] = o.LinkedObjectType.Get()
	}
	if o.LinkedObjectUid.IsSet() {
		toSerialize["LinkedObjectUid"] = o.LinkedObjectUid.Get()
	}
	if !IsNil(o.EventRecordId) {
		toSerialize["EventRecordId"] = o.EventRecordId
	}
	if o.EventCategory.IsSet() {
		toSerialize["EventCategory"] = o.EventCategory.Get()
	}
	if o.EventSeverity.IsSet() {
		toSerialize["EventSeverity"] = o.EventSeverity.Get()
	}
	if o.EventSource.IsSet() {
		toSerialize["EventSource"] = o.EventSource.Get()
	}
	if o.EventState.IsSet() {
		toSerialize["EventState"] = o.EventState.Get()
	}
	if o.EventMessage.IsSet() {
		toSerialize["EventMessage"] = o.EventMessage.Get()
	}
	if o.EventDateTime.IsSet() {
		toSerialize["EventDateTime"] = o.EventDateTime.Get()
	}
	if o.EventAdditionalData.IsSet() {
		toSerialize["EventAdditionalData"] = o.EventAdditionalData.Get()
	}
	if o.OperationName.IsSet() {
		toSerialize["OperationName"] = o.OperationName.Get()
	}
	if o.OperationTargetType.IsSet() {
		toSerialize["OperationTargetType"] = o.OperationTargetType.Get()
	}
	if o.OperationTargetName.IsSet() {
		toSerialize["OperationTargetName"] = o.OperationTargetName.Get()
	}
	if o.OperationType.IsSet() {
		toSerialize["OperationType"] = o.OperationType.Get()
	}
	if o.LinkedObjectName.IsSet() {
		toSerialize["LinkedObjectName"] = o.LinkedObjectName.Get()
	}
	if o.Recommendation.IsSet() {
		toSerialize["Recommendation"] = o.Recommendation.Get()
	}
	return toSerialize, nil
}

type NullableProvisioningOperationEventSearchResponseModel struct {
	value *ProvisioningOperationEventSearchResponseModel
	isSet bool
}

func (v NullableProvisioningOperationEventSearchResponseModel) Get() *ProvisioningOperationEventSearchResponseModel {
	return v.value
}

func (v *NullableProvisioningOperationEventSearchResponseModel) Set(val *ProvisioningOperationEventSearchResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningOperationEventSearchResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningOperationEventSearchResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningOperationEventSearchResponseModel(val *ProvisioningOperationEventSearchResponseModel) *NullableProvisioningOperationEventSearchResponseModel {
	return &NullableProvisioningOperationEventSearchResponseModel{value: val, isSet: true}
}

func (v NullableProvisioningOperationEventSearchResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningOperationEventSearchResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
