/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImportProvisionedVirtualMachineResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportProvisionedVirtualMachineResponseModel{}

// ImportProvisionedVirtualMachineResponseModel Provisioned Virtual machine Response model class.
type ImportProvisionedVirtualMachineResponseModel struct {
	// The Sid of the virtual machine.
	ADAccountSid NullableString `json:"ADAccountSid,omitempty"`
	// The virtual machine Id.
	VMId NullableString `json:"VMId,omitempty"`
	// The virtual machine name.
	VMName NullableString `json:"VMName,omitempty"`
	// Failure reason.
	FailureReason NullableString `json:"FailureReason,omitempty"`
	Status *ImportMachineStatus `json:"Status,omitempty"`
}

// NewImportProvisionedVirtualMachineResponseModel instantiates a new ImportProvisionedVirtualMachineResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportProvisionedVirtualMachineResponseModel() *ImportProvisionedVirtualMachineResponseModel {
	this := ImportProvisionedVirtualMachineResponseModel{}
	return &this
}

// NewImportProvisionedVirtualMachineResponseModelWithDefaults instantiates a new ImportProvisionedVirtualMachineResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportProvisionedVirtualMachineResponseModelWithDefaults() *ImportProvisionedVirtualMachineResponseModel {
	this := ImportProvisionedVirtualMachineResponseModel{}
	return &this
}

// GetADAccountSid returns the ADAccountSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportProvisionedVirtualMachineResponseModel) GetADAccountSid() string {
	if o == nil || IsNil(o.ADAccountSid.Get()) {
		var ret string
		return ret
	}
	return *o.ADAccountSid.Get()
}

// GetADAccountSidOk returns a tuple with the ADAccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportProvisionedVirtualMachineResponseModel) GetADAccountSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ADAccountSid.Get(), o.ADAccountSid.IsSet()
}

// HasADAccountSid returns a boolean if a field has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) HasADAccountSid() bool {
	if o != nil && o.ADAccountSid.IsSet() {
		return true
	}

	return false
}

// SetADAccountSid gets a reference to the given NullableString and assigns it to the ADAccountSid field.
func (o *ImportProvisionedVirtualMachineResponseModel) SetADAccountSid(v string) {
	o.ADAccountSid.Set(&v)
}
// SetADAccountSidNil sets the value for ADAccountSid to be an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) SetADAccountSidNil() {
	o.ADAccountSid.Set(nil)
}

// UnsetADAccountSid ensures that no value is present for ADAccountSid, not even an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) UnsetADAccountSid() {
	o.ADAccountSid.Unset()
}

// GetVMId returns the VMId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportProvisionedVirtualMachineResponseModel) GetVMId() string {
	if o == nil || IsNil(o.VMId.Get()) {
		var ret string
		return ret
	}
	return *o.VMId.Get()
}

// GetVMIdOk returns a tuple with the VMId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportProvisionedVirtualMachineResponseModel) GetVMIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VMId.Get(), o.VMId.IsSet()
}

// HasVMId returns a boolean if a field has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) HasVMId() bool {
	if o != nil && o.VMId.IsSet() {
		return true
	}

	return false
}

// SetVMId gets a reference to the given NullableString and assigns it to the VMId field.
func (o *ImportProvisionedVirtualMachineResponseModel) SetVMId(v string) {
	o.VMId.Set(&v)
}
// SetVMIdNil sets the value for VMId to be an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) SetVMIdNil() {
	o.VMId.Set(nil)
}

// UnsetVMId ensures that no value is present for VMId, not even an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) UnsetVMId() {
	o.VMId.Unset()
}

// GetVMName returns the VMName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportProvisionedVirtualMachineResponseModel) GetVMName() string {
	if o == nil || IsNil(o.VMName.Get()) {
		var ret string
		return ret
	}
	return *o.VMName.Get()
}

// GetVMNameOk returns a tuple with the VMName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportProvisionedVirtualMachineResponseModel) GetVMNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VMName.Get(), o.VMName.IsSet()
}

// HasVMName returns a boolean if a field has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) HasVMName() bool {
	if o != nil && o.VMName.IsSet() {
		return true
	}

	return false
}

// SetVMName gets a reference to the given NullableString and assigns it to the VMName field.
func (o *ImportProvisionedVirtualMachineResponseModel) SetVMName(v string) {
	o.VMName.Set(&v)
}
// SetVMNameNil sets the value for VMName to be an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) SetVMNameNil() {
	o.VMName.Set(nil)
}

// UnsetVMName ensures that no value is present for VMName, not even an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) UnsetVMName() {
	o.VMName.Unset()
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImportProvisionedVirtualMachineResponseModel) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason.Get()) {
		var ret string
		return ret
	}
	return *o.FailureReason.Get()
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImportProvisionedVirtualMachineResponseModel) GetFailureReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureReason.Get(), o.FailureReason.IsSet()
}

// HasFailureReason returns a boolean if a field has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) HasFailureReason() bool {
	if o != nil && o.FailureReason.IsSet() {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given NullableString and assigns it to the FailureReason field.
func (o *ImportProvisionedVirtualMachineResponseModel) SetFailureReason(v string) {
	o.FailureReason.Set(&v)
}
// SetFailureReasonNil sets the value for FailureReason to be an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) SetFailureReasonNil() {
	o.FailureReason.Set(nil)
}

// UnsetFailureReason ensures that no value is present for FailureReason, not even an explicit nil
func (o *ImportProvisionedVirtualMachineResponseModel) UnsetFailureReason() {
	o.FailureReason.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImportProvisionedVirtualMachineResponseModel) GetStatus() ImportMachineStatus {
	if o == nil || IsNil(o.Status) {
		var ret ImportMachineStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) GetStatusOk() (*ImportMachineStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ImportProvisionedVirtualMachineResponseModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ImportMachineStatus and assigns it to the Status field.
func (o *ImportProvisionedVirtualMachineResponseModel) SetStatus(v ImportMachineStatus) {
	o.Status = &v
}

func (o ImportProvisionedVirtualMachineResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportProvisionedVirtualMachineResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ADAccountSid.IsSet() {
		toSerialize["ADAccountSid"] = o.ADAccountSid.Get()
	}
	if o.VMId.IsSet() {
		toSerialize["VMId"] = o.VMId.Get()
	}
	if o.VMName.IsSet() {
		toSerialize["VMName"] = o.VMName.Get()
	}
	if o.FailureReason.IsSet() {
		toSerialize["FailureReason"] = o.FailureReason.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	return toSerialize, nil
}

type NullableImportProvisionedVirtualMachineResponseModel struct {
	value *ImportProvisionedVirtualMachineResponseModel
	isSet bool
}

func (v NullableImportProvisionedVirtualMachineResponseModel) Get() *ImportProvisionedVirtualMachineResponseModel {
	return v.value
}

func (v *NullableImportProvisionedVirtualMachineResponseModel) Set(val *ImportProvisionedVirtualMachineResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImportProvisionedVirtualMachineResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImportProvisionedVirtualMachineResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportProvisionedVirtualMachineResponseModel(val *ImportProvisionedVirtualMachineResponseModel) *NullableImportProvisionedVirtualMachineResponseModel {
	return &NullableImportProvisionedVirtualMachineResponseModel{value: val, isSet: true}
}

func (v NullableImportProvisionedVirtualMachineResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportProvisionedVirtualMachineResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


