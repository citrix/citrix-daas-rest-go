/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AppVServerResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppVServerResponseModel{}

// AppVServerResponseModel Response object for App-V servers.
type AppVServerResponseModel struct {
	// Uid of App-V server.
	Uid *int32 `json:"Uid,omitempty"`
	// Name of App-V server.
	Name string `json:"Name"`
	// Management server address.  (i.e. where packages/apps are enumerated from.)
	ManagementServer string `json:"ManagementServer"`
	// Publishing server address.  (i.e. where the package streams from.)
	PublishingServer string `json:"PublishingServer"`
	// Is studio configured or not.
	IsStudioConfigured *bool `json:"IsStudioConfigured,omitempty"`
}

// NewAppVServerResponseModel instantiates a new AppVServerResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppVServerResponseModel(name string, managementServer string, publishingServer string) *AppVServerResponseModel {
	this := AppVServerResponseModel{}
	this.Name = name
	this.ManagementServer = managementServer
	this.PublishingServer = publishingServer
	return &this
}

// NewAppVServerResponseModelWithDefaults instantiates a new AppVServerResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppVServerResponseModelWithDefaults() *AppVServerResponseModel {
	this := AppVServerResponseModel{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *AppVServerResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVServerResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *AppVServerResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *AppVServerResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetName returns the Name field value
func (o *AppVServerResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AppVServerResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AppVServerResponseModel) SetName(v string) {
	o.Name = v
}

// GetManagementServer returns the ManagementServer field value
func (o *AppVServerResponseModel) GetManagementServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagementServer
}

// GetManagementServerOk returns a tuple with the ManagementServer field value
// and a boolean to check if the value has been set.
func (o *AppVServerResponseModel) GetManagementServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManagementServer, true
}

// SetManagementServer sets field value
func (o *AppVServerResponseModel) SetManagementServer(v string) {
	o.ManagementServer = v
}

// GetPublishingServer returns the PublishingServer field value
func (o *AppVServerResponseModel) GetPublishingServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublishingServer
}

// GetPublishingServerOk returns a tuple with the PublishingServer field value
// and a boolean to check if the value has been set.
func (o *AppVServerResponseModel) GetPublishingServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishingServer, true
}

// SetPublishingServer sets field value
func (o *AppVServerResponseModel) SetPublishingServer(v string) {
	o.PublishingServer = v
}

// GetIsStudioConfigured returns the IsStudioConfigured field value if set, zero value otherwise.
func (o *AppVServerResponseModel) GetIsStudioConfigured() bool {
	if o == nil || IsNil(o.IsStudioConfigured) {
		var ret bool
		return ret
	}
	return *o.IsStudioConfigured
}

// GetIsStudioConfiguredOk returns a tuple with the IsStudioConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppVServerResponseModel) GetIsStudioConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsStudioConfigured) {
		return nil, false
	}
	return o.IsStudioConfigured, true
}

// HasIsStudioConfigured returns a boolean if a field has been set.
func (o *AppVServerResponseModel) HasIsStudioConfigured() bool {
	if o != nil && !IsNil(o.IsStudioConfigured) {
		return true
	}

	return false
}

// SetIsStudioConfigured gets a reference to the given bool and assigns it to the IsStudioConfigured field.
func (o *AppVServerResponseModel) SetIsStudioConfigured(v bool) {
	o.IsStudioConfigured = &v
}

func (o AppVServerResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppVServerResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	toSerialize["Name"] = o.Name
	toSerialize["ManagementServer"] = o.ManagementServer
	toSerialize["PublishingServer"] = o.PublishingServer
	if !IsNil(o.IsStudioConfigured) {
		toSerialize["IsStudioConfigured"] = o.IsStudioConfigured
	}
	return toSerialize, nil
}

type NullableAppVServerResponseModel struct {
	value *AppVServerResponseModel
	isSet bool
}

func (v NullableAppVServerResponseModel) Get() *AppVServerResponseModel {
	return v.value
}

func (v *NullableAppVServerResponseModel) Set(val *AppVServerResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAppVServerResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAppVServerResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppVServerResponseModel(val *AppVServerResponseModel) *NullableAppVServerResponseModel {
	return &NullableAppVServerResponseModel{value: val, isSet: true}
}

func (v NullableAppVServerResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppVServerResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


