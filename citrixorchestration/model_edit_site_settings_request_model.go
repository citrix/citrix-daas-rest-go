/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditSiteSettingsRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditSiteSettingsRequestModel{}

// EditSiteSettingsRequestModel struct for EditSiteSettingsRequestModel
type EditSiteSettingsRequestModel struct {
	// Determines whether to use vertical scaling when considering RDS machines for launches. Vertical scaling would saturate machines in the current pool rather than send sessions to the least loaded machines. This would be a trade in performance vs. cost, where vertical scaling would be less costly.
	UseVerticalScalingForRdsLaunches *bool `json:"UseVerticalScalingForRdsLaunches,omitempty"`
	// Changes whether ICA files returned by a broker service to a user device contain the numeric IP address or the DNS name of the desktop machine to which a session should be established.
	DnsResolutionEnabled *bool `json:"DnsResolutionEnabled,omitempty"`
	// Changes whether the XML Service (as used by Storefront) implicitly trusts the originator of requests it receives, or whether it fully authenticates them.
	TrustRequestsSentToTheXmlServicePortEnabled *bool `json:"TrustRequestsSentToTheXmlServicePortEnabled,omitempty"`
	// Determine whether the policy set in web UI is enabled or not
	WebUiPolicySetEnabled *bool `json:"WebUiPolicySetEnabled,omitempty"`
}

// NewEditSiteSettingsRequestModel instantiates a new EditSiteSettingsRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditSiteSettingsRequestModel() *EditSiteSettingsRequestModel {
	this := EditSiteSettingsRequestModel{}
	return &this
}

// NewEditSiteSettingsRequestModelWithDefaults instantiates a new EditSiteSettingsRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditSiteSettingsRequestModelWithDefaults() *EditSiteSettingsRequestModel {
	this := EditSiteSettingsRequestModel{}
	return &this
}

// GetUseVerticalScalingForRdsLaunches returns the UseVerticalScalingForRdsLaunches field value if set, zero value otherwise.
func (o *EditSiteSettingsRequestModel) GetUseVerticalScalingForRdsLaunches() bool {
	if o == nil || IsNil(o.UseVerticalScalingForRdsLaunches) {
		var ret bool
		return ret
	}
	return *o.UseVerticalScalingForRdsLaunches
}

// GetUseVerticalScalingForRdsLaunchesOk returns a tuple with the UseVerticalScalingForRdsLaunches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSiteSettingsRequestModel) GetUseVerticalScalingForRdsLaunchesOk() (*bool, bool) {
	if o == nil || IsNil(o.UseVerticalScalingForRdsLaunches) {
		return nil, false
	}
	return o.UseVerticalScalingForRdsLaunches, true
}

// HasUseVerticalScalingForRdsLaunches returns a boolean if a field has been set.
func (o *EditSiteSettingsRequestModel) HasUseVerticalScalingForRdsLaunches() bool {
	if o != nil && !IsNil(o.UseVerticalScalingForRdsLaunches) {
		return true
	}

	return false
}

// SetUseVerticalScalingForRdsLaunches gets a reference to the given bool and assigns it to the UseVerticalScalingForRdsLaunches field.
func (o *EditSiteSettingsRequestModel) SetUseVerticalScalingForRdsLaunches(v bool) {
	o.UseVerticalScalingForRdsLaunches = &v
}

// GetDnsResolutionEnabled returns the DnsResolutionEnabled field value if set, zero value otherwise.
func (o *EditSiteSettingsRequestModel) GetDnsResolutionEnabled() bool {
	if o == nil || IsNil(o.DnsResolutionEnabled) {
		var ret bool
		return ret
	}
	return *o.DnsResolutionEnabled
}

// GetDnsResolutionEnabledOk returns a tuple with the DnsResolutionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSiteSettingsRequestModel) GetDnsResolutionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsResolutionEnabled) {
		return nil, false
	}
	return o.DnsResolutionEnabled, true
}

// HasDnsResolutionEnabled returns a boolean if a field has been set.
func (o *EditSiteSettingsRequestModel) HasDnsResolutionEnabled() bool {
	if o != nil && !IsNil(o.DnsResolutionEnabled) {
		return true
	}

	return false
}

// SetDnsResolutionEnabled gets a reference to the given bool and assigns it to the DnsResolutionEnabled field.
func (o *EditSiteSettingsRequestModel) SetDnsResolutionEnabled(v bool) {
	o.DnsResolutionEnabled = &v
}

// GetTrustRequestsSentToTheXmlServicePortEnabled returns the TrustRequestsSentToTheXmlServicePortEnabled field value if set, zero value otherwise.
func (o *EditSiteSettingsRequestModel) GetTrustRequestsSentToTheXmlServicePortEnabled() bool {
	if o == nil || IsNil(o.TrustRequestsSentToTheXmlServicePortEnabled) {
		var ret bool
		return ret
	}
	return *o.TrustRequestsSentToTheXmlServicePortEnabled
}

// GetTrustRequestsSentToTheXmlServicePortEnabledOk returns a tuple with the TrustRequestsSentToTheXmlServicePortEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSiteSettingsRequestModel) GetTrustRequestsSentToTheXmlServicePortEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TrustRequestsSentToTheXmlServicePortEnabled) {
		return nil, false
	}
	return o.TrustRequestsSentToTheXmlServicePortEnabled, true
}

// HasTrustRequestsSentToTheXmlServicePortEnabled returns a boolean if a field has been set.
func (o *EditSiteSettingsRequestModel) HasTrustRequestsSentToTheXmlServicePortEnabled() bool {
	if o != nil && !IsNil(o.TrustRequestsSentToTheXmlServicePortEnabled) {
		return true
	}

	return false
}

// SetTrustRequestsSentToTheXmlServicePortEnabled gets a reference to the given bool and assigns it to the TrustRequestsSentToTheXmlServicePortEnabled field.
func (o *EditSiteSettingsRequestModel) SetTrustRequestsSentToTheXmlServicePortEnabled(v bool) {
	o.TrustRequestsSentToTheXmlServicePortEnabled = &v
}

// GetWebUiPolicySetEnabled returns the WebUiPolicySetEnabled field value if set, zero value otherwise.
func (o *EditSiteSettingsRequestModel) GetWebUiPolicySetEnabled() bool {
	if o == nil || IsNil(o.WebUiPolicySetEnabled) {
		var ret bool
		return ret
	}
	return *o.WebUiPolicySetEnabled
}

// GetWebUiPolicySetEnabledOk returns a tuple with the WebUiPolicySetEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditSiteSettingsRequestModel) GetWebUiPolicySetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.WebUiPolicySetEnabled) {
		return nil, false
	}
	return o.WebUiPolicySetEnabled, true
}

// HasWebUiPolicySetEnabled returns a boolean if a field has been set.
func (o *EditSiteSettingsRequestModel) HasWebUiPolicySetEnabled() bool {
	if o != nil && !IsNil(o.WebUiPolicySetEnabled) {
		return true
	}

	return false
}

// SetWebUiPolicySetEnabled gets a reference to the given bool and assigns it to the WebUiPolicySetEnabled field.
func (o *EditSiteSettingsRequestModel) SetWebUiPolicySetEnabled(v bool) {
	o.WebUiPolicySetEnabled = &v
}

func (o EditSiteSettingsRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditSiteSettingsRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UseVerticalScalingForRdsLaunches) {
		toSerialize["UseVerticalScalingForRdsLaunches"] = o.UseVerticalScalingForRdsLaunches
	}
	if !IsNil(o.DnsResolutionEnabled) {
		toSerialize["DnsResolutionEnabled"] = o.DnsResolutionEnabled
	}
	if !IsNil(o.TrustRequestsSentToTheXmlServicePortEnabled) {
		toSerialize["TrustRequestsSentToTheXmlServicePortEnabled"] = o.TrustRequestsSentToTheXmlServicePortEnabled
	}
	if !IsNil(o.WebUiPolicySetEnabled) {
		toSerialize["WebUiPolicySetEnabled"] = o.WebUiPolicySetEnabled
	}
	return toSerialize, nil
}

type NullableEditSiteSettingsRequestModel struct {
	value *EditSiteSettingsRequestModel
	isSet bool
}

func (v NullableEditSiteSettingsRequestModel) Get() *EditSiteSettingsRequestModel {
	return v.value
}

func (v *NullableEditSiteSettingsRequestModel) Set(val *EditSiteSettingsRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditSiteSettingsRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditSiteSettingsRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditSiteSettingsRequestModel(val *EditSiteSettingsRequestModel) *NullableEditSiteSettingsRequestModel {
	return &NullableEditSiteSettingsRequestModel{value: val, isSet: true}
}

func (v NullableEditSiteSettingsRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditSiteSettingsRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


