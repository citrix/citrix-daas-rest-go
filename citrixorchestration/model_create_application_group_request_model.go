/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateApplicationGroupRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationGroupRequestModel{}

// CreateApplicationGroupRequestModel Request body for creating an application group.             
type CreateApplicationGroupRequestModel struct {
	// The admin folder in which the application group should be created.
	AdminFolder *string `json:"AdminFolder,omitempty"`
	// Name of the application group to create.
	Name string `json:"Name"`
	// Description of the application group.
	Description *string `json:"Description,omitempty"`
	// Whether the application group's applications can be launched by end users.
	Enabled *bool `json:"Enabled,omitempty"`
	// Optional tag that may be used further to restrict which machines may be used for launching the application group's applications.   A machine may be used by an application group if either the application group has no tag restriction or the application group does have a tag restriction and the machine is tagged with the same tag.
	RestrictToTag *string `json:"RestrictToTag,omitempty"`
	// Administrative scopes which the newly created application group will be a part of.
	Scopes []string `json:"Scopes,omitempty"`
	// Tenant(s) to associate the application group with.
	Tenants []string `json:"Tenants,omitempty"`
	// Whether the application group's applications can share sessions with applications that are not a member of this application group.
	SessionSharingEnabled *bool `json:"SessionSharingEnabled,omitempty"`
	// Specifies whether the IncludedUsers filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery groups' access polic(ies) is implicitly granted access to the applications within the application group.
	IncludedUserFilterEnabled *bool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the included users filter of the application group; that is, the users and groups who are explicitly granted access to the applications in the application group.
	IncludedUsers []string `json:"IncludedUsers,omitempty"`
	// List of delivery groups to associate with the application group.
	DeliveryGroups []PriorityRefRequestModel `json:"DeliveryGroups,omitempty"`
}

// NewCreateApplicationGroupRequestModel instantiates a new CreateApplicationGroupRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationGroupRequestModel(name string) *CreateApplicationGroupRequestModel {
	this := CreateApplicationGroupRequestModel{}
	this.Name = name
	var enabled bool = true
	this.Enabled = &enabled
	var sessionSharingEnabled bool = true
	this.SessionSharingEnabled = &sessionSharingEnabled
	var includedUserFilterEnabled bool = false
	this.IncludedUserFilterEnabled = &includedUserFilterEnabled
	return &this
}

// NewCreateApplicationGroupRequestModelWithDefaults instantiates a new CreateApplicationGroupRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationGroupRequestModelWithDefaults() *CreateApplicationGroupRequestModel {
	this := CreateApplicationGroupRequestModel{}
	var enabled bool = true
	this.Enabled = &enabled
	var sessionSharingEnabled bool = true
	this.SessionSharingEnabled = &sessionSharingEnabled
	var includedUserFilterEnabled bool = false
	this.IncludedUserFilterEnabled = &includedUserFilterEnabled
	return &this
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetAdminFolder() string {
	if o == nil || IsNil(o.AdminFolder) {
		var ret string
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetAdminFolderOk() (*string, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given string and assigns it to the AdminFolder field.
func (o *CreateApplicationGroupRequestModel) SetAdminFolder(v string) {
	o.AdminFolder = &v
}

// GetName returns the Name field value
func (o *CreateApplicationGroupRequestModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApplicationGroupRequestModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateApplicationGroupRequestModel) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateApplicationGroupRequestModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetRestrictToTag() string {
	if o == nil || IsNil(o.RestrictToTag) {
		var ret string
		return ret
	}
	return *o.RestrictToTag
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetRestrictToTagOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictToTag) {
		return nil, false
	}
	return o.RestrictToTag, true
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasRestrictToTag() bool {
	if o != nil && !IsNil(o.RestrictToTag) {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given string and assigns it to the RestrictToTag field.
func (o *CreateApplicationGroupRequestModel) SetRestrictToTag(v string) {
	o.RestrictToTag = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *CreateApplicationGroupRequestModel) SetScopes(v []string) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetTenants() []string {
	if o == nil || IsNil(o.Tenants) {
		var ret []string
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetTenantsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []string and assigns it to the Tenants field.
func (o *CreateApplicationGroupRequestModel) SetTenants(v []string) {
	o.Tenants = v
}

// GetSessionSharingEnabled returns the SessionSharingEnabled field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetSessionSharingEnabled() bool {
	if o == nil || IsNil(o.SessionSharingEnabled) {
		var ret bool
		return ret
	}
	return *o.SessionSharingEnabled
}

// GetSessionSharingEnabledOk returns a tuple with the SessionSharingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetSessionSharingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionSharingEnabled) {
		return nil, false
	}
	return o.SessionSharingEnabled, true
}

// HasSessionSharingEnabled returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasSessionSharingEnabled() bool {
	if o != nil && !IsNil(o.SessionSharingEnabled) {
		return true
	}

	return false
}

// SetSessionSharingEnabled gets a reference to the given bool and assigns it to the SessionSharingEnabled field.
func (o *CreateApplicationGroupRequestModel) SetSessionSharingEnabled(v bool) {
	o.SessionSharingEnabled = &v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludedUserFilterEnabled) {
		return nil, false
	}
	return o.IncludedUserFilterEnabled, true
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && !IsNil(o.IncludedUserFilterEnabled) {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given bool and assigns it to the IncludedUserFilterEnabled field.
func (o *CreateApplicationGroupRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = &v
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetIncludedUsers() []string {
	if o == nil || IsNil(o.IncludedUsers) {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *CreateApplicationGroupRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

// GetDeliveryGroups returns the DeliveryGroups field value if set, zero value otherwise.
func (o *CreateApplicationGroupRequestModel) GetDeliveryGroups() []PriorityRefRequestModel {
	if o == nil || IsNil(o.DeliveryGroups) {
		var ret []PriorityRefRequestModel
		return ret
	}
	return o.DeliveryGroups
}

// GetDeliveryGroupsOk returns a tuple with the DeliveryGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationGroupRequestModel) GetDeliveryGroupsOk() ([]PriorityRefRequestModel, bool) {
	if o == nil || IsNil(o.DeliveryGroups) {
		return nil, false
	}
	return o.DeliveryGroups, true
}

// HasDeliveryGroups returns a boolean if a field has been set.
func (o *CreateApplicationGroupRequestModel) HasDeliveryGroups() bool {
	if o != nil && !IsNil(o.DeliveryGroups) {
		return true
	}

	return false
}

// SetDeliveryGroups gets a reference to the given []PriorityRefRequestModel and assigns it to the DeliveryGroups field.
func (o *CreateApplicationGroupRequestModel) SetDeliveryGroups(v []PriorityRefRequestModel) {
	o.DeliveryGroups = v
}

func (o CreateApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationGroupRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	toSerialize["Name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !IsNil(o.RestrictToTag) {
		toSerialize["RestrictToTag"] = o.RestrictToTag
	}
	if !IsNil(o.Scopes) {
		toSerialize["Scopes"] = o.Scopes
	}
	if !IsNil(o.Tenants) {
		toSerialize["Tenants"] = o.Tenants
	}
	if !IsNil(o.SessionSharingEnabled) {
		toSerialize["SessionSharingEnabled"] = o.SessionSharingEnabled
	}
	if !IsNil(o.IncludedUserFilterEnabled) {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	}
	if !IsNil(o.IncludedUsers) {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if !IsNil(o.DeliveryGroups) {
		toSerialize["DeliveryGroups"] = o.DeliveryGroups
	}
	return toSerialize, nil
}

type NullableCreateApplicationGroupRequestModel struct {
	value *CreateApplicationGroupRequestModel
	isSet bool
}

func (v NullableCreateApplicationGroupRequestModel) Get() *CreateApplicationGroupRequestModel {
	return v.value
}

func (v *NullableCreateApplicationGroupRequestModel) Set(val *CreateApplicationGroupRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationGroupRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationGroupRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationGroupRequestModel(val *CreateApplicationGroupRequestModel) *NullableCreateApplicationGroupRequestModel {
	return &NullableCreateApplicationGroupRequestModel{value: val, isSet: true}
}

func (v NullableCreateApplicationGroupRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationGroupRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


