/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AdministratorDeleteConcequenceResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdministratorDeleteConcequenceResponseModel{}

// AdministratorDeleteConcequenceResponseModel struct for AdministratorDeleteConcequenceResponseModel
type AdministratorDeleteConcequenceResponseModel struct {
	Consequence *DeleteAdministratorConsequence `json:"Consequence,omitempty"`
}

// NewAdministratorDeleteConcequenceResponseModel instantiates a new AdministratorDeleteConcequenceResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministratorDeleteConcequenceResponseModel() *AdministratorDeleteConcequenceResponseModel {
	this := AdministratorDeleteConcequenceResponseModel{}
	return &this
}

// NewAdministratorDeleteConcequenceResponseModelWithDefaults instantiates a new AdministratorDeleteConcequenceResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministratorDeleteConcequenceResponseModelWithDefaults() *AdministratorDeleteConcequenceResponseModel {
	this := AdministratorDeleteConcequenceResponseModel{}
	return &this
}

// GetConsequence returns the Consequence field value if set, zero value otherwise.
func (o *AdministratorDeleteConcequenceResponseModel) GetConsequence() DeleteAdministratorConsequence {
	if o == nil || IsNil(o.Consequence) {
		var ret DeleteAdministratorConsequence
		return ret
	}
	return *o.Consequence
}

// GetConsequenceOk returns a tuple with the Consequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministratorDeleteConcequenceResponseModel) GetConsequenceOk() (*DeleteAdministratorConsequence, bool) {
	if o == nil || IsNil(o.Consequence) {
		return nil, false
	}
	return o.Consequence, true
}

// HasConsequence returns a boolean if a field has been set.
func (o *AdministratorDeleteConcequenceResponseModel) HasConsequence() bool {
	if o != nil && !IsNil(o.Consequence) {
		return true
	}

	return false
}

// SetConsequence gets a reference to the given DeleteAdministratorConsequence and assigns it to the Consequence field.
func (o *AdministratorDeleteConcequenceResponseModel) SetConsequence(v DeleteAdministratorConsequence) {
	o.Consequence = &v
}

func (o AdministratorDeleteConcequenceResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdministratorDeleteConcequenceResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Consequence) {
		toSerialize["Consequence"] = o.Consequence
	}
	return toSerialize, nil
}

type NullableAdministratorDeleteConcequenceResponseModel struct {
	value *AdministratorDeleteConcequenceResponseModel
	isSet bool
}

func (v NullableAdministratorDeleteConcequenceResponseModel) Get() *AdministratorDeleteConcequenceResponseModel {
	return v.value
}

func (v *NullableAdministratorDeleteConcequenceResponseModel) Set(val *AdministratorDeleteConcequenceResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministratorDeleteConcequenceResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministratorDeleteConcequenceResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministratorDeleteConcequenceResponseModel(val *AdministratorDeleteConcequenceResponseModel) *NullableAdministratorDeleteConcequenceResponseModel {
	return &NullableAdministratorDeleteConcequenceResponseModel{value: val, isSet: true}
}

func (v NullableAdministratorDeleteConcequenceResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministratorDeleteConcequenceResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


