/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityDomainResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityDomainResponseModel{}

// IdentityDomainResponseModel The Domain identity object.
type IdentityDomainResponseModel struct {
	// The forest the domain belongs to.
	Forest NullableString `json:"Forest,omitempty"`
	// The parent of the domain.
	Parent NullableString `json:"Parent,omitempty"`
	// The name of the domain.
	Name NullableString `json:"Name,omitempty"`
	// The sub-domains associated with the Domain object.
	Children []string `json:"Children,omitempty"`
	// The Security Identifier associated with the Domain object.
	Sid NullableString `json:"Sid,omitempty"`
	// The GUID is unique across the enterprise and anywhere else.
	Guid NullableString `json:"Guid,omitempty"`
	// The NETBiosName associated with the Domain object.
	NetBiosName NullableString `json:"NetBiosName,omitempty"`
	// The Distinguished name of the Domain object. Distinguished names (DNs) are unique and they unambiguously identify objects in the directory.
	DistinguishedName NullableString `json:"DistinguishedName,omitempty"`
	// The discoverable controllers/directory servers for the domain.
	Controllers []string `json:"Controllers,omitempty"`
	// The default controller/directory server for the domain.
	DefaultController NullableString `json:"DefaultController,omitempty"`
	// Other Domains that have trusts with this Domain.
	TrustedDomains []string `json:"TrustedDomains,omitempty"`
	// The UPN suffixes of the domain.
	UpnSuffixes []string `json:"UpnSuffixes,omitempty"`
	// The SCP configuration of the domain.
	ServiceConnectionPointConfigurations []ADSCPConfigurationModel `json:"ServiceConnectionPointConfigurations,omitempty"`
	// Set to True during a bulk identity lookup operation. For individual identity lookup, usually an exception will be throw.
	PossibleLookupFailure *bool `json:"PossibleLookupFailure,omitempty"`
	// Properties fetched and populated in the Domain object.  This is a bitfield indicating the fetched properties.
	PropertiesFetched int32 `json:"PropertiesFetched"`
}

// NewIdentityDomainResponseModel instantiates a new IdentityDomainResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityDomainResponseModel(propertiesFetched int32) *IdentityDomainResponseModel {
	this := IdentityDomainResponseModel{}
	this.PropertiesFetched = propertiesFetched
	return &this
}

// NewIdentityDomainResponseModelWithDefaults instantiates a new IdentityDomainResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDomainResponseModelWithDefaults() *IdentityDomainResponseModel {
	this := IdentityDomainResponseModel{}
	return &this
}

// GetForest returns the Forest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest.Get()) {
		var ret string
		return ret
	}
	return *o.Forest.Get()
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetForestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forest.Get(), o.Forest.IsSet()
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasForest() bool {
	if o != nil && o.Forest.IsSet() {
		return true
	}

	return false
}

// SetForest gets a reference to the given NullableString and assigns it to the Forest field.
func (o *IdentityDomainResponseModel) SetForest(v string) {
	o.Forest.Set(&v)
}
// SetForestNil sets the value for Forest to be an explicit nil
func (o *IdentityDomainResponseModel) SetForestNil() {
	o.Forest.Set(nil)
}

// UnsetForest ensures that no value is present for Forest, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetForest() {
	o.Forest.Unset()
}

// GetParent returns the Parent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetParent() string {
	if o == nil || IsNil(o.Parent.Get()) {
		var ret string
		return ret
	}
	return *o.Parent.Get()
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetParentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parent.Get(), o.Parent.IsSet()
}

// HasParent returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasParent() bool {
	if o != nil && o.Parent.IsSet() {
		return true
	}

	return false
}

// SetParent gets a reference to the given NullableString and assigns it to the Parent field.
func (o *IdentityDomainResponseModel) SetParent(v string) {
	o.Parent.Set(&v)
}
// SetParentNil sets the value for Parent to be an explicit nil
func (o *IdentityDomainResponseModel) SetParentNil() {
	o.Parent.Set(nil)
}

// UnsetParent ensures that no value is present for Parent, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetParent() {
	o.Parent.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *IdentityDomainResponseModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *IdentityDomainResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetChildren returns the Children field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetChildren() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetChildrenOk() ([]string, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasChildren() bool {
	if o != nil && IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []string and assigns it to the Children field.
func (o *IdentityDomainResponseModel) SetChildren(v []string) {
	o.Children = v
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetSid() string {
	if o == nil || IsNil(o.Sid.Get()) {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *IdentityDomainResponseModel) SetSid(v string) {
	o.Sid.Set(&v)
}
// SetSidNil sets the value for Sid to be an explicit nil
func (o *IdentityDomainResponseModel) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetSid() {
	o.Sid.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *IdentityDomainResponseModel) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *IdentityDomainResponseModel) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetGuid() {
	o.Guid.Unset()
}

// GetNetBiosName returns the NetBiosName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetNetBiosName() string {
	if o == nil || IsNil(o.NetBiosName.Get()) {
		var ret string
		return ret
	}
	return *o.NetBiosName.Get()
}

// GetNetBiosNameOk returns a tuple with the NetBiosName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetNetBiosNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetBiosName.Get(), o.NetBiosName.IsSet()
}

// HasNetBiosName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasNetBiosName() bool {
	if o != nil && o.NetBiosName.IsSet() {
		return true
	}

	return false
}

// SetNetBiosName gets a reference to the given NullableString and assigns it to the NetBiosName field.
func (o *IdentityDomainResponseModel) SetNetBiosName(v string) {
	o.NetBiosName.Set(&v)
}
// SetNetBiosNameNil sets the value for NetBiosName to be an explicit nil
func (o *IdentityDomainResponseModel) SetNetBiosNameNil() {
	o.NetBiosName.Set(nil)
}

// UnsetNetBiosName ensures that no value is present for NetBiosName, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetNetBiosName() {
	o.NetBiosName.Unset()
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName.Get()) {
		var ret string
		return ret
	}
	return *o.DistinguishedName.Get()
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetDistinguishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DistinguishedName.Get(), o.DistinguishedName.IsSet()
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName.IsSet() {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given NullableString and assigns it to the DistinguishedName field.
func (o *IdentityDomainResponseModel) SetDistinguishedName(v string) {
	o.DistinguishedName.Set(&v)
}
// SetDistinguishedNameNil sets the value for DistinguishedName to be an explicit nil
func (o *IdentityDomainResponseModel) SetDistinguishedNameNil() {
	o.DistinguishedName.Set(nil)
}

// UnsetDistinguishedName ensures that no value is present for DistinguishedName, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetDistinguishedName() {
	o.DistinguishedName.Unset()
}

// GetControllers returns the Controllers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetControllers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetControllersOk() ([]string, bool) {
	if o == nil || IsNil(o.Controllers) {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasControllers() bool {
	if o != nil && IsNil(o.Controllers) {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []string and assigns it to the Controllers field.
func (o *IdentityDomainResponseModel) SetControllers(v []string) {
	o.Controllers = v
}

// GetDefaultController returns the DefaultController field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetDefaultController() string {
	if o == nil || IsNil(o.DefaultController.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultController.Get()
}

// GetDefaultControllerOk returns a tuple with the DefaultController field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetDefaultControllerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultController.Get(), o.DefaultController.IsSet()
}

// HasDefaultController returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasDefaultController() bool {
	if o != nil && o.DefaultController.IsSet() {
		return true
	}

	return false
}

// SetDefaultController gets a reference to the given NullableString and assigns it to the DefaultController field.
func (o *IdentityDomainResponseModel) SetDefaultController(v string) {
	o.DefaultController.Set(&v)
}
// SetDefaultControllerNil sets the value for DefaultController to be an explicit nil
func (o *IdentityDomainResponseModel) SetDefaultControllerNil() {
	o.DefaultController.Set(nil)
}

// UnsetDefaultController ensures that no value is present for DefaultController, not even an explicit nil
func (o *IdentityDomainResponseModel) UnsetDefaultController() {
	o.DefaultController.Unset()
}

// GetTrustedDomains returns the TrustedDomains field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetTrustedDomains() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TrustedDomains
}

// GetTrustedDomainsOk returns a tuple with the TrustedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetTrustedDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.TrustedDomains) {
		return nil, false
	}
	return o.TrustedDomains, true
}

// HasTrustedDomains returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasTrustedDomains() bool {
	if o != nil && IsNil(o.TrustedDomains) {
		return true
	}

	return false
}

// SetTrustedDomains gets a reference to the given []string and assigns it to the TrustedDomains field.
func (o *IdentityDomainResponseModel) SetTrustedDomains(v []string) {
	o.TrustedDomains = v
}

// GetUpnSuffixes returns the UpnSuffixes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetUpnSuffixes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UpnSuffixes
}

// GetUpnSuffixesOk returns a tuple with the UpnSuffixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetUpnSuffixesOk() ([]string, bool) {
	if o == nil || IsNil(o.UpnSuffixes) {
		return nil, false
	}
	return o.UpnSuffixes, true
}

// HasUpnSuffixes returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasUpnSuffixes() bool {
	if o != nil && IsNil(o.UpnSuffixes) {
		return true
	}

	return false
}

// SetUpnSuffixes gets a reference to the given []string and assigns it to the UpnSuffixes field.
func (o *IdentityDomainResponseModel) SetUpnSuffixes(v []string) {
	o.UpnSuffixes = v
}

// GetServiceConnectionPointConfigurations returns the ServiceConnectionPointConfigurations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDomainResponseModel) GetServiceConnectionPointConfigurations() []ADSCPConfigurationModel {
	if o == nil {
		var ret []ADSCPConfigurationModel
		return ret
	}
	return o.ServiceConnectionPointConfigurations
}

// GetServiceConnectionPointConfigurationsOk returns a tuple with the ServiceConnectionPointConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDomainResponseModel) GetServiceConnectionPointConfigurationsOk() ([]ADSCPConfigurationModel, bool) {
	if o == nil || IsNil(o.ServiceConnectionPointConfigurations) {
		return nil, false
	}
	return o.ServiceConnectionPointConfigurations, true
}

// HasServiceConnectionPointConfigurations returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasServiceConnectionPointConfigurations() bool {
	if o != nil && IsNil(o.ServiceConnectionPointConfigurations) {
		return true
	}

	return false
}

// SetServiceConnectionPointConfigurations gets a reference to the given []ADSCPConfigurationModel and assigns it to the ServiceConnectionPointConfigurations field.
func (o *IdentityDomainResponseModel) SetServiceConnectionPointConfigurations(v []ADSCPConfigurationModel) {
	o.ServiceConnectionPointConfigurations = v
}

// GetPossibleLookupFailure returns the PossibleLookupFailure field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetPossibleLookupFailure() bool {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		var ret bool
		return ret
	}
	return *o.PossibleLookupFailure
}

// GetPossibleLookupFailureOk returns a tuple with the PossibleLookupFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetPossibleLookupFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		return nil, false
	}
	return o.PossibleLookupFailure, true
}

// HasPossibleLookupFailure returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasPossibleLookupFailure() bool {
	if o != nil && !IsNil(o.PossibleLookupFailure) {
		return true
	}

	return false
}

// SetPossibleLookupFailure gets a reference to the given bool and assigns it to the PossibleLookupFailure field.
func (o *IdentityDomainResponseModel) SetPossibleLookupFailure(v bool) {
	o.PossibleLookupFailure = &v
}

// GetPropertiesFetched returns the PropertiesFetched field value
func (o *IdentityDomainResponseModel) GetPropertiesFetched() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertiesFetched
}

// GetPropertiesFetchedOk returns a tuple with the PropertiesFetched field value
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetPropertiesFetchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertiesFetched, true
}

// SetPropertiesFetched sets field value
func (o *IdentityDomainResponseModel) SetPropertiesFetched(v int32) {
	o.PropertiesFetched = v
}

func (o IdentityDomainResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityDomainResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Forest.IsSet() {
		toSerialize["Forest"] = o.Forest.Get()
	}
	if o.Parent.IsSet() {
		toSerialize["Parent"] = o.Parent.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Children != nil {
		toSerialize["Children"] = o.Children
	}
	if o.Sid.IsSet() {
		toSerialize["Sid"] = o.Sid.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["Guid"] = o.Guid.Get()
	}
	if o.NetBiosName.IsSet() {
		toSerialize["NetBiosName"] = o.NetBiosName.Get()
	}
	if o.DistinguishedName.IsSet() {
		toSerialize["DistinguishedName"] = o.DistinguishedName.Get()
	}
	if o.Controllers != nil {
		toSerialize["Controllers"] = o.Controllers
	}
	if o.DefaultController.IsSet() {
		toSerialize["DefaultController"] = o.DefaultController.Get()
	}
	if o.TrustedDomains != nil {
		toSerialize["TrustedDomains"] = o.TrustedDomains
	}
	if o.UpnSuffixes != nil {
		toSerialize["UpnSuffixes"] = o.UpnSuffixes
	}
	if o.ServiceConnectionPointConfigurations != nil {
		toSerialize["ServiceConnectionPointConfigurations"] = o.ServiceConnectionPointConfigurations
	}
	if !IsNil(o.PossibleLookupFailure) {
		toSerialize["PossibleLookupFailure"] = o.PossibleLookupFailure
	}
	toSerialize["PropertiesFetched"] = o.PropertiesFetched
	return toSerialize, nil
}

type NullableIdentityDomainResponseModel struct {
	value *IdentityDomainResponseModel
	isSet bool
}

func (v NullableIdentityDomainResponseModel) Get() *IdentityDomainResponseModel {
	return v.value
}

func (v *NullableIdentityDomainResponseModel) Set(val *IdentityDomainResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDomainResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDomainResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDomainResponseModel(val *IdentityDomainResponseModel) *NullableIdentityDomainResponseModel {
	return &NullableIdentityDomainResponseModel{value: val, isSet: true}
}

func (v NullableIdentityDomainResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDomainResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


