/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityDomainResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityDomainResponseModel{}

// IdentityDomainResponseModel The Domain identity object.
type IdentityDomainResponseModel struct {
	// The forest the domain belongs to.
	Forest *string `json:"Forest,omitempty"`
	// The parent of the domain.
	Parent *string `json:"Parent,omitempty"`
	// The name of the domain.
	Name *string `json:"Name,omitempty"`
	// The sub-domains associated with the Domain object.
	Children []string `json:"Children,omitempty"`
	// The Security Identifier associated with the Domain object.
	Sid *string `json:"Sid,omitempty"`
	// The GUID is unique across the enterprise and anywhere else.
	Guid *string `json:"Guid,omitempty"`
	// The NETBiosName associated with the Domain object.
	NetBiosName *string `json:"NetBiosName,omitempty"`
	// The Distinguished name of the Domain object. Distinguished names (DNs) are unique and they unambiguously identify objects in the directory.
	DistinguishedName *string `json:"DistinguishedName,omitempty"`
	// The discoverable controllers/directory servers for the domain.
	Controllers []string `json:"Controllers,omitempty"`
	// The default controller/directory server for the domain.
	DefaultController *string `json:"DefaultController,omitempty"`
	// Other Domains that have trusts with this Domain.
	TrustedDomains []string `json:"TrustedDomains,omitempty"`
	// The UPN suffixes of the domain.
	UpnSuffixes []string `json:"UpnSuffixes,omitempty"`
	// Set to True during a bulk identity lookup operation. For individual identity lookup, usually an exception will be throw.
	PossibleLookupFailure *bool `json:"PossibleLookupFailure,omitempty"`
	// Properties fetched and populated in the Domain object.  This is a bitfield indicating the fetched properties.
	PropertiesFetched int32 `json:"PropertiesFetched"`
}

// NewIdentityDomainResponseModel instantiates a new IdentityDomainResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityDomainResponseModel(propertiesFetched int32) *IdentityDomainResponseModel {
	this := IdentityDomainResponseModel{}
	this.PropertiesFetched = propertiesFetched
	return &this
}

// NewIdentityDomainResponseModelWithDefaults instantiates a new IdentityDomainResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDomainResponseModelWithDefaults() *IdentityDomainResponseModel {
	this := IdentityDomainResponseModel{}
	return &this
}

// GetForest returns the Forest field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest) {
		var ret string
		return ret
	}
	return *o.Forest
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetForestOk() (*string, bool) {
	if o == nil || IsNil(o.Forest) {
		return nil, false
	}
	return o.Forest, true
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasForest() bool {
	if o != nil && !IsNil(o.Forest) {
		return true
	}

	return false
}

// SetForest gets a reference to the given string and assigns it to the Forest field.
func (o *IdentityDomainResponseModel) SetForest(v string) {
	o.Forest = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *IdentityDomainResponseModel) SetParent(v string) {
	o.Parent = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityDomainResponseModel) SetName(v string) {
	o.Name = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetChildren() []string {
	if o == nil || IsNil(o.Children) {
		var ret []string
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetChildrenOk() ([]string, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []string and assigns it to the Children field.
func (o *IdentityDomainResponseModel) SetChildren(v []string) {
	o.Children = v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *IdentityDomainResponseModel) SetSid(v string) {
	o.Sid = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *IdentityDomainResponseModel) SetGuid(v string) {
	o.Guid = &v
}

// GetNetBiosName returns the NetBiosName field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetNetBiosName() string {
	if o == nil || IsNil(o.NetBiosName) {
		var ret string
		return ret
	}
	return *o.NetBiosName
}

// GetNetBiosNameOk returns a tuple with the NetBiosName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetNetBiosNameOk() (*string, bool) {
	if o == nil || IsNil(o.NetBiosName) {
		return nil, false
	}
	return o.NetBiosName, true
}

// HasNetBiosName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasNetBiosName() bool {
	if o != nil && !IsNil(o.NetBiosName) {
		return true
	}

	return false
}

// SetNetBiosName gets a reference to the given string and assigns it to the NetBiosName field.
func (o *IdentityDomainResponseModel) SetNetBiosName(v string) {
	o.NetBiosName = &v
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName) {
		var ret string
		return ret
	}
	return *o.DistinguishedName
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetDistinguishedNameOk() (*string, bool) {
	if o == nil || IsNil(o.DistinguishedName) {
		return nil, false
	}
	return o.DistinguishedName, true
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasDistinguishedName() bool {
	if o != nil && !IsNil(o.DistinguishedName) {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given string and assigns it to the DistinguishedName field.
func (o *IdentityDomainResponseModel) SetDistinguishedName(v string) {
	o.DistinguishedName = &v
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetControllers() []string {
	if o == nil || IsNil(o.Controllers) {
		var ret []string
		return ret
	}
	return o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetControllersOk() ([]string, bool) {
	if o == nil || IsNil(o.Controllers) {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasControllers() bool {
	if o != nil && !IsNil(o.Controllers) {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []string and assigns it to the Controllers field.
func (o *IdentityDomainResponseModel) SetControllers(v []string) {
	o.Controllers = v
}

// GetDefaultController returns the DefaultController field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetDefaultController() string {
	if o == nil || IsNil(o.DefaultController) {
		var ret string
		return ret
	}
	return *o.DefaultController
}

// GetDefaultControllerOk returns a tuple with the DefaultController field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetDefaultControllerOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultController) {
		return nil, false
	}
	return o.DefaultController, true
}

// HasDefaultController returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasDefaultController() bool {
	if o != nil && !IsNil(o.DefaultController) {
		return true
	}

	return false
}

// SetDefaultController gets a reference to the given string and assigns it to the DefaultController field.
func (o *IdentityDomainResponseModel) SetDefaultController(v string) {
	o.DefaultController = &v
}

// GetTrustedDomains returns the TrustedDomains field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetTrustedDomains() []string {
	if o == nil || IsNil(o.TrustedDomains) {
		var ret []string
		return ret
	}
	return o.TrustedDomains
}

// GetTrustedDomainsOk returns a tuple with the TrustedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetTrustedDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.TrustedDomains) {
		return nil, false
	}
	return o.TrustedDomains, true
}

// HasTrustedDomains returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasTrustedDomains() bool {
	if o != nil && !IsNil(o.TrustedDomains) {
		return true
	}

	return false
}

// SetTrustedDomains gets a reference to the given []string and assigns it to the TrustedDomains field.
func (o *IdentityDomainResponseModel) SetTrustedDomains(v []string) {
	o.TrustedDomains = v
}

// GetUpnSuffixes returns the UpnSuffixes field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetUpnSuffixes() []string {
	if o == nil || IsNil(o.UpnSuffixes) {
		var ret []string
		return ret
	}
	return o.UpnSuffixes
}

// GetUpnSuffixesOk returns a tuple with the UpnSuffixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetUpnSuffixesOk() ([]string, bool) {
	if o == nil || IsNil(o.UpnSuffixes) {
		return nil, false
	}
	return o.UpnSuffixes, true
}

// HasUpnSuffixes returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasUpnSuffixes() bool {
	if o != nil && !IsNil(o.UpnSuffixes) {
		return true
	}

	return false
}

// SetUpnSuffixes gets a reference to the given []string and assigns it to the UpnSuffixes field.
func (o *IdentityDomainResponseModel) SetUpnSuffixes(v []string) {
	o.UpnSuffixes = v
}

// GetPossibleLookupFailure returns the PossibleLookupFailure field value if set, zero value otherwise.
func (o *IdentityDomainResponseModel) GetPossibleLookupFailure() bool {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		var ret bool
		return ret
	}
	return *o.PossibleLookupFailure
}

// GetPossibleLookupFailureOk returns a tuple with the PossibleLookupFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetPossibleLookupFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		return nil, false
	}
	return o.PossibleLookupFailure, true
}

// HasPossibleLookupFailure returns a boolean if a field has been set.
func (o *IdentityDomainResponseModel) HasPossibleLookupFailure() bool {
	if o != nil && !IsNil(o.PossibleLookupFailure) {
		return true
	}

	return false
}

// SetPossibleLookupFailure gets a reference to the given bool and assigns it to the PossibleLookupFailure field.
func (o *IdentityDomainResponseModel) SetPossibleLookupFailure(v bool) {
	o.PossibleLookupFailure = &v
}

// GetPropertiesFetched returns the PropertiesFetched field value
func (o *IdentityDomainResponseModel) GetPropertiesFetched() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertiesFetched
}

// GetPropertiesFetchedOk returns a tuple with the PropertiesFetched field value
// and a boolean to check if the value has been set.
func (o *IdentityDomainResponseModel) GetPropertiesFetchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertiesFetched, true
}

// SetPropertiesFetched sets field value
func (o *IdentityDomainResponseModel) SetPropertiesFetched(v int32) {
	o.PropertiesFetched = v
}

func (o IdentityDomainResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityDomainResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Forest) {
		toSerialize["Forest"] = o.Forest
	}
	if !IsNil(o.Parent) {
		toSerialize["Parent"] = o.Parent
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Children) {
		toSerialize["Children"] = o.Children
	}
	if !IsNil(o.Sid) {
		toSerialize["Sid"] = o.Sid
	}
	if !IsNil(o.Guid) {
		toSerialize["Guid"] = o.Guid
	}
	if !IsNil(o.NetBiosName) {
		toSerialize["NetBiosName"] = o.NetBiosName
	}
	if !IsNil(o.DistinguishedName) {
		toSerialize["DistinguishedName"] = o.DistinguishedName
	}
	if !IsNil(o.Controllers) {
		toSerialize["Controllers"] = o.Controllers
	}
	if !IsNil(o.DefaultController) {
		toSerialize["DefaultController"] = o.DefaultController
	}
	if !IsNil(o.TrustedDomains) {
		toSerialize["TrustedDomains"] = o.TrustedDomains
	}
	if !IsNil(o.UpnSuffixes) {
		toSerialize["UpnSuffixes"] = o.UpnSuffixes
	}
	if !IsNil(o.PossibleLookupFailure) {
		toSerialize["PossibleLookupFailure"] = o.PossibleLookupFailure
	}
	toSerialize["PropertiesFetched"] = o.PropertiesFetched
	return toSerialize, nil
}

type NullableIdentityDomainResponseModel struct {
	value *IdentityDomainResponseModel
	isSet bool
}

func (v NullableIdentityDomainResponseModel) Get() *IdentityDomainResponseModel {
	return v.value
}

func (v *NullableIdentityDomainResponseModel) Set(val *IdentityDomainResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDomainResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDomainResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDomainResponseModel(val *IdentityDomainResponseModel) *NullableIdentityDomainResponseModel {
	return &NullableIdentityDomainResponseModel{value: val, isSet: true}
}

func (v NullableIdentityDomainResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDomainResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


