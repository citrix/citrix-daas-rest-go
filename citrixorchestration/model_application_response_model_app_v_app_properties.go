/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ApplicationResponseModelAppVAppProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationResponseModelAppVAppProperties{}

// ApplicationResponseModelAppVAppProperties Properties of applications that are delivered via App-V.
type ApplicationResponseModelAppVAppProperties struct {
	// Id of the App-V application
	Id *string `json:"Id,omitempty"`
	// App-V package identifier.
	PackageId string `json:"PackageId"`
	// App-V package name.
	PackageName string `json:"PackageName"`
	// App-V package version.
	PackageVersion string `json:"PackageVersion"`
	// App-V package version Id.
	PackageVersionId string `json:"PackageVersionId"`
	// App-V publishing server.
	PublishingServer *string `json:"PublishingServer,omitempty"`
	// App-V Management server.
	ManagementServer *string `json:"ManagementServer,omitempty"`
	// App-V sequence location.
	SequenceLocation string `json:"SequenceLocation"`
	// App-V server machine configuration Uid.
	ServerMachineConfigurationUid *string `json:"ServerMachineConfigurationUid,omitempty"`
	// Whether the target is in an App-V package.
	TargetInPackage bool `json:"TargetInPackage"`
	// Application  Source Type Name.
	SourceTypeName *string `json:"SourceTypeName,omitempty"`
}

// NewApplicationResponseModelAppVAppProperties instantiates a new ApplicationResponseModelAppVAppProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationResponseModelAppVAppProperties(packageId string, packageName string, packageVersion string, packageVersionId string, sequenceLocation string, targetInPackage bool) *ApplicationResponseModelAppVAppProperties {
	this := ApplicationResponseModelAppVAppProperties{}
	this.PackageId = packageId
	this.PackageName = packageName
	this.PackageVersion = packageVersion
	this.PackageVersionId = packageVersionId
	this.SequenceLocation = sequenceLocation
	this.TargetInPackage = targetInPackage
	return &this
}

// NewApplicationResponseModelAppVAppPropertiesWithDefaults instantiates a new ApplicationResponseModelAppVAppProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationResponseModelAppVAppPropertiesWithDefaults() *ApplicationResponseModelAppVAppProperties {
	this := ApplicationResponseModelAppVAppProperties{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationResponseModelAppVAppProperties) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationResponseModelAppVAppProperties) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationResponseModelAppVAppProperties) SetId(v string) {
	o.Id = &v
}

// GetPackageId returns the PackageId field value
func (o *ApplicationResponseModelAppVAppProperties) GetPackageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetPackageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageId, true
}

// SetPackageId sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetPackageId(v string) {
	o.PackageId = v
}

// GetPackageName returns the PackageName field value
func (o *ApplicationResponseModelAppVAppProperties) GetPackageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetPackageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageName, true
}

// SetPackageName sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetPackageName(v string) {
	o.PackageName = v
}

// GetPackageVersion returns the PackageVersion field value
func (o *ApplicationResponseModelAppVAppProperties) GetPackageVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageVersion
}

// GetPackageVersionOk returns a tuple with the PackageVersion field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetPackageVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageVersion, true
}

// SetPackageVersion sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetPackageVersion(v string) {
	o.PackageVersion = v
}

// GetPackageVersionId returns the PackageVersionId field value
func (o *ApplicationResponseModelAppVAppProperties) GetPackageVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageVersionId
}

// GetPackageVersionIdOk returns a tuple with the PackageVersionId field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetPackageVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageVersionId, true
}

// SetPackageVersionId sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetPackageVersionId(v string) {
	o.PackageVersionId = v
}

// GetPublishingServer returns the PublishingServer field value if set, zero value otherwise.
func (o *ApplicationResponseModelAppVAppProperties) GetPublishingServer() string {
	if o == nil || IsNil(o.PublishingServer) {
		var ret string
		return ret
	}
	return *o.PublishingServer
}

// GetPublishingServerOk returns a tuple with the PublishingServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetPublishingServerOk() (*string, bool) {
	if o == nil || IsNil(o.PublishingServer) {
		return nil, false
	}
	return o.PublishingServer, true
}

// HasPublishingServer returns a boolean if a field has been set.
func (o *ApplicationResponseModelAppVAppProperties) HasPublishingServer() bool {
	if o != nil && !IsNil(o.PublishingServer) {
		return true
	}

	return false
}

// SetPublishingServer gets a reference to the given string and assigns it to the PublishingServer field.
func (o *ApplicationResponseModelAppVAppProperties) SetPublishingServer(v string) {
	o.PublishingServer = &v
}

// GetManagementServer returns the ManagementServer field value if set, zero value otherwise.
func (o *ApplicationResponseModelAppVAppProperties) GetManagementServer() string {
	if o == nil || IsNil(o.ManagementServer) {
		var ret string
		return ret
	}
	return *o.ManagementServer
}

// GetManagementServerOk returns a tuple with the ManagementServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetManagementServerOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementServer) {
		return nil, false
	}
	return o.ManagementServer, true
}

// HasManagementServer returns a boolean if a field has been set.
func (o *ApplicationResponseModelAppVAppProperties) HasManagementServer() bool {
	if o != nil && !IsNil(o.ManagementServer) {
		return true
	}

	return false
}

// SetManagementServer gets a reference to the given string and assigns it to the ManagementServer field.
func (o *ApplicationResponseModelAppVAppProperties) SetManagementServer(v string) {
	o.ManagementServer = &v
}

// GetSequenceLocation returns the SequenceLocation field value
func (o *ApplicationResponseModelAppVAppProperties) GetSequenceLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SequenceLocation
}

// GetSequenceLocationOk returns a tuple with the SequenceLocation field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetSequenceLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SequenceLocation, true
}

// SetSequenceLocation sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetSequenceLocation(v string) {
	o.SequenceLocation = v
}

// GetServerMachineConfigurationUid returns the ServerMachineConfigurationUid field value if set, zero value otherwise.
func (o *ApplicationResponseModelAppVAppProperties) GetServerMachineConfigurationUid() string {
	if o == nil || IsNil(o.ServerMachineConfigurationUid) {
		var ret string
		return ret
	}
	return *o.ServerMachineConfigurationUid
}

// GetServerMachineConfigurationUidOk returns a tuple with the ServerMachineConfigurationUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetServerMachineConfigurationUidOk() (*string, bool) {
	if o == nil || IsNil(o.ServerMachineConfigurationUid) {
		return nil, false
	}
	return o.ServerMachineConfigurationUid, true
}

// HasServerMachineConfigurationUid returns a boolean if a field has been set.
func (o *ApplicationResponseModelAppVAppProperties) HasServerMachineConfigurationUid() bool {
	if o != nil && !IsNil(o.ServerMachineConfigurationUid) {
		return true
	}

	return false
}

// SetServerMachineConfigurationUid gets a reference to the given string and assigns it to the ServerMachineConfigurationUid field.
func (o *ApplicationResponseModelAppVAppProperties) SetServerMachineConfigurationUid(v string) {
	o.ServerMachineConfigurationUid = &v
}

// GetTargetInPackage returns the TargetInPackage field value
func (o *ApplicationResponseModelAppVAppProperties) GetTargetInPackage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TargetInPackage
}

// GetTargetInPackageOk returns a tuple with the TargetInPackage field value
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetTargetInPackageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetInPackage, true
}

// SetTargetInPackage sets field value
func (o *ApplicationResponseModelAppVAppProperties) SetTargetInPackage(v bool) {
	o.TargetInPackage = v
}

// GetSourceTypeName returns the SourceTypeName field value if set, zero value otherwise.
func (o *ApplicationResponseModelAppVAppProperties) GetSourceTypeName() string {
	if o == nil || IsNil(o.SourceTypeName) {
		var ret string
		return ret
	}
	return *o.SourceTypeName
}

// GetSourceTypeNameOk returns a tuple with the SourceTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationResponseModelAppVAppProperties) GetSourceTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTypeName) {
		return nil, false
	}
	return o.SourceTypeName, true
}

// HasSourceTypeName returns a boolean if a field has been set.
func (o *ApplicationResponseModelAppVAppProperties) HasSourceTypeName() bool {
	if o != nil && !IsNil(o.SourceTypeName) {
		return true
	}

	return false
}

// SetSourceTypeName gets a reference to the given string and assigns it to the SourceTypeName field.
func (o *ApplicationResponseModelAppVAppProperties) SetSourceTypeName(v string) {
	o.SourceTypeName = &v
}

func (o ApplicationResponseModelAppVAppProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationResponseModelAppVAppProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	toSerialize["PackageId"] = o.PackageId
	toSerialize["PackageName"] = o.PackageName
	toSerialize["PackageVersion"] = o.PackageVersion
	toSerialize["PackageVersionId"] = o.PackageVersionId
	if !IsNil(o.PublishingServer) {
		toSerialize["PublishingServer"] = o.PublishingServer
	}
	if !IsNil(o.ManagementServer) {
		toSerialize["ManagementServer"] = o.ManagementServer
	}
	toSerialize["SequenceLocation"] = o.SequenceLocation
	if !IsNil(o.ServerMachineConfigurationUid) {
		toSerialize["ServerMachineConfigurationUid"] = o.ServerMachineConfigurationUid
	}
	toSerialize["TargetInPackage"] = o.TargetInPackage
	if !IsNil(o.SourceTypeName) {
		toSerialize["SourceTypeName"] = o.SourceTypeName
	}
	return toSerialize, nil
}

type NullableApplicationResponseModelAppVAppProperties struct {
	value *ApplicationResponseModelAppVAppProperties
	isSet bool
}

func (v NullableApplicationResponseModelAppVAppProperties) Get() *ApplicationResponseModelAppVAppProperties {
	return v.value
}

func (v *NullableApplicationResponseModelAppVAppProperties) Set(val *ApplicationResponseModelAppVAppProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationResponseModelAppVAppProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationResponseModelAppVAppProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationResponseModelAppVAppProperties(val *ApplicationResponseModelAppVAppProperties) *NullableApplicationResponseModelAppVAppProperties {
	return &NullableApplicationResponseModelAppVAppProperties{value: val, isSet: true}
}

func (v NullableApplicationResponseModelAppVAppProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationResponseModelAppVAppProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


