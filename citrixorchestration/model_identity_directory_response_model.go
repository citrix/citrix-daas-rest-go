/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityDirectoryResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityDirectoryResponseModel{}

// IdentityDirectoryResponseModel The universal identity directory object.
type IdentityDirectoryResponseModel struct {
	// Forest of the directory.
	Forest NullableString `json:"Forest,omitempty"`
	// Domain of the directory.
	Domain NullableString `json:"Domain,omitempty"`
	// Tenant of the directory.
	Tenant NullableString `json:"Tenant,omitempty"`
	IdentityProvider *IdentityProviderType `json:"IdentityProvider,omitempty"`
}

// NewIdentityDirectoryResponseModel instantiates a new IdentityDirectoryResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityDirectoryResponseModel() *IdentityDirectoryResponseModel {
	this := IdentityDirectoryResponseModel{}
	return &this
}

// NewIdentityDirectoryResponseModelWithDefaults instantiates a new IdentityDirectoryResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDirectoryResponseModelWithDefaults() *IdentityDirectoryResponseModel {
	this := IdentityDirectoryResponseModel{}
	return &this
}

// GetForest returns the Forest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDirectoryResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest.Get()) {
		var ret string
		return ret
	}
	return *o.Forest.Get()
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDirectoryResponseModel) GetForestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forest.Get(), o.Forest.IsSet()
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityDirectoryResponseModel) HasForest() bool {
	if o != nil && o.Forest.IsSet() {
		return true
	}

	return false
}

// SetForest gets a reference to the given NullableString and assigns it to the Forest field.
func (o *IdentityDirectoryResponseModel) SetForest(v string) {
	o.Forest.Set(&v)
}
// SetForestNil sets the value for Forest to be an explicit nil
func (o *IdentityDirectoryResponseModel) SetForestNil() {
	o.Forest.Set(nil)
}

// UnsetForest ensures that no value is present for Forest, not even an explicit nil
func (o *IdentityDirectoryResponseModel) UnsetForest() {
	o.Forest.Unset()
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDirectoryResponseModel) GetDomain() string {
	if o == nil || IsNil(o.Domain.Get()) {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDirectoryResponseModel) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *IdentityDirectoryResponseModel) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *IdentityDirectoryResponseModel) SetDomain(v string) {
	o.Domain.Set(&v)
}
// SetDomainNil sets the value for Domain to be an explicit nil
func (o *IdentityDirectoryResponseModel) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *IdentityDirectoryResponseModel) UnsetDomain() {
	o.Domain.Unset()
}

// GetTenant returns the Tenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityDirectoryResponseModel) GetTenant() string {
	if o == nil || IsNil(o.Tenant.Get()) {
		var ret string
		return ret
	}
	return *o.Tenant.Get()
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityDirectoryResponseModel) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tenant.Get(), o.Tenant.IsSet()
}

// HasTenant returns a boolean if a field has been set.
func (o *IdentityDirectoryResponseModel) HasTenant() bool {
	if o != nil && o.Tenant.IsSet() {
		return true
	}

	return false
}

// SetTenant gets a reference to the given NullableString and assigns it to the Tenant field.
func (o *IdentityDirectoryResponseModel) SetTenant(v string) {
	o.Tenant.Set(&v)
}
// SetTenantNil sets the value for Tenant to be an explicit nil
func (o *IdentityDirectoryResponseModel) SetTenantNil() {
	o.Tenant.Set(nil)
}

// UnsetTenant ensures that no value is present for Tenant, not even an explicit nil
func (o *IdentityDirectoryResponseModel) UnsetTenant() {
	o.Tenant.Unset()
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetIdentityProvider() IdentityProviderType {
	if o == nil || IsNil(o.IdentityProvider) {
		var ret IdentityProviderType
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetIdentityProviderOk() (*IdentityProviderType, bool) {
	if o == nil || IsNil(o.IdentityProvider) {
		return nil, false
	}
	return o.IdentityProvider, true
}

// HasIdentityProvider returns a boolean if a field has been set.
func (o *IdentityDirectoryResponseModel) HasIdentityProvider() bool {
	if o != nil && !IsNil(o.IdentityProvider) {
		return true
	}

	return false
}

// SetIdentityProvider gets a reference to the given IdentityProviderType and assigns it to the IdentityProvider field.
func (o *IdentityDirectoryResponseModel) SetIdentityProvider(v IdentityProviderType) {
	o.IdentityProvider = &v
}

func (o IdentityDirectoryResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityDirectoryResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Forest.IsSet() {
		toSerialize["Forest"] = o.Forest.Get()
	}
	if o.Domain.IsSet() {
		toSerialize["Domain"] = o.Domain.Get()
	}
	if o.Tenant.IsSet() {
		toSerialize["Tenant"] = o.Tenant.Get()
	}
	if !IsNil(o.IdentityProvider) {
		toSerialize["IdentityProvider"] = o.IdentityProvider
	}
	return toSerialize, nil
}

type NullableIdentityDirectoryResponseModel struct {
	value *IdentityDirectoryResponseModel
	isSet bool
}

func (v NullableIdentityDirectoryResponseModel) Get() *IdentityDirectoryResponseModel {
	return v.value
}

func (v *NullableIdentityDirectoryResponseModel) Set(val *IdentityDirectoryResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDirectoryResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDirectoryResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDirectoryResponseModel(val *IdentityDirectoryResponseModel) *NullableIdentityDirectoryResponseModel {
	return &NullableIdentityDirectoryResponseModel{value: val, isSet: true}
}

func (v NullableIdentityDirectoryResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDirectoryResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


