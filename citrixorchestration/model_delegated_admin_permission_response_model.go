/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DelegatedAdminPermissionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DelegatedAdminPermissionResponseModel{}

// DelegatedAdminPermissionResponseModel Response object for a delegated admin permission.
type DelegatedAdminPermissionResponseModel struct {
	// Id of the permission. Needs to be made globally unique (perhaps add site id)
	Id string `json:"Id"`
	// Name of the permission.
	Name string `json:"Name"`
	// Description of the permission.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether the permission is restricted to read-only operations. Was: ReadOnly
	IsReadOnly bool `json:"IsReadOnly"`
	// List of operations that the permission allows.
	Operations []string `json:"Operations"`
}

type _DelegatedAdminPermissionResponseModel DelegatedAdminPermissionResponseModel

// NewDelegatedAdminPermissionResponseModel instantiates a new DelegatedAdminPermissionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDelegatedAdminPermissionResponseModel(id string, name string, isReadOnly bool, operations []string) *DelegatedAdminPermissionResponseModel {
	this := DelegatedAdminPermissionResponseModel{}
	this.Id = id
	this.Name = name
	this.IsReadOnly = isReadOnly
	this.Operations = operations
	return &this
}

// NewDelegatedAdminPermissionResponseModelWithDefaults instantiates a new DelegatedAdminPermissionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDelegatedAdminPermissionResponseModelWithDefaults() *DelegatedAdminPermissionResponseModel {
	this := DelegatedAdminPermissionResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *DelegatedAdminPermissionResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DelegatedAdminPermissionResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DelegatedAdminPermissionResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DelegatedAdminPermissionResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DelegatedAdminPermissionResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DelegatedAdminPermissionResponseModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DelegatedAdminPermissionResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DelegatedAdminPermissionResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *DelegatedAdminPermissionResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *DelegatedAdminPermissionResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *DelegatedAdminPermissionResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *DelegatedAdminPermissionResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsReadOnly returns the IsReadOnly field value
func (o *DelegatedAdminPermissionResponseModel) GetIsReadOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsReadOnly
}

// GetIsReadOnlyOk returns a tuple with the IsReadOnly field value
// and a boolean to check if the value has been set.
func (o *DelegatedAdminPermissionResponseModel) GetIsReadOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsReadOnly, true
}

// SetIsReadOnly sets field value
func (o *DelegatedAdminPermissionResponseModel) SetIsReadOnly(v bool) {
	o.IsReadOnly = v
}

// GetOperations returns the Operations field value
func (o *DelegatedAdminPermissionResponseModel) GetOperations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *DelegatedAdminPermissionResponseModel) GetOperationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operations, true
}

// SetOperations sets field value
func (o *DelegatedAdminPermissionResponseModel) SetOperations(v []string) {
	o.Operations = v
}

func (o DelegatedAdminPermissionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DelegatedAdminPermissionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	toSerialize["IsReadOnly"] = o.IsReadOnly
	toSerialize["Operations"] = o.Operations
	return toSerialize, nil
}

type NullableDelegatedAdminPermissionResponseModel struct {
	value *DelegatedAdminPermissionResponseModel
	isSet bool
}

func (v NullableDelegatedAdminPermissionResponseModel) Get() *DelegatedAdminPermissionResponseModel {
	return v.value
}

func (v *NullableDelegatedAdminPermissionResponseModel) Set(val *DelegatedAdminPermissionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDelegatedAdminPermissionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDelegatedAdminPermissionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelegatedAdminPermissionResponseModel(val *DelegatedAdminPermissionResponseModel) *NullableDelegatedAdminPermissionResponseModel {
	return &NullableDelegatedAdminPermissionResponseModel{value: val, isSet: true}
}

func (v NullableDelegatedAdminPermissionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelegatedAdminPermissionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
