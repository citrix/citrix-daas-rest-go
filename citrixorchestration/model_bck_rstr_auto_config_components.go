/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// BckRstrAutoConfigComponents Backup / Restore component IDs
type BckRstrAutoConfigComponents string

// List of BckRstrAutoConfigComponents
const (
	BCKRSTRAUTOCONFIGCOMPONENTS_TAGS BckRstrAutoConfigComponents = "Tags"
	BCKRSTRAUTOCONFIGCOMPONENTS_ADMIN_SCOPES BckRstrAutoConfigComponents = "AdminScopes"
	BCKRSTRAUTOCONFIGCOMPONENTS_ADMIN_ROLES BckRstrAutoConfigComponents = "AdminRoles"
	BCKRSTRAUTOCONFIGCOMPONENTS_ADMIN_ADMINISTRATORS BckRstrAutoConfigComponents = "AdminAdministrators"
	BCKRSTRAUTOCONFIGCOMPONENTS_HOST_CONNECTIONS BckRstrAutoConfigComponents = "HostConnections"
	BCKRSTRAUTOCONFIGCOMPONENTS_ICONS BckRstrAutoConfigComponents = "Icons"
	BCKRSTRAUTOCONFIGCOMPONENTS_ADMIN_FOLDERS BckRstrAutoConfigComponents = "AdminFolders"
	BCKRSTRAUTOCONFIGCOMPONENTS_MACHINE_CATALOGS BckRstrAutoConfigComponents = "MachineCatalogs"
	BCKRSTRAUTOCONFIGCOMPONENTS_STORE_FRONTS BckRstrAutoConfigComponents = "StoreFronts"
	BCKRSTRAUTOCONFIGCOMPONENTS_DELIVERY_GROUPS BckRstrAutoConfigComponents = "DeliveryGroups"
	BCKRSTRAUTOCONFIGCOMPONENTS_APPLICATION_GROUPS BckRstrAutoConfigComponents = "ApplicationGroups"
	BCKRSTRAUTOCONFIGCOMPONENTS_APPLICATION_FOLDERS BckRstrAutoConfigComponents = "ApplicationFolders"
	BCKRSTRAUTOCONFIGCOMPONENTS_APPLICATIONS BckRstrAutoConfigComponents = "Applications"
	BCKRSTRAUTOCONFIGCOMPONENTS_APP_V_SERVERS BckRstrAutoConfigComponents = "AppVServers"
	BCKRSTRAUTOCONFIGCOMPONENTS_APP_LIB_PACKAGE_DISCOVERY BckRstrAutoConfigComponents = "AppLibPackageDiscovery"
	BCKRSTRAUTOCONFIGCOMPONENTS_APP_V_ISOLATION_GROUPS BckRstrAutoConfigComponents = "AppVIsolationGroups"
	BCKRSTRAUTOCONFIGCOMPONENTS_GROUP_POLICIES BckRstrAutoConfigComponents = "GroupPolicies"
	BCKRSTRAUTOCONFIGCOMPONENTS_USER_ZONE_PREFERENCES BckRstrAutoConfigComponents = "UserZonePreferences"
	BCKRSTRAUTOCONFIGCOMPONENTS_SITE_DATA BckRstrAutoConfigComponents = "SiteData"
	BCKRSTRAUTOCONFIGCOMPONENTS_ZONES BckRstrAutoConfigComponents = "Zones"
	BCKRSTRAUTOCONFIGCOMPONENTS_BACKUP_SCHEDULES BckRstrAutoConfigComponents = "BackupSchedules"
	BCKRSTRAUTOCONFIGCOMPONENTS_ALL BckRstrAutoConfigComponents = "All"
	BCKRSTRAUTOCONFIGCOMPONENTS_MULTIPLE BckRstrAutoConfigComponents = "Multiple"
	BCKRSTRAUTOCONFIGCOMPONENTS_UNDEFINED BckRstrAutoConfigComponents = "Undefined"
)

// All allowed values of BckRstrAutoConfigComponents enum
var AllowedBckRstrAutoConfigComponentsEnumValues = []BckRstrAutoConfigComponents{
	"Tags",
	"AdminScopes",
	"AdminRoles",
	"AdminAdministrators",
	"HostConnections",
	"Icons",
	"AdminFolders",
	"MachineCatalogs",
	"StoreFronts",
	"DeliveryGroups",
	"ApplicationGroups",
	"ApplicationFolders",
	"Applications",
	"AppVServers",
	"AppLibPackageDiscovery",
	"AppVIsolationGroups",
	"GroupPolicies",
	"UserZonePreferences",
	"SiteData",
	"Zones",
	"BackupSchedules",
	"All",
	"Multiple",
	"Undefined",
}

func (v *BckRstrAutoConfigComponents) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = BckRstrAutoConfigComponents(value)
	return nil
}

// NewBckRstrAutoConfigComponentsFromValue returns a pointer to a valid BckRstrAutoConfigComponents
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBckRstrAutoConfigComponentsFromValue(v string) (*BckRstrAutoConfigComponents, error) {
	ev := BckRstrAutoConfigComponents(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BckRstrAutoConfigComponents: valid values are %v", v, AllowedBckRstrAutoConfigComponentsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BckRstrAutoConfigComponents) IsValid() bool {
	for _, existing := range AllowedBckRstrAutoConfigComponentsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BckRstrAutoConfigComponents value
func (v BckRstrAutoConfigComponents) Ptr() *BckRstrAutoConfigComponents {
	return &v
}

type NullableBckRstrAutoConfigComponents struct {
	value *BckRstrAutoConfigComponents
	isSet bool
}

func (v NullableBckRstrAutoConfigComponents) Get() *BckRstrAutoConfigComponents {
	return v.value
}

func (v *NullableBckRstrAutoConfigComponents) Set(val *BckRstrAutoConfigComponents) {
	v.value = val
	v.isSet = true
}

func (v NullableBckRstrAutoConfigComponents) IsSet() bool {
	return v.isSet
}

func (v *NullableBckRstrAutoConfigComponents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBckRstrAutoConfigComponents(val *BckRstrAutoConfigComponents) *NullableBckRstrAutoConfigComponents {
	return &NullableBckRstrAutoConfigComponents{value: val, isSet: true}
}

func (v NullableBckRstrAutoConfigComponents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBckRstrAutoConfigComponents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

