/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorFaultResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorFaultResponseModel{}

// HypervisorFaultResponseModel Fault info for a hypervisor.
type HypervisorFaultResponseModel struct {
	// Fault state associated with connection, or 'None' if OK.
	State NullableString `json:"State,omitempty"`
	// Exception error text associated with any fault state.
	Reason NullableString `json:"Reason,omitempty"`
	// Time at which the hypervisor entered fault state
	TimeEntered NullableString `json:"TimeEntered,omitempty"`
	// Period for which the hypervisor has been in fault state
	DurationInSeconds NullableFloat64 `json:"DurationInSeconds,omitempty"`
}

// NewHypervisorFaultResponseModel instantiates a new HypervisorFaultResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorFaultResponseModel() *HypervisorFaultResponseModel {
	this := HypervisorFaultResponseModel{}
	return &this
}

// NewHypervisorFaultResponseModelWithDefaults instantiates a new HypervisorFaultResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorFaultResponseModelWithDefaults() *HypervisorFaultResponseModel {
	this := HypervisorFaultResponseModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorFaultResponseModel) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorFaultResponseModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *HypervisorFaultResponseModel) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *HypervisorFaultResponseModel) SetState(v string) {
	o.State.Set(&v)
}

// SetStateNil sets the value for State to be an explicit nil
func (o *HypervisorFaultResponseModel) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *HypervisorFaultResponseModel) UnsetState() {
	o.State.Unset()
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorFaultResponseModel) GetReason() string {
	if o == nil || IsNil(o.Reason.Get()) {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorFaultResponseModel) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *HypervisorFaultResponseModel) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *HypervisorFaultResponseModel) SetReason(v string) {
	o.Reason.Set(&v)
}

// SetReasonNil sets the value for Reason to be an explicit nil
func (o *HypervisorFaultResponseModel) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *HypervisorFaultResponseModel) UnsetReason() {
	o.Reason.Unset()
}

// GetTimeEntered returns the TimeEntered field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorFaultResponseModel) GetTimeEntered() string {
	if o == nil || IsNil(o.TimeEntered.Get()) {
		var ret string
		return ret
	}
	return *o.TimeEntered.Get()
}

// GetTimeEnteredOk returns a tuple with the TimeEntered field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorFaultResponseModel) GetTimeEnteredOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeEntered.Get(), o.TimeEntered.IsSet()
}

// HasTimeEntered returns a boolean if a field has been set.
func (o *HypervisorFaultResponseModel) HasTimeEntered() bool {
	if o != nil && o.TimeEntered.IsSet() {
		return true
	}

	return false
}

// SetTimeEntered gets a reference to the given NullableString and assigns it to the TimeEntered field.
func (o *HypervisorFaultResponseModel) SetTimeEntered(v string) {
	o.TimeEntered.Set(&v)
}

// SetTimeEnteredNil sets the value for TimeEntered to be an explicit nil
func (o *HypervisorFaultResponseModel) SetTimeEnteredNil() {
	o.TimeEntered.Set(nil)
}

// UnsetTimeEntered ensures that no value is present for TimeEntered, not even an explicit nil
func (o *HypervisorFaultResponseModel) UnsetTimeEntered() {
	o.TimeEntered.Unset()
}

// GetDurationInSeconds returns the DurationInSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorFaultResponseModel) GetDurationInSeconds() float64 {
	if o == nil || IsNil(o.DurationInSeconds.Get()) {
		var ret float64
		return ret
	}
	return *o.DurationInSeconds.Get()
}

// GetDurationInSecondsOk returns a tuple with the DurationInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorFaultResponseModel) GetDurationInSecondsOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DurationInSeconds.Get(), o.DurationInSeconds.IsSet()
}

// HasDurationInSeconds returns a boolean if a field has been set.
func (o *HypervisorFaultResponseModel) HasDurationInSeconds() bool {
	if o != nil && o.DurationInSeconds.IsSet() {
		return true
	}

	return false
}

// SetDurationInSeconds gets a reference to the given NullableFloat64 and assigns it to the DurationInSeconds field.
func (o *HypervisorFaultResponseModel) SetDurationInSeconds(v float64) {
	o.DurationInSeconds.Set(&v)
}

// SetDurationInSecondsNil sets the value for DurationInSeconds to be an explicit nil
func (o *HypervisorFaultResponseModel) SetDurationInSecondsNil() {
	o.DurationInSeconds.Set(nil)
}

// UnsetDurationInSeconds ensures that no value is present for DurationInSeconds, not even an explicit nil
func (o *HypervisorFaultResponseModel) UnsetDurationInSeconds() {
	o.DurationInSeconds.Unset()
}

func (o HypervisorFaultResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorFaultResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.State.IsSet() {
		toSerialize["State"] = o.State.Get()
	}
	if o.Reason.IsSet() {
		toSerialize["Reason"] = o.Reason.Get()
	}
	if o.TimeEntered.IsSet() {
		toSerialize["TimeEntered"] = o.TimeEntered.Get()
	}
	if o.DurationInSeconds.IsSet() {
		toSerialize["DurationInSeconds"] = o.DurationInSeconds.Get()
	}
	return toSerialize, nil
}

type NullableHypervisorFaultResponseModel struct {
	value *HypervisorFaultResponseModel
	isSet bool
}

func (v NullableHypervisorFaultResponseModel) Get() *HypervisorFaultResponseModel {
	return v.value
}

func (v *NullableHypervisorFaultResponseModel) Set(val *HypervisorFaultResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorFaultResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorFaultResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorFaultResponseModel(val *HypervisorFaultResponseModel) *NullableHypervisorFaultResponseModel {
	return &NullableHypervisorFaultResponseModel{value: val, isSet: true}
}

func (v NullableHypervisorFaultResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorFaultResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
