/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PowerTimeSchemeRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerTimeSchemeRequestModel{}

// PowerTimeSchemeRequestModel Request object for specifying a power time scheme.
type PowerTimeSchemeRequestModel struct {
	// The pattern of days of the week that the power time scheme covers.
	DaysOfWeek []TimeSchemeDays `json:"DaysOfWeek,omitempty"`
	// The administrative name of the power time scheme.
	Name NullableString `json:"Name,omitempty"`
	// The name of the power time scheme as displayed in the Studio console.
	DisplayName NullableString `json:"DisplayName,omitempty"`
	// `DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.` DEPRECATED.  Use PeakTimeRanges instead.  A set of 24 boolean flag values, one for each hour of the day. The first value in the array relates to midnight to 00:59, the next one to 1 AM to 01:59 and so on, with the last array element relating to 11 PM to 11:59. If the flag is `true` it means that the associated hour of the day is considered a peak time; if `false` it means that it is considered off-peak.
	// Deprecated
	PeakHours []bool `json:"PeakHours,omitempty"`
	// List of peak time ranges during the day.
	PeakTimeRanges []string `json:"PeakTimeRanges,omitempty"`
	// `DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.` DEPRECATED.  Use PoolSizeSchedule instead.  A set of 24 integer values, one for each hour of the day. The first value in the array relates to midnight to 00:59, the next one to 1 AM to 01:59 and so on, with the last array element relating to 11 PM to 11:59. The value defines the number of machines (either as an absolute number or a percentage of the machines in the delivery group, depending on the value of ) that are to be maintained in a running state, whether they are in use or not. A value of `-1` has special meaning: pool size management does not apply during such hours.
	// Deprecated
	PoolSize []int32 `json:"PoolSize,omitempty"`
	// List of pool size schedules during the day.  Each is specified as a time range and an indicator of the number of machines that should be powered on during that time range.
	PoolSizeSchedule []PoolSizeScheduleRequestModel `json:"PoolSizeSchedule,omitempty"`
	// Indicates whether the integer values in the pool size array are to be treated as absolute values (if this value is `false`) or as percentages of the number of machines in the delivery group (if this value is `true`).
	PoolUsingPercentage NullableBool `json:"PoolUsingPercentage,omitempty"`
}

// NewPowerTimeSchemeRequestModel instantiates a new PowerTimeSchemeRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerTimeSchemeRequestModel() *PowerTimeSchemeRequestModel {
	this := PowerTimeSchemeRequestModel{}
	var poolUsingPercentage bool = false
	this.PoolUsingPercentage = *NewNullableBool(&poolUsingPercentage)
	return &this
}

// NewPowerTimeSchemeRequestModelWithDefaults instantiates a new PowerTimeSchemeRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerTimeSchemeRequestModelWithDefaults() *PowerTimeSchemeRequestModel {
	this := PowerTimeSchemeRequestModel{}
	var poolUsingPercentage bool = false
	this.PoolUsingPercentage = *NewNullableBool(&poolUsingPercentage)
	return &this
}

// GetDaysOfWeek returns the DaysOfWeek field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetDaysOfWeek() []TimeSchemeDays {
	if o == nil {
		var ret []TimeSchemeDays
		return ret
	}
	return o.DaysOfWeek
}

// GetDaysOfWeekOk returns a tuple with the DaysOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetDaysOfWeekOk() ([]TimeSchemeDays, bool) {
	if o == nil || IsNil(o.DaysOfWeek) {
		return nil, false
	}
	return o.DaysOfWeek, true
}

// HasDaysOfWeek returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasDaysOfWeek() bool {
	if o != nil && IsNil(o.DaysOfWeek) {
		return true
	}

	return false
}

// SetDaysOfWeek gets a reference to the given []TimeSchemeDays and assigns it to the DaysOfWeek field.
func (o *PowerTimeSchemeRequestModel) SetDaysOfWeek(v []TimeSchemeDays) {
	o.DaysOfWeek = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *PowerTimeSchemeRequestModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *PowerTimeSchemeRequestModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *PowerTimeSchemeRequestModel) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *PowerTimeSchemeRequestModel) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *PowerTimeSchemeRequestModel) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *PowerTimeSchemeRequestModel) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetPeakHours returns the PeakHours field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *PowerTimeSchemeRequestModel) GetPeakHours() []bool {
	if o == nil {
		var ret []bool
		return ret
	}
	return o.PeakHours
}

// GetPeakHoursOk returns a tuple with the PeakHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *PowerTimeSchemeRequestModel) GetPeakHoursOk() ([]bool, bool) {
	if o == nil || IsNil(o.PeakHours) {
		return nil, false
	}
	return o.PeakHours, true
}

// HasPeakHours returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasPeakHours() bool {
	if o != nil && IsNil(o.PeakHours) {
		return true
	}

	return false
}

// SetPeakHours gets a reference to the given []bool and assigns it to the PeakHours field.
// Deprecated
func (o *PowerTimeSchemeRequestModel) SetPeakHours(v []bool) {
	o.PeakHours = v
}

// GetPeakTimeRanges returns the PeakTimeRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetPeakTimeRanges() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PeakTimeRanges
}

// GetPeakTimeRangesOk returns a tuple with the PeakTimeRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetPeakTimeRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.PeakTimeRanges) {
		return nil, false
	}
	return o.PeakTimeRanges, true
}

// HasPeakTimeRanges returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasPeakTimeRanges() bool {
	if o != nil && IsNil(o.PeakTimeRanges) {
		return true
	}

	return false
}

// SetPeakTimeRanges gets a reference to the given []string and assigns it to the PeakTimeRanges field.
func (o *PowerTimeSchemeRequestModel) SetPeakTimeRanges(v []string) {
	o.PeakTimeRanges = v
}

// GetPoolSize returns the PoolSize field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *PowerTimeSchemeRequestModel) GetPoolSize() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.PoolSize
}

// GetPoolSizeOk returns a tuple with the PoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *PowerTimeSchemeRequestModel) GetPoolSizeOk() ([]int32, bool) {
	if o == nil || IsNil(o.PoolSize) {
		return nil, false
	}
	return o.PoolSize, true
}

// HasPoolSize returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasPoolSize() bool {
	if o != nil && IsNil(o.PoolSize) {
		return true
	}

	return false
}

// SetPoolSize gets a reference to the given []int32 and assigns it to the PoolSize field.
// Deprecated
func (o *PowerTimeSchemeRequestModel) SetPoolSize(v []int32) {
	o.PoolSize = v
}

// GetPoolSizeSchedule returns the PoolSizeSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetPoolSizeSchedule() []PoolSizeScheduleRequestModel {
	if o == nil {
		var ret []PoolSizeScheduleRequestModel
		return ret
	}
	return o.PoolSizeSchedule
}

// GetPoolSizeScheduleOk returns a tuple with the PoolSizeSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetPoolSizeScheduleOk() ([]PoolSizeScheduleRequestModel, bool) {
	if o == nil || IsNil(o.PoolSizeSchedule) {
		return nil, false
	}
	return o.PoolSizeSchedule, true
}

// HasPoolSizeSchedule returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasPoolSizeSchedule() bool {
	if o != nil && IsNil(o.PoolSizeSchedule) {
		return true
	}

	return false
}

// SetPoolSizeSchedule gets a reference to the given []PoolSizeScheduleRequestModel and assigns it to the PoolSizeSchedule field.
func (o *PowerTimeSchemeRequestModel) SetPoolSizeSchedule(v []PoolSizeScheduleRequestModel) {
	o.PoolSizeSchedule = v
}

// GetPoolUsingPercentage returns the PoolUsingPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeRequestModel) GetPoolUsingPercentage() bool {
	if o == nil || IsNil(o.PoolUsingPercentage.Get()) {
		var ret bool
		return ret
	}
	return *o.PoolUsingPercentage.Get()
}

// GetPoolUsingPercentageOk returns a tuple with the PoolUsingPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeRequestModel) GetPoolUsingPercentageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolUsingPercentage.Get(), o.PoolUsingPercentage.IsSet()
}

// HasPoolUsingPercentage returns a boolean if a field has been set.
func (o *PowerTimeSchemeRequestModel) HasPoolUsingPercentage() bool {
	if o != nil && o.PoolUsingPercentage.IsSet() {
		return true
	}

	return false
}

// SetPoolUsingPercentage gets a reference to the given NullableBool and assigns it to the PoolUsingPercentage field.
func (o *PowerTimeSchemeRequestModel) SetPoolUsingPercentage(v bool) {
	o.PoolUsingPercentage.Set(&v)
}
// SetPoolUsingPercentageNil sets the value for PoolUsingPercentage to be an explicit nil
func (o *PowerTimeSchemeRequestModel) SetPoolUsingPercentageNil() {
	o.PoolUsingPercentage.Set(nil)
}

// UnsetPoolUsingPercentage ensures that no value is present for PoolUsingPercentage, not even an explicit nil
func (o *PowerTimeSchemeRequestModel) UnsetPoolUsingPercentage() {
	o.PoolUsingPercentage.Unset()
}

func (o PowerTimeSchemeRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerTimeSchemeRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DaysOfWeek != nil {
		toSerialize["DaysOfWeek"] = o.DaysOfWeek
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["DisplayName"] = o.DisplayName.Get()
	}
	if o.PeakHours != nil {
		toSerialize["PeakHours"] = o.PeakHours
	}
	if o.PeakTimeRanges != nil {
		toSerialize["PeakTimeRanges"] = o.PeakTimeRanges
	}
	if o.PoolSize != nil {
		toSerialize["PoolSize"] = o.PoolSize
	}
	if o.PoolSizeSchedule != nil {
		toSerialize["PoolSizeSchedule"] = o.PoolSizeSchedule
	}
	if o.PoolUsingPercentage.IsSet() {
		toSerialize["PoolUsingPercentage"] = o.PoolUsingPercentage.Get()
	}
	return toSerialize, nil
}

type NullablePowerTimeSchemeRequestModel struct {
	value *PowerTimeSchemeRequestModel
	isSet bool
}

func (v NullablePowerTimeSchemeRequestModel) Get() *PowerTimeSchemeRequestModel {
	return v.value
}

func (v *NullablePowerTimeSchemeRequestModel) Set(val *PowerTimeSchemeRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerTimeSchemeRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerTimeSchemeRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerTimeSchemeRequestModel(val *PowerTimeSchemeRequestModel) *NullablePowerTimeSchemeRequestModel {
	return &NullablePowerTimeSchemeRequestModel{value: val, isSet: true}
}

func (v NullablePowerTimeSchemeRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerTimeSchemeRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


