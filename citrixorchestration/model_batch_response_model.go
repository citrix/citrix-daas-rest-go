/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BatchResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchResponseModel{}

// BatchResponseModel Response object for a batch request.
type BatchResponseModel struct {
	// List of batch item responses.
	Items []BatchResponseItemModel `json:"Items"`
}

// NewBatchResponseModel instantiates a new BatchResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchResponseModel(items []BatchResponseItemModel) *BatchResponseModel {
	this := BatchResponseModel{}
	this.Items = items
	return &this
}

// NewBatchResponseModelWithDefaults instantiates a new BatchResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchResponseModelWithDefaults() *BatchResponseModel {
	this := BatchResponseModel{}
	return &this
}

// GetItems returns the Items field value
func (o *BatchResponseModel) GetItems() []BatchResponseItemModel {
	if o == nil {
		var ret []BatchResponseItemModel
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *BatchResponseModel) GetItemsOk() ([]BatchResponseItemModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *BatchResponseModel) SetItems(v []BatchResponseItemModel) {
	o.Items = v
}

func (o BatchResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Items"] = o.Items
	return toSerialize, nil
}

type NullableBatchResponseModel struct {
	value *BatchResponseModel
	isSet bool
}

func (v NullableBatchResponseModel) Get() *BatchResponseModel {
	return v.value
}

func (v *NullableBatchResponseModel) Set(val *BatchResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchResponseModel(val *BatchResponseModel) *NullableBatchResponseModel {
	return &NullableBatchResponseModel{value: val, isSet: true}
}

func (v NullableBatchResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


