/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// ProvisioningSchemeMachineAccountState State of a machine identity in regards to a provisioning scheme which it is associated with.
type ProvisioningSchemeMachineAccountState string

// List of ProvisioningSchemeMachineAccountState
const (
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_UNKNOWN   ProvisioningSchemeMachineAccountState = "Unknown"
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_AVAILABLE ProvisioningSchemeMachineAccountState = "Available"
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_IN_USE    ProvisioningSchemeMachineAccountState = "InUse"
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_ERROR     ProvisioningSchemeMachineAccountState = "Error"
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_TAINTED   ProvisioningSchemeMachineAccountState = "Tainted"
	PROVISIONINGSCHEMEMACHINEACCOUNTSTATE_LOCKED    ProvisioningSchemeMachineAccountState = "Locked"
)

// All allowed values of ProvisioningSchemeMachineAccountState enum
var AllowedProvisioningSchemeMachineAccountStateEnumValues = []ProvisioningSchemeMachineAccountState{
	"Unknown",
	"Available",
	"InUse",
	"Error",
	"Tainted",
	"Locked",
}

func (v *ProvisioningSchemeMachineAccountState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = ProvisioningSchemeMachineAccountState(value)
	return nil
}

// NewProvisioningSchemeMachineAccountStateFromValue returns a pointer to a valid ProvisioningSchemeMachineAccountState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProvisioningSchemeMachineAccountStateFromValue(v string) (*ProvisioningSchemeMachineAccountState, error) {
	ev := ProvisioningSchemeMachineAccountState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProvisioningSchemeMachineAccountState: valid values are %v", v, AllowedProvisioningSchemeMachineAccountStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProvisioningSchemeMachineAccountState) IsValid() bool {
	for _, existing := range AllowedProvisioningSchemeMachineAccountStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProvisioningSchemeMachineAccountState value
func (v ProvisioningSchemeMachineAccountState) Ptr() *ProvisioningSchemeMachineAccountState {
	return &v
}

type NullableProvisioningSchemeMachineAccountState struct {
	value *ProvisioningSchemeMachineAccountState
	isSet bool
}

func (v NullableProvisioningSchemeMachineAccountState) Get() *ProvisioningSchemeMachineAccountState {
	return v.value
}

func (v *NullableProvisioningSchemeMachineAccountState) Set(val *ProvisioningSchemeMachineAccountState) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningSchemeMachineAccountState) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningSchemeMachineAccountState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningSchemeMachineAccountState(val *ProvisioningSchemeMachineAccountState) *NullableProvisioningSchemeMachineAccountState {
	return &NullableProvisioningSchemeMachineAccountState{value: val, isSet: true}
}

func (v NullableProvisioningSchemeMachineAccountState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningSchemeMachineAccountState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
