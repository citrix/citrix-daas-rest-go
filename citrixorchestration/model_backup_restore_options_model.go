/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreOptionsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreOptionsModel{}

// BackupRestoreOptionsModel struct for BackupRestoreOptionsModel
type BackupRestoreOptionsModel struct {
	OneScheduledBackupPerDay NullableBool `json:"OneScheduledBackupPerDay,omitempty"`
}

// NewBackupRestoreOptionsModel instantiates a new BackupRestoreOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreOptionsModel() *BackupRestoreOptionsModel {
	this := BackupRestoreOptionsModel{}
	return &this
}

// NewBackupRestoreOptionsModelWithDefaults instantiates a new BackupRestoreOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreOptionsModelWithDefaults() *BackupRestoreOptionsModel {
	this := BackupRestoreOptionsModel{}
	return &this
}

// GetOneScheduledBackupPerDay returns the OneScheduledBackupPerDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreOptionsModel) GetOneScheduledBackupPerDay() bool {
	if o == nil || IsNil(o.OneScheduledBackupPerDay.Get()) {
		var ret bool
		return ret
	}
	return *o.OneScheduledBackupPerDay.Get()
}

// GetOneScheduledBackupPerDayOk returns a tuple with the OneScheduledBackupPerDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreOptionsModel) GetOneScheduledBackupPerDayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OneScheduledBackupPerDay.Get(), o.OneScheduledBackupPerDay.IsSet()
}

// HasOneScheduledBackupPerDay returns a boolean if a field has been set.
func (o *BackupRestoreOptionsModel) HasOneScheduledBackupPerDay() bool {
	if o != nil && o.OneScheduledBackupPerDay.IsSet() {
		return true
	}

	return false
}

// SetOneScheduledBackupPerDay gets a reference to the given NullableBool and assigns it to the OneScheduledBackupPerDay field.
func (o *BackupRestoreOptionsModel) SetOneScheduledBackupPerDay(v bool) {
	o.OneScheduledBackupPerDay.Set(&v)
}
// SetOneScheduledBackupPerDayNil sets the value for OneScheduledBackupPerDay to be an explicit nil
func (o *BackupRestoreOptionsModel) SetOneScheduledBackupPerDayNil() {
	o.OneScheduledBackupPerDay.Set(nil)
}

// UnsetOneScheduledBackupPerDay ensures that no value is present for OneScheduledBackupPerDay, not even an explicit nil
func (o *BackupRestoreOptionsModel) UnsetOneScheduledBackupPerDay() {
	o.OneScheduledBackupPerDay.Unset()
}

func (o BackupRestoreOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreOptionsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OneScheduledBackupPerDay.IsSet() {
		toSerialize["OneScheduledBackupPerDay"] = o.OneScheduledBackupPerDay.Get()
	}
	return toSerialize, nil
}

type NullableBackupRestoreOptionsModel struct {
	value *BackupRestoreOptionsModel
	isSet bool
}

func (v NullableBackupRestoreOptionsModel) Get() *BackupRestoreOptionsModel {
	return v.value
}

func (v *NullableBackupRestoreOptionsModel) Set(val *BackupRestoreOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreOptionsModel(val *BackupRestoreOptionsModel) *NullableBackupRestoreOptionsModel {
	return &NullableBackupRestoreOptionsModel{value: val, isSet: true}
}

func (v NullableBackupRestoreOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


