/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"time"
)

// checks if the ModelingResponseContractResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelingResponseContractResult{}

// ModelingResponseContractResult Simulation result
type ModelingResponseContractResult struct {
	// The report is for machine or user
	IsMachineRsop *bool `json:"IsMachineRsop,omitempty"`
	// The most recent simulation time
	LastProcessTime *time.Time `json:"LastProcessTime,omitempty"`
	// Applied settings
	AppliedSettings []AppliedSetting `json:"AppliedSettings,omitempty"`
	// Applied policies
	AppliedPolicies []AppliedPolicy `json:"AppliedPolicies,omitempty"`
	// Filter evidence used for the simulation
	FilterEvidence *map[string]string `json:"FilterEvidence,omitempty"`
	// Settings that did not get applied.
	LosingSettings []LosingSetting `json:"LosingSettings,omitempty"`
}

// NewModelingResponseContractResult instantiates a new ModelingResponseContractResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelingResponseContractResult() *ModelingResponseContractResult {
	this := ModelingResponseContractResult{}
	return &this
}

// NewModelingResponseContractResultWithDefaults instantiates a new ModelingResponseContractResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelingResponseContractResultWithDefaults() *ModelingResponseContractResult {
	this := ModelingResponseContractResult{}
	return &this
}

// GetIsMachineRsop returns the IsMachineRsop field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetIsMachineRsop() bool {
	if o == nil || IsNil(o.IsMachineRsop) {
		var ret bool
		return ret
	}
	return *o.IsMachineRsop
}

// GetIsMachineRsopOk returns a tuple with the IsMachineRsop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetIsMachineRsopOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMachineRsop) {
		return nil, false
	}
	return o.IsMachineRsop, true
}

// HasIsMachineRsop returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasIsMachineRsop() bool {
	if o != nil && !IsNil(o.IsMachineRsop) {
		return true
	}

	return false
}

// SetIsMachineRsop gets a reference to the given bool and assigns it to the IsMachineRsop field.
func (o *ModelingResponseContractResult) SetIsMachineRsop(v bool) {
	o.IsMachineRsop = &v
}

// GetLastProcessTime returns the LastProcessTime field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetLastProcessTime() time.Time {
	if o == nil || IsNil(o.LastProcessTime) {
		var ret time.Time
		return ret
	}
	return *o.LastProcessTime
}

// GetLastProcessTimeOk returns a tuple with the LastProcessTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetLastProcessTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastProcessTime) {
		return nil, false
	}
	return o.LastProcessTime, true
}

// HasLastProcessTime returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasLastProcessTime() bool {
	if o != nil && !IsNil(o.LastProcessTime) {
		return true
	}

	return false
}

// SetLastProcessTime gets a reference to the given time.Time and assigns it to the LastProcessTime field.
func (o *ModelingResponseContractResult) SetLastProcessTime(v time.Time) {
	o.LastProcessTime = &v
}

// GetAppliedSettings returns the AppliedSettings field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetAppliedSettings() []AppliedSetting {
	if o == nil || IsNil(o.AppliedSettings) {
		var ret []AppliedSetting
		return ret
	}
	return o.AppliedSettings
}

// GetAppliedSettingsOk returns a tuple with the AppliedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetAppliedSettingsOk() ([]AppliedSetting, bool) {
	if o == nil || IsNil(o.AppliedSettings) {
		return nil, false
	}
	return o.AppliedSettings, true
}

// HasAppliedSettings returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasAppliedSettings() bool {
	if o != nil && !IsNil(o.AppliedSettings) {
		return true
	}

	return false
}

// SetAppliedSettings gets a reference to the given []AppliedSetting and assigns it to the AppliedSettings field.
func (o *ModelingResponseContractResult) SetAppliedSettings(v []AppliedSetting) {
	o.AppliedSettings = v
}

// GetAppliedPolicies returns the AppliedPolicies field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetAppliedPolicies() []AppliedPolicy {
	if o == nil || IsNil(o.AppliedPolicies) {
		var ret []AppliedPolicy
		return ret
	}
	return o.AppliedPolicies
}

// GetAppliedPoliciesOk returns a tuple with the AppliedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetAppliedPoliciesOk() ([]AppliedPolicy, bool) {
	if o == nil || IsNil(o.AppliedPolicies) {
		return nil, false
	}
	return o.AppliedPolicies, true
}

// HasAppliedPolicies returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasAppliedPolicies() bool {
	if o != nil && !IsNil(o.AppliedPolicies) {
		return true
	}

	return false
}

// SetAppliedPolicies gets a reference to the given []AppliedPolicy and assigns it to the AppliedPolicies field.
func (o *ModelingResponseContractResult) SetAppliedPolicies(v []AppliedPolicy) {
	o.AppliedPolicies = v
}

// GetFilterEvidence returns the FilterEvidence field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetFilterEvidence() map[string]string {
	if o == nil || IsNil(o.FilterEvidence) {
		var ret map[string]string
		return ret
	}
	return *o.FilterEvidence
}

// GetFilterEvidenceOk returns a tuple with the FilterEvidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetFilterEvidenceOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.FilterEvidence) {
		return nil, false
	}
	return o.FilterEvidence, true
}

// HasFilterEvidence returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasFilterEvidence() bool {
	if o != nil && !IsNil(o.FilterEvidence) {
		return true
	}

	return false
}

// SetFilterEvidence gets a reference to the given map[string]string and assigns it to the FilterEvidence field.
func (o *ModelingResponseContractResult) SetFilterEvidence(v map[string]string) {
	o.FilterEvidence = &v
}

// GetLosingSettings returns the LosingSettings field value if set, zero value otherwise.
func (o *ModelingResponseContractResult) GetLosingSettings() []LosingSetting {
	if o == nil || IsNil(o.LosingSettings) {
		var ret []LosingSetting
		return ret
	}
	return o.LosingSettings
}

// GetLosingSettingsOk returns a tuple with the LosingSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelingResponseContractResult) GetLosingSettingsOk() ([]LosingSetting, bool) {
	if o == nil || IsNil(o.LosingSettings) {
		return nil, false
	}
	return o.LosingSettings, true
}

// HasLosingSettings returns a boolean if a field has been set.
func (o *ModelingResponseContractResult) HasLosingSettings() bool {
	if o != nil && !IsNil(o.LosingSettings) {
		return true
	}

	return false
}

// SetLosingSettings gets a reference to the given []LosingSetting and assigns it to the LosingSettings field.
func (o *ModelingResponseContractResult) SetLosingSettings(v []LosingSetting) {
	o.LosingSettings = v
}

func (o ModelingResponseContractResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelingResponseContractResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsMachineRsop) {
		toSerialize["IsMachineRsop"] = o.IsMachineRsop
	}
	if !IsNil(o.LastProcessTime) {
		toSerialize["LastProcessTime"] = o.LastProcessTime
	}
	if !IsNil(o.AppliedSettings) {
		toSerialize["AppliedSettings"] = o.AppliedSettings
	}
	if !IsNil(o.AppliedPolicies) {
		toSerialize["AppliedPolicies"] = o.AppliedPolicies
	}
	if !IsNil(o.FilterEvidence) {
		toSerialize["FilterEvidence"] = o.FilterEvidence
	}
	if !IsNil(o.LosingSettings) {
		toSerialize["LosingSettings"] = o.LosingSettings
	}
	return toSerialize, nil
}

type NullableModelingResponseContractResult struct {
	value *ModelingResponseContractResult
	isSet bool
}

func (v NullableModelingResponseContractResult) Get() *ModelingResponseContractResult {
	return v.value
}

func (v *NullableModelingResponseContractResult) Set(val *ModelingResponseContractResult) {
	v.value = val
	v.isSet = true
}

func (v NullableModelingResponseContractResult) IsSet() bool {
	return v.isSet
}

func (v *NullableModelingResponseContractResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelingResponseContractResult(val *ModelingResponseContractResult) *NullableModelingResponseContractResult {
	return &NullableModelingResponseContractResult{value: val, isSet: true}
}

func (v NullableModelingResponseContractResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelingResponseContractResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


