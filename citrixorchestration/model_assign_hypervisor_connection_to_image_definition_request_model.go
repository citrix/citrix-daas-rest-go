/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AssignHypervisorConnectionToImageDefinitionRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignHypervisorConnectionToImageDefinitionRequestModel{}

// AssignHypervisorConnectionToImageDefinitionRequestModel Request object representing the assignment of hypervisor connection to an image definition.
type AssignHypervisorConnectionToImageDefinitionRequestModel struct {
	// Specifies the hypervisor connection to assign to the image definition.
	HypervisorConnection string `json:"HypervisorConnection"`
	// The properties of the image definition that are specific to the target hypervisor connection.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
}

// NewAssignHypervisorConnectionToImageDefinitionRequestModel instantiates a new AssignHypervisorConnectionToImageDefinitionRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignHypervisorConnectionToImageDefinitionRequestModel(hypervisorConnection string) *AssignHypervisorConnectionToImageDefinitionRequestModel {
	this := AssignHypervisorConnectionToImageDefinitionRequestModel{}
	this.HypervisorConnection = hypervisorConnection
	return &this
}

// NewAssignHypervisorConnectionToImageDefinitionRequestModelWithDefaults instantiates a new AssignHypervisorConnectionToImageDefinitionRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignHypervisorConnectionToImageDefinitionRequestModelWithDefaults() *AssignHypervisorConnectionToImageDefinitionRequestModel {
	this := AssignHypervisorConnectionToImageDefinitionRequestModel{}
	return &this
}

// GetHypervisorConnection returns the HypervisorConnection field value
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) GetHypervisorConnection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HypervisorConnection
}

// GetHypervisorConnectionOk returns a tuple with the HypervisorConnection field value
// and a boolean to check if the value has been set.
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) GetHypervisorConnectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HypervisorConnection, true
}

// SetHypervisorConnection sets field value
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) SetHypervisorConnection(v string) {
	o.HypervisorConnection = v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) GetCustomProperties() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) HasCustomProperties() bool {
	if o != nil && IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *AssignHypervisorConnectionToImageDefinitionRequestModel) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

func (o AssignHypervisorConnectionToImageDefinitionRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignHypervisorConnectionToImageDefinitionRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["HypervisorConnection"] = o.HypervisorConnection
	if o.CustomProperties != nil {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	return toSerialize, nil
}

type NullableAssignHypervisorConnectionToImageDefinitionRequestModel struct {
	value *AssignHypervisorConnectionToImageDefinitionRequestModel
	isSet bool
}

func (v NullableAssignHypervisorConnectionToImageDefinitionRequestModel) Get() *AssignHypervisorConnectionToImageDefinitionRequestModel {
	return v.value
}

func (v *NullableAssignHypervisorConnectionToImageDefinitionRequestModel) Set(val *AssignHypervisorConnectionToImageDefinitionRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignHypervisorConnectionToImageDefinitionRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignHypervisorConnectionToImageDefinitionRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignHypervisorConnectionToImageDefinitionRequestModel(val *AssignHypervisorConnectionToImageDefinitionRequestModel) *NullableAssignHypervisorConnectionToImageDefinitionRequestModel {
	return &NullableAssignHypervisorConnectionToImageDefinitionRequestModel{value: val, isSet: true}
}

func (v NullableAssignHypervisorConnectionToImageDefinitionRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignHypervisorConnectionToImageDefinitionRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
