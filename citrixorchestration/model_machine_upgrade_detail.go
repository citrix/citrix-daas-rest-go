/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the MachineUpgradeDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineUpgradeDetail{}

// MachineUpgradeDetail Status detail of last VDA upgrade schedule for a machine.
type MachineUpgradeDetail struct {
	// Uuid of this upgrade status object.
	Uuid *string `json:"Uuid,omitempty"`
	ScheduleStatus *VdaUpgradeMachineScheduleStatus `json:"ScheduleStatus,omitempty"`
	// Status message resulted from the action of this upgrade status object.
	StatusMessage *string `json:"StatusMessage,omitempty"`
	// UTC time when this upgrade status object changed status for the last time.
	LastStateChangeTimeUtc *string `json:"LastStateChangeTimeUtc,omitempty"`
	// UTC time when this VDA upgrade is scheduled to start.
	ScheduledTimeUtc *string `json:"ScheduledTimeUtc,omitempty"`
	// Timeout duration in hours, of the current VDA upgrade schdeule.
	DurationInHours *int32 `json:"DurationInHours,omitempty"`
	// Target package version of the current VDA upgrade schdeule.
	TargetPackageVersion *string `json:"TargetPackageVersion,omitempty"`
}

// NewMachineUpgradeDetail instantiates a new MachineUpgradeDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineUpgradeDetail() *MachineUpgradeDetail {
	this := MachineUpgradeDetail{}
	return &this
}

// NewMachineUpgradeDetailWithDefaults instantiates a new MachineUpgradeDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineUpgradeDetailWithDefaults() *MachineUpgradeDetail {
	this := MachineUpgradeDetail{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *MachineUpgradeDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetScheduleStatus returns the ScheduleStatus field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetScheduleStatus() VdaUpgradeMachineScheduleStatus {
	if o == nil || IsNil(o.ScheduleStatus) {
		var ret VdaUpgradeMachineScheduleStatus
		return ret
	}
	return *o.ScheduleStatus
}

// GetScheduleStatusOk returns a tuple with the ScheduleStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetScheduleStatusOk() (*VdaUpgradeMachineScheduleStatus, bool) {
	if o == nil || IsNil(o.ScheduleStatus) {
		return nil, false
	}
	return o.ScheduleStatus, true
}

// HasScheduleStatus returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasScheduleStatus() bool {
	if o != nil && !IsNil(o.ScheduleStatus) {
		return true
	}

	return false
}

// SetScheduleStatus gets a reference to the given VdaUpgradeMachineScheduleStatus and assigns it to the ScheduleStatus field.
func (o *MachineUpgradeDetail) SetScheduleStatus(v VdaUpgradeMachineScheduleStatus) {
	o.ScheduleStatus = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *MachineUpgradeDetail) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetLastStateChangeTimeUtc returns the LastStateChangeTimeUtc field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetLastStateChangeTimeUtc() string {
	if o == nil || IsNil(o.LastStateChangeTimeUtc) {
		var ret string
		return ret
	}
	return *o.LastStateChangeTimeUtc
}

// GetLastStateChangeTimeUtcOk returns a tuple with the LastStateChangeTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetLastStateChangeTimeUtcOk() (*string, bool) {
	if o == nil || IsNil(o.LastStateChangeTimeUtc) {
		return nil, false
	}
	return o.LastStateChangeTimeUtc, true
}

// HasLastStateChangeTimeUtc returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasLastStateChangeTimeUtc() bool {
	if o != nil && !IsNil(o.LastStateChangeTimeUtc) {
		return true
	}

	return false
}

// SetLastStateChangeTimeUtc gets a reference to the given string and assigns it to the LastStateChangeTimeUtc field.
func (o *MachineUpgradeDetail) SetLastStateChangeTimeUtc(v string) {
	o.LastStateChangeTimeUtc = &v
}

// GetScheduledTimeUtc returns the ScheduledTimeUtc field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetScheduledTimeUtc() string {
	if o == nil || IsNil(o.ScheduledTimeUtc) {
		var ret string
		return ret
	}
	return *o.ScheduledTimeUtc
}

// GetScheduledTimeUtcOk returns a tuple with the ScheduledTimeUtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetScheduledTimeUtcOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledTimeUtc) {
		return nil, false
	}
	return o.ScheduledTimeUtc, true
}

// HasScheduledTimeUtc returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasScheduledTimeUtc() bool {
	if o != nil && !IsNil(o.ScheduledTimeUtc) {
		return true
	}

	return false
}

// SetScheduledTimeUtc gets a reference to the given string and assigns it to the ScheduledTimeUtc field.
func (o *MachineUpgradeDetail) SetScheduledTimeUtc(v string) {
	o.ScheduledTimeUtc = &v
}

// GetDurationInHours returns the DurationInHours field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetDurationInHours() int32 {
	if o == nil || IsNil(o.DurationInHours) {
		var ret int32
		return ret
	}
	return *o.DurationInHours
}

// GetDurationInHoursOk returns a tuple with the DurationInHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetDurationInHoursOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationInHours) {
		return nil, false
	}
	return o.DurationInHours, true
}

// HasDurationInHours returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasDurationInHours() bool {
	if o != nil && !IsNil(o.DurationInHours) {
		return true
	}

	return false
}

// SetDurationInHours gets a reference to the given int32 and assigns it to the DurationInHours field.
func (o *MachineUpgradeDetail) SetDurationInHours(v int32) {
	o.DurationInHours = &v
}

// GetTargetPackageVersion returns the TargetPackageVersion field value if set, zero value otherwise.
func (o *MachineUpgradeDetail) GetTargetPackageVersion() string {
	if o == nil || IsNil(o.TargetPackageVersion) {
		var ret string
		return ret
	}
	return *o.TargetPackageVersion
}

// GetTargetPackageVersionOk returns a tuple with the TargetPackageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineUpgradeDetail) GetTargetPackageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TargetPackageVersion) {
		return nil, false
	}
	return o.TargetPackageVersion, true
}

// HasTargetPackageVersion returns a boolean if a field has been set.
func (o *MachineUpgradeDetail) HasTargetPackageVersion() bool {
	if o != nil && !IsNil(o.TargetPackageVersion) {
		return true
	}

	return false
}

// SetTargetPackageVersion gets a reference to the given string and assigns it to the TargetPackageVersion field.
func (o *MachineUpgradeDetail) SetTargetPackageVersion(v string) {
	o.TargetPackageVersion = &v
}

func (o MachineUpgradeDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineUpgradeDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uuid) {
		toSerialize["Uuid"] = o.Uuid
	}
	if !IsNil(o.ScheduleStatus) {
		toSerialize["ScheduleStatus"] = o.ScheduleStatus
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["StatusMessage"] = o.StatusMessage
	}
	if !IsNil(o.LastStateChangeTimeUtc) {
		toSerialize["LastStateChangeTimeUtc"] = o.LastStateChangeTimeUtc
	}
	if !IsNil(o.ScheduledTimeUtc) {
		toSerialize["ScheduledTimeUtc"] = o.ScheduledTimeUtc
	}
	if !IsNil(o.DurationInHours) {
		toSerialize["DurationInHours"] = o.DurationInHours
	}
	if !IsNil(o.TargetPackageVersion) {
		toSerialize["TargetPackageVersion"] = o.TargetPackageVersion
	}
	return toSerialize, nil
}

type NullableMachineUpgradeDetail struct {
	value *MachineUpgradeDetail
	isSet bool
}

func (v NullableMachineUpgradeDetail) Get() *MachineUpgradeDetail {
	return v.value
}

func (v *NullableMachineUpgradeDetail) Set(val *MachineUpgradeDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineUpgradeDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineUpgradeDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineUpgradeDetail(val *MachineUpgradeDetail) *NullableMachineUpgradeDetail {
	return &NullableMachineUpgradeDetail{value: val, isSet: true}
}

func (v NullableMachineUpgradeDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineUpgradeDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


