/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateImageDefinitionRequestModelImageDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateImageDefinitionRequestModelImageDefinition{}

// CreateImageDefinitionRequestModelImageDefinition Defines the image definition. CreateImageDefinitionDetailRequestModel
type CreateImageDefinitionRequestModelImageDefinition struct {
	// The name associated with the image definition.
	ImageDefinitionName string `json:"ImageDefinitionName"`
	// The description associated with the image definition.
	ImageDefinitionDescription *string `json:"ImageDefinitionDescription,omitempty"`
	// The name or id of the HostingUnit the image definition is held on.
	HostingUnit string `json:"HostingUnit"`
	// OS Type of the image definition. OsType
	OsType string `json:"OsType"`
	// Indicates whether or not write back cache is enabled for the VMs created from this image definition. Optional; default is `false`.
	UseWriteBackCache *bool `json:"UseWriteBackCache,omitempty"`
	// The properties of the image definition that are specific to the target hosting infrastructure.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
}

// NewCreateImageDefinitionRequestModelImageDefinition instantiates a new CreateImageDefinitionRequestModelImageDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageDefinitionRequestModelImageDefinition(imageDefinitionName string, hostingUnit string, osType string) *CreateImageDefinitionRequestModelImageDefinition {
	this := CreateImageDefinitionRequestModelImageDefinition{}
	this.ImageDefinitionName = imageDefinitionName
	this.HostingUnit = hostingUnit
	this.OsType = osType
	var useWriteBackCache bool = false
	this.UseWriteBackCache = &useWriteBackCache
	return &this
}

// NewCreateImageDefinitionRequestModelImageDefinitionWithDefaults instantiates a new CreateImageDefinitionRequestModelImageDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageDefinitionRequestModelImageDefinitionWithDefaults() *CreateImageDefinitionRequestModelImageDefinition {
	this := CreateImageDefinitionRequestModelImageDefinition{}
	var useWriteBackCache bool = false
	this.UseWriteBackCache = &useWriteBackCache
	return &this
}

// GetImageDefinitionName returns the ImageDefinitionName field value
func (o *CreateImageDefinitionRequestModelImageDefinition) GetImageDefinitionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageDefinitionName
}

// GetImageDefinitionNameOk returns a tuple with the ImageDefinitionName field value
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetImageDefinitionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageDefinitionName, true
}

// SetImageDefinitionName sets field value
func (o *CreateImageDefinitionRequestModelImageDefinition) SetImageDefinitionName(v string) {
	o.ImageDefinitionName = v
}

// GetImageDefinitionDescription returns the ImageDefinitionDescription field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetImageDefinitionDescription() string {
	if o == nil || IsNil(o.ImageDefinitionDescription) {
		var ret string
		return ret
	}
	return *o.ImageDefinitionDescription
}

// GetImageDefinitionDescriptionOk returns a tuple with the ImageDefinitionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetImageDefinitionDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ImageDefinitionDescription) {
		return nil, false
	}
	return o.ImageDefinitionDescription, true
}

// HasImageDefinitionDescription returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) HasImageDefinitionDescription() bool {
	if o != nil && !IsNil(o.ImageDefinitionDescription) {
		return true
	}

	return false
}

// SetImageDefinitionDescription gets a reference to the given string and assigns it to the ImageDefinitionDescription field.
func (o *CreateImageDefinitionRequestModelImageDefinition) SetImageDefinitionDescription(v string) {
	o.ImageDefinitionDescription = &v
}

// GetHostingUnit returns the HostingUnit field value
func (o *CreateImageDefinitionRequestModelImageDefinition) GetHostingUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostingUnit
}

// GetHostingUnitOk returns a tuple with the HostingUnit field value
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetHostingUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostingUnit, true
}

// SetHostingUnit sets field value
func (o *CreateImageDefinitionRequestModelImageDefinition) SetHostingUnit(v string) {
	o.HostingUnit = v
}

// GetOsType returns the OsType field value
func (o *CreateImageDefinitionRequestModelImageDefinition) GetOsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetOsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsType, true
}

// SetOsType sets field value
func (o *CreateImageDefinitionRequestModelImageDefinition) SetOsType(v string) {
	o.OsType = v
}

// GetUseWriteBackCache returns the UseWriteBackCache field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetUseWriteBackCache() bool {
	if o == nil || IsNil(o.UseWriteBackCache) {
		var ret bool
		return ret
	}
	return *o.UseWriteBackCache
}

// GetUseWriteBackCacheOk returns a tuple with the UseWriteBackCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetUseWriteBackCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.UseWriteBackCache) {
		return nil, false
	}
	return o.UseWriteBackCache, true
}

// HasUseWriteBackCache returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) HasUseWriteBackCache() bool {
	if o != nil && !IsNil(o.UseWriteBackCache) {
		return true
	}

	return false
}

// SetUseWriteBackCache gets a reference to the given bool and assigns it to the UseWriteBackCache field.
func (o *CreateImageDefinitionRequestModelImageDefinition) SetUseWriteBackCache(v bool) {
	o.UseWriteBackCache = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetCustomProperties() []NameValueStringPairModel {
	if o == nil || IsNil(o.CustomProperties) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *CreateImageDefinitionRequestModelImageDefinition) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *CreateImageDefinitionRequestModelImageDefinition) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

func (o CreateImageDefinitionRequestModelImageDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateImageDefinitionRequestModelImageDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ImageDefinitionName"] = o.ImageDefinitionName
	if !IsNil(o.ImageDefinitionDescription) {
		toSerialize["ImageDefinitionDescription"] = o.ImageDefinitionDescription
	}
	toSerialize["HostingUnit"] = o.HostingUnit
	toSerialize["OsType"] = o.OsType
	if !IsNil(o.UseWriteBackCache) {
		toSerialize["UseWriteBackCache"] = o.UseWriteBackCache
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	return toSerialize, nil
}

type NullableCreateImageDefinitionRequestModelImageDefinition struct {
	value *CreateImageDefinitionRequestModelImageDefinition
	isSet bool
}

func (v NullableCreateImageDefinitionRequestModelImageDefinition) Get() *CreateImageDefinitionRequestModelImageDefinition {
	return v.value
}

func (v *NullableCreateImageDefinitionRequestModelImageDefinition) Set(val *CreateImageDefinitionRequestModelImageDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageDefinitionRequestModelImageDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageDefinitionRequestModelImageDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageDefinitionRequestModelImageDefinition(val *CreateImageDefinitionRequestModelImageDefinition) *NullableCreateImageDefinitionRequestModelImageDefinition {
	return &NullableCreateImageDefinitionRequestModelImageDefinition{value: val, isSet: true}
}

func (v NullableCreateImageDefinitionRequestModelImageDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageDefinitionRequestModelImageDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


