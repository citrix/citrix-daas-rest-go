/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PowerShellCommandErrorModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerShellCommandErrorModel{}

// PowerShellCommandErrorModel The error reported by command
type PowerShellCommandErrorModel struct {
	// The error Id
	FullyQualifiedErrorId NullableString `json:"FullyQualifiedErrorId,omitempty"`
	// The catalog message
	CategoryMessage NullableString `json:"CategoryMessage,omitempty"`
	// The invocation name
	InvocationName NullableString `json:"InvocationName,omitempty"`
	// The error message
	ErrorMessage NullableString `json:"ErrorMessage,omitempty"`
	// The position message
	PositionMessage NullableString `json:"PositionMessage,omitempty"`
}

// NewPowerShellCommandErrorModel instantiates a new PowerShellCommandErrorModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerShellCommandErrorModel() *PowerShellCommandErrorModel {
	this := PowerShellCommandErrorModel{}
	return &this
}

// NewPowerShellCommandErrorModelWithDefaults instantiates a new PowerShellCommandErrorModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerShellCommandErrorModelWithDefaults() *PowerShellCommandErrorModel {
	this := PowerShellCommandErrorModel{}
	return &this
}

// GetFullyQualifiedErrorId returns the FullyQualifiedErrorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerShellCommandErrorModel) GetFullyQualifiedErrorId() string {
	if o == nil || IsNil(o.FullyQualifiedErrorId.Get()) {
		var ret string
		return ret
	}
	return *o.FullyQualifiedErrorId.Get()
}

// GetFullyQualifiedErrorIdOk returns a tuple with the FullyQualifiedErrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerShellCommandErrorModel) GetFullyQualifiedErrorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullyQualifiedErrorId.Get(), o.FullyQualifiedErrorId.IsSet()
}

// HasFullyQualifiedErrorId returns a boolean if a field has been set.
func (o *PowerShellCommandErrorModel) HasFullyQualifiedErrorId() bool {
	if o != nil && o.FullyQualifiedErrorId.IsSet() {
		return true
	}

	return false
}

// SetFullyQualifiedErrorId gets a reference to the given NullableString and assigns it to the FullyQualifiedErrorId field.
func (o *PowerShellCommandErrorModel) SetFullyQualifiedErrorId(v string) {
	o.FullyQualifiedErrorId.Set(&v)
}

// SetFullyQualifiedErrorIdNil sets the value for FullyQualifiedErrorId to be an explicit nil
func (o *PowerShellCommandErrorModel) SetFullyQualifiedErrorIdNil() {
	o.FullyQualifiedErrorId.Set(nil)
}

// UnsetFullyQualifiedErrorId ensures that no value is present for FullyQualifiedErrorId, not even an explicit nil
func (o *PowerShellCommandErrorModel) UnsetFullyQualifiedErrorId() {
	o.FullyQualifiedErrorId.Unset()
}

// GetCategoryMessage returns the CategoryMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerShellCommandErrorModel) GetCategoryMessage() string {
	if o == nil || IsNil(o.CategoryMessage.Get()) {
		var ret string
		return ret
	}
	return *o.CategoryMessage.Get()
}

// GetCategoryMessageOk returns a tuple with the CategoryMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerShellCommandErrorModel) GetCategoryMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CategoryMessage.Get(), o.CategoryMessage.IsSet()
}

// HasCategoryMessage returns a boolean if a field has been set.
func (o *PowerShellCommandErrorModel) HasCategoryMessage() bool {
	if o != nil && o.CategoryMessage.IsSet() {
		return true
	}

	return false
}

// SetCategoryMessage gets a reference to the given NullableString and assigns it to the CategoryMessage field.
func (o *PowerShellCommandErrorModel) SetCategoryMessage(v string) {
	o.CategoryMessage.Set(&v)
}

// SetCategoryMessageNil sets the value for CategoryMessage to be an explicit nil
func (o *PowerShellCommandErrorModel) SetCategoryMessageNil() {
	o.CategoryMessage.Set(nil)
}

// UnsetCategoryMessage ensures that no value is present for CategoryMessage, not even an explicit nil
func (o *PowerShellCommandErrorModel) UnsetCategoryMessage() {
	o.CategoryMessage.Unset()
}

// GetInvocationName returns the InvocationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerShellCommandErrorModel) GetInvocationName() string {
	if o == nil || IsNil(o.InvocationName.Get()) {
		var ret string
		return ret
	}
	return *o.InvocationName.Get()
}

// GetInvocationNameOk returns a tuple with the InvocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerShellCommandErrorModel) GetInvocationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvocationName.Get(), o.InvocationName.IsSet()
}

// HasInvocationName returns a boolean if a field has been set.
func (o *PowerShellCommandErrorModel) HasInvocationName() bool {
	if o != nil && o.InvocationName.IsSet() {
		return true
	}

	return false
}

// SetInvocationName gets a reference to the given NullableString and assigns it to the InvocationName field.
func (o *PowerShellCommandErrorModel) SetInvocationName(v string) {
	o.InvocationName.Set(&v)
}

// SetInvocationNameNil sets the value for InvocationName to be an explicit nil
func (o *PowerShellCommandErrorModel) SetInvocationNameNil() {
	o.InvocationName.Set(nil)
}

// UnsetInvocationName ensures that no value is present for InvocationName, not even an explicit nil
func (o *PowerShellCommandErrorModel) UnsetInvocationName() {
	o.InvocationName.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerShellCommandErrorModel) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerShellCommandErrorModel) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *PowerShellCommandErrorModel) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *PowerShellCommandErrorModel) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}

// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *PowerShellCommandErrorModel) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *PowerShellCommandErrorModel) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetPositionMessage returns the PositionMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerShellCommandErrorModel) GetPositionMessage() string {
	if o == nil || IsNil(o.PositionMessage.Get()) {
		var ret string
		return ret
	}
	return *o.PositionMessage.Get()
}

// GetPositionMessageOk returns a tuple with the PositionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerShellCommandErrorModel) GetPositionMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PositionMessage.Get(), o.PositionMessage.IsSet()
}

// HasPositionMessage returns a boolean if a field has been set.
func (o *PowerShellCommandErrorModel) HasPositionMessage() bool {
	if o != nil && o.PositionMessage.IsSet() {
		return true
	}

	return false
}

// SetPositionMessage gets a reference to the given NullableString and assigns it to the PositionMessage field.
func (o *PowerShellCommandErrorModel) SetPositionMessage(v string) {
	o.PositionMessage.Set(&v)
}

// SetPositionMessageNil sets the value for PositionMessage to be an explicit nil
func (o *PowerShellCommandErrorModel) SetPositionMessageNil() {
	o.PositionMessage.Set(nil)
}

// UnsetPositionMessage ensures that no value is present for PositionMessage, not even an explicit nil
func (o *PowerShellCommandErrorModel) UnsetPositionMessage() {
	o.PositionMessage.Unset()
}

func (o PowerShellCommandErrorModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerShellCommandErrorModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FullyQualifiedErrorId.IsSet() {
		toSerialize["FullyQualifiedErrorId"] = o.FullyQualifiedErrorId.Get()
	}
	if o.CategoryMessage.IsSet() {
		toSerialize["CategoryMessage"] = o.CategoryMessage.Get()
	}
	if o.InvocationName.IsSet() {
		toSerialize["InvocationName"] = o.InvocationName.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["ErrorMessage"] = o.ErrorMessage.Get()
	}
	if o.PositionMessage.IsSet() {
		toSerialize["PositionMessage"] = o.PositionMessage.Get()
	}
	return toSerialize, nil
}

type NullablePowerShellCommandErrorModel struct {
	value *PowerShellCommandErrorModel
	isSet bool
}

func (v NullablePowerShellCommandErrorModel) Get() *PowerShellCommandErrorModel {
	return v.value
}

func (v *NullablePowerShellCommandErrorModel) Set(val *PowerShellCommandErrorModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerShellCommandErrorModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerShellCommandErrorModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerShellCommandErrorModel(val *PowerShellCommandErrorModel) *NullablePowerShellCommandErrorModel {
	return &NullablePowerShellCommandErrorModel{value: val, isSet: true}
}

func (v NullablePowerShellCommandErrorModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerShellCommandErrorModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
