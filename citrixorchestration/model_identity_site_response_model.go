/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentitySiteResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentitySiteResponseModel{}

// IdentitySiteResponseModel The AD Site identity object.
type IdentitySiteResponseModel struct {
	// The name associated with the site object.
	Name NullableString `json:"Name,omitempty"`
	// The guid of the site.
	Guid NullableString `json:"Guid,omitempty"`
	// The subnets in the site.
	Subnets []IdentitySubnetResponseModel `json:"Subnets,omitempty"`
	//     For individual identity lookup, usually an exception will be thrown.
	PossibleLookupFailure *bool `json:"PossibleLookupFailure,omitempty"`
	// Properties fetched and populated in the Site object.  This is a bitfield indicating the fetched properties.
	PropertiesFetched int32 `json:"PropertiesFetched"`
}

type _IdentitySiteResponseModel IdentitySiteResponseModel

// NewIdentitySiteResponseModel instantiates a new IdentitySiteResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentitySiteResponseModel(propertiesFetched int32) *IdentitySiteResponseModel {
	this := IdentitySiteResponseModel{}
	this.PropertiesFetched = propertiesFetched
	return &this
}

// NewIdentitySiteResponseModelWithDefaults instantiates a new IdentitySiteResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentitySiteResponseModelWithDefaults() *IdentitySiteResponseModel {
	this := IdentitySiteResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentitySiteResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentitySiteResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *IdentitySiteResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *IdentitySiteResponseModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *IdentitySiteResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *IdentitySiteResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentitySiteResponseModel) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentitySiteResponseModel) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *IdentitySiteResponseModel) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *IdentitySiteResponseModel) SetGuid(v string) {
	o.Guid.Set(&v)
}

// SetGuidNil sets the value for Guid to be an explicit nil
func (o *IdentitySiteResponseModel) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *IdentitySiteResponseModel) UnsetGuid() {
	o.Guid.Unset()
}

// GetSubnets returns the Subnets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentitySiteResponseModel) GetSubnets() []IdentitySubnetResponseModel {
	if o == nil {
		var ret []IdentitySubnetResponseModel
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentitySiteResponseModel) GetSubnetsOk() ([]IdentitySubnetResponseModel, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *IdentitySiteResponseModel) HasSubnets() bool {
	if o != nil && !IsNil(o.Subnets) {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []IdentitySubnetResponseModel and assigns it to the Subnets field.
func (o *IdentitySiteResponseModel) SetSubnets(v []IdentitySubnetResponseModel) {
	o.Subnets = v
}

// GetPossibleLookupFailure returns the PossibleLookupFailure field value if set, zero value otherwise.
func (o *IdentitySiteResponseModel) GetPossibleLookupFailure() bool {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		var ret bool
		return ret
	}
	return *o.PossibleLookupFailure
}

// GetPossibleLookupFailureOk returns a tuple with the PossibleLookupFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySiteResponseModel) GetPossibleLookupFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		return nil, false
	}
	return o.PossibleLookupFailure, true
}

// HasPossibleLookupFailure returns a boolean if a field has been set.
func (o *IdentitySiteResponseModel) HasPossibleLookupFailure() bool {
	if o != nil && !IsNil(o.PossibleLookupFailure) {
		return true
	}

	return false
}

// SetPossibleLookupFailure gets a reference to the given bool and assigns it to the PossibleLookupFailure field.
func (o *IdentitySiteResponseModel) SetPossibleLookupFailure(v bool) {
	o.PossibleLookupFailure = &v
}

// GetPropertiesFetched returns the PropertiesFetched field value
func (o *IdentitySiteResponseModel) GetPropertiesFetched() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertiesFetched
}

// GetPropertiesFetchedOk returns a tuple with the PropertiesFetched field value
// and a boolean to check if the value has been set.
func (o *IdentitySiteResponseModel) GetPropertiesFetchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertiesFetched, true
}

// SetPropertiesFetched sets field value
func (o *IdentitySiteResponseModel) SetPropertiesFetched(v int32) {
	o.PropertiesFetched = v
}

func (o IdentitySiteResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentitySiteResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["Guid"] = o.Guid.Get()
	}
	if o.Subnets != nil {
		toSerialize["Subnets"] = o.Subnets
	}
	if !IsNil(o.PossibleLookupFailure) {
		toSerialize["PossibleLookupFailure"] = o.PossibleLookupFailure
	}
	toSerialize["PropertiesFetched"] = o.PropertiesFetched
	return toSerialize, nil
}

type NullableIdentitySiteResponseModel struct {
	value *IdentitySiteResponseModel
	isSet bool
}

func (v NullableIdentitySiteResponseModel) Get() *IdentitySiteResponseModel {
	return v.value
}

func (v *NullableIdentitySiteResponseModel) Set(val *IdentitySiteResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentitySiteResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentitySiteResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentitySiteResponseModel(val *IdentitySiteResponseModel) *NullableIdentitySiteResponseModel {
	return &NullableIdentitySiteResponseModel{value: val, isSet: true}
}

func (v NullableIdentitySiteResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentitySiteResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
