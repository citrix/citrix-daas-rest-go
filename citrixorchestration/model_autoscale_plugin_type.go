/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// AutoscalePluginType
type AutoscalePluginType string

// List of AutoscalePluginType
const (
	AUTOSCALEPLUGINTYPE_UNKNOWN     AutoscalePluginType = "Unknown"
	AUTOSCALEPLUGINTYPE_HOLIDAY     AutoscalePluginType = "Holiday"
	AUTOSCALEPLUGINTYPE_INTELLIGENT AutoscalePluginType = "Intelligent"
)

// All allowed values of AutoscalePluginType enum
var AllowedAutoscalePluginTypeEnumValues = []AutoscalePluginType{
	"Unknown",
	"Holiday",
	"Intelligent",
}

func (v *AutoscalePluginType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = AutoscalePluginType(value)
	return nil
}

// NewAutoscalePluginTypeFromValue returns a pointer to a valid AutoscalePluginType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAutoscalePluginTypeFromValue(v string) (*AutoscalePluginType, error) {
	ev := AutoscalePluginType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AutoscalePluginType: valid values are %v", v, AllowedAutoscalePluginTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AutoscalePluginType) IsValid() bool {
	for _, existing := range AllowedAutoscalePluginTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AutoscalePluginType value
func (v AutoscalePluginType) Ptr() *AutoscalePluginType {
	return &v
}

type NullableAutoscalePluginType struct {
	value *AutoscalePluginType
	isSet bool
}

func (v NullableAutoscalePluginType) Get() *AutoscalePluginType {
	return v.value
}

func (v *NullableAutoscalePluginType) Set(val *AutoscalePluginType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoscalePluginType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoscalePluginType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoscalePluginType(val *AutoscalePluginType) *NullableAutoscalePluginType {
	return &NullableAutoscalePluginType{value: val, isSet: true}
}

func (v NullableAutoscalePluginType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoscalePluginType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
