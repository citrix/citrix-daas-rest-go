/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// AzureAdJoinType Azure AD join type for machines
type AzureAdJoinType string

// List of AzureAdJoinType
const (
	AZUREADJOINTYPE_UNKNOWN AzureAdJoinType = "Unknown"
	AZUREADJOINTYPE_NONE AzureAdJoinType = "None"
	AZUREADJOINTYPE_HYBRID AzureAdJoinType = "Hybrid"
	AZUREADJOINTYPE_PURE AzureAdJoinType = "Pure"
)

// All allowed values of AzureAdJoinType enum
var AllowedAzureAdJoinTypeEnumValues = []AzureAdJoinType{
	"Unknown",
	"None",
	"Hybrid",
	"Pure",
}

func (v *AzureAdJoinType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = AzureAdJoinType(value)
	return nil
}

// NewAzureAdJoinTypeFromValue returns a pointer to a valid AzureAdJoinType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAzureAdJoinTypeFromValue(v string) (*AzureAdJoinType, error) {
	ev := AzureAdJoinType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AzureAdJoinType: valid values are %v", v, AllowedAzureAdJoinTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AzureAdJoinType) IsValid() bool {
	for _, existing := range AllowedAzureAdJoinTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AzureAdJoinType value
func (v AzureAdJoinType) Ptr() *AzureAdJoinType {
	return &v
}

type NullableAzureAdJoinType struct {
	value *AzureAdJoinType
	isSet bool
}

func (v NullableAzureAdJoinType) Get() *AzureAdJoinType {
	return v.value
}

func (v *NullableAzureAdJoinType) Set(val *AzureAdJoinType) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureAdJoinType) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureAdJoinType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureAdJoinType(val *AzureAdJoinType) *NullableAzureAdJoinType {
	return &NullableAzureAdJoinType{value: val, isSet: true}
}

func (v NullableAzureAdJoinType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureAdJoinType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

