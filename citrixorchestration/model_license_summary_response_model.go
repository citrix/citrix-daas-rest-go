/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseSummaryResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseSummaryResponseModel{}

// LicenseSummaryResponseModel Summary model
type LicenseSummaryResponseModel struct {
	LicenseInformation *LicenseSummaryResponseModelLicenseInformation `json:"LicenseInformation,omitempty"`
	// Get license inventory list
	LicenseInventories []LicenseInventoryModel `json:"LicenseInventories,omitempty"`
	// The number of the available licenses
	NormalLicenses *int32 `json:"NormalLicenses,omitempty"`
	// The number of the overdraft licenses
	OverdraftLicenses *int32 `json:"OverdraftLicenses,omitempty"`
	// The usage of the licenses
	LicensesUsage *int32 `json:"LicensesUsage,omitempty"`
	// Indicates if the certificate is verified
	CertAccepted *bool `json:"CertAccepted,omitempty"`
}

// NewLicenseSummaryResponseModel instantiates a new LicenseSummaryResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseSummaryResponseModel() *LicenseSummaryResponseModel {
	this := LicenseSummaryResponseModel{}
	return &this
}

// NewLicenseSummaryResponseModelWithDefaults instantiates a new LicenseSummaryResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseSummaryResponseModelWithDefaults() *LicenseSummaryResponseModel {
	this := LicenseSummaryResponseModel{}
	return &this
}

// GetLicenseInformation returns the LicenseInformation field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetLicenseInformation() LicenseSummaryResponseModelLicenseInformation {
	if o == nil || IsNil(o.LicenseInformation) {
		var ret LicenseSummaryResponseModelLicenseInformation
		return ret
	}
	return *o.LicenseInformation
}

// GetLicenseInformationOk returns a tuple with the LicenseInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetLicenseInformationOk() (*LicenseSummaryResponseModelLicenseInformation, bool) {
	if o == nil || IsNil(o.LicenseInformation) {
		return nil, false
	}
	return o.LicenseInformation, true
}

// HasLicenseInformation returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasLicenseInformation() bool {
	if o != nil && !IsNil(o.LicenseInformation) {
		return true
	}

	return false
}

// SetLicenseInformation gets a reference to the given LicenseSummaryResponseModelLicenseInformation and assigns it to the LicenseInformation field.
func (o *LicenseSummaryResponseModel) SetLicenseInformation(v LicenseSummaryResponseModelLicenseInformation) {
	o.LicenseInformation = &v
}

// GetLicenseInventories returns the LicenseInventories field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetLicenseInventories() []LicenseInventoryModel {
	if o == nil || IsNil(o.LicenseInventories) {
		var ret []LicenseInventoryModel
		return ret
	}
	return o.LicenseInventories
}

// GetLicenseInventoriesOk returns a tuple with the LicenseInventories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetLicenseInventoriesOk() ([]LicenseInventoryModel, bool) {
	if o == nil || IsNil(o.LicenseInventories) {
		return nil, false
	}
	return o.LicenseInventories, true
}

// HasLicenseInventories returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasLicenseInventories() bool {
	if o != nil && !IsNil(o.LicenseInventories) {
		return true
	}

	return false
}

// SetLicenseInventories gets a reference to the given []LicenseInventoryModel and assigns it to the LicenseInventories field.
func (o *LicenseSummaryResponseModel) SetLicenseInventories(v []LicenseInventoryModel) {
	o.LicenseInventories = v
}

// GetNormalLicenses returns the NormalLicenses field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetNormalLicenses() int32 {
	if o == nil || IsNil(o.NormalLicenses) {
		var ret int32
		return ret
	}
	return *o.NormalLicenses
}

// GetNormalLicensesOk returns a tuple with the NormalLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetNormalLicensesOk() (*int32, bool) {
	if o == nil || IsNil(o.NormalLicenses) {
		return nil, false
	}
	return o.NormalLicenses, true
}

// HasNormalLicenses returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasNormalLicenses() bool {
	if o != nil && !IsNil(o.NormalLicenses) {
		return true
	}

	return false
}

// SetNormalLicenses gets a reference to the given int32 and assigns it to the NormalLicenses field.
func (o *LicenseSummaryResponseModel) SetNormalLicenses(v int32) {
	o.NormalLicenses = &v
}

// GetOverdraftLicenses returns the OverdraftLicenses field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetOverdraftLicenses() int32 {
	if o == nil || IsNil(o.OverdraftLicenses) {
		var ret int32
		return ret
	}
	return *o.OverdraftLicenses
}

// GetOverdraftLicensesOk returns a tuple with the OverdraftLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetOverdraftLicensesOk() (*int32, bool) {
	if o == nil || IsNil(o.OverdraftLicenses) {
		return nil, false
	}
	return o.OverdraftLicenses, true
}

// HasOverdraftLicenses returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasOverdraftLicenses() bool {
	if o != nil && !IsNil(o.OverdraftLicenses) {
		return true
	}

	return false
}

// SetOverdraftLicenses gets a reference to the given int32 and assigns it to the OverdraftLicenses field.
func (o *LicenseSummaryResponseModel) SetOverdraftLicenses(v int32) {
	o.OverdraftLicenses = &v
}

// GetLicensesUsage returns the LicensesUsage field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetLicensesUsage() int32 {
	if o == nil || IsNil(o.LicensesUsage) {
		var ret int32
		return ret
	}
	return *o.LicensesUsage
}

// GetLicensesUsageOk returns a tuple with the LicensesUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetLicensesUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensesUsage) {
		return nil, false
	}
	return o.LicensesUsage, true
}

// HasLicensesUsage returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasLicensesUsage() bool {
	if o != nil && !IsNil(o.LicensesUsage) {
		return true
	}

	return false
}

// SetLicensesUsage gets a reference to the given int32 and assigns it to the LicensesUsage field.
func (o *LicenseSummaryResponseModel) SetLicensesUsage(v int32) {
	o.LicensesUsage = &v
}

// GetCertAccepted returns the CertAccepted field value if set, zero value otherwise.
func (o *LicenseSummaryResponseModel) GetCertAccepted() bool {
	if o == nil || IsNil(o.CertAccepted) {
		var ret bool
		return ret
	}
	return *o.CertAccepted
}

// GetCertAcceptedOk returns a tuple with the CertAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseSummaryResponseModel) GetCertAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.CertAccepted) {
		return nil, false
	}
	return o.CertAccepted, true
}

// HasCertAccepted returns a boolean if a field has been set.
func (o *LicenseSummaryResponseModel) HasCertAccepted() bool {
	if o != nil && !IsNil(o.CertAccepted) {
		return true
	}

	return false
}

// SetCertAccepted gets a reference to the given bool and assigns it to the CertAccepted field.
func (o *LicenseSummaryResponseModel) SetCertAccepted(v bool) {
	o.CertAccepted = &v
}

func (o LicenseSummaryResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseSummaryResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseInformation) {
		toSerialize["LicenseInformation"] = o.LicenseInformation
	}
	if !IsNil(o.LicenseInventories) {
		toSerialize["LicenseInventories"] = o.LicenseInventories
	}
	if !IsNil(o.NormalLicenses) {
		toSerialize["NormalLicenses"] = o.NormalLicenses
	}
	if !IsNil(o.OverdraftLicenses) {
		toSerialize["OverdraftLicenses"] = o.OverdraftLicenses
	}
	if !IsNil(o.LicensesUsage) {
		toSerialize["LicensesUsage"] = o.LicensesUsage
	}
	if !IsNil(o.CertAccepted) {
		toSerialize["CertAccepted"] = o.CertAccepted
	}
	return toSerialize, nil
}

type NullableLicenseSummaryResponseModel struct {
	value *LicenseSummaryResponseModel
	isSet bool
}

func (v NullableLicenseSummaryResponseModel) Get() *LicenseSummaryResponseModel {
	return v.value
}

func (v *NullableLicenseSummaryResponseModel) Set(val *LicenseSummaryResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseSummaryResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseSummaryResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseSummaryResponseModel(val *LicenseSummaryResponseModel) *NullableLicenseSummaryResponseModel {
	return &NullableLicenseSummaryResponseModel{value: val, isSet: true}
}

func (v NullableLicenseSummaryResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseSummaryResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


