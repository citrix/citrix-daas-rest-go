/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageVersionResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageVersionResponseModelAllOf{}

// ImageVersionResponseModelAllOf Response object for image version.
type ImageVersionResponseModelAllOf struct {
	ImageDefinition *ImageVersionResponseModelAllOfImageDefinition `json:"ImageDefinition,omitempty"`
	ImageScheme *ImageVersionDetailResponseModelAllOfImageScheme `json:"ImageScheme,omitempty"`
}

// NewImageVersionResponseModelAllOf instantiates a new ImageVersionResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageVersionResponseModelAllOf() *ImageVersionResponseModelAllOf {
	this := ImageVersionResponseModelAllOf{}
	return &this
}

// NewImageVersionResponseModelAllOfWithDefaults instantiates a new ImageVersionResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageVersionResponseModelAllOfWithDefaults() *ImageVersionResponseModelAllOf {
	this := ImageVersionResponseModelAllOf{}
	return &this
}

// GetImageDefinition returns the ImageDefinition field value if set, zero value otherwise.
func (o *ImageVersionResponseModelAllOf) GetImageDefinition() ImageVersionResponseModelAllOfImageDefinition {
	if o == nil || IsNil(o.ImageDefinition) {
		var ret ImageVersionResponseModelAllOfImageDefinition
		return ret
	}
	return *o.ImageDefinition
}

// GetImageDefinitionOk returns a tuple with the ImageDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionResponseModelAllOf) GetImageDefinitionOk() (*ImageVersionResponseModelAllOfImageDefinition, bool) {
	if o == nil || IsNil(o.ImageDefinition) {
		return nil, false
	}
	return o.ImageDefinition, true
}

// HasImageDefinition returns a boolean if a field has been set.
func (o *ImageVersionResponseModelAllOf) HasImageDefinition() bool {
	if o != nil && !IsNil(o.ImageDefinition) {
		return true
	}

	return false
}

// SetImageDefinition gets a reference to the given ImageVersionResponseModelAllOfImageDefinition and assigns it to the ImageDefinition field.
func (o *ImageVersionResponseModelAllOf) SetImageDefinition(v ImageVersionResponseModelAllOfImageDefinition) {
	o.ImageDefinition = &v
}

// GetImageScheme returns the ImageScheme field value if set, zero value otherwise.
func (o *ImageVersionResponseModelAllOf) GetImageScheme() ImageVersionDetailResponseModelAllOfImageScheme {
	if o == nil || IsNil(o.ImageScheme) {
		var ret ImageVersionDetailResponseModelAllOfImageScheme
		return ret
	}
	return *o.ImageScheme
}

// GetImageSchemeOk returns a tuple with the ImageScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionResponseModelAllOf) GetImageSchemeOk() (*ImageVersionDetailResponseModelAllOfImageScheme, bool) {
	if o == nil || IsNil(o.ImageScheme) {
		return nil, false
	}
	return o.ImageScheme, true
}

// HasImageScheme returns a boolean if a field has been set.
func (o *ImageVersionResponseModelAllOf) HasImageScheme() bool {
	if o != nil && !IsNil(o.ImageScheme) {
		return true
	}

	return false
}

// SetImageScheme gets a reference to the given ImageVersionDetailResponseModelAllOfImageScheme and assigns it to the ImageScheme field.
func (o *ImageVersionResponseModelAllOf) SetImageScheme(v ImageVersionDetailResponseModelAllOfImageScheme) {
	o.ImageScheme = &v
}

func (o ImageVersionResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageVersionResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageDefinition) {
		toSerialize["ImageDefinition"] = o.ImageDefinition
	}
	if !IsNil(o.ImageScheme) {
		toSerialize["ImageScheme"] = o.ImageScheme
	}
	return toSerialize, nil
}

type NullableImageVersionResponseModelAllOf struct {
	value *ImageVersionResponseModelAllOf
	isSet bool
}

func (v NullableImageVersionResponseModelAllOf) Get() *ImageVersionResponseModelAllOf {
	return v.value
}

func (v *NullableImageVersionResponseModelAllOf) Set(val *ImageVersionResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableImageVersionResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableImageVersionResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageVersionResponseModelAllOf(val *ImageVersionResponseModelAllOf) *NullableImageVersionResponseModelAllOf {
	return &NullableImageVersionResponseModelAllOf{value: val, isSet: true}
}

func (v NullableImageVersionResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageVersionResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


