/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageDefinitionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageDefinitionResponseModel{}

// ImageDefinitionResponseModel Response object for image definition.
type ImageDefinitionResponseModel struct {
	Id string `json:"Id"`
	// the name of the image definition
	Name NullableString `json:"Name,omitempty"`
	// the create date for this image definition
	CreationTime NullableString `json:"CreationTime,omitempty"`
	// description
	Description NullableString `json:"Description,omitempty"`
	OsType OsType `json:"OsType"`
	// the latest version for the image definition
	LatestVersion int32 `json:"LatestVersion"`
	VDASessionSupport SessionSupport `json:"VDASessionSupport"`
	// The hypervisor connections on which image definition is associated.
	HypervisorConnections []ImageDefinitionHypervisorConnectionResponseModel `json:"HypervisorConnections,omitempty"`
}

// NewImageDefinitionResponseModel instantiates a new ImageDefinitionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageDefinitionResponseModel(id string, osType OsType, latestVersion int32, vDASessionSupport SessionSupport) *ImageDefinitionResponseModel {
	this := ImageDefinitionResponseModel{}
	this.Id = id
	this.OsType = osType
	this.LatestVersion = latestVersion
	this.VDASessionSupport = vDASessionSupport
	return &this
}

// NewImageDefinitionResponseModelWithDefaults instantiates a new ImageDefinitionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageDefinitionResponseModelWithDefaults() *ImageDefinitionResponseModel {
	this := ImageDefinitionResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *ImageDefinitionResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ImageDefinitionResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ImageDefinitionResponseModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ImageDefinitionResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ImageDefinitionResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionResponseModel) GetCreationTime() string {
	if o == nil || IsNil(o.CreationTime.Get()) {
		var ret string
		return ret
	}
	return *o.CreationTime.Get()
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionResponseModel) GetCreationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreationTime.Get(), o.CreationTime.IsSet()
}

// HasCreationTime returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasCreationTime() bool {
	if o != nil && o.CreationTime.IsSet() {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given NullableString and assigns it to the CreationTime field.
func (o *ImageDefinitionResponseModel) SetCreationTime(v string) {
	o.CreationTime.Set(&v)
}
// SetCreationTimeNil sets the value for CreationTime to be an explicit nil
func (o *ImageDefinitionResponseModel) SetCreationTimeNil() {
	o.CreationTime.Set(nil)
}

// UnsetCreationTime ensures that no value is present for CreationTime, not even an explicit nil
func (o *ImageDefinitionResponseModel) UnsetCreationTime() {
	o.CreationTime.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ImageDefinitionResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ImageDefinitionResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ImageDefinitionResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetOsType returns the OsType field value
func (o *ImageDefinitionResponseModel) GetOsType() OsType {
	if o == nil {
		var ret OsType
		return ret
	}

	return o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetOsTypeOk() (*OsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsType, true
}

// SetOsType sets field value
func (o *ImageDefinitionResponseModel) SetOsType(v OsType) {
	o.OsType = v
}

// GetLatestVersion returns the LatestVersion field value
func (o *ImageDefinitionResponseModel) GetLatestVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetLatestVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestVersion, true
}

// SetLatestVersion sets field value
func (o *ImageDefinitionResponseModel) SetLatestVersion(v int32) {
	o.LatestVersion = v
}

// GetVDASessionSupport returns the VDASessionSupport field value
func (o *ImageDefinitionResponseModel) GetVDASessionSupport() SessionSupport {
	if o == nil {
		var ret SessionSupport
		return ret
	}

	return o.VDASessionSupport
}

// GetVDASessionSupportOk returns a tuple with the VDASessionSupport field value
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetVDASessionSupportOk() (*SessionSupport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VDASessionSupport, true
}

// SetVDASessionSupport sets field value
func (o *ImageDefinitionResponseModel) SetVDASessionSupport(v SessionSupport) {
	o.VDASessionSupport = v
}

// GetHypervisorConnections returns the HypervisorConnections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageDefinitionResponseModel) GetHypervisorConnections() []ImageDefinitionHypervisorConnectionResponseModel {
	if o == nil {
		var ret []ImageDefinitionHypervisorConnectionResponseModel
		return ret
	}
	return o.HypervisorConnections
}

// GetHypervisorConnectionsOk returns a tuple with the HypervisorConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageDefinitionResponseModel) GetHypervisorConnectionsOk() ([]ImageDefinitionHypervisorConnectionResponseModel, bool) {
	if o == nil || IsNil(o.HypervisorConnections) {
		return nil, false
	}
	return o.HypervisorConnections, true
}

// HasHypervisorConnections returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasHypervisorConnections() bool {
	if o != nil && IsNil(o.HypervisorConnections) {
		return true
	}

	return false
}

// SetHypervisorConnections gets a reference to the given []ImageDefinitionHypervisorConnectionResponseModel and assigns it to the HypervisorConnections field.
func (o *ImageDefinitionResponseModel) SetHypervisorConnections(v []ImageDefinitionHypervisorConnectionResponseModel) {
	o.HypervisorConnections = v
}

func (o ImageDefinitionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageDefinitionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.CreationTime.IsSet() {
		toSerialize["CreationTime"] = o.CreationTime.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	toSerialize["OsType"] = o.OsType
	toSerialize["LatestVersion"] = o.LatestVersion
	toSerialize["VDASessionSupport"] = o.VDASessionSupport
	if o.HypervisorConnections != nil {
		toSerialize["HypervisorConnections"] = o.HypervisorConnections
	}
	return toSerialize, nil
}

type NullableImageDefinitionResponseModel struct {
	value *ImageDefinitionResponseModel
	isSet bool
}

func (v NullableImageDefinitionResponseModel) Get() *ImageDefinitionResponseModel {
	return v.value
}

func (v *NullableImageDefinitionResponseModel) Set(val *ImageDefinitionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageDefinitionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageDefinitionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageDefinitionResponseModel(val *ImageDefinitionResponseModel) *NullableImageDefinitionResponseModel {
	return &NullableImageDefinitionResponseModel{value: val, isSet: true}
}

func (v NullableImageDefinitionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageDefinitionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


