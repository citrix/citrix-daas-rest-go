/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageDefinitionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageDefinitionResponseModel{}

// ImageDefinitionResponseModel Response object for image definition.
type ImageDefinitionResponseModel struct {
	// The name associated with the image definition.
	Name *string `json:"Name,omitempty"`
	// The Id of the image definition.
	Id *string `json:"Id,omitempty"`
	// The os type of image definition.
	OsType *string `json:"OsType,omitempty"`
	// The hosting unit name of image definition.
	HostingUnitName *string `json:"HostingUnitName,omitempty"`
	// The hosting unit id of image definition.
	HostingUnitUid *string `json:"HostingUnitUid,omitempty"`
	// The description of the image definition.
	Description *string `json:"Description,omitempty"`
	// The UseWriteBackCache of the image definition.
	UseWriteBackCache *bool `json:"UseWriteBackCache,omitempty"`
	// The custom properties of the image definition. Currently only resource group.
	CustomProperties []NameValueStringPairModel `json:"CustomProperties,omitempty"`
}

// NewImageDefinitionResponseModel instantiates a new ImageDefinitionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageDefinitionResponseModel() *ImageDefinitionResponseModel {
	this := ImageDefinitionResponseModel{}
	return &this
}

// NewImageDefinitionResponseModelWithDefaults instantiates a new ImageDefinitionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageDefinitionResponseModelWithDefaults() *ImageDefinitionResponseModel {
	this := ImageDefinitionResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageDefinitionResponseModel) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageDefinitionResponseModel) SetId(v string) {
	o.Id = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetOsType() string {
	if o == nil || IsNil(o.OsType) {
		var ret string
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetOsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given string and assigns it to the OsType field.
func (o *ImageDefinitionResponseModel) SetOsType(v string) {
	o.OsType = &v
}

// GetHostingUnitName returns the HostingUnitName field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetHostingUnitName() string {
	if o == nil || IsNil(o.HostingUnitName) {
		var ret string
		return ret
	}
	return *o.HostingUnitName
}

// GetHostingUnitNameOk returns a tuple with the HostingUnitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetHostingUnitNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostingUnitName) {
		return nil, false
	}
	return o.HostingUnitName, true
}

// HasHostingUnitName returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasHostingUnitName() bool {
	if o != nil && !IsNil(o.HostingUnitName) {
		return true
	}

	return false
}

// SetHostingUnitName gets a reference to the given string and assigns it to the HostingUnitName field.
func (o *ImageDefinitionResponseModel) SetHostingUnitName(v string) {
	o.HostingUnitName = &v
}

// GetHostingUnitUid returns the HostingUnitUid field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetHostingUnitUid() string {
	if o == nil || IsNil(o.HostingUnitUid) {
		var ret string
		return ret
	}
	return *o.HostingUnitUid
}

// GetHostingUnitUidOk returns a tuple with the HostingUnitUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetHostingUnitUidOk() (*string, bool) {
	if o == nil || IsNil(o.HostingUnitUid) {
		return nil, false
	}
	return o.HostingUnitUid, true
}

// HasHostingUnitUid returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasHostingUnitUid() bool {
	if o != nil && !IsNil(o.HostingUnitUid) {
		return true
	}

	return false
}

// SetHostingUnitUid gets a reference to the given string and assigns it to the HostingUnitUid field.
func (o *ImageDefinitionResponseModel) SetHostingUnitUid(v string) {
	o.HostingUnitUid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ImageDefinitionResponseModel) SetDescription(v string) {
	o.Description = &v
}

// GetUseWriteBackCache returns the UseWriteBackCache field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetUseWriteBackCache() bool {
	if o == nil || IsNil(o.UseWriteBackCache) {
		var ret bool
		return ret
	}
	return *o.UseWriteBackCache
}

// GetUseWriteBackCacheOk returns a tuple with the UseWriteBackCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetUseWriteBackCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.UseWriteBackCache) {
		return nil, false
	}
	return o.UseWriteBackCache, true
}

// HasUseWriteBackCache returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasUseWriteBackCache() bool {
	if o != nil && !IsNil(o.UseWriteBackCache) {
		return true
	}

	return false
}

// SetUseWriteBackCache gets a reference to the given bool and assigns it to the UseWriteBackCache field.
func (o *ImageDefinitionResponseModel) SetUseWriteBackCache(v bool) {
	o.UseWriteBackCache = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *ImageDefinitionResponseModel) GetCustomProperties() []NameValueStringPairModel {
	if o == nil || IsNil(o.CustomProperties) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDefinitionResponseModel) GetCustomPropertiesOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *ImageDefinitionResponseModel) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given []NameValueStringPairModel and assigns it to the CustomProperties field.
func (o *ImageDefinitionResponseModel) SetCustomProperties(v []NameValueStringPairModel) {
	o.CustomProperties = v
}

func (o ImageDefinitionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageDefinitionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.OsType) {
		toSerialize["OsType"] = o.OsType
	}
	if !IsNil(o.HostingUnitName) {
		toSerialize["HostingUnitName"] = o.HostingUnitName
	}
	if !IsNil(o.HostingUnitUid) {
		toSerialize["HostingUnitUid"] = o.HostingUnitUid
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.UseWriteBackCache) {
		toSerialize["UseWriteBackCache"] = o.UseWriteBackCache
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	return toSerialize, nil
}

type NullableImageDefinitionResponseModel struct {
	value *ImageDefinitionResponseModel
	isSet bool
}

func (v NullableImageDefinitionResponseModel) Get() *ImageDefinitionResponseModel {
	return v.value
}

func (v *NullableImageDefinitionResponseModel) Set(val *ImageDefinitionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageDefinitionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageDefinitionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageDefinitionResponseModel(val *ImageDefinitionResponseModel) *NullableImageDefinitionResponseModel {
	return &NullableImageDefinitionResponseModel{value: val, isSet: true}
}

func (v NullableImageDefinitionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageDefinitionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


