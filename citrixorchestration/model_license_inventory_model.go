/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseInventoryModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseInventoryModel{}

// LicenseInventoryModel License Inventory Model
type LicenseInventoryModel struct {
	LicenseProductName *LicenseProduct `json:"LicenseProductName,omitempty"`
	// Localized license name of the product
	LocalizedLicenseProductName NullableString `json:"LocalizedLicenseProductName,omitempty"`
	// The expired date of the license
	LicenseExpirationDate NullableString `json:"LicenseExpirationDate,omitempty"`
	// The subscription advantage date of the license
	LicenseSubscriptionAdvantageDate NullableString `json:"LicenseSubscriptionAdvantageDate,omitempty"`
	// The type of the license
	LicenseType NullableString `json:"LicenseType,omitempty"`
	// The number of the Licenses in use
	LicensesInUse *int32 `json:"LicensesInUse,omitempty"`
	// The number of the available licenses
	LicensesAvailable *int32 `json:"LicensesAvailable,omitempty"`
	// The number of the overdraft licenses
	LicenseOverdraft *int32 `json:"LicenseOverdraft,omitempty"`
	LicenseModel *LicenseModel `json:"LicenseModel,omitempty"`
	ProductEdition *ProductEdition `json:"ProductEdition,omitempty"`
	// Localized license name of the product edition
	LocalizedLicenseProductEdition NullableString `json:"LocalizedLicenseProductEdition,omitempty"`
}

// NewLicenseInventoryModel instantiates a new LicenseInventoryModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseInventoryModel() *LicenseInventoryModel {
	this := LicenseInventoryModel{}
	return &this
}

// NewLicenseInventoryModelWithDefaults instantiates a new LicenseInventoryModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseInventoryModelWithDefaults() *LicenseInventoryModel {
	this := LicenseInventoryModel{}
	return &this
}

// GetLicenseProductName returns the LicenseProductName field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetLicenseProductName() LicenseProduct {
	if o == nil || IsNil(o.LicenseProductName) {
		var ret LicenseProduct
		return ret
	}
	return *o.LicenseProductName
}

// GetLicenseProductNameOk returns a tuple with the LicenseProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetLicenseProductNameOk() (*LicenseProduct, bool) {
	if o == nil || IsNil(o.LicenseProductName) {
		return nil, false
	}
	return o.LicenseProductName, true
}

// HasLicenseProductName returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseProductName() bool {
	if o != nil && !IsNil(o.LicenseProductName) {
		return true
	}

	return false
}

// SetLicenseProductName gets a reference to the given LicenseProduct and assigns it to the LicenseProductName field.
func (o *LicenseInventoryModel) SetLicenseProductName(v LicenseProduct) {
	o.LicenseProductName = &v
}

// GetLocalizedLicenseProductName returns the LocalizedLicenseProductName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseInventoryModel) GetLocalizedLicenseProductName() string {
	if o == nil || IsNil(o.LocalizedLicenseProductName.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedLicenseProductName.Get()
}

// GetLocalizedLicenseProductNameOk returns a tuple with the LocalizedLicenseProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseInventoryModel) GetLocalizedLicenseProductNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedLicenseProductName.Get(), o.LocalizedLicenseProductName.IsSet()
}

// HasLocalizedLicenseProductName returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLocalizedLicenseProductName() bool {
	if o != nil && o.LocalizedLicenseProductName.IsSet() {
		return true
	}

	return false
}

// SetLocalizedLicenseProductName gets a reference to the given NullableString and assigns it to the LocalizedLicenseProductName field.
func (o *LicenseInventoryModel) SetLocalizedLicenseProductName(v string) {
	o.LocalizedLicenseProductName.Set(&v)
}
// SetLocalizedLicenseProductNameNil sets the value for LocalizedLicenseProductName to be an explicit nil
func (o *LicenseInventoryModel) SetLocalizedLicenseProductNameNil() {
	o.LocalizedLicenseProductName.Set(nil)
}

// UnsetLocalizedLicenseProductName ensures that no value is present for LocalizedLicenseProductName, not even an explicit nil
func (o *LicenseInventoryModel) UnsetLocalizedLicenseProductName() {
	o.LocalizedLicenseProductName.Unset()
}

// GetLicenseExpirationDate returns the LicenseExpirationDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseInventoryModel) GetLicenseExpirationDate() string {
	if o == nil || IsNil(o.LicenseExpirationDate.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseExpirationDate.Get()
}

// GetLicenseExpirationDateOk returns a tuple with the LicenseExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseInventoryModel) GetLicenseExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseExpirationDate.Get(), o.LicenseExpirationDate.IsSet()
}

// HasLicenseExpirationDate returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseExpirationDate() bool {
	if o != nil && o.LicenseExpirationDate.IsSet() {
		return true
	}

	return false
}

// SetLicenseExpirationDate gets a reference to the given NullableString and assigns it to the LicenseExpirationDate field.
func (o *LicenseInventoryModel) SetLicenseExpirationDate(v string) {
	o.LicenseExpirationDate.Set(&v)
}
// SetLicenseExpirationDateNil sets the value for LicenseExpirationDate to be an explicit nil
func (o *LicenseInventoryModel) SetLicenseExpirationDateNil() {
	o.LicenseExpirationDate.Set(nil)
}

// UnsetLicenseExpirationDate ensures that no value is present for LicenseExpirationDate, not even an explicit nil
func (o *LicenseInventoryModel) UnsetLicenseExpirationDate() {
	o.LicenseExpirationDate.Unset()
}

// GetLicenseSubscriptionAdvantageDate returns the LicenseSubscriptionAdvantageDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseInventoryModel) GetLicenseSubscriptionAdvantageDate() string {
	if o == nil || IsNil(o.LicenseSubscriptionAdvantageDate.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseSubscriptionAdvantageDate.Get()
}

// GetLicenseSubscriptionAdvantageDateOk returns a tuple with the LicenseSubscriptionAdvantageDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseInventoryModel) GetLicenseSubscriptionAdvantageDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseSubscriptionAdvantageDate.Get(), o.LicenseSubscriptionAdvantageDate.IsSet()
}

// HasLicenseSubscriptionAdvantageDate returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseSubscriptionAdvantageDate() bool {
	if o != nil && o.LicenseSubscriptionAdvantageDate.IsSet() {
		return true
	}

	return false
}

// SetLicenseSubscriptionAdvantageDate gets a reference to the given NullableString and assigns it to the LicenseSubscriptionAdvantageDate field.
func (o *LicenseInventoryModel) SetLicenseSubscriptionAdvantageDate(v string) {
	o.LicenseSubscriptionAdvantageDate.Set(&v)
}
// SetLicenseSubscriptionAdvantageDateNil sets the value for LicenseSubscriptionAdvantageDate to be an explicit nil
func (o *LicenseInventoryModel) SetLicenseSubscriptionAdvantageDateNil() {
	o.LicenseSubscriptionAdvantageDate.Set(nil)
}

// UnsetLicenseSubscriptionAdvantageDate ensures that no value is present for LicenseSubscriptionAdvantageDate, not even an explicit nil
func (o *LicenseInventoryModel) UnsetLicenseSubscriptionAdvantageDate() {
	o.LicenseSubscriptionAdvantageDate.Unset()
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseInventoryModel) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType.Get()) {
		var ret string
		return ret
	}
	return *o.LicenseType.Get()
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseInventoryModel) GetLicenseTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LicenseType.Get(), o.LicenseType.IsSet()
}

// HasLicenseType returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseType() bool {
	if o != nil && o.LicenseType.IsSet() {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given NullableString and assigns it to the LicenseType field.
func (o *LicenseInventoryModel) SetLicenseType(v string) {
	o.LicenseType.Set(&v)
}
// SetLicenseTypeNil sets the value for LicenseType to be an explicit nil
func (o *LicenseInventoryModel) SetLicenseTypeNil() {
	o.LicenseType.Set(nil)
}

// UnsetLicenseType ensures that no value is present for LicenseType, not even an explicit nil
func (o *LicenseInventoryModel) UnsetLicenseType() {
	o.LicenseType.Unset()
}

// GetLicensesInUse returns the LicensesInUse field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetLicensesInUse() int32 {
	if o == nil || IsNil(o.LicensesInUse) {
		var ret int32
		return ret
	}
	return *o.LicensesInUse
}

// GetLicensesInUseOk returns a tuple with the LicensesInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetLicensesInUseOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensesInUse) {
		return nil, false
	}
	return o.LicensesInUse, true
}

// HasLicensesInUse returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicensesInUse() bool {
	if o != nil && !IsNil(o.LicensesInUse) {
		return true
	}

	return false
}

// SetLicensesInUse gets a reference to the given int32 and assigns it to the LicensesInUse field.
func (o *LicenseInventoryModel) SetLicensesInUse(v int32) {
	o.LicensesInUse = &v
}

// GetLicensesAvailable returns the LicensesAvailable field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetLicensesAvailable() int32 {
	if o == nil || IsNil(o.LicensesAvailable) {
		var ret int32
		return ret
	}
	return *o.LicensesAvailable
}

// GetLicensesAvailableOk returns a tuple with the LicensesAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetLicensesAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensesAvailable) {
		return nil, false
	}
	return o.LicensesAvailable, true
}

// HasLicensesAvailable returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicensesAvailable() bool {
	if o != nil && !IsNil(o.LicensesAvailable) {
		return true
	}

	return false
}

// SetLicensesAvailable gets a reference to the given int32 and assigns it to the LicensesAvailable field.
func (o *LicenseInventoryModel) SetLicensesAvailable(v int32) {
	o.LicensesAvailable = &v
}

// GetLicenseOverdraft returns the LicenseOverdraft field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetLicenseOverdraft() int32 {
	if o == nil || IsNil(o.LicenseOverdraft) {
		var ret int32
		return ret
	}
	return *o.LicenseOverdraft
}

// GetLicenseOverdraftOk returns a tuple with the LicenseOverdraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetLicenseOverdraftOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseOverdraft) {
		return nil, false
	}
	return o.LicenseOverdraft, true
}

// HasLicenseOverdraft returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseOverdraft() bool {
	if o != nil && !IsNil(o.LicenseOverdraft) {
		return true
	}

	return false
}

// SetLicenseOverdraft gets a reference to the given int32 and assigns it to the LicenseOverdraft field.
func (o *LicenseInventoryModel) SetLicenseOverdraft(v int32) {
	o.LicenseOverdraft = &v
}

// GetLicenseModel returns the LicenseModel field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetLicenseModel() LicenseModel {
	if o == nil || IsNil(o.LicenseModel) {
		var ret LicenseModel
		return ret
	}
	return *o.LicenseModel
}

// GetLicenseModelOk returns a tuple with the LicenseModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetLicenseModelOk() (*LicenseModel, bool) {
	if o == nil || IsNil(o.LicenseModel) {
		return nil, false
	}
	return o.LicenseModel, true
}

// HasLicenseModel returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLicenseModel() bool {
	if o != nil && !IsNil(o.LicenseModel) {
		return true
	}

	return false
}

// SetLicenseModel gets a reference to the given LicenseModel and assigns it to the LicenseModel field.
func (o *LicenseInventoryModel) SetLicenseModel(v LicenseModel) {
	o.LicenseModel = &v
}

// GetProductEdition returns the ProductEdition field value if set, zero value otherwise.
func (o *LicenseInventoryModel) GetProductEdition() ProductEdition {
	if o == nil || IsNil(o.ProductEdition) {
		var ret ProductEdition
		return ret
	}
	return *o.ProductEdition
}

// GetProductEditionOk returns a tuple with the ProductEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseInventoryModel) GetProductEditionOk() (*ProductEdition, bool) {
	if o == nil || IsNil(o.ProductEdition) {
		return nil, false
	}
	return o.ProductEdition, true
}

// HasProductEdition returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasProductEdition() bool {
	if o != nil && !IsNil(o.ProductEdition) {
		return true
	}

	return false
}

// SetProductEdition gets a reference to the given ProductEdition and assigns it to the ProductEdition field.
func (o *LicenseInventoryModel) SetProductEdition(v ProductEdition) {
	o.ProductEdition = &v
}

// GetLocalizedLicenseProductEdition returns the LocalizedLicenseProductEdition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseInventoryModel) GetLocalizedLicenseProductEdition() string {
	if o == nil || IsNil(o.LocalizedLicenseProductEdition.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedLicenseProductEdition.Get()
}

// GetLocalizedLicenseProductEditionOk returns a tuple with the LocalizedLicenseProductEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseInventoryModel) GetLocalizedLicenseProductEditionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedLicenseProductEdition.Get(), o.LocalizedLicenseProductEdition.IsSet()
}

// HasLocalizedLicenseProductEdition returns a boolean if a field has been set.
func (o *LicenseInventoryModel) HasLocalizedLicenseProductEdition() bool {
	if o != nil && o.LocalizedLicenseProductEdition.IsSet() {
		return true
	}

	return false
}

// SetLocalizedLicenseProductEdition gets a reference to the given NullableString and assigns it to the LocalizedLicenseProductEdition field.
func (o *LicenseInventoryModel) SetLocalizedLicenseProductEdition(v string) {
	o.LocalizedLicenseProductEdition.Set(&v)
}
// SetLocalizedLicenseProductEditionNil sets the value for LocalizedLicenseProductEdition to be an explicit nil
func (o *LicenseInventoryModel) SetLocalizedLicenseProductEditionNil() {
	o.LocalizedLicenseProductEdition.Set(nil)
}

// UnsetLocalizedLicenseProductEdition ensures that no value is present for LocalizedLicenseProductEdition, not even an explicit nil
func (o *LicenseInventoryModel) UnsetLocalizedLicenseProductEdition() {
	o.LocalizedLicenseProductEdition.Unset()
}

func (o LicenseInventoryModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseInventoryModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseProductName) {
		toSerialize["LicenseProductName"] = o.LicenseProductName
	}
	if o.LocalizedLicenseProductName.IsSet() {
		toSerialize["LocalizedLicenseProductName"] = o.LocalizedLicenseProductName.Get()
	}
	if o.LicenseExpirationDate.IsSet() {
		toSerialize["LicenseExpirationDate"] = o.LicenseExpirationDate.Get()
	}
	if o.LicenseSubscriptionAdvantageDate.IsSet() {
		toSerialize["LicenseSubscriptionAdvantageDate"] = o.LicenseSubscriptionAdvantageDate.Get()
	}
	if o.LicenseType.IsSet() {
		toSerialize["LicenseType"] = o.LicenseType.Get()
	}
	if !IsNil(o.LicensesInUse) {
		toSerialize["LicensesInUse"] = o.LicensesInUse
	}
	if !IsNil(o.LicensesAvailable) {
		toSerialize["LicensesAvailable"] = o.LicensesAvailable
	}
	if !IsNil(o.LicenseOverdraft) {
		toSerialize["LicenseOverdraft"] = o.LicenseOverdraft
	}
	if !IsNil(o.LicenseModel) {
		toSerialize["LicenseModel"] = o.LicenseModel
	}
	if !IsNil(o.ProductEdition) {
		toSerialize["ProductEdition"] = o.ProductEdition
	}
	if o.LocalizedLicenseProductEdition.IsSet() {
		toSerialize["LocalizedLicenseProductEdition"] = o.LocalizedLicenseProductEdition.Get()
	}
	return toSerialize, nil
}

type NullableLicenseInventoryModel struct {
	value *LicenseInventoryModel
	isSet bool
}

func (v NullableLicenseInventoryModel) Get() *LicenseInventoryModel {
	return v.value
}

func (v *NullableLicenseInventoryModel) Set(val *LicenseInventoryModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseInventoryModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseInventoryModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseInventoryModel(val *LicenseInventoryModel) *NullableLicenseInventoryModel {
	return &NullableLicenseInventoryModel{value: val, isSet: true}
}

func (v NullableLicenseInventoryModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseInventoryModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


