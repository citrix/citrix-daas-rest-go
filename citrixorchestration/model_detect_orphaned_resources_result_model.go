/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DetectOrphanedResourcesResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetectOrphanedResourcesResultModel{}

// DetectOrphanedResourcesResultModel The result of running a detect. The result is composed of a resource id, type and provisioning scheme id. 
type DetectOrphanedResourcesResultModel struct {
	// The resource id. 
	Id NullableString `json:"Id,omitempty"`
	// The type of resource. 
	Type NullableString `json:"Type,omitempty"`
	// The provisioning scheme Id. 
	ProvisioningSchemeId NullableString `json:"ProvisioningSchemeId,omitempty"`
	// The metadata of orphaned resource
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
}

// NewDetectOrphanedResourcesResultModel instantiates a new DetectOrphanedResourcesResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetectOrphanedResourcesResultModel() *DetectOrphanedResourcesResultModel {
	this := DetectOrphanedResourcesResultModel{}
	return &this
}

// NewDetectOrphanedResourcesResultModelWithDefaults instantiates a new DetectOrphanedResourcesResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetectOrphanedResourcesResultModelWithDefaults() *DetectOrphanedResourcesResultModel {
	this := DetectOrphanedResourcesResultModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetectOrphanedResourcesResultModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectOrphanedResourcesResultModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *DetectOrphanedResourcesResultModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *DetectOrphanedResourcesResultModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *DetectOrphanedResourcesResultModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *DetectOrphanedResourcesResultModel) UnsetId() {
	o.Id.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetectOrphanedResourcesResultModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectOrphanedResourcesResultModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *DetectOrphanedResourcesResultModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *DetectOrphanedResourcesResultModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *DetectOrphanedResourcesResultModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *DetectOrphanedResourcesResultModel) UnsetType() {
	o.Type.Unset()
}

// GetProvisioningSchemeId returns the ProvisioningSchemeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetectOrphanedResourcesResultModel) GetProvisioningSchemeId() string {
	if o == nil || IsNil(o.ProvisioningSchemeId.Get()) {
		var ret string
		return ret
	}
	return *o.ProvisioningSchemeId.Get()
}

// GetProvisioningSchemeIdOk returns a tuple with the ProvisioningSchemeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectOrphanedResourcesResultModel) GetProvisioningSchemeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvisioningSchemeId.Get(), o.ProvisioningSchemeId.IsSet()
}

// HasProvisioningSchemeId returns a boolean if a field has been set.
func (o *DetectOrphanedResourcesResultModel) HasProvisioningSchemeId() bool {
	if o != nil && o.ProvisioningSchemeId.IsSet() {
		return true
	}

	return false
}

// SetProvisioningSchemeId gets a reference to the given NullableString and assigns it to the ProvisioningSchemeId field.
func (o *DetectOrphanedResourcesResultModel) SetProvisioningSchemeId(v string) {
	o.ProvisioningSchemeId.Set(&v)
}
// SetProvisioningSchemeIdNil sets the value for ProvisioningSchemeId to be an explicit nil
func (o *DetectOrphanedResourcesResultModel) SetProvisioningSchemeIdNil() {
	o.ProvisioningSchemeId.Set(nil)
}

// UnsetProvisioningSchemeId ensures that no value is present for ProvisioningSchemeId, not even an explicit nil
func (o *DetectOrphanedResourcesResultModel) UnsetProvisioningSchemeId() {
	o.ProvisioningSchemeId.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetectOrphanedResourcesResultModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetectOrphanedResourcesResultModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DetectOrphanedResourcesResultModel) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *DetectOrphanedResourcesResultModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

func (o DetectOrphanedResourcesResultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetectOrphanedResourcesResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Type.IsSet() {
		toSerialize["Type"] = o.Type.Get()
	}
	if o.ProvisioningSchemeId.IsSet() {
		toSerialize["ProvisioningSchemeId"] = o.ProvisioningSchemeId.Get()
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableDetectOrphanedResourcesResultModel struct {
	value *DetectOrphanedResourcesResultModel
	isSet bool
}

func (v NullableDetectOrphanedResourcesResultModel) Get() *DetectOrphanedResourcesResultModel {
	return v.value
}

func (v *NullableDetectOrphanedResourcesResultModel) Set(val *DetectOrphanedResourcesResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDetectOrphanedResourcesResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDetectOrphanedResourcesResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetectOrphanedResourcesResultModel(val *DetectOrphanedResourcesResultModel) *NullableDetectOrphanedResourcesResultModel {
	return &NullableDetectOrphanedResourcesResultModel{value: val, isSet: true}
}

func (v NullableDetectOrphanedResourcesResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetectOrphanedResourcesResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


