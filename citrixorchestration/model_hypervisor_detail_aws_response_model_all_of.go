/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorDetailAWSResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorDetailAWSResponseModelAllOf{}

// HypervisorDetailAWSResponseModelAllOf struct for HypervisorDetailAWSResponseModelAllOf
type HypervisorDetailAWSResponseModelAllOf struct {
	// The API key used to authenticate with the AWS APIs.
	ApiKey string `json:"ApiKey"`
	// The AWS region which the hypervisor represents.
	Region string `json:"Region"`
	// AWS maximum concurrent provisioning operations.
	MaximumConcurrentProvisioningOperations *int32 `json:"MaximumConcurrentProvisioningOperations,omitempty"`
}

// NewHypervisorDetailAWSResponseModelAllOf instantiates a new HypervisorDetailAWSResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorDetailAWSResponseModelAllOf(apiKey string, region string) *HypervisorDetailAWSResponseModelAllOf {
	this := HypervisorDetailAWSResponseModelAllOf{}
	this.ApiKey = apiKey
	this.Region = region
	return &this
}

// NewHypervisorDetailAWSResponseModelAllOfWithDefaults instantiates a new HypervisorDetailAWSResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorDetailAWSResponseModelAllOfWithDefaults() *HypervisorDetailAWSResponseModelAllOf {
	this := HypervisorDetailAWSResponseModelAllOf{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *HypervisorDetailAWSResponseModelAllOf) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *HypervisorDetailAWSResponseModelAllOf) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *HypervisorDetailAWSResponseModelAllOf) SetApiKey(v string) {
	o.ApiKey = v
}

// GetRegion returns the Region field value
func (o *HypervisorDetailAWSResponseModelAllOf) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *HypervisorDetailAWSResponseModelAllOf) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *HypervisorDetailAWSResponseModelAllOf) SetRegion(v string) {
	o.Region = v
}

// GetMaximumConcurrentProvisioningOperations returns the MaximumConcurrentProvisioningOperations field value if set, zero value otherwise.
func (o *HypervisorDetailAWSResponseModelAllOf) GetMaximumConcurrentProvisioningOperations() int32 {
	if o == nil || IsNil(o.MaximumConcurrentProvisioningOperations) {
		var ret int32
		return ret
	}
	return *o.MaximumConcurrentProvisioningOperations
}

// GetMaximumConcurrentProvisioningOperationsOk returns a tuple with the MaximumConcurrentProvisioningOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorDetailAWSResponseModelAllOf) GetMaximumConcurrentProvisioningOperationsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumConcurrentProvisioningOperations) {
		return nil, false
	}
	return o.MaximumConcurrentProvisioningOperations, true
}

// HasMaximumConcurrentProvisioningOperations returns a boolean if a field has been set.
func (o *HypervisorDetailAWSResponseModelAllOf) HasMaximumConcurrentProvisioningOperations() bool {
	if o != nil && !IsNil(o.MaximumConcurrentProvisioningOperations) {
		return true
	}

	return false
}

// SetMaximumConcurrentProvisioningOperations gets a reference to the given int32 and assigns it to the MaximumConcurrentProvisioningOperations field.
func (o *HypervisorDetailAWSResponseModelAllOf) SetMaximumConcurrentProvisioningOperations(v int32) {
	o.MaximumConcurrentProvisioningOperations = &v
}

func (o HypervisorDetailAWSResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorDetailAWSResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ApiKey"] = o.ApiKey
	toSerialize["Region"] = o.Region
	if !IsNil(o.MaximumConcurrentProvisioningOperations) {
		toSerialize["MaximumConcurrentProvisioningOperations"] = o.MaximumConcurrentProvisioningOperations
	}
	return toSerialize, nil
}

type NullableHypervisorDetailAWSResponseModelAllOf struct {
	value *HypervisorDetailAWSResponseModelAllOf
	isSet bool
}

func (v NullableHypervisorDetailAWSResponseModelAllOf) Get() *HypervisorDetailAWSResponseModelAllOf {
	return v.value
}

func (v *NullableHypervisorDetailAWSResponseModelAllOf) Set(val *HypervisorDetailAWSResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorDetailAWSResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorDetailAWSResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorDetailAWSResponseModelAllOf(val *HypervisorDetailAWSResponseModelAllOf) *NullableHypervisorDetailAWSResponseModelAllOf {
	return &NullableHypervisorDetailAWSResponseModelAllOf{value: val, isSet: true}
}

func (v NullableHypervisorDetailAWSResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorDetailAWSResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


