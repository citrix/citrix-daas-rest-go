/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the MachineCatalogVusComponentResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineCatalogVusComponentResponseModel{}

// MachineCatalogVusComponentResponseModel Response model of VDA upgrade components and features related to the Machine Catalog.
type MachineCatalogVusComponentResponseModel struct {
	// Uid of the catalog.
	Uid *int32 `json:"Uid,omitempty"`
	// Id of the machine catalog.
	Id string `json:"Id"`
	// Name of the catalog.
	Name string `json:"Name"`
	// Installed VDA components of the catalog.
	InstalledComponents []VDAComponentModel `json:"InstalledComponents,omitempty"`
	// Available VDA components of the catalog.
	AvailableComponents []VDAComponentModel `json:"AvailableComponents,omitempty"`
	// Available VDA features of the catalog.
	AvailableFeatures []VDAFeatureModel `json:"AvailableFeatures,omitempty"`
}

// NewMachineCatalogVusComponentResponseModel instantiates a new MachineCatalogVusComponentResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineCatalogVusComponentResponseModel(id string, name string) *MachineCatalogVusComponentResponseModel {
	this := MachineCatalogVusComponentResponseModel{}
	this.Id = id
	this.Name = name
	return &this
}

// NewMachineCatalogVusComponentResponseModelWithDefaults instantiates a new MachineCatalogVusComponentResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineCatalogVusComponentResponseModelWithDefaults() *MachineCatalogVusComponentResponseModel {
	this := MachineCatalogVusComponentResponseModel{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *MachineCatalogVusComponentResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogVusComponentResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *MachineCatalogVusComponentResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *MachineCatalogVusComponentResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetId returns the Id field value
func (o *MachineCatalogVusComponentResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MachineCatalogVusComponentResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MachineCatalogVusComponentResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *MachineCatalogVusComponentResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MachineCatalogVusComponentResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MachineCatalogVusComponentResponseModel) SetName(v string) {
	o.Name = v
}

// GetInstalledComponents returns the InstalledComponents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogVusComponentResponseModel) GetInstalledComponents() []VDAComponentModel {
	if o == nil {
		var ret []VDAComponentModel
		return ret
	}
	return o.InstalledComponents
}

// GetInstalledComponentsOk returns a tuple with the InstalledComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogVusComponentResponseModel) GetInstalledComponentsOk() ([]VDAComponentModel, bool) {
	if o == nil || IsNil(o.InstalledComponents) {
		return nil, false
	}
	return o.InstalledComponents, true
}

// HasInstalledComponents returns a boolean if a field has been set.
func (o *MachineCatalogVusComponentResponseModel) HasInstalledComponents() bool {
	if o != nil && IsNil(o.InstalledComponents) {
		return true
	}

	return false
}

// SetInstalledComponents gets a reference to the given []VDAComponentModel and assigns it to the InstalledComponents field.
func (o *MachineCatalogVusComponentResponseModel) SetInstalledComponents(v []VDAComponentModel) {
	o.InstalledComponents = v
}

// GetAvailableComponents returns the AvailableComponents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogVusComponentResponseModel) GetAvailableComponents() []VDAComponentModel {
	if o == nil {
		var ret []VDAComponentModel
		return ret
	}
	return o.AvailableComponents
}

// GetAvailableComponentsOk returns a tuple with the AvailableComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogVusComponentResponseModel) GetAvailableComponentsOk() ([]VDAComponentModel, bool) {
	if o == nil || IsNil(o.AvailableComponents) {
		return nil, false
	}
	return o.AvailableComponents, true
}

// HasAvailableComponents returns a boolean if a field has been set.
func (o *MachineCatalogVusComponentResponseModel) HasAvailableComponents() bool {
	if o != nil && IsNil(o.AvailableComponents) {
		return true
	}

	return false
}

// SetAvailableComponents gets a reference to the given []VDAComponentModel and assigns it to the AvailableComponents field.
func (o *MachineCatalogVusComponentResponseModel) SetAvailableComponents(v []VDAComponentModel) {
	o.AvailableComponents = v
}

// GetAvailableFeatures returns the AvailableFeatures field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogVusComponentResponseModel) GetAvailableFeatures() []VDAFeatureModel {
	if o == nil {
		var ret []VDAFeatureModel
		return ret
	}
	return o.AvailableFeatures
}

// GetAvailableFeaturesOk returns a tuple with the AvailableFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogVusComponentResponseModel) GetAvailableFeaturesOk() ([]VDAFeatureModel, bool) {
	if o == nil || IsNil(o.AvailableFeatures) {
		return nil, false
	}
	return o.AvailableFeatures, true
}

// HasAvailableFeatures returns a boolean if a field has been set.
func (o *MachineCatalogVusComponentResponseModel) HasAvailableFeatures() bool {
	if o != nil && IsNil(o.AvailableFeatures) {
		return true
	}

	return false
}

// SetAvailableFeatures gets a reference to the given []VDAFeatureModel and assigns it to the AvailableFeatures field.
func (o *MachineCatalogVusComponentResponseModel) SetAvailableFeatures(v []VDAFeatureModel) {
	o.AvailableFeatures = v
}

func (o MachineCatalogVusComponentResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineCatalogVusComponentResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	if o.InstalledComponents != nil {
		toSerialize["InstalledComponents"] = o.InstalledComponents
	}
	if o.AvailableComponents != nil {
		toSerialize["AvailableComponents"] = o.AvailableComponents
	}
	if o.AvailableFeatures != nil {
		toSerialize["AvailableFeatures"] = o.AvailableFeatures
	}
	return toSerialize, nil
}

type NullableMachineCatalogVusComponentResponseModel struct {
	value *MachineCatalogVusComponentResponseModel
	isSet bool
}

func (v NullableMachineCatalogVusComponentResponseModel) Get() *MachineCatalogVusComponentResponseModel {
	return v.value
}

func (v *NullableMachineCatalogVusComponentResponseModel) Set(val *MachineCatalogVusComponentResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineCatalogVusComponentResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineCatalogVusComponentResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineCatalogVusComponentResponseModel(val *MachineCatalogVusComponentResponseModel) *NullableMachineCatalogVusComponentResponseModel {
	return &NullableMachineCatalogVusComponentResponseModel{value: val, isSet: true}
}

func (v NullableMachineCatalogVusComponentResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineCatalogVusComponentResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
