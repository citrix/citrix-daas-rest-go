/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SimulationRequestContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimulationRequestContract{}

// SimulationRequestContract Simulation request. This is basically the filter evidence.
type SimulationRequestContract struct {
	// Name of the selected computer.
	ComputerName NullableString `json:"ComputerName,omitempty"`
	// SID of the selected user.
	UserSid NullableString `json:"UserSid,omitempty"`
	// SIDs of the groups to which the user belongs.
	GroupSids []string `json:"GroupSids,omitempty"`
	// Client IP address.
	ClientIpAddress NullableString `json:"ClientIpAddress,omitempty"`
	// Client name.
	ClientName NullableString `json:"ClientName,omitempty"`
	// Client platform.
	ClientPlatform NullableString `json:"ClientPlatform,omitempty"`
	// Delivery group GUID.
	DeliveryGroupGuid *string `json:"DeliveryGroupGuid,omitempty"`
	// Delivery group type, values are members of enum DesktopKind.
	DeliveryGroupType NullableString `json:"DeliveryGroupType,omitempty"`
	// The OU the computer is in.
	ComputerOu NullableString `json:"ComputerOu,omitempty"`
	// Tags.
	Tags []string `json:"Tags,omitempty"`
	// Using Access Gateway.
	IsUsingAccessGateway *bool `json:"IsUsingAccessGateway,omitempty"`
	// Access Gateway farm.
	AccessGatewayFarm NullableString `json:"AccessGatewayFarm,omitempty"`
	// Access Gateway tags.
	AccessGatewayTags []string `json:"AccessGatewayTags,omitempty"`
	// Using WanScaler (NetScaler SD-WAN).
	IsUsingWanScaler *bool `json:"IsUsingWanScaler,omitempty"`
}

// NewSimulationRequestContract instantiates a new SimulationRequestContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimulationRequestContract() *SimulationRequestContract {
	this := SimulationRequestContract{}
	return &this
}

// NewSimulationRequestContractWithDefaults instantiates a new SimulationRequestContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimulationRequestContractWithDefaults() *SimulationRequestContract {
	this := SimulationRequestContract{}
	return &this
}

// GetComputerName returns the ComputerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetComputerName() string {
	if o == nil || IsNil(o.ComputerName.Get()) {
		var ret string
		return ret
	}
	return *o.ComputerName.Get()
}

// GetComputerNameOk returns a tuple with the ComputerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetComputerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputerName.Get(), o.ComputerName.IsSet()
}

// HasComputerName returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasComputerName() bool {
	if o != nil && o.ComputerName.IsSet() {
		return true
	}

	return false
}

// SetComputerName gets a reference to the given NullableString and assigns it to the ComputerName field.
func (o *SimulationRequestContract) SetComputerName(v string) {
	o.ComputerName.Set(&v)
}

// SetComputerNameNil sets the value for ComputerName to be an explicit nil
func (o *SimulationRequestContract) SetComputerNameNil() {
	o.ComputerName.Set(nil)
}

// UnsetComputerName ensures that no value is present for ComputerName, not even an explicit nil
func (o *SimulationRequestContract) UnsetComputerName() {
	o.ComputerName.Unset()
}

// GetUserSid returns the UserSid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetUserSid() string {
	if o == nil || IsNil(o.UserSid.Get()) {
		var ret string
		return ret
	}
	return *o.UserSid.Get()
}

// GetUserSidOk returns a tuple with the UserSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetUserSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserSid.Get(), o.UserSid.IsSet()
}

// HasUserSid returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasUserSid() bool {
	if o != nil && o.UserSid.IsSet() {
		return true
	}

	return false
}

// SetUserSid gets a reference to the given NullableString and assigns it to the UserSid field.
func (o *SimulationRequestContract) SetUserSid(v string) {
	o.UserSid.Set(&v)
}

// SetUserSidNil sets the value for UserSid to be an explicit nil
func (o *SimulationRequestContract) SetUserSidNil() {
	o.UserSid.Set(nil)
}

// UnsetUserSid ensures that no value is present for UserSid, not even an explicit nil
func (o *SimulationRequestContract) UnsetUserSid() {
	o.UserSid.Unset()
}

// GetGroupSids returns the GroupSids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetGroupSids() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.GroupSids
}

// GetGroupSidsOk returns a tuple with the GroupSids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetGroupSidsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupSids) {
		return nil, false
	}
	return o.GroupSids, true
}

// HasGroupSids returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasGroupSids() bool {
	if o != nil && !IsNil(o.GroupSids) {
		return true
	}

	return false
}

// SetGroupSids gets a reference to the given []string and assigns it to the GroupSids field.
func (o *SimulationRequestContract) SetGroupSids(v []string) {
	o.GroupSids = v
}

// GetClientIpAddress returns the ClientIpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetClientIpAddress() string {
	if o == nil || IsNil(o.ClientIpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.ClientIpAddress.Get()
}

// GetClientIpAddressOk returns a tuple with the ClientIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetClientIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientIpAddress.Get(), o.ClientIpAddress.IsSet()
}

// HasClientIpAddress returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasClientIpAddress() bool {
	if o != nil && o.ClientIpAddress.IsSet() {
		return true
	}

	return false
}

// SetClientIpAddress gets a reference to the given NullableString and assigns it to the ClientIpAddress field.
func (o *SimulationRequestContract) SetClientIpAddress(v string) {
	o.ClientIpAddress.Set(&v)
}

// SetClientIpAddressNil sets the value for ClientIpAddress to be an explicit nil
func (o *SimulationRequestContract) SetClientIpAddressNil() {
	o.ClientIpAddress.Set(nil)
}

// UnsetClientIpAddress ensures that no value is present for ClientIpAddress, not even an explicit nil
func (o *SimulationRequestContract) UnsetClientIpAddress() {
	o.ClientIpAddress.Unset()
}

// GetClientName returns the ClientName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetClientName() string {
	if o == nil || IsNil(o.ClientName.Get()) {
		var ret string
		return ret
	}
	return *o.ClientName.Get()
}

// GetClientNameOk returns a tuple with the ClientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetClientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientName.Get(), o.ClientName.IsSet()
}

// HasClientName returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasClientName() bool {
	if o != nil && o.ClientName.IsSet() {
		return true
	}

	return false
}

// SetClientName gets a reference to the given NullableString and assigns it to the ClientName field.
func (o *SimulationRequestContract) SetClientName(v string) {
	o.ClientName.Set(&v)
}

// SetClientNameNil sets the value for ClientName to be an explicit nil
func (o *SimulationRequestContract) SetClientNameNil() {
	o.ClientName.Set(nil)
}

// UnsetClientName ensures that no value is present for ClientName, not even an explicit nil
func (o *SimulationRequestContract) UnsetClientName() {
	o.ClientName.Unset()
}

// GetClientPlatform returns the ClientPlatform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetClientPlatform() string {
	if o == nil || IsNil(o.ClientPlatform.Get()) {
		var ret string
		return ret
	}
	return *o.ClientPlatform.Get()
}

// GetClientPlatformOk returns a tuple with the ClientPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetClientPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientPlatform.Get(), o.ClientPlatform.IsSet()
}

// HasClientPlatform returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasClientPlatform() bool {
	if o != nil && o.ClientPlatform.IsSet() {
		return true
	}

	return false
}

// SetClientPlatform gets a reference to the given NullableString and assigns it to the ClientPlatform field.
func (o *SimulationRequestContract) SetClientPlatform(v string) {
	o.ClientPlatform.Set(&v)
}

// SetClientPlatformNil sets the value for ClientPlatform to be an explicit nil
func (o *SimulationRequestContract) SetClientPlatformNil() {
	o.ClientPlatform.Set(nil)
}

// UnsetClientPlatform ensures that no value is present for ClientPlatform, not even an explicit nil
func (o *SimulationRequestContract) UnsetClientPlatform() {
	o.ClientPlatform.Unset()
}

// GetDeliveryGroupGuid returns the DeliveryGroupGuid field value if set, zero value otherwise.
func (o *SimulationRequestContract) GetDeliveryGroupGuid() string {
	if o == nil || IsNil(o.DeliveryGroupGuid) {
		var ret string
		return ret
	}
	return *o.DeliveryGroupGuid
}

// GetDeliveryGroupGuidOk returns a tuple with the DeliveryGroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimulationRequestContract) GetDeliveryGroupGuidOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryGroupGuid) {
		return nil, false
	}
	return o.DeliveryGroupGuid, true
}

// HasDeliveryGroupGuid returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasDeliveryGroupGuid() bool {
	if o != nil && !IsNil(o.DeliveryGroupGuid) {
		return true
	}

	return false
}

// SetDeliveryGroupGuid gets a reference to the given string and assigns it to the DeliveryGroupGuid field.
func (o *SimulationRequestContract) SetDeliveryGroupGuid(v string) {
	o.DeliveryGroupGuid = &v
}

// GetDeliveryGroupType returns the DeliveryGroupType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetDeliveryGroupType() string {
	if o == nil || IsNil(o.DeliveryGroupType.Get()) {
		var ret string
		return ret
	}
	return *o.DeliveryGroupType.Get()
}

// GetDeliveryGroupTypeOk returns a tuple with the DeliveryGroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetDeliveryGroupTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryGroupType.Get(), o.DeliveryGroupType.IsSet()
}

// HasDeliveryGroupType returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasDeliveryGroupType() bool {
	if o != nil && o.DeliveryGroupType.IsSet() {
		return true
	}

	return false
}

// SetDeliveryGroupType gets a reference to the given NullableString and assigns it to the DeliveryGroupType field.
func (o *SimulationRequestContract) SetDeliveryGroupType(v string) {
	o.DeliveryGroupType.Set(&v)
}

// SetDeliveryGroupTypeNil sets the value for DeliveryGroupType to be an explicit nil
func (o *SimulationRequestContract) SetDeliveryGroupTypeNil() {
	o.DeliveryGroupType.Set(nil)
}

// UnsetDeliveryGroupType ensures that no value is present for DeliveryGroupType, not even an explicit nil
func (o *SimulationRequestContract) UnsetDeliveryGroupType() {
	o.DeliveryGroupType.Unset()
}

// GetComputerOu returns the ComputerOu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetComputerOu() string {
	if o == nil || IsNil(o.ComputerOu.Get()) {
		var ret string
		return ret
	}
	return *o.ComputerOu.Get()
}

// GetComputerOuOk returns a tuple with the ComputerOu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetComputerOuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComputerOu.Get(), o.ComputerOu.IsSet()
}

// HasComputerOu returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasComputerOu() bool {
	if o != nil && o.ComputerOu.IsSet() {
		return true
	}

	return false
}

// SetComputerOu gets a reference to the given NullableString and assigns it to the ComputerOu field.
func (o *SimulationRequestContract) SetComputerOu(v string) {
	o.ComputerOu.Set(&v)
}

// SetComputerOuNil sets the value for ComputerOu to be an explicit nil
func (o *SimulationRequestContract) SetComputerOuNil() {
	o.ComputerOu.Set(nil)
}

// UnsetComputerOu ensures that no value is present for ComputerOu, not even an explicit nil
func (o *SimulationRequestContract) UnsetComputerOu() {
	o.ComputerOu.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SimulationRequestContract) SetTags(v []string) {
	o.Tags = v
}

// GetIsUsingAccessGateway returns the IsUsingAccessGateway field value if set, zero value otherwise.
func (o *SimulationRequestContract) GetIsUsingAccessGateway() bool {
	if o == nil || IsNil(o.IsUsingAccessGateway) {
		var ret bool
		return ret
	}
	return *o.IsUsingAccessGateway
}

// GetIsUsingAccessGatewayOk returns a tuple with the IsUsingAccessGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimulationRequestContract) GetIsUsingAccessGatewayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingAccessGateway) {
		return nil, false
	}
	return o.IsUsingAccessGateway, true
}

// HasIsUsingAccessGateway returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasIsUsingAccessGateway() bool {
	if o != nil && !IsNil(o.IsUsingAccessGateway) {
		return true
	}

	return false
}

// SetIsUsingAccessGateway gets a reference to the given bool and assigns it to the IsUsingAccessGateway field.
func (o *SimulationRequestContract) SetIsUsingAccessGateway(v bool) {
	o.IsUsingAccessGateway = &v
}

// GetAccessGatewayFarm returns the AccessGatewayFarm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetAccessGatewayFarm() string {
	if o == nil || IsNil(o.AccessGatewayFarm.Get()) {
		var ret string
		return ret
	}
	return *o.AccessGatewayFarm.Get()
}

// GetAccessGatewayFarmOk returns a tuple with the AccessGatewayFarm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetAccessGatewayFarmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessGatewayFarm.Get(), o.AccessGatewayFarm.IsSet()
}

// HasAccessGatewayFarm returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasAccessGatewayFarm() bool {
	if o != nil && o.AccessGatewayFarm.IsSet() {
		return true
	}

	return false
}

// SetAccessGatewayFarm gets a reference to the given NullableString and assigns it to the AccessGatewayFarm field.
func (o *SimulationRequestContract) SetAccessGatewayFarm(v string) {
	o.AccessGatewayFarm.Set(&v)
}

// SetAccessGatewayFarmNil sets the value for AccessGatewayFarm to be an explicit nil
func (o *SimulationRequestContract) SetAccessGatewayFarmNil() {
	o.AccessGatewayFarm.Set(nil)
}

// UnsetAccessGatewayFarm ensures that no value is present for AccessGatewayFarm, not even an explicit nil
func (o *SimulationRequestContract) UnsetAccessGatewayFarm() {
	o.AccessGatewayFarm.Unset()
}

// GetAccessGatewayTags returns the AccessGatewayTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SimulationRequestContract) GetAccessGatewayTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AccessGatewayTags
}

// GetAccessGatewayTagsOk returns a tuple with the AccessGatewayTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SimulationRequestContract) GetAccessGatewayTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccessGatewayTags) {
		return nil, false
	}
	return o.AccessGatewayTags, true
}

// HasAccessGatewayTags returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasAccessGatewayTags() bool {
	if o != nil && !IsNil(o.AccessGatewayTags) {
		return true
	}

	return false
}

// SetAccessGatewayTags gets a reference to the given []string and assigns it to the AccessGatewayTags field.
func (o *SimulationRequestContract) SetAccessGatewayTags(v []string) {
	o.AccessGatewayTags = v
}

// GetIsUsingWanScaler returns the IsUsingWanScaler field value if set, zero value otherwise.
func (o *SimulationRequestContract) GetIsUsingWanScaler() bool {
	if o == nil || IsNil(o.IsUsingWanScaler) {
		var ret bool
		return ret
	}
	return *o.IsUsingWanScaler
}

// GetIsUsingWanScalerOk returns a tuple with the IsUsingWanScaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimulationRequestContract) GetIsUsingWanScalerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingWanScaler) {
		return nil, false
	}
	return o.IsUsingWanScaler, true
}

// HasIsUsingWanScaler returns a boolean if a field has been set.
func (o *SimulationRequestContract) HasIsUsingWanScaler() bool {
	if o != nil && !IsNil(o.IsUsingWanScaler) {
		return true
	}

	return false
}

// SetIsUsingWanScaler gets a reference to the given bool and assigns it to the IsUsingWanScaler field.
func (o *SimulationRequestContract) SetIsUsingWanScaler(v bool) {
	o.IsUsingWanScaler = &v
}

func (o SimulationRequestContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimulationRequestContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ComputerName.IsSet() {
		toSerialize["ComputerName"] = o.ComputerName.Get()
	}
	if o.UserSid.IsSet() {
		toSerialize["UserSid"] = o.UserSid.Get()
	}
	if o.GroupSids != nil {
		toSerialize["GroupSids"] = o.GroupSids
	}
	if o.ClientIpAddress.IsSet() {
		toSerialize["ClientIpAddress"] = o.ClientIpAddress.Get()
	}
	if o.ClientName.IsSet() {
		toSerialize["ClientName"] = o.ClientName.Get()
	}
	if o.ClientPlatform.IsSet() {
		toSerialize["ClientPlatform"] = o.ClientPlatform.Get()
	}
	if !IsNil(o.DeliveryGroupGuid) {
		toSerialize["DeliveryGroupGuid"] = o.DeliveryGroupGuid
	}
	if o.DeliveryGroupType.IsSet() {
		toSerialize["DeliveryGroupType"] = o.DeliveryGroupType.Get()
	}
	if o.ComputerOu.IsSet() {
		toSerialize["ComputerOu"] = o.ComputerOu.Get()
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if !IsNil(o.IsUsingAccessGateway) {
		toSerialize["IsUsingAccessGateway"] = o.IsUsingAccessGateway
	}
	if o.AccessGatewayFarm.IsSet() {
		toSerialize["AccessGatewayFarm"] = o.AccessGatewayFarm.Get()
	}
	if o.AccessGatewayTags != nil {
		toSerialize["AccessGatewayTags"] = o.AccessGatewayTags
	}
	if !IsNil(o.IsUsingWanScaler) {
		toSerialize["IsUsingWanScaler"] = o.IsUsingWanScaler
	}
	return toSerialize, nil
}

type NullableSimulationRequestContract struct {
	value *SimulationRequestContract
	isSet bool
}

func (v NullableSimulationRequestContract) Get() *SimulationRequestContract {
	return v.value
}

func (v *NullableSimulationRequestContract) Set(val *SimulationRequestContract) {
	v.value = val
	v.isSet = true
}

func (v NullableSimulationRequestContract) IsSet() bool {
	return v.isSet
}

func (v *NullableSimulationRequestContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimulationRequestContract(val *SimulationRequestContract) *NullableSimulationRequestContract {
	return &NullableSimulationRequestContract{value: val, isSet: true}
}

func (v NullableSimulationRequestContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimulationRequestContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
