/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseProductEditionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseProductEditionResponseModel{}

// LicenseProductEditionResponseModel The response object of license product edition.
type LicenseProductEditionResponseModel struct {
	LicenseProduct *LicenseProduct `json:"LicenseProduct,omitempty"`
	ProductEdition *ProductEdition `json:"ProductEdition,omitempty"`
	LicenseModel *LicenseModel `json:"LicenseModel,omitempty"`
}

// NewLicenseProductEditionResponseModel instantiates a new LicenseProductEditionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseProductEditionResponseModel() *LicenseProductEditionResponseModel {
	this := LicenseProductEditionResponseModel{}
	return &this
}

// NewLicenseProductEditionResponseModelWithDefaults instantiates a new LicenseProductEditionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseProductEditionResponseModelWithDefaults() *LicenseProductEditionResponseModel {
	this := LicenseProductEditionResponseModel{}
	return &this
}

// GetLicenseProduct returns the LicenseProduct field value if set, zero value otherwise.
func (o *LicenseProductEditionResponseModel) GetLicenseProduct() LicenseProduct {
	if o == nil || IsNil(o.LicenseProduct) {
		var ret LicenseProduct
		return ret
	}
	return *o.LicenseProduct
}

// GetLicenseProductOk returns a tuple with the LicenseProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseProductEditionResponseModel) GetLicenseProductOk() (*LicenseProduct, bool) {
	if o == nil || IsNil(o.LicenseProduct) {
		return nil, false
	}
	return o.LicenseProduct, true
}

// HasLicenseProduct returns a boolean if a field has been set.
func (o *LicenseProductEditionResponseModel) HasLicenseProduct() bool {
	if o != nil && !IsNil(o.LicenseProduct) {
		return true
	}

	return false
}

// SetLicenseProduct gets a reference to the given LicenseProduct and assigns it to the LicenseProduct field.
func (o *LicenseProductEditionResponseModel) SetLicenseProduct(v LicenseProduct) {
	o.LicenseProduct = &v
}

// GetProductEdition returns the ProductEdition field value if set, zero value otherwise.
func (o *LicenseProductEditionResponseModel) GetProductEdition() ProductEdition {
	if o == nil || IsNil(o.ProductEdition) {
		var ret ProductEdition
		return ret
	}
	return *o.ProductEdition
}

// GetProductEditionOk returns a tuple with the ProductEdition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseProductEditionResponseModel) GetProductEditionOk() (*ProductEdition, bool) {
	if o == nil || IsNil(o.ProductEdition) {
		return nil, false
	}
	return o.ProductEdition, true
}

// HasProductEdition returns a boolean if a field has been set.
func (o *LicenseProductEditionResponseModel) HasProductEdition() bool {
	if o != nil && !IsNil(o.ProductEdition) {
		return true
	}

	return false
}

// SetProductEdition gets a reference to the given ProductEdition and assigns it to the ProductEdition field.
func (o *LicenseProductEditionResponseModel) SetProductEdition(v ProductEdition) {
	o.ProductEdition = &v
}

// GetLicenseModel returns the LicenseModel field value if set, zero value otherwise.
func (o *LicenseProductEditionResponseModel) GetLicenseModel() LicenseModel {
	if o == nil || IsNil(o.LicenseModel) {
		var ret LicenseModel
		return ret
	}
	return *o.LicenseModel
}

// GetLicenseModelOk returns a tuple with the LicenseModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseProductEditionResponseModel) GetLicenseModelOk() (*LicenseModel, bool) {
	if o == nil || IsNil(o.LicenseModel) {
		return nil, false
	}
	return o.LicenseModel, true
}

// HasLicenseModel returns a boolean if a field has been set.
func (o *LicenseProductEditionResponseModel) HasLicenseModel() bool {
	if o != nil && !IsNil(o.LicenseModel) {
		return true
	}

	return false
}

// SetLicenseModel gets a reference to the given LicenseModel and assigns it to the LicenseModel field.
func (o *LicenseProductEditionResponseModel) SetLicenseModel(v LicenseModel) {
	o.LicenseModel = &v
}

func (o LicenseProductEditionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseProductEditionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseProduct) {
		toSerialize["LicenseProduct"] = o.LicenseProduct
	}
	if !IsNil(o.ProductEdition) {
		toSerialize["ProductEdition"] = o.ProductEdition
	}
	if !IsNil(o.LicenseModel) {
		toSerialize["LicenseModel"] = o.LicenseModel
	}
	return toSerialize, nil
}

type NullableLicenseProductEditionResponseModel struct {
	value *LicenseProductEditionResponseModel
	isSet bool
}

func (v NullableLicenseProductEditionResponseModel) Get() *LicenseProductEditionResponseModel {
	return v.value
}

func (v *NullableLicenseProductEditionResponseModel) Set(val *LicenseProductEditionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseProductEditionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseProductEditionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseProductEditionResponseModel(val *LicenseProductEditionResponseModel) *NullableLicenseProductEditionResponseModel {
	return &NullableLicenseProductEditionResponseModel{value: val, isSet: true}
}

func (v NullableLicenseProductEditionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseProductEditionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


