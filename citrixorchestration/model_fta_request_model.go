/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the FtaRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FtaRequestModel{}

// FtaRequestModel Request object for a file-type association.
type FtaRequestModel struct {
	// Content-type.  (Mime type)  Optional.  If not specified, and an imported file type exists for the application with the same ExtensionName, this value will be retained.  Otherwise the default is an empty string.
	ContentType NullableString `json:"ContentType,omitempty"`
	// The extension name for the file type association. For example, \".txt\" or \".doc\".   Required.  When enabling a file type association for an application, the extension name must not already be enabled for the same application.  To change properties of an already-enabled file type association, disable the file type association first.
	ExtensionName string `json:"ExtensionName"`
	// The description of the handler for the file type association.   Optional.  If not specified, and an imported file type exists for the application with the same , this value will be retained.  Otherwise the default is an empty string.
	Description NullableString `json:"Description,omitempty"`
	// The name of the handler for the file type association (as seen in the Registry).   Optional.  If not specified, a handler name will be chosen automatically based on the application's . In most cases, callers should NOT override the default behavior and should not pass a value for this property.
	HandlerName NullableString `json:"HandlerName,omitempty"`
	// The arguments for the open command that the handler should use. For example, \"%1\".   Required.  When enabling a file type association for an application, the extension name must not already be enabled for the same application.  To change properties of an already-enabled file type association, you must disable the file type association first.
	OpenArguments NullableString `json:"OpenArguments,omitempty"`
}

// NewFtaRequestModel instantiates a new FtaRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFtaRequestModel(extensionName string) *FtaRequestModel {
	this := FtaRequestModel{}
	this.ExtensionName = extensionName
	return &this
}

// NewFtaRequestModelWithDefaults instantiates a new FtaRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFtaRequestModelWithDefaults() *FtaRequestModel {
	this := FtaRequestModel{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FtaRequestModel) GetContentType() string {
	if o == nil || IsNil(o.ContentType.Get()) {
		var ret string
		return ret
	}
	return *o.ContentType.Get()
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FtaRequestModel) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentType.Get(), o.ContentType.IsSet()
}

// HasContentType returns a boolean if a field has been set.
func (o *FtaRequestModel) HasContentType() bool {
	if o != nil && o.ContentType.IsSet() {
		return true
	}

	return false
}

// SetContentType gets a reference to the given NullableString and assigns it to the ContentType field.
func (o *FtaRequestModel) SetContentType(v string) {
	o.ContentType.Set(&v)
}
// SetContentTypeNil sets the value for ContentType to be an explicit nil
func (o *FtaRequestModel) SetContentTypeNil() {
	o.ContentType.Set(nil)
}

// UnsetContentType ensures that no value is present for ContentType, not even an explicit nil
func (o *FtaRequestModel) UnsetContentType() {
	o.ContentType.Unset()
}

// GetExtensionName returns the ExtensionName field value
func (o *FtaRequestModel) GetExtensionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtensionName
}

// GetExtensionNameOk returns a tuple with the ExtensionName field value
// and a boolean to check if the value has been set.
func (o *FtaRequestModel) GetExtensionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionName, true
}

// SetExtensionName sets field value
func (o *FtaRequestModel) SetExtensionName(v string) {
	o.ExtensionName = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FtaRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FtaRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *FtaRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *FtaRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *FtaRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *FtaRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetHandlerName returns the HandlerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FtaRequestModel) GetHandlerName() string {
	if o == nil || IsNil(o.HandlerName.Get()) {
		var ret string
		return ret
	}
	return *o.HandlerName.Get()
}

// GetHandlerNameOk returns a tuple with the HandlerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FtaRequestModel) GetHandlerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HandlerName.Get(), o.HandlerName.IsSet()
}

// HasHandlerName returns a boolean if a field has been set.
func (o *FtaRequestModel) HasHandlerName() bool {
	if o != nil && o.HandlerName.IsSet() {
		return true
	}

	return false
}

// SetHandlerName gets a reference to the given NullableString and assigns it to the HandlerName field.
func (o *FtaRequestModel) SetHandlerName(v string) {
	o.HandlerName.Set(&v)
}
// SetHandlerNameNil sets the value for HandlerName to be an explicit nil
func (o *FtaRequestModel) SetHandlerNameNil() {
	o.HandlerName.Set(nil)
}

// UnsetHandlerName ensures that no value is present for HandlerName, not even an explicit nil
func (o *FtaRequestModel) UnsetHandlerName() {
	o.HandlerName.Unset()
}

// GetOpenArguments returns the OpenArguments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FtaRequestModel) GetOpenArguments() string {
	if o == nil || IsNil(o.OpenArguments.Get()) {
		var ret string
		return ret
	}
	return *o.OpenArguments.Get()
}

// GetOpenArgumentsOk returns a tuple with the OpenArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FtaRequestModel) GetOpenArgumentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpenArguments.Get(), o.OpenArguments.IsSet()
}

// HasOpenArguments returns a boolean if a field has been set.
func (o *FtaRequestModel) HasOpenArguments() bool {
	if o != nil && o.OpenArguments.IsSet() {
		return true
	}

	return false
}

// SetOpenArguments gets a reference to the given NullableString and assigns it to the OpenArguments field.
func (o *FtaRequestModel) SetOpenArguments(v string) {
	o.OpenArguments.Set(&v)
}
// SetOpenArgumentsNil sets the value for OpenArguments to be an explicit nil
func (o *FtaRequestModel) SetOpenArgumentsNil() {
	o.OpenArguments.Set(nil)
}

// UnsetOpenArguments ensures that no value is present for OpenArguments, not even an explicit nil
func (o *FtaRequestModel) UnsetOpenArguments() {
	o.OpenArguments.Unset()
}

func (o FtaRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FtaRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentType.IsSet() {
		toSerialize["ContentType"] = o.ContentType.Get()
	}
	toSerialize["ExtensionName"] = o.ExtensionName
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.HandlerName.IsSet() {
		toSerialize["HandlerName"] = o.HandlerName.Get()
	}
	if o.OpenArguments.IsSet() {
		toSerialize["OpenArguments"] = o.OpenArguments.Get()
	}
	return toSerialize, nil
}

type NullableFtaRequestModel struct {
	value *FtaRequestModel
	isSet bool
}

func (v NullableFtaRequestModel) Get() *FtaRequestModel {
	return v.value
}

func (v *NullableFtaRequestModel) Set(val *FtaRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFtaRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFtaRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFtaRequestModel(val *FtaRequestModel) *NullableFtaRequestModel {
	return &NullableFtaRequestModel{value: val, isSet: true}
}

func (v NullableFtaRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFtaRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


