/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the GpoTestFilterData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GpoTestFilterData{}

// GpoTestFilterData Data for a filter whose value may have an error.
type GpoTestFilterData struct {
	// Error code.
	ErrorCode NullableString `json:"errorCode,omitempty"`
	// Additional error message about the filter value.
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	// The filter type.
	FilterType NullableString `json:"filterType,omitempty"`
	// The filter value.
	FilterValue NullableString `json:"filterValue,omitempty"`
}

// NewGpoTestFilterData instantiates a new GpoTestFilterData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpoTestFilterData() *GpoTestFilterData {
	this := GpoTestFilterData{}
	return &this
}

// NewGpoTestFilterDataWithDefaults instantiates a new GpoTestFilterData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpoTestFilterDataWithDefaults() *GpoTestFilterData {
	this := GpoTestFilterData{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestFilterData) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestFilterData) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GpoTestFilterData) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *GpoTestFilterData) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}

// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *GpoTestFilterData) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *GpoTestFilterData) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestFilterData) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestFilterData) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *GpoTestFilterData) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *GpoTestFilterData) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}

// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *GpoTestFilterData) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *GpoTestFilterData) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetFilterType returns the FilterType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestFilterData) GetFilterType() string {
	if o == nil || IsNil(o.FilterType.Get()) {
		var ret string
		return ret
	}
	return *o.FilterType.Get()
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestFilterData) GetFilterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterType.Get(), o.FilterType.IsSet()
}

// HasFilterType returns a boolean if a field has been set.
func (o *GpoTestFilterData) HasFilterType() bool {
	if o != nil && o.FilterType.IsSet() {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given NullableString and assigns it to the FilterType field.
func (o *GpoTestFilterData) SetFilterType(v string) {
	o.FilterType.Set(&v)
}

// SetFilterTypeNil sets the value for FilterType to be an explicit nil
func (o *GpoTestFilterData) SetFilterTypeNil() {
	o.FilterType.Set(nil)
}

// UnsetFilterType ensures that no value is present for FilterType, not even an explicit nil
func (o *GpoTestFilterData) UnsetFilterType() {
	o.FilterType.Unset()
}

// GetFilterValue returns the FilterValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestFilterData) GetFilterValue() string {
	if o == nil || IsNil(o.FilterValue.Get()) {
		var ret string
		return ret
	}
	return *o.FilterValue.Get()
}

// GetFilterValueOk returns a tuple with the FilterValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestFilterData) GetFilterValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FilterValue.Get(), o.FilterValue.IsSet()
}

// HasFilterValue returns a boolean if a field has been set.
func (o *GpoTestFilterData) HasFilterValue() bool {
	if o != nil && o.FilterValue.IsSet() {
		return true
	}

	return false
}

// SetFilterValue gets a reference to the given NullableString and assigns it to the FilterValue field.
func (o *GpoTestFilterData) SetFilterValue(v string) {
	o.FilterValue.Set(&v)
}

// SetFilterValueNil sets the value for FilterValue to be an explicit nil
func (o *GpoTestFilterData) SetFilterValueNil() {
	o.FilterValue.Set(nil)
}

// UnsetFilterValue ensures that no value is present for FilterValue, not even an explicit nil
func (o *GpoTestFilterData) UnsetFilterValue() {
	o.FilterValue.Unset()
}

func (o GpoTestFilterData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GpoTestFilterData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode.IsSet() {
		toSerialize["errorCode"] = o.ErrorCode.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.FilterType.IsSet() {
		toSerialize["filterType"] = o.FilterType.Get()
	}
	if o.FilterValue.IsSet() {
		toSerialize["filterValue"] = o.FilterValue.Get()
	}
	return toSerialize, nil
}

type NullableGpoTestFilterData struct {
	value *GpoTestFilterData
	isSet bool
}

func (v NullableGpoTestFilterData) Get() *GpoTestFilterData {
	return v.value
}

func (v *NullableGpoTestFilterData) Set(val *GpoTestFilterData) {
	v.value = val
	v.isSet = true
}

func (v NullableGpoTestFilterData) IsSet() bool {
	return v.isSet
}

func (v *NullableGpoTestFilterData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpoTestFilterData(val *GpoTestFilterData) *NullableGpoTestFilterData {
	return &NullableGpoTestFilterData{value: val, isSet: true}
}

func (v NullableGpoTestFilterData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpoTestFilterData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
