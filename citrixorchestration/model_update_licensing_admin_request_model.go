/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the UpdateLicensingAdminRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLicensingAdminRequestModel{}

// UpdateLicensingAdminRequestModel Request object for creation of licensing admin.
type UpdateLicensingAdminRequestModel struct {
	Permissions *LicensingPermissionLevel `json:"Permissions,omitempty"`
}

// NewUpdateLicensingAdminRequestModel instantiates a new UpdateLicensingAdminRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLicensingAdminRequestModel() *UpdateLicensingAdminRequestModel {
	this := UpdateLicensingAdminRequestModel{}
	return &this
}

// NewUpdateLicensingAdminRequestModelWithDefaults instantiates a new UpdateLicensingAdminRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLicensingAdminRequestModelWithDefaults() *UpdateLicensingAdminRequestModel {
	this := UpdateLicensingAdminRequestModel{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *UpdateLicensingAdminRequestModel) GetPermissions() LicensingPermissionLevel {
	if o == nil || IsNil(o.Permissions) {
		var ret LicensingPermissionLevel
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLicensingAdminRequestModel) GetPermissionsOk() (*LicensingPermissionLevel, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *UpdateLicensingAdminRequestModel) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given LicensingPermissionLevel and assigns it to the Permissions field.
func (o *UpdateLicensingAdminRequestModel) SetPermissions(v LicensingPermissionLevel) {
	o.Permissions = &v
}

func (o UpdateLicensingAdminRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLicensingAdminRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["Permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableUpdateLicensingAdminRequestModel struct {
	value *UpdateLicensingAdminRequestModel
	isSet bool
}

func (v NullableUpdateLicensingAdminRequestModel) Get() *UpdateLicensingAdminRequestModel {
	return v.value
}

func (v *NullableUpdateLicensingAdminRequestModel) Set(val *UpdateLicensingAdminRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLicensingAdminRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLicensingAdminRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLicensingAdminRequestModel(val *UpdateLicensingAdminRequestModel) *NullableUpdateLicensingAdminRequestModel {
	return &NullableUpdateLicensingAdminRequestModel{value: val, isSet: true}
}

func (v NullableUpdateLicensingAdminRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLicensingAdminRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


