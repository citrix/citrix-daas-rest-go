/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// ListSortDirection Direction to sort the results.
type ListSortDirection string

// List of ListSortDirection
const (
	LISTSORTDIRECTION_ASCENDING ListSortDirection = "Ascending"
	LISTSORTDIRECTION_DESCENDING ListSortDirection = "Descending"
)

// All allowed values of ListSortDirection enum
var AllowedListSortDirectionEnumValues = []ListSortDirection{
	"Ascending",
	"Descending",
}

func (v *ListSortDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ListSortDirection(value)
	for _, existing := range AllowedListSortDirectionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ListSortDirection", value)
}

// NewListSortDirectionFromValue returns a pointer to a valid ListSortDirection
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewListSortDirectionFromValue(v string) (*ListSortDirection, error) {
	ev := ListSortDirection(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ListSortDirection: valid values are %v", v, AllowedListSortDirectionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ListSortDirection) IsValid() bool {
	for _, existing := range AllowedListSortDirectionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ListSortDirection value
func (v ListSortDirection) Ptr() *ListSortDirection {
	return &v
}

type NullableListSortDirection struct {
	value *ListSortDirection
	isSet bool
}

func (v NullableListSortDirection) Get() *ListSortDirection {
	return v.value
}

func (v *NullableListSortDirection) Set(val *ListSortDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableListSortDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableListSortDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSortDirection(val *ListSortDirection) *NullableListSortDirection {
	return &NullableListSortDirection{value: val, isSet: true}
}

func (v NullableListSortDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSortDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

