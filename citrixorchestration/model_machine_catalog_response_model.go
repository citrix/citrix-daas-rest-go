/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the MachineCatalogResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineCatalogResponseModel{}

// MachineCatalogResponseModel Default response field (Only return the fields specified there if supported in  API ): Name,FullName,Id,Uid,AllocationType,Description,IsPowerManaged,IsRemotePC,MachineType,MinimumFunctionalLevel,HasBeenPromoted,HasBeenPromotedFrom,PersistChanges,ProvisioningType,SessionSupport,SharingKind,Zone,AdminFolder.               Response object for machine catalog.              
type MachineCatalogResponseModel struct {
	// Simple administrative name of catalog within parent admin folder (if any). This property is not guaranteed unique across all catalogs.
	Name NullableString `json:"Name,omitempty"`
	// Unique administrative name of catalog.
	FullName NullableString `json:"FullName,omitempty"`
	// Id of the machine catalog.
	Id NullableString `json:"Id,omitempty"`
	// `DEPRECATED.  Use <see cref='Id'/>.` DEPRECATED.  Use Id.
	// Deprecated
	Uid *int32 `json:"Uid,omitempty"`
	AllocationType *AllocationType `json:"AllocationType,omitempty"`
	// The number of assigned machines (machines that have been assigned to a user/users or a client name/address).
	AssignedCount NullableInt32 `json:"AssignedCount,omitempty"`
	// The number of available machines (not in a delivery group), that are also assigned to users.
	AvailableAssignedCount NullableInt32 `json:"AvailableAssignedCount,omitempty"`
	// The number of available machines (those not in any delivery group).
	AvailableCount *int32 `json:"AvailableCount,omitempty"`
	// The number of available machines (those not in any delivery group) that are not assigned to users.
	AvailableUnassignedCount NullableInt32 `json:"AvailableUnassignedCount,omitempty"`
	// Description of the machine catalog.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether the machines in the catalog are power-managed.
	IsPowerManaged *bool `json:"IsPowerManaged,omitempty"`
	// Indicates whether or not the catalog is a RemotePC catalog. Remote PC catalogs automatically configure appropriate machines without the need for manual configuration. CHANGE: was public bool RemotePC { get; set; }
	IsRemotePC *bool `json:"IsRemotePC,omitempty"`
	// List of jobs currently in progress that affect the machine catalog.
	JobsInProgress []RefResponseModel `json:"JobsInProgress,omitempty"`
	MachineType *MachineType `json:"MachineType,omitempty"`
	// The metadata of machine catalog.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	MinimumFunctionalLevel *FunctionalLevel `json:"MinimumFunctionalLevel,omitempty"`
	// Whether the machine catalog was previously promoted from a lower MinimumFunctionalLevel.
	HasBeenPromoted *bool `json:"HasBeenPromoted,omitempty"`
	HasBeenPromotedFrom *FunctionalLevel `json:"HasBeenPromotedFrom,omitempty"`
	// Whether the machine catalog can roll back VM image.
	CanRollbackVMImage *bool `json:"CanRollbackVMImage,omitempty"`
	// Whether the machine catalog can recreate.
	CanRecreateCatalog *bool `json:"CanRecreateCatalog,omitempty"`
	PersistChanges *PersistChanges `json:"PersistChanges,omitempty"`
	ProvisioningScheme *ProvisioningSchemeResponseModel `json:"ProvisioningScheme,omitempty"`
	ProvisioningType *ProvisioningType `json:"ProvisioningType,omitempty"`
	ProvisioningProgress *ProvisioningProgressResponseModel `json:"ProvisioningProgress,omitempty"`
	// IP address of the PVS server to be used. This only applies if the ProvisioningType is .
	PvsAddress NullableString `json:"PvsAddress,omitempty"`
	// The domain of the PVS server to be used.
	PvsDomain NullableString `json:"PvsDomain,omitempty"`
	// List of one or more remote PC enrollment scopes.
	RemotePCEnrollmentScopes []RemotePCEnrollmentScopeResponseModel `json:"RemotePCEnrollmentScopes,omitempty"`
	// Administrative scopes which the machine catalog is part of.
	Scopes []ScopeResponseModel `json:"Scopes,omitempty"`
	// The tenant(s) that the machine catalog is assigned to.  If `null`, the machine catalog is not assigned to tenants, and may be used by any tenant, including future added tenants.
	Tenants []RefResponseModel `json:"Tenants,omitempty"`
	SessionSupport *SessionSupport `json:"SessionSupport,omitempty"`
	SharingKind *SharingKind `json:"SharingKind,omitempty"`
	// The total number of machines in the catalog.
	TotalCount *int32 `json:"TotalCount,omitempty"`
	// Whether the machine catalog is currently in a \"Broken\" state.
	IsBroken *bool `json:"IsBroken,omitempty"`
	// Whether the machine catalog is associated with a master image.
	IsMasterImageAssociated NullableBool `json:"IsMasterImageAssociated,omitempty"`
	ImageUpdateStatus *ImageUpdateStatus `json:"ImageUpdateStatus,omitempty"`
	// Gets the Errors of machines in this catalog
	Errors []string `json:"Errors,omitempty"`
	// List of warnings that are currently active on the machine catalog, if any.  If there are no warnings this will not be specified.
	Warnings []MachineCatalogWarningResponseModel `json:"Warnings,omitempty"`
	// The number of unassigned machines (machines not assigned to users).
	UnassignedCount *int32 `json:"UnassignedCount,omitempty"`
	// The number of machines in the catalog that are in a delivery group.
	UsedCount *int32 `json:"UsedCount,omitempty"`
	// The number of available suspend-capable machines (those not in any delivery group).
	AvailableCountOfSuspend NullableInt32 `json:"AvailableCountOfSuspend,omitempty"`
	// The number of available suspend-capable machines (not in a delivery group), that are also assigned to users.
	AvailableAssignedCountOfSuspend NullableInt32 `json:"AvailableAssignedCountOfSuspend,omitempty"`
	UpgradeInfo *MachineCatalogUpgradeInfo `json:"UpgradeInfo,omitempty"`
	Zone *RefResponseModel `json:"Zone,omitempty"`
	AdminFolder *RefResponseModel `json:"AdminFolder,omitempty"`
}

// NewMachineCatalogResponseModel instantiates a new MachineCatalogResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineCatalogResponseModel() *MachineCatalogResponseModel {
	this := MachineCatalogResponseModel{}
	return &this
}

// NewMachineCatalogResponseModelWithDefaults instantiates a new MachineCatalogResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineCatalogResponseModelWithDefaults() *MachineCatalogResponseModel {
	this := MachineCatalogResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *MachineCatalogResponseModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *MachineCatalogResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetFullName returns the FullName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetFullName() string {
	if o == nil || IsNil(o.FullName.Get()) {
		var ret string
		return ret
	}
	return *o.FullName.Get()
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName.Get(), o.FullName.IsSet()
}

// HasFullName returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasFullName() bool {
	if o != nil && o.FullName.IsSet() {
		return true
	}

	return false
}

// SetFullName gets a reference to the given NullableString and assigns it to the FullName field.
func (o *MachineCatalogResponseModel) SetFullName(v string) {
	o.FullName.Set(&v)
}
// SetFullNameNil sets the value for FullName to be an explicit nil
func (o *MachineCatalogResponseModel) SetFullNameNil() {
	o.FullName.Set(nil)
}

// UnsetFullName ensures that no value is present for FullName, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetFullName() {
	o.FullName.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MachineCatalogResponseModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MachineCatalogResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetUid returns the Uid field value if set, zero value otherwise.
// Deprecated
func (o *MachineCatalogResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *MachineCatalogResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
// Deprecated
func (o *MachineCatalogResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetAllocationType returns the AllocationType field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetAllocationType() AllocationType {
	if o == nil || IsNil(o.AllocationType) {
		var ret AllocationType
		return ret
	}
	return *o.AllocationType
}

// GetAllocationTypeOk returns a tuple with the AllocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetAllocationTypeOk() (*AllocationType, bool) {
	if o == nil || IsNil(o.AllocationType) {
		return nil, false
	}
	return o.AllocationType, true
}

// HasAllocationType returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAllocationType() bool {
	if o != nil && !IsNil(o.AllocationType) {
		return true
	}

	return false
}

// SetAllocationType gets a reference to the given AllocationType and assigns it to the AllocationType field.
func (o *MachineCatalogResponseModel) SetAllocationType(v AllocationType) {
	o.AllocationType = &v
}

// GetAssignedCount returns the AssignedCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetAssignedCount() int32 {
	if o == nil || IsNil(o.AssignedCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AssignedCount.Get()
}

// GetAssignedCountOk returns a tuple with the AssignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetAssignedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssignedCount.Get(), o.AssignedCount.IsSet()
}

// HasAssignedCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAssignedCount() bool {
	if o != nil && o.AssignedCount.IsSet() {
		return true
	}

	return false
}

// SetAssignedCount gets a reference to the given NullableInt32 and assigns it to the AssignedCount field.
func (o *MachineCatalogResponseModel) SetAssignedCount(v int32) {
	o.AssignedCount.Set(&v)
}
// SetAssignedCountNil sets the value for AssignedCount to be an explicit nil
func (o *MachineCatalogResponseModel) SetAssignedCountNil() {
	o.AssignedCount.Set(nil)
}

// UnsetAssignedCount ensures that no value is present for AssignedCount, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetAssignedCount() {
	o.AssignedCount.Unset()
}

// GetAvailableAssignedCount returns the AvailableAssignedCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetAvailableAssignedCount() int32 {
	if o == nil || IsNil(o.AvailableAssignedCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AvailableAssignedCount.Get()
}

// GetAvailableAssignedCountOk returns a tuple with the AvailableAssignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetAvailableAssignedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailableAssignedCount.Get(), o.AvailableAssignedCount.IsSet()
}

// HasAvailableAssignedCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAvailableAssignedCount() bool {
	if o != nil && o.AvailableAssignedCount.IsSet() {
		return true
	}

	return false
}

// SetAvailableAssignedCount gets a reference to the given NullableInt32 and assigns it to the AvailableAssignedCount field.
func (o *MachineCatalogResponseModel) SetAvailableAssignedCount(v int32) {
	o.AvailableAssignedCount.Set(&v)
}
// SetAvailableAssignedCountNil sets the value for AvailableAssignedCount to be an explicit nil
func (o *MachineCatalogResponseModel) SetAvailableAssignedCountNil() {
	o.AvailableAssignedCount.Set(nil)
}

// UnsetAvailableAssignedCount ensures that no value is present for AvailableAssignedCount, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetAvailableAssignedCount() {
	o.AvailableAssignedCount.Unset()
}

// GetAvailableCount returns the AvailableCount field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetAvailableCount() int32 {
	if o == nil || IsNil(o.AvailableCount) {
		var ret int32
		return ret
	}
	return *o.AvailableCount
}

// GetAvailableCountOk returns a tuple with the AvailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetAvailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableCount) {
		return nil, false
	}
	return o.AvailableCount, true
}

// HasAvailableCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAvailableCount() bool {
	if o != nil && !IsNil(o.AvailableCount) {
		return true
	}

	return false
}

// SetAvailableCount gets a reference to the given int32 and assigns it to the AvailableCount field.
func (o *MachineCatalogResponseModel) SetAvailableCount(v int32) {
	o.AvailableCount = &v
}

// GetAvailableUnassignedCount returns the AvailableUnassignedCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetAvailableUnassignedCount() int32 {
	if o == nil || IsNil(o.AvailableUnassignedCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AvailableUnassignedCount.Get()
}

// GetAvailableUnassignedCountOk returns a tuple with the AvailableUnassignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetAvailableUnassignedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailableUnassignedCount.Get(), o.AvailableUnassignedCount.IsSet()
}

// HasAvailableUnassignedCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAvailableUnassignedCount() bool {
	if o != nil && o.AvailableUnassignedCount.IsSet() {
		return true
	}

	return false
}

// SetAvailableUnassignedCount gets a reference to the given NullableInt32 and assigns it to the AvailableUnassignedCount field.
func (o *MachineCatalogResponseModel) SetAvailableUnassignedCount(v int32) {
	o.AvailableUnassignedCount.Set(&v)
}
// SetAvailableUnassignedCountNil sets the value for AvailableUnassignedCount to be an explicit nil
func (o *MachineCatalogResponseModel) SetAvailableUnassignedCountNil() {
	o.AvailableUnassignedCount.Set(nil)
}

// UnsetAvailableUnassignedCount ensures that no value is present for AvailableUnassignedCount, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetAvailableUnassignedCount() {
	o.AvailableUnassignedCount.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MachineCatalogResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MachineCatalogResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsPowerManaged returns the IsPowerManaged field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetIsPowerManaged() bool {
	if o == nil || IsNil(o.IsPowerManaged) {
		var ret bool
		return ret
	}
	return *o.IsPowerManaged
}

// GetIsPowerManagedOk returns a tuple with the IsPowerManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetIsPowerManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPowerManaged) {
		return nil, false
	}
	return o.IsPowerManaged, true
}

// HasIsPowerManaged returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasIsPowerManaged() bool {
	if o != nil && !IsNil(o.IsPowerManaged) {
		return true
	}

	return false
}

// SetIsPowerManaged gets a reference to the given bool and assigns it to the IsPowerManaged field.
func (o *MachineCatalogResponseModel) SetIsPowerManaged(v bool) {
	o.IsPowerManaged = &v
}

// GetIsRemotePC returns the IsRemotePC field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetIsRemotePC() bool {
	if o == nil || IsNil(o.IsRemotePC) {
		var ret bool
		return ret
	}
	return *o.IsRemotePC
}

// GetIsRemotePCOk returns a tuple with the IsRemotePC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetIsRemotePCOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemotePC) {
		return nil, false
	}
	return o.IsRemotePC, true
}

// HasIsRemotePC returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasIsRemotePC() bool {
	if o != nil && !IsNil(o.IsRemotePC) {
		return true
	}

	return false
}

// SetIsRemotePC gets a reference to the given bool and assigns it to the IsRemotePC field.
func (o *MachineCatalogResponseModel) SetIsRemotePC(v bool) {
	o.IsRemotePC = &v
}

// GetJobsInProgress returns the JobsInProgress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetJobsInProgress() []RefResponseModel {
	if o == nil {
		var ret []RefResponseModel
		return ret
	}
	return o.JobsInProgress
}

// GetJobsInProgressOk returns a tuple with the JobsInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetJobsInProgressOk() ([]RefResponseModel, bool) {
	if o == nil || IsNil(o.JobsInProgress) {
		return nil, false
	}
	return o.JobsInProgress, true
}

// HasJobsInProgress returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasJobsInProgress() bool {
	if o != nil && IsNil(o.JobsInProgress) {
		return true
	}

	return false
}

// SetJobsInProgress gets a reference to the given []RefResponseModel and assigns it to the JobsInProgress field.
func (o *MachineCatalogResponseModel) SetJobsInProgress(v []RefResponseModel) {
	o.JobsInProgress = v
}

// GetMachineType returns the MachineType field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetMachineType() MachineType {
	if o == nil || IsNil(o.MachineType) {
		var ret MachineType
		return ret
	}
	return *o.MachineType
}

// GetMachineTypeOk returns a tuple with the MachineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetMachineTypeOk() (*MachineType, bool) {
	if o == nil || IsNil(o.MachineType) {
		return nil, false
	}
	return o.MachineType, true
}

// HasMachineType returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasMachineType() bool {
	if o != nil && !IsNil(o.MachineType) {
		return true
	}

	return false
}

// SetMachineType gets a reference to the given MachineType and assigns it to the MachineType field.
func (o *MachineCatalogResponseModel) SetMachineType(v MachineType) {
	o.MachineType = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasMetadata() bool {
	if o != nil && IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *MachineCatalogResponseModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetMinimumFunctionalLevel returns the MinimumFunctionalLevel field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetMinimumFunctionalLevel() FunctionalLevel {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		var ret FunctionalLevel
		return ret
	}
	return *o.MinimumFunctionalLevel
}

// GetMinimumFunctionalLevelOk returns a tuple with the MinimumFunctionalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetMinimumFunctionalLevelOk() (*FunctionalLevel, bool) {
	if o == nil || IsNil(o.MinimumFunctionalLevel) {
		return nil, false
	}
	return o.MinimumFunctionalLevel, true
}

// HasMinimumFunctionalLevel returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasMinimumFunctionalLevel() bool {
	if o != nil && !IsNil(o.MinimumFunctionalLevel) {
		return true
	}

	return false
}

// SetMinimumFunctionalLevel gets a reference to the given FunctionalLevel and assigns it to the MinimumFunctionalLevel field.
func (o *MachineCatalogResponseModel) SetMinimumFunctionalLevel(v FunctionalLevel) {
	o.MinimumFunctionalLevel = &v
}

// GetHasBeenPromoted returns the HasBeenPromoted field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetHasBeenPromoted() bool {
	if o == nil || IsNil(o.HasBeenPromoted) {
		var ret bool
		return ret
	}
	return *o.HasBeenPromoted
}

// GetHasBeenPromotedOk returns a tuple with the HasBeenPromoted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetHasBeenPromotedOk() (*bool, bool) {
	if o == nil || IsNil(o.HasBeenPromoted) {
		return nil, false
	}
	return o.HasBeenPromoted, true
}

// HasHasBeenPromoted returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasHasBeenPromoted() bool {
	if o != nil && !IsNil(o.HasBeenPromoted) {
		return true
	}

	return false
}

// SetHasBeenPromoted gets a reference to the given bool and assigns it to the HasBeenPromoted field.
func (o *MachineCatalogResponseModel) SetHasBeenPromoted(v bool) {
	o.HasBeenPromoted = &v
}

// GetHasBeenPromotedFrom returns the HasBeenPromotedFrom field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetHasBeenPromotedFrom() FunctionalLevel {
	if o == nil || IsNil(o.HasBeenPromotedFrom) {
		var ret FunctionalLevel
		return ret
	}
	return *o.HasBeenPromotedFrom
}

// GetHasBeenPromotedFromOk returns a tuple with the HasBeenPromotedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetHasBeenPromotedFromOk() (*FunctionalLevel, bool) {
	if o == nil || IsNil(o.HasBeenPromotedFrom) {
		return nil, false
	}
	return o.HasBeenPromotedFrom, true
}

// HasHasBeenPromotedFrom returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasHasBeenPromotedFrom() bool {
	if o != nil && !IsNil(o.HasBeenPromotedFrom) {
		return true
	}

	return false
}

// SetHasBeenPromotedFrom gets a reference to the given FunctionalLevel and assigns it to the HasBeenPromotedFrom field.
func (o *MachineCatalogResponseModel) SetHasBeenPromotedFrom(v FunctionalLevel) {
	o.HasBeenPromotedFrom = &v
}

// GetCanRollbackVMImage returns the CanRollbackVMImage field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetCanRollbackVMImage() bool {
	if o == nil || IsNil(o.CanRollbackVMImage) {
		var ret bool
		return ret
	}
	return *o.CanRollbackVMImage
}

// GetCanRollbackVMImageOk returns a tuple with the CanRollbackVMImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetCanRollbackVMImageOk() (*bool, bool) {
	if o == nil || IsNil(o.CanRollbackVMImage) {
		return nil, false
	}
	return o.CanRollbackVMImage, true
}

// HasCanRollbackVMImage returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasCanRollbackVMImage() bool {
	if o != nil && !IsNil(o.CanRollbackVMImage) {
		return true
	}

	return false
}

// SetCanRollbackVMImage gets a reference to the given bool and assigns it to the CanRollbackVMImage field.
func (o *MachineCatalogResponseModel) SetCanRollbackVMImage(v bool) {
	o.CanRollbackVMImage = &v
}

// GetCanRecreateCatalog returns the CanRecreateCatalog field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetCanRecreateCatalog() bool {
	if o == nil || IsNil(o.CanRecreateCatalog) {
		var ret bool
		return ret
	}
	return *o.CanRecreateCatalog
}

// GetCanRecreateCatalogOk returns a tuple with the CanRecreateCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetCanRecreateCatalogOk() (*bool, bool) {
	if o == nil || IsNil(o.CanRecreateCatalog) {
		return nil, false
	}
	return o.CanRecreateCatalog, true
}

// HasCanRecreateCatalog returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasCanRecreateCatalog() bool {
	if o != nil && !IsNil(o.CanRecreateCatalog) {
		return true
	}

	return false
}

// SetCanRecreateCatalog gets a reference to the given bool and assigns it to the CanRecreateCatalog field.
func (o *MachineCatalogResponseModel) SetCanRecreateCatalog(v bool) {
	o.CanRecreateCatalog = &v
}

// GetPersistChanges returns the PersistChanges field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetPersistChanges() PersistChanges {
	if o == nil || IsNil(o.PersistChanges) {
		var ret PersistChanges
		return ret
	}
	return *o.PersistChanges
}

// GetPersistChangesOk returns a tuple with the PersistChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetPersistChangesOk() (*PersistChanges, bool) {
	if o == nil || IsNil(o.PersistChanges) {
		return nil, false
	}
	return o.PersistChanges, true
}

// HasPersistChanges returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasPersistChanges() bool {
	if o != nil && !IsNil(o.PersistChanges) {
		return true
	}

	return false
}

// SetPersistChanges gets a reference to the given PersistChanges and assigns it to the PersistChanges field.
func (o *MachineCatalogResponseModel) SetPersistChanges(v PersistChanges) {
	o.PersistChanges = &v
}

// GetProvisioningScheme returns the ProvisioningScheme field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetProvisioningScheme() ProvisioningSchemeResponseModel {
	if o == nil || IsNil(o.ProvisioningScheme) {
		var ret ProvisioningSchemeResponseModel
		return ret
	}
	return *o.ProvisioningScheme
}

// GetProvisioningSchemeOk returns a tuple with the ProvisioningScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetProvisioningSchemeOk() (*ProvisioningSchemeResponseModel, bool) {
	if o == nil || IsNil(o.ProvisioningScheme) {
		return nil, false
	}
	return o.ProvisioningScheme, true
}

// HasProvisioningScheme returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasProvisioningScheme() bool {
	if o != nil && !IsNil(o.ProvisioningScheme) {
		return true
	}

	return false
}

// SetProvisioningScheme gets a reference to the given ProvisioningSchemeResponseModel and assigns it to the ProvisioningScheme field.
func (o *MachineCatalogResponseModel) SetProvisioningScheme(v ProvisioningSchemeResponseModel) {
	o.ProvisioningScheme = &v
}

// GetProvisioningType returns the ProvisioningType field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetProvisioningType() ProvisioningType {
	if o == nil || IsNil(o.ProvisioningType) {
		var ret ProvisioningType
		return ret
	}
	return *o.ProvisioningType
}

// GetProvisioningTypeOk returns a tuple with the ProvisioningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetProvisioningTypeOk() (*ProvisioningType, bool) {
	if o == nil || IsNil(o.ProvisioningType) {
		return nil, false
	}
	return o.ProvisioningType, true
}

// HasProvisioningType returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasProvisioningType() bool {
	if o != nil && !IsNil(o.ProvisioningType) {
		return true
	}

	return false
}

// SetProvisioningType gets a reference to the given ProvisioningType and assigns it to the ProvisioningType field.
func (o *MachineCatalogResponseModel) SetProvisioningType(v ProvisioningType) {
	o.ProvisioningType = &v
}

// GetProvisioningProgress returns the ProvisioningProgress field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetProvisioningProgress() ProvisioningProgressResponseModel {
	if o == nil || IsNil(o.ProvisioningProgress) {
		var ret ProvisioningProgressResponseModel
		return ret
	}
	return *o.ProvisioningProgress
}

// GetProvisioningProgressOk returns a tuple with the ProvisioningProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetProvisioningProgressOk() (*ProvisioningProgressResponseModel, bool) {
	if o == nil || IsNil(o.ProvisioningProgress) {
		return nil, false
	}
	return o.ProvisioningProgress, true
}

// HasProvisioningProgress returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasProvisioningProgress() bool {
	if o != nil && !IsNil(o.ProvisioningProgress) {
		return true
	}

	return false
}

// SetProvisioningProgress gets a reference to the given ProvisioningProgressResponseModel and assigns it to the ProvisioningProgress field.
func (o *MachineCatalogResponseModel) SetProvisioningProgress(v ProvisioningProgressResponseModel) {
	o.ProvisioningProgress = &v
}

// GetPvsAddress returns the PvsAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetPvsAddress() string {
	if o == nil || IsNil(o.PvsAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PvsAddress.Get()
}

// GetPvsAddressOk returns a tuple with the PvsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetPvsAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsAddress.Get(), o.PvsAddress.IsSet()
}

// HasPvsAddress returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasPvsAddress() bool {
	if o != nil && o.PvsAddress.IsSet() {
		return true
	}

	return false
}

// SetPvsAddress gets a reference to the given NullableString and assigns it to the PvsAddress field.
func (o *MachineCatalogResponseModel) SetPvsAddress(v string) {
	o.PvsAddress.Set(&v)
}
// SetPvsAddressNil sets the value for PvsAddress to be an explicit nil
func (o *MachineCatalogResponseModel) SetPvsAddressNil() {
	o.PvsAddress.Set(nil)
}

// UnsetPvsAddress ensures that no value is present for PvsAddress, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetPvsAddress() {
	o.PvsAddress.Unset()
}

// GetPvsDomain returns the PvsDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetPvsDomain() string {
	if o == nil || IsNil(o.PvsDomain.Get()) {
		var ret string
		return ret
	}
	return *o.PvsDomain.Get()
}

// GetPvsDomainOk returns a tuple with the PvsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetPvsDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsDomain.Get(), o.PvsDomain.IsSet()
}

// HasPvsDomain returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasPvsDomain() bool {
	if o != nil && o.PvsDomain.IsSet() {
		return true
	}

	return false
}

// SetPvsDomain gets a reference to the given NullableString and assigns it to the PvsDomain field.
func (o *MachineCatalogResponseModel) SetPvsDomain(v string) {
	o.PvsDomain.Set(&v)
}
// SetPvsDomainNil sets the value for PvsDomain to be an explicit nil
func (o *MachineCatalogResponseModel) SetPvsDomainNil() {
	o.PvsDomain.Set(nil)
}

// UnsetPvsDomain ensures that no value is present for PvsDomain, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetPvsDomain() {
	o.PvsDomain.Unset()
}

// GetRemotePCEnrollmentScopes returns the RemotePCEnrollmentScopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetRemotePCEnrollmentScopes() []RemotePCEnrollmentScopeResponseModel {
	if o == nil {
		var ret []RemotePCEnrollmentScopeResponseModel
		return ret
	}
	return o.RemotePCEnrollmentScopes
}

// GetRemotePCEnrollmentScopesOk returns a tuple with the RemotePCEnrollmentScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetRemotePCEnrollmentScopesOk() ([]RemotePCEnrollmentScopeResponseModel, bool) {
	if o == nil || IsNil(o.RemotePCEnrollmentScopes) {
		return nil, false
	}
	return o.RemotePCEnrollmentScopes, true
}

// HasRemotePCEnrollmentScopes returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasRemotePCEnrollmentScopes() bool {
	if o != nil && IsNil(o.RemotePCEnrollmentScopes) {
		return true
	}

	return false
}

// SetRemotePCEnrollmentScopes gets a reference to the given []RemotePCEnrollmentScopeResponseModel and assigns it to the RemotePCEnrollmentScopes field.
func (o *MachineCatalogResponseModel) SetRemotePCEnrollmentScopes(v []RemotePCEnrollmentScopeResponseModel) {
	o.RemotePCEnrollmentScopes = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetScopes() []ScopeResponseModel {
	if o == nil {
		var ret []ScopeResponseModel
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetScopesOk() ([]ScopeResponseModel, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasScopes() bool {
	if o != nil && IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []ScopeResponseModel and assigns it to the Scopes field.
func (o *MachineCatalogResponseModel) SetScopes(v []ScopeResponseModel) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetTenants() []RefResponseModel {
	if o == nil {
		var ret []RefResponseModel
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetTenantsOk() ([]RefResponseModel, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasTenants() bool {
	if o != nil && IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []RefResponseModel and assigns it to the Tenants field.
func (o *MachineCatalogResponseModel) SetTenants(v []RefResponseModel) {
	o.Tenants = v
}

// GetSessionSupport returns the SessionSupport field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetSessionSupport() SessionSupport {
	if o == nil || IsNil(o.SessionSupport) {
		var ret SessionSupport
		return ret
	}
	return *o.SessionSupport
}

// GetSessionSupportOk returns a tuple with the SessionSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetSessionSupportOk() (*SessionSupport, bool) {
	if o == nil || IsNil(o.SessionSupport) {
		return nil, false
	}
	return o.SessionSupport, true
}

// HasSessionSupport returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasSessionSupport() bool {
	if o != nil && !IsNil(o.SessionSupport) {
		return true
	}

	return false
}

// SetSessionSupport gets a reference to the given SessionSupport and assigns it to the SessionSupport field.
func (o *MachineCatalogResponseModel) SetSessionSupport(v SessionSupport) {
	o.SessionSupport = &v
}

// GetSharingKind returns the SharingKind field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetSharingKind() SharingKind {
	if o == nil || IsNil(o.SharingKind) {
		var ret SharingKind
		return ret
	}
	return *o.SharingKind
}

// GetSharingKindOk returns a tuple with the SharingKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetSharingKindOk() (*SharingKind, bool) {
	if o == nil || IsNil(o.SharingKind) {
		return nil, false
	}
	return o.SharingKind, true
}

// HasSharingKind returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasSharingKind() bool {
	if o != nil && !IsNil(o.SharingKind) {
		return true
	}

	return false
}

// SetSharingKind gets a reference to the given SharingKind and assigns it to the SharingKind field.
func (o *MachineCatalogResponseModel) SetSharingKind(v SharingKind) {
	o.SharingKind = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *MachineCatalogResponseModel) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetIsBroken returns the IsBroken field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetIsBroken() bool {
	if o == nil || IsNil(o.IsBroken) {
		var ret bool
		return ret
	}
	return *o.IsBroken
}

// GetIsBrokenOk returns a tuple with the IsBroken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetIsBrokenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBroken) {
		return nil, false
	}
	return o.IsBroken, true
}

// HasIsBroken returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasIsBroken() bool {
	if o != nil && !IsNil(o.IsBroken) {
		return true
	}

	return false
}

// SetIsBroken gets a reference to the given bool and assigns it to the IsBroken field.
func (o *MachineCatalogResponseModel) SetIsBroken(v bool) {
	o.IsBroken = &v
}

// GetIsMasterImageAssociated returns the IsMasterImageAssociated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetIsMasterImageAssociated() bool {
	if o == nil || IsNil(o.IsMasterImageAssociated.Get()) {
		var ret bool
		return ret
	}
	return *o.IsMasterImageAssociated.Get()
}

// GetIsMasterImageAssociatedOk returns a tuple with the IsMasterImageAssociated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetIsMasterImageAssociatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsMasterImageAssociated.Get(), o.IsMasterImageAssociated.IsSet()
}

// HasIsMasterImageAssociated returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasIsMasterImageAssociated() bool {
	if o != nil && o.IsMasterImageAssociated.IsSet() {
		return true
	}

	return false
}

// SetIsMasterImageAssociated gets a reference to the given NullableBool and assigns it to the IsMasterImageAssociated field.
func (o *MachineCatalogResponseModel) SetIsMasterImageAssociated(v bool) {
	o.IsMasterImageAssociated.Set(&v)
}
// SetIsMasterImageAssociatedNil sets the value for IsMasterImageAssociated to be an explicit nil
func (o *MachineCatalogResponseModel) SetIsMasterImageAssociatedNil() {
	o.IsMasterImageAssociated.Set(nil)
}

// UnsetIsMasterImageAssociated ensures that no value is present for IsMasterImageAssociated, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetIsMasterImageAssociated() {
	o.IsMasterImageAssociated.Unset()
}

// GetImageUpdateStatus returns the ImageUpdateStatus field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetImageUpdateStatus() ImageUpdateStatus {
	if o == nil || IsNil(o.ImageUpdateStatus) {
		var ret ImageUpdateStatus
		return ret
	}
	return *o.ImageUpdateStatus
}

// GetImageUpdateStatusOk returns a tuple with the ImageUpdateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetImageUpdateStatusOk() (*ImageUpdateStatus, bool) {
	if o == nil || IsNil(o.ImageUpdateStatus) {
		return nil, false
	}
	return o.ImageUpdateStatus, true
}

// HasImageUpdateStatus returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasImageUpdateStatus() bool {
	if o != nil && !IsNil(o.ImageUpdateStatus) {
		return true
	}

	return false
}

// SetImageUpdateStatus gets a reference to the given ImageUpdateStatus and assigns it to the ImageUpdateStatus field.
func (o *MachineCatalogResponseModel) SetImageUpdateStatus(v ImageUpdateStatus) {
	o.ImageUpdateStatus = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasErrors() bool {
	if o != nil && IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *MachineCatalogResponseModel) SetErrors(v []string) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetWarnings() []MachineCatalogWarningResponseModel {
	if o == nil {
		var ret []MachineCatalogWarningResponseModel
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetWarningsOk() ([]MachineCatalogWarningResponseModel, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasWarnings() bool {
	if o != nil && IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []MachineCatalogWarningResponseModel and assigns it to the Warnings field.
func (o *MachineCatalogResponseModel) SetWarnings(v []MachineCatalogWarningResponseModel) {
	o.Warnings = v
}

// GetUnassignedCount returns the UnassignedCount field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetUnassignedCount() int32 {
	if o == nil || IsNil(o.UnassignedCount) {
		var ret int32
		return ret
	}
	return *o.UnassignedCount
}

// GetUnassignedCountOk returns a tuple with the UnassignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetUnassignedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnassignedCount) {
		return nil, false
	}
	return o.UnassignedCount, true
}

// HasUnassignedCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasUnassignedCount() bool {
	if o != nil && !IsNil(o.UnassignedCount) {
		return true
	}

	return false
}

// SetUnassignedCount gets a reference to the given int32 and assigns it to the UnassignedCount field.
func (o *MachineCatalogResponseModel) SetUnassignedCount(v int32) {
	o.UnassignedCount = &v
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetUsedCount() int32 {
	if o == nil || IsNil(o.UsedCount) {
		var ret int32
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetUsedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedCount) {
		return nil, false
	}
	return o.UsedCount, true
}

// HasUsedCount returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasUsedCount() bool {
	if o != nil && !IsNil(o.UsedCount) {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int32 and assigns it to the UsedCount field.
func (o *MachineCatalogResponseModel) SetUsedCount(v int32) {
	o.UsedCount = &v
}

// GetAvailableCountOfSuspend returns the AvailableCountOfSuspend field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetAvailableCountOfSuspend() int32 {
	if o == nil || IsNil(o.AvailableCountOfSuspend.Get()) {
		var ret int32
		return ret
	}
	return *o.AvailableCountOfSuspend.Get()
}

// GetAvailableCountOfSuspendOk returns a tuple with the AvailableCountOfSuspend field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetAvailableCountOfSuspendOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailableCountOfSuspend.Get(), o.AvailableCountOfSuspend.IsSet()
}

// HasAvailableCountOfSuspend returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAvailableCountOfSuspend() bool {
	if o != nil && o.AvailableCountOfSuspend.IsSet() {
		return true
	}

	return false
}

// SetAvailableCountOfSuspend gets a reference to the given NullableInt32 and assigns it to the AvailableCountOfSuspend field.
func (o *MachineCatalogResponseModel) SetAvailableCountOfSuspend(v int32) {
	o.AvailableCountOfSuspend.Set(&v)
}
// SetAvailableCountOfSuspendNil sets the value for AvailableCountOfSuspend to be an explicit nil
func (o *MachineCatalogResponseModel) SetAvailableCountOfSuspendNil() {
	o.AvailableCountOfSuspend.Set(nil)
}

// UnsetAvailableCountOfSuspend ensures that no value is present for AvailableCountOfSuspend, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetAvailableCountOfSuspend() {
	o.AvailableCountOfSuspend.Unset()
}

// GetAvailableAssignedCountOfSuspend returns the AvailableAssignedCountOfSuspend field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineCatalogResponseModel) GetAvailableAssignedCountOfSuspend() int32 {
	if o == nil || IsNil(o.AvailableAssignedCountOfSuspend.Get()) {
		var ret int32
		return ret
	}
	return *o.AvailableAssignedCountOfSuspend.Get()
}

// GetAvailableAssignedCountOfSuspendOk returns a tuple with the AvailableAssignedCountOfSuspend field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineCatalogResponseModel) GetAvailableAssignedCountOfSuspendOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailableAssignedCountOfSuspend.Get(), o.AvailableAssignedCountOfSuspend.IsSet()
}

// HasAvailableAssignedCountOfSuspend returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAvailableAssignedCountOfSuspend() bool {
	if o != nil && o.AvailableAssignedCountOfSuspend.IsSet() {
		return true
	}

	return false
}

// SetAvailableAssignedCountOfSuspend gets a reference to the given NullableInt32 and assigns it to the AvailableAssignedCountOfSuspend field.
func (o *MachineCatalogResponseModel) SetAvailableAssignedCountOfSuspend(v int32) {
	o.AvailableAssignedCountOfSuspend.Set(&v)
}
// SetAvailableAssignedCountOfSuspendNil sets the value for AvailableAssignedCountOfSuspend to be an explicit nil
func (o *MachineCatalogResponseModel) SetAvailableAssignedCountOfSuspendNil() {
	o.AvailableAssignedCountOfSuspend.Set(nil)
}

// UnsetAvailableAssignedCountOfSuspend ensures that no value is present for AvailableAssignedCountOfSuspend, not even an explicit nil
func (o *MachineCatalogResponseModel) UnsetAvailableAssignedCountOfSuspend() {
	o.AvailableAssignedCountOfSuspend.Unset()
}

// GetUpgradeInfo returns the UpgradeInfo field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetUpgradeInfo() MachineCatalogUpgradeInfo {
	if o == nil || IsNil(o.UpgradeInfo) {
		var ret MachineCatalogUpgradeInfo
		return ret
	}
	return *o.UpgradeInfo
}

// GetUpgradeInfoOk returns a tuple with the UpgradeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetUpgradeInfoOk() (*MachineCatalogUpgradeInfo, bool) {
	if o == nil || IsNil(o.UpgradeInfo) {
		return nil, false
	}
	return o.UpgradeInfo, true
}

// HasUpgradeInfo returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasUpgradeInfo() bool {
	if o != nil && !IsNil(o.UpgradeInfo) {
		return true
	}

	return false
}

// SetUpgradeInfo gets a reference to the given MachineCatalogUpgradeInfo and assigns it to the UpgradeInfo field.
func (o *MachineCatalogResponseModel) SetUpgradeInfo(v MachineCatalogUpgradeInfo) {
	o.UpgradeInfo = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetZone() RefResponseModel {
	if o == nil || IsNil(o.Zone) {
		var ret RefResponseModel
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetZoneOk() (*RefResponseModel, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given RefResponseModel and assigns it to the Zone field.
func (o *MachineCatalogResponseModel) SetZone(v RefResponseModel) {
	o.Zone = &v
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *MachineCatalogResponseModel) GetAdminFolder() RefResponseModel {
	if o == nil || IsNil(o.AdminFolder) {
		var ret RefResponseModel
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineCatalogResponseModel) GetAdminFolderOk() (*RefResponseModel, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *MachineCatalogResponseModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given RefResponseModel and assigns it to the AdminFolder field.
func (o *MachineCatalogResponseModel) SetAdminFolder(v RefResponseModel) {
	o.AdminFolder = &v
}

func (o MachineCatalogResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineCatalogResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.FullName.IsSet() {
		toSerialize["FullName"] = o.FullName.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	if !IsNil(o.AllocationType) {
		toSerialize["AllocationType"] = o.AllocationType
	}
	if o.AssignedCount.IsSet() {
		toSerialize["AssignedCount"] = o.AssignedCount.Get()
	}
	if o.AvailableAssignedCount.IsSet() {
		toSerialize["AvailableAssignedCount"] = o.AvailableAssignedCount.Get()
	}
	if !IsNil(o.AvailableCount) {
		toSerialize["AvailableCount"] = o.AvailableCount
	}
	if o.AvailableUnassignedCount.IsSet() {
		toSerialize["AvailableUnassignedCount"] = o.AvailableUnassignedCount.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !IsNil(o.IsPowerManaged) {
		toSerialize["IsPowerManaged"] = o.IsPowerManaged
	}
	if !IsNil(o.IsRemotePC) {
		toSerialize["IsRemotePC"] = o.IsRemotePC
	}
	if o.JobsInProgress != nil {
		toSerialize["JobsInProgress"] = o.JobsInProgress
	}
	if !IsNil(o.MachineType) {
		toSerialize["MachineType"] = o.MachineType
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	if !IsNil(o.MinimumFunctionalLevel) {
		toSerialize["MinimumFunctionalLevel"] = o.MinimumFunctionalLevel
	}
	if !IsNil(o.HasBeenPromoted) {
		toSerialize["HasBeenPromoted"] = o.HasBeenPromoted
	}
	if !IsNil(o.HasBeenPromotedFrom) {
		toSerialize["HasBeenPromotedFrom"] = o.HasBeenPromotedFrom
	}
	if !IsNil(o.CanRollbackVMImage) {
		toSerialize["CanRollbackVMImage"] = o.CanRollbackVMImage
	}
	if !IsNil(o.CanRecreateCatalog) {
		toSerialize["CanRecreateCatalog"] = o.CanRecreateCatalog
	}
	if !IsNil(o.PersistChanges) {
		toSerialize["PersistChanges"] = o.PersistChanges
	}
	if !IsNil(o.ProvisioningScheme) {
		toSerialize["ProvisioningScheme"] = o.ProvisioningScheme
	}
	if !IsNil(o.ProvisioningType) {
		toSerialize["ProvisioningType"] = o.ProvisioningType
	}
	if !IsNil(o.ProvisioningProgress) {
		toSerialize["ProvisioningProgress"] = o.ProvisioningProgress
	}
	if o.PvsAddress.IsSet() {
		toSerialize["PvsAddress"] = o.PvsAddress.Get()
	}
	if o.PvsDomain.IsSet() {
		toSerialize["PvsDomain"] = o.PvsDomain.Get()
	}
	if o.RemotePCEnrollmentScopes != nil {
		toSerialize["RemotePCEnrollmentScopes"] = o.RemotePCEnrollmentScopes
	}
	if o.Scopes != nil {
		toSerialize["Scopes"] = o.Scopes
	}
	if o.Tenants != nil {
		toSerialize["Tenants"] = o.Tenants
	}
	if !IsNil(o.SessionSupport) {
		toSerialize["SessionSupport"] = o.SessionSupport
	}
	if !IsNil(o.SharingKind) {
		toSerialize["SharingKind"] = o.SharingKind
	}
	if !IsNil(o.TotalCount) {
		toSerialize["TotalCount"] = o.TotalCount
	}
	if !IsNil(o.IsBroken) {
		toSerialize["IsBroken"] = o.IsBroken
	}
	if o.IsMasterImageAssociated.IsSet() {
		toSerialize["IsMasterImageAssociated"] = o.IsMasterImageAssociated.Get()
	}
	if !IsNil(o.ImageUpdateStatus) {
		toSerialize["ImageUpdateStatus"] = o.ImageUpdateStatus
	}
	if o.Errors != nil {
		toSerialize["Errors"] = o.Errors
	}
	if o.Warnings != nil {
		toSerialize["Warnings"] = o.Warnings
	}
	if !IsNil(o.UnassignedCount) {
		toSerialize["UnassignedCount"] = o.UnassignedCount
	}
	if !IsNil(o.UsedCount) {
		toSerialize["UsedCount"] = o.UsedCount
	}
	if o.AvailableCountOfSuspend.IsSet() {
		toSerialize["AvailableCountOfSuspend"] = o.AvailableCountOfSuspend.Get()
	}
	if o.AvailableAssignedCountOfSuspend.IsSet() {
		toSerialize["AvailableAssignedCountOfSuspend"] = o.AvailableAssignedCountOfSuspend.Get()
	}
	if !IsNil(o.UpgradeInfo) {
		toSerialize["UpgradeInfo"] = o.UpgradeInfo
	}
	if !IsNil(o.Zone) {
		toSerialize["Zone"] = o.Zone
	}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	return toSerialize, nil
}

type NullableMachineCatalogResponseModel struct {
	value *MachineCatalogResponseModel
	isSet bool
}

func (v NullableMachineCatalogResponseModel) Get() *MachineCatalogResponseModel {
	return v.value
}

func (v *NullableMachineCatalogResponseModel) Set(val *MachineCatalogResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineCatalogResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineCatalogResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineCatalogResponseModel(val *MachineCatalogResponseModel) *NullableMachineCatalogResponseModel {
	return &NullableMachineCatalogResponseModel{value: val, isSet: true}
}

func (v NullableMachineCatalogResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineCatalogResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


