/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityContainerResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityContainerResponseModel{}

// IdentityContainerResponseModel struct for IdentityContainerResponseModel
type IdentityContainerResponseModel struct {
	// The Domain the object belongs to. NOTE: When doing a forest level search, the domain property is populated only if the object contains a SID and the SID was requested as property to be fetched.
	Domain NullableString `json:"Domain,omitempty"`
	// The forest the object belongs to.
	Forest NullableString `json:"Forest,omitempty"`
	// The GUID of the object, the GUID is unique across the enterprise and anywhere else.
	Guid NullableString `json:"Guid,omitempty"`
	// The Distinguished name of the object. Distinguished names (DNs) are unique and they unambiguously identify objects in the directory.
	DistinguishedName NullableString `json:"DistinguishedName,omitempty"`
	// The unique distinguished name of the object in canonical format.
	CanonicalName NullableString `json:"CanonicalName,omitempty"`
	// Set to True during a bulk identity lookup operation. For individual identity lookup, usually an exception will be thrown.
	PossibleLookupFailure *bool `json:"PossibleLookupFailure,omitempty"`
	// Domain controller that performed the add/update operation on this object
	DirectoryServer NullableString `json:"DirectoryServer,omitempty"`
	// The name of the container.
	Name NullableString         `json:"Name,omitempty"`
	Type *IdentityContainerType `json:"Type,omitempty"`
	// Properties fetched and populated in the Container object.  This is a bitfield indicating the fetched properties.
	PropertiesFetched int32 `json:"PropertiesFetched"`
}

// NewIdentityContainerResponseModel instantiates a new IdentityContainerResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityContainerResponseModel(propertiesFetched int32) *IdentityContainerResponseModel {
	this := IdentityContainerResponseModel{}
	this.PropertiesFetched = propertiesFetched
	return &this
}

// NewIdentityContainerResponseModelWithDefaults instantiates a new IdentityContainerResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityContainerResponseModelWithDefaults() *IdentityContainerResponseModel {
	this := IdentityContainerResponseModel{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetDomain() string {
	if o == nil || IsNil(o.Domain.Get()) {
		var ret string
		return ret
	}
	return *o.Domain.Get()
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domain.Get(), o.Domain.IsSet()
}

// HasDomain returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasDomain() bool {
	if o != nil && o.Domain.IsSet() {
		return true
	}

	return false
}

// SetDomain gets a reference to the given NullableString and assigns it to the Domain field.
func (o *IdentityContainerResponseModel) SetDomain(v string) {
	o.Domain.Set(&v)
}

// SetDomainNil sets the value for Domain to be an explicit nil
func (o *IdentityContainerResponseModel) SetDomainNil() {
	o.Domain.Set(nil)
}

// UnsetDomain ensures that no value is present for Domain, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetDomain() {
	o.Domain.Unset()
}

// GetForest returns the Forest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest.Get()) {
		var ret string
		return ret
	}
	return *o.Forest.Get()
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetForestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forest.Get(), o.Forest.IsSet()
}

// HasForest returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasForest() bool {
	if o != nil && o.Forest.IsSet() {
		return true
	}

	return false
}

// SetForest gets a reference to the given NullableString and assigns it to the Forest field.
func (o *IdentityContainerResponseModel) SetForest(v string) {
	o.Forest.Set(&v)
}

// SetForestNil sets the value for Forest to be an explicit nil
func (o *IdentityContainerResponseModel) SetForestNil() {
	o.Forest.Set(nil)
}

// UnsetForest ensures that no value is present for Forest, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetForest() {
	o.Forest.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *IdentityContainerResponseModel) SetGuid(v string) {
	o.Guid.Set(&v)
}

// SetGuidNil sets the value for Guid to be an explicit nil
func (o *IdentityContainerResponseModel) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetGuid() {
	o.Guid.Unset()
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName.Get()) {
		var ret string
		return ret
	}
	return *o.DistinguishedName.Get()
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetDistinguishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DistinguishedName.Get(), o.DistinguishedName.IsSet()
}

// HasDistinguishedName returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasDistinguishedName() bool {
	if o != nil && o.DistinguishedName.IsSet() {
		return true
	}

	return false
}

// SetDistinguishedName gets a reference to the given NullableString and assigns it to the DistinguishedName field.
func (o *IdentityContainerResponseModel) SetDistinguishedName(v string) {
	o.DistinguishedName.Set(&v)
}

// SetDistinguishedNameNil sets the value for DistinguishedName to be an explicit nil
func (o *IdentityContainerResponseModel) SetDistinguishedNameNil() {
	o.DistinguishedName.Set(nil)
}

// UnsetDistinguishedName ensures that no value is present for DistinguishedName, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetDistinguishedName() {
	o.DistinguishedName.Unset()
}

// GetCanonicalName returns the CanonicalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetCanonicalName() string {
	if o == nil || IsNil(o.CanonicalName.Get()) {
		var ret string
		return ret
	}
	return *o.CanonicalName.Get()
}

// GetCanonicalNameOk returns a tuple with the CanonicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetCanonicalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CanonicalName.Get(), o.CanonicalName.IsSet()
}

// HasCanonicalName returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasCanonicalName() bool {
	if o != nil && o.CanonicalName.IsSet() {
		return true
	}

	return false
}

// SetCanonicalName gets a reference to the given NullableString and assigns it to the CanonicalName field.
func (o *IdentityContainerResponseModel) SetCanonicalName(v string) {
	o.CanonicalName.Set(&v)
}

// SetCanonicalNameNil sets the value for CanonicalName to be an explicit nil
func (o *IdentityContainerResponseModel) SetCanonicalNameNil() {
	o.CanonicalName.Set(nil)
}

// UnsetCanonicalName ensures that no value is present for CanonicalName, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetCanonicalName() {
	o.CanonicalName.Unset()
}

// GetPossibleLookupFailure returns the PossibleLookupFailure field value if set, zero value otherwise.
func (o *IdentityContainerResponseModel) GetPossibleLookupFailure() bool {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		var ret bool
		return ret
	}
	return *o.PossibleLookupFailure
}

// GetPossibleLookupFailureOk returns a tuple with the PossibleLookupFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainerResponseModel) GetPossibleLookupFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.PossibleLookupFailure) {
		return nil, false
	}
	return o.PossibleLookupFailure, true
}

// HasPossibleLookupFailure returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasPossibleLookupFailure() bool {
	if o != nil && !IsNil(o.PossibleLookupFailure) {
		return true
	}

	return false
}

// SetPossibleLookupFailure gets a reference to the given bool and assigns it to the PossibleLookupFailure field.
func (o *IdentityContainerResponseModel) SetPossibleLookupFailure(v bool) {
	o.PossibleLookupFailure = &v
}

// GetDirectoryServer returns the DirectoryServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetDirectoryServer() string {
	if o == nil || IsNil(o.DirectoryServer.Get()) {
		var ret string
		return ret
	}
	return *o.DirectoryServer.Get()
}

// GetDirectoryServerOk returns a tuple with the DirectoryServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetDirectoryServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DirectoryServer.Get(), o.DirectoryServer.IsSet()
}

// HasDirectoryServer returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasDirectoryServer() bool {
	if o != nil && o.DirectoryServer.IsSet() {
		return true
	}

	return false
}

// SetDirectoryServer gets a reference to the given NullableString and assigns it to the DirectoryServer field.
func (o *IdentityContainerResponseModel) SetDirectoryServer(v string) {
	o.DirectoryServer.Set(&v)
}

// SetDirectoryServerNil sets the value for DirectoryServer to be an explicit nil
func (o *IdentityContainerResponseModel) SetDirectoryServerNil() {
	o.DirectoryServer.Set(nil)
}

// UnsetDirectoryServer ensures that no value is present for DirectoryServer, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetDirectoryServer() {
	o.DirectoryServer.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentityContainerResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentityContainerResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *IdentityContainerResponseModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *IdentityContainerResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *IdentityContainerResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityContainerResponseModel) GetType() IdentityContainerType {
	if o == nil || IsNil(o.Type) {
		var ret IdentityContainerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContainerResponseModel) GetTypeOk() (*IdentityContainerType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityContainerResponseModel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given IdentityContainerType and assigns it to the Type field.
func (o *IdentityContainerResponseModel) SetType(v IdentityContainerType) {
	o.Type = &v
}

// GetPropertiesFetched returns the PropertiesFetched field value
func (o *IdentityContainerResponseModel) GetPropertiesFetched() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertiesFetched
}

// GetPropertiesFetchedOk returns a tuple with the PropertiesFetched field value
// and a boolean to check if the value has been set.
func (o *IdentityContainerResponseModel) GetPropertiesFetchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertiesFetched, true
}

// SetPropertiesFetched sets field value
func (o *IdentityContainerResponseModel) SetPropertiesFetched(v int32) {
	o.PropertiesFetched = v
}

func (o IdentityContainerResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityContainerResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Domain.IsSet() {
		toSerialize["Domain"] = o.Domain.Get()
	}
	if o.Forest.IsSet() {
		toSerialize["Forest"] = o.Forest.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["Guid"] = o.Guid.Get()
	}
	if o.DistinguishedName.IsSet() {
		toSerialize["DistinguishedName"] = o.DistinguishedName.Get()
	}
	if o.CanonicalName.IsSet() {
		toSerialize["CanonicalName"] = o.CanonicalName.Get()
	}
	if !IsNil(o.PossibleLookupFailure) {
		toSerialize["PossibleLookupFailure"] = o.PossibleLookupFailure
	}
	if o.DirectoryServer.IsSet() {
		toSerialize["DirectoryServer"] = o.DirectoryServer.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	toSerialize["PropertiesFetched"] = o.PropertiesFetched
	return toSerialize, nil
}

type NullableIdentityContainerResponseModel struct {
	value *IdentityContainerResponseModel
	isSet bool
}

func (v NullableIdentityContainerResponseModel) Get() *IdentityContainerResponseModel {
	return v.value
}

func (v *NullableIdentityContainerResponseModel) Set(val *IdentityContainerResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityContainerResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityContainerResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityContainerResponseModel(val *IdentityContainerResponseModel) *NullableIdentityContainerResponseModel {
	return &NullableIdentityContainerResponseModel{value: val, isSet: true}
}

func (v NullableIdentityContainerResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityContainerResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
