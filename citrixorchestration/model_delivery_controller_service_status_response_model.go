/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DeliveryControllerServiceStatusResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryControllerServiceStatusResponseModel{}

// DeliveryControllerServiceStatusResponseModel Service status response model of the delivery controller.
type DeliveryControllerServiceStatusResponseModel struct {
	ServiceType *ControllerServiceType `json:"ServiceType,omitempty"`
	ServiceStatus *ControllerServiceStatus `json:"ServiceStatus,omitempty"`
}

// NewDeliveryControllerServiceStatusResponseModel instantiates a new DeliveryControllerServiceStatusResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryControllerServiceStatusResponseModel() *DeliveryControllerServiceStatusResponseModel {
	this := DeliveryControllerServiceStatusResponseModel{}
	return &this
}

// NewDeliveryControllerServiceStatusResponseModelWithDefaults instantiates a new DeliveryControllerServiceStatusResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryControllerServiceStatusResponseModelWithDefaults() *DeliveryControllerServiceStatusResponseModel {
	this := DeliveryControllerServiceStatusResponseModel{}
	return &this
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *DeliveryControllerServiceStatusResponseModel) GetServiceType() ControllerServiceType {
	if o == nil || IsNil(o.ServiceType) {
		var ret ControllerServiceType
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerServiceStatusResponseModel) GetServiceTypeOk() (*ControllerServiceType, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *DeliveryControllerServiceStatusResponseModel) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given ControllerServiceType and assigns it to the ServiceType field.
func (o *DeliveryControllerServiceStatusResponseModel) SetServiceType(v ControllerServiceType) {
	o.ServiceType = &v
}

// GetServiceStatus returns the ServiceStatus field value if set, zero value otherwise.
func (o *DeliveryControllerServiceStatusResponseModel) GetServiceStatus() ControllerServiceStatus {
	if o == nil || IsNil(o.ServiceStatus) {
		var ret ControllerServiceStatus
		return ret
	}
	return *o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryControllerServiceStatusResponseModel) GetServiceStatusOk() (*ControllerServiceStatus, bool) {
	if o == nil || IsNil(o.ServiceStatus) {
		return nil, false
	}
	return o.ServiceStatus, true
}

// HasServiceStatus returns a boolean if a field has been set.
func (o *DeliveryControllerServiceStatusResponseModel) HasServiceStatus() bool {
	if o != nil && !IsNil(o.ServiceStatus) {
		return true
	}

	return false
}

// SetServiceStatus gets a reference to the given ControllerServiceStatus and assigns it to the ServiceStatus field.
func (o *DeliveryControllerServiceStatusResponseModel) SetServiceStatus(v ControllerServiceStatus) {
	o.ServiceStatus = &v
}

func (o DeliveryControllerServiceStatusResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryControllerServiceStatusResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceType) {
		toSerialize["ServiceType"] = o.ServiceType
	}
	if !IsNil(o.ServiceStatus) {
		toSerialize["ServiceStatus"] = o.ServiceStatus
	}
	return toSerialize, nil
}

type NullableDeliveryControllerServiceStatusResponseModel struct {
	value *DeliveryControllerServiceStatusResponseModel
	isSet bool
}

func (v NullableDeliveryControllerServiceStatusResponseModel) Get() *DeliveryControllerServiceStatusResponseModel {
	return v.value
}

func (v *NullableDeliveryControllerServiceStatusResponseModel) Set(val *DeliveryControllerServiceStatusResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryControllerServiceStatusResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryControllerServiceStatusResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryControllerServiceStatusResponseModel(val *DeliveryControllerServiceStatusResponseModel) *NullableDeliveryControllerServiceStatusResponseModel {
	return &NullableDeliveryControllerServiceStatusResponseModel{value: val, isSet: true}
}

func (v NullableDeliveryControllerServiceStatusResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryControllerServiceStatusResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


