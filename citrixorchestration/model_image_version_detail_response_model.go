/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ImageVersionDetailResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageVersionDetailResponseModel{}

// ImageVersionDetailResponseModel struct for ImageVersionDetailResponseModel
type ImageVersionDetailResponseModel struct {
	// The version number associated with the image version.
	Version NullableString `json:"Version,omitempty"`
	// The Id of the image version.
	Id *string `json:"Id,omitempty"`
	// The MasterImageVM of the image version.
	MasterImagePath NullableString `json:"MasterImagePath,omitempty"`
	// The Description of the image version.
	Description NullableString `json:"Description,omitempty"`
	// Size of the VM's OS disk, in GB.
	DiskSizeGB *int32 `json:"DiskSizeGB,omitempty"`
	// The create time of the image version.
	CreateTime NullableString `json:"CreateTime,omitempty"`
	// The WriteBackCacheDiskSize of the image version.
	WriteBackCacheDiskSize *int32 `json:"WriteBackCacheDiskSize,omitempty"`
	// The WriteBackCacheMemorySize of the image version.
	WriteBackCacheMemorySize *int32 `json:"WriteBackCacheMemorySize,omitempty"`
	// The image status of the image version.
	ImageStatus NullableString `json:"ImageStatus,omitempty"`
	// The error info of the image version.
	Error NullableString `json:"Error,omitempty"`
	// The additional data of the image version.
	AdditionalData map[string]string `json:"AdditionalData,omitempty"`
	ImageDefinition *ImageDefinitionResponseModel `json:"ImageDefinition,omitempty"`
	ImageScheme *ImageSchemeResponseModel `json:"ImageScheme,omitempty"`
	VMMetadata *ProvisioningSchemeVmMetadataResponseModel `json:"VMMetadata,omitempty"`
	MasterImage HypervisorResourceRefResponseModel `json:"MasterImage"`
}

// NewImageVersionDetailResponseModel instantiates a new ImageVersionDetailResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageVersionDetailResponseModel(masterImage HypervisorResourceRefResponseModel) *ImageVersionDetailResponseModel {
	this := ImageVersionDetailResponseModel{}
	this.MasterImage = masterImage
	return &this
}

// NewImageVersionDetailResponseModelWithDefaults instantiates a new ImageVersionDetailResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageVersionDetailResponseModelWithDefaults() *ImageVersionDetailResponseModel {
	this := ImageVersionDetailResponseModel{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *ImageVersionDetailResponseModel) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetVersion() {
	o.Version.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageVersionDetailResponseModel) SetId(v string) {
	o.Id = &v
}

// GetMasterImagePath returns the MasterImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetMasterImagePath() string {
	if o == nil || IsNil(o.MasterImagePath.Get()) {
		var ret string
		return ret
	}
	return *o.MasterImagePath.Get()
}

// GetMasterImagePathOk returns a tuple with the MasterImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetMasterImagePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MasterImagePath.Get(), o.MasterImagePath.IsSet()
}

// HasMasterImagePath returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasMasterImagePath() bool {
	if o != nil && o.MasterImagePath.IsSet() {
		return true
	}

	return false
}

// SetMasterImagePath gets a reference to the given NullableString and assigns it to the MasterImagePath field.
func (o *ImageVersionDetailResponseModel) SetMasterImagePath(v string) {
	o.MasterImagePath.Set(&v)
}
// SetMasterImagePathNil sets the value for MasterImagePath to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetMasterImagePathNil() {
	o.MasterImagePath.Set(nil)
}

// UnsetMasterImagePath ensures that no value is present for MasterImagePath, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetMasterImagePath() {
	o.MasterImagePath.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ImageVersionDetailResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetDiskSizeGB returns the DiskSizeGB field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetDiskSizeGB() int32 {
	if o == nil || IsNil(o.DiskSizeGB) {
		var ret int32
		return ret
	}
	return *o.DiskSizeGB
}

// GetDiskSizeGBOk returns a tuple with the DiskSizeGB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetDiskSizeGBOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskSizeGB) {
		return nil, false
	}
	return o.DiskSizeGB, true
}

// HasDiskSizeGB returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasDiskSizeGB() bool {
	if o != nil && !IsNil(o.DiskSizeGB) {
		return true
	}

	return false
}

// SetDiskSizeGB gets a reference to the given int32 and assigns it to the DiskSizeGB field.
func (o *ImageVersionDetailResponseModel) SetDiskSizeGB(v int32) {
	o.DiskSizeGB = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime.Get()) {
		var ret string
		return ret
	}
	return *o.CreateTime.Get()
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetCreateTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateTime.Get(), o.CreateTime.IsSet()
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasCreateTime() bool {
	if o != nil && o.CreateTime.IsSet() {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given NullableString and assigns it to the CreateTime field.
func (o *ImageVersionDetailResponseModel) SetCreateTime(v string) {
	o.CreateTime.Set(&v)
}
// SetCreateTimeNil sets the value for CreateTime to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetCreateTimeNil() {
	o.CreateTime.Set(nil)
}

// UnsetCreateTime ensures that no value is present for CreateTime, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetCreateTime() {
	o.CreateTime.Unset()
}

// GetWriteBackCacheDiskSize returns the WriteBackCacheDiskSize field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetWriteBackCacheDiskSize() int32 {
	if o == nil || IsNil(o.WriteBackCacheDiskSize) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheDiskSize
}

// GetWriteBackCacheDiskSizeOk returns a tuple with the WriteBackCacheDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetWriteBackCacheDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheDiskSize) {
		return nil, false
	}
	return o.WriteBackCacheDiskSize, true
}

// HasWriteBackCacheDiskSize returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasWriteBackCacheDiskSize() bool {
	if o != nil && !IsNil(o.WriteBackCacheDiskSize) {
		return true
	}

	return false
}

// SetWriteBackCacheDiskSize gets a reference to the given int32 and assigns it to the WriteBackCacheDiskSize field.
func (o *ImageVersionDetailResponseModel) SetWriteBackCacheDiskSize(v int32) {
	o.WriteBackCacheDiskSize = &v
}

// GetWriteBackCacheMemorySize returns the WriteBackCacheMemorySize field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetWriteBackCacheMemorySize() int32 {
	if o == nil || IsNil(o.WriteBackCacheMemorySize) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheMemorySize
}

// GetWriteBackCacheMemorySizeOk returns a tuple with the WriteBackCacheMemorySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetWriteBackCacheMemorySizeOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheMemorySize) {
		return nil, false
	}
	return o.WriteBackCacheMemorySize, true
}

// HasWriteBackCacheMemorySize returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasWriteBackCacheMemorySize() bool {
	if o != nil && !IsNil(o.WriteBackCacheMemorySize) {
		return true
	}

	return false
}

// SetWriteBackCacheMemorySize gets a reference to the given int32 and assigns it to the WriteBackCacheMemorySize field.
func (o *ImageVersionDetailResponseModel) SetWriteBackCacheMemorySize(v int32) {
	o.WriteBackCacheMemorySize = &v
}

// GetImageStatus returns the ImageStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetImageStatus() string {
	if o == nil || IsNil(o.ImageStatus.Get()) {
		var ret string
		return ret
	}
	return *o.ImageStatus.Get()
}

// GetImageStatusOk returns a tuple with the ImageStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetImageStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImageStatus.Get(), o.ImageStatus.IsSet()
}

// HasImageStatus returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasImageStatus() bool {
	if o != nil && o.ImageStatus.IsSet() {
		return true
	}

	return false
}

// SetImageStatus gets a reference to the given NullableString and assigns it to the ImageStatus field.
func (o *ImageVersionDetailResponseModel) SetImageStatus(v string) {
	o.ImageStatus.Set(&v)
}
// SetImageStatusNil sets the value for ImageStatus to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetImageStatusNil() {
	o.ImageStatus.Set(nil)
}

// UnsetImageStatus ensures that no value is present for ImageStatus, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetImageStatus() {
	o.ImageStatus.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *ImageVersionDetailResponseModel) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *ImageVersionDetailResponseModel) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *ImageVersionDetailResponseModel) UnsetError() {
	o.Error.Unset()
}

// GetAdditionalData returns the AdditionalData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageVersionDetailResponseModel) GetAdditionalData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageVersionDetailResponseModel) GetAdditionalDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AdditionalData) {
		return nil, false
	}
	return &o.AdditionalData, true
}

// HasAdditionalData returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasAdditionalData() bool {
	if o != nil && IsNil(o.AdditionalData) {
		return true
	}

	return false
}

// SetAdditionalData gets a reference to the given map[string]string and assigns it to the AdditionalData field.
func (o *ImageVersionDetailResponseModel) SetAdditionalData(v map[string]string) {
	o.AdditionalData = v
}

// GetImageDefinition returns the ImageDefinition field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetImageDefinition() ImageDefinitionResponseModel {
	if o == nil || IsNil(o.ImageDefinition) {
		var ret ImageDefinitionResponseModel
		return ret
	}
	return *o.ImageDefinition
}

// GetImageDefinitionOk returns a tuple with the ImageDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetImageDefinitionOk() (*ImageDefinitionResponseModel, bool) {
	if o == nil || IsNil(o.ImageDefinition) {
		return nil, false
	}
	return o.ImageDefinition, true
}

// HasImageDefinition returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasImageDefinition() bool {
	if o != nil && !IsNil(o.ImageDefinition) {
		return true
	}

	return false
}

// SetImageDefinition gets a reference to the given ImageDefinitionResponseModel and assigns it to the ImageDefinition field.
func (o *ImageVersionDetailResponseModel) SetImageDefinition(v ImageDefinitionResponseModel) {
	o.ImageDefinition = &v
}

// GetImageScheme returns the ImageScheme field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetImageScheme() ImageSchemeResponseModel {
	if o == nil || IsNil(o.ImageScheme) {
		var ret ImageSchemeResponseModel
		return ret
	}
	return *o.ImageScheme
}

// GetImageSchemeOk returns a tuple with the ImageScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetImageSchemeOk() (*ImageSchemeResponseModel, bool) {
	if o == nil || IsNil(o.ImageScheme) {
		return nil, false
	}
	return o.ImageScheme, true
}

// HasImageScheme returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasImageScheme() bool {
	if o != nil && !IsNil(o.ImageScheme) {
		return true
	}

	return false
}

// SetImageScheme gets a reference to the given ImageSchemeResponseModel and assigns it to the ImageScheme field.
func (o *ImageVersionDetailResponseModel) SetImageScheme(v ImageSchemeResponseModel) {
	o.ImageScheme = &v
}

// GetVMMetadata returns the VMMetadata field value if set, zero value otherwise.
func (o *ImageVersionDetailResponseModel) GetVMMetadata() ProvisioningSchemeVmMetadataResponseModel {
	if o == nil || IsNil(o.VMMetadata) {
		var ret ProvisioningSchemeVmMetadataResponseModel
		return ret
	}
	return *o.VMMetadata
}

// GetVMMetadataOk returns a tuple with the VMMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetVMMetadataOk() (*ProvisioningSchemeVmMetadataResponseModel, bool) {
	if o == nil || IsNil(o.VMMetadata) {
		return nil, false
	}
	return o.VMMetadata, true
}

// HasVMMetadata returns a boolean if a field has been set.
func (o *ImageVersionDetailResponseModel) HasVMMetadata() bool {
	if o != nil && !IsNil(o.VMMetadata) {
		return true
	}

	return false
}

// SetVMMetadata gets a reference to the given ProvisioningSchemeVmMetadataResponseModel and assigns it to the VMMetadata field.
func (o *ImageVersionDetailResponseModel) SetVMMetadata(v ProvisioningSchemeVmMetadataResponseModel) {
	o.VMMetadata = &v
}

// GetMasterImage returns the MasterImage field value
func (o *ImageVersionDetailResponseModel) GetMasterImage() HypervisorResourceRefResponseModel {
	if o == nil {
		var ret HypervisorResourceRefResponseModel
		return ret
	}

	return o.MasterImage
}

// GetMasterImageOk returns a tuple with the MasterImage field value
// and a boolean to check if the value has been set.
func (o *ImageVersionDetailResponseModel) GetMasterImageOk() (*HypervisorResourceRefResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterImage, true
}

// SetMasterImage sets field value
func (o *ImageVersionDetailResponseModel) SetMasterImage(v HypervisorResourceRefResponseModel) {
	o.MasterImage = v
}

func (o ImageVersionDetailResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageVersionDetailResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Version.IsSet() {
		toSerialize["Version"] = o.Version.Get()
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if o.MasterImagePath.IsSet() {
		toSerialize["MasterImagePath"] = o.MasterImagePath.Get()
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !IsNil(o.DiskSizeGB) {
		toSerialize["DiskSizeGB"] = o.DiskSizeGB
	}
	if o.CreateTime.IsSet() {
		toSerialize["CreateTime"] = o.CreateTime.Get()
	}
	if !IsNil(o.WriteBackCacheDiskSize) {
		toSerialize["WriteBackCacheDiskSize"] = o.WriteBackCacheDiskSize
	}
	if !IsNil(o.WriteBackCacheMemorySize) {
		toSerialize["WriteBackCacheMemorySize"] = o.WriteBackCacheMemorySize
	}
	if o.ImageStatus.IsSet() {
		toSerialize["ImageStatus"] = o.ImageStatus.Get()
	}
	if o.Error.IsSet() {
		toSerialize["Error"] = o.Error.Get()
	}
	if o.AdditionalData != nil {
		toSerialize["AdditionalData"] = o.AdditionalData
	}
	if !IsNil(o.ImageDefinition) {
		toSerialize["ImageDefinition"] = o.ImageDefinition
	}
	if !IsNil(o.ImageScheme) {
		toSerialize["ImageScheme"] = o.ImageScheme
	}
	if !IsNil(o.VMMetadata) {
		toSerialize["VMMetadata"] = o.VMMetadata
	}
	toSerialize["MasterImage"] = o.MasterImage
	return toSerialize, nil
}

type NullableImageVersionDetailResponseModel struct {
	value *ImageVersionDetailResponseModel
	isSet bool
}

func (v NullableImageVersionDetailResponseModel) Get() *ImageVersionDetailResponseModel {
	return v.value
}

func (v *NullableImageVersionDetailResponseModel) Set(val *ImageVersionDetailResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageVersionDetailResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageVersionDetailResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageVersionDetailResponseModel(val *ImageVersionDetailResponseModel) *NullableImageVersionDetailResponseModel {
	return &NullableImageVersionDetailResponseModel{value: val, isSet: true}
}

func (v NullableImageVersionDetailResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageVersionDetailResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


