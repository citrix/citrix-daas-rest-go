/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ApplicationDetailResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationDetailResponseModel{}

// ApplicationDetailResponseModel Default response field (Only return the fields specified there if supported in  API ): BrowserName,Categories,ConfiguredFtas,CpuPriorityLevel,HomeZone,HomeZoneMode,IncludedUserFilterEnabled,IconFromClient,IncludedUsers,MaxPerUserInstances,MaxTotalInstances,ShortcutAddedToDesktop,ShortcutAddedToStartMenu,StartMenuFolder,WaitForPrinterCreation,Id,Uid,ApplicationFolder,ApplicationType,PackagedApplicationType,PackagedApplicationVisibility,ClientFolder,Description,DoNotEnumerate,Enabled,IconId,ContentLocation,Name,PublishedName,Visible,SharingKind,ZoneId.               Response object for application details.
type ApplicationDetailResponseModel struct {
	// The id of the application. Used to be: Uuid Needs to be globally unique This is likely to contain a guid but the property type should be string for future flexibility
	Id NullableString `json:"Id,omitempty"`
	// `DEPRECATED.  Use <see cref='Id'/>.` DEPRECATED. Use Id.
	// Deprecated
	Uid                           NullableInt32                  `json:"Uid,omitempty"`
	ApplicationFolder             *RefResponseModel              `json:"ApplicationFolder,omitempty"`
	ApplicationType               *ApplicationType               `json:"ApplicationType,omitempty"`
	PackagedApplicationType       *PackagedApplicationType       `json:"PackagedApplicationType,omitempty"`
	PackagedApplicationVisibility *PackagedApplicationVisibility `json:"PackagedApplicationVisibility,omitempty"`
	// The folder that the application belongs to as the user sees it.
	ClientFolder NullableString `json:"ClientFolder,omitempty"`
	// Delegated admin scopes in which the containers of the application reside.
	ContainerScopes []ContainerScopeResponseModel `json:"ContainerScopes,omitempty"`
	// The description of the application.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether this application is enumerable
	DoNotEnumerate *bool `json:"DoNotEnumerate,omitempty"`
	// Indicates whether this application can be launched.
	Enabled *bool `json:"Enabled,omitempty"`
	// The id of the icon used for the application. Used to be: IconUid (and it was not globally unique) Needs to be globally unique Might be constructed from site ID + internal Uid
	IconId                 NullableString             `json:"IconId,omitempty"`
	InstalledAppProperties *InstalledAppResponseModel `json:"InstalledAppProperties,omitempty"`
	PackagedAppProperties  *AppVAppResponseModel      `json:"PackagedAppProperties,omitempty"`
	AppVAppProperties      *AppVAppResponseModel      `json:"AppVAppProperties,omitempty"`
	// Location of published content.
	ContentLocation NullableString `json:"ContentLocation,omitempty"`
	// Name of the application.  Only seen by administrators.
	Name NullableString `json:"Name,omitempty"`
	// The name seen by end users who have access to the application.
	PublishedName NullableString `json:"PublishedName,omitempty"`
	// The metadata of application.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	// Indicates whether this application is visible to users.
	Visible     *bool        `json:"Visible,omitempty"`
	SharingKind *SharingKind `json:"SharingKind,omitempty"`
	// Tags associated with this application.
	Tags []string `json:"Tags,omitempty"`
	// The tenant(s) that the application is assigned to.  If `null`, the application is not assigned to any tenants, and may be used by any tenant.
	Tenants []RefResponseModel `json:"Tenants,omitempty"`
	// Indicates whether users are managed in the Citrix Cloud Library, or within Studio.
	CloudWorkspaceManaged *bool `json:"CloudWorkspaceManaged,omitempty"`
	// Number of delivery groups that the application is associated with.
	NumAssociatedDeliveryGroups *int32 `json:"NumAssociatedDeliveryGroups,omitempty"`
	// Number of application groups that the application is associated with.
	NumAssociatedApplicationGroups *int32 `json:"NumAssociatedApplicationGroups,omitempty"`
	// Delivery group Uuids that the application is associated with.
	AssociatedDeliveryGroupUuids []string `json:"AssociatedDeliveryGroupUuids,omitempty"`
	// Application group Uuids that the application is associated with.
	AssociatedApplicationGroupUuids []string `json:"AssociatedApplicationGroupUuids,omitempty"`
	// Application Zone info.
	ZoneId NullableString `json:"ZoneId,omitempty"`
	// Internal name of the application.
	BrowserName string `json:"BrowserName"`
	// Categories in which the application resides.
	Categories []string `json:"Categories,omitempty"`
	// All file types which are associated with the application.
	ConfiguredFtas   []FtaResponseModel `json:"ConfiguredFtas,omitempty"`
	CpuPriorityLevel CpuPriorityLevel   `json:"CpuPriorityLevel"`
	HomeZone         RefResponseModel   `json:"HomeZone"`
	HomeZoneMode     HomeZoneMode       `json:"HomeZoneMode"`
	// Indicates whether the IncludedUsers filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery group's access polic(ies) is implicitly granted access to the application.
	IncludedUserFilterEnabled bool `json:"IncludedUserFilterEnabled"`
	// Specifies whether the icon is gotten from user's computer at run time. If not specified, will not be changed.
	IconFromClient NullableBool `json:"IconFromClient,omitempty"`
	// The included users filter of the application; that is, the users and groups who are explicitly granted access to the published application.
	IncludedUsers []IdentityUserResponseModel `json:"IncludedUsers,omitempty"`
	// The maximum allowed concurrently running instances of the application that an individual user can have.
	MaxPerUserInstances NullableInt32 `json:"MaxPerUserInstances,omitempty"`
	// The maximum allowed total of concurrently running instances of the application within the site.
	MaxTotalInstances NullableInt32 `json:"MaxTotalInstances,omitempty"`
	// Indicates whether or not a shortcut to the application should be placed on the user device.
	ShortcutAddedToDesktop NullableBool `json:"ShortcutAddedToDesktop,omitempty"`
	// Indicates whether or not a shortcut to the application should be placed in the user's start menu on their user device.
	ShortcutAddedToStartMenu NullableBool `json:"ShortcutAddedToStartMenu,omitempty"`
	// Name of the start menu folder that holds the application shortcut (if any).
	StartMenuFolder NullableString `json:"StartMenuFolder,omitempty"`
	// Indicates whether or not the session waits for the printers to be created before allowing the user to interact with the session.
	WaitForPrinterCreation NullableBool `json:"WaitForPrinterCreation,omitempty"`
	// A list of zones that the application may launch.
	ZoneList []string `json:"ZoneList,omitempty"`
}

type _ApplicationDetailResponseModel ApplicationDetailResponseModel

// NewApplicationDetailResponseModel instantiates a new ApplicationDetailResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationDetailResponseModel(browserName string, cpuPriorityLevel CpuPriorityLevel, homeZone RefResponseModel, homeZoneMode HomeZoneMode, includedUserFilterEnabled bool) *ApplicationDetailResponseModel {
	this := ApplicationDetailResponseModel{}
	this.BrowserName = browserName
	this.CpuPriorityLevel = cpuPriorityLevel
	this.HomeZone = homeZone
	this.HomeZoneMode = homeZoneMode
	this.IncludedUserFilterEnabled = includedUserFilterEnabled
	return &this
}

// NewApplicationDetailResponseModelWithDefaults instantiates a new ApplicationDetailResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationDetailResponseModelWithDefaults() *ApplicationDetailResponseModel {
	this := ApplicationDetailResponseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ApplicationDetailResponseModel) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *ApplicationDetailResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetUid returns the Uid field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ApplicationDetailResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid.Get()) {
		var ret int32
		return ret
	}
	return *o.Uid.Get()
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ApplicationDetailResponseModel) GetUidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uid.Get(), o.Uid.IsSet()
}

// HasUid returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasUid() bool {
	if o != nil && o.Uid.IsSet() {
		return true
	}

	return false
}

// SetUid gets a reference to the given NullableInt32 and assigns it to the Uid field.
// Deprecated
func (o *ApplicationDetailResponseModel) SetUid(v int32) {
	o.Uid.Set(&v)
}

// SetUidNil sets the value for Uid to be an explicit nil
func (o *ApplicationDetailResponseModel) SetUidNil() {
	o.Uid.Set(nil)
}

// UnsetUid ensures that no value is present for Uid, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetUid() {
	o.Uid.Unset()
}

// GetApplicationFolder returns the ApplicationFolder field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetApplicationFolder() RefResponseModel {
	if o == nil || IsNil(o.ApplicationFolder) {
		var ret RefResponseModel
		return ret
	}
	return *o.ApplicationFolder
}

// GetApplicationFolderOk returns a tuple with the ApplicationFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetApplicationFolderOk() (*RefResponseModel, bool) {
	if o == nil || IsNil(o.ApplicationFolder) {
		return nil, false
	}
	return o.ApplicationFolder, true
}

// HasApplicationFolder returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasApplicationFolder() bool {
	if o != nil && !IsNil(o.ApplicationFolder) {
		return true
	}

	return false
}

// SetApplicationFolder gets a reference to the given RefResponseModel and assigns it to the ApplicationFolder field.
func (o *ApplicationDetailResponseModel) SetApplicationFolder(v RefResponseModel) {
	o.ApplicationFolder = &v
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetApplicationType() ApplicationType {
	if o == nil || IsNil(o.ApplicationType) {
		var ret ApplicationType
		return ret
	}
	return *o.ApplicationType
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetApplicationTypeOk() (*ApplicationType, bool) {
	if o == nil || IsNil(o.ApplicationType) {
		return nil, false
	}
	return o.ApplicationType, true
}

// HasApplicationType returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasApplicationType() bool {
	if o != nil && !IsNil(o.ApplicationType) {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given ApplicationType and assigns it to the ApplicationType field.
func (o *ApplicationDetailResponseModel) SetApplicationType(v ApplicationType) {
	o.ApplicationType = &v
}

// GetPackagedApplicationType returns the PackagedApplicationType field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetPackagedApplicationType() PackagedApplicationType {
	if o == nil || IsNil(o.PackagedApplicationType) {
		var ret PackagedApplicationType
		return ret
	}
	return *o.PackagedApplicationType
}

// GetPackagedApplicationTypeOk returns a tuple with the PackagedApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetPackagedApplicationTypeOk() (*PackagedApplicationType, bool) {
	if o == nil || IsNil(o.PackagedApplicationType) {
		return nil, false
	}
	return o.PackagedApplicationType, true
}

// HasPackagedApplicationType returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasPackagedApplicationType() bool {
	if o != nil && !IsNil(o.PackagedApplicationType) {
		return true
	}

	return false
}

// SetPackagedApplicationType gets a reference to the given PackagedApplicationType and assigns it to the PackagedApplicationType field.
func (o *ApplicationDetailResponseModel) SetPackagedApplicationType(v PackagedApplicationType) {
	o.PackagedApplicationType = &v
}

// GetPackagedApplicationVisibility returns the PackagedApplicationVisibility field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetPackagedApplicationVisibility() PackagedApplicationVisibility {
	if o == nil || IsNil(o.PackagedApplicationVisibility) {
		var ret PackagedApplicationVisibility
		return ret
	}
	return *o.PackagedApplicationVisibility
}

// GetPackagedApplicationVisibilityOk returns a tuple with the PackagedApplicationVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetPackagedApplicationVisibilityOk() (*PackagedApplicationVisibility, bool) {
	if o == nil || IsNil(o.PackagedApplicationVisibility) {
		return nil, false
	}
	return o.PackagedApplicationVisibility, true
}

// HasPackagedApplicationVisibility returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasPackagedApplicationVisibility() bool {
	if o != nil && !IsNil(o.PackagedApplicationVisibility) {
		return true
	}

	return false
}

// SetPackagedApplicationVisibility gets a reference to the given PackagedApplicationVisibility and assigns it to the PackagedApplicationVisibility field.
func (o *ApplicationDetailResponseModel) SetPackagedApplicationVisibility(v PackagedApplicationVisibility) {
	o.PackagedApplicationVisibility = &v
}

// GetClientFolder returns the ClientFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetClientFolder() string {
	if o == nil || IsNil(o.ClientFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ClientFolder.Get()
}

// GetClientFolderOk returns a tuple with the ClientFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetClientFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientFolder.Get(), o.ClientFolder.IsSet()
}

// HasClientFolder returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasClientFolder() bool {
	if o != nil && o.ClientFolder.IsSet() {
		return true
	}

	return false
}

// SetClientFolder gets a reference to the given NullableString and assigns it to the ClientFolder field.
func (o *ApplicationDetailResponseModel) SetClientFolder(v string) {
	o.ClientFolder.Set(&v)
}

// SetClientFolderNil sets the value for ClientFolder to be an explicit nil
func (o *ApplicationDetailResponseModel) SetClientFolderNil() {
	o.ClientFolder.Set(nil)
}

// UnsetClientFolder ensures that no value is present for ClientFolder, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetClientFolder() {
	o.ClientFolder.Unset()
}

// GetContainerScopes returns the ContainerScopes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetContainerScopes() []ContainerScopeResponseModel {
	if o == nil {
		var ret []ContainerScopeResponseModel
		return ret
	}
	return o.ContainerScopes
}

// GetContainerScopesOk returns a tuple with the ContainerScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetContainerScopesOk() ([]ContainerScopeResponseModel, bool) {
	if o == nil || IsNil(o.ContainerScopes) {
		return nil, false
	}
	return o.ContainerScopes, true
}

// HasContainerScopes returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasContainerScopes() bool {
	if o != nil && !IsNil(o.ContainerScopes) {
		return true
	}

	return false
}

// SetContainerScopes gets a reference to the given []ContainerScopeResponseModel and assigns it to the ContainerScopes field.
func (o *ApplicationDetailResponseModel) SetContainerScopes(v []ContainerScopeResponseModel) {
	o.ContainerScopes = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ApplicationDetailResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ApplicationDetailResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetDoNotEnumerate returns the DoNotEnumerate field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetDoNotEnumerate() bool {
	if o == nil || IsNil(o.DoNotEnumerate) {
		var ret bool
		return ret
	}
	return *o.DoNotEnumerate
}

// GetDoNotEnumerateOk returns a tuple with the DoNotEnumerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetDoNotEnumerateOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotEnumerate) {
		return nil, false
	}
	return o.DoNotEnumerate, true
}

// HasDoNotEnumerate returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasDoNotEnumerate() bool {
	if o != nil && !IsNil(o.DoNotEnumerate) {
		return true
	}

	return false
}

// SetDoNotEnumerate gets a reference to the given bool and assigns it to the DoNotEnumerate field.
func (o *ApplicationDetailResponseModel) SetDoNotEnumerate(v bool) {
	o.DoNotEnumerate = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApplicationDetailResponseModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIconId returns the IconId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetIconId() string {
	if o == nil || IsNil(o.IconId.Get()) {
		var ret string
		return ret
	}
	return *o.IconId.Get()
}

// GetIconIdOk returns a tuple with the IconId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetIconIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconId.Get(), o.IconId.IsSet()
}

// HasIconId returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasIconId() bool {
	if o != nil && o.IconId.IsSet() {
		return true
	}

	return false
}

// SetIconId gets a reference to the given NullableString and assigns it to the IconId field.
func (o *ApplicationDetailResponseModel) SetIconId(v string) {
	o.IconId.Set(&v)
}

// SetIconIdNil sets the value for IconId to be an explicit nil
func (o *ApplicationDetailResponseModel) SetIconIdNil() {
	o.IconId.Set(nil)
}

// UnsetIconId ensures that no value is present for IconId, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetIconId() {
	o.IconId.Unset()
}

// GetInstalledAppProperties returns the InstalledAppProperties field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetInstalledAppProperties() InstalledAppResponseModel {
	if o == nil || IsNil(o.InstalledAppProperties) {
		var ret InstalledAppResponseModel
		return ret
	}
	return *o.InstalledAppProperties
}

// GetInstalledAppPropertiesOk returns a tuple with the InstalledAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetInstalledAppPropertiesOk() (*InstalledAppResponseModel, bool) {
	if o == nil || IsNil(o.InstalledAppProperties) {
		return nil, false
	}
	return o.InstalledAppProperties, true
}

// HasInstalledAppProperties returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasInstalledAppProperties() bool {
	if o != nil && !IsNil(o.InstalledAppProperties) {
		return true
	}

	return false
}

// SetInstalledAppProperties gets a reference to the given InstalledAppResponseModel and assigns it to the InstalledAppProperties field.
func (o *ApplicationDetailResponseModel) SetInstalledAppProperties(v InstalledAppResponseModel) {
	o.InstalledAppProperties = &v
}

// GetPackagedAppProperties returns the PackagedAppProperties field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetPackagedAppProperties() AppVAppResponseModel {
	if o == nil || IsNil(o.PackagedAppProperties) {
		var ret AppVAppResponseModel
		return ret
	}
	return *o.PackagedAppProperties
}

// GetPackagedAppPropertiesOk returns a tuple with the PackagedAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetPackagedAppPropertiesOk() (*AppVAppResponseModel, bool) {
	if o == nil || IsNil(o.PackagedAppProperties) {
		return nil, false
	}
	return o.PackagedAppProperties, true
}

// HasPackagedAppProperties returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasPackagedAppProperties() bool {
	if o != nil && !IsNil(o.PackagedAppProperties) {
		return true
	}

	return false
}

// SetPackagedAppProperties gets a reference to the given AppVAppResponseModel and assigns it to the PackagedAppProperties field.
func (o *ApplicationDetailResponseModel) SetPackagedAppProperties(v AppVAppResponseModel) {
	o.PackagedAppProperties = &v
}

// GetAppVAppProperties returns the AppVAppProperties field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetAppVAppProperties() AppVAppResponseModel {
	if o == nil || IsNil(o.AppVAppProperties) {
		var ret AppVAppResponseModel
		return ret
	}
	return *o.AppVAppProperties
}

// GetAppVAppPropertiesOk returns a tuple with the AppVAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetAppVAppPropertiesOk() (*AppVAppResponseModel, bool) {
	if o == nil || IsNil(o.AppVAppProperties) {
		return nil, false
	}
	return o.AppVAppProperties, true
}

// HasAppVAppProperties returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasAppVAppProperties() bool {
	if o != nil && !IsNil(o.AppVAppProperties) {
		return true
	}

	return false
}

// SetAppVAppProperties gets a reference to the given AppVAppResponseModel and assigns it to the AppVAppProperties field.
func (o *ApplicationDetailResponseModel) SetAppVAppProperties(v AppVAppResponseModel) {
	o.AppVAppProperties = &v
}

// GetContentLocation returns the ContentLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetContentLocation() string {
	if o == nil || IsNil(o.ContentLocation.Get()) {
		var ret string
		return ret
	}
	return *o.ContentLocation.Get()
}

// GetContentLocationOk returns a tuple with the ContentLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetContentLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentLocation.Get(), o.ContentLocation.IsSet()
}

// HasContentLocation returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasContentLocation() bool {
	if o != nil && o.ContentLocation.IsSet() {
		return true
	}

	return false
}

// SetContentLocation gets a reference to the given NullableString and assigns it to the ContentLocation field.
func (o *ApplicationDetailResponseModel) SetContentLocation(v string) {
	o.ContentLocation.Set(&v)
}

// SetContentLocationNil sets the value for ContentLocation to be an explicit nil
func (o *ApplicationDetailResponseModel) SetContentLocationNil() {
	o.ContentLocation.Set(nil)
}

// UnsetContentLocation ensures that no value is present for ContentLocation, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetContentLocation() {
	o.ContentLocation.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ApplicationDetailResponseModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ApplicationDetailResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetPublishedName returns the PublishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetPublishedName() string {
	if o == nil || IsNil(o.PublishedName.Get()) {
		var ret string
		return ret
	}
	return *o.PublishedName.Get()
}

// GetPublishedNameOk returns a tuple with the PublishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetPublishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublishedName.Get(), o.PublishedName.IsSet()
}

// HasPublishedName returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasPublishedName() bool {
	if o != nil && o.PublishedName.IsSet() {
		return true
	}

	return false
}

// SetPublishedName gets a reference to the given NullableString and assigns it to the PublishedName field.
func (o *ApplicationDetailResponseModel) SetPublishedName(v string) {
	o.PublishedName.Set(&v)
}

// SetPublishedNameNil sets the value for PublishedName to be an explicit nil
func (o *ApplicationDetailResponseModel) SetPublishedNameNil() {
	o.PublishedName.Set(nil)
}

// UnsetPublishedName ensures that no value is present for PublishedName, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetPublishedName() {
	o.PublishedName.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetMetadata() []NameValueStringPairModel {
	if o == nil {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *ApplicationDetailResponseModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetVisible() bool {
	if o == nil || IsNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasVisible() bool {
	if o != nil && !IsNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ApplicationDetailResponseModel) SetVisible(v bool) {
	o.Visible = &v
}

// GetSharingKind returns the SharingKind field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetSharingKind() SharingKind {
	if o == nil || IsNil(o.SharingKind) {
		var ret SharingKind
		return ret
	}
	return *o.SharingKind
}

// GetSharingKindOk returns a tuple with the SharingKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetSharingKindOk() (*SharingKind, bool) {
	if o == nil || IsNil(o.SharingKind) {
		return nil, false
	}
	return o.SharingKind, true
}

// HasSharingKind returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasSharingKind() bool {
	if o != nil && !IsNil(o.SharingKind) {
		return true
	}

	return false
}

// SetSharingKind gets a reference to the given SharingKind and assigns it to the SharingKind field.
func (o *ApplicationDetailResponseModel) SetSharingKind(v SharingKind) {
	o.SharingKind = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ApplicationDetailResponseModel) SetTags(v []string) {
	o.Tags = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetTenants() []RefResponseModel {
	if o == nil {
		var ret []RefResponseModel
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetTenantsOk() ([]RefResponseModel, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []RefResponseModel and assigns it to the Tenants field.
func (o *ApplicationDetailResponseModel) SetTenants(v []RefResponseModel) {
	o.Tenants = v
}

// GetCloudWorkspaceManaged returns the CloudWorkspaceManaged field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetCloudWorkspaceManaged() bool {
	if o == nil || IsNil(o.CloudWorkspaceManaged) {
		var ret bool
		return ret
	}
	return *o.CloudWorkspaceManaged
}

// GetCloudWorkspaceManagedOk returns a tuple with the CloudWorkspaceManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetCloudWorkspaceManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CloudWorkspaceManaged) {
		return nil, false
	}
	return o.CloudWorkspaceManaged, true
}

// HasCloudWorkspaceManaged returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasCloudWorkspaceManaged() bool {
	if o != nil && !IsNil(o.CloudWorkspaceManaged) {
		return true
	}

	return false
}

// SetCloudWorkspaceManaged gets a reference to the given bool and assigns it to the CloudWorkspaceManaged field.
func (o *ApplicationDetailResponseModel) SetCloudWorkspaceManaged(v bool) {
	o.CloudWorkspaceManaged = &v
}

// GetNumAssociatedDeliveryGroups returns the NumAssociatedDeliveryGroups field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetNumAssociatedDeliveryGroups() int32 {
	if o == nil || IsNil(o.NumAssociatedDeliveryGroups) {
		var ret int32
		return ret
	}
	return *o.NumAssociatedDeliveryGroups
}

// GetNumAssociatedDeliveryGroupsOk returns a tuple with the NumAssociatedDeliveryGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetNumAssociatedDeliveryGroupsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumAssociatedDeliveryGroups) {
		return nil, false
	}
	return o.NumAssociatedDeliveryGroups, true
}

// HasNumAssociatedDeliveryGroups returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasNumAssociatedDeliveryGroups() bool {
	if o != nil && !IsNil(o.NumAssociatedDeliveryGroups) {
		return true
	}

	return false
}

// SetNumAssociatedDeliveryGroups gets a reference to the given int32 and assigns it to the NumAssociatedDeliveryGroups field.
func (o *ApplicationDetailResponseModel) SetNumAssociatedDeliveryGroups(v int32) {
	o.NumAssociatedDeliveryGroups = &v
}

// GetNumAssociatedApplicationGroups returns the NumAssociatedApplicationGroups field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModel) GetNumAssociatedApplicationGroups() int32 {
	if o == nil || IsNil(o.NumAssociatedApplicationGroups) {
		var ret int32
		return ret
	}
	return *o.NumAssociatedApplicationGroups
}

// GetNumAssociatedApplicationGroupsOk returns a tuple with the NumAssociatedApplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetNumAssociatedApplicationGroupsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumAssociatedApplicationGroups) {
		return nil, false
	}
	return o.NumAssociatedApplicationGroups, true
}

// HasNumAssociatedApplicationGroups returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasNumAssociatedApplicationGroups() bool {
	if o != nil && !IsNil(o.NumAssociatedApplicationGroups) {
		return true
	}

	return false
}

// SetNumAssociatedApplicationGroups gets a reference to the given int32 and assigns it to the NumAssociatedApplicationGroups field.
func (o *ApplicationDetailResponseModel) SetNumAssociatedApplicationGroups(v int32) {
	o.NumAssociatedApplicationGroups = &v
}

// GetAssociatedDeliveryGroupUuids returns the AssociatedDeliveryGroupUuids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetAssociatedDeliveryGroupUuids() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AssociatedDeliveryGroupUuids
}

// GetAssociatedDeliveryGroupUuidsOk returns a tuple with the AssociatedDeliveryGroupUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetAssociatedDeliveryGroupUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssociatedDeliveryGroupUuids) {
		return nil, false
	}
	return o.AssociatedDeliveryGroupUuids, true
}

// HasAssociatedDeliveryGroupUuids returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasAssociatedDeliveryGroupUuids() bool {
	if o != nil && !IsNil(o.AssociatedDeliveryGroupUuids) {
		return true
	}

	return false
}

// SetAssociatedDeliveryGroupUuids gets a reference to the given []string and assigns it to the AssociatedDeliveryGroupUuids field.
func (o *ApplicationDetailResponseModel) SetAssociatedDeliveryGroupUuids(v []string) {
	o.AssociatedDeliveryGroupUuids = v
}

// GetAssociatedApplicationGroupUuids returns the AssociatedApplicationGroupUuids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetAssociatedApplicationGroupUuids() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AssociatedApplicationGroupUuids
}

// GetAssociatedApplicationGroupUuidsOk returns a tuple with the AssociatedApplicationGroupUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetAssociatedApplicationGroupUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssociatedApplicationGroupUuids) {
		return nil, false
	}
	return o.AssociatedApplicationGroupUuids, true
}

// HasAssociatedApplicationGroupUuids returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasAssociatedApplicationGroupUuids() bool {
	if o != nil && !IsNil(o.AssociatedApplicationGroupUuids) {
		return true
	}

	return false
}

// SetAssociatedApplicationGroupUuids gets a reference to the given []string and assigns it to the AssociatedApplicationGroupUuids field.
func (o *ApplicationDetailResponseModel) SetAssociatedApplicationGroupUuids(v []string) {
	o.AssociatedApplicationGroupUuids = v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneId.Get()
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneId.Get(), o.ZoneId.IsSet()
}

// HasZoneId returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasZoneId() bool {
	if o != nil && o.ZoneId.IsSet() {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given NullableString and assigns it to the ZoneId field.
func (o *ApplicationDetailResponseModel) SetZoneId(v string) {
	o.ZoneId.Set(&v)
}

// SetZoneIdNil sets the value for ZoneId to be an explicit nil
func (o *ApplicationDetailResponseModel) SetZoneIdNil() {
	o.ZoneId.Set(nil)
}

// UnsetZoneId ensures that no value is present for ZoneId, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetZoneId() {
	o.ZoneId.Unset()
}

// GetBrowserName returns the BrowserName field value
func (o *ApplicationDetailResponseModel) GetBrowserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrowserName
}

// GetBrowserNameOk returns a tuple with the BrowserName field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetBrowserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrowserName, true
}

// SetBrowserName sets field value
func (o *ApplicationDetailResponseModel) SetBrowserName(v string) {
	o.BrowserName = v
}

// GetCategories returns the Categories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetCategories() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *ApplicationDetailResponseModel) SetCategories(v []string) {
	o.Categories = v
}

// GetConfiguredFtas returns the ConfiguredFtas field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetConfiguredFtas() []FtaResponseModel {
	if o == nil {
		var ret []FtaResponseModel
		return ret
	}
	return o.ConfiguredFtas
}

// GetConfiguredFtasOk returns a tuple with the ConfiguredFtas field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetConfiguredFtasOk() ([]FtaResponseModel, bool) {
	if o == nil || IsNil(o.ConfiguredFtas) {
		return nil, false
	}
	return o.ConfiguredFtas, true
}

// HasConfiguredFtas returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasConfiguredFtas() bool {
	if o != nil && !IsNil(o.ConfiguredFtas) {
		return true
	}

	return false
}

// SetConfiguredFtas gets a reference to the given []FtaResponseModel and assigns it to the ConfiguredFtas field.
func (o *ApplicationDetailResponseModel) SetConfiguredFtas(v []FtaResponseModel) {
	o.ConfiguredFtas = v
}

// GetCpuPriorityLevel returns the CpuPriorityLevel field value
func (o *ApplicationDetailResponseModel) GetCpuPriorityLevel() CpuPriorityLevel {
	if o == nil {
		var ret CpuPriorityLevel
		return ret
	}

	return o.CpuPriorityLevel
}

// GetCpuPriorityLevelOk returns a tuple with the CpuPriorityLevel field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetCpuPriorityLevelOk() (*CpuPriorityLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuPriorityLevel, true
}

// SetCpuPriorityLevel sets field value
func (o *ApplicationDetailResponseModel) SetCpuPriorityLevel(v CpuPriorityLevel) {
	o.CpuPriorityLevel = v
}

// GetHomeZone returns the HomeZone field value
func (o *ApplicationDetailResponseModel) GetHomeZone() RefResponseModel {
	if o == nil {
		var ret RefResponseModel
		return ret
	}

	return o.HomeZone
}

// GetHomeZoneOk returns a tuple with the HomeZone field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetHomeZoneOk() (*RefResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HomeZone, true
}

// SetHomeZone sets field value
func (o *ApplicationDetailResponseModel) SetHomeZone(v RefResponseModel) {
	o.HomeZone = v
}

// GetHomeZoneMode returns the HomeZoneMode field value
func (o *ApplicationDetailResponseModel) GetHomeZoneMode() HomeZoneMode {
	if o == nil {
		var ret HomeZoneMode
		return ret
	}

	return o.HomeZoneMode
}

// GetHomeZoneModeOk returns a tuple with the HomeZoneMode field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetHomeZoneModeOk() (*HomeZoneMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HomeZoneMode, true
}

// SetHomeZoneMode sets field value
func (o *ApplicationDetailResponseModel) SetHomeZoneMode(v HomeZoneMode) {
	o.HomeZoneMode = v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value
func (o *ApplicationDetailResponseModel) GetIncludedUserFilterEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedUserFilterEnabled, true
}

// SetIncludedUserFilterEnabled sets field value
func (o *ApplicationDetailResponseModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = v
}

// GetIconFromClient returns the IconFromClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetIconFromClient() bool {
	if o == nil || IsNil(o.IconFromClient.Get()) {
		var ret bool
		return ret
	}
	return *o.IconFromClient.Get()
}

// GetIconFromClientOk returns a tuple with the IconFromClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetIconFromClientOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconFromClient.Get(), o.IconFromClient.IsSet()
}

// HasIconFromClient returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasIconFromClient() bool {
	if o != nil && o.IconFromClient.IsSet() {
		return true
	}

	return false
}

// SetIconFromClient gets a reference to the given NullableBool and assigns it to the IconFromClient field.
func (o *ApplicationDetailResponseModel) SetIconFromClient(v bool) {
	o.IconFromClient.Set(&v)
}

// SetIconFromClientNil sets the value for IconFromClient to be an explicit nil
func (o *ApplicationDetailResponseModel) SetIconFromClientNil() {
	o.IconFromClient.Set(nil)
}

// UnsetIconFromClient ensures that no value is present for IconFromClient, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetIconFromClient() {
	o.IconFromClient.Unset()
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetIncludedUsers() []IdentityUserResponseModel {
	if o == nil {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetIncludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the IncludedUsers field.
func (o *ApplicationDetailResponseModel) SetIncludedUsers(v []IdentityUserResponseModel) {
	o.IncludedUsers = v
}

// GetMaxPerUserInstances returns the MaxPerUserInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetMaxPerUserInstances() int32 {
	if o == nil || IsNil(o.MaxPerUserInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxPerUserInstances.Get()
}

// GetMaxPerUserInstancesOk returns a tuple with the MaxPerUserInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetMaxPerUserInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxPerUserInstances.Get(), o.MaxPerUserInstances.IsSet()
}

// HasMaxPerUserInstances returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasMaxPerUserInstances() bool {
	if o != nil && o.MaxPerUserInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxPerUserInstances gets a reference to the given NullableInt32 and assigns it to the MaxPerUserInstances field.
func (o *ApplicationDetailResponseModel) SetMaxPerUserInstances(v int32) {
	o.MaxPerUserInstances.Set(&v)
}

// SetMaxPerUserInstancesNil sets the value for MaxPerUserInstances to be an explicit nil
func (o *ApplicationDetailResponseModel) SetMaxPerUserInstancesNil() {
	o.MaxPerUserInstances.Set(nil)
}

// UnsetMaxPerUserInstances ensures that no value is present for MaxPerUserInstances, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetMaxPerUserInstances() {
	o.MaxPerUserInstances.Unset()
}

// GetMaxTotalInstances returns the MaxTotalInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetMaxTotalInstances() int32 {
	if o == nil || IsNil(o.MaxTotalInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTotalInstances.Get()
}

// GetMaxTotalInstancesOk returns a tuple with the MaxTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetMaxTotalInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTotalInstances.Get(), o.MaxTotalInstances.IsSet()
}

// HasMaxTotalInstances returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasMaxTotalInstances() bool {
	if o != nil && o.MaxTotalInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxTotalInstances gets a reference to the given NullableInt32 and assigns it to the MaxTotalInstances field.
func (o *ApplicationDetailResponseModel) SetMaxTotalInstances(v int32) {
	o.MaxTotalInstances.Set(&v)
}

// SetMaxTotalInstancesNil sets the value for MaxTotalInstances to be an explicit nil
func (o *ApplicationDetailResponseModel) SetMaxTotalInstancesNil() {
	o.MaxTotalInstances.Set(nil)
}

// UnsetMaxTotalInstances ensures that no value is present for MaxTotalInstances, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetMaxTotalInstances() {
	o.MaxTotalInstances.Unset()
}

// GetShortcutAddedToDesktop returns the ShortcutAddedToDesktop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetShortcutAddedToDesktop() bool {
	if o == nil || IsNil(o.ShortcutAddedToDesktop.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToDesktop.Get()
}

// GetShortcutAddedToDesktopOk returns a tuple with the ShortcutAddedToDesktop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetShortcutAddedToDesktopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToDesktop.Get(), o.ShortcutAddedToDesktop.IsSet()
}

// HasShortcutAddedToDesktop returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasShortcutAddedToDesktop() bool {
	if o != nil && o.ShortcutAddedToDesktop.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToDesktop gets a reference to the given NullableBool and assigns it to the ShortcutAddedToDesktop field.
func (o *ApplicationDetailResponseModel) SetShortcutAddedToDesktop(v bool) {
	o.ShortcutAddedToDesktop.Set(&v)
}

// SetShortcutAddedToDesktopNil sets the value for ShortcutAddedToDesktop to be an explicit nil
func (o *ApplicationDetailResponseModel) SetShortcutAddedToDesktopNil() {
	o.ShortcutAddedToDesktop.Set(nil)
}

// UnsetShortcutAddedToDesktop ensures that no value is present for ShortcutAddedToDesktop, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetShortcutAddedToDesktop() {
	o.ShortcutAddedToDesktop.Unset()
}

// GetShortcutAddedToStartMenu returns the ShortcutAddedToStartMenu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetShortcutAddedToStartMenu() bool {
	if o == nil || IsNil(o.ShortcutAddedToStartMenu.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToStartMenu.Get()
}

// GetShortcutAddedToStartMenuOk returns a tuple with the ShortcutAddedToStartMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetShortcutAddedToStartMenuOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToStartMenu.Get(), o.ShortcutAddedToStartMenu.IsSet()
}

// HasShortcutAddedToStartMenu returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasShortcutAddedToStartMenu() bool {
	if o != nil && o.ShortcutAddedToStartMenu.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToStartMenu gets a reference to the given NullableBool and assigns it to the ShortcutAddedToStartMenu field.
func (o *ApplicationDetailResponseModel) SetShortcutAddedToStartMenu(v bool) {
	o.ShortcutAddedToStartMenu.Set(&v)
}

// SetShortcutAddedToStartMenuNil sets the value for ShortcutAddedToStartMenu to be an explicit nil
func (o *ApplicationDetailResponseModel) SetShortcutAddedToStartMenuNil() {
	o.ShortcutAddedToStartMenu.Set(nil)
}

// UnsetShortcutAddedToStartMenu ensures that no value is present for ShortcutAddedToStartMenu, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetShortcutAddedToStartMenu() {
	o.ShortcutAddedToStartMenu.Unset()
}

// GetStartMenuFolder returns the StartMenuFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetStartMenuFolder() string {
	if o == nil || IsNil(o.StartMenuFolder.Get()) {
		var ret string
		return ret
	}
	return *o.StartMenuFolder.Get()
}

// GetStartMenuFolderOk returns a tuple with the StartMenuFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetStartMenuFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartMenuFolder.Get(), o.StartMenuFolder.IsSet()
}

// HasStartMenuFolder returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasStartMenuFolder() bool {
	if o != nil && o.StartMenuFolder.IsSet() {
		return true
	}

	return false
}

// SetStartMenuFolder gets a reference to the given NullableString and assigns it to the StartMenuFolder field.
func (o *ApplicationDetailResponseModel) SetStartMenuFolder(v string) {
	o.StartMenuFolder.Set(&v)
}

// SetStartMenuFolderNil sets the value for StartMenuFolder to be an explicit nil
func (o *ApplicationDetailResponseModel) SetStartMenuFolderNil() {
	o.StartMenuFolder.Set(nil)
}

// UnsetStartMenuFolder ensures that no value is present for StartMenuFolder, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetStartMenuFolder() {
	o.StartMenuFolder.Unset()
}

// GetWaitForPrinterCreation returns the WaitForPrinterCreation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetWaitForPrinterCreation() bool {
	if o == nil || IsNil(o.WaitForPrinterCreation.Get()) {
		var ret bool
		return ret
	}
	return *o.WaitForPrinterCreation.Get()
}

// GetWaitForPrinterCreationOk returns a tuple with the WaitForPrinterCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetWaitForPrinterCreationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WaitForPrinterCreation.Get(), o.WaitForPrinterCreation.IsSet()
}

// HasWaitForPrinterCreation returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasWaitForPrinterCreation() bool {
	if o != nil && o.WaitForPrinterCreation.IsSet() {
		return true
	}

	return false
}

// SetWaitForPrinterCreation gets a reference to the given NullableBool and assigns it to the WaitForPrinterCreation field.
func (o *ApplicationDetailResponseModel) SetWaitForPrinterCreation(v bool) {
	o.WaitForPrinterCreation.Set(&v)
}

// SetWaitForPrinterCreationNil sets the value for WaitForPrinterCreation to be an explicit nil
func (o *ApplicationDetailResponseModel) SetWaitForPrinterCreationNil() {
	o.WaitForPrinterCreation.Set(nil)
}

// UnsetWaitForPrinterCreation ensures that no value is present for WaitForPrinterCreation, not even an explicit nil
func (o *ApplicationDetailResponseModel) UnsetWaitForPrinterCreation() {
	o.WaitForPrinterCreation.Unset()
}

// GetZoneList returns the ZoneList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationDetailResponseModel) GetZoneList() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ZoneList
}

// GetZoneListOk returns a tuple with the ZoneList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationDetailResponseModel) GetZoneListOk() ([]string, bool) {
	if o == nil || IsNil(o.ZoneList) {
		return nil, false
	}
	return o.ZoneList, true
}

// HasZoneList returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModel) HasZoneList() bool {
	if o != nil && !IsNil(o.ZoneList) {
		return true
	}

	return false
}

// SetZoneList gets a reference to the given []string and assigns it to the ZoneList field.
func (o *ApplicationDetailResponseModel) SetZoneList(v []string) {
	o.ZoneList = v
}

func (o ApplicationDetailResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationDetailResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if o.Uid.IsSet() {
		toSerialize["Uid"] = o.Uid.Get()
	}
	if !IsNil(o.ApplicationFolder) {
		toSerialize["ApplicationFolder"] = o.ApplicationFolder
	}
	if !IsNil(o.ApplicationType) {
		toSerialize["ApplicationType"] = o.ApplicationType
	}
	if !IsNil(o.PackagedApplicationType) {
		toSerialize["PackagedApplicationType"] = o.PackagedApplicationType
	}
	if !IsNil(o.PackagedApplicationVisibility) {
		toSerialize["PackagedApplicationVisibility"] = o.PackagedApplicationVisibility
	}
	if o.ClientFolder.IsSet() {
		toSerialize["ClientFolder"] = o.ClientFolder.Get()
	}
	if o.ContainerScopes != nil {
		toSerialize["ContainerScopes"] = o.ContainerScopes
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !IsNil(o.DoNotEnumerate) {
		toSerialize["DoNotEnumerate"] = o.DoNotEnumerate
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if o.IconId.IsSet() {
		toSerialize["IconId"] = o.IconId.Get()
	}
	if !IsNil(o.InstalledAppProperties) {
		toSerialize["InstalledAppProperties"] = o.InstalledAppProperties
	}
	if !IsNil(o.PackagedAppProperties) {
		toSerialize["PackagedAppProperties"] = o.PackagedAppProperties
	}
	if !IsNil(o.AppVAppProperties) {
		toSerialize["AppVAppProperties"] = o.AppVAppProperties
	}
	if o.ContentLocation.IsSet() {
		toSerialize["ContentLocation"] = o.ContentLocation.Get()
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.PublishedName.IsSet() {
		toSerialize["PublishedName"] = o.PublishedName.Get()
	}
	if o.Metadata != nil {
		toSerialize["Metadata"] = o.Metadata
	}
	if !IsNil(o.Visible) {
		toSerialize["Visible"] = o.Visible
	}
	if !IsNil(o.SharingKind) {
		toSerialize["SharingKind"] = o.SharingKind
	}
	if o.Tags != nil {
		toSerialize["Tags"] = o.Tags
	}
	if o.Tenants != nil {
		toSerialize["Tenants"] = o.Tenants
	}
	if !IsNil(o.CloudWorkspaceManaged) {
		toSerialize["CloudWorkspaceManaged"] = o.CloudWorkspaceManaged
	}
	if !IsNil(o.NumAssociatedDeliveryGroups) {
		toSerialize["NumAssociatedDeliveryGroups"] = o.NumAssociatedDeliveryGroups
	}
	if !IsNil(o.NumAssociatedApplicationGroups) {
		toSerialize["NumAssociatedApplicationGroups"] = o.NumAssociatedApplicationGroups
	}
	if o.AssociatedDeliveryGroupUuids != nil {
		toSerialize["AssociatedDeliveryGroupUuids"] = o.AssociatedDeliveryGroupUuids
	}
	if o.AssociatedApplicationGroupUuids != nil {
		toSerialize["AssociatedApplicationGroupUuids"] = o.AssociatedApplicationGroupUuids
	}
	if o.ZoneId.IsSet() {
		toSerialize["ZoneId"] = o.ZoneId.Get()
	}
	toSerialize["BrowserName"] = o.BrowserName
	if o.Categories != nil {
		toSerialize["Categories"] = o.Categories
	}
	if o.ConfiguredFtas != nil {
		toSerialize["ConfiguredFtas"] = o.ConfiguredFtas
	}
	toSerialize["CpuPriorityLevel"] = o.CpuPriorityLevel
	toSerialize["HomeZone"] = o.HomeZone
	toSerialize["HomeZoneMode"] = o.HomeZoneMode
	toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	if o.IconFromClient.IsSet() {
		toSerialize["IconFromClient"] = o.IconFromClient.Get()
	}
	if o.IncludedUsers != nil {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if o.MaxPerUserInstances.IsSet() {
		toSerialize["MaxPerUserInstances"] = o.MaxPerUserInstances.Get()
	}
	if o.MaxTotalInstances.IsSet() {
		toSerialize["MaxTotalInstances"] = o.MaxTotalInstances.Get()
	}
	if o.ShortcutAddedToDesktop.IsSet() {
		toSerialize["ShortcutAddedToDesktop"] = o.ShortcutAddedToDesktop.Get()
	}
	if o.ShortcutAddedToStartMenu.IsSet() {
		toSerialize["ShortcutAddedToStartMenu"] = o.ShortcutAddedToStartMenu.Get()
	}
	if o.StartMenuFolder.IsSet() {
		toSerialize["StartMenuFolder"] = o.StartMenuFolder.Get()
	}
	if o.WaitForPrinterCreation.IsSet() {
		toSerialize["WaitForPrinterCreation"] = o.WaitForPrinterCreation.Get()
	}
	if o.ZoneList != nil {
		toSerialize["ZoneList"] = o.ZoneList
	}
	return toSerialize, nil
}

type NullableApplicationDetailResponseModel struct {
	value *ApplicationDetailResponseModel
	isSet bool
}

func (v NullableApplicationDetailResponseModel) Get() *ApplicationDetailResponseModel {
	return v.value
}

func (v *NullableApplicationDetailResponseModel) Set(val *ApplicationDetailResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDetailResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDetailResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDetailResponseModel(val *ApplicationDetailResponseModel) *NullableApplicationDetailResponseModel {
	return &NullableApplicationDetailResponseModel{value: val, isSet: true}
}

func (v NullableApplicationDetailResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDetailResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
