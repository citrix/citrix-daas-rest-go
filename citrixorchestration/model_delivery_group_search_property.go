/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// DeliveryGroupSearchProperty Delivery Group properties can be used for advanced deliveryGroup searches.
type DeliveryGroupSearchProperty string

// List of DeliveryGroupSearchProperty
const (
	DELIVERYGROUPSEARCHPROPERTY_UID DeliveryGroupSearchProperty = "Uid"
	DELIVERYGROUPSEARCHPROPERTY_DESCRIPTION DeliveryGroupSearchProperty = "Description"
	DELIVERYGROUPSEARCHPROPERTY_DELIVERY_TYPE DeliveryGroupSearchProperty = "DeliveryType"
	DELIVERYGROUPSEARCHPROPERTY_ENABLED DeliveryGroupSearchProperty = "Enabled"
	DELIVERYGROUPSEARCHPROPERTY_IN_MAINTENANCE_MODE DeliveryGroupSearchProperty = "InMaintenanceMode"
	DELIVERYGROUPSEARCHPROPERTY_IS_REMOTE_PC DeliveryGroupSearchProperty = "IsRemotePC"
	DELIVERYGROUPSEARCHPROPERTY_MACHINE_LOG_ON_TYPE DeliveryGroupSearchProperty = "MachineLogOnType"
	DELIVERYGROUPSEARCHPROPERTY_NAME DeliveryGroupSearchProperty = "Name"
	DELIVERYGROUPSEARCHPROPERTY_PRODUCT_CODE DeliveryGroupSearchProperty = "ProductCode"
	DELIVERYGROUPSEARCHPROPERTY_SESSION_SUPPORT DeliveryGroupSearchProperty = "SessionSupport"
	DELIVERYGROUPSEARCHPROPERTY_TOTAL_APPLICATIONS DeliveryGroupSearchProperty = "TotalApplications"
)

// All allowed values of DeliveryGroupSearchProperty enum
var AllowedDeliveryGroupSearchPropertyEnumValues = []DeliveryGroupSearchProperty{
	"Uid",
	"Description",
	"DeliveryType",
	"Enabled",
	"InMaintenanceMode",
	"IsRemotePC",
	"MachineLogOnType",
	"Name",
	"ProductCode",
	"SessionSupport",
	"TotalApplications",
}

func (v *DeliveryGroupSearchProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeliveryGroupSearchProperty(value)
	for _, existing := range AllowedDeliveryGroupSearchPropertyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeliveryGroupSearchProperty", value)
}

// NewDeliveryGroupSearchPropertyFromValue returns a pointer to a valid DeliveryGroupSearchProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryGroupSearchPropertyFromValue(v string) (*DeliveryGroupSearchProperty, error) {
	ev := DeliveryGroupSearchProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryGroupSearchProperty: valid values are %v", v, AllowedDeliveryGroupSearchPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryGroupSearchProperty) IsValid() bool {
	for _, existing := range AllowedDeliveryGroupSearchPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeliveryGroupSearchProperty value
func (v DeliveryGroupSearchProperty) Ptr() *DeliveryGroupSearchProperty {
	return &v
}

type NullableDeliveryGroupSearchProperty struct {
	value *DeliveryGroupSearchProperty
	isSet bool
}

func (v NullableDeliveryGroupSearchProperty) Get() *DeliveryGroupSearchProperty {
	return v.value
}

func (v *NullableDeliveryGroupSearchProperty) Set(val *DeliveryGroupSearchProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryGroupSearchProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryGroupSearchProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryGroupSearchProperty(val *DeliveryGroupSearchProperty) *NullableDeliveryGroupSearchProperty {
	return &NullableDeliveryGroupSearchProperty{value: val, isSet: true}
}

func (v NullableDeliveryGroupSearchProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryGroupSearchProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

