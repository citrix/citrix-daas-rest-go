/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the RebootScheduleResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RebootScheduleResponseModel{}

// RebootScheduleResponseModel Response object for reboot schedule properties.
type RebootScheduleResponseModel struct {
	// Id of the reboot schedule. needs to be globally unique
	Id string `json:"Id"`
	// A friendly name for the reboot schedule.
	Name          string           `json:"Name"`
	DeliveryGroup RefResponseModel `json:"DeliveryGroup"`
	// Approximate maximum number of minutes over which the scheduled reboot cycle runs.
	RebootDurationMinutes int32               `json:"RebootDurationMinutes"`
	Day                   *RebootScheduleDays `json:"Day,omitempty"`
	// For weekly cycles, days of the week on which the scheduled reboot cycle starts.
	DaysInWeek  []RebootScheduleDays `json:"DaysInWeek,omitempty"`
	WeekInMonth *RebootScheduleWeeks `json:"WeekInMonth,omitempty"`
	DayInMonth  *RebootScheduleDays  `json:"DayInMonth,omitempty"`
	// An optional description for the reboot schedule.
	Description NullableString `json:"Description,omitempty"`
	// Indicates whether the reboot schedule is enabled.
	Enabled bool `json:"Enabled"`
	// Indicates whether the reboot schedule is active for maintained machines.
	IgnoreMaintenanceMode bool `json:"IgnoreMaintenanceMode"`
	// Indicates whether the reboot will be a natural reboot, where the machines will be rebooted when they have no sessions.
	UseNaturalReboot NullableBool            `json:"UseNaturalReboot,omitempty"`
	Frequency        RebootScheduleFrequency `json:"Frequency"`
	// The frequency factor for the schedule.
	FrequencyFactor NullableInt32     `json:"FrequencyFactor,omitempty"`
	RestrictToTag   *RefResponseModel `json:"RestrictToTag,omitempty"`
	// The date on which the schedule is expected to firstly run. RFC 3339 compatible format.
	StartDate NullableString `json:"StartDate,omitempty"`
	// Time of day at which the scheduled reboot cycle starts. RFC 3339 compatible format.
	StartTime string `json:"StartTime"`
	// Time prior to the start of a machine reboot at which a warning message is displayed to all the users on the machine.
	WarningDurationMinutes int32 `json:"WarningDurationMinutes"`
	// Warning message displayed in user sessions on a machine scheduled for reboot.
	WarningMessage NullableString `json:"WarningMessage,omitempty"`
	// Time to wait after the previous reboot warning before displaying the warning message in all user sessions on that machine again.
	WarningRepeatIntervalMinutes int32 `json:"WarningRepeatIntervalMinutes"`
	// The window title used when showing the warning message in user sessions on a machine scheduled for reboot.
	WarningTitle NullableString `json:"WarningTitle,omitempty"`
}

type _RebootScheduleResponseModel RebootScheduleResponseModel

// NewRebootScheduleResponseModel instantiates a new RebootScheduleResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRebootScheduleResponseModel(id string, name string, deliveryGroup RefResponseModel, rebootDurationMinutes int32, enabled bool, ignoreMaintenanceMode bool, frequency RebootScheduleFrequency, startTime string, warningDurationMinutes int32, warningRepeatIntervalMinutes int32) *RebootScheduleResponseModel {
	this := RebootScheduleResponseModel{}
	this.Id = id
	this.Name = name
	this.DeliveryGroup = deliveryGroup
	this.RebootDurationMinutes = rebootDurationMinutes
	this.Enabled = enabled
	this.IgnoreMaintenanceMode = ignoreMaintenanceMode
	this.Frequency = frequency
	this.StartTime = startTime
	this.WarningDurationMinutes = warningDurationMinutes
	this.WarningRepeatIntervalMinutes = warningRepeatIntervalMinutes
	return &this
}

// NewRebootScheduleResponseModelWithDefaults instantiates a new RebootScheduleResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRebootScheduleResponseModelWithDefaults() *RebootScheduleResponseModel {
	this := RebootScheduleResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *RebootScheduleResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RebootScheduleResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RebootScheduleResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RebootScheduleResponseModel) SetName(v string) {
	o.Name = v
}

// GetDeliveryGroup returns the DeliveryGroup field value
func (o *RebootScheduleResponseModel) GetDeliveryGroup() RefResponseModel {
	if o == nil {
		var ret RefResponseModel
		return ret
	}

	return o.DeliveryGroup
}

// GetDeliveryGroupOk returns a tuple with the DeliveryGroup field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetDeliveryGroupOk() (*RefResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryGroup, true
}

// SetDeliveryGroup sets field value
func (o *RebootScheduleResponseModel) SetDeliveryGroup(v RefResponseModel) {
	o.DeliveryGroup = v
}

// GetRebootDurationMinutes returns the RebootDurationMinutes field value
func (o *RebootScheduleResponseModel) GetRebootDurationMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RebootDurationMinutes
}

// GetRebootDurationMinutesOk returns a tuple with the RebootDurationMinutes field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetRebootDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RebootDurationMinutes, true
}

// SetRebootDurationMinutes sets field value
func (o *RebootScheduleResponseModel) SetRebootDurationMinutes(v int32) {
	o.RebootDurationMinutes = v
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *RebootScheduleResponseModel) GetDay() RebootScheduleDays {
	if o == nil || IsNil(o.Day) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetDayOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given RebootScheduleDays and assigns it to the Day field.
func (o *RebootScheduleResponseModel) SetDay(v RebootScheduleDays) {
	o.Day = &v
}

// GetDaysInWeek returns the DaysInWeek field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetDaysInWeek() []RebootScheduleDays {
	if o == nil {
		var ret []RebootScheduleDays
		return ret
	}
	return o.DaysInWeek
}

// GetDaysInWeekOk returns a tuple with the DaysInWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetDaysInWeekOk() ([]RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DaysInWeek) {
		return nil, false
	}
	return o.DaysInWeek, true
}

// HasDaysInWeek returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasDaysInWeek() bool {
	if o != nil && !IsNil(o.DaysInWeek) {
		return true
	}

	return false
}

// SetDaysInWeek gets a reference to the given []RebootScheduleDays and assigns it to the DaysInWeek field.
func (o *RebootScheduleResponseModel) SetDaysInWeek(v []RebootScheduleDays) {
	o.DaysInWeek = v
}

// GetWeekInMonth returns the WeekInMonth field value if set, zero value otherwise.
func (o *RebootScheduleResponseModel) GetWeekInMonth() RebootScheduleWeeks {
	if o == nil || IsNil(o.WeekInMonth) {
		var ret RebootScheduleWeeks
		return ret
	}
	return *o.WeekInMonth
}

// GetWeekInMonthOk returns a tuple with the WeekInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetWeekInMonthOk() (*RebootScheduleWeeks, bool) {
	if o == nil || IsNil(o.WeekInMonth) {
		return nil, false
	}
	return o.WeekInMonth, true
}

// HasWeekInMonth returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasWeekInMonth() bool {
	if o != nil && !IsNil(o.WeekInMonth) {
		return true
	}

	return false
}

// SetWeekInMonth gets a reference to the given RebootScheduleWeeks and assigns it to the WeekInMonth field.
func (o *RebootScheduleResponseModel) SetWeekInMonth(v RebootScheduleWeeks) {
	o.WeekInMonth = &v
}

// GetDayInMonth returns the DayInMonth field value if set, zero value otherwise.
func (o *RebootScheduleResponseModel) GetDayInMonth() RebootScheduleDays {
	if o == nil || IsNil(o.DayInMonth) {
		var ret RebootScheduleDays
		return ret
	}
	return *o.DayInMonth
}

// GetDayInMonthOk returns a tuple with the DayInMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetDayInMonthOk() (*RebootScheduleDays, bool) {
	if o == nil || IsNil(o.DayInMonth) {
		return nil, false
	}
	return o.DayInMonth, true
}

// HasDayInMonth returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasDayInMonth() bool {
	if o != nil && !IsNil(o.DayInMonth) {
		return true
	}

	return false
}

// SetDayInMonth gets a reference to the given RebootScheduleDays and assigns it to the DayInMonth field.
func (o *RebootScheduleResponseModel) SetDayInMonth(v RebootScheduleDays) {
	o.DayInMonth = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *RebootScheduleResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *RebootScheduleResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value
func (o *RebootScheduleResponseModel) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RebootScheduleResponseModel) SetEnabled(v bool) {
	o.Enabled = v
}

// GetIgnoreMaintenanceMode returns the IgnoreMaintenanceMode field value
func (o *RebootScheduleResponseModel) GetIgnoreMaintenanceMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IgnoreMaintenanceMode
}

// GetIgnoreMaintenanceModeOk returns a tuple with the IgnoreMaintenanceMode field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetIgnoreMaintenanceModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IgnoreMaintenanceMode, true
}

// SetIgnoreMaintenanceMode sets field value
func (o *RebootScheduleResponseModel) SetIgnoreMaintenanceMode(v bool) {
	o.IgnoreMaintenanceMode = v
}

// GetUseNaturalReboot returns the UseNaturalReboot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetUseNaturalReboot() bool {
	if o == nil || IsNil(o.UseNaturalReboot.Get()) {
		var ret bool
		return ret
	}
	return *o.UseNaturalReboot.Get()
}

// GetUseNaturalRebootOk returns a tuple with the UseNaturalReboot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetUseNaturalRebootOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.UseNaturalReboot.Get(), o.UseNaturalReboot.IsSet()
}

// HasUseNaturalReboot returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasUseNaturalReboot() bool {
	if o != nil && o.UseNaturalReboot.IsSet() {
		return true
	}

	return false
}

// SetUseNaturalReboot gets a reference to the given NullableBool and assigns it to the UseNaturalReboot field.
func (o *RebootScheduleResponseModel) SetUseNaturalReboot(v bool) {
	o.UseNaturalReboot.Set(&v)
}

// SetUseNaturalRebootNil sets the value for UseNaturalReboot to be an explicit nil
func (o *RebootScheduleResponseModel) SetUseNaturalRebootNil() {
	o.UseNaturalReboot.Set(nil)
}

// UnsetUseNaturalReboot ensures that no value is present for UseNaturalReboot, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetUseNaturalReboot() {
	o.UseNaturalReboot.Unset()
}

// GetFrequency returns the Frequency field value
func (o *RebootScheduleResponseModel) GetFrequency() RebootScheduleFrequency {
	if o == nil {
		var ret RebootScheduleFrequency
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetFrequencyOk() (*RebootScheduleFrequency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *RebootScheduleResponseModel) SetFrequency(v RebootScheduleFrequency) {
	o.Frequency = v
}

// GetFrequencyFactor returns the FrequencyFactor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetFrequencyFactor() int32 {
	if o == nil || IsNil(o.FrequencyFactor.Get()) {
		var ret int32
		return ret
	}
	return *o.FrequencyFactor.Get()
}

// GetFrequencyFactorOk returns a tuple with the FrequencyFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetFrequencyFactorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FrequencyFactor.Get(), o.FrequencyFactor.IsSet()
}

// HasFrequencyFactor returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasFrequencyFactor() bool {
	if o != nil && o.FrequencyFactor.IsSet() {
		return true
	}

	return false
}

// SetFrequencyFactor gets a reference to the given NullableInt32 and assigns it to the FrequencyFactor field.
func (o *RebootScheduleResponseModel) SetFrequencyFactor(v int32) {
	o.FrequencyFactor.Set(&v)
}

// SetFrequencyFactorNil sets the value for FrequencyFactor to be an explicit nil
func (o *RebootScheduleResponseModel) SetFrequencyFactorNil() {
	o.FrequencyFactor.Set(nil)
}

// UnsetFrequencyFactor ensures that no value is present for FrequencyFactor, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetFrequencyFactor() {
	o.FrequencyFactor.Unset()
}

// GetRestrictToTag returns the RestrictToTag field value if set, zero value otherwise.
func (o *RebootScheduleResponseModel) GetRestrictToTag() RefResponseModel {
	if o == nil || IsNil(o.RestrictToTag) {
		var ret RefResponseModel
		return ret
	}
	return *o.RestrictToTag
}

// GetRestrictToTagOk returns a tuple with the RestrictToTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetRestrictToTagOk() (*RefResponseModel, bool) {
	if o == nil || IsNil(o.RestrictToTag) {
		return nil, false
	}
	return o.RestrictToTag, true
}

// HasRestrictToTag returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasRestrictToTag() bool {
	if o != nil && !IsNil(o.RestrictToTag) {
		return true
	}

	return false
}

// SetRestrictToTag gets a reference to the given RefResponseModel and assigns it to the RestrictToTag field.
func (o *RebootScheduleResponseModel) SetRestrictToTag(v RefResponseModel) {
	o.RestrictToTag = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetStartDate() string {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret string
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableString and assigns it to the StartDate field.
func (o *RebootScheduleResponseModel) SetStartDate(v string) {
	o.StartDate.Set(&v)
}

// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *RebootScheduleResponseModel) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetStartTime returns the StartTime field value
func (o *RebootScheduleResponseModel) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *RebootScheduleResponseModel) SetStartTime(v string) {
	o.StartTime = v
}

// GetWarningDurationMinutes returns the WarningDurationMinutes field value
func (o *RebootScheduleResponseModel) GetWarningDurationMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WarningDurationMinutes
}

// GetWarningDurationMinutesOk returns a tuple with the WarningDurationMinutes field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetWarningDurationMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarningDurationMinutes, true
}

// SetWarningDurationMinutes sets field value
func (o *RebootScheduleResponseModel) SetWarningDurationMinutes(v int32) {
	o.WarningDurationMinutes = v
}

// GetWarningMessage returns the WarningMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetWarningMessage() string {
	if o == nil || IsNil(o.WarningMessage.Get()) {
		var ret string
		return ret
	}
	return *o.WarningMessage.Get()
}

// GetWarningMessageOk returns a tuple with the WarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetWarningMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningMessage.Get(), o.WarningMessage.IsSet()
}

// HasWarningMessage returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasWarningMessage() bool {
	if o != nil && o.WarningMessage.IsSet() {
		return true
	}

	return false
}

// SetWarningMessage gets a reference to the given NullableString and assigns it to the WarningMessage field.
func (o *RebootScheduleResponseModel) SetWarningMessage(v string) {
	o.WarningMessage.Set(&v)
}

// SetWarningMessageNil sets the value for WarningMessage to be an explicit nil
func (o *RebootScheduleResponseModel) SetWarningMessageNil() {
	o.WarningMessage.Set(nil)
}

// UnsetWarningMessage ensures that no value is present for WarningMessage, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetWarningMessage() {
	o.WarningMessage.Unset()
}

// GetWarningRepeatIntervalMinutes returns the WarningRepeatIntervalMinutes field value
func (o *RebootScheduleResponseModel) GetWarningRepeatIntervalMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WarningRepeatIntervalMinutes
}

// GetWarningRepeatIntervalMinutesOk returns a tuple with the WarningRepeatIntervalMinutes field value
// and a boolean to check if the value has been set.
func (o *RebootScheduleResponseModel) GetWarningRepeatIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarningRepeatIntervalMinutes, true
}

// SetWarningRepeatIntervalMinutes sets field value
func (o *RebootScheduleResponseModel) SetWarningRepeatIntervalMinutes(v int32) {
	o.WarningRepeatIntervalMinutes = v
}

// GetWarningTitle returns the WarningTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RebootScheduleResponseModel) GetWarningTitle() string {
	if o == nil || IsNil(o.WarningTitle.Get()) {
		var ret string
		return ret
	}
	return *o.WarningTitle.Get()
}

// GetWarningTitleOk returns a tuple with the WarningTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RebootScheduleResponseModel) GetWarningTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningTitle.Get(), o.WarningTitle.IsSet()
}

// HasWarningTitle returns a boolean if a field has been set.
func (o *RebootScheduleResponseModel) HasWarningTitle() bool {
	if o != nil && o.WarningTitle.IsSet() {
		return true
	}

	return false
}

// SetWarningTitle gets a reference to the given NullableString and assigns it to the WarningTitle field.
func (o *RebootScheduleResponseModel) SetWarningTitle(v string) {
	o.WarningTitle.Set(&v)
}

// SetWarningTitleNil sets the value for WarningTitle to be an explicit nil
func (o *RebootScheduleResponseModel) SetWarningTitleNil() {
	o.WarningTitle.Set(nil)
}

// UnsetWarningTitle ensures that no value is present for WarningTitle, not even an explicit nil
func (o *RebootScheduleResponseModel) UnsetWarningTitle() {
	o.WarningTitle.Unset()
}

func (o RebootScheduleResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RebootScheduleResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	toSerialize["DeliveryGroup"] = o.DeliveryGroup
	toSerialize["RebootDurationMinutes"] = o.RebootDurationMinutes
	if !IsNil(o.Day) {
		toSerialize["Day"] = o.Day
	}
	if o.DaysInWeek != nil {
		toSerialize["DaysInWeek"] = o.DaysInWeek
	}
	if !IsNil(o.WeekInMonth) {
		toSerialize["WeekInMonth"] = o.WeekInMonth
	}
	if !IsNil(o.DayInMonth) {
		toSerialize["DayInMonth"] = o.DayInMonth
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	toSerialize["Enabled"] = o.Enabled
	toSerialize["IgnoreMaintenanceMode"] = o.IgnoreMaintenanceMode
	if o.UseNaturalReboot.IsSet() {
		toSerialize["UseNaturalReboot"] = o.UseNaturalReboot.Get()
	}
	toSerialize["Frequency"] = o.Frequency
	if o.FrequencyFactor.IsSet() {
		toSerialize["FrequencyFactor"] = o.FrequencyFactor.Get()
	}
	if !IsNil(o.RestrictToTag) {
		toSerialize["RestrictToTag"] = o.RestrictToTag
	}
	if o.StartDate.IsSet() {
		toSerialize["StartDate"] = o.StartDate.Get()
	}
	toSerialize["StartTime"] = o.StartTime
	toSerialize["WarningDurationMinutes"] = o.WarningDurationMinutes
	if o.WarningMessage.IsSet() {
		toSerialize["WarningMessage"] = o.WarningMessage.Get()
	}
	toSerialize["WarningRepeatIntervalMinutes"] = o.WarningRepeatIntervalMinutes
	if o.WarningTitle.IsSet() {
		toSerialize["WarningTitle"] = o.WarningTitle.Get()
	}
	return toSerialize, nil
}

type NullableRebootScheduleResponseModel struct {
	value *RebootScheduleResponseModel
	isSet bool
}

func (v NullableRebootScheduleResponseModel) Get() *RebootScheduleResponseModel {
	return v.value
}

func (v *NullableRebootScheduleResponseModel) Set(val *RebootScheduleResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRebootScheduleResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRebootScheduleResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRebootScheduleResponseModel(val *RebootScheduleResponseModel) *NullableRebootScheduleResponseModel {
	return &NullableRebootScheduleResponseModel{value: val, isSet: true}
}

func (v NullableRebootScheduleResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRebootScheduleResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
