/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ADDirectoryEntryModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADDirectoryEntryModel{}

// ADDirectoryEntryModel struct for ADDirectoryEntryModel
type ADDirectoryEntryModel struct {
	// Name of the object
	Name *string `json:"Name,omitempty"`
	// Path of the object
	Path *string `json:"Path,omitempty"`
	// Forest of the object
	Forest *string `json:"Forest,omitempty"`
	// Cookie for use by the IActiveDirectoryService implementation
	Tag map[string]interface{} `json:"Tag,omitempty"`
	// True if this object can directly contain computer accounts
	CanContainComputer *bool `json:"CanContainComputer,omitempty"`
	// True if this object can indirectly contain computer accounts
	CanIndirectlyContainComputer *bool `json:"CanIndirectlyContainComputer,omitempty"`
	Parent *ADDirectoryEntryModelParent `json:"Parent,omitempty"`
	// Child entries of this object
	Children []ADDirectoryEntryModel `json:"Children,omitempty"`
}

// NewADDirectoryEntryModel instantiates a new ADDirectoryEntryModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDirectoryEntryModel() *ADDirectoryEntryModel {
	this := ADDirectoryEntryModel{}
	return &this
}

// NewADDirectoryEntryModelWithDefaults instantiates a new ADDirectoryEntryModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDirectoryEntryModelWithDefaults() *ADDirectoryEntryModel {
	this := ADDirectoryEntryModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ADDirectoryEntryModel) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ADDirectoryEntryModel) SetPath(v string) {
	o.Path = &v
}

// GetForest returns the Forest field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetForest() string {
	if o == nil || IsNil(o.Forest) {
		var ret string
		return ret
	}
	return *o.Forest
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetForestOk() (*string, bool) {
	if o == nil || IsNil(o.Forest) {
		return nil, false
	}
	return o.Forest, true
}

// HasForest returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasForest() bool {
	if o != nil && !IsNil(o.Forest) {
		return true
	}

	return false
}

// SetForest gets a reference to the given string and assigns it to the Forest field.
func (o *ADDirectoryEntryModel) SetForest(v string) {
	o.Forest = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetTag() map[string]interface{} {
	if o == nil || IsNil(o.Tag) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetTagOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return map[string]interface{}{}, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given map[string]interface{} and assigns it to the Tag field.
func (o *ADDirectoryEntryModel) SetTag(v map[string]interface{}) {
	o.Tag = v
}

// GetCanContainComputer returns the CanContainComputer field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetCanContainComputer() bool {
	if o == nil || IsNil(o.CanContainComputer) {
		var ret bool
		return ret
	}
	return *o.CanContainComputer
}

// GetCanContainComputerOk returns a tuple with the CanContainComputer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetCanContainComputerOk() (*bool, bool) {
	if o == nil || IsNil(o.CanContainComputer) {
		return nil, false
	}
	return o.CanContainComputer, true
}

// HasCanContainComputer returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasCanContainComputer() bool {
	if o != nil && !IsNil(o.CanContainComputer) {
		return true
	}

	return false
}

// SetCanContainComputer gets a reference to the given bool and assigns it to the CanContainComputer field.
func (o *ADDirectoryEntryModel) SetCanContainComputer(v bool) {
	o.CanContainComputer = &v
}

// GetCanIndirectlyContainComputer returns the CanIndirectlyContainComputer field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetCanIndirectlyContainComputer() bool {
	if o == nil || IsNil(o.CanIndirectlyContainComputer) {
		var ret bool
		return ret
	}
	return *o.CanIndirectlyContainComputer
}

// GetCanIndirectlyContainComputerOk returns a tuple with the CanIndirectlyContainComputer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetCanIndirectlyContainComputerOk() (*bool, bool) {
	if o == nil || IsNil(o.CanIndirectlyContainComputer) {
		return nil, false
	}
	return o.CanIndirectlyContainComputer, true
}

// HasCanIndirectlyContainComputer returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasCanIndirectlyContainComputer() bool {
	if o != nil && !IsNil(o.CanIndirectlyContainComputer) {
		return true
	}

	return false
}

// SetCanIndirectlyContainComputer gets a reference to the given bool and assigns it to the CanIndirectlyContainComputer field.
func (o *ADDirectoryEntryModel) SetCanIndirectlyContainComputer(v bool) {
	o.CanIndirectlyContainComputer = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetParent() ADDirectoryEntryModelParent {
	if o == nil || IsNil(o.Parent) {
		var ret ADDirectoryEntryModelParent
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetParentOk() (*ADDirectoryEntryModelParent, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ADDirectoryEntryModelParent and assigns it to the Parent field.
func (o *ADDirectoryEntryModel) SetParent(v ADDirectoryEntryModelParent) {
	o.Parent = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *ADDirectoryEntryModel) GetChildren() []ADDirectoryEntryModel {
	if o == nil || IsNil(o.Children) {
		var ret []ADDirectoryEntryModel
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDirectoryEntryModel) GetChildrenOk() ([]ADDirectoryEntryModel, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *ADDirectoryEntryModel) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []ADDirectoryEntryModel and assigns it to the Children field.
func (o *ADDirectoryEntryModel) SetChildren(v []ADDirectoryEntryModel) {
	o.Children = v
}

func (o ADDirectoryEntryModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADDirectoryEntryModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.Forest) {
		toSerialize["Forest"] = o.Forest
	}
	if !IsNil(o.Tag) {
		toSerialize["Tag"] = o.Tag
	}
	if !IsNil(o.CanContainComputer) {
		toSerialize["CanContainComputer"] = o.CanContainComputer
	}
	if !IsNil(o.CanIndirectlyContainComputer) {
		toSerialize["CanIndirectlyContainComputer"] = o.CanIndirectlyContainComputer
	}
	if !IsNil(o.Parent) {
		toSerialize["Parent"] = o.Parent
	}
	if !IsNil(o.Children) {
		toSerialize["Children"] = o.Children
	}
	return toSerialize, nil
}

type NullableADDirectoryEntryModel struct {
	value *ADDirectoryEntryModel
	isSet bool
}

func (v NullableADDirectoryEntryModel) Get() *ADDirectoryEntryModel {
	return v.value
}

func (v *NullableADDirectoryEntryModel) Set(val *ADDirectoryEntryModel) {
	v.value = val
	v.isSet = true
}

func (v NullableADDirectoryEntryModel) IsSet() bool {
	return v.isSet
}

func (v *NullableADDirectoryEntryModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDirectoryEntryModel(val *ADDirectoryEntryModel) *NullableADDirectoryEntryModel {
	return &NullableADDirectoryEntryModel{value: val, isSet: true}
}

func (v NullableADDirectoryEntryModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDirectoryEntryModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


