/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MachineAgentOptions 
type MachineAgentOptions string

// List of MachineAgentOptions
const (
	MACHINEAGENTOPTIONS_NONE MachineAgentOptions = "None"
	MACHINEAGENTOPTIONS_ENABLE_AZURE_AD_JOIN_AND_DEVICE_ENROLLMENT MachineAgentOptions = "EnableAzureAdJoinAndDeviceEnrollment"
	MACHINEAGENTOPTIONS_ENABLE_PAGE_FILE_SETTINGS_CUSTOMIZATION MachineAgentOptions = "EnablePageFileSettingsCustomization"
)

// All allowed values of MachineAgentOptions enum
var AllowedMachineAgentOptionsEnumValues = []MachineAgentOptions{
	"None",
	"EnableAzureAdJoinAndDeviceEnrollment",
	"EnablePageFileSettingsCustomization",
}

func (v *MachineAgentOptions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MachineAgentOptions(value)
	for _, existing := range AllowedMachineAgentOptionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MachineAgentOptions", value)
}

// NewMachineAgentOptionsFromValue returns a pointer to a valid MachineAgentOptions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMachineAgentOptionsFromValue(v string) (*MachineAgentOptions, error) {
	ev := MachineAgentOptions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MachineAgentOptions: valid values are %v", v, AllowedMachineAgentOptionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MachineAgentOptions) IsValid() bool {
	for _, existing := range AllowedMachineAgentOptionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MachineAgentOptions value
func (v MachineAgentOptions) Ptr() *MachineAgentOptions {
	return &v
}

type NullableMachineAgentOptions struct {
	value *MachineAgentOptions
	isSet bool
}

func (v NullableMachineAgentOptions) Get() *MachineAgentOptions {
	return v.value
}

func (v *NullableMachineAgentOptions) Set(val *MachineAgentOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineAgentOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineAgentOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineAgentOptions(val *MachineAgentOptions) *NullableMachineAgentOptions {
	return &NullableMachineAgentOptions{value: val, isSet: true}
}

func (v NullableMachineAgentOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineAgentOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

