/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IconDataResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IconDataResponseModel{}

// IconDataResponseModel Icon data
type IconDataResponseModel struct {
	// Raw icon data, Base64-encoded.
	RawData string `json:"RawData"`
	// Icon data in the requested format for display.  For example, if the caller requested \"image/png;32x32x24\" image format, then this will be a 32x32, 24bpp PNG-format image, Base64-encoded.  If the caller did not request an icon format, this will not be set.
	FormattedData NullableString `json:"FormattedData,omitempty"`
}

// NewIconDataResponseModel instantiates a new IconDataResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIconDataResponseModel(rawData string) *IconDataResponseModel {
	this := IconDataResponseModel{}
	this.RawData = rawData
	return &this
}

// NewIconDataResponseModelWithDefaults instantiates a new IconDataResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIconDataResponseModelWithDefaults() *IconDataResponseModel {
	this := IconDataResponseModel{}
	return &this
}

// GetRawData returns the RawData field value
func (o *IconDataResponseModel) GetRawData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value
// and a boolean to check if the value has been set.
func (o *IconDataResponseModel) GetRawDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawData, true
}

// SetRawData sets field value
func (o *IconDataResponseModel) SetRawData(v string) {
	o.RawData = v
}

// GetFormattedData returns the FormattedData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IconDataResponseModel) GetFormattedData() string {
	if o == nil || IsNil(o.FormattedData.Get()) {
		var ret string
		return ret
	}
	return *o.FormattedData.Get()
}

// GetFormattedDataOk returns a tuple with the FormattedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IconDataResponseModel) GetFormattedDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedData.Get(), o.FormattedData.IsSet()
}

// HasFormattedData returns a boolean if a field has been set.
func (o *IconDataResponseModel) HasFormattedData() bool {
	if o != nil && o.FormattedData.IsSet() {
		return true
	}

	return false
}

// SetFormattedData gets a reference to the given NullableString and assigns it to the FormattedData field.
func (o *IconDataResponseModel) SetFormattedData(v string) {
	o.FormattedData.Set(&v)
}

// SetFormattedDataNil sets the value for FormattedData to be an explicit nil
func (o *IconDataResponseModel) SetFormattedDataNil() {
	o.FormattedData.Set(nil)
}

// UnsetFormattedData ensures that no value is present for FormattedData, not even an explicit nil
func (o *IconDataResponseModel) UnsetFormattedData() {
	o.FormattedData.Unset()
}

func (o IconDataResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IconDataResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["RawData"] = o.RawData
	if o.FormattedData.IsSet() {
		toSerialize["FormattedData"] = o.FormattedData.Get()
	}
	return toSerialize, nil
}

type NullableIconDataResponseModel struct {
	value *IconDataResponseModel
	isSet bool
}

func (v NullableIconDataResponseModel) Get() *IconDataResponseModel {
	return v.value
}

func (v *NullableIconDataResponseModel) Set(val *IconDataResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIconDataResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIconDataResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIconDataResponseModel(val *IconDataResponseModel) *NullableIconDataResponseModel {
	return &NullableIconDataResponseModel{value: val, isSet: true}
}

func (v NullableIconDataResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIconDataResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
