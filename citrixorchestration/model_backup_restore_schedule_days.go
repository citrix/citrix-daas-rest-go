/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// BackupRestoreScheduleDays Backup Restore Schedule Days
type BackupRestoreScheduleDays string

// List of BackupRestoreScheduleDays
const (
	BACKUPRESTORESCHEDULEDAYS_NOT_DEFINED BackupRestoreScheduleDays = "NotDefined"
	BACKUPRESTORESCHEDULEDAYS_SUNDAY      BackupRestoreScheduleDays = "Sunday"
	BACKUPRESTORESCHEDULEDAYS_MONDAY      BackupRestoreScheduleDays = "Monday"
	BACKUPRESTORESCHEDULEDAYS_TUESDAY     BackupRestoreScheduleDays = "Tuesday"
	BACKUPRESTORESCHEDULEDAYS_WEDNESDAY   BackupRestoreScheduleDays = "Wednesday"
	BACKUPRESTORESCHEDULEDAYS_THURSDAY    BackupRestoreScheduleDays = "Thursday"
	BACKUPRESTORESCHEDULEDAYS_FRIDAY      BackupRestoreScheduleDays = "Friday"
	BACKUPRESTORESCHEDULEDAYS_SATURDAY    BackupRestoreScheduleDays = "Saturday"
)

// All allowed values of BackupRestoreScheduleDays enum
var AllowedBackupRestoreScheduleDaysEnumValues = []BackupRestoreScheduleDays{
	"NotDefined",
	"Sunday",
	"Monday",
	"Tuesday",
	"Wednesday",
	"Thursday",
	"Friday",
	"Saturday",
}

func (v *BackupRestoreScheduleDays) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = BackupRestoreScheduleDays(value)
	return nil
}

// NewBackupRestoreScheduleDaysFromValue returns a pointer to a valid BackupRestoreScheduleDays
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBackupRestoreScheduleDaysFromValue(v string) (*BackupRestoreScheduleDays, error) {
	ev := BackupRestoreScheduleDays(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BackupRestoreScheduleDays: valid values are %v", v, AllowedBackupRestoreScheduleDaysEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BackupRestoreScheduleDays) IsValid() bool {
	for _, existing := range AllowedBackupRestoreScheduleDaysEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BackupRestoreScheduleDays value
func (v BackupRestoreScheduleDays) Ptr() *BackupRestoreScheduleDays {
	return &v
}

type NullableBackupRestoreScheduleDays struct {
	value *BackupRestoreScheduleDays
	isSet bool
}

func (v NullableBackupRestoreScheduleDays) Get() *BackupRestoreScheduleDays {
	return v.value
}

func (v *NullableBackupRestoreScheduleDays) Set(val *BackupRestoreScheduleDays) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreScheduleDays) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreScheduleDays) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreScheduleDays(val *BackupRestoreScheduleDays) *NullableBackupRestoreScheduleDays {
	return &NullableBackupRestoreScheduleDays{value: val, isSet: true}
}

func (v NullableBackupRestoreScheduleDays) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreScheduleDays) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
