/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MaintenanceCycleSearchFilterGroupType The search filter group type
type MaintenanceCycleSearchFilterGroupType string

// List of MaintenanceCycleSearchFilterGroupType
const (
	MAINTENANCECYCLESEARCHFILTERGROUPTYPE_OR MaintenanceCycleSearchFilterGroupType = "Or"
	MAINTENANCECYCLESEARCHFILTERGROUPTYPE_AND MaintenanceCycleSearchFilterGroupType = "And"
)

// All allowed values of MaintenanceCycleSearchFilterGroupType enum
var AllowedMaintenanceCycleSearchFilterGroupTypeEnumValues = []MaintenanceCycleSearchFilterGroupType{
	"Or",
	"And",
}

func (v *MaintenanceCycleSearchFilterGroupType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = MaintenanceCycleSearchFilterGroupType(value)
	return nil
}

// NewMaintenanceCycleSearchFilterGroupTypeFromValue returns a pointer to a valid MaintenanceCycleSearchFilterGroupType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMaintenanceCycleSearchFilterGroupTypeFromValue(v string) (*MaintenanceCycleSearchFilterGroupType, error) {
	ev := MaintenanceCycleSearchFilterGroupType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MaintenanceCycleSearchFilterGroupType: valid values are %v", v, AllowedMaintenanceCycleSearchFilterGroupTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MaintenanceCycleSearchFilterGroupType) IsValid() bool {
	for _, existing := range AllowedMaintenanceCycleSearchFilterGroupTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MaintenanceCycleSearchFilterGroupType value
func (v MaintenanceCycleSearchFilterGroupType) Ptr() *MaintenanceCycleSearchFilterGroupType {
	return &v
}

type NullableMaintenanceCycleSearchFilterGroupType struct {
	value *MaintenanceCycleSearchFilterGroupType
	isSet bool
}

func (v NullableMaintenanceCycleSearchFilterGroupType) Get() *MaintenanceCycleSearchFilterGroupType {
	return v.value
}

func (v *NullableMaintenanceCycleSearchFilterGroupType) Set(val *MaintenanceCycleSearchFilterGroupType) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceCycleSearchFilterGroupType) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceCycleSearchFilterGroupType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceCycleSearchFilterGroupType(val *MaintenanceCycleSearchFilterGroupType) *NullableMaintenanceCycleSearchFilterGroupType {
	return &NullableMaintenanceCycleSearchFilterGroupType{value: val, isSet: true}
}

func (v NullableMaintenanceCycleSearchFilterGroupType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceCycleSearchFilterGroupType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

