/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PvsStreamingStoreResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PvsStreamingStoreResponseModel{}

// PvsStreamingStoreResponseModel PVS store object.
type PvsStreamingStoreResponseModel struct {
	// Id of the PVS store.
	StoreId *string `json:"StoreId,omitempty"`
	// Name of the PVS store.
	StoreName string `json:"StoreName"`
	// Id of the PVS site.
	SiteId *string `json:"SiteId,omitempty"`
}

// NewPvsStreamingStoreResponseModel instantiates a new PvsStreamingStoreResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPvsStreamingStoreResponseModel(storeName string) *PvsStreamingStoreResponseModel {
	this := PvsStreamingStoreResponseModel{}
	this.StoreName = storeName
	return &this
}

// NewPvsStreamingStoreResponseModelWithDefaults instantiates a new PvsStreamingStoreResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPvsStreamingStoreResponseModelWithDefaults() *PvsStreamingStoreResponseModel {
	this := PvsStreamingStoreResponseModel{}
	return &this
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *PvsStreamingStoreResponseModel) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingStoreResponseModel) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *PvsStreamingStoreResponseModel) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *PvsStreamingStoreResponseModel) SetStoreId(v string) {
	o.StoreId = &v
}

// GetStoreName returns the StoreName field value
func (o *PvsStreamingStoreResponseModel) GetStoreName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoreName
}

// GetStoreNameOk returns a tuple with the StoreName field value
// and a boolean to check if the value has been set.
func (o *PvsStreamingStoreResponseModel) GetStoreNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreName, true
}

// SetStoreName sets field value
func (o *PvsStreamingStoreResponseModel) SetStoreName(v string) {
	o.StoreName = v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *PvsStreamingStoreResponseModel) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PvsStreamingStoreResponseModel) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *PvsStreamingStoreResponseModel) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *PvsStreamingStoreResponseModel) SetSiteId(v string) {
	o.SiteId = &v
}

func (o PvsStreamingStoreResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PvsStreamingStoreResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StoreId) {
		toSerialize["StoreId"] = o.StoreId
	}
	toSerialize["StoreName"] = o.StoreName
	if !IsNil(o.SiteId) {
		toSerialize["SiteId"] = o.SiteId
	}
	return toSerialize, nil
}

type NullablePvsStreamingStoreResponseModel struct {
	value *PvsStreamingStoreResponseModel
	isSet bool
}

func (v NullablePvsStreamingStoreResponseModel) Get() *PvsStreamingStoreResponseModel {
	return v.value
}

func (v *NullablePvsStreamingStoreResponseModel) Set(val *PvsStreamingStoreResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePvsStreamingStoreResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePvsStreamingStoreResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePvsStreamingStoreResponseModel(val *PvsStreamingStoreResponseModel) *NullablePvsStreamingStoreResponseModel {
	return &NullablePvsStreamingStoreResponseModel{value: val, isSet: true}
}

func (v NullablePvsStreamingStoreResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePvsStreamingStoreResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


