/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the MachineApplicationResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineApplicationResponseModelAllOf{}

// MachineApplicationResponseModelAllOf Application published on, or in use on, a machine.
type MachineApplicationResponseModelAllOf struct {
	// Indicates whether the application is published on the machine.
	Published *bool `json:"Published,omitempty"`
	// Indicates whether the application is in use on the machine.
	InUse *bool `json:"InUse,omitempty"`
}

// NewMachineApplicationResponseModelAllOf instantiates a new MachineApplicationResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineApplicationResponseModelAllOf() *MachineApplicationResponseModelAllOf {
	this := MachineApplicationResponseModelAllOf{}
	return &this
}

// NewMachineApplicationResponseModelAllOfWithDefaults instantiates a new MachineApplicationResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineApplicationResponseModelAllOfWithDefaults() *MachineApplicationResponseModelAllOf {
	this := MachineApplicationResponseModelAllOf{}
	return &this
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *MachineApplicationResponseModelAllOf) GetPublished() bool {
	if o == nil || IsNil(o.Published) {
		var ret bool
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineApplicationResponseModelAllOf) GetPublishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *MachineApplicationResponseModelAllOf) HasPublished() bool {
	if o != nil && !IsNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given bool and assigns it to the Published field.
func (o *MachineApplicationResponseModelAllOf) SetPublished(v bool) {
	o.Published = &v
}

// GetInUse returns the InUse field value if set, zero value otherwise.
func (o *MachineApplicationResponseModelAllOf) GetInUse() bool {
	if o == nil || IsNil(o.InUse) {
		var ret bool
		return ret
	}
	return *o.InUse
}

// GetInUseOk returns a tuple with the InUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineApplicationResponseModelAllOf) GetInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.InUse) {
		return nil, false
	}
	return o.InUse, true
}

// HasInUse returns a boolean if a field has been set.
func (o *MachineApplicationResponseModelAllOf) HasInUse() bool {
	if o != nil && !IsNil(o.InUse) {
		return true
	}

	return false
}

// SetInUse gets a reference to the given bool and assigns it to the InUse field.
func (o *MachineApplicationResponseModelAllOf) SetInUse(v bool) {
	o.InUse = &v
}

func (o MachineApplicationResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineApplicationResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Published) {
		toSerialize["Published"] = o.Published
	}
	if !IsNil(o.InUse) {
		toSerialize["InUse"] = o.InUse
	}
	return toSerialize, nil
}

type NullableMachineApplicationResponseModelAllOf struct {
	value *MachineApplicationResponseModelAllOf
	isSet bool
}

func (v NullableMachineApplicationResponseModelAllOf) Get() *MachineApplicationResponseModelAllOf {
	return v.value
}

func (v *NullableMachineApplicationResponseModelAllOf) Set(val *MachineApplicationResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineApplicationResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineApplicationResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineApplicationResponseModelAllOf(val *MachineApplicationResponseModelAllOf) *NullableMachineApplicationResponseModelAllOf {
	return &NullableMachineApplicationResponseModelAllOf{value: val, isSet: true}
}

func (v NullableMachineApplicationResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineApplicationResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


