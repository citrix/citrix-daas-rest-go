/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// PrintDuplexSetting Duplex setting.
type PrintDuplexSetting string

// List of PrintDuplexSetting
const (
	PRINTDUPLEXSETTING_SIMPLEX PrintDuplexSetting = "Simplex"
	PRINTDUPLEXSETTING_VERTICAL PrintDuplexSetting = "Vertical"
	PRINTDUPLEXSETTING_HORIZONTAL PrintDuplexSetting = "Horizontal"
)

// All allowed values of PrintDuplexSetting enum
var AllowedPrintDuplexSettingEnumValues = []PrintDuplexSetting{
	"Simplex",
	"Vertical",
	"Horizontal",
}

func (v *PrintDuplexSetting) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = PrintDuplexSetting(value)
	return nil
}

// NewPrintDuplexSettingFromValue returns a pointer to a valid PrintDuplexSetting
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrintDuplexSettingFromValue(v string) (*PrintDuplexSetting, error) {
	ev := PrintDuplexSetting(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrintDuplexSetting: valid values are %v", v, AllowedPrintDuplexSettingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrintDuplexSetting) IsValid() bool {
	for _, existing := range AllowedPrintDuplexSettingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrintDuplexSetting value
func (v PrintDuplexSetting) Ptr() *PrintDuplexSetting {
	return &v
}

type NullablePrintDuplexSetting struct {
	value *PrintDuplexSetting
	isSet bool
}

func (v NullablePrintDuplexSetting) Get() *PrintDuplexSetting {
	return v.value
}

func (v *NullablePrintDuplexSetting) Set(val *PrintDuplexSetting) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintDuplexSetting) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintDuplexSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintDuplexSetting(val *PrintDuplexSetting) *NullablePrintDuplexSetting {
	return &NullablePrintDuplexSetting{value: val, isSet: true}
}

func (v NullablePrintDuplexSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintDuplexSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

