/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// ProvisionedVirtualMachineDetailsWarningType 
type ProvisionedVirtualMachineDetailsWarningType string

// List of ProvisionedVirtualMachineDetailsWarningType
const (
	PROVISIONEDVIRTUALMACHINEDETAILSWARNINGTYPE_UNKNOWN ProvisionedVirtualMachineDetailsWarningType = "Unknown"
	PROVISIONEDVIRTUALMACHINEDETAILSWARNINGTYPE_GET_PROVISIONED_VIRTUAL_MACHINE_CUSTOM_VM_DATA_FAILED ProvisionedVirtualMachineDetailsWarningType = "GetProvisionedVirtualMachineCustomVMDataFailed"
	PROVISIONEDVIRTUALMACHINEDETAILSWARNINGTYPE_GET_PROVISIONING_SCHEME_VM_METADATA_FAILED ProvisionedVirtualMachineDetailsWarningType = "GetProvisioningSchemeVMMetadataFailed"
)

// All allowed values of ProvisionedVirtualMachineDetailsWarningType enum
var AllowedProvisionedVirtualMachineDetailsWarningTypeEnumValues = []ProvisionedVirtualMachineDetailsWarningType{
	"Unknown",
	"GetProvisionedVirtualMachineCustomVMDataFailed",
	"GetProvisioningSchemeVMMetadataFailed",
}

func (v *ProvisionedVirtualMachineDetailsWarningType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProvisionedVirtualMachineDetailsWarningType(value)
	for _, existing := range AllowedProvisionedVirtualMachineDetailsWarningTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProvisionedVirtualMachineDetailsWarningType", value)
}

// NewProvisionedVirtualMachineDetailsWarningTypeFromValue returns a pointer to a valid ProvisionedVirtualMachineDetailsWarningType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProvisionedVirtualMachineDetailsWarningTypeFromValue(v string) (*ProvisionedVirtualMachineDetailsWarningType, error) {
	ev := ProvisionedVirtualMachineDetailsWarningType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProvisionedVirtualMachineDetailsWarningType: valid values are %v", v, AllowedProvisionedVirtualMachineDetailsWarningTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProvisionedVirtualMachineDetailsWarningType) IsValid() bool {
	for _, existing := range AllowedProvisionedVirtualMachineDetailsWarningTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProvisionedVirtualMachineDetailsWarningType value
func (v ProvisionedVirtualMachineDetailsWarningType) Ptr() *ProvisionedVirtualMachineDetailsWarningType {
	return &v
}

type NullableProvisionedVirtualMachineDetailsWarningType struct {
	value *ProvisionedVirtualMachineDetailsWarningType
	isSet bool
}

func (v NullableProvisionedVirtualMachineDetailsWarningType) Get() *ProvisionedVirtualMachineDetailsWarningType {
	return v.value
}

func (v *NullableProvisionedVirtualMachineDetailsWarningType) Set(val *ProvisionedVirtualMachineDetailsWarningType) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionedVirtualMachineDetailsWarningType) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionedVirtualMachineDetailsWarningType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionedVirtualMachineDetailsWarningType(val *ProvisionedVirtualMachineDetailsWarningType) *NullableProvisionedVirtualMachineDetailsWarningType {
	return &NullableProvisionedVirtualMachineDetailsWarningType{value: val, isSet: true}
}

func (v NullableProvisionedVirtualMachineDetailsWarningType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionedVirtualMachineDetailsWarningType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

