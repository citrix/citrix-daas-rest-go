/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the VDAComponentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VDAComponentModel{}

// VDAComponentModel Model of VDA component.
type VDAComponentModel struct {
	// Id of this component object.
	ComponentId *string `json:"ComponentId,omitempty"`
	// Name of this component object.
	ComponentName *string `json:"ComponentName,omitempty"`
	// Description of this component object.
	ComponentDescription *string `json:"ComponentDescription,omitempty"`
	// Parameters of this component object.
	Parameters []VDAComponentParameterModel `json:"Parameters,omitempty"`
}

// NewVDAComponentModel instantiates a new VDAComponentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVDAComponentModel() *VDAComponentModel {
	this := VDAComponentModel{}
	return &this
}

// NewVDAComponentModelWithDefaults instantiates a new VDAComponentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVDAComponentModelWithDefaults() *VDAComponentModel {
	this := VDAComponentModel{}
	return &this
}

// GetComponentId returns the ComponentId field value if set, zero value otherwise.
func (o *VDAComponentModel) GetComponentId() string {
	if o == nil || IsNil(o.ComponentId) {
		var ret string
		return ret
	}
	return *o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VDAComponentModel) GetComponentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentId) {
		return nil, false
	}
	return o.ComponentId, true
}

// HasComponentId returns a boolean if a field has been set.
func (o *VDAComponentModel) HasComponentId() bool {
	if o != nil && !IsNil(o.ComponentId) {
		return true
	}

	return false
}

// SetComponentId gets a reference to the given string and assigns it to the ComponentId field.
func (o *VDAComponentModel) SetComponentId(v string) {
	o.ComponentId = &v
}

// GetComponentName returns the ComponentName field value if set, zero value otherwise.
func (o *VDAComponentModel) GetComponentName() string {
	if o == nil || IsNil(o.ComponentName) {
		var ret string
		return ret
	}
	return *o.ComponentName
}

// GetComponentNameOk returns a tuple with the ComponentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VDAComponentModel) GetComponentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentName) {
		return nil, false
	}
	return o.ComponentName, true
}

// HasComponentName returns a boolean if a field has been set.
func (o *VDAComponentModel) HasComponentName() bool {
	if o != nil && !IsNil(o.ComponentName) {
		return true
	}

	return false
}

// SetComponentName gets a reference to the given string and assigns it to the ComponentName field.
func (o *VDAComponentModel) SetComponentName(v string) {
	o.ComponentName = &v
}

// GetComponentDescription returns the ComponentDescription field value if set, zero value otherwise.
func (o *VDAComponentModel) GetComponentDescription() string {
	if o == nil || IsNil(o.ComponentDescription) {
		var ret string
		return ret
	}
	return *o.ComponentDescription
}

// GetComponentDescriptionOk returns a tuple with the ComponentDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VDAComponentModel) GetComponentDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentDescription) {
		return nil, false
	}
	return o.ComponentDescription, true
}

// HasComponentDescription returns a boolean if a field has been set.
func (o *VDAComponentModel) HasComponentDescription() bool {
	if o != nil && !IsNil(o.ComponentDescription) {
		return true
	}

	return false
}

// SetComponentDescription gets a reference to the given string and assigns it to the ComponentDescription field.
func (o *VDAComponentModel) SetComponentDescription(v string) {
	o.ComponentDescription = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *VDAComponentModel) GetParameters() []VDAComponentParameterModel {
	if o == nil || IsNil(o.Parameters) {
		var ret []VDAComponentParameterModel
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VDAComponentModel) GetParametersOk() ([]VDAComponentParameterModel, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *VDAComponentModel) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []VDAComponentParameterModel and assigns it to the Parameters field.
func (o *VDAComponentModel) SetParameters(v []VDAComponentParameterModel) {
	o.Parameters = v
}

func (o VDAComponentModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VDAComponentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentId) {
		toSerialize["ComponentId"] = o.ComponentId
	}
	if !IsNil(o.ComponentName) {
		toSerialize["ComponentName"] = o.ComponentName
	}
	if !IsNil(o.ComponentDescription) {
		toSerialize["ComponentDescription"] = o.ComponentDescription
	}
	if !IsNil(o.Parameters) {
		toSerialize["Parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableVDAComponentModel struct {
	value *VDAComponentModel
	isSet bool
}

func (v NullableVDAComponentModel) Get() *VDAComponentModel {
	return v.value
}

func (v *NullableVDAComponentModel) Set(val *VDAComponentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVDAComponentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVDAComponentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVDAComponentModel(val *VDAComponentModel) *NullableVDAComponentModel {
	return &NullableVDAComponentModel{value: val, isSet: true}
}

func (v NullableVDAComponentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVDAComponentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


