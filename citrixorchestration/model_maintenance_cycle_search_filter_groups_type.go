/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MaintenanceCycleSearchFilterGroupsType The search filter groups type
type MaintenanceCycleSearchFilterGroupsType string

// List of MaintenanceCycleSearchFilterGroupsType
const (
	MAINTENANCECYCLESEARCHFILTERGROUPSTYPE_OR  MaintenanceCycleSearchFilterGroupsType = "Or"
	MAINTENANCECYCLESEARCHFILTERGROUPSTYPE_AND MaintenanceCycleSearchFilterGroupsType = "And"
)

// All allowed values of MaintenanceCycleSearchFilterGroupsType enum
var AllowedMaintenanceCycleSearchFilterGroupsTypeEnumValues = []MaintenanceCycleSearchFilterGroupsType{
	"Or",
	"And",
}

func (v *MaintenanceCycleSearchFilterGroupsType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = MaintenanceCycleSearchFilterGroupsType(value)
	return nil
}

// NewMaintenanceCycleSearchFilterGroupsTypeFromValue returns a pointer to a valid MaintenanceCycleSearchFilterGroupsType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMaintenanceCycleSearchFilterGroupsTypeFromValue(v string) (*MaintenanceCycleSearchFilterGroupsType, error) {
	ev := MaintenanceCycleSearchFilterGroupsType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MaintenanceCycleSearchFilterGroupsType: valid values are %v", v, AllowedMaintenanceCycleSearchFilterGroupsTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MaintenanceCycleSearchFilterGroupsType) IsValid() bool {
	for _, existing := range AllowedMaintenanceCycleSearchFilterGroupsTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MaintenanceCycleSearchFilterGroupsType value
func (v MaintenanceCycleSearchFilterGroupsType) Ptr() *MaintenanceCycleSearchFilterGroupsType {
	return &v
}

type NullableMaintenanceCycleSearchFilterGroupsType struct {
	value *MaintenanceCycleSearchFilterGroupsType
	isSet bool
}

func (v NullableMaintenanceCycleSearchFilterGroupsType) Get() *MaintenanceCycleSearchFilterGroupsType {
	return v.value
}

func (v *NullableMaintenanceCycleSearchFilterGroupsType) Set(val *MaintenanceCycleSearchFilterGroupsType) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceCycleSearchFilterGroupsType) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceCycleSearchFilterGroupsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceCycleSearchFilterGroupsType(val *MaintenanceCycleSearchFilterGroupsType) *NullableMaintenanceCycleSearchFilterGroupsType {
	return &NullableMaintenanceCycleSearchFilterGroupsType{value: val, isSet: true}
}

func (v NullableMaintenanceCycleSearchFilterGroupsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceCycleSearchFilterGroupsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
