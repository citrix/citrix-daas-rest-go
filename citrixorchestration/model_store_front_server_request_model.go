/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the StoreFrontServerRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StoreFrontServerRequestModel{}

// StoreFrontServerRequestModel Request object for specifying StoreFront URLs to configure within Receivers when they are hosted on a VDA.
type StoreFrontServerRequestModel struct {
	// ID of an existing StoreFront server.  If specified, this must be the only property specified in the request model.
	Id *string `json:"Id,omitempty"`
	// Name of the StoreFront server.
	Name *string `json:"Name,omitempty"`
	// Description of the StoreFront server.
	Description *string `json:"Description,omitempty"`
	// Url of the StoreFront server.
	Url *string `json:"Url,omitempty"`
	// Whether the StoreFront server is enabled.  Disabled StoreFront servers will not have thier URLs added to hosted receiver.
	Enabled *bool `json:"Enabled,omitempty"`
}

// NewStoreFrontServerRequestModel instantiates a new StoreFrontServerRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStoreFrontServerRequestModel() *StoreFrontServerRequestModel {
	this := StoreFrontServerRequestModel{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewStoreFrontServerRequestModelWithDefaults instantiates a new StoreFrontServerRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStoreFrontServerRequestModelWithDefaults() *StoreFrontServerRequestModel {
	this := StoreFrontServerRequestModel{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StoreFrontServerRequestModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerRequestModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StoreFrontServerRequestModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StoreFrontServerRequestModel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StoreFrontServerRequestModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerRequestModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StoreFrontServerRequestModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StoreFrontServerRequestModel) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StoreFrontServerRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StoreFrontServerRequestModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StoreFrontServerRequestModel) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *StoreFrontServerRequestModel) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerRequestModel) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *StoreFrontServerRequestModel) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *StoreFrontServerRequestModel) SetUrl(v string) {
	o.Url = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *StoreFrontServerRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StoreFrontServerRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *StoreFrontServerRequestModel) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *StoreFrontServerRequestModel) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o StoreFrontServerRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StoreFrontServerRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableStoreFrontServerRequestModel struct {
	value *StoreFrontServerRequestModel
	isSet bool
}

func (v NullableStoreFrontServerRequestModel) Get() *StoreFrontServerRequestModel {
	return v.value
}

func (v *NullableStoreFrontServerRequestModel) Set(val *StoreFrontServerRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStoreFrontServerRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStoreFrontServerRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStoreFrontServerRequestModel(val *StoreFrontServerRequestModel) *NullableStoreFrontServerRequestModel {
	return &NullableStoreFrontServerRequestModel{value: val, isSet: true}
}

func (v NullableStoreFrontServerRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStoreFrontServerRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


