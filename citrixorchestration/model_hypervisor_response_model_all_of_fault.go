/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorResponseModelAllOfFault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorResponseModelAllOfFault{}

// HypervisorResponseModelAllOfFault Hypervisor fault state info.
type HypervisorResponseModelAllOfFault struct {
	// Fault state associated with connection, or 'None' if OK.
	State *string `json:"State,omitempty"`
	// Exception error text associated with any fault state.
	Reason *string `json:"Reason,omitempty"`
	// Time at which the hypervisor entered fault state
	TimeEntered *string `json:"TimeEntered,omitempty"`
	// Period for which the hypervisor has been in fault state
	DurationInSeconds *float64 `json:"DurationInSeconds,omitempty"`
}

// NewHypervisorResponseModelAllOfFault instantiates a new HypervisorResponseModelAllOfFault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorResponseModelAllOfFault() *HypervisorResponseModelAllOfFault {
	this := HypervisorResponseModelAllOfFault{}
	return &this
}

// NewHypervisorResponseModelAllOfFaultWithDefaults instantiates a new HypervisorResponseModelAllOfFault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorResponseModelAllOfFaultWithDefaults() *HypervisorResponseModelAllOfFault {
	this := HypervisorResponseModelAllOfFault{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOfFault) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOfFault) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOfFault) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *HypervisorResponseModelAllOfFault) SetState(v string) {
	o.State = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOfFault) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOfFault) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOfFault) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *HypervisorResponseModelAllOfFault) SetReason(v string) {
	o.Reason = &v
}

// GetTimeEntered returns the TimeEntered field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOfFault) GetTimeEntered() string {
	if o == nil || IsNil(o.TimeEntered) {
		var ret string
		return ret
	}
	return *o.TimeEntered
}

// GetTimeEnteredOk returns a tuple with the TimeEntered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOfFault) GetTimeEnteredOk() (*string, bool) {
	if o == nil || IsNil(o.TimeEntered) {
		return nil, false
	}
	return o.TimeEntered, true
}

// HasTimeEntered returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOfFault) HasTimeEntered() bool {
	if o != nil && !IsNil(o.TimeEntered) {
		return true
	}

	return false
}

// SetTimeEntered gets a reference to the given string and assigns it to the TimeEntered field.
func (o *HypervisorResponseModelAllOfFault) SetTimeEntered(v string) {
	o.TimeEntered = &v
}

// GetDurationInSeconds returns the DurationInSeconds field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOfFault) GetDurationInSeconds() float64 {
	if o == nil || IsNil(o.DurationInSeconds) {
		var ret float64
		return ret
	}
	return *o.DurationInSeconds
}

// GetDurationInSecondsOk returns a tuple with the DurationInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOfFault) GetDurationInSecondsOk() (*float64, bool) {
	if o == nil || IsNil(o.DurationInSeconds) {
		return nil, false
	}
	return o.DurationInSeconds, true
}

// HasDurationInSeconds returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOfFault) HasDurationInSeconds() bool {
	if o != nil && !IsNil(o.DurationInSeconds) {
		return true
	}

	return false
}

// SetDurationInSeconds gets a reference to the given float64 and assigns it to the DurationInSeconds field.
func (o *HypervisorResponseModelAllOfFault) SetDurationInSeconds(v float64) {
	o.DurationInSeconds = &v
}

func (o HypervisorResponseModelAllOfFault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorResponseModelAllOfFault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["State"] = o.State
	}
	if !IsNil(o.Reason) {
		toSerialize["Reason"] = o.Reason
	}
	if !IsNil(o.TimeEntered) {
		toSerialize["TimeEntered"] = o.TimeEntered
	}
	if !IsNil(o.DurationInSeconds) {
		toSerialize["DurationInSeconds"] = o.DurationInSeconds
	}
	return toSerialize, nil
}

type NullableHypervisorResponseModelAllOfFault struct {
	value *HypervisorResponseModelAllOfFault
	isSet bool
}

func (v NullableHypervisorResponseModelAllOfFault) Get() *HypervisorResponseModelAllOfFault {
	return v.value
}

func (v *NullableHypervisorResponseModelAllOfFault) Set(val *HypervisorResponseModelAllOfFault) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorResponseModelAllOfFault) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorResponseModelAllOfFault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorResponseModelAllOfFault(val *HypervisorResponseModelAllOfFault) *NullableHypervisorResponseModelAllOfFault {
	return &NullableHypervisorResponseModelAllOfFault{value: val, isSet: true}
}

func (v NullableHypervisorResponseModelAllOfFault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorResponseModelAllOfFault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


