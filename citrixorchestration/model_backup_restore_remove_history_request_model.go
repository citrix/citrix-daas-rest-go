/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"time"
)

// checks if the BackupRestoreRemoveHistoryRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreRemoveHistoryRequestModel{}

// BackupRestoreRemoveHistoryRequestModel Remove History records within date range
type BackupRestoreRemoveHistoryRequestModel struct {
	// Start date to remove history
	StartDate time.Time `json:"StartDate"`
	// End date to remove history
	EndDate time.Time `json:"EndDate"`
}

// NewBackupRestoreRemoveHistoryRequestModel instantiates a new BackupRestoreRemoveHistoryRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreRemoveHistoryRequestModel(startDate time.Time, endDate time.Time) *BackupRestoreRemoveHistoryRequestModel {
	this := BackupRestoreRemoveHistoryRequestModel{}
	this.StartDate = startDate
	this.EndDate = endDate
	return &this
}

// NewBackupRestoreRemoveHistoryRequestModelWithDefaults instantiates a new BackupRestoreRemoveHistoryRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreRemoveHistoryRequestModelWithDefaults() *BackupRestoreRemoveHistoryRequestModel {
	this := BackupRestoreRemoveHistoryRequestModel{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *BackupRestoreRemoveHistoryRequestModel) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRemoveHistoryRequestModel) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *BackupRestoreRemoveHistoryRequestModel) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *BackupRestoreRemoveHistoryRequestModel) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRemoveHistoryRequestModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *BackupRestoreRemoveHistoryRequestModel) SetEndDate(v time.Time) {
	o.EndDate = v
}

func (o BackupRestoreRemoveHistoryRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreRemoveHistoryRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["StartDate"] = o.StartDate
	toSerialize["EndDate"] = o.EndDate
	return toSerialize, nil
}

type NullableBackupRestoreRemoveHistoryRequestModel struct {
	value *BackupRestoreRemoveHistoryRequestModel
	isSet bool
}

func (v NullableBackupRestoreRemoveHistoryRequestModel) Get() *BackupRestoreRemoveHistoryRequestModel {
	return v.value
}

func (v *NullableBackupRestoreRemoveHistoryRequestModel) Set(val *BackupRestoreRemoveHistoryRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreRemoveHistoryRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreRemoveHistoryRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreRemoveHistoryRequestModel(val *BackupRestoreRemoveHistoryRequestModel) *NullableBackupRestoreRemoveHistoryRequestModel {
	return &NullableBackupRestoreRemoveHistoryRequestModel{value: val, isSet: true}
}

func (v NullableBackupRestoreRemoveHistoryRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreRemoveHistoryRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


