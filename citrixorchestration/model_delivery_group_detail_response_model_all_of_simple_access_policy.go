/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy{}

// DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy Simplified access policy for connections to the delivery group. CHANGE: was public SimplifiedAccessPolicyResponseModel[] AccessPolicies { get; set; }  If the delivery group does not have exactly 1 access policy, this property will be null. If the delivery group has exactly 1 access policy, BUT the access policy is Enabled==false, this property will be null. If the delivery group has exactly 1 access policy, BUT the access policy cannot be represented by the SimplifiedAccessPolicyResponseModel, this property will be null. -> For example, if any of the Excluded*Enabled properties are true. -> For example, if any of the IncludedClient*FilterEnabled properties are true. -> For example, if IncludedDesktopGroups or IncludedDesktopGroupFilter are true.  The intent is to represent access control rules in the same simplified model as is exposed through Studio.  Customers who need more control can use the low-level PowerShell API or the AdvancedAccessPolicies API to access the full expressiveness of the access control model.  If Studio encounters a delivery group with this property returning null, it should switch into a mode that informs the admin they must configure access control through the PowerShell API since it cannot be represented in the UI.
type DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy struct {
	// Whether anonymous connections are allowed to the delivery group.
	AllowAnonymous bool `json:"AllowAnonymous"`
	// Whether HDX connections are allowed to the delivery group. CHANGE: was: public bool AllowsHdxAccess { get; set; }
	AllowHdxAccess bool `json:"AllowHdxAccess"`
	// Whether users are allowed to self-service restart machines.
	AllowMachineRestart *bool `json:"AllowMachineRestart,omitempty"`
	// Whether RDP connections are allowed to the delivery group. CHANGE: was: public bool AllowsRdpAccess { get; set; }
	AllowRdpAccess bool `json:"AllowRdpAccess"`
	// Whether connections that do not come through NetScaler Gateway are allowed. CHANGE: was: public bool ConnectNotViaAccessGatewayAllowed { get; set; }
	ConnectNotViaNetScalerGatewayAllowed bool `json:"ConnectNotViaNetScalerGatewayAllowed"`
	// Whether connections that come through NetScaler Gateway are allowed. CHANGE: was: public bool ConnectViaAccessGatewayAllowed { get; set; }
	ConnectViaNetScalerGatewayAllowed bool `json:"ConnectViaNetScalerGatewayAllowed"`
	// Indicates whether the IncludedSmartAccessTags filter is enabled.  If the filter is disabled, it is ignored when the access policy is evaluated. CHANGE: was: public bool AccessGatewayConnectionsUseFilters { get; set; }
	IncludedSmartAccessFilterEnabled bool `json:"IncludedSmartAccessFilterEnabled"`
	// The SmartAccess tags which grant access to the delivery group, if any occur in those provided by NetScaler Gateway with the user's connection.
	IncludedSmartAccessTags []SmartAccessTagResponseModel `json:"IncludedSmartAccessTags,omitempty"`
	// Indicates whether the IncludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	IncludedUserFilterEnabled bool `json:"IncludedUserFilterEnabled"`
	// The users and groups who are granted access to the delivery group. CHANGE: was: public ADAccount[] IncludedUsers { get; set; }
	IncludedUsers []IdentityUserResponseModel `json:"IncludedUsers,omitempty"`
	// Indicates whether the ExcludedUsers filter is enabled. If the filter is disabled, it is ignored when the access policy is evaluated.
	ExcludedUserFilterEnabled bool `json:"ExcludedUserFilterEnabled"`
	// The users and groups who are denied access to the delivery group.
	ExcludedUsers []IdentityUserResponseModel `json:"ExcludedUsers,omitempty"`
}

// NewDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy instantiates a new DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy(allowAnonymous bool, allowHdxAccess bool, allowRdpAccess bool, connectNotViaNetScalerGatewayAllowed bool, connectViaNetScalerGatewayAllowed bool, includedSmartAccessFilterEnabled bool, includedUserFilterEnabled bool, excludedUserFilterEnabled bool) *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy {
	this := DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy{}
	this.AllowAnonymous = allowAnonymous
	this.AllowHdxAccess = allowHdxAccess
	this.AllowRdpAccess = allowRdpAccess
	this.ConnectNotViaNetScalerGatewayAllowed = connectNotViaNetScalerGatewayAllowed
	this.ConnectViaNetScalerGatewayAllowed = connectViaNetScalerGatewayAllowed
	this.IncludedSmartAccessFilterEnabled = includedSmartAccessFilterEnabled
	this.IncludedUserFilterEnabled = includedUserFilterEnabled
	this.ExcludedUserFilterEnabled = excludedUserFilterEnabled
	return &this
}

// NewDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicyWithDefaults instantiates a new DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicyWithDefaults() *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy {
	this := DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy{}
	return &this
}

// GetAllowAnonymous returns the AllowAnonymous field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowAnonymous() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowAnonymous
}

// GetAllowAnonymousOk returns a tuple with the AllowAnonymous field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowAnonymousOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowAnonymous, true
}

// SetAllowAnonymous sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetAllowAnonymous(v bool) {
	o.AllowAnonymous = v
}

// GetAllowHdxAccess returns the AllowHdxAccess field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowHdxAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowHdxAccess
}

// GetAllowHdxAccessOk returns a tuple with the AllowHdxAccess field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowHdxAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowHdxAccess, true
}

// SetAllowHdxAccess sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetAllowHdxAccess(v bool) {
	o.AllowHdxAccess = v
}

// GetAllowMachineRestart returns the AllowMachineRestart field value if set, zero value otherwise.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowMachineRestart() bool {
	if o == nil || IsNil(o.AllowMachineRestart) {
		var ret bool
		return ret
	}
	return *o.AllowMachineRestart
}

// GetAllowMachineRestartOk returns a tuple with the AllowMachineRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowMachineRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowMachineRestart) {
		return nil, false
	}
	return o.AllowMachineRestart, true
}

// HasAllowMachineRestart returns a boolean if a field has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) HasAllowMachineRestart() bool {
	if o != nil && !IsNil(o.AllowMachineRestart) {
		return true
	}

	return false
}

// SetAllowMachineRestart gets a reference to the given bool and assigns it to the AllowMachineRestart field.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetAllowMachineRestart(v bool) {
	o.AllowMachineRestart = &v
}

// GetAllowRdpAccess returns the AllowRdpAccess field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowRdpAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowRdpAccess
}

// GetAllowRdpAccessOk returns a tuple with the AllowRdpAccess field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetAllowRdpAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowRdpAccess, true
}

// SetAllowRdpAccess sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetAllowRdpAccess(v bool) {
	o.AllowRdpAccess = v
}

// GetConnectNotViaNetScalerGatewayAllowed returns the ConnectNotViaNetScalerGatewayAllowed field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetConnectNotViaNetScalerGatewayAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ConnectNotViaNetScalerGatewayAllowed
}

// GetConnectNotViaNetScalerGatewayAllowedOk returns a tuple with the ConnectNotViaNetScalerGatewayAllowed field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetConnectNotViaNetScalerGatewayAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectNotViaNetScalerGatewayAllowed, true
}

// SetConnectNotViaNetScalerGatewayAllowed sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetConnectNotViaNetScalerGatewayAllowed(v bool) {
	o.ConnectNotViaNetScalerGatewayAllowed = v
}

// GetConnectViaNetScalerGatewayAllowed returns the ConnectViaNetScalerGatewayAllowed field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetConnectViaNetScalerGatewayAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ConnectViaNetScalerGatewayAllowed
}

// GetConnectViaNetScalerGatewayAllowedOk returns a tuple with the ConnectViaNetScalerGatewayAllowed field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetConnectViaNetScalerGatewayAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectViaNetScalerGatewayAllowed, true
}

// SetConnectViaNetScalerGatewayAllowed sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetConnectViaNetScalerGatewayAllowed(v bool) {
	o.ConnectViaNetScalerGatewayAllowed = v
}

// GetIncludedSmartAccessFilterEnabled returns the IncludedSmartAccessFilterEnabled field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedSmartAccessFilterEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludedSmartAccessFilterEnabled
}

// GetIncludedSmartAccessFilterEnabledOk returns a tuple with the IncludedSmartAccessFilterEnabled field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedSmartAccessFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedSmartAccessFilterEnabled, true
}

// SetIncludedSmartAccessFilterEnabled sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetIncludedSmartAccessFilterEnabled(v bool) {
	o.IncludedSmartAccessFilterEnabled = v
}

// GetIncludedSmartAccessTags returns the IncludedSmartAccessTags field value if set, zero value otherwise.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedSmartAccessTags() []SmartAccessTagResponseModel {
	if o == nil || IsNil(o.IncludedSmartAccessTags) {
		var ret []SmartAccessTagResponseModel
		return ret
	}
	return o.IncludedSmartAccessTags
}

// GetIncludedSmartAccessTagsOk returns a tuple with the IncludedSmartAccessTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedSmartAccessTagsOk() ([]SmartAccessTagResponseModel, bool) {
	if o == nil || IsNil(o.IncludedSmartAccessTags) {
		return nil, false
	}
	return o.IncludedSmartAccessTags, true
}

// HasIncludedSmartAccessTags returns a boolean if a field has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) HasIncludedSmartAccessTags() bool {
	if o != nil && !IsNil(o.IncludedSmartAccessTags) {
		return true
	}

	return false
}

// SetIncludedSmartAccessTags gets a reference to the given []SmartAccessTagResponseModel and assigns it to the IncludedSmartAccessTags field.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetIncludedSmartAccessTags(v []SmartAccessTagResponseModel) {
	o.IncludedSmartAccessTags = v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedUserFilterEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedUserFilterEnabled, true
}

// SetIncludedUserFilterEnabled sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = v
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedUsers() []IdentityUserResponseModel {
	if o == nil || IsNil(o.IncludedUsers) {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetIncludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the IncludedUsers field.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetIncludedUsers(v []IdentityUserResponseModel) {
	o.IncludedUsers = v
}

// GetExcludedUserFilterEnabled returns the ExcludedUserFilterEnabled field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetExcludedUserFilterEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ExcludedUserFilterEnabled
}

// GetExcludedUserFilterEnabledOk returns a tuple with the ExcludedUserFilterEnabled field value
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetExcludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExcludedUserFilterEnabled, true
}

// SetExcludedUserFilterEnabled sets field value
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetExcludedUserFilterEnabled(v bool) {
	o.ExcludedUserFilterEnabled = v
}

// GetExcludedUsers returns the ExcludedUsers field value if set, zero value otherwise.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetExcludedUsers() []IdentityUserResponseModel {
	if o == nil || IsNil(o.ExcludedUsers) {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.ExcludedUsers
}

// GetExcludedUsersOk returns a tuple with the ExcludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) GetExcludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.ExcludedUsers) {
		return nil, false
	}
	return o.ExcludedUsers, true
}

// HasExcludedUsers returns a boolean if a field has been set.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) HasExcludedUsers() bool {
	if o != nil && !IsNil(o.ExcludedUsers) {
		return true
	}

	return false
}

// SetExcludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the ExcludedUsers field.
func (o *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) SetExcludedUsers(v []IdentityUserResponseModel) {
	o.ExcludedUsers = v
}

func (o DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AllowAnonymous"] = o.AllowAnonymous
	toSerialize["AllowHdxAccess"] = o.AllowHdxAccess
	if !IsNil(o.AllowMachineRestart) {
		toSerialize["AllowMachineRestart"] = o.AllowMachineRestart
	}
	toSerialize["AllowRdpAccess"] = o.AllowRdpAccess
	toSerialize["ConnectNotViaNetScalerGatewayAllowed"] = o.ConnectNotViaNetScalerGatewayAllowed
	toSerialize["ConnectViaNetScalerGatewayAllowed"] = o.ConnectViaNetScalerGatewayAllowed
	toSerialize["IncludedSmartAccessFilterEnabled"] = o.IncludedSmartAccessFilterEnabled
	if !IsNil(o.IncludedSmartAccessTags) {
		toSerialize["IncludedSmartAccessTags"] = o.IncludedSmartAccessTags
	}
	toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	if !IsNil(o.IncludedUsers) {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	toSerialize["ExcludedUserFilterEnabled"] = o.ExcludedUserFilterEnabled
	if !IsNil(o.ExcludedUsers) {
		toSerialize["ExcludedUsers"] = o.ExcludedUsers
	}
	return toSerialize, nil
}

type NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy struct {
	value *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy
	isSet bool
}

func (v NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) Get() *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy {
	return v.value
}

func (v *NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) Set(val *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy(val *DeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) *NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy {
	return &NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy{value: val, isSet: true}
}

func (v NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryGroupDetailResponseModelAllOfSimpleAccessPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


