/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the FtaResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FtaResponseModel{}

// FtaResponseModel Response object for a file-type association.
type FtaResponseModel struct {
	// Content-type.  (Mime type)
	ContentType *string `json:"ContentType,omitempty"`
	// The extension name for the file type association. For example, \".txt\" or \".doc\".
	ExtensionName string `json:"ExtensionName"`
	// The description of the handler for the file type association.
	Description *string `json:"Description,omitempty"`
	// The name of the handler for the file type association (as seen in the Registry). For example, \"TXTFILE\" or \"Word.Document.8\".
	HandlerName string `json:"HandlerName"`
	// The arguments for the open command that the handler should use. For example, \"%1\".
	OpenArguments *string `json:"OpenArguments,omitempty"`
	// Indicates if the file type association is enabled; i.e. whether users who receive the application will launch files of this type using the published application.
	Enabled bool `json:"Enabled"`
	// Indicates if the file type association was imported, as opposed to explicitly added.  File type associations which are not imported will be deleted when disabled.
	IsImported bool `json:"IsImported"`
}

// NewFtaResponseModel instantiates a new FtaResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFtaResponseModel(extensionName string, handlerName string, enabled bool, isImported bool) *FtaResponseModel {
	this := FtaResponseModel{}
	this.ExtensionName = extensionName
	this.HandlerName = handlerName
	this.Enabled = enabled
	this.IsImported = isImported
	return &this
}

// NewFtaResponseModelWithDefaults instantiates a new FtaResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFtaResponseModelWithDefaults() *FtaResponseModel {
	this := FtaResponseModel{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *FtaResponseModel) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *FtaResponseModel) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *FtaResponseModel) SetContentType(v string) {
	o.ContentType = &v
}

// GetExtensionName returns the ExtensionName field value
func (o *FtaResponseModel) GetExtensionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtensionName
}

// GetExtensionNameOk returns a tuple with the ExtensionName field value
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetExtensionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionName, true
}

// SetExtensionName sets field value
func (o *FtaResponseModel) SetExtensionName(v string) {
	o.ExtensionName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FtaResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FtaResponseModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FtaResponseModel) SetDescription(v string) {
	o.Description = &v
}

// GetHandlerName returns the HandlerName field value
func (o *FtaResponseModel) GetHandlerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HandlerName
}

// GetHandlerNameOk returns a tuple with the HandlerName field value
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetHandlerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HandlerName, true
}

// SetHandlerName sets field value
func (o *FtaResponseModel) SetHandlerName(v string) {
	o.HandlerName = v
}

// GetOpenArguments returns the OpenArguments field value if set, zero value otherwise.
func (o *FtaResponseModel) GetOpenArguments() string {
	if o == nil || IsNil(o.OpenArguments) {
		var ret string
		return ret
	}
	return *o.OpenArguments
}

// GetOpenArgumentsOk returns a tuple with the OpenArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetOpenArgumentsOk() (*string, bool) {
	if o == nil || IsNil(o.OpenArguments) {
		return nil, false
	}
	return o.OpenArguments, true
}

// HasOpenArguments returns a boolean if a field has been set.
func (o *FtaResponseModel) HasOpenArguments() bool {
	if o != nil && !IsNil(o.OpenArguments) {
		return true
	}

	return false
}

// SetOpenArguments gets a reference to the given string and assigns it to the OpenArguments field.
func (o *FtaResponseModel) SetOpenArguments(v string) {
	o.OpenArguments = &v
}

// GetEnabled returns the Enabled field value
func (o *FtaResponseModel) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *FtaResponseModel) SetEnabled(v bool) {
	o.Enabled = v
}

// GetIsImported returns the IsImported field value
func (o *FtaResponseModel) GetIsImported() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsImported
}

// GetIsImportedOk returns a tuple with the IsImported field value
// and a boolean to check if the value has been set.
func (o *FtaResponseModel) GetIsImportedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsImported, true
}

// SetIsImported sets field value
func (o *FtaResponseModel) SetIsImported(v bool) {
	o.IsImported = v
}

func (o FtaResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FtaResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentType) {
		toSerialize["ContentType"] = o.ContentType
	}
	toSerialize["ExtensionName"] = o.ExtensionName
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	toSerialize["HandlerName"] = o.HandlerName
	if !IsNil(o.OpenArguments) {
		toSerialize["OpenArguments"] = o.OpenArguments
	}
	toSerialize["Enabled"] = o.Enabled
	toSerialize["IsImported"] = o.IsImported
	return toSerialize, nil
}

type NullableFtaResponseModel struct {
	value *FtaResponseModel
	isSet bool
}

func (v NullableFtaResponseModel) Get() *FtaResponseModel {
	return v.value
}

func (v *NullableFtaResponseModel) Set(val *FtaResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFtaResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFtaResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFtaResponseModel(val *FtaResponseModel) *NullableFtaResponseModel {
	return &NullableFtaResponseModel{value: val, isSet: true}
}

func (v NullableFtaResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFtaResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


