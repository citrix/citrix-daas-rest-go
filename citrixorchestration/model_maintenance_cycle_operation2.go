/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MaintenanceCycleOperation2 Represents various operations that can be performed during a maintenance cycle.
type MaintenanceCycleOperation2 string

// List of MaintenanceCycleOperation2
const (
	MAINTENANCECYCLEOPERATION2_UNKNOWN MaintenanceCycleOperation2 = "Unknown"
	MAINTENANCECYCLEOPERATION2_IMAGE_UPDATE MaintenanceCycleOperation2 = "ImageUpdate"
	MAINTENANCECYCLEOPERATION2_HARDWARE_UPDATE MaintenanceCycleOperation2 = "HardwareUpdate"
	MAINTENANCECYCLEOPERATION2_RESET_OS_DISK MaintenanceCycleOperation2 = "ResetOSDisk"
	MAINTENANCECYCLEOPERATION2_RESET_ID_DISK MaintenanceCycleOperation2 = "ResetIDDisk"
)

// All allowed values of MaintenanceCycleOperation2 enum
var AllowedMaintenanceCycleOperation2EnumValues = []MaintenanceCycleOperation2{
	"Unknown",
	"ImageUpdate",
	"HardwareUpdate",
	"ResetOSDisk",
	"ResetIDDisk",
}

func (v *MaintenanceCycleOperation2) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = MaintenanceCycleOperation2(value)
	return nil
}

// NewMaintenanceCycleOperation2FromValue returns a pointer to a valid MaintenanceCycleOperation2
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMaintenanceCycleOperation2FromValue(v string) (*MaintenanceCycleOperation2, error) {
	ev := MaintenanceCycleOperation2(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MaintenanceCycleOperation2: valid values are %v", v, AllowedMaintenanceCycleOperation2EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MaintenanceCycleOperation2) IsValid() bool {
	for _, existing := range AllowedMaintenanceCycleOperation2EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MaintenanceCycleOperation2 value
func (v MaintenanceCycleOperation2) Ptr() *MaintenanceCycleOperation2 {
	return &v
}

type NullableMaintenanceCycleOperation2 struct {
	value *MaintenanceCycleOperation2
	isSet bool
}

func (v NullableMaintenanceCycleOperation2) Get() *MaintenanceCycleOperation2 {
	return v.value
}

func (v *NullableMaintenanceCycleOperation2) Set(val *MaintenanceCycleOperation2) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceCycleOperation2) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceCycleOperation2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceCycleOperation2(val *MaintenanceCycleOperation2) *NullableMaintenanceCycleOperation2 {
	return &NullableMaintenanceCycleOperation2{value: val, isSet: true}
}

func (v NullableMaintenanceCycleOperation2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceCycleOperation2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

