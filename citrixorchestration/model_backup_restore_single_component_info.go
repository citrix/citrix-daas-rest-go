/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreSingleComponentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreSingleComponentInfo{}

// BackupRestoreSingleComponentInfo struct for BackupRestoreSingleComponentInfo
type BackupRestoreSingleComponentInfo struct {
	// Localized component name
	LocalizedName NullableString `json:"LocalizedName,omitempty"`
	Component *BckRstrAutoConfigComponents `json:"Component,omitempty"`
	ControlPlane *BackupRestoreComponentControlPlane `json:"ControlPlane,omitempty"`
	// Pre-Import check mode; prompt for secrets prior to restoring
	PreImportCheckMode *bool `json:"PreImportCheckMode,omitempty"`
	// Compnent member names are viewable
	MembersViewable *bool `json:"MembersViewable,omitempty"`
	// Component supports restoring with prerequisites
	WithPrequisites *bool `json:"WithPrequisites,omitempty"`
	// Component can be restored
	CanBeRestored *bool `json:"CanBeRestored,omitempty"`
	// Component members have descriptions
	HasDescription *bool `json:"HasDescription,omitempty"`
	// Component valid On-Prem only
	OnPremOnly *bool `json:"OnPremOnly,omitempty"`
}

// NewBackupRestoreSingleComponentInfo instantiates a new BackupRestoreSingleComponentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreSingleComponentInfo() *BackupRestoreSingleComponentInfo {
	this := BackupRestoreSingleComponentInfo{}
	return &this
}

// NewBackupRestoreSingleComponentInfoWithDefaults instantiates a new BackupRestoreSingleComponentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreSingleComponentInfoWithDefaults() *BackupRestoreSingleComponentInfo {
	this := BackupRestoreSingleComponentInfo{}
	return &this
}

// GetLocalizedName returns the LocalizedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreSingleComponentInfo) GetLocalizedName() string {
	if o == nil || IsNil(o.LocalizedName.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedName.Get()
}

// GetLocalizedNameOk returns a tuple with the LocalizedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreSingleComponentInfo) GetLocalizedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedName.Get(), o.LocalizedName.IsSet()
}

// HasLocalizedName returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasLocalizedName() bool {
	if o != nil && o.LocalizedName.IsSet() {
		return true
	}

	return false
}

// SetLocalizedName gets a reference to the given NullableString and assigns it to the LocalizedName field.
func (o *BackupRestoreSingleComponentInfo) SetLocalizedName(v string) {
	o.LocalizedName.Set(&v)
}
// SetLocalizedNameNil sets the value for LocalizedName to be an explicit nil
func (o *BackupRestoreSingleComponentInfo) SetLocalizedNameNil() {
	o.LocalizedName.Set(nil)
}

// UnsetLocalizedName ensures that no value is present for LocalizedName, not even an explicit nil
func (o *BackupRestoreSingleComponentInfo) UnsetLocalizedName() {
	o.LocalizedName.Unset()
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetComponent() BckRstrAutoConfigComponents {
	if o == nil || IsNil(o.Component) {
		var ret BckRstrAutoConfigComponents
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetComponentOk() (*BckRstrAutoConfigComponents, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given BckRstrAutoConfigComponents and assigns it to the Component field.
func (o *BackupRestoreSingleComponentInfo) SetComponent(v BckRstrAutoConfigComponents) {
	o.Component = &v
}

// GetControlPlane returns the ControlPlane field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetControlPlane() BackupRestoreComponentControlPlane {
	if o == nil || IsNil(o.ControlPlane) {
		var ret BackupRestoreComponentControlPlane
		return ret
	}
	return *o.ControlPlane
}

// GetControlPlaneOk returns a tuple with the ControlPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetControlPlaneOk() (*BackupRestoreComponentControlPlane, bool) {
	if o == nil || IsNil(o.ControlPlane) {
		return nil, false
	}
	return o.ControlPlane, true
}

// HasControlPlane returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasControlPlane() bool {
	if o != nil && !IsNil(o.ControlPlane) {
		return true
	}

	return false
}

// SetControlPlane gets a reference to the given BackupRestoreComponentControlPlane and assigns it to the ControlPlane field.
func (o *BackupRestoreSingleComponentInfo) SetControlPlane(v BackupRestoreComponentControlPlane) {
	o.ControlPlane = &v
}

// GetPreImportCheckMode returns the PreImportCheckMode field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetPreImportCheckMode() bool {
	if o == nil || IsNil(o.PreImportCheckMode) {
		var ret bool
		return ret
	}
	return *o.PreImportCheckMode
}

// GetPreImportCheckModeOk returns a tuple with the PreImportCheckMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetPreImportCheckModeOk() (*bool, bool) {
	if o == nil || IsNil(o.PreImportCheckMode) {
		return nil, false
	}
	return o.PreImportCheckMode, true
}

// HasPreImportCheckMode returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasPreImportCheckMode() bool {
	if o != nil && !IsNil(o.PreImportCheckMode) {
		return true
	}

	return false
}

// SetPreImportCheckMode gets a reference to the given bool and assigns it to the PreImportCheckMode field.
func (o *BackupRestoreSingleComponentInfo) SetPreImportCheckMode(v bool) {
	o.PreImportCheckMode = &v
}

// GetMembersViewable returns the MembersViewable field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetMembersViewable() bool {
	if o == nil || IsNil(o.MembersViewable) {
		var ret bool
		return ret
	}
	return *o.MembersViewable
}

// GetMembersViewableOk returns a tuple with the MembersViewable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetMembersViewableOk() (*bool, bool) {
	if o == nil || IsNil(o.MembersViewable) {
		return nil, false
	}
	return o.MembersViewable, true
}

// HasMembersViewable returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasMembersViewable() bool {
	if o != nil && !IsNil(o.MembersViewable) {
		return true
	}

	return false
}

// SetMembersViewable gets a reference to the given bool and assigns it to the MembersViewable field.
func (o *BackupRestoreSingleComponentInfo) SetMembersViewable(v bool) {
	o.MembersViewable = &v
}

// GetWithPrequisites returns the WithPrequisites field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetWithPrequisites() bool {
	if o == nil || IsNil(o.WithPrequisites) {
		var ret bool
		return ret
	}
	return *o.WithPrequisites
}

// GetWithPrequisitesOk returns a tuple with the WithPrequisites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetWithPrequisitesOk() (*bool, bool) {
	if o == nil || IsNil(o.WithPrequisites) {
		return nil, false
	}
	return o.WithPrequisites, true
}

// HasWithPrequisites returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasWithPrequisites() bool {
	if o != nil && !IsNil(o.WithPrequisites) {
		return true
	}

	return false
}

// SetWithPrequisites gets a reference to the given bool and assigns it to the WithPrequisites field.
func (o *BackupRestoreSingleComponentInfo) SetWithPrequisites(v bool) {
	o.WithPrequisites = &v
}

// GetCanBeRestored returns the CanBeRestored field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetCanBeRestored() bool {
	if o == nil || IsNil(o.CanBeRestored) {
		var ret bool
		return ret
	}
	return *o.CanBeRestored
}

// GetCanBeRestoredOk returns a tuple with the CanBeRestored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetCanBeRestoredOk() (*bool, bool) {
	if o == nil || IsNil(o.CanBeRestored) {
		return nil, false
	}
	return o.CanBeRestored, true
}

// HasCanBeRestored returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasCanBeRestored() bool {
	if o != nil && !IsNil(o.CanBeRestored) {
		return true
	}

	return false
}

// SetCanBeRestored gets a reference to the given bool and assigns it to the CanBeRestored field.
func (o *BackupRestoreSingleComponentInfo) SetCanBeRestored(v bool) {
	o.CanBeRestored = &v
}

// GetHasDescription returns the HasDescription field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetHasDescription() bool {
	if o == nil || IsNil(o.HasDescription) {
		var ret bool
		return ret
	}
	return *o.HasDescription
}

// GetHasDescriptionOk returns a tuple with the HasDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetHasDescriptionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasDescription) {
		return nil, false
	}
	return o.HasDescription, true
}

// HasHasDescription returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasHasDescription() bool {
	if o != nil && !IsNil(o.HasDescription) {
		return true
	}

	return false
}

// SetHasDescription gets a reference to the given bool and assigns it to the HasDescription field.
func (o *BackupRestoreSingleComponentInfo) SetHasDescription(v bool) {
	o.HasDescription = &v
}

// GetOnPremOnly returns the OnPremOnly field value if set, zero value otherwise.
func (o *BackupRestoreSingleComponentInfo) GetOnPremOnly() bool {
	if o == nil || IsNil(o.OnPremOnly) {
		var ret bool
		return ret
	}
	return *o.OnPremOnly
}

// GetOnPremOnlyOk returns a tuple with the OnPremOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreSingleComponentInfo) GetOnPremOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.OnPremOnly) {
		return nil, false
	}
	return o.OnPremOnly, true
}

// HasOnPremOnly returns a boolean if a field has been set.
func (o *BackupRestoreSingleComponentInfo) HasOnPremOnly() bool {
	if o != nil && !IsNil(o.OnPremOnly) {
		return true
	}

	return false
}

// SetOnPremOnly gets a reference to the given bool and assigns it to the OnPremOnly field.
func (o *BackupRestoreSingleComponentInfo) SetOnPremOnly(v bool) {
	o.OnPremOnly = &v
}

func (o BackupRestoreSingleComponentInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreSingleComponentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalizedName.IsSet() {
		toSerialize["LocalizedName"] = o.LocalizedName.Get()
	}
	if !IsNil(o.Component) {
		toSerialize["Component"] = o.Component
	}
	if !IsNil(o.ControlPlane) {
		toSerialize["ControlPlane"] = o.ControlPlane
	}
	if !IsNil(o.PreImportCheckMode) {
		toSerialize["PreImportCheckMode"] = o.PreImportCheckMode
	}
	if !IsNil(o.MembersViewable) {
		toSerialize["MembersViewable"] = o.MembersViewable
	}
	if !IsNil(o.WithPrequisites) {
		toSerialize["WithPrequisites"] = o.WithPrequisites
	}
	if !IsNil(o.CanBeRestored) {
		toSerialize["CanBeRestored"] = o.CanBeRestored
	}
	if !IsNil(o.HasDescription) {
		toSerialize["HasDescription"] = o.HasDescription
	}
	if !IsNil(o.OnPremOnly) {
		toSerialize["OnPremOnly"] = o.OnPremOnly
	}
	return toSerialize, nil
}

type NullableBackupRestoreSingleComponentInfo struct {
	value *BackupRestoreSingleComponentInfo
	isSet bool
}

func (v NullableBackupRestoreSingleComponentInfo) Get() *BackupRestoreSingleComponentInfo {
	return v.value
}

func (v *NullableBackupRestoreSingleComponentInfo) Set(val *BackupRestoreSingleComponentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreSingleComponentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreSingleComponentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreSingleComponentInfo(val *BackupRestoreSingleComponentInfo) *NullableBackupRestoreSingleComponentInfo {
	return &NullableBackupRestoreSingleComponentInfo{value: val, isSet: true}
}

func (v NullableBackupRestoreSingleComponentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreSingleComponentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


