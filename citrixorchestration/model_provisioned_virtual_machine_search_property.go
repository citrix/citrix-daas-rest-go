/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// ProvisionedVirtualMachineSearchProperty Properties which can be used for provisioned virtual machines.             
type ProvisionedVirtualMachineSearchProperty string

// List of ProvisionedVirtualMachineSearchProperty
const (
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_ACTIVE_OPERATION ProvisionedVirtualMachineSearchProperty = "ActiveOperation"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_VM_SID ProvisionedVirtualMachineSearchProperty = "VMSid"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_CPU_COUNT ProvisionedVirtualMachineSearchProperty = "CpuCount"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_IDENTITY_TYPE ProvisionedVirtualMachineSearchProperty = "IdentityType"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_IDENTITIES ProvisionedVirtualMachineSearchProperty = "Identities"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_IDENTITY_CONTENT ProvisionedVirtualMachineSearchProperty = "IdentityContent"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_IMAGE_OUT_OF_DATE ProvisionedVirtualMachineSearchProperty = "ImageOutOfDate"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_LAST_BOOT_TIME ProvisionedVirtualMachineSearchProperty = "LastBootTime"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_MEMORY_MB ProvisionedVirtualMachineSearchProperty = "MemoryMB"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_PERSISTENCY ProvisionedVirtualMachineSearchProperty = "Persistency"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_PROVISIONING_SCHEME_NAME ProvisionedVirtualMachineSearchProperty = "ProvisioningSchemeName"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_PROVISIONING_SCHEME_VERSION ProvisionedVirtualMachineSearchProperty = "ProvisioningSchemeVersion"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_PROV_VM_CONFIGURATION_UPDATE_VERSION ProvisionedVirtualMachineSearchProperty = "ProvVMConfigurationUpdateVersion"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_VM_NAME ProvisionedVirtualMachineSearchProperty = "VMName"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_ACTIVATION_TYPE ProvisionedVirtualMachineSearchProperty = "ActivationType"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_USE_WRITE_BACK_CACHE ProvisionedVirtualMachineSearchProperty = "UseWriteBackCache"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_WRITE_BACK_CACHE_DISK_SIZE ProvisionedVirtualMachineSearchProperty = "WriteBackCacheDiskSize"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_WRITE_BACK_CACHE_MEMORY_SIZE ProvisionedVirtualMachineSearchProperty = "WriteBackCacheMemorySize"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_RESOURCE_POOL_ID ProvisionedVirtualMachineSearchProperty = "ResourcePoolId"
	PROVISIONEDVIRTUALMACHINESEARCHPROPERTY_NETWORK_ID ProvisionedVirtualMachineSearchProperty = "NetworkId"
)

// All allowed values of ProvisionedVirtualMachineSearchProperty enum
var AllowedProvisionedVirtualMachineSearchPropertyEnumValues = []ProvisionedVirtualMachineSearchProperty{
	"ActiveOperation",
	"VMSid",
	"CpuCount",
	"IdentityType",
	"Identities",
	"IdentityContent",
	"ImageOutOfDate",
	"LastBootTime",
	"MemoryMB",
	"Persistency",
	"ProvisioningSchemeName",
	"ProvisioningSchemeVersion",
	"ProvVMConfigurationUpdateVersion",
	"VMName",
	"ActivationType",
	"UseWriteBackCache",
	"WriteBackCacheDiskSize",
	"WriteBackCacheMemorySize",
	"ResourcePoolId",
	"NetworkId",
}

func (v *ProvisionedVirtualMachineSearchProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = ProvisionedVirtualMachineSearchProperty(value)
	return nil
}

// NewProvisionedVirtualMachineSearchPropertyFromValue returns a pointer to a valid ProvisionedVirtualMachineSearchProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProvisionedVirtualMachineSearchPropertyFromValue(v string) (*ProvisionedVirtualMachineSearchProperty, error) {
	ev := ProvisionedVirtualMachineSearchProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProvisionedVirtualMachineSearchProperty: valid values are %v", v, AllowedProvisionedVirtualMachineSearchPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProvisionedVirtualMachineSearchProperty) IsValid() bool {
	for _, existing := range AllowedProvisionedVirtualMachineSearchPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProvisionedVirtualMachineSearchProperty value
func (v ProvisionedVirtualMachineSearchProperty) Ptr() *ProvisionedVirtualMachineSearchProperty {
	return &v
}

type NullableProvisionedVirtualMachineSearchProperty struct {
	value *ProvisionedVirtualMachineSearchProperty
	isSet bool
}

func (v NullableProvisionedVirtualMachineSearchProperty) Get() *ProvisionedVirtualMachineSearchProperty {
	return v.value
}

func (v *NullableProvisionedVirtualMachineSearchProperty) Set(val *ProvisionedVirtualMachineSearchProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionedVirtualMachineSearchProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionedVirtualMachineSearchProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionedVirtualMachineSearchProperty(val *ProvisionedVirtualMachineSearchProperty) *NullableProvisionedVirtualMachineSearchProperty {
	return &NullableProvisionedVirtualMachineSearchProperty{value: val, isSet: true}
}

func (v NullableProvisionedVirtualMachineSearchProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionedVirtualMachineSearchProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

