/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ApplicationDetailResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationDetailResponseModelAllOf{}

// ApplicationDetailResponseModelAllOf Response object for application details.
type ApplicationDetailResponseModelAllOf struct {
	// Internal name of the application.
	BrowserName string `json:"BrowserName"`
	// Categories in which the application resides.
	Categories []string `json:"Categories,omitempty"`
	// All file types which are associated with the application.
	ConfiguredFtas []FtaResponseModel `json:"ConfiguredFtas,omitempty"`
	CpuPriorityLevel CpuPriorityLevel `json:"CpuPriorityLevel"`
	HomeZone ApplicationDetailResponseModelAllOfHomeZone `json:"HomeZone"`
	HomeZoneMode HomeZoneMode `json:"HomeZoneMode"`
	// Indicates whether the IncludedUsers filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery group's access polic(ies) is implicitly granted access to the application.
	IncludedUserFilterEnabled bool `json:"IncludedUserFilterEnabled"`
	// Specifies whether the icon is gotten from user's computer at run time. If not specified, will not be changed.
	IconFromClient *bool `json:"IconFromClient,omitempty"`
	// The included users filter of the application; that is, the users and groups who are explicitly granted access to the published application.
	IncludedUsers []IdentityUserResponseModel `json:"IncludedUsers,omitempty"`
	// The maximum allowed concurrently running instances of the application that an individual user can have.
	MaxPerUserInstances *int32 `json:"MaxPerUserInstances,omitempty"`
	// The maximum allowed total of concurrently running instances of the application within the site.
	MaxTotalInstances *int32 `json:"MaxTotalInstances,omitempty"`
	// Indicates whether or not a shortcut to the application should be placed on the user device.
	ShortcutAddedToDesktop *bool `json:"ShortcutAddedToDesktop,omitempty"`
	// Indicates whether or not a shortcut to the application should be placed in the user's start menu on their user device.
	ShortcutAddedToStartMenu *bool `json:"ShortcutAddedToStartMenu,omitempty"`
	// Name of the start menu folder that holds the application shortcut (if any).
	StartMenuFolder *string `json:"StartMenuFolder,omitempty"`
	// Indicates whether or not the session waits for the printers to be created before allowing the user to interact with the session.
	WaitForPrinterCreation *bool `json:"WaitForPrinterCreation,omitempty"`
}

// NewApplicationDetailResponseModelAllOf instantiates a new ApplicationDetailResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationDetailResponseModelAllOf(browserName string, cpuPriorityLevel CpuPriorityLevel, homeZone ApplicationDetailResponseModelAllOfHomeZone, homeZoneMode HomeZoneMode, includedUserFilterEnabled bool) *ApplicationDetailResponseModelAllOf {
	this := ApplicationDetailResponseModelAllOf{}
	this.BrowserName = browserName
	this.CpuPriorityLevel = cpuPriorityLevel
	this.HomeZone = homeZone
	this.HomeZoneMode = homeZoneMode
	this.IncludedUserFilterEnabled = includedUserFilterEnabled
	return &this
}

// NewApplicationDetailResponseModelAllOfWithDefaults instantiates a new ApplicationDetailResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationDetailResponseModelAllOfWithDefaults() *ApplicationDetailResponseModelAllOf {
	this := ApplicationDetailResponseModelAllOf{}
	return &this
}

// GetBrowserName returns the BrowserName field value
func (o *ApplicationDetailResponseModelAllOf) GetBrowserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BrowserName
}

// GetBrowserNameOk returns a tuple with the BrowserName field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetBrowserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BrowserName, true
}

// SetBrowserName sets field value
func (o *ApplicationDetailResponseModelAllOf) SetBrowserName(v string) {
	o.BrowserName = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *ApplicationDetailResponseModelAllOf) SetCategories(v []string) {
	o.Categories = v
}

// GetConfiguredFtas returns the ConfiguredFtas field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetConfiguredFtas() []FtaResponseModel {
	if o == nil || IsNil(o.ConfiguredFtas) {
		var ret []FtaResponseModel
		return ret
	}
	return o.ConfiguredFtas
}

// GetConfiguredFtasOk returns a tuple with the ConfiguredFtas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetConfiguredFtasOk() ([]FtaResponseModel, bool) {
	if o == nil || IsNil(o.ConfiguredFtas) {
		return nil, false
	}
	return o.ConfiguredFtas, true
}

// HasConfiguredFtas returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasConfiguredFtas() bool {
	if o != nil && !IsNil(o.ConfiguredFtas) {
		return true
	}

	return false
}

// SetConfiguredFtas gets a reference to the given []FtaResponseModel and assigns it to the ConfiguredFtas field.
func (o *ApplicationDetailResponseModelAllOf) SetConfiguredFtas(v []FtaResponseModel) {
	o.ConfiguredFtas = v
}

// GetCpuPriorityLevel returns the CpuPriorityLevel field value
func (o *ApplicationDetailResponseModelAllOf) GetCpuPriorityLevel() CpuPriorityLevel {
	if o == nil {
		var ret CpuPriorityLevel
		return ret
	}

	return o.CpuPriorityLevel
}

// GetCpuPriorityLevelOk returns a tuple with the CpuPriorityLevel field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetCpuPriorityLevelOk() (*CpuPriorityLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuPriorityLevel, true
}

// SetCpuPriorityLevel sets field value
func (o *ApplicationDetailResponseModelAllOf) SetCpuPriorityLevel(v CpuPriorityLevel) {
	o.CpuPriorityLevel = v
}

// GetHomeZone returns the HomeZone field value
func (o *ApplicationDetailResponseModelAllOf) GetHomeZone() ApplicationDetailResponseModelAllOfHomeZone {
	if o == nil {
		var ret ApplicationDetailResponseModelAllOfHomeZone
		return ret
	}

	return o.HomeZone
}

// GetHomeZoneOk returns a tuple with the HomeZone field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetHomeZoneOk() (*ApplicationDetailResponseModelAllOfHomeZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HomeZone, true
}

// SetHomeZone sets field value
func (o *ApplicationDetailResponseModelAllOf) SetHomeZone(v ApplicationDetailResponseModelAllOfHomeZone) {
	o.HomeZone = v
}

// GetHomeZoneMode returns the HomeZoneMode field value
func (o *ApplicationDetailResponseModelAllOf) GetHomeZoneMode() HomeZoneMode {
	if o == nil {
		var ret HomeZoneMode
		return ret
	}

	return o.HomeZoneMode
}

// GetHomeZoneModeOk returns a tuple with the HomeZoneMode field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetHomeZoneModeOk() (*HomeZoneMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HomeZoneMode, true
}

// SetHomeZoneMode sets field value
func (o *ApplicationDetailResponseModelAllOf) SetHomeZoneMode(v HomeZoneMode) {
	o.HomeZoneMode = v
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value
func (o *ApplicationDetailResponseModelAllOf) GetIncludedUserFilterEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludedUserFilterEnabled
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedUserFilterEnabled, true
}

// SetIncludedUserFilterEnabled sets field value
func (o *ApplicationDetailResponseModelAllOf) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled = v
}

// GetIconFromClient returns the IconFromClient field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetIconFromClient() bool {
	if o == nil || IsNil(o.IconFromClient) {
		var ret bool
		return ret
	}
	return *o.IconFromClient
}

// GetIconFromClientOk returns a tuple with the IconFromClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetIconFromClientOk() (*bool, bool) {
	if o == nil || IsNil(o.IconFromClient) {
		return nil, false
	}
	return o.IconFromClient, true
}

// HasIconFromClient returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasIconFromClient() bool {
	if o != nil && !IsNil(o.IconFromClient) {
		return true
	}

	return false
}

// SetIconFromClient gets a reference to the given bool and assigns it to the IconFromClient field.
func (o *ApplicationDetailResponseModelAllOf) SetIconFromClient(v bool) {
	o.IconFromClient = &v
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetIncludedUsers() []IdentityUserResponseModel {
	if o == nil || IsNil(o.IncludedUsers) {
		var ret []IdentityUserResponseModel
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetIncludedUsersOk() ([]IdentityUserResponseModel, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasIncludedUsers() bool {
	if o != nil && !IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []IdentityUserResponseModel and assigns it to the IncludedUsers field.
func (o *ApplicationDetailResponseModelAllOf) SetIncludedUsers(v []IdentityUserResponseModel) {
	o.IncludedUsers = v
}

// GetMaxPerUserInstances returns the MaxPerUserInstances field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetMaxPerUserInstances() int32 {
	if o == nil || IsNil(o.MaxPerUserInstances) {
		var ret int32
		return ret
	}
	return *o.MaxPerUserInstances
}

// GetMaxPerUserInstancesOk returns a tuple with the MaxPerUserInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetMaxPerUserInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPerUserInstances) {
		return nil, false
	}
	return o.MaxPerUserInstances, true
}

// HasMaxPerUserInstances returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasMaxPerUserInstances() bool {
	if o != nil && !IsNil(o.MaxPerUserInstances) {
		return true
	}

	return false
}

// SetMaxPerUserInstances gets a reference to the given int32 and assigns it to the MaxPerUserInstances field.
func (o *ApplicationDetailResponseModelAllOf) SetMaxPerUserInstances(v int32) {
	o.MaxPerUserInstances = &v
}

// GetMaxTotalInstances returns the MaxTotalInstances field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetMaxTotalInstances() int32 {
	if o == nil || IsNil(o.MaxTotalInstances) {
		var ret int32
		return ret
	}
	return *o.MaxTotalInstances
}

// GetMaxTotalInstancesOk returns a tuple with the MaxTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetMaxTotalInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalInstances) {
		return nil, false
	}
	return o.MaxTotalInstances, true
}

// HasMaxTotalInstances returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasMaxTotalInstances() bool {
	if o != nil && !IsNil(o.MaxTotalInstances) {
		return true
	}

	return false
}

// SetMaxTotalInstances gets a reference to the given int32 and assigns it to the MaxTotalInstances field.
func (o *ApplicationDetailResponseModelAllOf) SetMaxTotalInstances(v int32) {
	o.MaxTotalInstances = &v
}

// GetShortcutAddedToDesktop returns the ShortcutAddedToDesktop field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetShortcutAddedToDesktop() bool {
	if o == nil || IsNil(o.ShortcutAddedToDesktop) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToDesktop
}

// GetShortcutAddedToDesktopOk returns a tuple with the ShortcutAddedToDesktop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetShortcutAddedToDesktopOk() (*bool, bool) {
	if o == nil || IsNil(o.ShortcutAddedToDesktop) {
		return nil, false
	}
	return o.ShortcutAddedToDesktop, true
}

// HasShortcutAddedToDesktop returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasShortcutAddedToDesktop() bool {
	if o != nil && !IsNil(o.ShortcutAddedToDesktop) {
		return true
	}

	return false
}

// SetShortcutAddedToDesktop gets a reference to the given bool and assigns it to the ShortcutAddedToDesktop field.
func (o *ApplicationDetailResponseModelAllOf) SetShortcutAddedToDesktop(v bool) {
	o.ShortcutAddedToDesktop = &v
}

// GetShortcutAddedToStartMenu returns the ShortcutAddedToStartMenu field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetShortcutAddedToStartMenu() bool {
	if o == nil || IsNil(o.ShortcutAddedToStartMenu) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToStartMenu
}

// GetShortcutAddedToStartMenuOk returns a tuple with the ShortcutAddedToStartMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetShortcutAddedToStartMenuOk() (*bool, bool) {
	if o == nil || IsNil(o.ShortcutAddedToStartMenu) {
		return nil, false
	}
	return o.ShortcutAddedToStartMenu, true
}

// HasShortcutAddedToStartMenu returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasShortcutAddedToStartMenu() bool {
	if o != nil && !IsNil(o.ShortcutAddedToStartMenu) {
		return true
	}

	return false
}

// SetShortcutAddedToStartMenu gets a reference to the given bool and assigns it to the ShortcutAddedToStartMenu field.
func (o *ApplicationDetailResponseModelAllOf) SetShortcutAddedToStartMenu(v bool) {
	o.ShortcutAddedToStartMenu = &v
}

// GetStartMenuFolder returns the StartMenuFolder field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetStartMenuFolder() string {
	if o == nil || IsNil(o.StartMenuFolder) {
		var ret string
		return ret
	}
	return *o.StartMenuFolder
}

// GetStartMenuFolderOk returns a tuple with the StartMenuFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetStartMenuFolderOk() (*string, bool) {
	if o == nil || IsNil(o.StartMenuFolder) {
		return nil, false
	}
	return o.StartMenuFolder, true
}

// HasStartMenuFolder returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasStartMenuFolder() bool {
	if o != nil && !IsNil(o.StartMenuFolder) {
		return true
	}

	return false
}

// SetStartMenuFolder gets a reference to the given string and assigns it to the StartMenuFolder field.
func (o *ApplicationDetailResponseModelAllOf) SetStartMenuFolder(v string) {
	o.StartMenuFolder = &v
}

// GetWaitForPrinterCreation returns the WaitForPrinterCreation field value if set, zero value otherwise.
func (o *ApplicationDetailResponseModelAllOf) GetWaitForPrinterCreation() bool {
	if o == nil || IsNil(o.WaitForPrinterCreation) {
		var ret bool
		return ret
	}
	return *o.WaitForPrinterCreation
}

// GetWaitForPrinterCreationOk returns a tuple with the WaitForPrinterCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationDetailResponseModelAllOf) GetWaitForPrinterCreationOk() (*bool, bool) {
	if o == nil || IsNil(o.WaitForPrinterCreation) {
		return nil, false
	}
	return o.WaitForPrinterCreation, true
}

// HasWaitForPrinterCreation returns a boolean if a field has been set.
func (o *ApplicationDetailResponseModelAllOf) HasWaitForPrinterCreation() bool {
	if o != nil && !IsNil(o.WaitForPrinterCreation) {
		return true
	}

	return false
}

// SetWaitForPrinterCreation gets a reference to the given bool and assigns it to the WaitForPrinterCreation field.
func (o *ApplicationDetailResponseModelAllOf) SetWaitForPrinterCreation(v bool) {
	o.WaitForPrinterCreation = &v
}

func (o ApplicationDetailResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationDetailResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["BrowserName"] = o.BrowserName
	if !IsNil(o.Categories) {
		toSerialize["Categories"] = o.Categories
	}
	if !IsNil(o.ConfiguredFtas) {
		toSerialize["ConfiguredFtas"] = o.ConfiguredFtas
	}
	toSerialize["CpuPriorityLevel"] = o.CpuPriorityLevel
	toSerialize["HomeZone"] = o.HomeZone
	toSerialize["HomeZoneMode"] = o.HomeZoneMode
	toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled
	if !IsNil(o.IconFromClient) {
		toSerialize["IconFromClient"] = o.IconFromClient
	}
	if !IsNil(o.IncludedUsers) {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if !IsNil(o.MaxPerUserInstances) {
		toSerialize["MaxPerUserInstances"] = o.MaxPerUserInstances
	}
	if !IsNil(o.MaxTotalInstances) {
		toSerialize["MaxTotalInstances"] = o.MaxTotalInstances
	}
	if !IsNil(o.ShortcutAddedToDesktop) {
		toSerialize["ShortcutAddedToDesktop"] = o.ShortcutAddedToDesktop
	}
	if !IsNil(o.ShortcutAddedToStartMenu) {
		toSerialize["ShortcutAddedToStartMenu"] = o.ShortcutAddedToStartMenu
	}
	if !IsNil(o.StartMenuFolder) {
		toSerialize["StartMenuFolder"] = o.StartMenuFolder
	}
	if !IsNil(o.WaitForPrinterCreation) {
		toSerialize["WaitForPrinterCreation"] = o.WaitForPrinterCreation
	}
	return toSerialize, nil
}

type NullableApplicationDetailResponseModelAllOf struct {
	value *ApplicationDetailResponseModelAllOf
	isSet bool
}

func (v NullableApplicationDetailResponseModelAllOf) Get() *ApplicationDetailResponseModelAllOf {
	return v.value
}

func (v *NullableApplicationDetailResponseModelAllOf) Set(val *ApplicationDetailResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDetailResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDetailResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDetailResponseModelAllOf(val *ApplicationDetailResponseModelAllOf) *NullableApplicationDetailResponseModelAllOf {
	return &NullableApplicationDetailResponseModelAllOf{value: val, isSet: true}
}

func (v NullableApplicationDetailResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDetailResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


