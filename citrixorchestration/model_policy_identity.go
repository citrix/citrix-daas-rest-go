/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PolicyIdentity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyIdentity{}

// PolicyIdentity Identity of a policy.
type PolicyIdentity struct {
	// GUID of the policy set.
	PolicySetGuid *string `json:"PolicySetGuid,omitempty"`
	// GUID of the policy.
	PolicyGuid *string `json:"PolicyGuid,omitempty"`
	// Name of the policy.
	PolicyName NullableString `json:"PolicyName,omitempty"`
}

// NewPolicyIdentity instantiates a new PolicyIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyIdentity() *PolicyIdentity {
	this := PolicyIdentity{}
	return &this
}

// NewPolicyIdentityWithDefaults instantiates a new PolicyIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyIdentityWithDefaults() *PolicyIdentity {
	this := PolicyIdentity{}
	return &this
}

// GetPolicySetGuid returns the PolicySetGuid field value if set, zero value otherwise.
func (o *PolicyIdentity) GetPolicySetGuid() string {
	if o == nil || IsNil(o.PolicySetGuid) {
		var ret string
		return ret
	}
	return *o.PolicySetGuid
}

// GetPolicySetGuidOk returns a tuple with the PolicySetGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyIdentity) GetPolicySetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.PolicySetGuid) {
		return nil, false
	}
	return o.PolicySetGuid, true
}

// HasPolicySetGuid returns a boolean if a field has been set.
func (o *PolicyIdentity) HasPolicySetGuid() bool {
	if o != nil && !IsNil(o.PolicySetGuid) {
		return true
	}

	return false
}

// SetPolicySetGuid gets a reference to the given string and assigns it to the PolicySetGuid field.
func (o *PolicyIdentity) SetPolicySetGuid(v string) {
	o.PolicySetGuid = &v
}

// GetPolicyGuid returns the PolicyGuid field value if set, zero value otherwise.
func (o *PolicyIdentity) GetPolicyGuid() string {
	if o == nil || IsNil(o.PolicyGuid) {
		var ret string
		return ret
	}
	return *o.PolicyGuid
}

// GetPolicyGuidOk returns a tuple with the PolicyGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyIdentity) GetPolicyGuidOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyGuid) {
		return nil, false
	}
	return o.PolicyGuid, true
}

// HasPolicyGuid returns a boolean if a field has been set.
func (o *PolicyIdentity) HasPolicyGuid() bool {
	if o != nil && !IsNil(o.PolicyGuid) {
		return true
	}

	return false
}

// SetPolicyGuid gets a reference to the given string and assigns it to the PolicyGuid field.
func (o *PolicyIdentity) SetPolicyGuid(v string) {
	o.PolicyGuid = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyIdentity) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyIdentity) GetPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *PolicyIdentity) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *PolicyIdentity) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}
// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *PolicyIdentity) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *PolicyIdentity) UnsetPolicyName() {
	o.PolicyName.Unset()
}

func (o PolicyIdentity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyIdentity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicySetGuid) {
		toSerialize["PolicySetGuid"] = o.PolicySetGuid
	}
	if !IsNil(o.PolicyGuid) {
		toSerialize["PolicyGuid"] = o.PolicyGuid
	}
	if o.PolicyName.IsSet() {
		toSerialize["PolicyName"] = o.PolicyName.Get()
	}
	return toSerialize, nil
}

type NullablePolicyIdentity struct {
	value *PolicyIdentity
	isSet bool
}

func (v NullablePolicyIdentity) Get() *PolicyIdentity {
	return v.value
}

func (v *NullablePolicyIdentity) Set(val *PolicyIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyIdentity(val *PolicyIdentity) *NullablePolicyIdentity {
	return &NullablePolicyIdentity{value: val, isSet: true}
}

func (v NullablePolicyIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


