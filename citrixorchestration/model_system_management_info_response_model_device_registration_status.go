/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SystemManagementInfoResponseModelDeviceRegistrationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemManagementInfoResponseModelDeviceRegistrationStatus{}

// SystemManagementInfoResponseModelDeviceRegistrationStatus Device registration status.
type SystemManagementInfoResponseModelDeviceRegistrationStatus struct {
	// Is system has registered with management API (MDM).
	DeviceRegisteredWithManagement *bool `json:"DeviceRegisteredWithManagement,omitempty"`
}

// NewSystemManagementInfoResponseModelDeviceRegistrationStatus instantiates a new SystemManagementInfoResponseModelDeviceRegistrationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemManagementInfoResponseModelDeviceRegistrationStatus() *SystemManagementInfoResponseModelDeviceRegistrationStatus {
	this := SystemManagementInfoResponseModelDeviceRegistrationStatus{}
	return &this
}

// NewSystemManagementInfoResponseModelDeviceRegistrationStatusWithDefaults instantiates a new SystemManagementInfoResponseModelDeviceRegistrationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemManagementInfoResponseModelDeviceRegistrationStatusWithDefaults() *SystemManagementInfoResponseModelDeviceRegistrationStatus {
	this := SystemManagementInfoResponseModelDeviceRegistrationStatus{}
	return &this
}

// GetDeviceRegisteredWithManagement returns the DeviceRegisteredWithManagement field value if set, zero value otherwise.
func (o *SystemManagementInfoResponseModelDeviceRegistrationStatus) GetDeviceRegisteredWithManagement() bool {
	if o == nil || IsNil(o.DeviceRegisteredWithManagement) {
		var ret bool
		return ret
	}
	return *o.DeviceRegisteredWithManagement
}

// GetDeviceRegisteredWithManagementOk returns a tuple with the DeviceRegisteredWithManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemManagementInfoResponseModelDeviceRegistrationStatus) GetDeviceRegisteredWithManagementOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceRegisteredWithManagement) {
		return nil, false
	}
	return o.DeviceRegisteredWithManagement, true
}

// HasDeviceRegisteredWithManagement returns a boolean if a field has been set.
func (o *SystemManagementInfoResponseModelDeviceRegistrationStatus) HasDeviceRegisteredWithManagement() bool {
	if o != nil && !IsNil(o.DeviceRegisteredWithManagement) {
		return true
	}

	return false
}

// SetDeviceRegisteredWithManagement gets a reference to the given bool and assigns it to the DeviceRegisteredWithManagement field.
func (o *SystemManagementInfoResponseModelDeviceRegistrationStatus) SetDeviceRegisteredWithManagement(v bool) {
	o.DeviceRegisteredWithManagement = &v
}

func (o SystemManagementInfoResponseModelDeviceRegistrationStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemManagementInfoResponseModelDeviceRegistrationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceRegisteredWithManagement) {
		toSerialize["DeviceRegisteredWithManagement"] = o.DeviceRegisteredWithManagement
	}
	return toSerialize, nil
}

type NullableSystemManagementInfoResponseModelDeviceRegistrationStatus struct {
	value *SystemManagementInfoResponseModelDeviceRegistrationStatus
	isSet bool
}

func (v NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) Get() *SystemManagementInfoResponseModelDeviceRegistrationStatus {
	return v.value
}

func (v *NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) Set(val *SystemManagementInfoResponseModelDeviceRegistrationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemManagementInfoResponseModelDeviceRegistrationStatus(val *SystemManagementInfoResponseModelDeviceRegistrationStatus) *NullableSystemManagementInfoResponseModelDeviceRegistrationStatus {
	return &NullableSystemManagementInfoResponseModelDeviceRegistrationStatus{value: val, isSet: true}
}

func (v NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemManagementInfoResponseModelDeviceRegistrationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


