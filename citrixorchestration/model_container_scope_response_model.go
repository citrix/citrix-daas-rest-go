/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ContainerScopeResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerScopeResponseModel{}

// ContainerScopeResponseModel Response object for delegated admin container scopes.
type ContainerScopeResponseModel struct {
	// List of delegated admin scopes.
	Scopes    []ScopeResponseModel `json:"Scopes"`
	ScopeType ContainerScopeType   `json:"ScopeType"`
}

type _ContainerScopeResponseModel ContainerScopeResponseModel

// NewContainerScopeResponseModel instantiates a new ContainerScopeResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerScopeResponseModel(scopes []ScopeResponseModel, scopeType ContainerScopeType) *ContainerScopeResponseModel {
	this := ContainerScopeResponseModel{}
	this.Scopes = scopes
	this.ScopeType = scopeType
	return &this
}

// NewContainerScopeResponseModelWithDefaults instantiates a new ContainerScopeResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerScopeResponseModelWithDefaults() *ContainerScopeResponseModel {
	this := ContainerScopeResponseModel{}
	return &this
}

// GetScopes returns the Scopes field value
func (o *ContainerScopeResponseModel) GetScopes() []ScopeResponseModel {
	if o == nil {
		var ret []ScopeResponseModel
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *ContainerScopeResponseModel) GetScopesOk() ([]ScopeResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *ContainerScopeResponseModel) SetScopes(v []ScopeResponseModel) {
	o.Scopes = v
}

// GetScopeType returns the ScopeType field value
func (o *ContainerScopeResponseModel) GetScopeType() ContainerScopeType {
	if o == nil {
		var ret ContainerScopeType
		return ret
	}

	return o.ScopeType
}

// GetScopeTypeOk returns a tuple with the ScopeType field value
// and a boolean to check if the value has been set.
func (o *ContainerScopeResponseModel) GetScopeTypeOk() (*ContainerScopeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScopeType, true
}

// SetScopeType sets field value
func (o *ContainerScopeResponseModel) SetScopeType(v ContainerScopeType) {
	o.ScopeType = v
}

func (o ContainerScopeResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerScopeResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Scopes"] = o.Scopes
	toSerialize["ScopeType"] = o.ScopeType
	return toSerialize, nil
}

type NullableContainerScopeResponseModel struct {
	value *ContainerScopeResponseModel
	isSet bool
}

func (v NullableContainerScopeResponseModel) Get() *ContainerScopeResponseModel {
	return v.value
}

func (v *NullableContainerScopeResponseModel) Set(val *ContainerScopeResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerScopeResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerScopeResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerScopeResponseModel(val *ContainerScopeResponseModel) *NullableContainerScopeResponseModel {
	return &NullableContainerScopeResponseModel{value: val, isSet: true}
}

func (v NullableContainerScopeResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerScopeResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
