/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityUserResponseModelAllOfClaims type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityUserResponseModelAllOfClaims{}

// IdentityUserResponseModelAllOfClaims The universal claims of the user object.
type IdentityUserResponseModelAllOfClaims struct {
	// Oid claim of the identity.
	Oid *string `json:"Oid,omitempty"`
	// Sid claim of the identity.
	Sid *string `json:"Sid,omitempty"`
	// Upn claim of the identity.
	Upn *string `json:"Upn,omitempty"`
	// Email claim of the identity.
	Email *string `json:"Email,omitempty"`
}

// NewIdentityUserResponseModelAllOfClaims instantiates a new IdentityUserResponseModelAllOfClaims object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUserResponseModelAllOfClaims() *IdentityUserResponseModelAllOfClaims {
	this := IdentityUserResponseModelAllOfClaims{}
	return &this
}

// NewIdentityUserResponseModelAllOfClaimsWithDefaults instantiates a new IdentityUserResponseModelAllOfClaims object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUserResponseModelAllOfClaimsWithDefaults() *IdentityUserResponseModelAllOfClaims {
	this := IdentityUserResponseModelAllOfClaims{}
	return &this
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfClaims) GetOid() string {
	if o == nil || IsNil(o.Oid) {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfClaims) GetOidOk() (*string, bool) {
	if o == nil || IsNil(o.Oid) {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfClaims) HasOid() bool {
	if o != nil && !IsNil(o.Oid) {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *IdentityUserResponseModelAllOfClaims) SetOid(v string) {
	o.Oid = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfClaims) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfClaims) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfClaims) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *IdentityUserResponseModelAllOfClaims) SetSid(v string) {
	o.Sid = &v
}

// GetUpn returns the Upn field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfClaims) GetUpn() string {
	if o == nil || IsNil(o.Upn) {
		var ret string
		return ret
	}
	return *o.Upn
}

// GetUpnOk returns a tuple with the Upn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfClaims) GetUpnOk() (*string, bool) {
	if o == nil || IsNil(o.Upn) {
		return nil, false
	}
	return o.Upn, true
}

// HasUpn returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfClaims) HasUpn() bool {
	if o != nil && !IsNil(o.Upn) {
		return true
	}

	return false
}

// SetUpn gets a reference to the given string and assigns it to the Upn field.
func (o *IdentityUserResponseModelAllOfClaims) SetUpn(v string) {
	o.Upn = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOfClaims) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOfClaims) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOfClaims) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *IdentityUserResponseModelAllOfClaims) SetEmail(v string) {
	o.Email = &v
}

func (o IdentityUserResponseModelAllOfClaims) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityUserResponseModelAllOfClaims) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Oid) {
		toSerialize["Oid"] = o.Oid
	}
	if !IsNil(o.Sid) {
		toSerialize["Sid"] = o.Sid
	}
	if !IsNil(o.Upn) {
		toSerialize["Upn"] = o.Upn
	}
	if !IsNil(o.Email) {
		toSerialize["Email"] = o.Email
	}
	return toSerialize, nil
}

type NullableIdentityUserResponseModelAllOfClaims struct {
	value *IdentityUserResponseModelAllOfClaims
	isSet bool
}

func (v NullableIdentityUserResponseModelAllOfClaims) Get() *IdentityUserResponseModelAllOfClaims {
	return v.value
}

func (v *NullableIdentityUserResponseModelAllOfClaims) Set(val *IdentityUserResponseModelAllOfClaims) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUserResponseModelAllOfClaims) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUserResponseModelAllOfClaims) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUserResponseModelAllOfClaims(val *IdentityUserResponseModelAllOfClaims) *NullableIdentityUserResponseModelAllOfClaims {
	return &NullableIdentityUserResponseModelAllOfClaims{value: val, isSet: true}
}

func (v NullableIdentityUserResponseModelAllOfClaims) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUserResponseModelAllOfClaims) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


