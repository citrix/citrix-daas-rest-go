/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the EditInstalledAppRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditInstalledAppRequestModel{}

// EditInstalledAppRequestModel Response object for installed application properties.
type EditInstalledAppRequestModel struct {
	// The command-line arguments to use when launching the executable. Environment variables can be used. If not specified, the value will not be changed.
	CommandLineArguments *string `json:"CommandLineArguments,omitempty"`
	// The name of the executable file to launch. The full path need not be provided if it's already in the path. Environment variables can also be used. If not specified, the value will not be changed.
	CommandLineExecutable *string `json:"CommandLineExecutable,omitempty"`
	// The working directory which the executable is launched from. Environment variables can be used.  If not specified, the value will not be changed.
	WorkingDirectory *string `json:"WorkingDirectory,omitempty"`
}

// NewEditInstalledAppRequestModel instantiates a new EditInstalledAppRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditInstalledAppRequestModel() *EditInstalledAppRequestModel {
	this := EditInstalledAppRequestModel{}
	return &this
}

// NewEditInstalledAppRequestModelWithDefaults instantiates a new EditInstalledAppRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditInstalledAppRequestModelWithDefaults() *EditInstalledAppRequestModel {
	this := EditInstalledAppRequestModel{}
	return &this
}

// GetCommandLineArguments returns the CommandLineArguments field value if set, zero value otherwise.
func (o *EditInstalledAppRequestModel) GetCommandLineArguments() string {
	if o == nil || IsNil(o.CommandLineArguments) {
		var ret string
		return ret
	}
	return *o.CommandLineArguments
}

// GetCommandLineArgumentsOk returns a tuple with the CommandLineArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditInstalledAppRequestModel) GetCommandLineArgumentsOk() (*string, bool) {
	if o == nil || IsNil(o.CommandLineArguments) {
		return nil, false
	}
	return o.CommandLineArguments, true
}

// HasCommandLineArguments returns a boolean if a field has been set.
func (o *EditInstalledAppRequestModel) HasCommandLineArguments() bool {
	if o != nil && !IsNil(o.CommandLineArguments) {
		return true
	}

	return false
}

// SetCommandLineArguments gets a reference to the given string and assigns it to the CommandLineArguments field.
func (o *EditInstalledAppRequestModel) SetCommandLineArguments(v string) {
	o.CommandLineArguments = &v
}

// GetCommandLineExecutable returns the CommandLineExecutable field value if set, zero value otherwise.
func (o *EditInstalledAppRequestModel) GetCommandLineExecutable() string {
	if o == nil || IsNil(o.CommandLineExecutable) {
		var ret string
		return ret
	}
	return *o.CommandLineExecutable
}

// GetCommandLineExecutableOk returns a tuple with the CommandLineExecutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditInstalledAppRequestModel) GetCommandLineExecutableOk() (*string, bool) {
	if o == nil || IsNil(o.CommandLineExecutable) {
		return nil, false
	}
	return o.CommandLineExecutable, true
}

// HasCommandLineExecutable returns a boolean if a field has been set.
func (o *EditInstalledAppRequestModel) HasCommandLineExecutable() bool {
	if o != nil && !IsNil(o.CommandLineExecutable) {
		return true
	}

	return false
}

// SetCommandLineExecutable gets a reference to the given string and assigns it to the CommandLineExecutable field.
func (o *EditInstalledAppRequestModel) SetCommandLineExecutable(v string) {
	o.CommandLineExecutable = &v
}

// GetWorkingDirectory returns the WorkingDirectory field value if set, zero value otherwise.
func (o *EditInstalledAppRequestModel) GetWorkingDirectory() string {
	if o == nil || IsNil(o.WorkingDirectory) {
		var ret string
		return ret
	}
	return *o.WorkingDirectory
}

// GetWorkingDirectoryOk returns a tuple with the WorkingDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditInstalledAppRequestModel) GetWorkingDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.WorkingDirectory) {
		return nil, false
	}
	return o.WorkingDirectory, true
}

// HasWorkingDirectory returns a boolean if a field has been set.
func (o *EditInstalledAppRequestModel) HasWorkingDirectory() bool {
	if o != nil && !IsNil(o.WorkingDirectory) {
		return true
	}

	return false
}

// SetWorkingDirectory gets a reference to the given string and assigns it to the WorkingDirectory field.
func (o *EditInstalledAppRequestModel) SetWorkingDirectory(v string) {
	o.WorkingDirectory = &v
}

func (o EditInstalledAppRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditInstalledAppRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommandLineArguments) {
		toSerialize["CommandLineArguments"] = o.CommandLineArguments
	}
	if !IsNil(o.CommandLineExecutable) {
		toSerialize["CommandLineExecutable"] = o.CommandLineExecutable
	}
	if !IsNil(o.WorkingDirectory) {
		toSerialize["WorkingDirectory"] = o.WorkingDirectory
	}
	return toSerialize, nil
}

type NullableEditInstalledAppRequestModel struct {
	value *EditInstalledAppRequestModel
	isSet bool
}

func (v NullableEditInstalledAppRequestModel) Get() *EditInstalledAppRequestModel {
	return v.value
}

func (v *NullableEditInstalledAppRequestModel) Set(val *EditInstalledAppRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEditInstalledAppRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEditInstalledAppRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditInstalledAppRequestModel(val *EditInstalledAppRequestModel) *NullableEditInstalledAppRequestModel {
	return &NullableEditInstalledAppRequestModel{value: val, isSet: true}
}

func (v NullableEditInstalledAppRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditInstalledAppRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


