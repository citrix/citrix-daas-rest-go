/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ADDomainModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ADDomainModel{}

// ADDomainModel struct for ADDomainModel
type ADDomainModel struct {
	// Domain name
	Name *string `json:"Name,omitempty"`
	// Parent forest of this domain
	ForestName *string `json:"ForestName,omitempty"`
	DirectoryEntry *ADDomainModelDirectoryEntry `json:"DirectoryEntry,omitempty"`
	// Cookie for use by the IActiveDirectoryService implementation
	Tag map[string]interface{} `json:"Tag,omitempty"`
}

// NewADDomainModel instantiates a new ADDomainModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewADDomainModel() *ADDomainModel {
	this := ADDomainModel{}
	return &this
}

// NewADDomainModelWithDefaults instantiates a new ADDomainModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewADDomainModelWithDefaults() *ADDomainModel {
	this := ADDomainModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ADDomainModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ADDomainModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ADDomainModel) SetName(v string) {
	o.Name = &v
}

// GetForestName returns the ForestName field value if set, zero value otherwise.
func (o *ADDomainModel) GetForestName() string {
	if o == nil || IsNil(o.ForestName) {
		var ret string
		return ret
	}
	return *o.ForestName
}

// GetForestNameOk returns a tuple with the ForestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainModel) GetForestNameOk() (*string, bool) {
	if o == nil || IsNil(o.ForestName) {
		return nil, false
	}
	return o.ForestName, true
}

// HasForestName returns a boolean if a field has been set.
func (o *ADDomainModel) HasForestName() bool {
	if o != nil && !IsNil(o.ForestName) {
		return true
	}

	return false
}

// SetForestName gets a reference to the given string and assigns it to the ForestName field.
func (o *ADDomainModel) SetForestName(v string) {
	o.ForestName = &v
}

// GetDirectoryEntry returns the DirectoryEntry field value if set, zero value otherwise.
func (o *ADDomainModel) GetDirectoryEntry() ADDomainModelDirectoryEntry {
	if o == nil || IsNil(o.DirectoryEntry) {
		var ret ADDomainModelDirectoryEntry
		return ret
	}
	return *o.DirectoryEntry
}

// GetDirectoryEntryOk returns a tuple with the DirectoryEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainModel) GetDirectoryEntryOk() (*ADDomainModelDirectoryEntry, bool) {
	if o == nil || IsNil(o.DirectoryEntry) {
		return nil, false
	}
	return o.DirectoryEntry, true
}

// HasDirectoryEntry returns a boolean if a field has been set.
func (o *ADDomainModel) HasDirectoryEntry() bool {
	if o != nil && !IsNil(o.DirectoryEntry) {
		return true
	}

	return false
}

// SetDirectoryEntry gets a reference to the given ADDomainModelDirectoryEntry and assigns it to the DirectoryEntry field.
func (o *ADDomainModel) SetDirectoryEntry(v ADDomainModelDirectoryEntry) {
	o.DirectoryEntry = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ADDomainModel) GetTag() map[string]interface{} {
	if o == nil || IsNil(o.Tag) {
		var ret map[string]interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ADDomainModel) GetTagOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return map[string]interface{}{}, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ADDomainModel) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given map[string]interface{} and assigns it to the Tag field.
func (o *ADDomainModel) SetTag(v map[string]interface{}) {
	o.Tag = v
}

func (o ADDomainModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ADDomainModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.ForestName) {
		toSerialize["ForestName"] = o.ForestName
	}
	if !IsNil(o.DirectoryEntry) {
		toSerialize["DirectoryEntry"] = o.DirectoryEntry
	}
	if !IsNil(o.Tag) {
		toSerialize["Tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableADDomainModel struct {
	value *ADDomainModel
	isSet bool
}

func (v NullableADDomainModel) Get() *ADDomainModel {
	return v.value
}

func (v *NullableADDomainModel) Set(val *ADDomainModel) {
	v.value = val
	v.isSet = true
}

func (v NullableADDomainModel) IsSet() bool {
	return v.isSet
}

func (v *NullableADDomainModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableADDomainModel(val *ADDomainModel) *NullableADDomainModel {
	return &NullableADDomainModel{value: val, isSet: true}
}

func (v NullableADDomainModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableADDomainModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


