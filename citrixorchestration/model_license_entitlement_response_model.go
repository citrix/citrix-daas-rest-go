/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseEntitlementResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseEntitlementResponseModel{}

// LicenseEntitlementResponseModel The response model for license entitlement when fetching license by License Access Code
type LicenseEntitlementResponseModel struct {
	// The license entitlement id
	Id *string `json:"Id,omitempty"`
	// The product name of the license
	ProductName *string `json:"ProductName,omitempty"`
	// The total quantity of the license
	LicenseTotal *int32 `json:"LicenseTotal,omitempty"`
	// The quantity of the available license
	LicenseAvailable *int32 `json:"LicenseAvailable,omitempty"`
}

// NewLicenseEntitlementResponseModel instantiates a new LicenseEntitlementResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseEntitlementResponseModel() *LicenseEntitlementResponseModel {
	this := LicenseEntitlementResponseModel{}
	return &this
}

// NewLicenseEntitlementResponseModelWithDefaults instantiates a new LicenseEntitlementResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseEntitlementResponseModelWithDefaults() *LicenseEntitlementResponseModel {
	this := LicenseEntitlementResponseModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LicenseEntitlementResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LicenseEntitlementResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LicenseEntitlementResponseModel) SetId(v string) {
	o.Id = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *LicenseEntitlementResponseModel) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementResponseModel) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *LicenseEntitlementResponseModel) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *LicenseEntitlementResponseModel) SetProductName(v string) {
	o.ProductName = &v
}

// GetLicenseTotal returns the LicenseTotal field value if set, zero value otherwise.
func (o *LicenseEntitlementResponseModel) GetLicenseTotal() int32 {
	if o == nil || IsNil(o.LicenseTotal) {
		var ret int32
		return ret
	}
	return *o.LicenseTotal
}

// GetLicenseTotalOk returns a tuple with the LicenseTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementResponseModel) GetLicenseTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseTotal) {
		return nil, false
	}
	return o.LicenseTotal, true
}

// HasLicenseTotal returns a boolean if a field has been set.
func (o *LicenseEntitlementResponseModel) HasLicenseTotal() bool {
	if o != nil && !IsNil(o.LicenseTotal) {
		return true
	}

	return false
}

// SetLicenseTotal gets a reference to the given int32 and assigns it to the LicenseTotal field.
func (o *LicenseEntitlementResponseModel) SetLicenseTotal(v int32) {
	o.LicenseTotal = &v
}

// GetLicenseAvailable returns the LicenseAvailable field value if set, zero value otherwise.
func (o *LicenseEntitlementResponseModel) GetLicenseAvailable() int32 {
	if o == nil || IsNil(o.LicenseAvailable) {
		var ret int32
		return ret
	}
	return *o.LicenseAvailable
}

// GetLicenseAvailableOk returns a tuple with the LicenseAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementResponseModel) GetLicenseAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseAvailable) {
		return nil, false
	}
	return o.LicenseAvailable, true
}

// HasLicenseAvailable returns a boolean if a field has been set.
func (o *LicenseEntitlementResponseModel) HasLicenseAvailable() bool {
	if o != nil && !IsNil(o.LicenseAvailable) {
		return true
	}

	return false
}

// SetLicenseAvailable gets a reference to the given int32 and assigns it to the LicenseAvailable field.
func (o *LicenseEntitlementResponseModel) SetLicenseAvailable(v int32) {
	o.LicenseAvailable = &v
}

func (o LicenseEntitlementResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseEntitlementResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.ProductName) {
		toSerialize["ProductName"] = o.ProductName
	}
	if !IsNil(o.LicenseTotal) {
		toSerialize["LicenseTotal"] = o.LicenseTotal
	}
	if !IsNil(o.LicenseAvailable) {
		toSerialize["LicenseAvailable"] = o.LicenseAvailable
	}
	return toSerialize, nil
}

type NullableLicenseEntitlementResponseModel struct {
	value *LicenseEntitlementResponseModel
	isSet bool
}

func (v NullableLicenseEntitlementResponseModel) Get() *LicenseEntitlementResponseModel {
	return v.value
}

func (v *NullableLicenseEntitlementResponseModel) Set(val *LicenseEntitlementResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseEntitlementResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseEntitlementResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseEntitlementResponseModel(val *LicenseEntitlementResponseModel) *NullableLicenseEntitlementResponseModel {
	return &NullableLicenseEntitlementResponseModel{value: val, isSet: true}
}

func (v NullableLicenseEntitlementResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseEntitlementResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


