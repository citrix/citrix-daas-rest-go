/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// AutoDiscoveryPeriod 
type AutoDiscoveryPeriod string

// List of AutoDiscoveryPeriod
const (
	AUTODISCOVERYPERIOD_NONE AutoDiscoveryPeriod = "None"
	AUTODISCOVERYPERIOD_HOUR AutoDiscoveryPeriod = "Hour"
	AUTODISCOVERYPERIOD_DAY AutoDiscoveryPeriod = "Day"
	AUTODISCOVERYPERIOD_WEEK AutoDiscoveryPeriod = "Week"
)

// All allowed values of AutoDiscoveryPeriod enum
var AllowedAutoDiscoveryPeriodEnumValues = []AutoDiscoveryPeriod{
	"None",
	"Hour",
	"Day",
	"Week",
}

func (v *AutoDiscoveryPeriod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AutoDiscoveryPeriod(value)
	for _, existing := range AllowedAutoDiscoveryPeriodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AutoDiscoveryPeriod", value)
}

// NewAutoDiscoveryPeriodFromValue returns a pointer to a valid AutoDiscoveryPeriod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAutoDiscoveryPeriodFromValue(v string) (*AutoDiscoveryPeriod, error) {
	ev := AutoDiscoveryPeriod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AutoDiscoveryPeriod: valid values are %v", v, AllowedAutoDiscoveryPeriodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AutoDiscoveryPeriod) IsValid() bool {
	for _, existing := range AllowedAutoDiscoveryPeriodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AutoDiscoveryPeriod value
func (v AutoDiscoveryPeriod) Ptr() *AutoDiscoveryPeriod {
	return &v
}

type NullableAutoDiscoveryPeriod struct {
	value *AutoDiscoveryPeriod
	isSet bool
}

func (v NullableAutoDiscoveryPeriod) Get() *AutoDiscoveryPeriod {
	return v.value
}

func (v *NullableAutoDiscoveryPeriod) Set(val *AutoDiscoveryPeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoDiscoveryPeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoDiscoveryPeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoDiscoveryPeriod(val *AutoDiscoveryPeriod) *NullableAutoDiscoveryPeriod {
	return &NullableAutoDiscoveryPeriod{value: val, isSet: true}
}

func (v NullableAutoDiscoveryPeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoDiscoveryPeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

