/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreFixupModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreFixupModel{}

// BackupRestoreFixupModel struct for BackupRestoreFixupModel
type BackupRestoreFixupModel struct {
	// Fixup Identifier
	Id NullableString `json:"Id,omitempty"`
	Severity *FixupSeverity `json:"Severity,omitempty"`
	// List of parameters used in fixup string formatting
	LocalizedFixup NullableString `json:"LocalizedFixup,omitempty"`
}

// NewBackupRestoreFixupModel instantiates a new BackupRestoreFixupModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreFixupModel() *BackupRestoreFixupModel {
	this := BackupRestoreFixupModel{}
	return &this
}

// NewBackupRestoreFixupModelWithDefaults instantiates a new BackupRestoreFixupModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreFixupModelWithDefaults() *BackupRestoreFixupModel {
	this := BackupRestoreFixupModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreFixupModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreFixupModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *BackupRestoreFixupModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *BackupRestoreFixupModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *BackupRestoreFixupModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *BackupRestoreFixupModel) UnsetId() {
	o.Id.Unset()
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *BackupRestoreFixupModel) GetSeverity() FixupSeverity {
	if o == nil || IsNil(o.Severity) {
		var ret FixupSeverity
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreFixupModel) GetSeverityOk() (*FixupSeverity, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *BackupRestoreFixupModel) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given FixupSeverity and assigns it to the Severity field.
func (o *BackupRestoreFixupModel) SetSeverity(v FixupSeverity) {
	o.Severity = &v
}

// GetLocalizedFixup returns the LocalizedFixup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreFixupModel) GetLocalizedFixup() string {
	if o == nil || IsNil(o.LocalizedFixup.Get()) {
		var ret string
		return ret
	}
	return *o.LocalizedFixup.Get()
}

// GetLocalizedFixupOk returns a tuple with the LocalizedFixup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreFixupModel) GetLocalizedFixupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocalizedFixup.Get(), o.LocalizedFixup.IsSet()
}

// HasLocalizedFixup returns a boolean if a field has been set.
func (o *BackupRestoreFixupModel) HasLocalizedFixup() bool {
	if o != nil && o.LocalizedFixup.IsSet() {
		return true
	}

	return false
}

// SetLocalizedFixup gets a reference to the given NullableString and assigns it to the LocalizedFixup field.
func (o *BackupRestoreFixupModel) SetLocalizedFixup(v string) {
	o.LocalizedFixup.Set(&v)
}
// SetLocalizedFixupNil sets the value for LocalizedFixup to be an explicit nil
func (o *BackupRestoreFixupModel) SetLocalizedFixupNil() {
	o.LocalizedFixup.Set(nil)
}

// UnsetLocalizedFixup ensures that no value is present for LocalizedFixup, not even an explicit nil
func (o *BackupRestoreFixupModel) UnsetLocalizedFixup() {
	o.LocalizedFixup.Unset()
}

func (o BackupRestoreFixupModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreFixupModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if !IsNil(o.Severity) {
		toSerialize["Severity"] = o.Severity
	}
	if o.LocalizedFixup.IsSet() {
		toSerialize["LocalizedFixup"] = o.LocalizedFixup.Get()
	}
	return toSerialize, nil
}

type NullableBackupRestoreFixupModel struct {
	value *BackupRestoreFixupModel
	isSet bool
}

func (v NullableBackupRestoreFixupModel) Get() *BackupRestoreFixupModel {
	return v.value
}

func (v *NullableBackupRestoreFixupModel) Set(val *BackupRestoreFixupModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreFixupModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreFixupModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreFixupModel(val *BackupRestoreFixupModel) *NullableBackupRestoreFixupModel {
	return &NullableBackupRestoreFixupModel{value: val, isSet: true}
}

func (v NullableBackupRestoreFixupModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreFixupModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


