/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorResourcePoolTraditionalDetailResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorResourcePoolTraditionalDetailResponseModelAllOf{}

// HypervisorResourcePoolTraditionalDetailResponseModelAllOf struct for HypervisorResourcePoolTraditionalDetailResponseModelAllOf
type HypervisorResourcePoolTraditionalDetailResponseModelAllOf struct {
	RootPath *HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath `json:"RootPath,omitempty"`
	// List of networks that are allowed to be used within the resource pool.
	Networks []HypervisorResourceRefResponseModel `json:"Networks"`
	// List of hypervisor-connected storage in the resource pool that is used for OS disks of virtual machines.
	Storage []HypervisorStorageResourceResponseModel `json:"Storage"`
	// List of hypervisor-connected storage in the resource pool that is used for temporary data storage for virtual machines.
	TemporaryStorage []HypervisorStorageResourceResponseModel `json:"TemporaryStorage"`
	// Indicates whether virtual machines created within this resource pool will use local storage caching for their disk images.
	UseLocalStorageCaching *bool `json:"UseLocalStorageCaching,omitempty"`
	// Custom properties.  Optional.  If not specified, will not be changed.  Only used for hypervisors of type Custom.
	CustomProperties *string `json:"CustomProperties,omitempty"`
	// List of hypervisor-connected storage in the resource pool that is used for personal v disk data storage for virtual machines.
	PersonalvDiskStorage []HypervisorStorageResourceResponseModel `json:"PersonalvDiskStorage,omitempty"`
}

// NewHypervisorResourcePoolTraditionalDetailResponseModelAllOf instantiates a new HypervisorResourcePoolTraditionalDetailResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorResourcePoolTraditionalDetailResponseModelAllOf(networks []HypervisorResourceRefResponseModel, storage []HypervisorStorageResourceResponseModel, temporaryStorage []HypervisorStorageResourceResponseModel) *HypervisorResourcePoolTraditionalDetailResponseModelAllOf {
	this := HypervisorResourcePoolTraditionalDetailResponseModelAllOf{}
	this.Networks = networks
	this.Storage = storage
	this.TemporaryStorage = temporaryStorage
	return &this
}

// NewHypervisorResourcePoolTraditionalDetailResponseModelAllOfWithDefaults instantiates a new HypervisorResourcePoolTraditionalDetailResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorResourcePoolTraditionalDetailResponseModelAllOfWithDefaults() *HypervisorResourcePoolTraditionalDetailResponseModelAllOf {
	this := HypervisorResourcePoolTraditionalDetailResponseModelAllOf{}
	return &this
}

// GetRootPath returns the RootPath field value if set, zero value otherwise.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetRootPath() HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath {
	if o == nil || IsNil(o.RootPath) {
		var ret HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath
		return ret
	}
	return *o.RootPath
}

// GetRootPathOk returns a tuple with the RootPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetRootPathOk() (*HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath, bool) {
	if o == nil || IsNil(o.RootPath) {
		return nil, false
	}
	return o.RootPath, true
}

// HasRootPath returns a boolean if a field has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) HasRootPath() bool {
	if o != nil && !IsNil(o.RootPath) {
		return true
	}

	return false
}

// SetRootPath gets a reference to the given HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath and assigns it to the RootPath field.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetRootPath(v HypervisorResourcePoolTraditionalDetailResponseModelAllOfRootPath) {
	o.RootPath = &v
}

// GetNetworks returns the Networks field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetNetworks() []HypervisorResourceRefResponseModel {
	if o == nil {
		var ret []HypervisorResourceRefResponseModel
		return ret
	}

	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetNetworksOk() ([]HypervisorResourceRefResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Networks, true
}

// SetNetworks sets field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetNetworks(v []HypervisorResourceRefResponseModel) {
	o.Networks = v
}

// GetStorage returns the Storage field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetStorage() []HypervisorStorageResourceResponseModel {
	if o == nil {
		var ret []HypervisorStorageResourceResponseModel
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetStorageOk() ([]HypervisorStorageResourceResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Storage, true
}

// SetStorage sets field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetStorage(v []HypervisorStorageResourceResponseModel) {
	o.Storage = v
}

// GetTemporaryStorage returns the TemporaryStorage field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetTemporaryStorage() []HypervisorStorageResourceResponseModel {
	if o == nil {
		var ret []HypervisorStorageResourceResponseModel
		return ret
	}

	return o.TemporaryStorage
}

// GetTemporaryStorageOk returns a tuple with the TemporaryStorage field value
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetTemporaryStorageOk() ([]HypervisorStorageResourceResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemporaryStorage, true
}

// SetTemporaryStorage sets field value
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetTemporaryStorage(v []HypervisorStorageResourceResponseModel) {
	o.TemporaryStorage = v
}

// GetUseLocalStorageCaching returns the UseLocalStorageCaching field value if set, zero value otherwise.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetUseLocalStorageCaching() bool {
	if o == nil || IsNil(o.UseLocalStorageCaching) {
		var ret bool
		return ret
	}
	return *o.UseLocalStorageCaching
}

// GetUseLocalStorageCachingOk returns a tuple with the UseLocalStorageCaching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetUseLocalStorageCachingOk() (*bool, bool) {
	if o == nil || IsNil(o.UseLocalStorageCaching) {
		return nil, false
	}
	return o.UseLocalStorageCaching, true
}

// HasUseLocalStorageCaching returns a boolean if a field has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) HasUseLocalStorageCaching() bool {
	if o != nil && !IsNil(o.UseLocalStorageCaching) {
		return true
	}

	return false
}

// SetUseLocalStorageCaching gets a reference to the given bool and assigns it to the UseLocalStorageCaching field.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetUseLocalStorageCaching(v bool) {
	o.UseLocalStorageCaching = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetCustomProperties() string {
	if o == nil || IsNil(o.CustomProperties) {
		var ret string
		return ret
	}
	return *o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetCustomPropertiesOk() (*string, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given string and assigns it to the CustomProperties field.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetCustomProperties(v string) {
	o.CustomProperties = &v
}

// GetPersonalvDiskStorage returns the PersonalvDiskStorage field value if set, zero value otherwise.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetPersonalvDiskStorage() []HypervisorStorageResourceResponseModel {
	if o == nil || IsNil(o.PersonalvDiskStorage) {
		var ret []HypervisorStorageResourceResponseModel
		return ret
	}
	return o.PersonalvDiskStorage
}

// GetPersonalvDiskStorageOk returns a tuple with the PersonalvDiskStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) GetPersonalvDiskStorageOk() ([]HypervisorStorageResourceResponseModel, bool) {
	if o == nil || IsNil(o.PersonalvDiskStorage) {
		return nil, false
	}
	return o.PersonalvDiskStorage, true
}

// HasPersonalvDiskStorage returns a boolean if a field has been set.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) HasPersonalvDiskStorage() bool {
	if o != nil && !IsNil(o.PersonalvDiskStorage) {
		return true
	}

	return false
}

// SetPersonalvDiskStorage gets a reference to the given []HypervisorStorageResourceResponseModel and assigns it to the PersonalvDiskStorage field.
func (o *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) SetPersonalvDiskStorage(v []HypervisorStorageResourceResponseModel) {
	o.PersonalvDiskStorage = v
}

func (o HypervisorResourcePoolTraditionalDetailResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorResourcePoolTraditionalDetailResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RootPath) {
		toSerialize["RootPath"] = o.RootPath
	}
	toSerialize["Networks"] = o.Networks
	toSerialize["Storage"] = o.Storage
	toSerialize["TemporaryStorage"] = o.TemporaryStorage
	if !IsNil(o.UseLocalStorageCaching) {
		toSerialize["UseLocalStorageCaching"] = o.UseLocalStorageCaching
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	if !IsNil(o.PersonalvDiskStorage) {
		toSerialize["PersonalvDiskStorage"] = o.PersonalvDiskStorage
	}
	return toSerialize, nil
}

type NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf struct {
	value *HypervisorResourcePoolTraditionalDetailResponseModelAllOf
	isSet bool
}

func (v NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) Get() *HypervisorResourcePoolTraditionalDetailResponseModelAllOf {
	return v.value
}

func (v *NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) Set(val *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf(val *HypervisorResourcePoolTraditionalDetailResponseModelAllOf) *NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf {
	return &NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf{value: val, isSet: true}
}

func (v NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorResourcePoolTraditionalDetailResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


