/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the LicenseEntitlementRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LicenseEntitlementRequestModel{}

// LicenseEntitlementRequestModel Request model to download license based on license entitlement id
type LicenseEntitlementRequestModel struct {
	// The License Access Code provided by Citrix.
	LicenseAccessCode string `json:"LicenseAccessCode"`
	// License entitlement id
	Id string `json:"Id"`
}

// NewLicenseEntitlementRequestModel instantiates a new LicenseEntitlementRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseEntitlementRequestModel(licenseAccessCode string, id string) *LicenseEntitlementRequestModel {
	this := LicenseEntitlementRequestModel{}
	this.LicenseAccessCode = licenseAccessCode
	this.Id = id
	return &this
}

// NewLicenseEntitlementRequestModelWithDefaults instantiates a new LicenseEntitlementRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseEntitlementRequestModelWithDefaults() *LicenseEntitlementRequestModel {
	this := LicenseEntitlementRequestModel{}
	return &this
}

// GetLicenseAccessCode returns the LicenseAccessCode field value
func (o *LicenseEntitlementRequestModel) GetLicenseAccessCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseAccessCode
}

// GetLicenseAccessCodeOk returns a tuple with the LicenseAccessCode field value
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementRequestModel) GetLicenseAccessCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseAccessCode, true
}

// SetLicenseAccessCode sets field value
func (o *LicenseEntitlementRequestModel) SetLicenseAccessCode(v string) {
	o.LicenseAccessCode = v
}

// GetId returns the Id field value
func (o *LicenseEntitlementRequestModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LicenseEntitlementRequestModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LicenseEntitlementRequestModel) SetId(v string) {
	o.Id = v
}

func (o LicenseEntitlementRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LicenseEntitlementRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["LicenseAccessCode"] = o.LicenseAccessCode
	toSerialize["Id"] = o.Id
	return toSerialize, nil
}

type NullableLicenseEntitlementRequestModel struct {
	value *LicenseEntitlementRequestModel
	isSet bool
}

func (v NullableLicenseEntitlementRequestModel) Get() *LicenseEntitlementRequestModel {
	return v.value
}

func (v *NullableLicenseEntitlementRequestModel) Set(val *LicenseEntitlementRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseEntitlementRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseEntitlementRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseEntitlementRequestModel(val *LicenseEntitlementRequestModel) *NullableLicenseEntitlementRequestModel {
	return &NullableLicenseEntitlementRequestModel{value: val, isSet: true}
}

func (v NullableLicenseEntitlementRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseEntitlementRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


