/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the GpoTestPolicyData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GpoTestPolicyData{}

// GpoTestPolicyData Policy data from the output of the Test-BrokerDesktopPolicy command.
type GpoTestPolicyData struct {
	// Error code.
	ErrorCode NullableString `json:"errorCode,omitempty"`
	// Policy name.
	PolicyName NullableString `json:"policyName,omitempty"`
	// Data for settings in the policy. Only settings whose values have errors may be listed.
	Settings []GpoTestSettingData `json:"settings,omitempty"`
	// Data for filters in the policy. Only filters whose values have errors may be listed.
	Filters []GpoTestFilterData `json:"filters,omitempty"`
}

// NewGpoTestPolicyData instantiates a new GpoTestPolicyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpoTestPolicyData() *GpoTestPolicyData {
	this := GpoTestPolicyData{}
	return &this
}

// NewGpoTestPolicyDataWithDefaults instantiates a new GpoTestPolicyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpoTestPolicyDataWithDefaults() *GpoTestPolicyData {
	this := GpoTestPolicyData{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestPolicyData) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestPolicyData) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *GpoTestPolicyData) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *GpoTestPolicyData) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}

// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *GpoTestPolicyData) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *GpoTestPolicyData) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestPolicyData) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName.Get()) {
		var ret string
		return ret
	}
	return *o.PolicyName.Get()
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestPolicyData) GetPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PolicyName.Get(), o.PolicyName.IsSet()
}

// HasPolicyName returns a boolean if a field has been set.
func (o *GpoTestPolicyData) HasPolicyName() bool {
	if o != nil && o.PolicyName.IsSet() {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given NullableString and assigns it to the PolicyName field.
func (o *GpoTestPolicyData) SetPolicyName(v string) {
	o.PolicyName.Set(&v)
}

// SetPolicyNameNil sets the value for PolicyName to be an explicit nil
func (o *GpoTestPolicyData) SetPolicyNameNil() {
	o.PolicyName.Set(nil)
}

// UnsetPolicyName ensures that no value is present for PolicyName, not even an explicit nil
func (o *GpoTestPolicyData) UnsetPolicyName() {
	o.PolicyName.Unset()
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestPolicyData) GetSettings() []GpoTestSettingData {
	if o == nil {
		var ret []GpoTestSettingData
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestPolicyData) GetSettingsOk() ([]GpoTestSettingData, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *GpoTestPolicyData) HasSettings() bool {
	if o != nil && IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []GpoTestSettingData and assigns it to the Settings field.
func (o *GpoTestPolicyData) SetSettings(v []GpoTestSettingData) {
	o.Settings = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GpoTestPolicyData) GetFilters() []GpoTestFilterData {
	if o == nil {
		var ret []GpoTestFilterData
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GpoTestPolicyData) GetFiltersOk() ([]GpoTestFilterData, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *GpoTestPolicyData) HasFilters() bool {
	if o != nil && IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []GpoTestFilterData and assigns it to the Filters field.
func (o *GpoTestPolicyData) SetFilters(v []GpoTestFilterData) {
	o.Filters = v
}

func (o GpoTestPolicyData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GpoTestPolicyData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorCode.IsSet() {
		toSerialize["errorCode"] = o.ErrorCode.Get()
	}
	if o.PolicyName.IsSet() {
		toSerialize["policyName"] = o.PolicyName.Get()
	}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullableGpoTestPolicyData struct {
	value *GpoTestPolicyData
	isSet bool
}

func (v NullableGpoTestPolicyData) Get() *GpoTestPolicyData {
	return v.value
}

func (v *NullableGpoTestPolicyData) Set(val *GpoTestPolicyData) {
	v.value = val
	v.isSet = true
}

func (v NullableGpoTestPolicyData) IsSet() bool {
	return v.isSet
}

func (v *NullableGpoTestPolicyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpoTestPolicyData(val *GpoTestPolicyData) *NullableGpoTestPolicyData {
	return &NullableGpoTestPolicyData{value: val, isSet: true}
}

func (v NullableGpoTestPolicyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpoTestPolicyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
