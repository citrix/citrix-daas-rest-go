/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PrinterAssignmentContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrinterAssignmentContract{}

// PrinterAssignmentContract External representation of printer assignment data. This makes it easier for end users to read/write printer assignments. This class must have identical members as the AssignmentData class in GpfxSettings.dll. The member names must be the same.
type PrinterAssignmentContract struct {
	DefaultPrinterOption *DefaultPrinterOption `json:"DefaultPrinterOption,omitempty"`
	// The custom printer. If specified, the default printer is not used.
	SpecificDefaultPrinter NullableString `json:"SpecificDefaultPrinter,omitempty"`
	// Session printers.
	SessionPrinters []PrinterPropertiesContract `json:"SessionPrinters,omitempty"`
	// Client names or IPs.
	Filters []string `json:"Filters,omitempty"`
}

// NewPrinterAssignmentContract instantiates a new PrinterAssignmentContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrinterAssignmentContract() *PrinterAssignmentContract {
	this := PrinterAssignmentContract{}
	return &this
}

// NewPrinterAssignmentContractWithDefaults instantiates a new PrinterAssignmentContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrinterAssignmentContractWithDefaults() *PrinterAssignmentContract {
	this := PrinterAssignmentContract{}
	return &this
}

// GetDefaultPrinterOption returns the DefaultPrinterOption field value if set, zero value otherwise.
func (o *PrinterAssignmentContract) GetDefaultPrinterOption() DefaultPrinterOption {
	if o == nil || IsNil(o.DefaultPrinterOption) {
		var ret DefaultPrinterOption
		return ret
	}
	return *o.DefaultPrinterOption
}

// GetDefaultPrinterOptionOk returns a tuple with the DefaultPrinterOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterAssignmentContract) GetDefaultPrinterOptionOk() (*DefaultPrinterOption, bool) {
	if o == nil || IsNil(o.DefaultPrinterOption) {
		return nil, false
	}
	return o.DefaultPrinterOption, true
}

// HasDefaultPrinterOption returns a boolean if a field has been set.
func (o *PrinterAssignmentContract) HasDefaultPrinterOption() bool {
	if o != nil && !IsNil(o.DefaultPrinterOption) {
		return true
	}

	return false
}

// SetDefaultPrinterOption gets a reference to the given DefaultPrinterOption and assigns it to the DefaultPrinterOption field.
func (o *PrinterAssignmentContract) SetDefaultPrinterOption(v DefaultPrinterOption) {
	o.DefaultPrinterOption = &v
}

// GetSpecificDefaultPrinter returns the SpecificDefaultPrinter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterAssignmentContract) GetSpecificDefaultPrinter() string {
	if o == nil || IsNil(o.SpecificDefaultPrinter.Get()) {
		var ret string
		return ret
	}
	return *o.SpecificDefaultPrinter.Get()
}

// GetSpecificDefaultPrinterOk returns a tuple with the SpecificDefaultPrinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterAssignmentContract) GetSpecificDefaultPrinterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecificDefaultPrinter.Get(), o.SpecificDefaultPrinter.IsSet()
}

// HasSpecificDefaultPrinter returns a boolean if a field has been set.
func (o *PrinterAssignmentContract) HasSpecificDefaultPrinter() bool {
	if o != nil && o.SpecificDefaultPrinter.IsSet() {
		return true
	}

	return false
}

// SetSpecificDefaultPrinter gets a reference to the given NullableString and assigns it to the SpecificDefaultPrinter field.
func (o *PrinterAssignmentContract) SetSpecificDefaultPrinter(v string) {
	o.SpecificDefaultPrinter.Set(&v)
}
// SetSpecificDefaultPrinterNil sets the value for SpecificDefaultPrinter to be an explicit nil
func (o *PrinterAssignmentContract) SetSpecificDefaultPrinterNil() {
	o.SpecificDefaultPrinter.Set(nil)
}

// UnsetSpecificDefaultPrinter ensures that no value is present for SpecificDefaultPrinter, not even an explicit nil
func (o *PrinterAssignmentContract) UnsetSpecificDefaultPrinter() {
	o.SpecificDefaultPrinter.Unset()
}

// GetSessionPrinters returns the SessionPrinters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterAssignmentContract) GetSessionPrinters() []PrinterPropertiesContract {
	if o == nil {
		var ret []PrinterPropertiesContract
		return ret
	}
	return o.SessionPrinters
}

// GetSessionPrintersOk returns a tuple with the SessionPrinters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterAssignmentContract) GetSessionPrintersOk() ([]PrinterPropertiesContract, bool) {
	if o == nil || IsNil(o.SessionPrinters) {
		return nil, false
	}
	return o.SessionPrinters, true
}

// HasSessionPrinters returns a boolean if a field has been set.
func (o *PrinterAssignmentContract) HasSessionPrinters() bool {
	if o != nil && IsNil(o.SessionPrinters) {
		return true
	}

	return false
}

// SetSessionPrinters gets a reference to the given []PrinterPropertiesContract and assigns it to the SessionPrinters field.
func (o *PrinterAssignmentContract) SetSessionPrinters(v []PrinterPropertiesContract) {
	o.SessionPrinters = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrinterAssignmentContract) GetFilters() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrinterAssignmentContract) GetFiltersOk() ([]string, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *PrinterAssignmentContract) HasFilters() bool {
	if o != nil && IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []string and assigns it to the Filters field.
func (o *PrinterAssignmentContract) SetFilters(v []string) {
	o.Filters = v
}

func (o PrinterAssignmentContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrinterAssignmentContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultPrinterOption) {
		toSerialize["DefaultPrinterOption"] = o.DefaultPrinterOption
	}
	if o.SpecificDefaultPrinter.IsSet() {
		toSerialize["SpecificDefaultPrinter"] = o.SpecificDefaultPrinter.Get()
	}
	if o.SessionPrinters != nil {
		toSerialize["SessionPrinters"] = o.SessionPrinters
	}
	if o.Filters != nil {
		toSerialize["Filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullablePrinterAssignmentContract struct {
	value *PrinterAssignmentContract
	isSet bool
}

func (v NullablePrinterAssignmentContract) Get() *PrinterAssignmentContract {
	return v.value
}

func (v *NullablePrinterAssignmentContract) Set(val *PrinterAssignmentContract) {
	v.value = val
	v.isSet = true
}

func (v NullablePrinterAssignmentContract) IsSet() bool {
	return v.isSet
}

func (v *NullablePrinterAssignmentContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrinterAssignmentContract(val *PrinterAssignmentContract) *NullablePrinterAssignmentContract {
	return &NullablePrinterAssignmentContract{value: val, isSet: true}
}

func (v NullablePrinterAssignmentContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrinterAssignmentContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


