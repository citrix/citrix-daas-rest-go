/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// MachineAccountDeleteOption Option for how to treat deleted machine accounts.
type MachineAccountDeleteOption string

// List of MachineAccountDeleteOption
const (
	MACHINEACCOUNTDELETEOPTION_UNKNOWN MachineAccountDeleteOption = "Unknown"
	MACHINEACCOUNTDELETEOPTION_LEAVE MachineAccountDeleteOption = "Leave"
	MACHINEACCOUNTDELETEOPTION_NONE MachineAccountDeleteOption = "None"
	MACHINEACCOUNTDELETEOPTION_DISABLE MachineAccountDeleteOption = "Disable"
	MACHINEACCOUNTDELETEOPTION_DELETE MachineAccountDeleteOption = "Delete"
)

// All allowed values of MachineAccountDeleteOption enum
var AllowedMachineAccountDeleteOptionEnumValues = []MachineAccountDeleteOption{
	"Unknown",
	"Leave",
	"None",
	"Disable",
	"Delete",
}

func (v *MachineAccountDeleteOption) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = MachineAccountDeleteOption(value)
	return nil
}

// NewMachineAccountDeleteOptionFromValue returns a pointer to a valid MachineAccountDeleteOption
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMachineAccountDeleteOptionFromValue(v string) (*MachineAccountDeleteOption, error) {
	ev := MachineAccountDeleteOption(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MachineAccountDeleteOption: valid values are %v", v, AllowedMachineAccountDeleteOptionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MachineAccountDeleteOption) IsValid() bool {
	for _, existing := range AllowedMachineAccountDeleteOptionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MachineAccountDeleteOption value
func (v MachineAccountDeleteOption) Ptr() *MachineAccountDeleteOption {
	return &v
}

type NullableMachineAccountDeleteOption struct {
	value *MachineAccountDeleteOption
	isSet bool
}

func (v NullableMachineAccountDeleteOption) Get() *MachineAccountDeleteOption {
	return v.value
}

func (v *NullableMachineAccountDeleteOption) Set(val *MachineAccountDeleteOption) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineAccountDeleteOption) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineAccountDeleteOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineAccountDeleteOption(val *MachineAccountDeleteOption) *NullableMachineAccountDeleteOption {
	return &NullableMachineAccountDeleteOption{value: val, isSet: true}
}

func (v NullableMachineAccountDeleteOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineAccountDeleteOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

