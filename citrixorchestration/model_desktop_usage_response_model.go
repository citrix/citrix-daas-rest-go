/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the DesktopUsageResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DesktopUsageResponseModel{}

// DesktopUsageResponseModel Desktop usage data.
type DesktopUsageResponseModel struct {
	// Time when data point was collected.
	Time string `json:"Time"`
	// Formatted time when data point was collected. RFC 3339 compatible format.
	FormattedTime string `json:"FormattedTime"`
	// Specifies how many desktop are in use at the time the timestamp corresponds to.
	Usage int32 `json:"Usage"`
}

// NewDesktopUsageResponseModel instantiates a new DesktopUsageResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesktopUsageResponseModel(time string, formattedTime string, usage int32) *DesktopUsageResponseModel {
	this := DesktopUsageResponseModel{}
	this.Time = time
	this.FormattedTime = formattedTime
	this.Usage = usage
	return &this
}

// NewDesktopUsageResponseModelWithDefaults instantiates a new DesktopUsageResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesktopUsageResponseModelWithDefaults() *DesktopUsageResponseModel {
	this := DesktopUsageResponseModel{}
	return &this
}

// GetTime returns the Time field value
func (o *DesktopUsageResponseModel) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *DesktopUsageResponseModel) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *DesktopUsageResponseModel) SetTime(v string) {
	o.Time = v
}

// GetFormattedTime returns the FormattedTime field value
func (o *DesktopUsageResponseModel) GetFormattedTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormattedTime
}

// GetFormattedTimeOk returns a tuple with the FormattedTime field value
// and a boolean to check if the value has been set.
func (o *DesktopUsageResponseModel) GetFormattedTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormattedTime, true
}

// SetFormattedTime sets field value
func (o *DesktopUsageResponseModel) SetFormattedTime(v string) {
	o.FormattedTime = v
}

// GetUsage returns the Usage field value
func (o *DesktopUsageResponseModel) GetUsage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value
// and a boolean to check if the value has been set.
func (o *DesktopUsageResponseModel) GetUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Usage, true
}

// SetUsage sets field value
func (o *DesktopUsageResponseModel) SetUsage(v int32) {
	o.Usage = v
}

func (o DesktopUsageResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DesktopUsageResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Time"] = o.Time
	toSerialize["FormattedTime"] = o.FormattedTime
	toSerialize["Usage"] = o.Usage
	return toSerialize, nil
}

type NullableDesktopUsageResponseModel struct {
	value *DesktopUsageResponseModel
	isSet bool
}

func (v NullableDesktopUsageResponseModel) Get() *DesktopUsageResponseModel {
	return v.value
}

func (v *NullableDesktopUsageResponseModel) Set(val *DesktopUsageResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDesktopUsageResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDesktopUsageResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesktopUsageResponseModel(val *DesktopUsageResponseModel) *NullableDesktopUsageResponseModel {
	return &NullableDesktopUsageResponseModel{value: val, isSet: true}
}

func (v NullableDesktopUsageResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesktopUsageResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


