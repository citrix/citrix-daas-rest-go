/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateApplicationRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequestModel{}

// CreateApplicationRequestModel Request object for creating a published application.
type CreateApplicationRequestModel struct {
	// The application folder in which the application should be created.
	ApplicationFolder NullableString `json:"ApplicationFolder,omitempty"`
	ApplicationType *ApplicationType `json:"ApplicationType,omitempty"`
	// Internal name of the application.
	BrowserName NullableString `json:"BrowserName,omitempty"`
	// Specifies the folder that the application belongs to as the user sees it.
	ClientFolder NullableString `json:"ClientFolder,omitempty"`
	CpuPriorityLevel *CpuPriorityLevel `json:"CpuPriorityLevel,omitempty"`
	// Specifies one or more application groups which the application will be published to.
	ApplicationGroups []string `json:"ApplicationGroups,omitempty"`
	// Specifies the description of the application.
	Description NullableString `json:"Description,omitempty"`
	// Specifies whether or not this application can be launched.
	Enabled NullableBool `json:"Enabled,omitempty"`
	// Indicates whether or not this application is enumerable
	DoNotEnumerate NullableBool `json:"DoNotEnumerate,omitempty"`
	// Specifies a home zone preference used when launching this application.
	HomeZone NullableString `json:"HomeZone,omitempty"`
	HomeZoneMode *HomeZoneMode `json:"HomeZoneMode,omitempty"`
	// Icon to use for the application.
	Icon NullableString `json:"Icon,omitempty"`
	// Specifies Whether the Icon is from client or not. Only can be set to `true` if Application Type is InstalledOnClient
	IconFromClient NullableBool `json:"IconFromClient,omitempty"`
	// Specifies whether the IncludedUsers filter is enabled.  If the filter is disabled then any user who satisfies the requirements of the delivery group's access polic(ies) is implicitly granted access to the application.
	IncludedUserFilterEnabled NullableBool `json:"IncludedUserFilterEnabled,omitempty"`
	// Specifies the included users filter of the application; that is, the users and groups who are explicitly granted access to the published application.
	IncludedUsers []string `json:"IncludedUsers,omitempty"`
	InstalledAppProperties *CreateInstalledAppRequestModel `json:"InstalledAppProperties,omitempty"`
	AppVAppProperties *AppVAppRequestModel `json:"AppVAppProperties,omitempty"`
	// Location of published content.
	ContentLocation NullableString `json:"ContentLocation,omitempty"`
	// Specifies the maximum allowed concurrently running instances of the application that an individual user can have.
	MaxPerUserInstances NullableInt32 `json:"MaxPerUserInstances,omitempty"`
	// Specifies the maximum allowed total ofconcurrently running instances of the application within the site.
	MaxTotalInstances NullableInt32 `json:"MaxTotalInstances,omitempty"`
	// Specifies the name of the application.
	Name string `json:"Name"`
	// The name seen by end users who have access to the application.
	PublishedName NullableString `json:"PublishedName,omitempty"`
	// Specifies whether or not a shortcut to the application should be placed on the user device.
	ShortcutAddedToDesktop NullableBool `json:"ShortcutAddedToDesktop,omitempty"`
	// Specifies whether or not a shortcut to the application should be placed in the user's start menu on their user device.
	ShortcutAddedToStartMenu NullableBool `json:"ShortcutAddedToStartMenu,omitempty"`
	// Specifies the name of the start menu folder that holds the application shortcut (if any).
	StartMenuFolder NullableString `json:"StartMenuFolder,omitempty"`
	// Specifies whether or not this application is visible to users.
	Visible NullableBool `json:"Visible,omitempty"`
	// Specifies whether or not the session waits for the printers to be created before allowing the user to interact with the session.
	WaitForPrinterCreation NullableBool `json:"WaitForPrinterCreation,omitempty"`
}

// NewCreateApplicationRequestModel instantiates a new CreateApplicationRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequestModel(name string) *CreateApplicationRequestModel {
	this := CreateApplicationRequestModel{}
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	var doNotEnumerate bool = false
	this.DoNotEnumerate = *NewNullableBool(&doNotEnumerate)
	var iconFromClient bool = false
	this.IconFromClient = *NewNullableBool(&iconFromClient)
	var includedUserFilterEnabled bool = false
	this.IncludedUserFilterEnabled = *NewNullableBool(&includedUserFilterEnabled)
	var maxPerUserInstances int32 = 0
	this.MaxPerUserInstances = *NewNullableInt32(&maxPerUserInstances)
	var maxTotalInstances int32 = 0
	this.MaxTotalInstances = *NewNullableInt32(&maxTotalInstances)
	this.Name = name
	var shortcutAddedToDesktop bool = false
	this.ShortcutAddedToDesktop = *NewNullableBool(&shortcutAddedToDesktop)
	var shortcutAddedToStartMenu bool = false
	this.ShortcutAddedToStartMenu = *NewNullableBool(&shortcutAddedToStartMenu)
	var visible bool = true
	this.Visible = *NewNullableBool(&visible)
	var waitForPrinterCreation bool = false
	this.WaitForPrinterCreation = *NewNullableBool(&waitForPrinterCreation)
	return &this
}

// NewCreateApplicationRequestModelWithDefaults instantiates a new CreateApplicationRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestModelWithDefaults() *CreateApplicationRequestModel {
	this := CreateApplicationRequestModel{}
	var enabled bool = true
	this.Enabled = *NewNullableBool(&enabled)
	var doNotEnumerate bool = false
	this.DoNotEnumerate = *NewNullableBool(&doNotEnumerate)
	var iconFromClient bool = false
	this.IconFromClient = *NewNullableBool(&iconFromClient)
	var includedUserFilterEnabled bool = false
	this.IncludedUserFilterEnabled = *NewNullableBool(&includedUserFilterEnabled)
	var maxPerUserInstances int32 = 0
	this.MaxPerUserInstances = *NewNullableInt32(&maxPerUserInstances)
	var maxTotalInstances int32 = 0
	this.MaxTotalInstances = *NewNullableInt32(&maxTotalInstances)
	var shortcutAddedToDesktop bool = false
	this.ShortcutAddedToDesktop = *NewNullableBool(&shortcutAddedToDesktop)
	var shortcutAddedToStartMenu bool = false
	this.ShortcutAddedToStartMenu = *NewNullableBool(&shortcutAddedToStartMenu)
	var visible bool = true
	this.Visible = *NewNullableBool(&visible)
	var waitForPrinterCreation bool = false
	this.WaitForPrinterCreation = *NewNullableBool(&waitForPrinterCreation)
	return &this
}

// GetApplicationFolder returns the ApplicationFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetApplicationFolder() string {
	if o == nil || IsNil(o.ApplicationFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationFolder.Get()
}

// GetApplicationFolderOk returns a tuple with the ApplicationFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetApplicationFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationFolder.Get(), o.ApplicationFolder.IsSet()
}

// HasApplicationFolder returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasApplicationFolder() bool {
	if o != nil && o.ApplicationFolder.IsSet() {
		return true
	}

	return false
}

// SetApplicationFolder gets a reference to the given NullableString and assigns it to the ApplicationFolder field.
func (o *CreateApplicationRequestModel) SetApplicationFolder(v string) {
	o.ApplicationFolder.Set(&v)
}
// SetApplicationFolderNil sets the value for ApplicationFolder to be an explicit nil
func (o *CreateApplicationRequestModel) SetApplicationFolderNil() {
	o.ApplicationFolder.Set(nil)
}

// UnsetApplicationFolder ensures that no value is present for ApplicationFolder, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetApplicationFolder() {
	o.ApplicationFolder.Unset()
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise.
func (o *CreateApplicationRequestModel) GetApplicationType() ApplicationType {
	if o == nil || IsNil(o.ApplicationType) {
		var ret ApplicationType
		return ret
	}
	return *o.ApplicationType
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetApplicationTypeOk() (*ApplicationType, bool) {
	if o == nil || IsNil(o.ApplicationType) {
		return nil, false
	}
	return o.ApplicationType, true
}

// HasApplicationType returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasApplicationType() bool {
	if o != nil && !IsNil(o.ApplicationType) {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given ApplicationType and assigns it to the ApplicationType field.
func (o *CreateApplicationRequestModel) SetApplicationType(v ApplicationType) {
	o.ApplicationType = &v
}

// GetBrowserName returns the BrowserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetBrowserName() string {
	if o == nil || IsNil(o.BrowserName.Get()) {
		var ret string
		return ret
	}
	return *o.BrowserName.Get()
}

// GetBrowserNameOk returns a tuple with the BrowserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetBrowserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BrowserName.Get(), o.BrowserName.IsSet()
}

// HasBrowserName returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasBrowserName() bool {
	if o != nil && o.BrowserName.IsSet() {
		return true
	}

	return false
}

// SetBrowserName gets a reference to the given NullableString and assigns it to the BrowserName field.
func (o *CreateApplicationRequestModel) SetBrowserName(v string) {
	o.BrowserName.Set(&v)
}
// SetBrowserNameNil sets the value for BrowserName to be an explicit nil
func (o *CreateApplicationRequestModel) SetBrowserNameNil() {
	o.BrowserName.Set(nil)
}

// UnsetBrowserName ensures that no value is present for BrowserName, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetBrowserName() {
	o.BrowserName.Unset()
}

// GetClientFolder returns the ClientFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetClientFolder() string {
	if o == nil || IsNil(o.ClientFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ClientFolder.Get()
}

// GetClientFolderOk returns a tuple with the ClientFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetClientFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientFolder.Get(), o.ClientFolder.IsSet()
}

// HasClientFolder returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasClientFolder() bool {
	if o != nil && o.ClientFolder.IsSet() {
		return true
	}

	return false
}

// SetClientFolder gets a reference to the given NullableString and assigns it to the ClientFolder field.
func (o *CreateApplicationRequestModel) SetClientFolder(v string) {
	o.ClientFolder.Set(&v)
}
// SetClientFolderNil sets the value for ClientFolder to be an explicit nil
func (o *CreateApplicationRequestModel) SetClientFolderNil() {
	o.ClientFolder.Set(nil)
}

// UnsetClientFolder ensures that no value is present for ClientFolder, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetClientFolder() {
	o.ClientFolder.Unset()
}

// GetCpuPriorityLevel returns the CpuPriorityLevel field value if set, zero value otherwise.
func (o *CreateApplicationRequestModel) GetCpuPriorityLevel() CpuPriorityLevel {
	if o == nil || IsNil(o.CpuPriorityLevel) {
		var ret CpuPriorityLevel
		return ret
	}
	return *o.CpuPriorityLevel
}

// GetCpuPriorityLevelOk returns a tuple with the CpuPriorityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetCpuPriorityLevelOk() (*CpuPriorityLevel, bool) {
	if o == nil || IsNil(o.CpuPriorityLevel) {
		return nil, false
	}
	return o.CpuPriorityLevel, true
}

// HasCpuPriorityLevel returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasCpuPriorityLevel() bool {
	if o != nil && !IsNil(o.CpuPriorityLevel) {
		return true
	}

	return false
}

// SetCpuPriorityLevel gets a reference to the given CpuPriorityLevel and assigns it to the CpuPriorityLevel field.
func (o *CreateApplicationRequestModel) SetCpuPriorityLevel(v CpuPriorityLevel) {
	o.CpuPriorityLevel = &v
}

// GetApplicationGroups returns the ApplicationGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetApplicationGroups() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ApplicationGroups
}

// GetApplicationGroupsOk returns a tuple with the ApplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetApplicationGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationGroups) {
		return nil, false
	}
	return o.ApplicationGroups, true
}

// HasApplicationGroups returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasApplicationGroups() bool {
	if o != nil && IsNil(o.ApplicationGroups) {
		return true
	}

	return false
}

// SetApplicationGroups gets a reference to the given []string and assigns it to the ApplicationGroups field.
func (o *CreateApplicationRequestModel) SetApplicationGroups(v []string) {
	o.ApplicationGroups = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateApplicationRequestModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateApplicationRequestModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *CreateApplicationRequestModel) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}
// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *CreateApplicationRequestModel) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetDoNotEnumerate returns the DoNotEnumerate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetDoNotEnumerate() bool {
	if o == nil || IsNil(o.DoNotEnumerate.Get()) {
		var ret bool
		return ret
	}
	return *o.DoNotEnumerate.Get()
}

// GetDoNotEnumerateOk returns a tuple with the DoNotEnumerate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetDoNotEnumerateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DoNotEnumerate.Get(), o.DoNotEnumerate.IsSet()
}

// HasDoNotEnumerate returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasDoNotEnumerate() bool {
	if o != nil && o.DoNotEnumerate.IsSet() {
		return true
	}

	return false
}

// SetDoNotEnumerate gets a reference to the given NullableBool and assigns it to the DoNotEnumerate field.
func (o *CreateApplicationRequestModel) SetDoNotEnumerate(v bool) {
	o.DoNotEnumerate.Set(&v)
}
// SetDoNotEnumerateNil sets the value for DoNotEnumerate to be an explicit nil
func (o *CreateApplicationRequestModel) SetDoNotEnumerateNil() {
	o.DoNotEnumerate.Set(nil)
}

// UnsetDoNotEnumerate ensures that no value is present for DoNotEnumerate, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetDoNotEnumerate() {
	o.DoNotEnumerate.Unset()
}

// GetHomeZone returns the HomeZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetHomeZone() string {
	if o == nil || IsNil(o.HomeZone.Get()) {
		var ret string
		return ret
	}
	return *o.HomeZone.Get()
}

// GetHomeZoneOk returns a tuple with the HomeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetHomeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomeZone.Get(), o.HomeZone.IsSet()
}

// HasHomeZone returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasHomeZone() bool {
	if o != nil && o.HomeZone.IsSet() {
		return true
	}

	return false
}

// SetHomeZone gets a reference to the given NullableString and assigns it to the HomeZone field.
func (o *CreateApplicationRequestModel) SetHomeZone(v string) {
	o.HomeZone.Set(&v)
}
// SetHomeZoneNil sets the value for HomeZone to be an explicit nil
func (o *CreateApplicationRequestModel) SetHomeZoneNil() {
	o.HomeZone.Set(nil)
}

// UnsetHomeZone ensures that no value is present for HomeZone, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetHomeZone() {
	o.HomeZone.Unset()
}

// GetHomeZoneMode returns the HomeZoneMode field value if set, zero value otherwise.
func (o *CreateApplicationRequestModel) GetHomeZoneMode() HomeZoneMode {
	if o == nil || IsNil(o.HomeZoneMode) {
		var ret HomeZoneMode
		return ret
	}
	return *o.HomeZoneMode
}

// GetHomeZoneModeOk returns a tuple with the HomeZoneMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetHomeZoneModeOk() (*HomeZoneMode, bool) {
	if o == nil || IsNil(o.HomeZoneMode) {
		return nil, false
	}
	return o.HomeZoneMode, true
}

// HasHomeZoneMode returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasHomeZoneMode() bool {
	if o != nil && !IsNil(o.HomeZoneMode) {
		return true
	}

	return false
}

// SetHomeZoneMode gets a reference to the given HomeZoneMode and assigns it to the HomeZoneMode field.
func (o *CreateApplicationRequestModel) SetHomeZoneMode(v HomeZoneMode) {
	o.HomeZoneMode = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *CreateApplicationRequestModel) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *CreateApplicationRequestModel) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetIcon() {
	o.Icon.Unset()
}

// GetIconFromClient returns the IconFromClient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetIconFromClient() bool {
	if o == nil || IsNil(o.IconFromClient.Get()) {
		var ret bool
		return ret
	}
	return *o.IconFromClient.Get()
}

// GetIconFromClientOk returns a tuple with the IconFromClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetIconFromClientOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconFromClient.Get(), o.IconFromClient.IsSet()
}

// HasIconFromClient returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasIconFromClient() bool {
	if o != nil && o.IconFromClient.IsSet() {
		return true
	}

	return false
}

// SetIconFromClient gets a reference to the given NullableBool and assigns it to the IconFromClient field.
func (o *CreateApplicationRequestModel) SetIconFromClient(v bool) {
	o.IconFromClient.Set(&v)
}
// SetIconFromClientNil sets the value for IconFromClient to be an explicit nil
func (o *CreateApplicationRequestModel) SetIconFromClientNil() {
	o.IconFromClient.Set(nil)
}

// UnsetIconFromClient ensures that no value is present for IconFromClient, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetIconFromClient() {
	o.IconFromClient.Unset()
}

// GetIncludedUserFilterEnabled returns the IncludedUserFilterEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetIncludedUserFilterEnabled() bool {
	if o == nil || IsNil(o.IncludedUserFilterEnabled.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludedUserFilterEnabled.Get()
}

// GetIncludedUserFilterEnabledOk returns a tuple with the IncludedUserFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetIncludedUserFilterEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedUserFilterEnabled.Get(), o.IncludedUserFilterEnabled.IsSet()
}

// HasIncludedUserFilterEnabled returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasIncludedUserFilterEnabled() bool {
	if o != nil && o.IncludedUserFilterEnabled.IsSet() {
		return true
	}

	return false
}

// SetIncludedUserFilterEnabled gets a reference to the given NullableBool and assigns it to the IncludedUserFilterEnabled field.
func (o *CreateApplicationRequestModel) SetIncludedUserFilterEnabled(v bool) {
	o.IncludedUserFilterEnabled.Set(&v)
}
// SetIncludedUserFilterEnabledNil sets the value for IncludedUserFilterEnabled to be an explicit nil
func (o *CreateApplicationRequestModel) SetIncludedUserFilterEnabledNil() {
	o.IncludedUserFilterEnabled.Set(nil)
}

// UnsetIncludedUserFilterEnabled ensures that no value is present for IncludedUserFilterEnabled, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetIncludedUserFilterEnabled() {
	o.IncludedUserFilterEnabled.Unset()
}

// GetIncludedUsers returns the IncludedUsers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetIncludedUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.IncludedUsers
}

// GetIncludedUsersOk returns a tuple with the IncludedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetIncludedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUsers) {
		return nil, false
	}
	return o.IncludedUsers, true
}

// HasIncludedUsers returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasIncludedUsers() bool {
	if o != nil && IsNil(o.IncludedUsers) {
		return true
	}

	return false
}

// SetIncludedUsers gets a reference to the given []string and assigns it to the IncludedUsers field.
func (o *CreateApplicationRequestModel) SetIncludedUsers(v []string) {
	o.IncludedUsers = v
}

// GetInstalledAppProperties returns the InstalledAppProperties field value if set, zero value otherwise.
func (o *CreateApplicationRequestModel) GetInstalledAppProperties() CreateInstalledAppRequestModel {
	if o == nil || IsNil(o.InstalledAppProperties) {
		var ret CreateInstalledAppRequestModel
		return ret
	}
	return *o.InstalledAppProperties
}

// GetInstalledAppPropertiesOk returns a tuple with the InstalledAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetInstalledAppPropertiesOk() (*CreateInstalledAppRequestModel, bool) {
	if o == nil || IsNil(o.InstalledAppProperties) {
		return nil, false
	}
	return o.InstalledAppProperties, true
}

// HasInstalledAppProperties returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasInstalledAppProperties() bool {
	if o != nil && !IsNil(o.InstalledAppProperties) {
		return true
	}

	return false
}

// SetInstalledAppProperties gets a reference to the given CreateInstalledAppRequestModel and assigns it to the InstalledAppProperties field.
func (o *CreateApplicationRequestModel) SetInstalledAppProperties(v CreateInstalledAppRequestModel) {
	o.InstalledAppProperties = &v
}

// GetAppVAppProperties returns the AppVAppProperties field value if set, zero value otherwise.
func (o *CreateApplicationRequestModel) GetAppVAppProperties() AppVAppRequestModel {
	if o == nil || IsNil(o.AppVAppProperties) {
		var ret AppVAppRequestModel
		return ret
	}
	return *o.AppVAppProperties
}

// GetAppVAppPropertiesOk returns a tuple with the AppVAppProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetAppVAppPropertiesOk() (*AppVAppRequestModel, bool) {
	if o == nil || IsNil(o.AppVAppProperties) {
		return nil, false
	}
	return o.AppVAppProperties, true
}

// HasAppVAppProperties returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasAppVAppProperties() bool {
	if o != nil && !IsNil(o.AppVAppProperties) {
		return true
	}

	return false
}

// SetAppVAppProperties gets a reference to the given AppVAppRequestModel and assigns it to the AppVAppProperties field.
func (o *CreateApplicationRequestModel) SetAppVAppProperties(v AppVAppRequestModel) {
	o.AppVAppProperties = &v
}

// GetContentLocation returns the ContentLocation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetContentLocation() string {
	if o == nil || IsNil(o.ContentLocation.Get()) {
		var ret string
		return ret
	}
	return *o.ContentLocation.Get()
}

// GetContentLocationOk returns a tuple with the ContentLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetContentLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentLocation.Get(), o.ContentLocation.IsSet()
}

// HasContentLocation returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasContentLocation() bool {
	if o != nil && o.ContentLocation.IsSet() {
		return true
	}

	return false
}

// SetContentLocation gets a reference to the given NullableString and assigns it to the ContentLocation field.
func (o *CreateApplicationRequestModel) SetContentLocation(v string) {
	o.ContentLocation.Set(&v)
}
// SetContentLocationNil sets the value for ContentLocation to be an explicit nil
func (o *CreateApplicationRequestModel) SetContentLocationNil() {
	o.ContentLocation.Set(nil)
}

// UnsetContentLocation ensures that no value is present for ContentLocation, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetContentLocation() {
	o.ContentLocation.Unset()
}

// GetMaxPerUserInstances returns the MaxPerUserInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetMaxPerUserInstances() int32 {
	if o == nil || IsNil(o.MaxPerUserInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxPerUserInstances.Get()
}

// GetMaxPerUserInstancesOk returns a tuple with the MaxPerUserInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetMaxPerUserInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxPerUserInstances.Get(), o.MaxPerUserInstances.IsSet()
}

// HasMaxPerUserInstances returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasMaxPerUserInstances() bool {
	if o != nil && o.MaxPerUserInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxPerUserInstances gets a reference to the given NullableInt32 and assigns it to the MaxPerUserInstances field.
func (o *CreateApplicationRequestModel) SetMaxPerUserInstances(v int32) {
	o.MaxPerUserInstances.Set(&v)
}
// SetMaxPerUserInstancesNil sets the value for MaxPerUserInstances to be an explicit nil
func (o *CreateApplicationRequestModel) SetMaxPerUserInstancesNil() {
	o.MaxPerUserInstances.Set(nil)
}

// UnsetMaxPerUserInstances ensures that no value is present for MaxPerUserInstances, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetMaxPerUserInstances() {
	o.MaxPerUserInstances.Unset()
}

// GetMaxTotalInstances returns the MaxTotalInstances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetMaxTotalInstances() int32 {
	if o == nil || IsNil(o.MaxTotalInstances.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTotalInstances.Get()
}

// GetMaxTotalInstancesOk returns a tuple with the MaxTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetMaxTotalInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTotalInstances.Get(), o.MaxTotalInstances.IsSet()
}

// HasMaxTotalInstances returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasMaxTotalInstances() bool {
	if o != nil && o.MaxTotalInstances.IsSet() {
		return true
	}

	return false
}

// SetMaxTotalInstances gets a reference to the given NullableInt32 and assigns it to the MaxTotalInstances field.
func (o *CreateApplicationRequestModel) SetMaxTotalInstances(v int32) {
	o.MaxTotalInstances.Set(&v)
}
// SetMaxTotalInstancesNil sets the value for MaxTotalInstances to be an explicit nil
func (o *CreateApplicationRequestModel) SetMaxTotalInstancesNil() {
	o.MaxTotalInstances.Set(nil)
}

// UnsetMaxTotalInstances ensures that no value is present for MaxTotalInstances, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetMaxTotalInstances() {
	o.MaxTotalInstances.Unset()
}

// GetName returns the Name field value
func (o *CreateApplicationRequestModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApplicationRequestModel) SetName(v string) {
	o.Name = v
}

// GetPublishedName returns the PublishedName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetPublishedName() string {
	if o == nil || IsNil(o.PublishedName.Get()) {
		var ret string
		return ret
	}
	return *o.PublishedName.Get()
}

// GetPublishedNameOk returns a tuple with the PublishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetPublishedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublishedName.Get(), o.PublishedName.IsSet()
}

// HasPublishedName returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasPublishedName() bool {
	if o != nil && o.PublishedName.IsSet() {
		return true
	}

	return false
}

// SetPublishedName gets a reference to the given NullableString and assigns it to the PublishedName field.
func (o *CreateApplicationRequestModel) SetPublishedName(v string) {
	o.PublishedName.Set(&v)
}
// SetPublishedNameNil sets the value for PublishedName to be an explicit nil
func (o *CreateApplicationRequestModel) SetPublishedNameNil() {
	o.PublishedName.Set(nil)
}

// UnsetPublishedName ensures that no value is present for PublishedName, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetPublishedName() {
	o.PublishedName.Unset()
}

// GetShortcutAddedToDesktop returns the ShortcutAddedToDesktop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetShortcutAddedToDesktop() bool {
	if o == nil || IsNil(o.ShortcutAddedToDesktop.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToDesktop.Get()
}

// GetShortcutAddedToDesktopOk returns a tuple with the ShortcutAddedToDesktop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetShortcutAddedToDesktopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToDesktop.Get(), o.ShortcutAddedToDesktop.IsSet()
}

// HasShortcutAddedToDesktop returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasShortcutAddedToDesktop() bool {
	if o != nil && o.ShortcutAddedToDesktop.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToDesktop gets a reference to the given NullableBool and assigns it to the ShortcutAddedToDesktop field.
func (o *CreateApplicationRequestModel) SetShortcutAddedToDesktop(v bool) {
	o.ShortcutAddedToDesktop.Set(&v)
}
// SetShortcutAddedToDesktopNil sets the value for ShortcutAddedToDesktop to be an explicit nil
func (o *CreateApplicationRequestModel) SetShortcutAddedToDesktopNil() {
	o.ShortcutAddedToDesktop.Set(nil)
}

// UnsetShortcutAddedToDesktop ensures that no value is present for ShortcutAddedToDesktop, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetShortcutAddedToDesktop() {
	o.ShortcutAddedToDesktop.Unset()
}

// GetShortcutAddedToStartMenu returns the ShortcutAddedToStartMenu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetShortcutAddedToStartMenu() bool {
	if o == nil || IsNil(o.ShortcutAddedToStartMenu.Get()) {
		var ret bool
		return ret
	}
	return *o.ShortcutAddedToStartMenu.Get()
}

// GetShortcutAddedToStartMenuOk returns a tuple with the ShortcutAddedToStartMenu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetShortcutAddedToStartMenuOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortcutAddedToStartMenu.Get(), o.ShortcutAddedToStartMenu.IsSet()
}

// HasShortcutAddedToStartMenu returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasShortcutAddedToStartMenu() bool {
	if o != nil && o.ShortcutAddedToStartMenu.IsSet() {
		return true
	}

	return false
}

// SetShortcutAddedToStartMenu gets a reference to the given NullableBool and assigns it to the ShortcutAddedToStartMenu field.
func (o *CreateApplicationRequestModel) SetShortcutAddedToStartMenu(v bool) {
	o.ShortcutAddedToStartMenu.Set(&v)
}
// SetShortcutAddedToStartMenuNil sets the value for ShortcutAddedToStartMenu to be an explicit nil
func (o *CreateApplicationRequestModel) SetShortcutAddedToStartMenuNil() {
	o.ShortcutAddedToStartMenu.Set(nil)
}

// UnsetShortcutAddedToStartMenu ensures that no value is present for ShortcutAddedToStartMenu, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetShortcutAddedToStartMenu() {
	o.ShortcutAddedToStartMenu.Unset()
}

// GetStartMenuFolder returns the StartMenuFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetStartMenuFolder() string {
	if o == nil || IsNil(o.StartMenuFolder.Get()) {
		var ret string
		return ret
	}
	return *o.StartMenuFolder.Get()
}

// GetStartMenuFolderOk returns a tuple with the StartMenuFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetStartMenuFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartMenuFolder.Get(), o.StartMenuFolder.IsSet()
}

// HasStartMenuFolder returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasStartMenuFolder() bool {
	if o != nil && o.StartMenuFolder.IsSet() {
		return true
	}

	return false
}

// SetStartMenuFolder gets a reference to the given NullableString and assigns it to the StartMenuFolder field.
func (o *CreateApplicationRequestModel) SetStartMenuFolder(v string) {
	o.StartMenuFolder.Set(&v)
}
// SetStartMenuFolderNil sets the value for StartMenuFolder to be an explicit nil
func (o *CreateApplicationRequestModel) SetStartMenuFolderNil() {
	o.StartMenuFolder.Set(nil)
}

// UnsetStartMenuFolder ensures that no value is present for StartMenuFolder, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetStartMenuFolder() {
	o.StartMenuFolder.Unset()
}

// GetVisible returns the Visible field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetVisible() bool {
	if o == nil || IsNil(o.Visible.Get()) {
		var ret bool
		return ret
	}
	return *o.Visible.Get()
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetVisibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Visible.Get(), o.Visible.IsSet()
}

// HasVisible returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasVisible() bool {
	if o != nil && o.Visible.IsSet() {
		return true
	}

	return false
}

// SetVisible gets a reference to the given NullableBool and assigns it to the Visible field.
func (o *CreateApplicationRequestModel) SetVisible(v bool) {
	o.Visible.Set(&v)
}
// SetVisibleNil sets the value for Visible to be an explicit nil
func (o *CreateApplicationRequestModel) SetVisibleNil() {
	o.Visible.Set(nil)
}

// UnsetVisible ensures that no value is present for Visible, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetVisible() {
	o.Visible.Unset()
}

// GetWaitForPrinterCreation returns the WaitForPrinterCreation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateApplicationRequestModel) GetWaitForPrinterCreation() bool {
	if o == nil || IsNil(o.WaitForPrinterCreation.Get()) {
		var ret bool
		return ret
	}
	return *o.WaitForPrinterCreation.Get()
}

// GetWaitForPrinterCreationOk returns a tuple with the WaitForPrinterCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateApplicationRequestModel) GetWaitForPrinterCreationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.WaitForPrinterCreation.Get(), o.WaitForPrinterCreation.IsSet()
}

// HasWaitForPrinterCreation returns a boolean if a field has been set.
func (o *CreateApplicationRequestModel) HasWaitForPrinterCreation() bool {
	if o != nil && o.WaitForPrinterCreation.IsSet() {
		return true
	}

	return false
}

// SetWaitForPrinterCreation gets a reference to the given NullableBool and assigns it to the WaitForPrinterCreation field.
func (o *CreateApplicationRequestModel) SetWaitForPrinterCreation(v bool) {
	o.WaitForPrinterCreation.Set(&v)
}
// SetWaitForPrinterCreationNil sets the value for WaitForPrinterCreation to be an explicit nil
func (o *CreateApplicationRequestModel) SetWaitForPrinterCreationNil() {
	o.WaitForPrinterCreation.Set(nil)
}

// UnsetWaitForPrinterCreation ensures that no value is present for WaitForPrinterCreation, not even an explicit nil
func (o *CreateApplicationRequestModel) UnsetWaitForPrinterCreation() {
	o.WaitForPrinterCreation.Unset()
}

func (o CreateApplicationRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFolder.IsSet() {
		toSerialize["ApplicationFolder"] = o.ApplicationFolder.Get()
	}
	if !IsNil(o.ApplicationType) {
		toSerialize["ApplicationType"] = o.ApplicationType
	}
	if o.BrowserName.IsSet() {
		toSerialize["BrowserName"] = o.BrowserName.Get()
	}
	if o.ClientFolder.IsSet() {
		toSerialize["ClientFolder"] = o.ClientFolder.Get()
	}
	if !IsNil(o.CpuPriorityLevel) {
		toSerialize["CpuPriorityLevel"] = o.CpuPriorityLevel
	}
	if o.ApplicationGroups != nil {
		toSerialize["ApplicationGroups"] = o.ApplicationGroups
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["Enabled"] = o.Enabled.Get()
	}
	if o.DoNotEnumerate.IsSet() {
		toSerialize["DoNotEnumerate"] = o.DoNotEnumerate.Get()
	}
	if o.HomeZone.IsSet() {
		toSerialize["HomeZone"] = o.HomeZone.Get()
	}
	if !IsNil(o.HomeZoneMode) {
		toSerialize["HomeZoneMode"] = o.HomeZoneMode
	}
	if o.Icon.IsSet() {
		toSerialize["Icon"] = o.Icon.Get()
	}
	if o.IconFromClient.IsSet() {
		toSerialize["IconFromClient"] = o.IconFromClient.Get()
	}
	if o.IncludedUserFilterEnabled.IsSet() {
		toSerialize["IncludedUserFilterEnabled"] = o.IncludedUserFilterEnabled.Get()
	}
	if o.IncludedUsers != nil {
		toSerialize["IncludedUsers"] = o.IncludedUsers
	}
	if !IsNil(o.InstalledAppProperties) {
		toSerialize["InstalledAppProperties"] = o.InstalledAppProperties
	}
	if !IsNil(o.AppVAppProperties) {
		toSerialize["AppVAppProperties"] = o.AppVAppProperties
	}
	if o.ContentLocation.IsSet() {
		toSerialize["ContentLocation"] = o.ContentLocation.Get()
	}
	if o.MaxPerUserInstances.IsSet() {
		toSerialize["MaxPerUserInstances"] = o.MaxPerUserInstances.Get()
	}
	if o.MaxTotalInstances.IsSet() {
		toSerialize["MaxTotalInstances"] = o.MaxTotalInstances.Get()
	}
	toSerialize["Name"] = o.Name
	if o.PublishedName.IsSet() {
		toSerialize["PublishedName"] = o.PublishedName.Get()
	}
	if o.ShortcutAddedToDesktop.IsSet() {
		toSerialize["ShortcutAddedToDesktop"] = o.ShortcutAddedToDesktop.Get()
	}
	if o.ShortcutAddedToStartMenu.IsSet() {
		toSerialize["ShortcutAddedToStartMenu"] = o.ShortcutAddedToStartMenu.Get()
	}
	if o.StartMenuFolder.IsSet() {
		toSerialize["StartMenuFolder"] = o.StartMenuFolder.Get()
	}
	if o.Visible.IsSet() {
		toSerialize["Visible"] = o.Visible.Get()
	}
	if o.WaitForPrinterCreation.IsSet() {
		toSerialize["WaitForPrinterCreation"] = o.WaitForPrinterCreation.Get()
	}
	return toSerialize, nil
}

type NullableCreateApplicationRequestModel struct {
	value *CreateApplicationRequestModel
	isSet bool
}

func (v NullableCreateApplicationRequestModel) Get() *CreateApplicationRequestModel {
	return v.value
}

func (v *NullableCreateApplicationRequestModel) Set(val *CreateApplicationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestModel(val *CreateApplicationRequestModel) *NullableCreateApplicationRequestModel {
	return &NullableCreateApplicationRequestModel{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


