/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PowerTimeSchemeResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerTimeSchemeResponseModel{}

// PowerTimeSchemeResponseModel Power time scheme.
type PowerTimeSchemeResponseModel struct {
	// The pattern of days of the week that the power time scheme covers.
	DaysOfWeek []TimeSchemeDays `json:"DaysOfWeek"`
	// The administrative name of the power time scheme.
	Name string `json:"Name"`
	// The name of the power time scheme as displayed in the Studio console.
	DisplayName string `json:"DisplayName"`
	// `DEPRECATED. Use <see cref='PeakTimeRanges'/> instead.` DEPRECATED.  Use PeakTimeRanges instead.  A set of 24 boolean flag values, one for each hour of the day. The first value in the array relates to 00:00 to 01:00, the next one to 01:00 to 02:00 and so on, with the last array element relating to 23:00 to 00:00. If the flag is `true` it means that the associated hour of the day is considered a peak time; if `false` it means that it is considered off-peak.
	// Deprecated
	PeakHours []bool `json:"PeakHours,omitempty"`
	// List of peak time ranges during the day.
	PeakTimeRanges []string `json:"PeakTimeRanges,omitempty"`
	// `DEPRECATED. Use <see cref='PoolUsingPercentage'/> instead.` DEPRECATED.  Use PoolSizeSchedule instead.  A set of 24 integer values, one for each hour of the day. The first value in the array relates to midnight to 00:59, the next one to 1 AM to 01:59 and so on, with the last array element relating to 11 PM to 11:59. The value defines the number of machines (either as an absolute number or a percentage of the machines in the delivery group, depending on the value of ) that are to be maintained in a running state, whether they are in use or not. A value of -1 has special meaning: pool size management does not apply during such hours.
	// Deprecated
	PoolSize []int32 `json:"PoolSize,omitempty"`
	// List of pool size schedules during the day.  Each is specified as a time range and an indicator of the number of machines that should be powered on during that time range.
	PoolSizeSchedule []PoolSizeScheduleResponseModel `json:"PoolSizeSchedule,omitempty"`
	// Indicates whether the integer values in the pool size array are to be treated as absolute values (if this value is `false`) or as percentages of the number of machines in the delivery group (if this value is `true`).
	PoolUsingPercentage *bool `json:"PoolUsingPercentage,omitempty"`
	// Id of the power time scheme.
	Id string `json:"Id"`
}

// NewPowerTimeSchemeResponseModel instantiates a new PowerTimeSchemeResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerTimeSchemeResponseModel(daysOfWeek []TimeSchemeDays, name string, displayName string, id string) *PowerTimeSchemeResponseModel {
	this := PowerTimeSchemeResponseModel{}
	this.DaysOfWeek = daysOfWeek
	this.Name = name
	this.DisplayName = displayName
	this.Id = id
	return &this
}

// NewPowerTimeSchemeResponseModelWithDefaults instantiates a new PowerTimeSchemeResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerTimeSchemeResponseModelWithDefaults() *PowerTimeSchemeResponseModel {
	this := PowerTimeSchemeResponseModel{}
	return &this
}

// GetDaysOfWeek returns the DaysOfWeek field value
func (o *PowerTimeSchemeResponseModel) GetDaysOfWeek() []TimeSchemeDays {
	if o == nil {
		var ret []TimeSchemeDays
		return ret
	}

	return o.DaysOfWeek
}

// GetDaysOfWeekOk returns a tuple with the DaysOfWeek field value
// and a boolean to check if the value has been set.
func (o *PowerTimeSchemeResponseModel) GetDaysOfWeekOk() ([]TimeSchemeDays, bool) {
	if o == nil {
		return nil, false
	}
	return o.DaysOfWeek, true
}

// SetDaysOfWeek sets field value
func (o *PowerTimeSchemeResponseModel) SetDaysOfWeek(v []TimeSchemeDays) {
	o.DaysOfWeek = v
}

// GetName returns the Name field value
func (o *PowerTimeSchemeResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PowerTimeSchemeResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PowerTimeSchemeResponseModel) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value
func (o *PowerTimeSchemeResponseModel) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *PowerTimeSchemeResponseModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *PowerTimeSchemeResponseModel) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetPeakHours returns the PeakHours field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *PowerTimeSchemeResponseModel) GetPeakHours() []bool {
	if o == nil {
		var ret []bool
		return ret
	}
	return o.PeakHours
}

// GetPeakHoursOk returns a tuple with the PeakHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *PowerTimeSchemeResponseModel) GetPeakHoursOk() ([]bool, bool) {
	if o == nil || IsNil(o.PeakHours) {
		return nil, false
	}
	return o.PeakHours, true
}

// HasPeakHours returns a boolean if a field has been set.
func (o *PowerTimeSchemeResponseModel) HasPeakHours() bool {
	if o != nil && IsNil(o.PeakHours) {
		return true
	}

	return false
}

// SetPeakHours gets a reference to the given []bool and assigns it to the PeakHours field.
// Deprecated
func (o *PowerTimeSchemeResponseModel) SetPeakHours(v []bool) {
	o.PeakHours = v
}

// GetPeakTimeRanges returns the PeakTimeRanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeResponseModel) GetPeakTimeRanges() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.PeakTimeRanges
}

// GetPeakTimeRangesOk returns a tuple with the PeakTimeRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeResponseModel) GetPeakTimeRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.PeakTimeRanges) {
		return nil, false
	}
	return o.PeakTimeRanges, true
}

// HasPeakTimeRanges returns a boolean if a field has been set.
func (o *PowerTimeSchemeResponseModel) HasPeakTimeRanges() bool {
	if o != nil && IsNil(o.PeakTimeRanges) {
		return true
	}

	return false
}

// SetPeakTimeRanges gets a reference to the given []string and assigns it to the PeakTimeRanges field.
func (o *PowerTimeSchemeResponseModel) SetPeakTimeRanges(v []string) {
	o.PeakTimeRanges = v
}

// GetPoolSize returns the PoolSize field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *PowerTimeSchemeResponseModel) GetPoolSize() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.PoolSize
}

// GetPoolSizeOk returns a tuple with the PoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *PowerTimeSchemeResponseModel) GetPoolSizeOk() ([]int32, bool) {
	if o == nil || IsNil(o.PoolSize) {
		return nil, false
	}
	return o.PoolSize, true
}

// HasPoolSize returns a boolean if a field has been set.
func (o *PowerTimeSchemeResponseModel) HasPoolSize() bool {
	if o != nil && IsNil(o.PoolSize) {
		return true
	}

	return false
}

// SetPoolSize gets a reference to the given []int32 and assigns it to the PoolSize field.
// Deprecated
func (o *PowerTimeSchemeResponseModel) SetPoolSize(v []int32) {
	o.PoolSize = v
}

// GetPoolSizeSchedule returns the PoolSizeSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PowerTimeSchemeResponseModel) GetPoolSizeSchedule() []PoolSizeScheduleResponseModel {
	if o == nil {
		var ret []PoolSizeScheduleResponseModel
		return ret
	}
	return o.PoolSizeSchedule
}

// GetPoolSizeScheduleOk returns a tuple with the PoolSizeSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PowerTimeSchemeResponseModel) GetPoolSizeScheduleOk() ([]PoolSizeScheduleResponseModel, bool) {
	if o == nil || IsNil(o.PoolSizeSchedule) {
		return nil, false
	}
	return o.PoolSizeSchedule, true
}

// HasPoolSizeSchedule returns a boolean if a field has been set.
func (o *PowerTimeSchemeResponseModel) HasPoolSizeSchedule() bool {
	if o != nil && IsNil(o.PoolSizeSchedule) {
		return true
	}

	return false
}

// SetPoolSizeSchedule gets a reference to the given []PoolSizeScheduleResponseModel and assigns it to the PoolSizeSchedule field.
func (o *PowerTimeSchemeResponseModel) SetPoolSizeSchedule(v []PoolSizeScheduleResponseModel) {
	o.PoolSizeSchedule = v
}

// GetPoolUsingPercentage returns the PoolUsingPercentage field value if set, zero value otherwise.
func (o *PowerTimeSchemeResponseModel) GetPoolUsingPercentage() bool {
	if o == nil || IsNil(o.PoolUsingPercentage) {
		var ret bool
		return ret
	}
	return *o.PoolUsingPercentage
}

// GetPoolUsingPercentageOk returns a tuple with the PoolUsingPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerTimeSchemeResponseModel) GetPoolUsingPercentageOk() (*bool, bool) {
	if o == nil || IsNil(o.PoolUsingPercentage) {
		return nil, false
	}
	return o.PoolUsingPercentage, true
}

// HasPoolUsingPercentage returns a boolean if a field has been set.
func (o *PowerTimeSchemeResponseModel) HasPoolUsingPercentage() bool {
	if o != nil && !IsNil(o.PoolUsingPercentage) {
		return true
	}

	return false
}

// SetPoolUsingPercentage gets a reference to the given bool and assigns it to the PoolUsingPercentage field.
func (o *PowerTimeSchemeResponseModel) SetPoolUsingPercentage(v bool) {
	o.PoolUsingPercentage = &v
}

// GetId returns the Id field value
func (o *PowerTimeSchemeResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PowerTimeSchemeResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PowerTimeSchemeResponseModel) SetId(v string) {
	o.Id = v
}

func (o PowerTimeSchemeResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerTimeSchemeResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DaysOfWeek"] = o.DaysOfWeek
	toSerialize["Name"] = o.Name
	toSerialize["DisplayName"] = o.DisplayName
	if o.PeakHours != nil {
		toSerialize["PeakHours"] = o.PeakHours
	}
	if o.PeakTimeRanges != nil {
		toSerialize["PeakTimeRanges"] = o.PeakTimeRanges
	}
	if o.PoolSize != nil {
		toSerialize["PoolSize"] = o.PoolSize
	}
	if o.PoolSizeSchedule != nil {
		toSerialize["PoolSizeSchedule"] = o.PoolSizeSchedule
	}
	if !IsNil(o.PoolUsingPercentage) {
		toSerialize["PoolUsingPercentage"] = o.PoolUsingPercentage
	}
	toSerialize["Id"] = o.Id
	return toSerialize, nil
}

type NullablePowerTimeSchemeResponseModel struct {
	value *PowerTimeSchemeResponseModel
	isSet bool
}

func (v NullablePowerTimeSchemeResponseModel) Get() *PowerTimeSchemeResponseModel {
	return v.value
}

func (v *NullablePowerTimeSchemeResponseModel) Set(val *PowerTimeSchemeResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerTimeSchemeResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerTimeSchemeResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerTimeSchemeResponseModel(val *PowerTimeSchemeResponseModel) *NullablePowerTimeSchemeResponseModel {
	return &NullablePowerTimeSchemeResponseModel{value: val, isSet: true}
}

func (v NullablePowerTimeSchemeResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerTimeSchemeResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


