/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// CustomReportDateRangeType 
type CustomReportDateRangeType string

// List of CustomReportDateRangeType
const (
	CUSTOMREPORTDATERANGETYPE_ALL CustomReportDateRangeType = "All"
	CUSTOMREPORTDATERANGETYPE_LAST24_HOURS CustomReportDateRangeType = "Last24Hours"
	CUSTOMREPORTDATERANGETYPE_LAST7_DAYS CustomReportDateRangeType = "Last7Days"
	CUSTOMREPORTDATERANGETYPE_LAST4_WEEKS CustomReportDateRangeType = "Last4Weeks"
	CUSTOMREPORTDATERANGETYPE_CUSTOM CustomReportDateRangeType = "Custom"
)

// All allowed values of CustomReportDateRangeType enum
var AllowedCustomReportDateRangeTypeEnumValues = []CustomReportDateRangeType{
	"All",
	"Last24Hours",
	"Last7Days",
	"Last4Weeks",
	"Custom",
}

func (v *CustomReportDateRangeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = CustomReportDateRangeType(value)
	return nil
}

// NewCustomReportDateRangeTypeFromValue returns a pointer to a valid CustomReportDateRangeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomReportDateRangeTypeFromValue(v string) (*CustomReportDateRangeType, error) {
	ev := CustomReportDateRangeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomReportDateRangeType: valid values are %v", v, AllowedCustomReportDateRangeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomReportDateRangeType) IsValid() bool {
	for _, existing := range AllowedCustomReportDateRangeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CustomReportDateRangeType value
func (v CustomReportDateRangeType) Ptr() *CustomReportDateRangeType {
	return &v
}

type NullableCustomReportDateRangeType struct {
	value *CustomReportDateRangeType
	isSet bool
}

func (v NullableCustomReportDateRangeType) Get() *CustomReportDateRangeType {
	return v.value
}

func (v *NullableCustomReportDateRangeType) Set(val *CustomReportDateRangeType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomReportDateRangeType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomReportDateRangeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomReportDateRangeType(val *CustomReportDateRangeType) *NullableCustomReportDateRangeType {
	return &NullableCustomReportDateRangeType{value: val, isSet: true}
}

func (v NullableCustomReportDateRangeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomReportDateRangeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

