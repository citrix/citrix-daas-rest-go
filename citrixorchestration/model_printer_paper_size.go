/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// PrinterPaperSize Printer paper sizes. This is identical to the PaperSize enum defined in GpfxSettings.dll.
type PrinterPaperSize string

// List of PrinterPaperSize
const (
	PRINTERPAPERSIZE_LETTER PrinterPaperSize = "Letter"
	PRINTERPAPERSIZE_LETTER_SMALL PrinterPaperSize = "LetterSmall"
	PRINTERPAPERSIZE_TABLOID PrinterPaperSize = "Tabloid"
	PRINTERPAPERSIZE_LEDGER PrinterPaperSize = "Ledger"
	PRINTERPAPERSIZE_LEGAL PrinterPaperSize = "Legal"
	PRINTERPAPERSIZE_STATEMENT PrinterPaperSize = "Statement"
	PRINTERPAPERSIZE_EXECUTIVE PrinterPaperSize = "Executive"
	PRINTERPAPERSIZE_A3 PrinterPaperSize = "A3"
	PRINTERPAPERSIZE_A4 PrinterPaperSize = "A4"
	PRINTERPAPERSIZE_A4_SMALL PrinterPaperSize = "A4Small"
	PRINTERPAPERSIZE_A5 PrinterPaperSize = "A5"
	PRINTERPAPERSIZE_B4 PrinterPaperSize = "B4"
	PRINTERPAPERSIZE_B5 PrinterPaperSize = "B5"
	PRINTERPAPERSIZE_FOLIO PrinterPaperSize = "Folio"
	PRINTERPAPERSIZE_QUARTO PrinterPaperSize = "Quarto"
	PRINTERPAPERSIZE_IN10_X14 PrinterPaperSize = "In10X14"
	PRINTERPAPERSIZE_IN11_X17 PrinterPaperSize = "In11X17"
	PRINTERPAPERSIZE_NOTE PrinterPaperSize = "Note"
	PRINTERPAPERSIZE_ENVELOPE9 PrinterPaperSize = "Envelope9"
	PRINTERPAPERSIZE_ENVELOPE10 PrinterPaperSize = "Envelope10"
	PRINTERPAPERSIZE_ENVELOPE11 PrinterPaperSize = "Envelope11"
	PRINTERPAPERSIZE_ENVELOPE12 PrinterPaperSize = "Envelope12"
	PRINTERPAPERSIZE_ENVELOPE14 PrinterPaperSize = "Envelope14"
	PRINTERPAPERSIZE_C_SHEET PrinterPaperSize = "CSheet"
	PRINTERPAPERSIZE_D_SHEET PrinterPaperSize = "DSheet"
	PRINTERPAPERSIZE_E_SHEET PrinterPaperSize = "ESheet"
	PRINTERPAPERSIZE_ENVELOPE_DL PrinterPaperSize = "EnvelopeDl"
	PRINTERPAPERSIZE_ENVELOPE_C5 PrinterPaperSize = "EnvelopeC5"
	PRINTERPAPERSIZE_ENVELOPE_C3 PrinterPaperSize = "EnvelopeC3"
	PRINTERPAPERSIZE_ENVELOPE_C4 PrinterPaperSize = "EnvelopeC4"
	PRINTERPAPERSIZE_ENVELOPE_C6 PrinterPaperSize = "EnvelopeC6"
	PRINTERPAPERSIZE_ENVELOPE_C65 PrinterPaperSize = "EnvelopeC65"
	PRINTERPAPERSIZE_ENVELOPE_B4 PrinterPaperSize = "EnvelopeB4"
	PRINTERPAPERSIZE_ENVELOPE_B5 PrinterPaperSize = "EnvelopeB5"
	PRINTERPAPERSIZE_ENVELOPE_B6 PrinterPaperSize = "EnvelopeB6"
	PRINTERPAPERSIZE_ENVELOPE_ITALY PrinterPaperSize = "EnvelopeItaly"
	PRINTERPAPERSIZE_ENVELOPE_MONARCH PrinterPaperSize = "EnvelopeMonarch"
	PRINTERPAPERSIZE_ENVELOPE_PERSONAL PrinterPaperSize = "EnvelopePersonal"
	PRINTERPAPERSIZE_FANFOLD_UNITED_STATES PrinterPaperSize = "FanfoldUnitedStates"
	PRINTERPAPERSIZE_FANFOLD_STANDARD_GERMAN PrinterPaperSize = "FanfoldStandardGerman"
	PRINTERPAPERSIZE_FANFOLD_LEGAL_GERMAN PrinterPaperSize = "FanfoldLegalGerman"
	PRINTERPAPERSIZE_ISO_B4 PrinterPaperSize = "IsoB4"
	PRINTERPAPERSIZE_JAPANESE_POSTCARD PrinterPaperSize = "JapanesePostcard"
	PRINTERPAPERSIZE_IN9_X11 PrinterPaperSize = "In9X11"
	PRINTERPAPERSIZE_IN10_X11 PrinterPaperSize = "In10X11"
	PRINTERPAPERSIZE_IN15_X11 PrinterPaperSize = "In15X11"
	PRINTERPAPERSIZE_ENVELOPE_INVITE PrinterPaperSize = "EnvelopeInvite"
	PRINTERPAPERSIZE_LETTER_EXTRA PrinterPaperSize = "LetterExtra"
	PRINTERPAPERSIZE_LEGAL_EXTRA PrinterPaperSize = "LegalExtra"
	PRINTERPAPERSIZE_TABLOID_EXTRA PrinterPaperSize = "TabloidExtra"
	PRINTERPAPERSIZE_A4_EXTRA PrinterPaperSize = "A4Extra"
	PRINTERPAPERSIZE_LETTER_TRANSVERSE PrinterPaperSize = "LetterTransverse"
	PRINTERPAPERSIZE_A4_TRANSVERSE PrinterPaperSize = "A4Transverse"
	PRINTERPAPERSIZE_LETTER_EXTRA_TRANSVERSE PrinterPaperSize = "LetterExtraTransverse"
	PRINTERPAPERSIZE_A_PLUS PrinterPaperSize = "APlus"
	PRINTERPAPERSIZE_B_PLUS PrinterPaperSize = "BPlus"
	PRINTERPAPERSIZE_LETTER_PLUS PrinterPaperSize = "LetterPlus"
	PRINTERPAPERSIZE_A4_PLUS PrinterPaperSize = "A4Plus"
	PRINTERPAPERSIZE_A5_TRANSVERSE PrinterPaperSize = "A5Transverse"
	PRINTERPAPERSIZE_B5_TRANSVERSE PrinterPaperSize = "B5Transverse"
	PRINTERPAPERSIZE_A3_EXTRA PrinterPaperSize = "A3Extra"
	PRINTERPAPERSIZE_A5_EXTRA PrinterPaperSize = "A5Extra"
	PRINTERPAPERSIZE_B5_EXTRA PrinterPaperSize = "B5Extra"
	PRINTERPAPERSIZE_A2 PrinterPaperSize = "A2"
	PRINTERPAPERSIZE_A3_TRANSVERSE PrinterPaperSize = "A3Transverse"
	PRINTERPAPERSIZE_A3_EXTRA_TRANSVERSE PrinterPaperSize = "A3ExtraTransverse"
	PRINTERPAPERSIZE_DOUBLE_JAPANESE_POSTCARD PrinterPaperSize = "DoubleJapanesePostcard"
	PRINTERPAPERSIZE_A6 PrinterPaperSize = "A6"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_KAKU2 PrinterPaperSize = "JapaneseEnvelopeKaku2"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_KAKU3 PrinterPaperSize = "JapaneseEnvelopeKaku3"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_CHOU3 PrinterPaperSize = "JapaneseEnvelopeChou3"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_CHOU4 PrinterPaperSize = "JapaneseEnvelopeChou4"
	PRINTERPAPERSIZE_LETTER_ROTATED PrinterPaperSize = "LetterRotated"
	PRINTERPAPERSIZE_A3_ROTATED PrinterPaperSize = "A3Rotated"
	PRINTERPAPERSIZE_A4_ROTATED PrinterPaperSize = "A4Rotated"
	PRINTERPAPERSIZE_A5_ROTATED PrinterPaperSize = "A5Rotated"
	PRINTERPAPERSIZE_B4_JIS_ROTATED PrinterPaperSize = "B4JisRotated"
	PRINTERPAPERSIZE_B5_JIS_ROTATED PrinterPaperSize = "B5JisRotated"
	PRINTERPAPERSIZE_JAPANESE_POSTCARD_ROTATED PrinterPaperSize = "JapanesePostcardRotated"
	PRINTERPAPERSIZE_DOUBLE_JAPANESE_POSTCARD_ROTATED PrinterPaperSize = "DoubleJapanesePostcardRotated"
	PRINTERPAPERSIZE_A6_ROTATED PrinterPaperSize = "A6Rotated"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_KAKU2_ROTATED PrinterPaperSize = "JapaneseEnvelopeKaku2Rotated"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_KAKU3_ROTATED PrinterPaperSize = "JapaneseEnvelopeKaku3Rotated"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_CHOU3_ROTATED PrinterPaperSize = "JapaneseEnvelopeChou3Rotated"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_CHOU4_ROTATED PrinterPaperSize = "JapaneseEnvelopeChou4Rotated"
	PRINTERPAPERSIZE_B6_JIS PrinterPaperSize = "B6Jis"
	PRINTERPAPERSIZE_B6_JIS_ROTATED PrinterPaperSize = "B6JisRotated"
	PRINTERPAPERSIZE_IN12_X11 PrinterPaperSize = "In12X11"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_YOU4 PrinterPaperSize = "JapaneseEnvelopeYou4"
	PRINTERPAPERSIZE_JAPANESE_ENVELOPE_YOU4_ROTATED PrinterPaperSize = "JapaneseEnvelopeYou4Rotated"
	PRINTERPAPERSIZE_PRC16_K PrinterPaperSize = "Prc16K"
	PRINTERPAPERSIZE_PRC32_K PrinterPaperSize = "Prc32K"
	PRINTERPAPERSIZE_PRC32_K_BIG PrinterPaperSize = "Prc32KBig"
	PRINTERPAPERSIZE_PRC_ENVELOPE1 PrinterPaperSize = "PrcEnvelope1"
	PRINTERPAPERSIZE_PRC_ENVELOPE2 PrinterPaperSize = "PrcEnvelope2"
	PRINTERPAPERSIZE_PRC_ENVELOPE3 PrinterPaperSize = "PrcEnvelope3"
	PRINTERPAPERSIZE_PRC_ENVELOPE4 PrinterPaperSize = "PrcEnvelope4"
	PRINTERPAPERSIZE_PRC_ENVELOPE5 PrinterPaperSize = "PrcEnvelope5"
	PRINTERPAPERSIZE_PRC_ENVELOPE6 PrinterPaperSize = "PrcEnvelope6"
	PRINTERPAPERSIZE_PRC_ENVELOPE7 PrinterPaperSize = "PrcEnvelope7"
	PRINTERPAPERSIZE_PRC_ENVELOPE8 PrinterPaperSize = "PrcEnvelope8"
	PRINTERPAPERSIZE_PRC_ENVELOPE9 PrinterPaperSize = "PrcEnvelope9"
	PRINTERPAPERSIZE_PRC_ENVELOPE10 PrinterPaperSize = "PrcEnvelope10"
	PRINTERPAPERSIZE_PRC16_K_ROTATED PrinterPaperSize = "Prc16KRotated"
	PRINTERPAPERSIZE_PRC32_K_ROTATED PrinterPaperSize = "Prc32KRotated"
	PRINTERPAPERSIZE_PRC32_K_BIG_ROTATED PrinterPaperSize = "Prc32KBigRotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE1_ROTATED PrinterPaperSize = "PrcEnvelope1Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE2_ROTATED PrinterPaperSize = "PrcEnvelope2Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE3_ROTATED PrinterPaperSize = "PrcEnvelope3Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE4_ROTATED PrinterPaperSize = "PrcEnvelope4Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE5_ROTATED PrinterPaperSize = "PrcEnvelope5Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE6_ROTATED PrinterPaperSize = "PrcEnvelope6Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE7_ROTATED PrinterPaperSize = "PrcEnvelope7Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE8_ROTATED PrinterPaperSize = "PrcEnvelope8Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE9_ROTATED PrinterPaperSize = "PrcEnvelope9Rotated"
	PRINTERPAPERSIZE_PRC_ENVELOPE10_ROTATED PrinterPaperSize = "PrcEnvelope10Rotated"
)

// All allowed values of PrinterPaperSize enum
var AllowedPrinterPaperSizeEnumValues = []PrinterPaperSize{
	"Letter",
	"LetterSmall",
	"Tabloid",
	"Ledger",
	"Legal",
	"Statement",
	"Executive",
	"A3",
	"A4",
	"A4Small",
	"A5",
	"B4",
	"B5",
	"Folio",
	"Quarto",
	"In10X14",
	"In11X17",
	"Note",
	"Envelope9",
	"Envelope10",
	"Envelope11",
	"Envelope12",
	"Envelope14",
	"CSheet",
	"DSheet",
	"ESheet",
	"EnvelopeDl",
	"EnvelopeC5",
	"EnvelopeC3",
	"EnvelopeC4",
	"EnvelopeC6",
	"EnvelopeC65",
	"EnvelopeB4",
	"EnvelopeB5",
	"EnvelopeB6",
	"EnvelopeItaly",
	"EnvelopeMonarch",
	"EnvelopePersonal",
	"FanfoldUnitedStates",
	"FanfoldStandardGerman",
	"FanfoldLegalGerman",
	"IsoB4",
	"JapanesePostcard",
	"In9X11",
	"In10X11",
	"In15X11",
	"EnvelopeInvite",
	"LetterExtra",
	"LegalExtra",
	"TabloidExtra",
	"A4Extra",
	"LetterTransverse",
	"A4Transverse",
	"LetterExtraTransverse",
	"APlus",
	"BPlus",
	"LetterPlus",
	"A4Plus",
	"A5Transverse",
	"B5Transverse",
	"A3Extra",
	"A5Extra",
	"B5Extra",
	"A2",
	"A3Transverse",
	"A3ExtraTransverse",
	"DoubleJapanesePostcard",
	"A6",
	"JapaneseEnvelopeKaku2",
	"JapaneseEnvelopeKaku3",
	"JapaneseEnvelopeChou3",
	"JapaneseEnvelopeChou4",
	"LetterRotated",
	"A3Rotated",
	"A4Rotated",
	"A5Rotated",
	"B4JisRotated",
	"B5JisRotated",
	"JapanesePostcardRotated",
	"DoubleJapanesePostcardRotated",
	"A6Rotated",
	"JapaneseEnvelopeKaku2Rotated",
	"JapaneseEnvelopeKaku3Rotated",
	"JapaneseEnvelopeChou3Rotated",
	"JapaneseEnvelopeChou4Rotated",
	"B6Jis",
	"B6JisRotated",
	"In12X11",
	"JapaneseEnvelopeYou4",
	"JapaneseEnvelopeYou4Rotated",
	"Prc16K",
	"Prc32K",
	"Prc32KBig",
	"PrcEnvelope1",
	"PrcEnvelope2",
	"PrcEnvelope3",
	"PrcEnvelope4",
	"PrcEnvelope5",
	"PrcEnvelope6",
	"PrcEnvelope7",
	"PrcEnvelope8",
	"PrcEnvelope9",
	"PrcEnvelope10",
	"Prc16KRotated",
	"Prc32KRotated",
	"Prc32KBigRotated",
	"PrcEnvelope1Rotated",
	"PrcEnvelope2Rotated",
	"PrcEnvelope3Rotated",
	"PrcEnvelope4Rotated",
	"PrcEnvelope5Rotated",
	"PrcEnvelope6Rotated",
	"PrcEnvelope7Rotated",
	"PrcEnvelope8Rotated",
	"PrcEnvelope9Rotated",
	"PrcEnvelope10Rotated",
}

func (v *PrinterPaperSize) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PrinterPaperSize(value)
	for _, existing := range AllowedPrinterPaperSizeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PrinterPaperSize", value)
}

// NewPrinterPaperSizeFromValue returns a pointer to a valid PrinterPaperSize
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrinterPaperSizeFromValue(v string) (*PrinterPaperSize, error) {
	ev := PrinterPaperSize(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrinterPaperSize: valid values are %v", v, AllowedPrinterPaperSizeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrinterPaperSize) IsValid() bool {
	for _, existing := range AllowedPrinterPaperSizeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrinterPaperSize value
func (v PrinterPaperSize) Ptr() *PrinterPaperSize {
	return &v
}

type NullablePrinterPaperSize struct {
	value *PrinterPaperSize
	isSet bool
}

func (v NullablePrinterPaperSize) Get() *PrinterPaperSize {
	return v.value
}

func (v *NullablePrinterPaperSize) Set(val *PrinterPaperSize) {
	v.value = val
	v.isSet = true
}

func (v NullablePrinterPaperSize) IsSet() bool {
	return v.isSet
}

func (v *NullablePrinterPaperSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrinterPaperSize(val *PrinterPaperSize) *NullablePrinterPaperSize {
	return &NullablePrinterPaperSize{value: val, isSet: true}
}

func (v NullablePrinterPaperSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrinterPaperSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

