/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CatalogSearchResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogSearchResponseModel{}

// CatalogSearchResponseModel Catalog Search result model
type CatalogSearchResponseModel struct {
	// Simple administrative name of catalog within parent admin folder (if any). This property is not guaranteed unique across all catalogs.
	Name NullableString `json:"Name,omitempty"`
	// Unique administrative name of catalog.
	FullName NullableString `json:"FullName,omitempty"`
	// Id of the machine catalog.
	Id NullableString `json:"Id,omitempty"`
	// `DEPRECATED.  Use <see cref='Id'/>.` DEPRECATED.  Use Id.
	// Deprecated
	Uid *int32 `json:"Uid,omitempty"`
	AllocationType *AllocationType `json:"AllocationType,omitempty"`
	HypervisorPluginResponse *HypervisorPluginResponseModel `json:"HypervisorPluginResponse,omitempty"`
	// The number of assigned machines (machines that have been assigned to a user/users or a client name/address).
	AssignedCount NullableInt32 `json:"AssignedCount,omitempty"`
	// The number of available machines (those not in any delivery group).
	AvailableCount *int32 `json:"AvailableCount,omitempty"`
	// Description of the machine catalog.
	Description NullableString `json:"Description,omitempty"`
	// The Uid of the hypervisor connection that is associated with the machines in the catalog. This property only applies to MCS provisioned catalogs. For other provisioning types machines can be from one or more different hypervisor connections.
	HypervisorConnectionUid *int32 `json:"HypervisorConnectionUid,omitempty"`
	// Indicates whether the machines in the catalog are power-managed.
	IsPowerManaged *bool `json:"IsPowerManaged,omitempty"`
	// Indicates whether or not the catalog is a RemotePC catalog. Remote PC catalogs automatically configure appropriate machines without the need for manual configuration. CHANGE: was public bool RemotePC { get; set; }
	IsRemotePC *bool `json:"IsRemotePC,omitempty"`
	// Indicates whether or not machines in the machine catalog are Physical.
	MachinesArePhysical *bool `json:"MachinesArePhysical,omitempty"`
	ProvisioningType *ProvisioningType `json:"ProvisioningType,omitempty"`
	// IP address of the PVS server to be used. This only applies if the ProvisioningType is .
	PvsAddress NullableString `json:"PvsAddress,omitempty"`
	// The domain of the PVS server to be used.
	PvsDomain NullableString `json:"PvsDomain,omitempty"`
	SessionSupport *SessionSupport `json:"SessionSupport,omitempty"`
	// The number of unassigned machines (machines not assigned to users).
	UnassignedCount *int32 `json:"UnassignedCount,omitempty"`
	// The number of machines in the catalog that are in a delivery group.
	UsedCount *int32 `json:"UsedCount,omitempty"`
	AdminFolder *RefResponseModel `json:"AdminFolder,omitempty"`
}

// NewCatalogSearchResponseModel instantiates a new CatalogSearchResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogSearchResponseModel() *CatalogSearchResponseModel {
	this := CatalogSearchResponseModel{}
	return &this
}

// NewCatalogSearchResponseModelWithDefaults instantiates a new CatalogSearchResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogSearchResponseModelWithDefaults() *CatalogSearchResponseModel {
	this := CatalogSearchResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CatalogSearchResponseModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CatalogSearchResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetFullName returns the FullName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetFullName() string {
	if o == nil || IsNil(o.FullName.Get()) {
		var ret string
		return ret
	}
	return *o.FullName.Get()
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName.Get(), o.FullName.IsSet()
}

// HasFullName returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasFullName() bool {
	if o != nil && o.FullName.IsSet() {
		return true
	}

	return false
}

// SetFullName gets a reference to the given NullableString and assigns it to the FullName field.
func (o *CatalogSearchResponseModel) SetFullName(v string) {
	o.FullName.Set(&v)
}
// SetFullNameNil sets the value for FullName to be an explicit nil
func (o *CatalogSearchResponseModel) SetFullNameNil() {
	o.FullName.Set(nil)
}

// UnsetFullName ensures that no value is present for FullName, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetFullName() {
	o.FullName.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CatalogSearchResponseModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CatalogSearchResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetUid returns the Uid field value if set, zero value otherwise.
// Deprecated
func (o *CatalogSearchResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CatalogSearchResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
// Deprecated
func (o *CatalogSearchResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetAllocationType returns the AllocationType field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAllocationType() AllocationType {
	if o == nil || IsNil(o.AllocationType) {
		var ret AllocationType
		return ret
	}
	return *o.AllocationType
}

// GetAllocationTypeOk returns a tuple with the AllocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAllocationTypeOk() (*AllocationType, bool) {
	if o == nil || IsNil(o.AllocationType) {
		return nil, false
	}
	return o.AllocationType, true
}

// HasAllocationType returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAllocationType() bool {
	if o != nil && !IsNil(o.AllocationType) {
		return true
	}

	return false
}

// SetAllocationType gets a reference to the given AllocationType and assigns it to the AllocationType field.
func (o *CatalogSearchResponseModel) SetAllocationType(v AllocationType) {
	o.AllocationType = &v
}

// GetHypervisorPluginResponse returns the HypervisorPluginResponse field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetHypervisorPluginResponse() HypervisorPluginResponseModel {
	if o == nil || IsNil(o.HypervisorPluginResponse) {
		var ret HypervisorPluginResponseModel
		return ret
	}
	return *o.HypervisorPluginResponse
}

// GetHypervisorPluginResponseOk returns a tuple with the HypervisorPluginResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetHypervisorPluginResponseOk() (*HypervisorPluginResponseModel, bool) {
	if o == nil || IsNil(o.HypervisorPluginResponse) {
		return nil, false
	}
	return o.HypervisorPluginResponse, true
}

// HasHypervisorPluginResponse returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasHypervisorPluginResponse() bool {
	if o != nil && !IsNil(o.HypervisorPluginResponse) {
		return true
	}

	return false
}

// SetHypervisorPluginResponse gets a reference to the given HypervisorPluginResponseModel and assigns it to the HypervisorPluginResponse field.
func (o *CatalogSearchResponseModel) SetHypervisorPluginResponse(v HypervisorPluginResponseModel) {
	o.HypervisorPluginResponse = &v
}

// GetAssignedCount returns the AssignedCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetAssignedCount() int32 {
	if o == nil || IsNil(o.AssignedCount.Get()) {
		var ret int32
		return ret
	}
	return *o.AssignedCount.Get()
}

// GetAssignedCountOk returns a tuple with the AssignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetAssignedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssignedCount.Get(), o.AssignedCount.IsSet()
}

// HasAssignedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAssignedCount() bool {
	if o != nil && o.AssignedCount.IsSet() {
		return true
	}

	return false
}

// SetAssignedCount gets a reference to the given NullableInt32 and assigns it to the AssignedCount field.
func (o *CatalogSearchResponseModel) SetAssignedCount(v int32) {
	o.AssignedCount.Set(&v)
}
// SetAssignedCountNil sets the value for AssignedCount to be an explicit nil
func (o *CatalogSearchResponseModel) SetAssignedCountNil() {
	o.AssignedCount.Set(nil)
}

// UnsetAssignedCount ensures that no value is present for AssignedCount, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetAssignedCount() {
	o.AssignedCount.Unset()
}

// GetAvailableCount returns the AvailableCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAvailableCount() int32 {
	if o == nil || IsNil(o.AvailableCount) {
		var ret int32
		return ret
	}
	return *o.AvailableCount
}

// GetAvailableCountOk returns a tuple with the AvailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAvailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableCount) {
		return nil, false
	}
	return o.AvailableCount, true
}

// HasAvailableCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAvailableCount() bool {
	if o != nil && !IsNil(o.AvailableCount) {
		return true
	}

	return false
}

// SetAvailableCount gets a reference to the given int32 and assigns it to the AvailableCount field.
func (o *CatalogSearchResponseModel) SetAvailableCount(v int32) {
	o.AvailableCount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CatalogSearchResponseModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CatalogSearchResponseModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetDescription() {
	o.Description.Unset()
}

// GetHypervisorConnectionUid returns the HypervisorConnectionUid field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetHypervisorConnectionUid() int32 {
	if o == nil || IsNil(o.HypervisorConnectionUid) {
		var ret int32
		return ret
	}
	return *o.HypervisorConnectionUid
}

// GetHypervisorConnectionUidOk returns a tuple with the HypervisorConnectionUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetHypervisorConnectionUidOk() (*int32, bool) {
	if o == nil || IsNil(o.HypervisorConnectionUid) {
		return nil, false
	}
	return o.HypervisorConnectionUid, true
}

// HasHypervisorConnectionUid returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasHypervisorConnectionUid() bool {
	if o != nil && !IsNil(o.HypervisorConnectionUid) {
		return true
	}

	return false
}

// SetHypervisorConnectionUid gets a reference to the given int32 and assigns it to the HypervisorConnectionUid field.
func (o *CatalogSearchResponseModel) SetHypervisorConnectionUid(v int32) {
	o.HypervisorConnectionUid = &v
}

// GetIsPowerManaged returns the IsPowerManaged field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetIsPowerManaged() bool {
	if o == nil || IsNil(o.IsPowerManaged) {
		var ret bool
		return ret
	}
	return *o.IsPowerManaged
}

// GetIsPowerManagedOk returns a tuple with the IsPowerManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetIsPowerManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPowerManaged) {
		return nil, false
	}
	return o.IsPowerManaged, true
}

// HasIsPowerManaged returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasIsPowerManaged() bool {
	if o != nil && !IsNil(o.IsPowerManaged) {
		return true
	}

	return false
}

// SetIsPowerManaged gets a reference to the given bool and assigns it to the IsPowerManaged field.
func (o *CatalogSearchResponseModel) SetIsPowerManaged(v bool) {
	o.IsPowerManaged = &v
}

// GetIsRemotePC returns the IsRemotePC field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetIsRemotePC() bool {
	if o == nil || IsNil(o.IsRemotePC) {
		var ret bool
		return ret
	}
	return *o.IsRemotePC
}

// GetIsRemotePCOk returns a tuple with the IsRemotePC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetIsRemotePCOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemotePC) {
		return nil, false
	}
	return o.IsRemotePC, true
}

// HasIsRemotePC returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasIsRemotePC() bool {
	if o != nil && !IsNil(o.IsRemotePC) {
		return true
	}

	return false
}

// SetIsRemotePC gets a reference to the given bool and assigns it to the IsRemotePC field.
func (o *CatalogSearchResponseModel) SetIsRemotePC(v bool) {
	o.IsRemotePC = &v
}

// GetMachinesArePhysical returns the MachinesArePhysical field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetMachinesArePhysical() bool {
	if o == nil || IsNil(o.MachinesArePhysical) {
		var ret bool
		return ret
	}
	return *o.MachinesArePhysical
}

// GetMachinesArePhysicalOk returns a tuple with the MachinesArePhysical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetMachinesArePhysicalOk() (*bool, bool) {
	if o == nil || IsNil(o.MachinesArePhysical) {
		return nil, false
	}
	return o.MachinesArePhysical, true
}

// HasMachinesArePhysical returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasMachinesArePhysical() bool {
	if o != nil && !IsNil(o.MachinesArePhysical) {
		return true
	}

	return false
}

// SetMachinesArePhysical gets a reference to the given bool and assigns it to the MachinesArePhysical field.
func (o *CatalogSearchResponseModel) SetMachinesArePhysical(v bool) {
	o.MachinesArePhysical = &v
}

// GetProvisioningType returns the ProvisioningType field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetProvisioningType() ProvisioningType {
	if o == nil || IsNil(o.ProvisioningType) {
		var ret ProvisioningType
		return ret
	}
	return *o.ProvisioningType
}

// GetProvisioningTypeOk returns a tuple with the ProvisioningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetProvisioningTypeOk() (*ProvisioningType, bool) {
	if o == nil || IsNil(o.ProvisioningType) {
		return nil, false
	}
	return o.ProvisioningType, true
}

// HasProvisioningType returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasProvisioningType() bool {
	if o != nil && !IsNil(o.ProvisioningType) {
		return true
	}

	return false
}

// SetProvisioningType gets a reference to the given ProvisioningType and assigns it to the ProvisioningType field.
func (o *CatalogSearchResponseModel) SetProvisioningType(v ProvisioningType) {
	o.ProvisioningType = &v
}

// GetPvsAddress returns the PvsAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetPvsAddress() string {
	if o == nil || IsNil(o.PvsAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PvsAddress.Get()
}

// GetPvsAddressOk returns a tuple with the PvsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetPvsAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsAddress.Get(), o.PvsAddress.IsSet()
}

// HasPvsAddress returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasPvsAddress() bool {
	if o != nil && o.PvsAddress.IsSet() {
		return true
	}

	return false
}

// SetPvsAddress gets a reference to the given NullableString and assigns it to the PvsAddress field.
func (o *CatalogSearchResponseModel) SetPvsAddress(v string) {
	o.PvsAddress.Set(&v)
}
// SetPvsAddressNil sets the value for PvsAddress to be an explicit nil
func (o *CatalogSearchResponseModel) SetPvsAddressNil() {
	o.PvsAddress.Set(nil)
}

// UnsetPvsAddress ensures that no value is present for PvsAddress, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetPvsAddress() {
	o.PvsAddress.Unset()
}

// GetPvsDomain returns the PvsDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogSearchResponseModel) GetPvsDomain() string {
	if o == nil || IsNil(o.PvsDomain.Get()) {
		var ret string
		return ret
	}
	return *o.PvsDomain.Get()
}

// GetPvsDomainOk returns a tuple with the PvsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogSearchResponseModel) GetPvsDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PvsDomain.Get(), o.PvsDomain.IsSet()
}

// HasPvsDomain returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasPvsDomain() bool {
	if o != nil && o.PvsDomain.IsSet() {
		return true
	}

	return false
}

// SetPvsDomain gets a reference to the given NullableString and assigns it to the PvsDomain field.
func (o *CatalogSearchResponseModel) SetPvsDomain(v string) {
	o.PvsDomain.Set(&v)
}
// SetPvsDomainNil sets the value for PvsDomain to be an explicit nil
func (o *CatalogSearchResponseModel) SetPvsDomainNil() {
	o.PvsDomain.Set(nil)
}

// UnsetPvsDomain ensures that no value is present for PvsDomain, not even an explicit nil
func (o *CatalogSearchResponseModel) UnsetPvsDomain() {
	o.PvsDomain.Unset()
}

// GetSessionSupport returns the SessionSupport field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetSessionSupport() SessionSupport {
	if o == nil || IsNil(o.SessionSupport) {
		var ret SessionSupport
		return ret
	}
	return *o.SessionSupport
}

// GetSessionSupportOk returns a tuple with the SessionSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetSessionSupportOk() (*SessionSupport, bool) {
	if o == nil || IsNil(o.SessionSupport) {
		return nil, false
	}
	return o.SessionSupport, true
}

// HasSessionSupport returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasSessionSupport() bool {
	if o != nil && !IsNil(o.SessionSupport) {
		return true
	}

	return false
}

// SetSessionSupport gets a reference to the given SessionSupport and assigns it to the SessionSupport field.
func (o *CatalogSearchResponseModel) SetSessionSupport(v SessionSupport) {
	o.SessionSupport = &v
}

// GetUnassignedCount returns the UnassignedCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetUnassignedCount() int32 {
	if o == nil || IsNil(o.UnassignedCount) {
		var ret int32
		return ret
	}
	return *o.UnassignedCount
}

// GetUnassignedCountOk returns a tuple with the UnassignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetUnassignedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnassignedCount) {
		return nil, false
	}
	return o.UnassignedCount, true
}

// HasUnassignedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUnassignedCount() bool {
	if o != nil && !IsNil(o.UnassignedCount) {
		return true
	}

	return false
}

// SetUnassignedCount gets a reference to the given int32 and assigns it to the UnassignedCount field.
func (o *CatalogSearchResponseModel) SetUnassignedCount(v int32) {
	o.UnassignedCount = &v
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetUsedCount() int32 {
	if o == nil || IsNil(o.UsedCount) {
		var ret int32
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetUsedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedCount) {
		return nil, false
	}
	return o.UsedCount, true
}

// HasUsedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUsedCount() bool {
	if o != nil && !IsNil(o.UsedCount) {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int32 and assigns it to the UsedCount field.
func (o *CatalogSearchResponseModel) SetUsedCount(v int32) {
	o.UsedCount = &v
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAdminFolder() RefResponseModel {
	if o == nil || IsNil(o.AdminFolder) {
		var ret RefResponseModel
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAdminFolderOk() (*RefResponseModel, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given RefResponseModel and assigns it to the AdminFolder field.
func (o *CatalogSearchResponseModel) SetAdminFolder(v RefResponseModel) {
	o.AdminFolder = &v
}

func (o CatalogSearchResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogSearchResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if o.FullName.IsSet() {
		toSerialize["FullName"] = o.FullName.Get()
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	if !IsNil(o.AllocationType) {
		toSerialize["AllocationType"] = o.AllocationType
	}
	if !IsNil(o.HypervisorPluginResponse) {
		toSerialize["HypervisorPluginResponse"] = o.HypervisorPluginResponse
	}
	if o.AssignedCount.IsSet() {
		toSerialize["AssignedCount"] = o.AssignedCount.Get()
	}
	if !IsNil(o.AvailableCount) {
		toSerialize["AvailableCount"] = o.AvailableCount
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if !IsNil(o.HypervisorConnectionUid) {
		toSerialize["HypervisorConnectionUid"] = o.HypervisorConnectionUid
	}
	if !IsNil(o.IsPowerManaged) {
		toSerialize["IsPowerManaged"] = o.IsPowerManaged
	}
	if !IsNil(o.IsRemotePC) {
		toSerialize["IsRemotePC"] = o.IsRemotePC
	}
	if !IsNil(o.MachinesArePhysical) {
		toSerialize["MachinesArePhysical"] = o.MachinesArePhysical
	}
	if !IsNil(o.ProvisioningType) {
		toSerialize["ProvisioningType"] = o.ProvisioningType
	}
	if o.PvsAddress.IsSet() {
		toSerialize["PvsAddress"] = o.PvsAddress.Get()
	}
	if o.PvsDomain.IsSet() {
		toSerialize["PvsDomain"] = o.PvsDomain.Get()
	}
	if !IsNil(o.SessionSupport) {
		toSerialize["SessionSupport"] = o.SessionSupport
	}
	if !IsNil(o.UnassignedCount) {
		toSerialize["UnassignedCount"] = o.UnassignedCount
	}
	if !IsNil(o.UsedCount) {
		toSerialize["UsedCount"] = o.UsedCount
	}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	return toSerialize, nil
}

type NullableCatalogSearchResponseModel struct {
	value *CatalogSearchResponseModel
	isSet bool
}

func (v NullableCatalogSearchResponseModel) Get() *CatalogSearchResponseModel {
	return v.value
}

func (v *NullableCatalogSearchResponseModel) Set(val *CatalogSearchResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogSearchResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogSearchResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogSearchResponseModel(val *CatalogSearchResponseModel) *NullableCatalogSearchResponseModel {
	return &NullableCatalogSearchResponseModel{value: val, isSet: true}
}

func (v NullableCatalogSearchResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogSearchResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


