/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CatalogSearchResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogSearchResponseModel{}

// CatalogSearchResponseModel Catalog Search result model
type CatalogSearchResponseModel struct {
	// Simple administrative name of catalog within parent admin folder (if any). This property is not guaranteed unique across all catalogs.
	Name *string `json:"Name,omitempty"`
	// Unique administrative name of catalog.
	FullName *string `json:"FullName,omitempty"`
	// Id of the machine catalog.
	Id *string `json:"Id,omitempty"`
	// `DEPRECATED.  Use <see cref='Id'/>.` DEPRECATED.  Use Id.
	Uid *int32 `json:"Uid,omitempty"`
	AllocationType *AllocationType `json:"AllocationType,omitempty"`
	HypervisorPluginResponse *CatalogSearchResponseModelHypervisorPluginResponse `json:"HypervisorPluginResponse,omitempty"`
	// The number of assigned machines (machines that have been assigned to a user/users or a client name/address).
	AssignedCount *int32 `json:"AssignedCount,omitempty"`
	// The number of available machines (those not in any delivery group).
	AvailableCount *int32 `json:"AvailableCount,omitempty"`
	// Description of the machine catalog.
	Description *string `json:"Description,omitempty"`
	// The Uid of the hypervisor connection that is associated with the machines in the catalog. This property only applies to MCS provisioned catalogs. For other provisioning types machines can be from one or more different hypervisor connections.
	HypervisorConnectionUid *int32 `json:"HypervisorConnectionUid,omitempty"`
	// Indicates whether the machines in the catalog are power-managed.
	IsPowerManaged *bool `json:"IsPowerManaged,omitempty"`
	// Indicates whether or not the catalog is a RemotePC catalog. Remote PC catalogs automatically configure appropriate machines without the need for manual configuration. CHANGE: was public bool RemotePC { get; set; }
	IsRemotePC *bool `json:"IsRemotePC,omitempty"`
	// Indicates whether or not machines in the machine catalog are Physical.
	MachinesArePhysical *bool `json:"MachinesArePhysical,omitempty"`
	ProvisioningType *ProvisioningType `json:"ProvisioningType,omitempty"`
	// IP address of the PVS server to be used. This only applies if the ProvisioningType is .
	PvsAddress *string `json:"PvsAddress,omitempty"`
	// The domain of the PVS server to be used.
	PvsDomain *string `json:"PvsDomain,omitempty"`
	SessionSupport *SessionSupport `json:"SessionSupport,omitempty"`
	// The number of unassigned machines (machines not assigned to users).
	UnassignedCount *int32 `json:"UnassignedCount,omitempty"`
	// The number of machines in the catalog that are in a delivery group.
	UsedCount *int32 `json:"UsedCount,omitempty"`
	AdminFolder *CatalogSearchResponseModelAdminFolder `json:"AdminFolder,omitempty"`
}

// NewCatalogSearchResponseModel instantiates a new CatalogSearchResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogSearchResponseModel() *CatalogSearchResponseModel {
	this := CatalogSearchResponseModel{}
	return &this
}

// NewCatalogSearchResponseModelWithDefaults instantiates a new CatalogSearchResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogSearchResponseModelWithDefaults() *CatalogSearchResponseModel {
	this := CatalogSearchResponseModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogSearchResponseModel) SetName(v string) {
	o.Name = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *CatalogSearchResponseModel) SetFullName(v string) {
	o.FullName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CatalogSearchResponseModel) SetId(v string) {
	o.Id = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *CatalogSearchResponseModel) SetUid(v int32) {
	o.Uid = &v
}

// GetAllocationType returns the AllocationType field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAllocationType() AllocationType {
	if o == nil || IsNil(o.AllocationType) {
		var ret AllocationType
		return ret
	}
	return *o.AllocationType
}

// GetAllocationTypeOk returns a tuple with the AllocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAllocationTypeOk() (*AllocationType, bool) {
	if o == nil || IsNil(o.AllocationType) {
		return nil, false
	}
	return o.AllocationType, true
}

// HasAllocationType returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAllocationType() bool {
	if o != nil && !IsNil(o.AllocationType) {
		return true
	}

	return false
}

// SetAllocationType gets a reference to the given AllocationType and assigns it to the AllocationType field.
func (o *CatalogSearchResponseModel) SetAllocationType(v AllocationType) {
	o.AllocationType = &v
}

// GetHypervisorPluginResponse returns the HypervisorPluginResponse field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetHypervisorPluginResponse() CatalogSearchResponseModelHypervisorPluginResponse {
	if o == nil || IsNil(o.HypervisorPluginResponse) {
		var ret CatalogSearchResponseModelHypervisorPluginResponse
		return ret
	}
	return *o.HypervisorPluginResponse
}

// GetHypervisorPluginResponseOk returns a tuple with the HypervisorPluginResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetHypervisorPluginResponseOk() (*CatalogSearchResponseModelHypervisorPluginResponse, bool) {
	if o == nil || IsNil(o.HypervisorPluginResponse) {
		return nil, false
	}
	return o.HypervisorPluginResponse, true
}

// HasHypervisorPluginResponse returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasHypervisorPluginResponse() bool {
	if o != nil && !IsNil(o.HypervisorPluginResponse) {
		return true
	}

	return false
}

// SetHypervisorPluginResponse gets a reference to the given CatalogSearchResponseModelHypervisorPluginResponse and assigns it to the HypervisorPluginResponse field.
func (o *CatalogSearchResponseModel) SetHypervisorPluginResponse(v CatalogSearchResponseModelHypervisorPluginResponse) {
	o.HypervisorPluginResponse = &v
}

// GetAssignedCount returns the AssignedCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAssignedCount() int32 {
	if o == nil || IsNil(o.AssignedCount) {
		var ret int32
		return ret
	}
	return *o.AssignedCount
}

// GetAssignedCountOk returns a tuple with the AssignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAssignedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AssignedCount) {
		return nil, false
	}
	return o.AssignedCount, true
}

// HasAssignedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAssignedCount() bool {
	if o != nil && !IsNil(o.AssignedCount) {
		return true
	}

	return false
}

// SetAssignedCount gets a reference to the given int32 and assigns it to the AssignedCount field.
func (o *CatalogSearchResponseModel) SetAssignedCount(v int32) {
	o.AssignedCount = &v
}

// GetAvailableCount returns the AvailableCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAvailableCount() int32 {
	if o == nil || IsNil(o.AvailableCount) {
		var ret int32
		return ret
	}
	return *o.AvailableCount
}

// GetAvailableCountOk returns a tuple with the AvailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAvailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableCount) {
		return nil, false
	}
	return o.AvailableCount, true
}

// HasAvailableCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAvailableCount() bool {
	if o != nil && !IsNil(o.AvailableCount) {
		return true
	}

	return false
}

// SetAvailableCount gets a reference to the given int32 and assigns it to the AvailableCount field.
func (o *CatalogSearchResponseModel) SetAvailableCount(v int32) {
	o.AvailableCount = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CatalogSearchResponseModel) SetDescription(v string) {
	o.Description = &v
}

// GetHypervisorConnectionUid returns the HypervisorConnectionUid field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetHypervisorConnectionUid() int32 {
	if o == nil || IsNil(o.HypervisorConnectionUid) {
		var ret int32
		return ret
	}
	return *o.HypervisorConnectionUid
}

// GetHypervisorConnectionUidOk returns a tuple with the HypervisorConnectionUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetHypervisorConnectionUidOk() (*int32, bool) {
	if o == nil || IsNil(o.HypervisorConnectionUid) {
		return nil, false
	}
	return o.HypervisorConnectionUid, true
}

// HasHypervisorConnectionUid returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasHypervisorConnectionUid() bool {
	if o != nil && !IsNil(o.HypervisorConnectionUid) {
		return true
	}

	return false
}

// SetHypervisorConnectionUid gets a reference to the given int32 and assigns it to the HypervisorConnectionUid field.
func (o *CatalogSearchResponseModel) SetHypervisorConnectionUid(v int32) {
	o.HypervisorConnectionUid = &v
}

// GetIsPowerManaged returns the IsPowerManaged field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetIsPowerManaged() bool {
	if o == nil || IsNil(o.IsPowerManaged) {
		var ret bool
		return ret
	}
	return *o.IsPowerManaged
}

// GetIsPowerManagedOk returns a tuple with the IsPowerManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetIsPowerManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPowerManaged) {
		return nil, false
	}
	return o.IsPowerManaged, true
}

// HasIsPowerManaged returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasIsPowerManaged() bool {
	if o != nil && !IsNil(o.IsPowerManaged) {
		return true
	}

	return false
}

// SetIsPowerManaged gets a reference to the given bool and assigns it to the IsPowerManaged field.
func (o *CatalogSearchResponseModel) SetIsPowerManaged(v bool) {
	o.IsPowerManaged = &v
}

// GetIsRemotePC returns the IsRemotePC field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetIsRemotePC() bool {
	if o == nil || IsNil(o.IsRemotePC) {
		var ret bool
		return ret
	}
	return *o.IsRemotePC
}

// GetIsRemotePCOk returns a tuple with the IsRemotePC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetIsRemotePCOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemotePC) {
		return nil, false
	}
	return o.IsRemotePC, true
}

// HasIsRemotePC returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasIsRemotePC() bool {
	if o != nil && !IsNil(o.IsRemotePC) {
		return true
	}

	return false
}

// SetIsRemotePC gets a reference to the given bool and assigns it to the IsRemotePC field.
func (o *CatalogSearchResponseModel) SetIsRemotePC(v bool) {
	o.IsRemotePC = &v
}

// GetMachinesArePhysical returns the MachinesArePhysical field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetMachinesArePhysical() bool {
	if o == nil || IsNil(o.MachinesArePhysical) {
		var ret bool
		return ret
	}
	return *o.MachinesArePhysical
}

// GetMachinesArePhysicalOk returns a tuple with the MachinesArePhysical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetMachinesArePhysicalOk() (*bool, bool) {
	if o == nil || IsNil(o.MachinesArePhysical) {
		return nil, false
	}
	return o.MachinesArePhysical, true
}

// HasMachinesArePhysical returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasMachinesArePhysical() bool {
	if o != nil && !IsNil(o.MachinesArePhysical) {
		return true
	}

	return false
}

// SetMachinesArePhysical gets a reference to the given bool and assigns it to the MachinesArePhysical field.
func (o *CatalogSearchResponseModel) SetMachinesArePhysical(v bool) {
	o.MachinesArePhysical = &v
}

// GetProvisioningType returns the ProvisioningType field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetProvisioningType() ProvisioningType {
	if o == nil || IsNil(o.ProvisioningType) {
		var ret ProvisioningType
		return ret
	}
	return *o.ProvisioningType
}

// GetProvisioningTypeOk returns a tuple with the ProvisioningType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetProvisioningTypeOk() (*ProvisioningType, bool) {
	if o == nil || IsNil(o.ProvisioningType) {
		return nil, false
	}
	return o.ProvisioningType, true
}

// HasProvisioningType returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasProvisioningType() bool {
	if o != nil && !IsNil(o.ProvisioningType) {
		return true
	}

	return false
}

// SetProvisioningType gets a reference to the given ProvisioningType and assigns it to the ProvisioningType field.
func (o *CatalogSearchResponseModel) SetProvisioningType(v ProvisioningType) {
	o.ProvisioningType = &v
}

// GetPvsAddress returns the PvsAddress field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetPvsAddress() string {
	if o == nil || IsNil(o.PvsAddress) {
		var ret string
		return ret
	}
	return *o.PvsAddress
}

// GetPvsAddressOk returns a tuple with the PvsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetPvsAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PvsAddress) {
		return nil, false
	}
	return o.PvsAddress, true
}

// HasPvsAddress returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasPvsAddress() bool {
	if o != nil && !IsNil(o.PvsAddress) {
		return true
	}

	return false
}

// SetPvsAddress gets a reference to the given string and assigns it to the PvsAddress field.
func (o *CatalogSearchResponseModel) SetPvsAddress(v string) {
	o.PvsAddress = &v
}

// GetPvsDomain returns the PvsDomain field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetPvsDomain() string {
	if o == nil || IsNil(o.PvsDomain) {
		var ret string
		return ret
	}
	return *o.PvsDomain
}

// GetPvsDomainOk returns a tuple with the PvsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetPvsDomainOk() (*string, bool) {
	if o == nil || IsNil(o.PvsDomain) {
		return nil, false
	}
	return o.PvsDomain, true
}

// HasPvsDomain returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasPvsDomain() bool {
	if o != nil && !IsNil(o.PvsDomain) {
		return true
	}

	return false
}

// SetPvsDomain gets a reference to the given string and assigns it to the PvsDomain field.
func (o *CatalogSearchResponseModel) SetPvsDomain(v string) {
	o.PvsDomain = &v
}

// GetSessionSupport returns the SessionSupport field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetSessionSupport() SessionSupport {
	if o == nil || IsNil(o.SessionSupport) {
		var ret SessionSupport
		return ret
	}
	return *o.SessionSupport
}

// GetSessionSupportOk returns a tuple with the SessionSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetSessionSupportOk() (*SessionSupport, bool) {
	if o == nil || IsNil(o.SessionSupport) {
		return nil, false
	}
	return o.SessionSupport, true
}

// HasSessionSupport returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasSessionSupport() bool {
	if o != nil && !IsNil(o.SessionSupport) {
		return true
	}

	return false
}

// SetSessionSupport gets a reference to the given SessionSupport and assigns it to the SessionSupport field.
func (o *CatalogSearchResponseModel) SetSessionSupport(v SessionSupport) {
	o.SessionSupport = &v
}

// GetUnassignedCount returns the UnassignedCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetUnassignedCount() int32 {
	if o == nil || IsNil(o.UnassignedCount) {
		var ret int32
		return ret
	}
	return *o.UnassignedCount
}

// GetUnassignedCountOk returns a tuple with the UnassignedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetUnassignedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UnassignedCount) {
		return nil, false
	}
	return o.UnassignedCount, true
}

// HasUnassignedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUnassignedCount() bool {
	if o != nil && !IsNil(o.UnassignedCount) {
		return true
	}

	return false
}

// SetUnassignedCount gets a reference to the given int32 and assigns it to the UnassignedCount field.
func (o *CatalogSearchResponseModel) SetUnassignedCount(v int32) {
	o.UnassignedCount = &v
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetUsedCount() int32 {
	if o == nil || IsNil(o.UsedCount) {
		var ret int32
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetUsedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsedCount) {
		return nil, false
	}
	return o.UsedCount, true
}

// HasUsedCount returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasUsedCount() bool {
	if o != nil && !IsNil(o.UsedCount) {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int32 and assigns it to the UsedCount field.
func (o *CatalogSearchResponseModel) SetUsedCount(v int32) {
	o.UsedCount = &v
}

// GetAdminFolder returns the AdminFolder field value if set, zero value otherwise.
func (o *CatalogSearchResponseModel) GetAdminFolder() CatalogSearchResponseModelAdminFolder {
	if o == nil || IsNil(o.AdminFolder) {
		var ret CatalogSearchResponseModelAdminFolder
		return ret
	}
	return *o.AdminFolder
}

// GetAdminFolderOk returns a tuple with the AdminFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSearchResponseModel) GetAdminFolderOk() (*CatalogSearchResponseModelAdminFolder, bool) {
	if o == nil || IsNil(o.AdminFolder) {
		return nil, false
	}
	return o.AdminFolder, true
}

// HasAdminFolder returns a boolean if a field has been set.
func (o *CatalogSearchResponseModel) HasAdminFolder() bool {
	if o != nil && !IsNil(o.AdminFolder) {
		return true
	}

	return false
}

// SetAdminFolder gets a reference to the given CatalogSearchResponseModelAdminFolder and assigns it to the AdminFolder field.
func (o *CatalogSearchResponseModel) SetAdminFolder(v CatalogSearchResponseModelAdminFolder) {
	o.AdminFolder = &v
}

func (o CatalogSearchResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogSearchResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.FullName) {
		toSerialize["FullName"] = o.FullName
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	if !IsNil(o.AllocationType) {
		toSerialize["AllocationType"] = o.AllocationType
	}
	if !IsNil(o.HypervisorPluginResponse) {
		toSerialize["HypervisorPluginResponse"] = o.HypervisorPluginResponse
	}
	if !IsNil(o.AssignedCount) {
		toSerialize["AssignedCount"] = o.AssignedCount
	}
	if !IsNil(o.AvailableCount) {
		toSerialize["AvailableCount"] = o.AvailableCount
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.HypervisorConnectionUid) {
		toSerialize["HypervisorConnectionUid"] = o.HypervisorConnectionUid
	}
	if !IsNil(o.IsPowerManaged) {
		toSerialize["IsPowerManaged"] = o.IsPowerManaged
	}
	if !IsNil(o.IsRemotePC) {
		toSerialize["IsRemotePC"] = o.IsRemotePC
	}
	if !IsNil(o.MachinesArePhysical) {
		toSerialize["MachinesArePhysical"] = o.MachinesArePhysical
	}
	if !IsNil(o.ProvisioningType) {
		toSerialize["ProvisioningType"] = o.ProvisioningType
	}
	if !IsNil(o.PvsAddress) {
		toSerialize["PvsAddress"] = o.PvsAddress
	}
	if !IsNil(o.PvsDomain) {
		toSerialize["PvsDomain"] = o.PvsDomain
	}
	if !IsNil(o.SessionSupport) {
		toSerialize["SessionSupport"] = o.SessionSupport
	}
	if !IsNil(o.UnassignedCount) {
		toSerialize["UnassignedCount"] = o.UnassignedCount
	}
	if !IsNil(o.UsedCount) {
		toSerialize["UsedCount"] = o.UsedCount
	}
	if !IsNil(o.AdminFolder) {
		toSerialize["AdminFolder"] = o.AdminFolder
	}
	return toSerialize, nil
}

type NullableCatalogSearchResponseModel struct {
	value *CatalogSearchResponseModel
	isSet bool
}

func (v NullableCatalogSearchResponseModel) Get() *CatalogSearchResponseModel {
	return v.value
}

func (v *NullableCatalogSearchResponseModel) Set(val *CatalogSearchResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogSearchResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogSearchResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogSearchResponseModel(val *CatalogSearchResponseModel) *NullableCatalogSearchResponseModel {
	return &NullableCatalogSearchResponseModel{value: val, isSet: true}
}

func (v NullableCatalogSearchResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogSearchResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


