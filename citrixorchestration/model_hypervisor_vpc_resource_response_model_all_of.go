/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorVpcResourceResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorVpcResourceResponseModelAllOf{}

// HypervisorVpcResourceResponseModelAllOf struct for HypervisorVpcResourceResponseModelAllOf
type HypervisorVpcResourceResponseModelAllOf struct {
	// Indicates the maximum number of security groups allowed per instance in this VPC
	InstanceSecurityGroupLimit int32 `json:"InstanceSecurityGroupLimit"`
}

// NewHypervisorVpcResourceResponseModelAllOf instantiates a new HypervisorVpcResourceResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorVpcResourceResponseModelAllOf(instanceSecurityGroupLimit int32) *HypervisorVpcResourceResponseModelAllOf {
	this := HypervisorVpcResourceResponseModelAllOf{}
	this.InstanceSecurityGroupLimit = instanceSecurityGroupLimit
	return &this
}

// NewHypervisorVpcResourceResponseModelAllOfWithDefaults instantiates a new HypervisorVpcResourceResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorVpcResourceResponseModelAllOfWithDefaults() *HypervisorVpcResourceResponseModelAllOf {
	this := HypervisorVpcResourceResponseModelAllOf{}
	return &this
}

// GetInstanceSecurityGroupLimit returns the InstanceSecurityGroupLimit field value
func (o *HypervisorVpcResourceResponseModelAllOf) GetInstanceSecurityGroupLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InstanceSecurityGroupLimit
}

// GetInstanceSecurityGroupLimitOk returns a tuple with the InstanceSecurityGroupLimit field value
// and a boolean to check if the value has been set.
func (o *HypervisorVpcResourceResponseModelAllOf) GetInstanceSecurityGroupLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceSecurityGroupLimit, true
}

// SetInstanceSecurityGroupLimit sets field value
func (o *HypervisorVpcResourceResponseModelAllOf) SetInstanceSecurityGroupLimit(v int32) {
	o.InstanceSecurityGroupLimit = v
}

func (o HypervisorVpcResourceResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorVpcResourceResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["InstanceSecurityGroupLimit"] = o.InstanceSecurityGroupLimit
	return toSerialize, nil
}

type NullableHypervisorVpcResourceResponseModelAllOf struct {
	value *HypervisorVpcResourceResponseModelAllOf
	isSet bool
}

func (v NullableHypervisorVpcResourceResponseModelAllOf) Get() *HypervisorVpcResourceResponseModelAllOf {
	return v.value
}

func (v *NullableHypervisorVpcResourceResponseModelAllOf) Set(val *HypervisorVpcResourceResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorVpcResourceResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorVpcResourceResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorVpcResourceResponseModelAllOf(val *HypervisorVpcResourceResponseModelAllOf) *NullableHypervisorVpcResourceResponseModelAllOf {
	return &NullableHypervisorVpcResourceResponseModelAllOf{value: val, isSet: true}
}

func (v NullableHypervisorVpcResourceResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorVpcResourceResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


