/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreCvadSecurityInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreCvadSecurityInfo{}

// BackupRestoreCvadSecurityInfo struct for BackupRestoreCvadSecurityInfo
type BackupRestoreCvadSecurityInfo struct {
	SecurityName NullableString `json:"SecurityName,omitempty"`
	SecurityType *CvadSecurityTypes `json:"SecurityType,omitempty"`
	Secret NullableString `json:"Secret,omitempty"`
}

// NewBackupRestoreCvadSecurityInfo instantiates a new BackupRestoreCvadSecurityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreCvadSecurityInfo() *BackupRestoreCvadSecurityInfo {
	this := BackupRestoreCvadSecurityInfo{}
	return &this
}

// NewBackupRestoreCvadSecurityInfoWithDefaults instantiates a new BackupRestoreCvadSecurityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreCvadSecurityInfoWithDefaults() *BackupRestoreCvadSecurityInfo {
	this := BackupRestoreCvadSecurityInfo{}
	return &this
}

// GetSecurityName returns the SecurityName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreCvadSecurityInfo) GetSecurityName() string {
	if o == nil || IsNil(o.SecurityName.Get()) {
		var ret string
		return ret
	}
	return *o.SecurityName.Get()
}

// GetSecurityNameOk returns a tuple with the SecurityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreCvadSecurityInfo) GetSecurityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecurityName.Get(), o.SecurityName.IsSet()
}

// HasSecurityName returns a boolean if a field has been set.
func (o *BackupRestoreCvadSecurityInfo) HasSecurityName() bool {
	if o != nil && o.SecurityName.IsSet() {
		return true
	}

	return false
}

// SetSecurityName gets a reference to the given NullableString and assigns it to the SecurityName field.
func (o *BackupRestoreCvadSecurityInfo) SetSecurityName(v string) {
	o.SecurityName.Set(&v)
}
// SetSecurityNameNil sets the value for SecurityName to be an explicit nil
func (o *BackupRestoreCvadSecurityInfo) SetSecurityNameNil() {
	o.SecurityName.Set(nil)
}

// UnsetSecurityName ensures that no value is present for SecurityName, not even an explicit nil
func (o *BackupRestoreCvadSecurityInfo) UnsetSecurityName() {
	o.SecurityName.Unset()
}

// GetSecurityType returns the SecurityType field value if set, zero value otherwise.
func (o *BackupRestoreCvadSecurityInfo) GetSecurityType() CvadSecurityTypes {
	if o == nil || IsNil(o.SecurityType) {
		var ret CvadSecurityTypes
		return ret
	}
	return *o.SecurityType
}

// GetSecurityTypeOk returns a tuple with the SecurityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreCvadSecurityInfo) GetSecurityTypeOk() (*CvadSecurityTypes, bool) {
	if o == nil || IsNil(o.SecurityType) {
		return nil, false
	}
	return o.SecurityType, true
}

// HasSecurityType returns a boolean if a field has been set.
func (o *BackupRestoreCvadSecurityInfo) HasSecurityType() bool {
	if o != nil && !IsNil(o.SecurityType) {
		return true
	}

	return false
}

// SetSecurityType gets a reference to the given CvadSecurityTypes and assigns it to the SecurityType field.
func (o *BackupRestoreCvadSecurityInfo) SetSecurityType(v CvadSecurityTypes) {
	o.SecurityType = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreCvadSecurityInfo) GetSecret() string {
	if o == nil || IsNil(o.Secret.Get()) {
		var ret string
		return ret
	}
	return *o.Secret.Get()
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreCvadSecurityInfo) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secret.Get(), o.Secret.IsSet()
}

// HasSecret returns a boolean if a field has been set.
func (o *BackupRestoreCvadSecurityInfo) HasSecret() bool {
	if o != nil && o.Secret.IsSet() {
		return true
	}

	return false
}

// SetSecret gets a reference to the given NullableString and assigns it to the Secret field.
func (o *BackupRestoreCvadSecurityInfo) SetSecret(v string) {
	o.Secret.Set(&v)
}
// SetSecretNil sets the value for Secret to be an explicit nil
func (o *BackupRestoreCvadSecurityInfo) SetSecretNil() {
	o.Secret.Set(nil)
}

// UnsetSecret ensures that no value is present for Secret, not even an explicit nil
func (o *BackupRestoreCvadSecurityInfo) UnsetSecret() {
	o.Secret.Unset()
}

func (o BackupRestoreCvadSecurityInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreCvadSecurityInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SecurityName.IsSet() {
		toSerialize["SecurityName"] = o.SecurityName.Get()
	}
	if !IsNil(o.SecurityType) {
		toSerialize["SecurityType"] = o.SecurityType
	}
	if o.Secret.IsSet() {
		toSerialize["Secret"] = o.Secret.Get()
	}
	return toSerialize, nil
}

type NullableBackupRestoreCvadSecurityInfo struct {
	value *BackupRestoreCvadSecurityInfo
	isSet bool
}

func (v NullableBackupRestoreCvadSecurityInfo) Get() *BackupRestoreCvadSecurityInfo {
	return v.value
}

func (v *NullableBackupRestoreCvadSecurityInfo) Set(val *BackupRestoreCvadSecurityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreCvadSecurityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreCvadSecurityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreCvadSecurityInfo(val *BackupRestoreCvadSecurityInfo) *NullableBackupRestoreCvadSecurityInfo {
	return &NullableBackupRestoreCvadSecurityInfo{value: val, isSet: true}
}

func (v NullableBackupRestoreCvadSecurityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreCvadSecurityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


