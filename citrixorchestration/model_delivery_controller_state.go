/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// DeliveryControllerState Type of DeliveryController state
type DeliveryControllerState string

// List of DeliveryControllerState
const (
	DELIVERYCONTROLLERSTATE_UNKNOWN       DeliveryControllerState = "Unknown"
	DELIVERYCONTROLLERSTATE_FAILED        DeliveryControllerState = "Failed"
	DELIVERYCONTROLLERSTATE_OFF           DeliveryControllerState = "Off"
	DELIVERYCONTROLLERSTATE_TRANSITIONING DeliveryControllerState = "Transitioning"
	DELIVERYCONTROLLERSTATE_ACTIVE        DeliveryControllerState = "Active"
)

// All allowed values of DeliveryControllerState enum
var AllowedDeliveryControllerStateEnumValues = []DeliveryControllerState{
	"Unknown",
	"Failed",
	"Off",
	"Transitioning",
	"Active",
}

func (v *DeliveryControllerState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = DeliveryControllerState(value)
	return nil
}

// NewDeliveryControllerStateFromValue returns a pointer to a valid DeliveryControllerState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryControllerStateFromValue(v string) (*DeliveryControllerState, error) {
	ev := DeliveryControllerState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryControllerState: valid values are %v", v, AllowedDeliveryControllerStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryControllerState) IsValid() bool {
	for _, existing := range AllowedDeliveryControllerStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeliveryControllerState value
func (v DeliveryControllerState) Ptr() *DeliveryControllerState {
	return &v
}

type NullableDeliveryControllerState struct {
	value *DeliveryControllerState
	isSet bool
}

func (v NullableDeliveryControllerState) Get() *DeliveryControllerState {
	return v.value
}

func (v *NullableDeliveryControllerState) Set(val *DeliveryControllerState) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryControllerState) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryControllerState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryControllerState(val *DeliveryControllerState) *NullableDeliveryControllerState {
	return &NullableDeliveryControllerState{value: val, isSet: true}
}

func (v NullableDeliveryControllerState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryControllerState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
