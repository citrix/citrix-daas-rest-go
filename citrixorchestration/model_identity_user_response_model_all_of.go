/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IdentityUserResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityUserResponseModelAllOf{}

// IdentityUserResponseModelAllOf The User/Group identity object.
type IdentityUserResponseModelAllOf struct {
	// Display name of the user or group. Usually something like \"John Q. Doe\".
	DisplayName string `json:"DisplayName"`
	// Fully qualified sAMAccountName of the User or Group object (including domain).
	SamName *string `json:"SamName,omitempty"`
	// Unqualified SAM name (Directory property) of the User or Group object.  Does not include the domain. The sAMAccountName is unique within a domain.
	SamAccountName *string `json:"SamAccountName,omitempty"`
	// The common name associated with the User or Group object.
	CommonName *string `json:"CommonName,omitempty"`
	// The user principal name of a User object. The UPN must be unique among all security principal objects within the directory forest.
	PrincipalName *string `json:"PrincipalName,omitempty"`
	// The Object Identifier associated with the User or Group object.
	Oid *string `json:"Oid,omitempty"`
	// The Security Identifier associated with the User or Group object.
	Sid *string `json:"Sid,omitempty"`
	// The User Identity.
	UserIdentity *string `json:"UserIdentity,omitempty"`
	// Security Identifiers of groups of which the object is a member.
	GroupSids []string `json:"GroupSids,omitempty"`
	// Security Identifiers of resources to which the object is explicitly denied access.
	DenyOnlySids []string `json:"DenyOnlySids,omitempty"`
	// Indicates whether the password can expire on this User object.
	PasswordCanExpire *bool `json:"PasswordCanExpire,omitempty"`
	// Indicates the number of days before the password can expire on this User object.
	DaysUntilPasswordExpiry *int64 `json:"DaysUntilPasswordExpiry,omitempty"`
	// Indicates whether this a built-in object.
	IsBuiltIn *bool `json:"IsBuiltIn,omitempty"`
	// Indicates whether this is a User or Group object.
	IsGroup *bool `json:"IsGroup,omitempty"`
	// The name of the User or Group object.
	Name *string `json:"Name,omitempty"`
	// The street address associated with the User object.
	StreetAddress *string `json:"StreetAddress,omitempty"`
	// The city associated with the User object.
	City *string `json:"City,omitempty"`
	// The state associated with the User object.
	State *string `json:"State,omitempty"`
	// The country associated with the user object.
	Country *string `json:"Country,omitempty"`
	// The e-mail address associated with the user object.
	Mail *string `json:"Mail,omitempty"`
	// The telephone number associated with the user object.
	TelephoneNumber *string `json:"TelephoneNumber,omitempty"`
	// The home telephone number associated with the user object.
	HomePhone *string `json:"HomePhone,omitempty"`
	// The mobile telephone number associated with the user object.
	Mobile *string `json:"Mobile,omitempty"`
	// Indicates whether the User object is disabled. NOTE that this is opposite of the low-level SDK, which has \"IsDisabled\". By changing to \"Enabled\" it avoids a confusing double-negative.  It also matches all other SDK objects by using \"Enabled\" rather than \"IsEnabled\".
	Enabled *bool `json:"Enabled,omitempty"`
	// Indicates whether the User object is locked.
	Locked *bool `json:"Locked,omitempty"`
	// Properties fetched and populated in the User or Group object.  This is a bitfield indicating the fetched properties.
	PropertiesFetched int32 `json:"PropertiesFetched"`
	Claims *IdentityUserResponseModelAllOfClaims `json:"Claims,omitempty"`
	Directory *IdentityUserResponseModelAllOfDirectory `json:"Directory,omitempty"`
}

// NewIdentityUserResponseModelAllOf instantiates a new IdentityUserResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityUserResponseModelAllOf(displayName string, propertiesFetched int32) *IdentityUserResponseModelAllOf {
	this := IdentityUserResponseModelAllOf{}
	this.DisplayName = displayName
	this.PropertiesFetched = propertiesFetched
	return &this
}

// NewIdentityUserResponseModelAllOfWithDefaults instantiates a new IdentityUserResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityUserResponseModelAllOfWithDefaults() *IdentityUserResponseModelAllOf {
	this := IdentityUserResponseModelAllOf{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *IdentityUserResponseModelAllOf) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *IdentityUserResponseModelAllOf) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetSamName returns the SamName field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetSamName() string {
	if o == nil || IsNil(o.SamName) {
		var ret string
		return ret
	}
	return *o.SamName
}

// GetSamNameOk returns a tuple with the SamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetSamNameOk() (*string, bool) {
	if o == nil || IsNil(o.SamName) {
		return nil, false
	}
	return o.SamName, true
}

// HasSamName returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasSamName() bool {
	if o != nil && !IsNil(o.SamName) {
		return true
	}

	return false
}

// SetSamName gets a reference to the given string and assigns it to the SamName field.
func (o *IdentityUserResponseModelAllOf) SetSamName(v string) {
	o.SamName = &v
}

// GetSamAccountName returns the SamAccountName field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetSamAccountName() string {
	if o == nil || IsNil(o.SamAccountName) {
		var ret string
		return ret
	}
	return *o.SamAccountName
}

// GetSamAccountNameOk returns a tuple with the SamAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetSamAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.SamAccountName) {
		return nil, false
	}
	return o.SamAccountName, true
}

// HasSamAccountName returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasSamAccountName() bool {
	if o != nil && !IsNil(o.SamAccountName) {
		return true
	}

	return false
}

// SetSamAccountName gets a reference to the given string and assigns it to the SamAccountName field.
func (o *IdentityUserResponseModelAllOf) SetSamAccountName(v string) {
	o.SamAccountName = &v
}

// GetCommonName returns the CommonName field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetCommonName() string {
	if o == nil || IsNil(o.CommonName) {
		var ret string
		return ret
	}
	return *o.CommonName
}

// GetCommonNameOk returns a tuple with the CommonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetCommonNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommonName) {
		return nil, false
	}
	return o.CommonName, true
}

// HasCommonName returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasCommonName() bool {
	if o != nil && !IsNil(o.CommonName) {
		return true
	}

	return false
}

// SetCommonName gets a reference to the given string and assigns it to the CommonName field.
func (o *IdentityUserResponseModelAllOf) SetCommonName(v string) {
	o.CommonName = &v
}

// GetPrincipalName returns the PrincipalName field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetPrincipalName() string {
	if o == nil || IsNil(o.PrincipalName) {
		var ret string
		return ret
	}
	return *o.PrincipalName
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetPrincipalNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrincipalName) {
		return nil, false
	}
	return o.PrincipalName, true
}

// HasPrincipalName returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasPrincipalName() bool {
	if o != nil && !IsNil(o.PrincipalName) {
		return true
	}

	return false
}

// SetPrincipalName gets a reference to the given string and assigns it to the PrincipalName field.
func (o *IdentityUserResponseModelAllOf) SetPrincipalName(v string) {
	o.PrincipalName = &v
}

// GetOid returns the Oid field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetOid() string {
	if o == nil || IsNil(o.Oid) {
		var ret string
		return ret
	}
	return *o.Oid
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetOidOk() (*string, bool) {
	if o == nil || IsNil(o.Oid) {
		return nil, false
	}
	return o.Oid, true
}

// HasOid returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasOid() bool {
	if o != nil && !IsNil(o.Oid) {
		return true
	}

	return false
}

// SetOid gets a reference to the given string and assigns it to the Oid field.
func (o *IdentityUserResponseModelAllOf) SetOid(v string) {
	o.Oid = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// HasSid returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasSid() bool {
	if o != nil && !IsNil(o.Sid) {
		return true
	}

	return false
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *IdentityUserResponseModelAllOf) SetSid(v string) {
	o.Sid = &v
}

// GetUserIdentity returns the UserIdentity field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetUserIdentity() string {
	if o == nil || IsNil(o.UserIdentity) {
		var ret string
		return ret
	}
	return *o.UserIdentity
}

// GetUserIdentityOk returns a tuple with the UserIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetUserIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdentity) {
		return nil, false
	}
	return o.UserIdentity, true
}

// HasUserIdentity returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasUserIdentity() bool {
	if o != nil && !IsNil(o.UserIdentity) {
		return true
	}

	return false
}

// SetUserIdentity gets a reference to the given string and assigns it to the UserIdentity field.
func (o *IdentityUserResponseModelAllOf) SetUserIdentity(v string) {
	o.UserIdentity = &v
}

// GetGroupSids returns the GroupSids field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetGroupSids() []string {
	if o == nil || IsNil(o.GroupSids) {
		var ret []string
		return ret
	}
	return o.GroupSids
}

// GetGroupSidsOk returns a tuple with the GroupSids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetGroupSidsOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupSids) {
		return nil, false
	}
	return o.GroupSids, true
}

// HasGroupSids returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasGroupSids() bool {
	if o != nil && !IsNil(o.GroupSids) {
		return true
	}

	return false
}

// SetGroupSids gets a reference to the given []string and assigns it to the GroupSids field.
func (o *IdentityUserResponseModelAllOf) SetGroupSids(v []string) {
	o.GroupSids = v
}

// GetDenyOnlySids returns the DenyOnlySids field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetDenyOnlySids() []string {
	if o == nil || IsNil(o.DenyOnlySids) {
		var ret []string
		return ret
	}
	return o.DenyOnlySids
}

// GetDenyOnlySidsOk returns a tuple with the DenyOnlySids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetDenyOnlySidsOk() ([]string, bool) {
	if o == nil || IsNil(o.DenyOnlySids) {
		return nil, false
	}
	return o.DenyOnlySids, true
}

// HasDenyOnlySids returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasDenyOnlySids() bool {
	if o != nil && !IsNil(o.DenyOnlySids) {
		return true
	}

	return false
}

// SetDenyOnlySids gets a reference to the given []string and assigns it to the DenyOnlySids field.
func (o *IdentityUserResponseModelAllOf) SetDenyOnlySids(v []string) {
	o.DenyOnlySids = v
}

// GetPasswordCanExpire returns the PasswordCanExpire field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetPasswordCanExpire() bool {
	if o == nil || IsNil(o.PasswordCanExpire) {
		var ret bool
		return ret
	}
	return *o.PasswordCanExpire
}

// GetPasswordCanExpireOk returns a tuple with the PasswordCanExpire field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetPasswordCanExpireOk() (*bool, bool) {
	if o == nil || IsNil(o.PasswordCanExpire) {
		return nil, false
	}
	return o.PasswordCanExpire, true
}

// HasPasswordCanExpire returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasPasswordCanExpire() bool {
	if o != nil && !IsNil(o.PasswordCanExpire) {
		return true
	}

	return false
}

// SetPasswordCanExpire gets a reference to the given bool and assigns it to the PasswordCanExpire field.
func (o *IdentityUserResponseModelAllOf) SetPasswordCanExpire(v bool) {
	o.PasswordCanExpire = &v
}

// GetDaysUntilPasswordExpiry returns the DaysUntilPasswordExpiry field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetDaysUntilPasswordExpiry() int64 {
	if o == nil || IsNil(o.DaysUntilPasswordExpiry) {
		var ret int64
		return ret
	}
	return *o.DaysUntilPasswordExpiry
}

// GetDaysUntilPasswordExpiryOk returns a tuple with the DaysUntilPasswordExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetDaysUntilPasswordExpiryOk() (*int64, bool) {
	if o == nil || IsNil(o.DaysUntilPasswordExpiry) {
		return nil, false
	}
	return o.DaysUntilPasswordExpiry, true
}

// HasDaysUntilPasswordExpiry returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasDaysUntilPasswordExpiry() bool {
	if o != nil && !IsNil(o.DaysUntilPasswordExpiry) {
		return true
	}

	return false
}

// SetDaysUntilPasswordExpiry gets a reference to the given int64 and assigns it to the DaysUntilPasswordExpiry field.
func (o *IdentityUserResponseModelAllOf) SetDaysUntilPasswordExpiry(v int64) {
	o.DaysUntilPasswordExpiry = &v
}

// GetIsBuiltIn returns the IsBuiltIn field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetIsBuiltIn() bool {
	if o == nil || IsNil(o.IsBuiltIn) {
		var ret bool
		return ret
	}
	return *o.IsBuiltIn
}

// GetIsBuiltInOk returns a tuple with the IsBuiltIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetIsBuiltInOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBuiltIn) {
		return nil, false
	}
	return o.IsBuiltIn, true
}

// HasIsBuiltIn returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasIsBuiltIn() bool {
	if o != nil && !IsNil(o.IsBuiltIn) {
		return true
	}

	return false
}

// SetIsBuiltIn gets a reference to the given bool and assigns it to the IsBuiltIn field.
func (o *IdentityUserResponseModelAllOf) SetIsBuiltIn(v bool) {
	o.IsBuiltIn = &v
}

// GetIsGroup returns the IsGroup field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetIsGroup() bool {
	if o == nil || IsNil(o.IsGroup) {
		var ret bool
		return ret
	}
	return *o.IsGroup
}

// GetIsGroupOk returns a tuple with the IsGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetIsGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGroup) {
		return nil, false
	}
	return o.IsGroup, true
}

// HasIsGroup returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasIsGroup() bool {
	if o != nil && !IsNil(o.IsGroup) {
		return true
	}

	return false
}

// SetIsGroup gets a reference to the given bool and assigns it to the IsGroup field.
func (o *IdentityUserResponseModelAllOf) SetIsGroup(v bool) {
	o.IsGroup = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityUserResponseModelAllOf) SetName(v string) {
	o.Name = &v
}

// GetStreetAddress returns the StreetAddress field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetStreetAddress() string {
	if o == nil || IsNil(o.StreetAddress) {
		var ret string
		return ret
	}
	return *o.StreetAddress
}

// GetStreetAddressOk returns a tuple with the StreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetStreetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.StreetAddress) {
		return nil, false
	}
	return o.StreetAddress, true
}

// HasStreetAddress returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasStreetAddress() bool {
	if o != nil && !IsNil(o.StreetAddress) {
		return true
	}

	return false
}

// SetStreetAddress gets a reference to the given string and assigns it to the StreetAddress field.
func (o *IdentityUserResponseModelAllOf) SetStreetAddress(v string) {
	o.StreetAddress = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *IdentityUserResponseModelAllOf) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *IdentityUserResponseModelAllOf) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *IdentityUserResponseModelAllOf) SetCountry(v string) {
	o.Country = &v
}

// GetMail returns the Mail field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetMail() string {
	if o == nil || IsNil(o.Mail) {
		var ret string
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetMailOk() (*string, bool) {
	if o == nil || IsNil(o.Mail) {
		return nil, false
	}
	return o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasMail() bool {
	if o != nil && !IsNil(o.Mail) {
		return true
	}

	return false
}

// SetMail gets a reference to the given string and assigns it to the Mail field.
func (o *IdentityUserResponseModelAllOf) SetMail(v string) {
	o.Mail = &v
}

// GetTelephoneNumber returns the TelephoneNumber field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetTelephoneNumber() string {
	if o == nil || IsNil(o.TelephoneNumber) {
		var ret string
		return ret
	}
	return *o.TelephoneNumber
}

// GetTelephoneNumberOk returns a tuple with the TelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetTelephoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TelephoneNumber) {
		return nil, false
	}
	return o.TelephoneNumber, true
}

// HasTelephoneNumber returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasTelephoneNumber() bool {
	if o != nil && !IsNil(o.TelephoneNumber) {
		return true
	}

	return false
}

// SetTelephoneNumber gets a reference to the given string and assigns it to the TelephoneNumber field.
func (o *IdentityUserResponseModelAllOf) SetTelephoneNumber(v string) {
	o.TelephoneNumber = &v
}

// GetHomePhone returns the HomePhone field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetHomePhone() string {
	if o == nil || IsNil(o.HomePhone) {
		var ret string
		return ret
	}
	return *o.HomePhone
}

// GetHomePhoneOk returns a tuple with the HomePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetHomePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.HomePhone) {
		return nil, false
	}
	return o.HomePhone, true
}

// HasHomePhone returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasHomePhone() bool {
	if o != nil && !IsNil(o.HomePhone) {
		return true
	}

	return false
}

// SetHomePhone gets a reference to the given string and assigns it to the HomePhone field.
func (o *IdentityUserResponseModelAllOf) SetHomePhone(v string) {
	o.HomePhone = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *IdentityUserResponseModelAllOf) SetMobile(v string) {
	o.Mobile = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IdentityUserResponseModelAllOf) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *IdentityUserResponseModelAllOf) SetLocked(v bool) {
	o.Locked = &v
}

// GetPropertiesFetched returns the PropertiesFetched field value
func (o *IdentityUserResponseModelAllOf) GetPropertiesFetched() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PropertiesFetched
}

// GetPropertiesFetchedOk returns a tuple with the PropertiesFetched field value
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetPropertiesFetchedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PropertiesFetched, true
}

// SetPropertiesFetched sets field value
func (o *IdentityUserResponseModelAllOf) SetPropertiesFetched(v int32) {
	o.PropertiesFetched = v
}

// GetClaims returns the Claims field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetClaims() IdentityUserResponseModelAllOfClaims {
	if o == nil || IsNil(o.Claims) {
		var ret IdentityUserResponseModelAllOfClaims
		return ret
	}
	return *o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetClaimsOk() (*IdentityUserResponseModelAllOfClaims, bool) {
	if o == nil || IsNil(o.Claims) {
		return nil, false
	}
	return o.Claims, true
}

// HasClaims returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasClaims() bool {
	if o != nil && !IsNil(o.Claims) {
		return true
	}

	return false
}

// SetClaims gets a reference to the given IdentityUserResponseModelAllOfClaims and assigns it to the Claims field.
func (o *IdentityUserResponseModelAllOf) SetClaims(v IdentityUserResponseModelAllOfClaims) {
	o.Claims = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *IdentityUserResponseModelAllOf) GetDirectory() IdentityUserResponseModelAllOfDirectory {
	if o == nil || IsNil(o.Directory) {
		var ret IdentityUserResponseModelAllOfDirectory
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityUserResponseModelAllOf) GetDirectoryOk() (*IdentityUserResponseModelAllOfDirectory, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *IdentityUserResponseModelAllOf) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given IdentityUserResponseModelAllOfDirectory and assigns it to the Directory field.
func (o *IdentityUserResponseModelAllOf) SetDirectory(v IdentityUserResponseModelAllOfDirectory) {
	o.Directory = &v
}

func (o IdentityUserResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityUserResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DisplayName"] = o.DisplayName
	if !IsNil(o.SamName) {
		toSerialize["SamName"] = o.SamName
	}
	if !IsNil(o.SamAccountName) {
		toSerialize["SamAccountName"] = o.SamAccountName
	}
	if !IsNil(o.CommonName) {
		toSerialize["CommonName"] = o.CommonName
	}
	if !IsNil(o.PrincipalName) {
		toSerialize["PrincipalName"] = o.PrincipalName
	}
	if !IsNil(o.Oid) {
		toSerialize["Oid"] = o.Oid
	}
	if !IsNil(o.Sid) {
		toSerialize["Sid"] = o.Sid
	}
	if !IsNil(o.UserIdentity) {
		toSerialize["UserIdentity"] = o.UserIdentity
	}
	if !IsNil(o.GroupSids) {
		toSerialize["GroupSids"] = o.GroupSids
	}
	if !IsNil(o.DenyOnlySids) {
		toSerialize["DenyOnlySids"] = o.DenyOnlySids
	}
	if !IsNil(o.PasswordCanExpire) {
		toSerialize["PasswordCanExpire"] = o.PasswordCanExpire
	}
	if !IsNil(o.DaysUntilPasswordExpiry) {
		toSerialize["DaysUntilPasswordExpiry"] = o.DaysUntilPasswordExpiry
	}
	if !IsNil(o.IsBuiltIn) {
		toSerialize["IsBuiltIn"] = o.IsBuiltIn
	}
	if !IsNil(o.IsGroup) {
		toSerialize["IsGroup"] = o.IsGroup
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.StreetAddress) {
		toSerialize["StreetAddress"] = o.StreetAddress
	}
	if !IsNil(o.City) {
		toSerialize["City"] = o.City
	}
	if !IsNil(o.State) {
		toSerialize["State"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["Country"] = o.Country
	}
	if !IsNil(o.Mail) {
		toSerialize["Mail"] = o.Mail
	}
	if !IsNil(o.TelephoneNumber) {
		toSerialize["TelephoneNumber"] = o.TelephoneNumber
	}
	if !IsNil(o.HomePhone) {
		toSerialize["HomePhone"] = o.HomePhone
	}
	if !IsNil(o.Mobile) {
		toSerialize["Mobile"] = o.Mobile
	}
	if !IsNil(o.Enabled) {
		toSerialize["Enabled"] = o.Enabled
	}
	if !IsNil(o.Locked) {
		toSerialize["Locked"] = o.Locked
	}
	toSerialize["PropertiesFetched"] = o.PropertiesFetched
	if !IsNil(o.Claims) {
		toSerialize["Claims"] = o.Claims
	}
	if !IsNil(o.Directory) {
		toSerialize["Directory"] = o.Directory
	}
	return toSerialize, nil
}

type NullableIdentityUserResponseModelAllOf struct {
	value *IdentityUserResponseModelAllOf
	isSet bool
}

func (v NullableIdentityUserResponseModelAllOf) Get() *IdentityUserResponseModelAllOf {
	return v.value
}

func (v *NullableIdentityUserResponseModelAllOf) Set(val *IdentityUserResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityUserResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityUserResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityUserResponseModelAllOf(val *IdentityUserResponseModelAllOf) *NullableIdentityUserResponseModelAllOf {
	return &NullableIdentityUserResponseModelAllOf{value: val, isSet: true}
}

func (v NullableIdentityUserResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityUserResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


