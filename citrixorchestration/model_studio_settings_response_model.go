/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the StudioSettingsResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StudioSettingsResponseModel{}

// StudioSettingsResponseModel Response model for WebStudio related settings
type StudioSettingsResponseModel struct {
	// Multiple sites configuration
	MultiSites []MultiSiteModel `json:"MultiSites,omitempty"`
	// The default domain to be used in the login page.
	DefaultDomain NullableString `json:"DefaultDomain,omitempty"`
}

// NewStudioSettingsResponseModel instantiates a new StudioSettingsResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStudioSettingsResponseModel() *StudioSettingsResponseModel {
	this := StudioSettingsResponseModel{}
	return &this
}

// NewStudioSettingsResponseModelWithDefaults instantiates a new StudioSettingsResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStudioSettingsResponseModelWithDefaults() *StudioSettingsResponseModel {
	this := StudioSettingsResponseModel{}
	return &this
}

// GetMultiSites returns the MultiSites field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StudioSettingsResponseModel) GetMultiSites() []MultiSiteModel {
	if o == nil {
		var ret []MultiSiteModel
		return ret
	}
	return o.MultiSites
}

// GetMultiSitesOk returns a tuple with the MultiSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StudioSettingsResponseModel) GetMultiSitesOk() ([]MultiSiteModel, bool) {
	if o == nil || IsNil(o.MultiSites) {
		return nil, false
	}
	return o.MultiSites, true
}

// HasMultiSites returns a boolean if a field has been set.
func (o *StudioSettingsResponseModel) HasMultiSites() bool {
	if o != nil && !IsNil(o.MultiSites) {
		return true
	}

	return false
}

// SetMultiSites gets a reference to the given []MultiSiteModel and assigns it to the MultiSites field.
func (o *StudioSettingsResponseModel) SetMultiSites(v []MultiSiteModel) {
	o.MultiSites = v
}

// GetDefaultDomain returns the DefaultDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StudioSettingsResponseModel) GetDefaultDomain() string {
	if o == nil || IsNil(o.DefaultDomain.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultDomain.Get()
}

// GetDefaultDomainOk returns a tuple with the DefaultDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StudioSettingsResponseModel) GetDefaultDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultDomain.Get(), o.DefaultDomain.IsSet()
}

// HasDefaultDomain returns a boolean if a field has been set.
func (o *StudioSettingsResponseModel) HasDefaultDomain() bool {
	if o != nil && o.DefaultDomain.IsSet() {
		return true
	}

	return false
}

// SetDefaultDomain gets a reference to the given NullableString and assigns it to the DefaultDomain field.
func (o *StudioSettingsResponseModel) SetDefaultDomain(v string) {
	o.DefaultDomain.Set(&v)
}

// SetDefaultDomainNil sets the value for DefaultDomain to be an explicit nil
func (o *StudioSettingsResponseModel) SetDefaultDomainNil() {
	o.DefaultDomain.Set(nil)
}

// UnsetDefaultDomain ensures that no value is present for DefaultDomain, not even an explicit nil
func (o *StudioSettingsResponseModel) UnsetDefaultDomain() {
	o.DefaultDomain.Unset()
}

func (o StudioSettingsResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StudioSettingsResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MultiSites != nil {
		toSerialize["MultiSites"] = o.MultiSites
	}
	if o.DefaultDomain.IsSet() {
		toSerialize["DefaultDomain"] = o.DefaultDomain.Get()
	}
	return toSerialize, nil
}

type NullableStudioSettingsResponseModel struct {
	value *StudioSettingsResponseModel
	isSet bool
}

func (v NullableStudioSettingsResponseModel) Get() *StudioSettingsResponseModel {
	return v.value
}

func (v *NullableStudioSettingsResponseModel) Set(val *StudioSettingsResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStudioSettingsResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStudioSettingsResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStudioSettingsResponseModel(val *StudioSettingsResponseModel) *NullableStudioSettingsResponseModel {
	return &NullableStudioSettingsResponseModel{value: val, isSet: true}
}

func (v NullableStudioSettingsResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStudioSettingsResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
