/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ApplicationSearchRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSearchRequestModel{}

// ApplicationSearchRequestModel Request model for defining advanced application search criteria.
type ApplicationSearchRequestModel struct {
	// Application folder in which to search for the application.
	ApplicationFolder NullableString `json:"ApplicationFolder,omitempty"`
	// Whether to include subfolders of the ApplicationFolder in the search for the application.
	IncludeSubFolders NullableBool `json:"IncludeSubFolders,omitempty"`
	// Application group in which to search for the application.
	ApplicationGroup NullableString `json:"ApplicationGroup,omitempty"`
	// Basic search string.  Specify a string which will match if contained within the application name.
	BasicSearchString NullableString `json:"BasicSearchString,omitempty"`
	// List of advanced search filters.
	SearchFilters []AppSearchFilterRequestModel `json:"SearchFilters,omitempty"`
	SortCriteria  *AppSortCriteriaRequestModel  `json:"SortCriteria,omitempty"`
	// List of advanced search filter groups.
	SearchFilterGroups     []AppSearchFilterGroupRequestModel `json:"SearchFilterGroups,omitempty"`
	SearchFilterGroupsType *AppSearchFilterGroupsType         `json:"SearchFilterGroupsType,omitempty"`
}

// NewApplicationSearchRequestModel instantiates a new ApplicationSearchRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSearchRequestModel() *ApplicationSearchRequestModel {
	this := ApplicationSearchRequestModel{}
	var includeSubFolders bool = true
	this.IncludeSubFolders = *NewNullableBool(&includeSubFolders)
	return &this
}

// NewApplicationSearchRequestModelWithDefaults instantiates a new ApplicationSearchRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSearchRequestModelWithDefaults() *ApplicationSearchRequestModel {
	this := ApplicationSearchRequestModel{}
	var includeSubFolders bool = true
	this.IncludeSubFolders = *NewNullableBool(&includeSubFolders)
	return &this
}

// GetApplicationFolder returns the ApplicationFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetApplicationFolder() string {
	if o == nil || IsNil(o.ApplicationFolder.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationFolder.Get()
}

// GetApplicationFolderOk returns a tuple with the ApplicationFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetApplicationFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationFolder.Get(), o.ApplicationFolder.IsSet()
}

// HasApplicationFolder returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasApplicationFolder() bool {
	if o != nil && o.ApplicationFolder.IsSet() {
		return true
	}

	return false
}

// SetApplicationFolder gets a reference to the given NullableString and assigns it to the ApplicationFolder field.
func (o *ApplicationSearchRequestModel) SetApplicationFolder(v string) {
	o.ApplicationFolder.Set(&v)
}

// SetApplicationFolderNil sets the value for ApplicationFolder to be an explicit nil
func (o *ApplicationSearchRequestModel) SetApplicationFolderNil() {
	o.ApplicationFolder.Set(nil)
}

// UnsetApplicationFolder ensures that no value is present for ApplicationFolder, not even an explicit nil
func (o *ApplicationSearchRequestModel) UnsetApplicationFolder() {
	o.ApplicationFolder.Unset()
}

// GetIncludeSubFolders returns the IncludeSubFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetIncludeSubFolders() bool {
	if o == nil || IsNil(o.IncludeSubFolders.Get()) {
		var ret bool
		return ret
	}
	return *o.IncludeSubFolders.Get()
}

// GetIncludeSubFoldersOk returns a tuple with the IncludeSubFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetIncludeSubFoldersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeSubFolders.Get(), o.IncludeSubFolders.IsSet()
}

// HasIncludeSubFolders returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasIncludeSubFolders() bool {
	if o != nil && o.IncludeSubFolders.IsSet() {
		return true
	}

	return false
}

// SetIncludeSubFolders gets a reference to the given NullableBool and assigns it to the IncludeSubFolders field.
func (o *ApplicationSearchRequestModel) SetIncludeSubFolders(v bool) {
	o.IncludeSubFolders.Set(&v)
}

// SetIncludeSubFoldersNil sets the value for IncludeSubFolders to be an explicit nil
func (o *ApplicationSearchRequestModel) SetIncludeSubFoldersNil() {
	o.IncludeSubFolders.Set(nil)
}

// UnsetIncludeSubFolders ensures that no value is present for IncludeSubFolders, not even an explicit nil
func (o *ApplicationSearchRequestModel) UnsetIncludeSubFolders() {
	o.IncludeSubFolders.Unset()
}

// GetApplicationGroup returns the ApplicationGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetApplicationGroup() string {
	if o == nil || IsNil(o.ApplicationGroup.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationGroup.Get()
}

// GetApplicationGroupOk returns a tuple with the ApplicationGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetApplicationGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationGroup.Get(), o.ApplicationGroup.IsSet()
}

// HasApplicationGroup returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasApplicationGroup() bool {
	if o != nil && o.ApplicationGroup.IsSet() {
		return true
	}

	return false
}

// SetApplicationGroup gets a reference to the given NullableString and assigns it to the ApplicationGroup field.
func (o *ApplicationSearchRequestModel) SetApplicationGroup(v string) {
	o.ApplicationGroup.Set(&v)
}

// SetApplicationGroupNil sets the value for ApplicationGroup to be an explicit nil
func (o *ApplicationSearchRequestModel) SetApplicationGroupNil() {
	o.ApplicationGroup.Set(nil)
}

// UnsetApplicationGroup ensures that no value is present for ApplicationGroup, not even an explicit nil
func (o *ApplicationSearchRequestModel) UnsetApplicationGroup() {
	o.ApplicationGroup.Unset()
}

// GetBasicSearchString returns the BasicSearchString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetBasicSearchString() string {
	if o == nil || IsNil(o.BasicSearchString.Get()) {
		var ret string
		return ret
	}
	return *o.BasicSearchString.Get()
}

// GetBasicSearchStringOk returns a tuple with the BasicSearchString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetBasicSearchStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BasicSearchString.Get(), o.BasicSearchString.IsSet()
}

// HasBasicSearchString returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasBasicSearchString() bool {
	if o != nil && o.BasicSearchString.IsSet() {
		return true
	}

	return false
}

// SetBasicSearchString gets a reference to the given NullableString and assigns it to the BasicSearchString field.
func (o *ApplicationSearchRequestModel) SetBasicSearchString(v string) {
	o.BasicSearchString.Set(&v)
}

// SetBasicSearchStringNil sets the value for BasicSearchString to be an explicit nil
func (o *ApplicationSearchRequestModel) SetBasicSearchStringNil() {
	o.BasicSearchString.Set(nil)
}

// UnsetBasicSearchString ensures that no value is present for BasicSearchString, not even an explicit nil
func (o *ApplicationSearchRequestModel) UnsetBasicSearchString() {
	o.BasicSearchString.Unset()
}

// GetSearchFilters returns the SearchFilters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetSearchFilters() []AppSearchFilterRequestModel {
	if o == nil {
		var ret []AppSearchFilterRequestModel
		return ret
	}
	return o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetSearchFiltersOk() ([]AppSearchFilterRequestModel, bool) {
	if o == nil || IsNil(o.SearchFilters) {
		return nil, false
	}
	return o.SearchFilters, true
}

// HasSearchFilters returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasSearchFilters() bool {
	if o != nil && !IsNil(o.SearchFilters) {
		return true
	}

	return false
}

// SetSearchFilters gets a reference to the given []AppSearchFilterRequestModel and assigns it to the SearchFilters field.
func (o *ApplicationSearchRequestModel) SetSearchFilters(v []AppSearchFilterRequestModel) {
	o.SearchFilters = v
}

// GetSortCriteria returns the SortCriteria field value if set, zero value otherwise.
func (o *ApplicationSearchRequestModel) GetSortCriteria() AppSortCriteriaRequestModel {
	if o == nil || IsNil(o.SortCriteria) {
		var ret AppSortCriteriaRequestModel
		return ret
	}
	return *o.SortCriteria
}

// GetSortCriteriaOk returns a tuple with the SortCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSearchRequestModel) GetSortCriteriaOk() (*AppSortCriteriaRequestModel, bool) {
	if o == nil || IsNil(o.SortCriteria) {
		return nil, false
	}
	return o.SortCriteria, true
}

// HasSortCriteria returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasSortCriteria() bool {
	if o != nil && !IsNil(o.SortCriteria) {
		return true
	}

	return false
}

// SetSortCriteria gets a reference to the given AppSortCriteriaRequestModel and assigns it to the SortCriteria field.
func (o *ApplicationSearchRequestModel) SetSortCriteria(v AppSortCriteriaRequestModel) {
	o.SortCriteria = &v
}

// GetSearchFilterGroups returns the SearchFilterGroups field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplicationSearchRequestModel) GetSearchFilterGroups() []AppSearchFilterGroupRequestModel {
	if o == nil {
		var ret []AppSearchFilterGroupRequestModel
		return ret
	}
	return o.SearchFilterGroups
}

// GetSearchFilterGroupsOk returns a tuple with the SearchFilterGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplicationSearchRequestModel) GetSearchFilterGroupsOk() ([]AppSearchFilterGroupRequestModel, bool) {
	if o == nil || IsNil(o.SearchFilterGroups) {
		return nil, false
	}
	return o.SearchFilterGroups, true
}

// HasSearchFilterGroups returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasSearchFilterGroups() bool {
	if o != nil && !IsNil(o.SearchFilterGroups) {
		return true
	}

	return false
}

// SetSearchFilterGroups gets a reference to the given []AppSearchFilterGroupRequestModel and assigns it to the SearchFilterGroups field.
func (o *ApplicationSearchRequestModel) SetSearchFilterGroups(v []AppSearchFilterGroupRequestModel) {
	o.SearchFilterGroups = v
}

// GetSearchFilterGroupsType returns the SearchFilterGroupsType field value if set, zero value otherwise.
func (o *ApplicationSearchRequestModel) GetSearchFilterGroupsType() AppSearchFilterGroupsType {
	if o == nil || IsNil(o.SearchFilterGroupsType) {
		var ret AppSearchFilterGroupsType
		return ret
	}
	return *o.SearchFilterGroupsType
}

// GetSearchFilterGroupsTypeOk returns a tuple with the SearchFilterGroupsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSearchRequestModel) GetSearchFilterGroupsTypeOk() (*AppSearchFilterGroupsType, bool) {
	if o == nil || IsNil(o.SearchFilterGroupsType) {
		return nil, false
	}
	return o.SearchFilterGroupsType, true
}

// HasSearchFilterGroupsType returns a boolean if a field has been set.
func (o *ApplicationSearchRequestModel) HasSearchFilterGroupsType() bool {
	if o != nil && !IsNil(o.SearchFilterGroupsType) {
		return true
	}

	return false
}

// SetSearchFilterGroupsType gets a reference to the given AppSearchFilterGroupsType and assigns it to the SearchFilterGroupsType field.
func (o *ApplicationSearchRequestModel) SetSearchFilterGroupsType(v AppSearchFilterGroupsType) {
	o.SearchFilterGroupsType = &v
}

func (o ApplicationSearchRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSearchRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationFolder.IsSet() {
		toSerialize["ApplicationFolder"] = o.ApplicationFolder.Get()
	}
	if o.IncludeSubFolders.IsSet() {
		toSerialize["IncludeSubFolders"] = o.IncludeSubFolders.Get()
	}
	if o.ApplicationGroup.IsSet() {
		toSerialize["ApplicationGroup"] = o.ApplicationGroup.Get()
	}
	if o.BasicSearchString.IsSet() {
		toSerialize["BasicSearchString"] = o.BasicSearchString.Get()
	}
	if o.SearchFilters != nil {
		toSerialize["SearchFilters"] = o.SearchFilters
	}
	if !IsNil(o.SortCriteria) {
		toSerialize["SortCriteria"] = o.SortCriteria
	}
	if o.SearchFilterGroups != nil {
		toSerialize["SearchFilterGroups"] = o.SearchFilterGroups
	}
	if !IsNil(o.SearchFilterGroupsType) {
		toSerialize["SearchFilterGroupsType"] = o.SearchFilterGroupsType
	}
	return toSerialize, nil
}

type NullableApplicationSearchRequestModel struct {
	value *ApplicationSearchRequestModel
	isSet bool
}

func (v NullableApplicationSearchRequestModel) Get() *ApplicationSearchRequestModel {
	return v.value
}

func (v *NullableApplicationSearchRequestModel) Set(val *ApplicationSearchRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSearchRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSearchRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSearchRequestModel(val *ApplicationSearchRequestModel) *NullableApplicationSearchRequestModel {
	return &NullableApplicationSearchRequestModel{value: val, isSet: true}
}

func (v NullableApplicationSearchRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSearchRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
