/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PrinterPropertiesContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrinterPropertiesContract{}

// PrinterPropertiesContract Printer properties. This class must have identical members as the PrinterInfo class in GpfxSettings.dll. The member names must be the same although the class name can be different.
type PrinterPropertiesContract struct {
	// The FQDN of the printer name.
	Path *string `json:"Path,omitempty"`
	// Printer model name.
	Model *string `json:"Model,omitempty"`
	// The location.
	Location *string `json:"Location,omitempty"`
	Settings *PrinterPropertiesContractSettings `json:"Settings,omitempty"`
	// The serialized data. This is here so that JSON serialization can work. This should not be used.
	Serialized *string `json:"Serialized,omitempty"`
}

// NewPrinterPropertiesContract instantiates a new PrinterPropertiesContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrinterPropertiesContract() *PrinterPropertiesContract {
	this := PrinterPropertiesContract{}
	return &this
}

// NewPrinterPropertiesContractWithDefaults instantiates a new PrinterPropertiesContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrinterPropertiesContractWithDefaults() *PrinterPropertiesContract {
	this := PrinterPropertiesContract{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *PrinterPropertiesContract) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterPropertiesContract) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *PrinterPropertiesContract) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *PrinterPropertiesContract) SetPath(v string) {
	o.Path = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *PrinterPropertiesContract) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterPropertiesContract) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *PrinterPropertiesContract) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *PrinterPropertiesContract) SetModel(v string) {
	o.Model = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PrinterPropertiesContract) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterPropertiesContract) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PrinterPropertiesContract) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *PrinterPropertiesContract) SetLocation(v string) {
	o.Location = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *PrinterPropertiesContract) GetSettings() PrinterPropertiesContractSettings {
	if o == nil || IsNil(o.Settings) {
		var ret PrinterPropertiesContractSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterPropertiesContract) GetSettingsOk() (*PrinterPropertiesContractSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *PrinterPropertiesContract) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given PrinterPropertiesContractSettings and assigns it to the Settings field.
func (o *PrinterPropertiesContract) SetSettings(v PrinterPropertiesContractSettings) {
	o.Settings = &v
}

// GetSerialized returns the Serialized field value if set, zero value otherwise.
func (o *PrinterPropertiesContract) GetSerialized() string {
	if o == nil || IsNil(o.Serialized) {
		var ret string
		return ret
	}
	return *o.Serialized
}

// GetSerializedOk returns a tuple with the Serialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrinterPropertiesContract) GetSerializedOk() (*string, bool) {
	if o == nil || IsNil(o.Serialized) {
		return nil, false
	}
	return o.Serialized, true
}

// HasSerialized returns a boolean if a field has been set.
func (o *PrinterPropertiesContract) HasSerialized() bool {
	if o != nil && !IsNil(o.Serialized) {
		return true
	}

	return false
}

// SetSerialized gets a reference to the given string and assigns it to the Serialized field.
func (o *PrinterPropertiesContract) SetSerialized(v string) {
	o.Serialized = &v
}

func (o PrinterPropertiesContract) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrinterPropertiesContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["Path"] = o.Path
	}
	if !IsNil(o.Model) {
		toSerialize["Model"] = o.Model
	}
	if !IsNil(o.Location) {
		toSerialize["Location"] = o.Location
	}
	if !IsNil(o.Settings) {
		toSerialize["Settings"] = o.Settings
	}
	if !IsNil(o.Serialized) {
		toSerialize["Serialized"] = o.Serialized
	}
	return toSerialize, nil
}

type NullablePrinterPropertiesContract struct {
	value *PrinterPropertiesContract
	isSet bool
}

func (v NullablePrinterPropertiesContract) Get() *PrinterPropertiesContract {
	return v.value
}

func (v *NullablePrinterPropertiesContract) Set(val *PrinterPropertiesContract) {
	v.value = val
	v.isSet = true
}

func (v NullablePrinterPropertiesContract) IsSet() bool {
	return v.isSet
}

func (v *NullablePrinterPropertiesContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrinterPropertiesContract(val *PrinterPropertiesContract) *NullablePrinterPropertiesContract {
	return &NullablePrinterPropertiesContract{value: val, isSet: true}
}

func (v NullablePrinterPropertiesContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrinterPropertiesContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


