/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the TestReportResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestReportResultModel{}

// TestReportResultModel The result of running a test.  The result is composed of a test id, scope and collection of 1 or more component results
type TestReportResultModel struct {
	// The localized display name of the test.
	TestName *string `json:"TestName,omitempty"`
	// The description of the localized end user description of the test.
	TestDescription *string `json:"TestDescription,omitempty"`
	// Gets or sets the test start time. If the test has not yet been run, this may be null.
	TestStartTime *string `json:"TestStartTime,omitempty"`
	// Gets or sets the formatted test start time. If the test has not yet been run, this may be null. RFC 3339 compatible format.
	FormattedTestStartTime *string `json:"FormattedTestStartTime,omitempty"`
	// Gets or sets the test end time. If the test has not yet been run, this may be null.
	TestEndTime *string `json:"TestEndTime,omitempty"`
	// Gets or sets the formatted test end time. If the test has not yet been run, this may be null. RFC 3339 compatible format.
	FormattedTestEndTime *string `json:"FormattedTestEndTime,omitempty"`
	// Gets or sets the test service target, generally the name of the service the test is being run against.
	TestServiceTarget *string `json:"TestServiceTarget,omitempty"`
	// Gets or sets the overall status of this test run.  If the test was run against more than one controller, it is the result of or'ing together of the statuses of each component result.
	TestComponentStatus *string `json:"TestComponentStatus,omitempty"`
	TestScope *TestScope `json:"TestScope,omitempty"`
	// Gets or sets the list of component results. Each machine that the test is run against will be represented by a component result and their statuses aggregated into TestComponentStatus
	TestComponents []TestComponentResultModel `json:"TestComponents,omitempty"`
}

// NewTestReportResultModel instantiates a new TestReportResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestReportResultModel() *TestReportResultModel {
	this := TestReportResultModel{}
	return &this
}

// NewTestReportResultModelWithDefaults instantiates a new TestReportResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestReportResultModelWithDefaults() *TestReportResultModel {
	this := TestReportResultModel{}
	return &this
}

// GetTestName returns the TestName field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestName() string {
	if o == nil || IsNil(o.TestName) {
		var ret string
		return ret
	}
	return *o.TestName
}

// GetTestNameOk returns a tuple with the TestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestNameOk() (*string, bool) {
	if o == nil || IsNil(o.TestName) {
		return nil, false
	}
	return o.TestName, true
}

// HasTestName returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestName() bool {
	if o != nil && !IsNil(o.TestName) {
		return true
	}

	return false
}

// SetTestName gets a reference to the given string and assigns it to the TestName field.
func (o *TestReportResultModel) SetTestName(v string) {
	o.TestName = &v
}

// GetTestDescription returns the TestDescription field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestDescription() string {
	if o == nil || IsNil(o.TestDescription) {
		var ret string
		return ret
	}
	return *o.TestDescription
}

// GetTestDescriptionOk returns a tuple with the TestDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TestDescription) {
		return nil, false
	}
	return o.TestDescription, true
}

// HasTestDescription returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestDescription() bool {
	if o != nil && !IsNil(o.TestDescription) {
		return true
	}

	return false
}

// SetTestDescription gets a reference to the given string and assigns it to the TestDescription field.
func (o *TestReportResultModel) SetTestDescription(v string) {
	o.TestDescription = &v
}

// GetTestStartTime returns the TestStartTime field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestStartTime() string {
	if o == nil || IsNil(o.TestStartTime) {
		var ret string
		return ret
	}
	return *o.TestStartTime
}

// GetTestStartTimeOk returns a tuple with the TestStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TestStartTime) {
		return nil, false
	}
	return o.TestStartTime, true
}

// HasTestStartTime returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestStartTime() bool {
	if o != nil && !IsNil(o.TestStartTime) {
		return true
	}

	return false
}

// SetTestStartTime gets a reference to the given string and assigns it to the TestStartTime field.
func (o *TestReportResultModel) SetTestStartTime(v string) {
	o.TestStartTime = &v
}

// GetFormattedTestStartTime returns the FormattedTestStartTime field value if set, zero value otherwise.
func (o *TestReportResultModel) GetFormattedTestStartTime() string {
	if o == nil || IsNil(o.FormattedTestStartTime) {
		var ret string
		return ret
	}
	return *o.FormattedTestStartTime
}

// GetFormattedTestStartTimeOk returns a tuple with the FormattedTestStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetFormattedTestStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FormattedTestStartTime) {
		return nil, false
	}
	return o.FormattedTestStartTime, true
}

// HasFormattedTestStartTime returns a boolean if a field has been set.
func (o *TestReportResultModel) HasFormattedTestStartTime() bool {
	if o != nil && !IsNil(o.FormattedTestStartTime) {
		return true
	}

	return false
}

// SetFormattedTestStartTime gets a reference to the given string and assigns it to the FormattedTestStartTime field.
func (o *TestReportResultModel) SetFormattedTestStartTime(v string) {
	o.FormattedTestStartTime = &v
}

// GetTestEndTime returns the TestEndTime field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestEndTime() string {
	if o == nil || IsNil(o.TestEndTime) {
		var ret string
		return ret
	}
	return *o.TestEndTime
}

// GetTestEndTimeOk returns a tuple with the TestEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TestEndTime) {
		return nil, false
	}
	return o.TestEndTime, true
}

// HasTestEndTime returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestEndTime() bool {
	if o != nil && !IsNil(o.TestEndTime) {
		return true
	}

	return false
}

// SetTestEndTime gets a reference to the given string and assigns it to the TestEndTime field.
func (o *TestReportResultModel) SetTestEndTime(v string) {
	o.TestEndTime = &v
}

// GetFormattedTestEndTime returns the FormattedTestEndTime field value if set, zero value otherwise.
func (o *TestReportResultModel) GetFormattedTestEndTime() string {
	if o == nil || IsNil(o.FormattedTestEndTime) {
		var ret string
		return ret
	}
	return *o.FormattedTestEndTime
}

// GetFormattedTestEndTimeOk returns a tuple with the FormattedTestEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetFormattedTestEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FormattedTestEndTime) {
		return nil, false
	}
	return o.FormattedTestEndTime, true
}

// HasFormattedTestEndTime returns a boolean if a field has been set.
func (o *TestReportResultModel) HasFormattedTestEndTime() bool {
	if o != nil && !IsNil(o.FormattedTestEndTime) {
		return true
	}

	return false
}

// SetFormattedTestEndTime gets a reference to the given string and assigns it to the FormattedTestEndTime field.
func (o *TestReportResultModel) SetFormattedTestEndTime(v string) {
	o.FormattedTestEndTime = &v
}

// GetTestServiceTarget returns the TestServiceTarget field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestServiceTarget() string {
	if o == nil || IsNil(o.TestServiceTarget) {
		var ret string
		return ret
	}
	return *o.TestServiceTarget
}

// GetTestServiceTargetOk returns a tuple with the TestServiceTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestServiceTargetOk() (*string, bool) {
	if o == nil || IsNil(o.TestServiceTarget) {
		return nil, false
	}
	return o.TestServiceTarget, true
}

// HasTestServiceTarget returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestServiceTarget() bool {
	if o != nil && !IsNil(o.TestServiceTarget) {
		return true
	}

	return false
}

// SetTestServiceTarget gets a reference to the given string and assigns it to the TestServiceTarget field.
func (o *TestReportResultModel) SetTestServiceTarget(v string) {
	o.TestServiceTarget = &v
}

// GetTestComponentStatus returns the TestComponentStatus field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestComponentStatus() string {
	if o == nil || IsNil(o.TestComponentStatus) {
		var ret string
		return ret
	}
	return *o.TestComponentStatus
}

// GetTestComponentStatusOk returns a tuple with the TestComponentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestComponentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.TestComponentStatus) {
		return nil, false
	}
	return o.TestComponentStatus, true
}

// HasTestComponentStatus returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestComponentStatus() bool {
	if o != nil && !IsNil(o.TestComponentStatus) {
		return true
	}

	return false
}

// SetTestComponentStatus gets a reference to the given string and assigns it to the TestComponentStatus field.
func (o *TestReportResultModel) SetTestComponentStatus(v string) {
	o.TestComponentStatus = &v
}

// GetTestScope returns the TestScope field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestScope() TestScope {
	if o == nil || IsNil(o.TestScope) {
		var ret TestScope
		return ret
	}
	return *o.TestScope
}

// GetTestScopeOk returns a tuple with the TestScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestScopeOk() (*TestScope, bool) {
	if o == nil || IsNil(o.TestScope) {
		return nil, false
	}
	return o.TestScope, true
}

// HasTestScope returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestScope() bool {
	if o != nil && !IsNil(o.TestScope) {
		return true
	}

	return false
}

// SetTestScope gets a reference to the given TestScope and assigns it to the TestScope field.
func (o *TestReportResultModel) SetTestScope(v TestScope) {
	o.TestScope = &v
}

// GetTestComponents returns the TestComponents field value if set, zero value otherwise.
func (o *TestReportResultModel) GetTestComponents() []TestComponentResultModel {
	if o == nil || IsNil(o.TestComponents) {
		var ret []TestComponentResultModel
		return ret
	}
	return o.TestComponents
}

// GetTestComponentsOk returns a tuple with the TestComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestReportResultModel) GetTestComponentsOk() ([]TestComponentResultModel, bool) {
	if o == nil || IsNil(o.TestComponents) {
		return nil, false
	}
	return o.TestComponents, true
}

// HasTestComponents returns a boolean if a field has been set.
func (o *TestReportResultModel) HasTestComponents() bool {
	if o != nil && !IsNil(o.TestComponents) {
		return true
	}

	return false
}

// SetTestComponents gets a reference to the given []TestComponentResultModel and assigns it to the TestComponents field.
func (o *TestReportResultModel) SetTestComponents(v []TestComponentResultModel) {
	o.TestComponents = v
}

func (o TestReportResultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestReportResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TestName) {
		toSerialize["TestName"] = o.TestName
	}
	if !IsNil(o.TestDescription) {
		toSerialize["TestDescription"] = o.TestDescription
	}
	if !IsNil(o.TestStartTime) {
		toSerialize["TestStartTime"] = o.TestStartTime
	}
	if !IsNil(o.FormattedTestStartTime) {
		toSerialize["FormattedTestStartTime"] = o.FormattedTestStartTime
	}
	if !IsNil(o.TestEndTime) {
		toSerialize["TestEndTime"] = o.TestEndTime
	}
	if !IsNil(o.FormattedTestEndTime) {
		toSerialize["FormattedTestEndTime"] = o.FormattedTestEndTime
	}
	if !IsNil(o.TestServiceTarget) {
		toSerialize["TestServiceTarget"] = o.TestServiceTarget
	}
	if !IsNil(o.TestComponentStatus) {
		toSerialize["TestComponentStatus"] = o.TestComponentStatus
	}
	if !IsNil(o.TestScope) {
		toSerialize["TestScope"] = o.TestScope
	}
	if !IsNil(o.TestComponents) {
		toSerialize["TestComponents"] = o.TestComponents
	}
	return toSerialize, nil
}

type NullableTestReportResultModel struct {
	value *TestReportResultModel
	isSet bool
}

func (v NullableTestReportResultModel) Get() *TestReportResultModel {
	return v.value
}

func (v *NullableTestReportResultModel) Set(val *TestReportResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestReportResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestReportResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestReportResultModel(val *TestReportResultModel) *NullableTestReportResultModel {
	return &NullableTestReportResultModel{value: val, isSet: true}
}

func (v NullableTestReportResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestReportResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


