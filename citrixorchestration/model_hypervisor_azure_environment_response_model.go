/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorAzureEnvironmentResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorAzureEnvironmentResponseModel{}

// HypervisorAzureEnvironmentResponseModel Azure rm environment instance, which used for front end Azure environment show.
type HypervisorAzureEnvironmentResponseModel struct {
	// Environment display name which used to show on the front end. e.g. Azure Global, Azure China and Azure US Government.
	EnvironmentDisplayName NullableString    `json:"EnvironmentDisplayName,omitempty"`
	EnvironmentName        *AzureEnvironment `json:"EnvironmentName,omitempty"`
}

// NewHypervisorAzureEnvironmentResponseModel instantiates a new HypervisorAzureEnvironmentResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorAzureEnvironmentResponseModel() *HypervisorAzureEnvironmentResponseModel {
	this := HypervisorAzureEnvironmentResponseModel{}
	return &this
}

// NewHypervisorAzureEnvironmentResponseModelWithDefaults instantiates a new HypervisorAzureEnvironmentResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorAzureEnvironmentResponseModelWithDefaults() *HypervisorAzureEnvironmentResponseModel {
	this := HypervisorAzureEnvironmentResponseModel{}
	return &this
}

// GetEnvironmentDisplayName returns the EnvironmentDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HypervisorAzureEnvironmentResponseModel) GetEnvironmentDisplayName() string {
	if o == nil || IsNil(o.EnvironmentDisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentDisplayName.Get()
}

// GetEnvironmentDisplayNameOk returns a tuple with the EnvironmentDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HypervisorAzureEnvironmentResponseModel) GetEnvironmentDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentDisplayName.Get(), o.EnvironmentDisplayName.IsSet()
}

// HasEnvironmentDisplayName returns a boolean if a field has been set.
func (o *HypervisorAzureEnvironmentResponseModel) HasEnvironmentDisplayName() bool {
	if o != nil && o.EnvironmentDisplayName.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentDisplayName gets a reference to the given NullableString and assigns it to the EnvironmentDisplayName field.
func (o *HypervisorAzureEnvironmentResponseModel) SetEnvironmentDisplayName(v string) {
	o.EnvironmentDisplayName.Set(&v)
}

// SetEnvironmentDisplayNameNil sets the value for EnvironmentDisplayName to be an explicit nil
func (o *HypervisorAzureEnvironmentResponseModel) SetEnvironmentDisplayNameNil() {
	o.EnvironmentDisplayName.Set(nil)
}

// UnsetEnvironmentDisplayName ensures that no value is present for EnvironmentDisplayName, not even an explicit nil
func (o *HypervisorAzureEnvironmentResponseModel) UnsetEnvironmentDisplayName() {
	o.EnvironmentDisplayName.Unset()
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise.
func (o *HypervisorAzureEnvironmentResponseModel) GetEnvironmentName() AzureEnvironment {
	if o == nil || IsNil(o.EnvironmentName) {
		var ret AzureEnvironment
		return ret
	}
	return *o.EnvironmentName
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorAzureEnvironmentResponseModel) GetEnvironmentNameOk() (*AzureEnvironment, bool) {
	if o == nil || IsNil(o.EnvironmentName) {
		return nil, false
	}
	return o.EnvironmentName, true
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *HypervisorAzureEnvironmentResponseModel) HasEnvironmentName() bool {
	if o != nil && !IsNil(o.EnvironmentName) {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given AzureEnvironment and assigns it to the EnvironmentName field.
func (o *HypervisorAzureEnvironmentResponseModel) SetEnvironmentName(v AzureEnvironment) {
	o.EnvironmentName = &v
}

func (o HypervisorAzureEnvironmentResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorAzureEnvironmentResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EnvironmentDisplayName.IsSet() {
		toSerialize["EnvironmentDisplayName"] = o.EnvironmentDisplayName.Get()
	}
	if !IsNil(o.EnvironmentName) {
		toSerialize["EnvironmentName"] = o.EnvironmentName
	}
	return toSerialize, nil
}

type NullableHypervisorAzureEnvironmentResponseModel struct {
	value *HypervisorAzureEnvironmentResponseModel
	isSet bool
}

func (v NullableHypervisorAzureEnvironmentResponseModel) Get() *HypervisorAzureEnvironmentResponseModel {
	return v.value
}

func (v *NullableHypervisorAzureEnvironmentResponseModel) Set(val *HypervisorAzureEnvironmentResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorAzureEnvironmentResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorAzureEnvironmentResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorAzureEnvironmentResponseModel(val *HypervisorAzureEnvironmentResponseModel) *NullableHypervisorAzureEnvironmentResponseModel {
	return &NullableHypervisorAzureEnvironmentResponseModel{value: val, isSet: true}
}

func (v NullableHypervisorAzureEnvironmentResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorAzureEnvironmentResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
