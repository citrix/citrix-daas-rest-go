/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// BackupRestoreBlobStorage Blob Storage types
type BackupRestoreBlobStorage string

// List of BackupRestoreBlobStorage
const (
	BACKUPRESTOREBLOBSTORAGE_UNDEFINED                     BackupRestoreBlobStorage = "Undefined"
	BACKUPRESTOREBLOBSTORAGE_FILE_STORAGE                  BackupRestoreBlobStorage = "FileStorage"
	BACKUPRESTOREBLOBSTORAGE_AZURE_STORAGE                 BackupRestoreBlobStorage = "AzureStorage"
	BACKUPRESTOREBLOBSTORAGE_CUSTOMER_AZURE_STORAGE        BackupRestoreBlobStorage = "CustomerAzureStorage"
	BACKUPRESTOREBLOBSTORAGE_AWS_STORAGE                   BackupRestoreBlobStorage = "AwsStorage"
	BACKUPRESTOREBLOBSTORAGE_CUSTOMER_AWS_STORAGE          BackupRestoreBlobStorage = "CustomerAwsStorage"
	BACKUPRESTOREBLOBSTORAGE_GOOGLE_CLOUD_STORAGE          BackupRestoreBlobStorage = "GoogleCloudStorage"
	BACKUPRESTOREBLOBSTORAGE_CUSTOMER_GOOGLE_CLOUD_STORAGE BackupRestoreBlobStorage = "CustomerGoogleCloudStorage"
	BACKUPRESTOREBLOBSTORAGE_CUSTOM_STORAGE                BackupRestoreBlobStorage = "CustomStorage"
)

// All allowed values of BackupRestoreBlobStorage enum
var AllowedBackupRestoreBlobStorageEnumValues = []BackupRestoreBlobStorage{
	"Undefined",
	"FileStorage",
	"AzureStorage",
	"CustomerAzureStorage",
	"AwsStorage",
	"CustomerAwsStorage",
	"GoogleCloudStorage",
	"CustomerGoogleCloudStorage",
	"CustomStorage",
}

func (v *BackupRestoreBlobStorage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = BackupRestoreBlobStorage(value)
	return nil
}

// NewBackupRestoreBlobStorageFromValue returns a pointer to a valid BackupRestoreBlobStorage
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBackupRestoreBlobStorageFromValue(v string) (*BackupRestoreBlobStorage, error) {
	ev := BackupRestoreBlobStorage(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BackupRestoreBlobStorage: valid values are %v", v, AllowedBackupRestoreBlobStorageEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BackupRestoreBlobStorage) IsValid() bool {
	for _, existing := range AllowedBackupRestoreBlobStorageEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BackupRestoreBlobStorage value
func (v BackupRestoreBlobStorage) Ptr() *BackupRestoreBlobStorage {
	return &v
}

type NullableBackupRestoreBlobStorage struct {
	value *BackupRestoreBlobStorage
	isSet bool
}

func (v NullableBackupRestoreBlobStorage) Get() *BackupRestoreBlobStorage {
	return v.value
}

func (v *NullableBackupRestoreBlobStorage) Set(val *BackupRestoreBlobStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreBlobStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreBlobStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreBlobStorage(val *BackupRestoreBlobStorage) *NullableBackupRestoreBlobStorage {
	return &NullableBackupRestoreBlobStorage{value: val, isSet: true}
}

func (v NullableBackupRestoreBlobStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreBlobStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
