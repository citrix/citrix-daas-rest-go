/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the PolicyTemplateResponseContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyTemplateResponseContract{}

// PolicyTemplateResponseContract ALL: Policy and Template
type PolicyTemplateResponseContract struct {
	// Policies
	Policies []PolicyResponseContract `json:"Policies,omitempty"`
	// Templates
	Templates []TemplateResponseContract `json:"Templates,omitempty"`
}

// NewPolicyTemplateResponseContract instantiates a new PolicyTemplateResponseContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyTemplateResponseContract() *PolicyTemplateResponseContract {
	this := PolicyTemplateResponseContract{}
	return &this
}

// NewPolicyTemplateResponseContractWithDefaults instantiates a new PolicyTemplateResponseContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyTemplateResponseContractWithDefaults() *PolicyTemplateResponseContract {
	this := PolicyTemplateResponseContract{}
	return &this
}

// GetPolicies returns the Policies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyTemplateResponseContract) GetPolicies() []PolicyResponseContract {
	if o == nil {
		var ret []PolicyResponseContract
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyTemplateResponseContract) GetPoliciesOk() ([]PolicyResponseContract, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *PolicyTemplateResponseContract) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []PolicyResponseContract and assigns it to the Policies field.
func (o *PolicyTemplateResponseContract) SetPolicies(v []PolicyResponseContract) {
	o.Policies = v
}

// GetTemplates returns the Templates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyTemplateResponseContract) GetTemplates() []TemplateResponseContract {
	if o == nil {
		var ret []TemplateResponseContract
		return ret
	}
	return o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyTemplateResponseContract) GetTemplatesOk() ([]TemplateResponseContract, bool) {
	if o == nil || IsNil(o.Templates) {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *PolicyTemplateResponseContract) HasTemplates() bool {
	if o != nil && !IsNil(o.Templates) {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []TemplateResponseContract and assigns it to the Templates field.
func (o *PolicyTemplateResponseContract) SetTemplates(v []TemplateResponseContract) {
	o.Templates = v
}

func (o PolicyTemplateResponseContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyTemplateResponseContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Policies != nil {
		toSerialize["Policies"] = o.Policies
	}
	if o.Templates != nil {
		toSerialize["Templates"] = o.Templates
	}
	return toSerialize, nil
}

type NullablePolicyTemplateResponseContract struct {
	value *PolicyTemplateResponseContract
	isSet bool
}

func (v NullablePolicyTemplateResponseContract) Get() *PolicyTemplateResponseContract {
	return v.value
}

func (v *NullablePolicyTemplateResponseContract) Set(val *PolicyTemplateResponseContract) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyTemplateResponseContract) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyTemplateResponseContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyTemplateResponseContract(val *PolicyTemplateResponseContract) *NullablePolicyTemplateResponseContract {
	return &NullablePolicyTemplateResponseContract{value: val, isSet: true}
}

func (v NullablePolicyTemplateResponseContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyTemplateResponseContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
