/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the HypervisorResponseModelAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HypervisorResponseModelAllOf{}

// HypervisorResponseModelAllOf Response object for a hypervisor.
type HypervisorResponseModelAllOf struct {
	ConnectionType HypervisorConnectionType `json:"ConnectionType"`
	// Addresses that can be used to contact the required hypervisor. All the addresses are considered equivalent, that is, all of the addresses provide access to the same virtual machines, snapshots, network, and storage.
	Addresses []string `json:"Addresses"`
	// Indicates whether the hypervisor is in maintenance mode, which disables all communication between XenApp & XenDesktop and the Hypervisor.
	InMaintenanceMode bool `json:"InMaintenanceMode"`
	// Indicates whether is UnEntitled.
	Unentitled *bool `json:"Unentitled,omitempty"`
	// The class name for the Citrix Managed Machine library that is used to access the hypervisor.
	PluginId string `json:"PluginId"`
	// The list of administrative scopes that the connection is a part of. The scopes control which administrators are able to work with the connection.
	Scopes []ScopeResponseModel `json:"Scopes"`
	// The tenant(s) that the hypervisor is assigned to.  If `null`, the hypervisor is not assigned to tenants, and may be used by any tenant, including future added tenants.
	Tenants []RefResponseModel `json:"Tenants,omitempty"`
	// Indicates whether the hypervisor uses cloud infrastructure.
	UsesCloudInfrastructure bool `json:"UsesCloudInfrastructure"`
	Zone HypervisorResponseModelAllOfZone `json:"Zone"`
	Fault *HypervisorResponseModelAllOfFault `json:"Fault,omitempty"`
	// CustomProperties of hypervisor connection
	CustomProperties *string `json:"CustomProperties,omitempty"`
	// The broker id.
	Uid *int32 `json:"Uid,omitempty"`
	// If this connection is virtual.
	IsVirtual *bool `json:"IsVirtual,omitempty"`
}

// NewHypervisorResponseModelAllOf instantiates a new HypervisorResponseModelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHypervisorResponseModelAllOf(connectionType HypervisorConnectionType, addresses []string, inMaintenanceMode bool, pluginId string, scopes []ScopeResponseModel, usesCloudInfrastructure bool, zone HypervisorResponseModelAllOfZone) *HypervisorResponseModelAllOf {
	this := HypervisorResponseModelAllOf{}
	this.ConnectionType = connectionType
	this.Addresses = addresses
	this.InMaintenanceMode = inMaintenanceMode
	this.PluginId = pluginId
	this.Scopes = scopes
	this.UsesCloudInfrastructure = usesCloudInfrastructure
	this.Zone = zone
	return &this
}

// NewHypervisorResponseModelAllOfWithDefaults instantiates a new HypervisorResponseModelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHypervisorResponseModelAllOfWithDefaults() *HypervisorResponseModelAllOf {
	this := HypervisorResponseModelAllOf{}
	return &this
}

// GetConnectionType returns the ConnectionType field value
func (o *HypervisorResponseModelAllOf) GetConnectionType() HypervisorConnectionType {
	if o == nil {
		var ret HypervisorConnectionType
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetConnectionTypeOk() (*HypervisorConnectionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *HypervisorResponseModelAllOf) SetConnectionType(v HypervisorConnectionType) {
	o.ConnectionType = v
}

// GetAddresses returns the Addresses field value
func (o *HypervisorResponseModelAllOf) GetAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetAddressesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *HypervisorResponseModelAllOf) SetAddresses(v []string) {
	o.Addresses = v
}

// GetInMaintenanceMode returns the InMaintenanceMode field value
func (o *HypervisorResponseModelAllOf) GetInMaintenanceMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InMaintenanceMode
}

// GetInMaintenanceModeOk returns a tuple with the InMaintenanceMode field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetInMaintenanceModeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InMaintenanceMode, true
}

// SetInMaintenanceMode sets field value
func (o *HypervisorResponseModelAllOf) SetInMaintenanceMode(v bool) {
	o.InMaintenanceMode = v
}

// GetUnentitled returns the Unentitled field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetUnentitled() bool {
	if o == nil || IsNil(o.Unentitled) {
		var ret bool
		return ret
	}
	return *o.Unentitled
}

// GetUnentitledOk returns a tuple with the Unentitled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetUnentitledOk() (*bool, bool) {
	if o == nil || IsNil(o.Unentitled) {
		return nil, false
	}
	return o.Unentitled, true
}

// HasUnentitled returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasUnentitled() bool {
	if o != nil && !IsNil(o.Unentitled) {
		return true
	}

	return false
}

// SetUnentitled gets a reference to the given bool and assigns it to the Unentitled field.
func (o *HypervisorResponseModelAllOf) SetUnentitled(v bool) {
	o.Unentitled = &v
}

// GetPluginId returns the PluginId field value
func (o *HypervisorResponseModelAllOf) GetPluginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PluginId
}

// GetPluginIdOk returns a tuple with the PluginId field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetPluginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluginId, true
}

// SetPluginId sets field value
func (o *HypervisorResponseModelAllOf) SetPluginId(v string) {
	o.PluginId = v
}

// GetScopes returns the Scopes field value
func (o *HypervisorResponseModelAllOf) GetScopes() []ScopeResponseModel {
	if o == nil {
		var ret []ScopeResponseModel
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetScopesOk() ([]ScopeResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *HypervisorResponseModelAllOf) SetScopes(v []ScopeResponseModel) {
	o.Scopes = v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetTenants() []RefResponseModel {
	if o == nil || IsNil(o.Tenants) {
		var ret []RefResponseModel
		return ret
	}
	return o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetTenantsOk() ([]RefResponseModel, bool) {
	if o == nil || IsNil(o.Tenants) {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasTenants() bool {
	if o != nil && !IsNil(o.Tenants) {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []RefResponseModel and assigns it to the Tenants field.
func (o *HypervisorResponseModelAllOf) SetTenants(v []RefResponseModel) {
	o.Tenants = v
}

// GetUsesCloudInfrastructure returns the UsesCloudInfrastructure field value
func (o *HypervisorResponseModelAllOf) GetUsesCloudInfrastructure() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UsesCloudInfrastructure
}

// GetUsesCloudInfrastructureOk returns a tuple with the UsesCloudInfrastructure field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetUsesCloudInfrastructureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsesCloudInfrastructure, true
}

// SetUsesCloudInfrastructure sets field value
func (o *HypervisorResponseModelAllOf) SetUsesCloudInfrastructure(v bool) {
	o.UsesCloudInfrastructure = v
}

// GetZone returns the Zone field value
func (o *HypervisorResponseModelAllOf) GetZone() HypervisorResponseModelAllOfZone {
	if o == nil {
		var ret HypervisorResponseModelAllOfZone
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetZoneOk() (*HypervisorResponseModelAllOfZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *HypervisorResponseModelAllOf) SetZone(v HypervisorResponseModelAllOfZone) {
	o.Zone = v
}

// GetFault returns the Fault field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetFault() HypervisorResponseModelAllOfFault {
	if o == nil || IsNil(o.Fault) {
		var ret HypervisorResponseModelAllOfFault
		return ret
	}
	return *o.Fault
}

// GetFaultOk returns a tuple with the Fault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetFaultOk() (*HypervisorResponseModelAllOfFault, bool) {
	if o == nil || IsNil(o.Fault) {
		return nil, false
	}
	return o.Fault, true
}

// HasFault returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasFault() bool {
	if o != nil && !IsNil(o.Fault) {
		return true
	}

	return false
}

// SetFault gets a reference to the given HypervisorResponseModelAllOfFault and assigns it to the Fault field.
func (o *HypervisorResponseModelAllOf) SetFault(v HypervisorResponseModelAllOfFault) {
	o.Fault = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetCustomProperties() string {
	if o == nil || IsNil(o.CustomProperties) {
		var ret string
		return ret
	}
	return *o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetCustomPropertiesOk() (*string, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given string and assigns it to the CustomProperties field.
func (o *HypervisorResponseModelAllOf) SetCustomProperties(v string) {
	o.CustomProperties = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *HypervisorResponseModelAllOf) SetUid(v int32) {
	o.Uid = &v
}

// GetIsVirtual returns the IsVirtual field value if set, zero value otherwise.
func (o *HypervisorResponseModelAllOf) GetIsVirtual() bool {
	if o == nil || IsNil(o.IsVirtual) {
		var ret bool
		return ret
	}
	return *o.IsVirtual
}

// GetIsVirtualOk returns a tuple with the IsVirtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HypervisorResponseModelAllOf) GetIsVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.IsVirtual) {
		return nil, false
	}
	return o.IsVirtual, true
}

// HasIsVirtual returns a boolean if a field has been set.
func (o *HypervisorResponseModelAllOf) HasIsVirtual() bool {
	if o != nil && !IsNil(o.IsVirtual) {
		return true
	}

	return false
}

// SetIsVirtual gets a reference to the given bool and assigns it to the IsVirtual field.
func (o *HypervisorResponseModelAllOf) SetIsVirtual(v bool) {
	o.IsVirtual = &v
}

func (o HypervisorResponseModelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HypervisorResponseModelAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ConnectionType"] = o.ConnectionType
	toSerialize["Addresses"] = o.Addresses
	toSerialize["InMaintenanceMode"] = o.InMaintenanceMode
	if !IsNil(o.Unentitled) {
		toSerialize["Unentitled"] = o.Unentitled
	}
	toSerialize["PluginId"] = o.PluginId
	toSerialize["Scopes"] = o.Scopes
	if !IsNil(o.Tenants) {
		toSerialize["Tenants"] = o.Tenants
	}
	toSerialize["UsesCloudInfrastructure"] = o.UsesCloudInfrastructure
	toSerialize["Zone"] = o.Zone
	if !IsNil(o.Fault) {
		toSerialize["Fault"] = o.Fault
	}
	if !IsNil(o.CustomProperties) {
		toSerialize["CustomProperties"] = o.CustomProperties
	}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	if !IsNil(o.IsVirtual) {
		toSerialize["IsVirtual"] = o.IsVirtual
	}
	return toSerialize, nil
}

type NullableHypervisorResponseModelAllOf struct {
	value *HypervisorResponseModelAllOf
	isSet bool
}

func (v NullableHypervisorResponseModelAllOf) Get() *HypervisorResponseModelAllOf {
	return v.value
}

func (v *NullableHypervisorResponseModelAllOf) Set(val *HypervisorResponseModelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableHypervisorResponseModelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableHypervisorResponseModelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHypervisorResponseModelAllOf(val *HypervisorResponseModelAllOf) *NullableHypervisorResponseModelAllOf {
	return &NullableHypervisorResponseModelAllOf{value: val, isSet: true}
}

func (v NullableHypervisorResponseModelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHypervisorResponseModelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


