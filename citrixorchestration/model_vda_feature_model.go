/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the VDAFeatureModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VDAFeatureModel{}

// VDAFeatureModel Model of VDA feature.
type VDAFeatureModel struct {
	// Id of this feature object.
	FeatureId NullableString `json:"FeatureId,omitempty"`
	// Name of this feature object.
	FeatureName NullableString `json:"FeatureName,omitempty"`
	// Description of this feature object.
	FeatureDescription NullableString `json:"FeatureDescription,omitempty"`
}

// NewVDAFeatureModel instantiates a new VDAFeatureModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVDAFeatureModel() *VDAFeatureModel {
	this := VDAFeatureModel{}
	return &this
}

// NewVDAFeatureModelWithDefaults instantiates a new VDAFeatureModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVDAFeatureModelWithDefaults() *VDAFeatureModel {
	this := VDAFeatureModel{}
	return &this
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VDAFeatureModel) GetFeatureId() string {
	if o == nil || IsNil(o.FeatureId.Get()) {
		var ret string
		return ret
	}
	return *o.FeatureId.Get()
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VDAFeatureModel) GetFeatureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureId.Get(), o.FeatureId.IsSet()
}

// HasFeatureId returns a boolean if a field has been set.
func (o *VDAFeatureModel) HasFeatureId() bool {
	if o != nil && o.FeatureId.IsSet() {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given NullableString and assigns it to the FeatureId field.
func (o *VDAFeatureModel) SetFeatureId(v string) {
	o.FeatureId.Set(&v)
}
// SetFeatureIdNil sets the value for FeatureId to be an explicit nil
func (o *VDAFeatureModel) SetFeatureIdNil() {
	o.FeatureId.Set(nil)
}

// UnsetFeatureId ensures that no value is present for FeatureId, not even an explicit nil
func (o *VDAFeatureModel) UnsetFeatureId() {
	o.FeatureId.Unset()
}

// GetFeatureName returns the FeatureName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VDAFeatureModel) GetFeatureName() string {
	if o == nil || IsNil(o.FeatureName.Get()) {
		var ret string
		return ret
	}
	return *o.FeatureName.Get()
}

// GetFeatureNameOk returns a tuple with the FeatureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VDAFeatureModel) GetFeatureNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureName.Get(), o.FeatureName.IsSet()
}

// HasFeatureName returns a boolean if a field has been set.
func (o *VDAFeatureModel) HasFeatureName() bool {
	if o != nil && o.FeatureName.IsSet() {
		return true
	}

	return false
}

// SetFeatureName gets a reference to the given NullableString and assigns it to the FeatureName field.
func (o *VDAFeatureModel) SetFeatureName(v string) {
	o.FeatureName.Set(&v)
}
// SetFeatureNameNil sets the value for FeatureName to be an explicit nil
func (o *VDAFeatureModel) SetFeatureNameNil() {
	o.FeatureName.Set(nil)
}

// UnsetFeatureName ensures that no value is present for FeatureName, not even an explicit nil
func (o *VDAFeatureModel) UnsetFeatureName() {
	o.FeatureName.Unset()
}

// GetFeatureDescription returns the FeatureDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VDAFeatureModel) GetFeatureDescription() string {
	if o == nil || IsNil(o.FeatureDescription.Get()) {
		var ret string
		return ret
	}
	return *o.FeatureDescription.Get()
}

// GetFeatureDescriptionOk returns a tuple with the FeatureDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VDAFeatureModel) GetFeatureDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureDescription.Get(), o.FeatureDescription.IsSet()
}

// HasFeatureDescription returns a boolean if a field has been set.
func (o *VDAFeatureModel) HasFeatureDescription() bool {
	if o != nil && o.FeatureDescription.IsSet() {
		return true
	}

	return false
}

// SetFeatureDescription gets a reference to the given NullableString and assigns it to the FeatureDescription field.
func (o *VDAFeatureModel) SetFeatureDescription(v string) {
	o.FeatureDescription.Set(&v)
}
// SetFeatureDescriptionNil sets the value for FeatureDescription to be an explicit nil
func (o *VDAFeatureModel) SetFeatureDescriptionNil() {
	o.FeatureDescription.Set(nil)
}

// UnsetFeatureDescription ensures that no value is present for FeatureDescription, not even an explicit nil
func (o *VDAFeatureModel) UnsetFeatureDescription() {
	o.FeatureDescription.Unset()
}

func (o VDAFeatureModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VDAFeatureModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FeatureId.IsSet() {
		toSerialize["FeatureId"] = o.FeatureId.Get()
	}
	if o.FeatureName.IsSet() {
		toSerialize["FeatureName"] = o.FeatureName.Get()
	}
	if o.FeatureDescription.IsSet() {
		toSerialize["FeatureDescription"] = o.FeatureDescription.Get()
	}
	return toSerialize, nil
}

type NullableVDAFeatureModel struct {
	value *VDAFeatureModel
	isSet bool
}

func (v NullableVDAFeatureModel) Get() *VDAFeatureModel {
	return v.value
}

func (v *NullableVDAFeatureModel) Set(val *VDAFeatureModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVDAFeatureModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVDAFeatureModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVDAFeatureModel(val *VDAFeatureModel) *NullableVDAFeatureModel {
	return &NullableVDAFeatureModel{value: val, isSet: true}
}

func (v NullableVDAFeatureModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVDAFeatureModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


