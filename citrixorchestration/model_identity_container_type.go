/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// IdentityContainerType The type of Container identity object to retrieve.
type IdentityContainerType string

// List of IdentityContainerType
const (
	IDENTITYCONTAINERTYPE_UNKNOWN IdentityContainerType = "Unknown"
	IDENTITYCONTAINERTYPE_ORGANIZATIONAL_UNIT IdentityContainerType = "OrganizationalUnit"
	IDENTITYCONTAINERTYPE_CONTAINER IdentityContainerType = "Container"
	IDENTITYCONTAINERTYPE_LOST_AND_FOUND IdentityContainerType = "LostAndFound"
	IDENTITYCONTAINERTYPE_BUILT_IN_DOMAIN IdentityContainerType = "BuiltInDomain"
)

// All allowed values of IdentityContainerType enum
var AllowedIdentityContainerTypeEnumValues = []IdentityContainerType{
	"Unknown",
	"OrganizationalUnit",
	"Container",
	"LostAndFound",
	"BuiltInDomain",
}

func (v *IdentityContainerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = IdentityContainerType(value)
	return nil
}

// NewIdentityContainerTypeFromValue returns a pointer to a valid IdentityContainerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIdentityContainerTypeFromValue(v string) (*IdentityContainerType, error) {
	ev := IdentityContainerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IdentityContainerType: valid values are %v", v, AllowedIdentityContainerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IdentityContainerType) IsValid() bool {
	for _, existing := range AllowedIdentityContainerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IdentityContainerType value
func (v IdentityContainerType) Ptr() *IdentityContainerType {
	return &v
}

type NullableIdentityContainerType struct {
	value *IdentityContainerType
	isSet bool
}

func (v NullableIdentityContainerType) Get() *IdentityContainerType {
	return v.value
}

func (v *NullableIdentityContainerType) Set(val *IdentityContainerType) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityContainerType) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityContainerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityContainerType(val *IdentityContainerType) *NullableIdentityContainerType {
	return &NullableIdentityContainerType{value: val, isSet: true}
}

func (v NullableIdentityContainerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityContainerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

