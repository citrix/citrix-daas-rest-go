/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// SummaryType Types of cost summary.
type SummaryType string

// List of SummaryType
const (
	SUMMARYTYPE_VM   SummaryType = "VM"
	SUMMARYTYPE_DISK SummaryType = "Disk"
)

// All allowed values of SummaryType enum
var AllowedSummaryTypeEnumValues = []SummaryType{
	"VM",
	"Disk",
}

func (v *SummaryType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = SummaryType(value)
	return nil
}

// NewSummaryTypeFromValue returns a pointer to a valid SummaryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSummaryTypeFromValue(v string) (*SummaryType, error) {
	ev := SummaryType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SummaryType: valid values are %v", v, AllowedSummaryTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SummaryType) IsValid() bool {
	for _, existing := range AllowedSummaryTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SummaryType value
func (v SummaryType) Ptr() *SummaryType {
	return &v
}

type NullableSummaryType struct {
	value *SummaryType
	isSet bool
}

func (v NullableSummaryType) Get() *SummaryType {
	return v.value
}

func (v *NullableSummaryType) Set(val *SummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryType(val *SummaryType) *NullableSummaryType {
	return &NullableSummaryType{value: val, isSet: true}
}

func (v NullableSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
