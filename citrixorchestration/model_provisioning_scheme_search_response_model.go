/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ProvisioningSchemeSearchResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningSchemeSearchResponseModel{}

// ProvisioningSchemeSearchResponseModel Response model for provisioning scheme.
type ProvisioningSchemeSearchResponseModel struct {
	ActivationType *WindowsActivationType `json:"ActivationType,omitempty"`
	// Cpu Count.
	CpuCount *int32 `json:"CpuCount,omitempty"`
	// Disk Size.
	DiskSize *int32 `json:"DiskSize,omitempty"`
	// Provisioning Scheme Id.
	Id NullableString `json:"Id,omitempty"`
	// Identity Pool Uid.
	IdentityPoolUid *string `json:"IdentityPoolUid,omitempty"`
	// Identity Type:ActiveDirectory, AzureAD, HybridAzureAD, Workgroup.
	IdentityType NullableString `json:"IdentityType,omitempty"`
	// Machine Count.
	MachineCount *int32 `json:"MachineCount,omitempty"`
	// Memory(MB).
	MemoryMB *int32 `json:"MemoryMB,omitempty"`
	// Provisioning Scheme Name.
	Name NullableString `json:"Name,omitempty"`
	// Persistency.
	Persistency *bool `json:"Persistency,omitempty"`
	// Provisioning Scheme Type.
	ProvisioningSchemeType NullableString `json:"ProvisioningSchemeType,omitempty"`
	// Provisioning Scheme State.
	State NullableString `json:"State,omitempty"`
	// Whether Use Write Back Cache.
	UseWriteBackCache *bool `json:"UseWriteBackCache,omitempty"`
	// Write Back Cache Disk Size.
	WriteBackCacheDiskSize *int32 `json:"WriteBackCacheDiskSize,omitempty"`
	// Use Write Back Cache Memory Size.
	WriteBackCacheMemorySize *int32 `json:"WriteBackCacheMemorySize,omitempty"`
	// Provisioning Scheme Version.
	Version *int32 `json:"Version,omitempty"`
}

// NewProvisioningSchemeSearchResponseModel instantiates a new ProvisioningSchemeSearchResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningSchemeSearchResponseModel() *ProvisioningSchemeSearchResponseModel {
	this := ProvisioningSchemeSearchResponseModel{}
	return &this
}

// NewProvisioningSchemeSearchResponseModelWithDefaults instantiates a new ProvisioningSchemeSearchResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningSchemeSearchResponseModelWithDefaults() *ProvisioningSchemeSearchResponseModel {
	this := ProvisioningSchemeSearchResponseModel{}
	return &this
}

// GetActivationType returns the ActivationType field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetActivationType() WindowsActivationType {
	if o == nil || IsNil(o.ActivationType) {
		var ret WindowsActivationType
		return ret
	}
	return *o.ActivationType
}

// GetActivationTypeOk returns a tuple with the ActivationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetActivationTypeOk() (*WindowsActivationType, bool) {
	if o == nil || IsNil(o.ActivationType) {
		return nil, false
	}
	return o.ActivationType, true
}

// HasActivationType returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasActivationType() bool {
	if o != nil && !IsNil(o.ActivationType) {
		return true
	}

	return false
}

// SetActivationType gets a reference to the given WindowsActivationType and assigns it to the ActivationType field.
func (o *ProvisioningSchemeSearchResponseModel) SetActivationType(v WindowsActivationType) {
	o.ActivationType = &v
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetCpuCount() int32 {
	if o == nil || IsNil(o.CpuCount) {
		var ret int32
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetCpuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuCount) {
		return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasCpuCount() bool {
	if o != nil && !IsNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int32 and assigns it to the CpuCount field.
func (o *ProvisioningSchemeSearchResponseModel) SetCpuCount(v int32) {
	o.CpuCount = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetDiskSize() int32 {
	if o == nil || IsNil(o.DiskSize) {
		var ret int32
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskSize) {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasDiskSize() bool {
	if o != nil && !IsNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int32 and assigns it to the DiskSize field.
func (o *ProvisioningSchemeSearchResponseModel) SetDiskSize(v int32) {
	o.DiskSize = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningSchemeSearchResponseModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningSchemeSearchResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ProvisioningSchemeSearchResponseModel) SetId(v string) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) UnsetId() {
	o.Id.Unset()
}

// GetIdentityPoolUid returns the IdentityPoolUid field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetIdentityPoolUid() string {
	if o == nil || IsNil(o.IdentityPoolUid) {
		var ret string
		return ret
	}
	return *o.IdentityPoolUid
}

// GetIdentityPoolUidOk returns a tuple with the IdentityPoolUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetIdentityPoolUidOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityPoolUid) {
		return nil, false
	}
	return o.IdentityPoolUid, true
}

// HasIdentityPoolUid returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasIdentityPoolUid() bool {
	if o != nil && !IsNil(o.IdentityPoolUid) {
		return true
	}

	return false
}

// SetIdentityPoolUid gets a reference to the given string and assigns it to the IdentityPoolUid field.
func (o *ProvisioningSchemeSearchResponseModel) SetIdentityPoolUid(v string) {
	o.IdentityPoolUid = &v
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningSchemeSearchResponseModel) GetIdentityType() string {
	if o == nil || IsNil(o.IdentityType.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityType.Get()
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningSchemeSearchResponseModel) GetIdentityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityType.Get(), o.IdentityType.IsSet()
}

// HasIdentityType returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasIdentityType() bool {
	if o != nil && o.IdentityType.IsSet() {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given NullableString and assigns it to the IdentityType field.
func (o *ProvisioningSchemeSearchResponseModel) SetIdentityType(v string) {
	o.IdentityType.Set(&v)
}

// SetIdentityTypeNil sets the value for IdentityType to be an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) SetIdentityTypeNil() {
	o.IdentityType.Set(nil)
}

// UnsetIdentityType ensures that no value is present for IdentityType, not even an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) UnsetIdentityType() {
	o.IdentityType.Unset()
}

// GetMachineCount returns the MachineCount field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetMachineCount() int32 {
	if o == nil || IsNil(o.MachineCount) {
		var ret int32
		return ret
	}
	return *o.MachineCount
}

// GetMachineCountOk returns a tuple with the MachineCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetMachineCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MachineCount) {
		return nil, false
	}
	return o.MachineCount, true
}

// HasMachineCount returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasMachineCount() bool {
	if o != nil && !IsNil(o.MachineCount) {
		return true
	}

	return false
}

// SetMachineCount gets a reference to the given int32 and assigns it to the MachineCount field.
func (o *ProvisioningSchemeSearchResponseModel) SetMachineCount(v int32) {
	o.MachineCount = &v
}

// GetMemoryMB returns the MemoryMB field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetMemoryMB() int32 {
	if o == nil || IsNil(o.MemoryMB) {
		var ret int32
		return ret
	}
	return *o.MemoryMB
}

// GetMemoryMBOk returns a tuple with the MemoryMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetMemoryMBOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMB) {
		return nil, false
	}
	return o.MemoryMB, true
}

// HasMemoryMB returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasMemoryMB() bool {
	if o != nil && !IsNil(o.MemoryMB) {
		return true
	}

	return false
}

// SetMemoryMB gets a reference to the given int32 and assigns it to the MemoryMB field.
func (o *ProvisioningSchemeSearchResponseModel) SetMemoryMB(v int32) {
	o.MemoryMB = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningSchemeSearchResponseModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningSchemeSearchResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProvisioningSchemeSearchResponseModel) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) UnsetName() {
	o.Name.Unset()
}

// GetPersistency returns the Persistency field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetPersistency() bool {
	if o == nil || IsNil(o.Persistency) {
		var ret bool
		return ret
	}
	return *o.Persistency
}

// GetPersistencyOk returns a tuple with the Persistency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetPersistencyOk() (*bool, bool) {
	if o == nil || IsNil(o.Persistency) {
		return nil, false
	}
	return o.Persistency, true
}

// HasPersistency returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasPersistency() bool {
	if o != nil && !IsNil(o.Persistency) {
		return true
	}

	return false
}

// SetPersistency gets a reference to the given bool and assigns it to the Persistency field.
func (o *ProvisioningSchemeSearchResponseModel) SetPersistency(v bool) {
	o.Persistency = &v
}

// GetProvisioningSchemeType returns the ProvisioningSchemeType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningSchemeSearchResponseModel) GetProvisioningSchemeType() string {
	if o == nil || IsNil(o.ProvisioningSchemeType.Get()) {
		var ret string
		return ret
	}
	return *o.ProvisioningSchemeType.Get()
}

// GetProvisioningSchemeTypeOk returns a tuple with the ProvisioningSchemeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningSchemeSearchResponseModel) GetProvisioningSchemeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProvisioningSchemeType.Get(), o.ProvisioningSchemeType.IsSet()
}

// HasProvisioningSchemeType returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasProvisioningSchemeType() bool {
	if o != nil && o.ProvisioningSchemeType.IsSet() {
		return true
	}

	return false
}

// SetProvisioningSchemeType gets a reference to the given NullableString and assigns it to the ProvisioningSchemeType field.
func (o *ProvisioningSchemeSearchResponseModel) SetProvisioningSchemeType(v string) {
	o.ProvisioningSchemeType.Set(&v)
}

// SetProvisioningSchemeTypeNil sets the value for ProvisioningSchemeType to be an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) SetProvisioningSchemeTypeNil() {
	o.ProvisioningSchemeType.Set(nil)
}

// UnsetProvisioningSchemeType ensures that no value is present for ProvisioningSchemeType, not even an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) UnsetProvisioningSchemeType() {
	o.ProvisioningSchemeType.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningSchemeSearchResponseModel) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningSchemeSearchResponseModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *ProvisioningSchemeSearchResponseModel) SetState(v string) {
	o.State.Set(&v)
}

// SetStateNil sets the value for State to be an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *ProvisioningSchemeSearchResponseModel) UnsetState() {
	o.State.Unset()
}

// GetUseWriteBackCache returns the UseWriteBackCache field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetUseWriteBackCache() bool {
	if o == nil || IsNil(o.UseWriteBackCache) {
		var ret bool
		return ret
	}
	return *o.UseWriteBackCache
}

// GetUseWriteBackCacheOk returns a tuple with the UseWriteBackCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetUseWriteBackCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.UseWriteBackCache) {
		return nil, false
	}
	return o.UseWriteBackCache, true
}

// HasUseWriteBackCache returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasUseWriteBackCache() bool {
	if o != nil && !IsNil(o.UseWriteBackCache) {
		return true
	}

	return false
}

// SetUseWriteBackCache gets a reference to the given bool and assigns it to the UseWriteBackCache field.
func (o *ProvisioningSchemeSearchResponseModel) SetUseWriteBackCache(v bool) {
	o.UseWriteBackCache = &v
}

// GetWriteBackCacheDiskSize returns the WriteBackCacheDiskSize field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetWriteBackCacheDiskSize() int32 {
	if o == nil || IsNil(o.WriteBackCacheDiskSize) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheDiskSize
}

// GetWriteBackCacheDiskSizeOk returns a tuple with the WriteBackCacheDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetWriteBackCacheDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheDiskSize) {
		return nil, false
	}
	return o.WriteBackCacheDiskSize, true
}

// HasWriteBackCacheDiskSize returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasWriteBackCacheDiskSize() bool {
	if o != nil && !IsNil(o.WriteBackCacheDiskSize) {
		return true
	}

	return false
}

// SetWriteBackCacheDiskSize gets a reference to the given int32 and assigns it to the WriteBackCacheDiskSize field.
func (o *ProvisioningSchemeSearchResponseModel) SetWriteBackCacheDiskSize(v int32) {
	o.WriteBackCacheDiskSize = &v
}

// GetWriteBackCacheMemorySize returns the WriteBackCacheMemorySize field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetWriteBackCacheMemorySize() int32 {
	if o == nil || IsNil(o.WriteBackCacheMemorySize) {
		var ret int32
		return ret
	}
	return *o.WriteBackCacheMemorySize
}

// GetWriteBackCacheMemorySizeOk returns a tuple with the WriteBackCacheMemorySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetWriteBackCacheMemorySizeOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteBackCacheMemorySize) {
		return nil, false
	}
	return o.WriteBackCacheMemorySize, true
}

// HasWriteBackCacheMemorySize returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasWriteBackCacheMemorySize() bool {
	if o != nil && !IsNil(o.WriteBackCacheMemorySize) {
		return true
	}

	return false
}

// SetWriteBackCacheMemorySize gets a reference to the given int32 and assigns it to the WriteBackCacheMemorySize field.
func (o *ProvisioningSchemeSearchResponseModel) SetWriteBackCacheMemorySize(v int32) {
	o.WriteBackCacheMemorySize = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ProvisioningSchemeSearchResponseModel) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSchemeSearchResponseModel) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ProvisioningSchemeSearchResponseModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ProvisioningSchemeSearchResponseModel) SetVersion(v int32) {
	o.Version = &v
}

func (o ProvisioningSchemeSearchResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningSchemeSearchResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationType) {
		toSerialize["ActivationType"] = o.ActivationType
	}
	if !IsNil(o.CpuCount) {
		toSerialize["CpuCount"] = o.CpuCount
	}
	if !IsNil(o.DiskSize) {
		toSerialize["DiskSize"] = o.DiskSize
	}
	if o.Id.IsSet() {
		toSerialize["Id"] = o.Id.Get()
	}
	if !IsNil(o.IdentityPoolUid) {
		toSerialize["IdentityPoolUid"] = o.IdentityPoolUid
	}
	if o.IdentityType.IsSet() {
		toSerialize["IdentityType"] = o.IdentityType.Get()
	}
	if !IsNil(o.MachineCount) {
		toSerialize["MachineCount"] = o.MachineCount
	}
	if !IsNil(o.MemoryMB) {
		toSerialize["MemoryMB"] = o.MemoryMB
	}
	if o.Name.IsSet() {
		toSerialize["Name"] = o.Name.Get()
	}
	if !IsNil(o.Persistency) {
		toSerialize["Persistency"] = o.Persistency
	}
	if o.ProvisioningSchemeType.IsSet() {
		toSerialize["ProvisioningSchemeType"] = o.ProvisioningSchemeType.Get()
	}
	if o.State.IsSet() {
		toSerialize["State"] = o.State.Get()
	}
	if !IsNil(o.UseWriteBackCache) {
		toSerialize["UseWriteBackCache"] = o.UseWriteBackCache
	}
	if !IsNil(o.WriteBackCacheDiskSize) {
		toSerialize["WriteBackCacheDiskSize"] = o.WriteBackCacheDiskSize
	}
	if !IsNil(o.WriteBackCacheMemorySize) {
		toSerialize["WriteBackCacheMemorySize"] = o.WriteBackCacheMemorySize
	}
	if !IsNil(o.Version) {
		toSerialize["Version"] = o.Version
	}
	return toSerialize, nil
}

type NullableProvisioningSchemeSearchResponseModel struct {
	value *ProvisioningSchemeSearchResponseModel
	isSet bool
}

func (v NullableProvisioningSchemeSearchResponseModel) Get() *ProvisioningSchemeSearchResponseModel {
	return v.value
}

func (v *NullableProvisioningSchemeSearchResponseModel) Set(val *ProvisioningSchemeSearchResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningSchemeSearchResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningSchemeSearchResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningSchemeSearchResponseModel(val *ProvisioningSchemeSearchResponseModel) *NullableProvisioningSchemeSearchResponseModel {
	return &NullableProvisioningSchemeSearchResponseModel{value: val, isSet: true}
}

func (v NullableProvisioningSchemeSearchResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningSchemeSearchResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
