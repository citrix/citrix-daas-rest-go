/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the SiteDetailResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteDetailResponseModel{}

// SiteDetailResponseModel struct for SiteDetailResponseModel
type SiteDetailResponseModel struct {
	// Globally unique id of the site.
	Id string `json:"Id"`
	// Site name.  Not guaranteed to be unique.
	Name string `json:"Name"`
	// Orchestration API version
	OrchestationApiVersion int32 `json:"OrchestationApiVersion"`
	AppProtectionAuthorized *bool `json:"AppProtectionAuthorized,omitempty"`
	// Hostname of the licensing server for the site. Will be null for XenApp & XenDesktop service.
	LicenseServerName *string `json:"LicenseServerName,omitempty"`
	// License server port. Will be null for XenApp & XenDesktop service.
	LicenseServerPort *int32 `json:"LicenseServerPort,omitempty"`
	// License server URI. Will be null for XenApp & XenDesktop service.
	LicenseServerUri *string `json:"LicenseServerUri,omitempty"`
	LicensingModel *LicenseModel `json:"LicensingModel,omitempty"`
	// Indicates whether the site's initial configuration is complete.
	SiteConfigurationComplete *bool `json:"SiteConfigurationComplete,omitempty"`
	PrimaryZone SiteDetailResponseModelAllOfPrimaryZone `json:"PrimaryZone"`
	// Product code for the site license.
	ProductCode string `json:"ProductCode"`
	// Product edition for the site license.
	ProductEdition string `json:"ProductEdition"`
	// Product version.
	ProductVersion string `json:"ProductVersion"`
	// The metadata of Site.
	Metadata []NameValueStringPairModel `json:"Metadata,omitempty"`
	// Services running within the site.
	SiteServices []SiteServiceResponseModel `json:"SiteServices"`
	// Enabled features within the site.
	EnabledFeatures []string `json:"EnabledFeatures"`
	// The objectGUID property identifying the base OU in Active Directory used for desktop registrations.
	BaseOU *string `json:"BaseOU,omitempty"`
	ColorDepth ColorDepth `json:"ColorDepth"`
	// Indicates whether connection leasing is enabled.
	ConnectionLeasingEnabled *bool `json:"ConnectionLeasingEnabled,omitempty"`
	DefaultMinimumFunctionalLevel *FunctionalLevel `json:"DefaultMinimumFunctionalLevel,omitempty"`
	// The default desktop icon used for new delivery groups.
	DefaultDesktopIconId string `json:"DefaultDesktopIconId"`
	// Indicates whether numeric IP addresses or DNS names are present in ICA files.
	DnsResolutionEnabled *bool `json:"DnsResolutionEnabled,omitempty"`
	// The number of licensing grace sessions remaining.
	LicenseGraceSessionsRemaining *int32 `json:"LicenseGraceSessionsRemaining,omitempty"`
	// The number of active, licensed sessions.
	LicensedSessionsActive *int32 `json:"LicensedSessionsActive,omitempty"`
	// When in an active licensing grace period, indicates the  number of hours remaining in the grace period. Will be null for XenApp & XenDesktop service.
	LicensingGraceHoursLeft *int32 `json:"LicensingGraceHoursLeft,omitempty"`
	// Indicates whether a licensing grace period is active. Will be null for XenApp & XenDesktop service.
	LicensingGracePeriodActive *bool `json:"LicensingGracePeriodActive,omitempty"`
	// The peak number of concurrent licensed users. Only applies if LicensingModel is Concurrent.
	PeakConcurrentLicenseUsers *int32 `json:"PeakConcurrentLicenseUsers,omitempty"`
	// Allow sessions to launch on shared machines without an intermediate shutdown while the system is operating in outage mode.
	ReuseMachinesWithoutShutdownInOutageAllowed *bool `json:"ReuseMachinesWithoutShutdownInOutageAllowed,omitempty"`
	// The default SecureICA usage for new delivery groups.
	DefaultSecureIcaRequired *bool `json:"DefaultSecureIcaRequired,omitempty"`
	// The total count of unique license users.
	TotalUniqueLicenseUsers *int32 `json:"TotalUniqueLicenseUsers,omitempty"`
	// Indicates whether the XML service trusts the caller to specify user identity.
	TrustRequestsSentToTheXmlServicePort *bool `json:"TrustRequestsSentToTheXmlServicePort,omitempty"`
	// Get active licensing alerts in the site. Will be null for XenApp & XenDesktop service.
	LicensingAlerts []LicensingAlertResponseModel `json:"LicensingAlerts,omitempty"`
}

// NewSiteDetailResponseModel instantiates a new SiteDetailResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteDetailResponseModel(id string, name string, orchestationApiVersion int32, primaryZone SiteDetailResponseModelAllOfPrimaryZone, productCode string, productEdition string, productVersion string, siteServices []SiteServiceResponseModel, enabledFeatures []string, colorDepth ColorDepth, defaultDesktopIconId string) *SiteDetailResponseModel {
	this := SiteDetailResponseModel{}
	this.Id = id
	this.Name = name
	this.OrchestationApiVersion = orchestationApiVersion
	this.PrimaryZone = primaryZone
	this.ProductCode = productCode
	this.ProductEdition = productEdition
	this.ProductVersion = productVersion
	this.SiteServices = siteServices
	this.EnabledFeatures = enabledFeatures
	this.ColorDepth = colorDepth
	this.DefaultDesktopIconId = defaultDesktopIconId
	return &this
}

// NewSiteDetailResponseModelWithDefaults instantiates a new SiteDetailResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteDetailResponseModelWithDefaults() *SiteDetailResponseModel {
	this := SiteDetailResponseModel{}
	return &this
}

// GetId returns the Id field value
func (o *SiteDetailResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SiteDetailResponseModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SiteDetailResponseModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SiteDetailResponseModel) SetName(v string) {
	o.Name = v
}

// GetOrchestationApiVersion returns the OrchestationApiVersion field value
func (o *SiteDetailResponseModel) GetOrchestationApiVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrchestationApiVersion
}

// GetOrchestationApiVersionOk returns a tuple with the OrchestationApiVersion field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetOrchestationApiVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrchestationApiVersion, true
}

// SetOrchestationApiVersion sets field value
func (o *SiteDetailResponseModel) SetOrchestationApiVersion(v int32) {
	o.OrchestationApiVersion = v
}

// GetAppProtectionAuthorized returns the AppProtectionAuthorized field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetAppProtectionAuthorized() bool {
	if o == nil || IsNil(o.AppProtectionAuthorized) {
		var ret bool
		return ret
	}
	return *o.AppProtectionAuthorized
}

// GetAppProtectionAuthorizedOk returns a tuple with the AppProtectionAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetAppProtectionAuthorizedOk() (*bool, bool) {
	if o == nil || IsNil(o.AppProtectionAuthorized) {
		return nil, false
	}
	return o.AppProtectionAuthorized, true
}

// HasAppProtectionAuthorized returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasAppProtectionAuthorized() bool {
	if o != nil && !IsNil(o.AppProtectionAuthorized) {
		return true
	}

	return false
}

// SetAppProtectionAuthorized gets a reference to the given bool and assigns it to the AppProtectionAuthorized field.
func (o *SiteDetailResponseModel) SetAppProtectionAuthorized(v bool) {
	o.AppProtectionAuthorized = &v
}

// GetLicenseServerName returns the LicenseServerName field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicenseServerName() string {
	if o == nil || IsNil(o.LicenseServerName) {
		var ret string
		return ret
	}
	return *o.LicenseServerName
}

// GetLicenseServerNameOk returns a tuple with the LicenseServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicenseServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseServerName) {
		return nil, false
	}
	return o.LicenseServerName, true
}

// HasLicenseServerName returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicenseServerName() bool {
	if o != nil && !IsNil(o.LicenseServerName) {
		return true
	}

	return false
}

// SetLicenseServerName gets a reference to the given string and assigns it to the LicenseServerName field.
func (o *SiteDetailResponseModel) SetLicenseServerName(v string) {
	o.LicenseServerName = &v
}

// GetLicenseServerPort returns the LicenseServerPort field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicenseServerPort() int32 {
	if o == nil || IsNil(o.LicenseServerPort) {
		var ret int32
		return ret
	}
	return *o.LicenseServerPort
}

// GetLicenseServerPortOk returns a tuple with the LicenseServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicenseServerPortOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseServerPort) {
		return nil, false
	}
	return o.LicenseServerPort, true
}

// HasLicenseServerPort returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicenseServerPort() bool {
	if o != nil && !IsNil(o.LicenseServerPort) {
		return true
	}

	return false
}

// SetLicenseServerPort gets a reference to the given int32 and assigns it to the LicenseServerPort field.
func (o *SiteDetailResponseModel) SetLicenseServerPort(v int32) {
	o.LicenseServerPort = &v
}

// GetLicenseServerUri returns the LicenseServerUri field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicenseServerUri() string {
	if o == nil || IsNil(o.LicenseServerUri) {
		var ret string
		return ret
	}
	return *o.LicenseServerUri
}

// GetLicenseServerUriOk returns a tuple with the LicenseServerUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicenseServerUriOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseServerUri) {
		return nil, false
	}
	return o.LicenseServerUri, true
}

// HasLicenseServerUri returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicenseServerUri() bool {
	if o != nil && !IsNil(o.LicenseServerUri) {
		return true
	}

	return false
}

// SetLicenseServerUri gets a reference to the given string and assigns it to the LicenseServerUri field.
func (o *SiteDetailResponseModel) SetLicenseServerUri(v string) {
	o.LicenseServerUri = &v
}

// GetLicensingModel returns the LicensingModel field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicensingModel() LicenseModel {
	if o == nil || IsNil(o.LicensingModel) {
		var ret LicenseModel
		return ret
	}
	return *o.LicensingModel
}

// GetLicensingModelOk returns a tuple with the LicensingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicensingModelOk() (*LicenseModel, bool) {
	if o == nil || IsNil(o.LicensingModel) {
		return nil, false
	}
	return o.LicensingModel, true
}

// HasLicensingModel returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicensingModel() bool {
	if o != nil && !IsNil(o.LicensingModel) {
		return true
	}

	return false
}

// SetLicensingModel gets a reference to the given LicenseModel and assigns it to the LicensingModel field.
func (o *SiteDetailResponseModel) SetLicensingModel(v LicenseModel) {
	o.LicensingModel = &v
}

// GetSiteConfigurationComplete returns the SiteConfigurationComplete field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetSiteConfigurationComplete() bool {
	if o == nil || IsNil(o.SiteConfigurationComplete) {
		var ret bool
		return ret
	}
	return *o.SiteConfigurationComplete
}

// GetSiteConfigurationCompleteOk returns a tuple with the SiteConfigurationComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetSiteConfigurationCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.SiteConfigurationComplete) {
		return nil, false
	}
	return o.SiteConfigurationComplete, true
}

// HasSiteConfigurationComplete returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasSiteConfigurationComplete() bool {
	if o != nil && !IsNil(o.SiteConfigurationComplete) {
		return true
	}

	return false
}

// SetSiteConfigurationComplete gets a reference to the given bool and assigns it to the SiteConfigurationComplete field.
func (o *SiteDetailResponseModel) SetSiteConfigurationComplete(v bool) {
	o.SiteConfigurationComplete = &v
}

// GetPrimaryZone returns the PrimaryZone field value
func (o *SiteDetailResponseModel) GetPrimaryZone() SiteDetailResponseModelAllOfPrimaryZone {
	if o == nil {
		var ret SiteDetailResponseModelAllOfPrimaryZone
		return ret
	}

	return o.PrimaryZone
}

// GetPrimaryZoneOk returns a tuple with the PrimaryZone field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetPrimaryZoneOk() (*SiteDetailResponseModelAllOfPrimaryZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryZone, true
}

// SetPrimaryZone sets field value
func (o *SiteDetailResponseModel) SetPrimaryZone(v SiteDetailResponseModelAllOfPrimaryZone) {
	o.PrimaryZone = v
}

// GetProductCode returns the ProductCode field value
func (o *SiteDetailResponseModel) GetProductCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetProductCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductCode, true
}

// SetProductCode sets field value
func (o *SiteDetailResponseModel) SetProductCode(v string) {
	o.ProductCode = v
}

// GetProductEdition returns the ProductEdition field value
func (o *SiteDetailResponseModel) GetProductEdition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductEdition
}

// GetProductEditionOk returns a tuple with the ProductEdition field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetProductEditionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductEdition, true
}

// SetProductEdition sets field value
func (o *SiteDetailResponseModel) SetProductEdition(v string) {
	o.ProductEdition = v
}

// GetProductVersion returns the ProductVersion field value
func (o *SiteDetailResponseModel) GetProductVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetProductVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductVersion, true
}

// SetProductVersion sets field value
func (o *SiteDetailResponseModel) SetProductVersion(v string) {
	o.ProductVersion = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetMetadata() []NameValueStringPairModel {
	if o == nil || IsNil(o.Metadata) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the Metadata field.
func (o *SiteDetailResponseModel) SetMetadata(v []NameValueStringPairModel) {
	o.Metadata = v
}

// GetSiteServices returns the SiteServices field value
func (o *SiteDetailResponseModel) GetSiteServices() []SiteServiceResponseModel {
	if o == nil {
		var ret []SiteServiceResponseModel
		return ret
	}

	return o.SiteServices
}

// GetSiteServicesOk returns a tuple with the SiteServices field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetSiteServicesOk() ([]SiteServiceResponseModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SiteServices, true
}

// SetSiteServices sets field value
func (o *SiteDetailResponseModel) SetSiteServices(v []SiteServiceResponseModel) {
	o.SiteServices = v
}

// GetEnabledFeatures returns the EnabledFeatures field value
func (o *SiteDetailResponseModel) GetEnabledFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EnabledFeatures
}

// GetEnabledFeaturesOk returns a tuple with the EnabledFeatures field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetEnabledFeaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnabledFeatures, true
}

// SetEnabledFeatures sets field value
func (o *SiteDetailResponseModel) SetEnabledFeatures(v []string) {
	o.EnabledFeatures = v
}

// GetBaseOU returns the BaseOU field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetBaseOU() string {
	if o == nil || IsNil(o.BaseOU) {
		var ret string
		return ret
	}
	return *o.BaseOU
}

// GetBaseOUOk returns a tuple with the BaseOU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetBaseOUOk() (*string, bool) {
	if o == nil || IsNil(o.BaseOU) {
		return nil, false
	}
	return o.BaseOU, true
}

// HasBaseOU returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasBaseOU() bool {
	if o != nil && !IsNil(o.BaseOU) {
		return true
	}

	return false
}

// SetBaseOU gets a reference to the given string and assigns it to the BaseOU field.
func (o *SiteDetailResponseModel) SetBaseOU(v string) {
	o.BaseOU = &v
}

// GetColorDepth returns the ColorDepth field value
func (o *SiteDetailResponseModel) GetColorDepth() ColorDepth {
	if o == nil {
		var ret ColorDepth
		return ret
	}

	return o.ColorDepth
}

// GetColorDepthOk returns a tuple with the ColorDepth field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetColorDepthOk() (*ColorDepth, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColorDepth, true
}

// SetColorDepth sets field value
func (o *SiteDetailResponseModel) SetColorDepth(v ColorDepth) {
	o.ColorDepth = v
}

// GetConnectionLeasingEnabled returns the ConnectionLeasingEnabled field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetConnectionLeasingEnabled() bool {
	if o == nil || IsNil(o.ConnectionLeasingEnabled) {
		var ret bool
		return ret
	}
	return *o.ConnectionLeasingEnabled
}

// GetConnectionLeasingEnabledOk returns a tuple with the ConnectionLeasingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetConnectionLeasingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ConnectionLeasingEnabled) {
		return nil, false
	}
	return o.ConnectionLeasingEnabled, true
}

// HasConnectionLeasingEnabled returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasConnectionLeasingEnabled() bool {
	if o != nil && !IsNil(o.ConnectionLeasingEnabled) {
		return true
	}

	return false
}

// SetConnectionLeasingEnabled gets a reference to the given bool and assigns it to the ConnectionLeasingEnabled field.
func (o *SiteDetailResponseModel) SetConnectionLeasingEnabled(v bool) {
	o.ConnectionLeasingEnabled = &v
}

// GetDefaultMinimumFunctionalLevel returns the DefaultMinimumFunctionalLevel field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetDefaultMinimumFunctionalLevel() FunctionalLevel {
	if o == nil || IsNil(o.DefaultMinimumFunctionalLevel) {
		var ret FunctionalLevel
		return ret
	}
	return *o.DefaultMinimumFunctionalLevel
}

// GetDefaultMinimumFunctionalLevelOk returns a tuple with the DefaultMinimumFunctionalLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetDefaultMinimumFunctionalLevelOk() (*FunctionalLevel, bool) {
	if o == nil || IsNil(o.DefaultMinimumFunctionalLevel) {
		return nil, false
	}
	return o.DefaultMinimumFunctionalLevel, true
}

// HasDefaultMinimumFunctionalLevel returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasDefaultMinimumFunctionalLevel() bool {
	if o != nil && !IsNil(o.DefaultMinimumFunctionalLevel) {
		return true
	}

	return false
}

// SetDefaultMinimumFunctionalLevel gets a reference to the given FunctionalLevel and assigns it to the DefaultMinimumFunctionalLevel field.
func (o *SiteDetailResponseModel) SetDefaultMinimumFunctionalLevel(v FunctionalLevel) {
	o.DefaultMinimumFunctionalLevel = &v
}

// GetDefaultDesktopIconId returns the DefaultDesktopIconId field value
func (o *SiteDetailResponseModel) GetDefaultDesktopIconId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultDesktopIconId
}

// GetDefaultDesktopIconIdOk returns a tuple with the DefaultDesktopIconId field value
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetDefaultDesktopIconIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDesktopIconId, true
}

// SetDefaultDesktopIconId sets field value
func (o *SiteDetailResponseModel) SetDefaultDesktopIconId(v string) {
	o.DefaultDesktopIconId = v
}

// GetDnsResolutionEnabled returns the DnsResolutionEnabled field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetDnsResolutionEnabled() bool {
	if o == nil || IsNil(o.DnsResolutionEnabled) {
		var ret bool
		return ret
	}
	return *o.DnsResolutionEnabled
}

// GetDnsResolutionEnabledOk returns a tuple with the DnsResolutionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetDnsResolutionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsResolutionEnabled) {
		return nil, false
	}
	return o.DnsResolutionEnabled, true
}

// HasDnsResolutionEnabled returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasDnsResolutionEnabled() bool {
	if o != nil && !IsNil(o.DnsResolutionEnabled) {
		return true
	}

	return false
}

// SetDnsResolutionEnabled gets a reference to the given bool and assigns it to the DnsResolutionEnabled field.
func (o *SiteDetailResponseModel) SetDnsResolutionEnabled(v bool) {
	o.DnsResolutionEnabled = &v
}

// GetLicenseGraceSessionsRemaining returns the LicenseGraceSessionsRemaining field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicenseGraceSessionsRemaining() int32 {
	if o == nil || IsNil(o.LicenseGraceSessionsRemaining) {
		var ret int32
		return ret
	}
	return *o.LicenseGraceSessionsRemaining
}

// GetLicenseGraceSessionsRemainingOk returns a tuple with the LicenseGraceSessionsRemaining field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicenseGraceSessionsRemainingOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseGraceSessionsRemaining) {
		return nil, false
	}
	return o.LicenseGraceSessionsRemaining, true
}

// HasLicenseGraceSessionsRemaining returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicenseGraceSessionsRemaining() bool {
	if o != nil && !IsNil(o.LicenseGraceSessionsRemaining) {
		return true
	}

	return false
}

// SetLicenseGraceSessionsRemaining gets a reference to the given int32 and assigns it to the LicenseGraceSessionsRemaining field.
func (o *SiteDetailResponseModel) SetLicenseGraceSessionsRemaining(v int32) {
	o.LicenseGraceSessionsRemaining = &v
}

// GetLicensedSessionsActive returns the LicensedSessionsActive field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicensedSessionsActive() int32 {
	if o == nil || IsNil(o.LicensedSessionsActive) {
		var ret int32
		return ret
	}
	return *o.LicensedSessionsActive
}

// GetLicensedSessionsActiveOk returns a tuple with the LicensedSessionsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicensedSessionsActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensedSessionsActive) {
		return nil, false
	}
	return o.LicensedSessionsActive, true
}

// HasLicensedSessionsActive returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicensedSessionsActive() bool {
	if o != nil && !IsNil(o.LicensedSessionsActive) {
		return true
	}

	return false
}

// SetLicensedSessionsActive gets a reference to the given int32 and assigns it to the LicensedSessionsActive field.
func (o *SiteDetailResponseModel) SetLicensedSessionsActive(v int32) {
	o.LicensedSessionsActive = &v
}

// GetLicensingGraceHoursLeft returns the LicensingGraceHoursLeft field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicensingGraceHoursLeft() int32 {
	if o == nil || IsNil(o.LicensingGraceHoursLeft) {
		var ret int32
		return ret
	}
	return *o.LicensingGraceHoursLeft
}

// GetLicensingGraceHoursLeftOk returns a tuple with the LicensingGraceHoursLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicensingGraceHoursLeftOk() (*int32, bool) {
	if o == nil || IsNil(o.LicensingGraceHoursLeft) {
		return nil, false
	}
	return o.LicensingGraceHoursLeft, true
}

// HasLicensingGraceHoursLeft returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicensingGraceHoursLeft() bool {
	if o != nil && !IsNil(o.LicensingGraceHoursLeft) {
		return true
	}

	return false
}

// SetLicensingGraceHoursLeft gets a reference to the given int32 and assigns it to the LicensingGraceHoursLeft field.
func (o *SiteDetailResponseModel) SetLicensingGraceHoursLeft(v int32) {
	o.LicensingGraceHoursLeft = &v
}

// GetLicensingGracePeriodActive returns the LicensingGracePeriodActive field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicensingGracePeriodActive() bool {
	if o == nil || IsNil(o.LicensingGracePeriodActive) {
		var ret bool
		return ret
	}
	return *o.LicensingGracePeriodActive
}

// GetLicensingGracePeriodActiveOk returns a tuple with the LicensingGracePeriodActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicensingGracePeriodActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.LicensingGracePeriodActive) {
		return nil, false
	}
	return o.LicensingGracePeriodActive, true
}

// HasLicensingGracePeriodActive returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicensingGracePeriodActive() bool {
	if o != nil && !IsNil(o.LicensingGracePeriodActive) {
		return true
	}

	return false
}

// SetLicensingGracePeriodActive gets a reference to the given bool and assigns it to the LicensingGracePeriodActive field.
func (o *SiteDetailResponseModel) SetLicensingGracePeriodActive(v bool) {
	o.LicensingGracePeriodActive = &v
}

// GetPeakConcurrentLicenseUsers returns the PeakConcurrentLicenseUsers field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetPeakConcurrentLicenseUsers() int32 {
	if o == nil || IsNil(o.PeakConcurrentLicenseUsers) {
		var ret int32
		return ret
	}
	return *o.PeakConcurrentLicenseUsers
}

// GetPeakConcurrentLicenseUsersOk returns a tuple with the PeakConcurrentLicenseUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetPeakConcurrentLicenseUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakConcurrentLicenseUsers) {
		return nil, false
	}
	return o.PeakConcurrentLicenseUsers, true
}

// HasPeakConcurrentLicenseUsers returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasPeakConcurrentLicenseUsers() bool {
	if o != nil && !IsNil(o.PeakConcurrentLicenseUsers) {
		return true
	}

	return false
}

// SetPeakConcurrentLicenseUsers gets a reference to the given int32 and assigns it to the PeakConcurrentLicenseUsers field.
func (o *SiteDetailResponseModel) SetPeakConcurrentLicenseUsers(v int32) {
	o.PeakConcurrentLicenseUsers = &v
}

// GetReuseMachinesWithoutShutdownInOutageAllowed returns the ReuseMachinesWithoutShutdownInOutageAllowed field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetReuseMachinesWithoutShutdownInOutageAllowed() bool {
	if o == nil || IsNil(o.ReuseMachinesWithoutShutdownInOutageAllowed) {
		var ret bool
		return ret
	}
	return *o.ReuseMachinesWithoutShutdownInOutageAllowed
}

// GetReuseMachinesWithoutShutdownInOutageAllowedOk returns a tuple with the ReuseMachinesWithoutShutdownInOutageAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetReuseMachinesWithoutShutdownInOutageAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.ReuseMachinesWithoutShutdownInOutageAllowed) {
		return nil, false
	}
	return o.ReuseMachinesWithoutShutdownInOutageAllowed, true
}

// HasReuseMachinesWithoutShutdownInOutageAllowed returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasReuseMachinesWithoutShutdownInOutageAllowed() bool {
	if o != nil && !IsNil(o.ReuseMachinesWithoutShutdownInOutageAllowed) {
		return true
	}

	return false
}

// SetReuseMachinesWithoutShutdownInOutageAllowed gets a reference to the given bool and assigns it to the ReuseMachinesWithoutShutdownInOutageAllowed field.
func (o *SiteDetailResponseModel) SetReuseMachinesWithoutShutdownInOutageAllowed(v bool) {
	o.ReuseMachinesWithoutShutdownInOutageAllowed = &v
}

// GetDefaultSecureIcaRequired returns the DefaultSecureIcaRequired field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetDefaultSecureIcaRequired() bool {
	if o == nil || IsNil(o.DefaultSecureIcaRequired) {
		var ret bool
		return ret
	}
	return *o.DefaultSecureIcaRequired
}

// GetDefaultSecureIcaRequiredOk returns a tuple with the DefaultSecureIcaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetDefaultSecureIcaRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultSecureIcaRequired) {
		return nil, false
	}
	return o.DefaultSecureIcaRequired, true
}

// HasDefaultSecureIcaRequired returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasDefaultSecureIcaRequired() bool {
	if o != nil && !IsNil(o.DefaultSecureIcaRequired) {
		return true
	}

	return false
}

// SetDefaultSecureIcaRequired gets a reference to the given bool and assigns it to the DefaultSecureIcaRequired field.
func (o *SiteDetailResponseModel) SetDefaultSecureIcaRequired(v bool) {
	o.DefaultSecureIcaRequired = &v
}

// GetTotalUniqueLicenseUsers returns the TotalUniqueLicenseUsers field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetTotalUniqueLicenseUsers() int32 {
	if o == nil || IsNil(o.TotalUniqueLicenseUsers) {
		var ret int32
		return ret
	}
	return *o.TotalUniqueLicenseUsers
}

// GetTotalUniqueLicenseUsersOk returns a tuple with the TotalUniqueLicenseUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetTotalUniqueLicenseUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalUniqueLicenseUsers) {
		return nil, false
	}
	return o.TotalUniqueLicenseUsers, true
}

// HasTotalUniqueLicenseUsers returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasTotalUniqueLicenseUsers() bool {
	if o != nil && !IsNil(o.TotalUniqueLicenseUsers) {
		return true
	}

	return false
}

// SetTotalUniqueLicenseUsers gets a reference to the given int32 and assigns it to the TotalUniqueLicenseUsers field.
func (o *SiteDetailResponseModel) SetTotalUniqueLicenseUsers(v int32) {
	o.TotalUniqueLicenseUsers = &v
}

// GetTrustRequestsSentToTheXmlServicePort returns the TrustRequestsSentToTheXmlServicePort field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetTrustRequestsSentToTheXmlServicePort() bool {
	if o == nil || IsNil(o.TrustRequestsSentToTheXmlServicePort) {
		var ret bool
		return ret
	}
	return *o.TrustRequestsSentToTheXmlServicePort
}

// GetTrustRequestsSentToTheXmlServicePortOk returns a tuple with the TrustRequestsSentToTheXmlServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetTrustRequestsSentToTheXmlServicePortOk() (*bool, bool) {
	if o == nil || IsNil(o.TrustRequestsSentToTheXmlServicePort) {
		return nil, false
	}
	return o.TrustRequestsSentToTheXmlServicePort, true
}

// HasTrustRequestsSentToTheXmlServicePort returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasTrustRequestsSentToTheXmlServicePort() bool {
	if o != nil && !IsNil(o.TrustRequestsSentToTheXmlServicePort) {
		return true
	}

	return false
}

// SetTrustRequestsSentToTheXmlServicePort gets a reference to the given bool and assigns it to the TrustRequestsSentToTheXmlServicePort field.
func (o *SiteDetailResponseModel) SetTrustRequestsSentToTheXmlServicePort(v bool) {
	o.TrustRequestsSentToTheXmlServicePort = &v
}

// GetLicensingAlerts returns the LicensingAlerts field value if set, zero value otherwise.
func (o *SiteDetailResponseModel) GetLicensingAlerts() []LicensingAlertResponseModel {
	if o == nil || IsNil(o.LicensingAlerts) {
		var ret []LicensingAlertResponseModel
		return ret
	}
	return o.LicensingAlerts
}

// GetLicensingAlertsOk returns a tuple with the LicensingAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteDetailResponseModel) GetLicensingAlertsOk() ([]LicensingAlertResponseModel, bool) {
	if o == nil || IsNil(o.LicensingAlerts) {
		return nil, false
	}
	return o.LicensingAlerts, true
}

// HasLicensingAlerts returns a boolean if a field has been set.
func (o *SiteDetailResponseModel) HasLicensingAlerts() bool {
	if o != nil && !IsNil(o.LicensingAlerts) {
		return true
	}

	return false
}

// SetLicensingAlerts gets a reference to the given []LicensingAlertResponseModel and assigns it to the LicensingAlerts field.
func (o *SiteDetailResponseModel) SetLicensingAlerts(v []LicensingAlertResponseModel) {
	o.LicensingAlerts = v
}

func (o SiteDetailResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteDetailResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	toSerialize["Name"] = o.Name
	toSerialize["OrchestationApiVersion"] = o.OrchestationApiVersion
	if !IsNil(o.AppProtectionAuthorized) {
		toSerialize["AppProtectionAuthorized"] = o.AppProtectionAuthorized
	}
	if !IsNil(o.LicenseServerName) {
		toSerialize["LicenseServerName"] = o.LicenseServerName
	}
	if !IsNil(o.LicenseServerPort) {
		toSerialize["LicenseServerPort"] = o.LicenseServerPort
	}
	if !IsNil(o.LicenseServerUri) {
		toSerialize["LicenseServerUri"] = o.LicenseServerUri
	}
	if !IsNil(o.LicensingModel) {
		toSerialize["LicensingModel"] = o.LicensingModel
	}
	if !IsNil(o.SiteConfigurationComplete) {
		toSerialize["SiteConfigurationComplete"] = o.SiteConfigurationComplete
	}
	toSerialize["PrimaryZone"] = o.PrimaryZone
	toSerialize["ProductCode"] = o.ProductCode
	toSerialize["ProductEdition"] = o.ProductEdition
	toSerialize["ProductVersion"] = o.ProductVersion
	if !IsNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	toSerialize["SiteServices"] = o.SiteServices
	toSerialize["EnabledFeatures"] = o.EnabledFeatures
	if !IsNil(o.BaseOU) {
		toSerialize["BaseOU"] = o.BaseOU
	}
	toSerialize["ColorDepth"] = o.ColorDepth
	if !IsNil(o.ConnectionLeasingEnabled) {
		toSerialize["ConnectionLeasingEnabled"] = o.ConnectionLeasingEnabled
	}
	if !IsNil(o.DefaultMinimumFunctionalLevel) {
		toSerialize["DefaultMinimumFunctionalLevel"] = o.DefaultMinimumFunctionalLevel
	}
	toSerialize["DefaultDesktopIconId"] = o.DefaultDesktopIconId
	if !IsNil(o.DnsResolutionEnabled) {
		toSerialize["DnsResolutionEnabled"] = o.DnsResolutionEnabled
	}
	if !IsNil(o.LicenseGraceSessionsRemaining) {
		toSerialize["LicenseGraceSessionsRemaining"] = o.LicenseGraceSessionsRemaining
	}
	if !IsNil(o.LicensedSessionsActive) {
		toSerialize["LicensedSessionsActive"] = o.LicensedSessionsActive
	}
	if !IsNil(o.LicensingGraceHoursLeft) {
		toSerialize["LicensingGraceHoursLeft"] = o.LicensingGraceHoursLeft
	}
	if !IsNil(o.LicensingGracePeriodActive) {
		toSerialize["LicensingGracePeriodActive"] = o.LicensingGracePeriodActive
	}
	if !IsNil(o.PeakConcurrentLicenseUsers) {
		toSerialize["PeakConcurrentLicenseUsers"] = o.PeakConcurrentLicenseUsers
	}
	if !IsNil(o.ReuseMachinesWithoutShutdownInOutageAllowed) {
		toSerialize["ReuseMachinesWithoutShutdownInOutageAllowed"] = o.ReuseMachinesWithoutShutdownInOutageAllowed
	}
	if !IsNil(o.DefaultSecureIcaRequired) {
		toSerialize["DefaultSecureIcaRequired"] = o.DefaultSecureIcaRequired
	}
	if !IsNil(o.TotalUniqueLicenseUsers) {
		toSerialize["TotalUniqueLicenseUsers"] = o.TotalUniqueLicenseUsers
	}
	if !IsNil(o.TrustRequestsSentToTheXmlServicePort) {
		toSerialize["TrustRequestsSentToTheXmlServicePort"] = o.TrustRequestsSentToTheXmlServicePort
	}
	if !IsNil(o.LicensingAlerts) {
		toSerialize["LicensingAlerts"] = o.LicensingAlerts
	}
	return toSerialize, nil
}

type NullableSiteDetailResponseModel struct {
	value *SiteDetailResponseModel
	isSet bool
}

func (v NullableSiteDetailResponseModel) Get() *SiteDetailResponseModel {
	return v.value
}

func (v *NullableSiteDetailResponseModel) Set(val *SiteDetailResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteDetailResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteDetailResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteDetailResponseModel(val *SiteDetailResponseModel) *NullableSiteDetailResponseModel {
	return &NullableSiteDetailResponseModel{value: val, isSet: true}
}

func (v NullableSiteDetailResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteDetailResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


