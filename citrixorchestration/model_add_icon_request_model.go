/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the AddIconRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddIconRequestModel{}

// AddIconRequestModel Request model for adding icons to the site             
type AddIconRequestModel struct {
	// Raw icon data, Base64-encoded.             
	RawData string `json:"RawData"`
	// Icon format.             Must be: `{mime-type};{width}x{height}x{colordepth}`             * _mime-type_ must be `image/png`.  (Other formats may be supported in future.)             * _width_ and _height_ are specified in pixels.             * _colordepth_ (optional) is either `8` or `24`.              example: `\"image/png;32x32x24\"`             Optional.If specified, the formatted icon data  will be contained in the response.             
	IconFormat NullableString `json:"IconFormat,omitempty"`
}

// NewAddIconRequestModel instantiates a new AddIconRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIconRequestModel(rawData string) *AddIconRequestModel {
	this := AddIconRequestModel{}
	this.RawData = rawData
	return &this
}

// NewAddIconRequestModelWithDefaults instantiates a new AddIconRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIconRequestModelWithDefaults() *AddIconRequestModel {
	this := AddIconRequestModel{}
	return &this
}

// GetRawData returns the RawData field value
func (o *AddIconRequestModel) GetRawData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value
// and a boolean to check if the value has been set.
func (o *AddIconRequestModel) GetRawDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawData, true
}

// SetRawData sets field value
func (o *AddIconRequestModel) SetRawData(v string) {
	o.RawData = v
}

// GetIconFormat returns the IconFormat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddIconRequestModel) GetIconFormat() string {
	if o == nil || IsNil(o.IconFormat.Get()) {
		var ret string
		return ret
	}
	return *o.IconFormat.Get()
}

// GetIconFormatOk returns a tuple with the IconFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddIconRequestModel) GetIconFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IconFormat.Get(), o.IconFormat.IsSet()
}

// HasIconFormat returns a boolean if a field has been set.
func (o *AddIconRequestModel) HasIconFormat() bool {
	if o != nil && o.IconFormat.IsSet() {
		return true
	}

	return false
}

// SetIconFormat gets a reference to the given NullableString and assigns it to the IconFormat field.
func (o *AddIconRequestModel) SetIconFormat(v string) {
	o.IconFormat.Set(&v)
}
// SetIconFormatNil sets the value for IconFormat to be an explicit nil
func (o *AddIconRequestModel) SetIconFormatNil() {
	o.IconFormat.Set(nil)
}

// UnsetIconFormat ensures that no value is present for IconFormat, not even an explicit nil
func (o *AddIconRequestModel) UnsetIconFormat() {
	o.IconFormat.Unset()
}

func (o AddIconRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddIconRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["RawData"] = o.RawData
	if o.IconFormat.IsSet() {
		toSerialize["IconFormat"] = o.IconFormat.Get()
	}
	return toSerialize, nil
}

type NullableAddIconRequestModel struct {
	value *AddIconRequestModel
	isSet bool
}

func (v NullableAddIconRequestModel) Get() *AddIconRequestModel {
	return v.value
}

func (v *NullableAddIconRequestModel) Set(val *AddIconRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIconRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIconRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIconRequestModel(val *AddIconRequestModel) *NullableAddIconRequestModel {
	return &NullableAddIconRequestModel{value: val, isSet: true}
}

func (v NullableAddIconRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIconRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


