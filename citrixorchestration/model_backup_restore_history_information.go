/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"time"
)

// checks if the BackupRestoreHistoryInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreHistoryInformation{}

// BackupRestoreHistoryInformation Single history for backup / restore operations
type BackupRestoreHistoryInformation struct {
	// Unique Identifier             
	Uid *int32 `json:"Uid,omitempty"`
	Action BackupRestoreActions `json:"Action"`
	// History entry ID
	HistoryId string `json:"HistoryId"`
	// True if successful, false if not successful
	Successful bool `json:"Successful"`
	// Duration in seconds
	Duration *int32 `json:"Duration,omitempty"`
	// TimeZone offset from UTC
	TimeZoneOffset *int32 `json:"TimeZoneOffset,omitempty"`
	// Date and time the action was started
	DateTime *time.Time `json:"DateTime,omitempty"`
	// Notes about the action
	Notes *string `json:"Notes,omitempty"`
	RestoreType *BackupRestoreRestoreTypes `json:"RestoreType,omitempty"`
	// Filters used (applicable only when the action was restore)
	Filters *string `json:"Filters,omitempty"`
	// With Prerequisites (applicable only when the action was restore)
	WithPrerequisites *bool `json:"WithPrerequisites,omitempty"`
	// Check mode (applicable only when the action was restore)
	CheckMode *bool `json:"CheckMode,omitempty"`
	// Name of schedule to perform backup (applicable only when the action was backup)
	ScheduleName *string `json:"ScheduleName,omitempty"`
	Component *BckRstrAutoConfigComponents `json:"Component,omitempty"`
	// Execution Id
	ExecutionId *string `json:"ExecutionId,omitempty"`
	// Backup name
	BackupName *string `json:"BackupName,omitempty"`
	// Backup File Specification
	BackupFileSpec *string `json:"BackupFileSpec,omitempty"`
	// Related History UID for restore with checkmode set to true
	RelatedUid *int32 `json:"RelatedUid,omitempty"`
	// Related History date for restore with checkmode set to true
	RelatedDate *time.Time `json:"RelatedDate,omitempty"`
	// Related is run as check mode
	RelatedIsCheckMode *bool `json:"RelatedIsCheckMode,omitempty"`
	// Backup is pinned
	Pinned *bool `json:"Pinned,omitempty"`
	// Administrator Name
	AdministratorName *string `json:"AdministratorName,omitempty"`
	// Backup Status Details
	BackupDetails *map[string]string `json:"BackupDetails,omitempty"`
	// Restore Status Details
	RestoreDetails []BackupRestoreRestoreSingleMemberModel `json:"RestoreDetails,omitempty"`
	// Simple Results (such as Get backed up member names)
	SimpleResults []string `json:"SimpleResults,omitempty"`
}

// NewBackupRestoreHistoryInformation instantiates a new BackupRestoreHistoryInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreHistoryInformation(action BackupRestoreActions, historyId string, successful bool) *BackupRestoreHistoryInformation {
	this := BackupRestoreHistoryInformation{}
	this.Action = action
	this.HistoryId = historyId
	this.Successful = successful
	return &this
}

// NewBackupRestoreHistoryInformationWithDefaults instantiates a new BackupRestoreHistoryInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreHistoryInformationWithDefaults() *BackupRestoreHistoryInformation {
	this := BackupRestoreHistoryInformation{}
	return &this
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetUid() int32 {
	if o == nil || IsNil(o.Uid) {
		var ret int32
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetUidOk() (*int32, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given int32 and assigns it to the Uid field.
func (o *BackupRestoreHistoryInformation) SetUid(v int32) {
	o.Uid = &v
}

// GetAction returns the Action field value
func (o *BackupRestoreHistoryInformation) GetAction() BackupRestoreActions {
	if o == nil {
		var ret BackupRestoreActions
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetActionOk() (*BackupRestoreActions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *BackupRestoreHistoryInformation) SetAction(v BackupRestoreActions) {
	o.Action = v
}

// GetHistoryId returns the HistoryId field value
func (o *BackupRestoreHistoryInformation) GetHistoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HistoryId
}

// GetHistoryIdOk returns a tuple with the HistoryId field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetHistoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryId, true
}

// SetHistoryId sets field value
func (o *BackupRestoreHistoryInformation) SetHistoryId(v string) {
	o.HistoryId = v
}

// GetSuccessful returns the Successful field value
func (o *BackupRestoreHistoryInformation) GetSuccessful() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Successful
}

// GetSuccessfulOk returns a tuple with the Successful field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetSuccessfulOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Successful, true
}

// SetSuccessful sets field value
func (o *BackupRestoreHistoryInformation) SetSuccessful(v bool) {
	o.Successful = v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *BackupRestoreHistoryInformation) SetDuration(v int32) {
	o.Duration = &v
}

// GetTimeZoneOffset returns the TimeZoneOffset field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetTimeZoneOffset() int32 {
	if o == nil || IsNil(o.TimeZoneOffset) {
		var ret int32
		return ret
	}
	return *o.TimeZoneOffset
}

// GetTimeZoneOffsetOk returns a tuple with the TimeZoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetTimeZoneOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeZoneOffset) {
		return nil, false
	}
	return o.TimeZoneOffset, true
}

// HasTimeZoneOffset returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasTimeZoneOffset() bool {
	if o != nil && !IsNil(o.TimeZoneOffset) {
		return true
	}

	return false
}

// SetTimeZoneOffset gets a reference to the given int32 and assigns it to the TimeZoneOffset field.
func (o *BackupRestoreHistoryInformation) SetTimeZoneOffset(v int32) {
	o.TimeZoneOffset = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetDateTime() time.Time {
	if o == nil || IsNil(o.DateTime) {
		var ret time.Time
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateTime) {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasDateTime() bool {
	if o != nil && !IsNil(o.DateTime) {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given time.Time and assigns it to the DateTime field.
func (o *BackupRestoreHistoryInformation) SetDateTime(v time.Time) {
	o.DateTime = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BackupRestoreHistoryInformation) SetNotes(v string) {
	o.Notes = &v
}

// GetRestoreType returns the RestoreType field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetRestoreType() BackupRestoreRestoreTypes {
	if o == nil || IsNil(o.RestoreType) {
		var ret BackupRestoreRestoreTypes
		return ret
	}
	return *o.RestoreType
}

// GetRestoreTypeOk returns a tuple with the RestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetRestoreTypeOk() (*BackupRestoreRestoreTypes, bool) {
	if o == nil || IsNil(o.RestoreType) {
		return nil, false
	}
	return o.RestoreType, true
}

// HasRestoreType returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasRestoreType() bool {
	if o != nil && !IsNil(o.RestoreType) {
		return true
	}

	return false
}

// SetRestoreType gets a reference to the given BackupRestoreRestoreTypes and assigns it to the RestoreType field.
func (o *BackupRestoreHistoryInformation) SetRestoreType(v BackupRestoreRestoreTypes) {
	o.RestoreType = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetFilters() string {
	if o == nil || IsNil(o.Filters) {
		var ret string
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetFiltersOk() (*string, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given string and assigns it to the Filters field.
func (o *BackupRestoreHistoryInformation) SetFilters(v string) {
	o.Filters = &v
}

// GetWithPrerequisites returns the WithPrerequisites field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetWithPrerequisites() bool {
	if o == nil || IsNil(o.WithPrerequisites) {
		var ret bool
		return ret
	}
	return *o.WithPrerequisites
}

// GetWithPrerequisitesOk returns a tuple with the WithPrerequisites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetWithPrerequisitesOk() (*bool, bool) {
	if o == nil || IsNil(o.WithPrerequisites) {
		return nil, false
	}
	return o.WithPrerequisites, true
}

// HasWithPrerequisites returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasWithPrerequisites() bool {
	if o != nil && !IsNil(o.WithPrerequisites) {
		return true
	}

	return false
}

// SetWithPrerequisites gets a reference to the given bool and assigns it to the WithPrerequisites field.
func (o *BackupRestoreHistoryInformation) SetWithPrerequisites(v bool) {
	o.WithPrerequisites = &v
}

// GetCheckMode returns the CheckMode field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetCheckMode() bool {
	if o == nil || IsNil(o.CheckMode) {
		var ret bool
		return ret
	}
	return *o.CheckMode
}

// GetCheckModeOk returns a tuple with the CheckMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetCheckModeOk() (*bool, bool) {
	if o == nil || IsNil(o.CheckMode) {
		return nil, false
	}
	return o.CheckMode, true
}

// HasCheckMode returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasCheckMode() bool {
	if o != nil && !IsNil(o.CheckMode) {
		return true
	}

	return false
}

// SetCheckMode gets a reference to the given bool and assigns it to the CheckMode field.
func (o *BackupRestoreHistoryInformation) SetCheckMode(v bool) {
	o.CheckMode = &v
}

// GetScheduleName returns the ScheduleName field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetScheduleName() string {
	if o == nil || IsNil(o.ScheduleName) {
		var ret string
		return ret
	}
	return *o.ScheduleName
}

// GetScheduleNameOk returns a tuple with the ScheduleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetScheduleNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleName) {
		return nil, false
	}
	return o.ScheduleName, true
}

// HasScheduleName returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasScheduleName() bool {
	if o != nil && !IsNil(o.ScheduleName) {
		return true
	}

	return false
}

// SetScheduleName gets a reference to the given string and assigns it to the ScheduleName field.
func (o *BackupRestoreHistoryInformation) SetScheduleName(v string) {
	o.ScheduleName = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetComponent() BckRstrAutoConfigComponents {
	if o == nil || IsNil(o.Component) {
		var ret BckRstrAutoConfigComponents
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetComponentOk() (*BckRstrAutoConfigComponents, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given BckRstrAutoConfigComponents and assigns it to the Component field.
func (o *BackupRestoreHistoryInformation) SetComponent(v BckRstrAutoConfigComponents) {
	o.Component = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *BackupRestoreHistoryInformation) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetBackupName returns the BackupName field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetBackupName() string {
	if o == nil || IsNil(o.BackupName) {
		var ret string
		return ret
	}
	return *o.BackupName
}

// GetBackupNameOk returns a tuple with the BackupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetBackupNameOk() (*string, bool) {
	if o == nil || IsNil(o.BackupName) {
		return nil, false
	}
	return o.BackupName, true
}

// HasBackupName returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasBackupName() bool {
	if o != nil && !IsNil(o.BackupName) {
		return true
	}

	return false
}

// SetBackupName gets a reference to the given string and assigns it to the BackupName field.
func (o *BackupRestoreHistoryInformation) SetBackupName(v string) {
	o.BackupName = &v
}

// GetBackupFileSpec returns the BackupFileSpec field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetBackupFileSpec() string {
	if o == nil || IsNil(o.BackupFileSpec) {
		var ret string
		return ret
	}
	return *o.BackupFileSpec
}

// GetBackupFileSpecOk returns a tuple with the BackupFileSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetBackupFileSpecOk() (*string, bool) {
	if o == nil || IsNil(o.BackupFileSpec) {
		return nil, false
	}
	return o.BackupFileSpec, true
}

// HasBackupFileSpec returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasBackupFileSpec() bool {
	if o != nil && !IsNil(o.BackupFileSpec) {
		return true
	}

	return false
}

// SetBackupFileSpec gets a reference to the given string and assigns it to the BackupFileSpec field.
func (o *BackupRestoreHistoryInformation) SetBackupFileSpec(v string) {
	o.BackupFileSpec = &v
}

// GetRelatedUid returns the RelatedUid field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetRelatedUid() int32 {
	if o == nil || IsNil(o.RelatedUid) {
		var ret int32
		return ret
	}
	return *o.RelatedUid
}

// GetRelatedUidOk returns a tuple with the RelatedUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetRelatedUidOk() (*int32, bool) {
	if o == nil || IsNil(o.RelatedUid) {
		return nil, false
	}
	return o.RelatedUid, true
}

// HasRelatedUid returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasRelatedUid() bool {
	if o != nil && !IsNil(o.RelatedUid) {
		return true
	}

	return false
}

// SetRelatedUid gets a reference to the given int32 and assigns it to the RelatedUid field.
func (o *BackupRestoreHistoryInformation) SetRelatedUid(v int32) {
	o.RelatedUid = &v
}

// GetRelatedDate returns the RelatedDate field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetRelatedDate() time.Time {
	if o == nil || IsNil(o.RelatedDate) {
		var ret time.Time
		return ret
	}
	return *o.RelatedDate
}

// GetRelatedDateOk returns a tuple with the RelatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetRelatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RelatedDate) {
		return nil, false
	}
	return o.RelatedDate, true
}

// HasRelatedDate returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasRelatedDate() bool {
	if o != nil && !IsNil(o.RelatedDate) {
		return true
	}

	return false
}

// SetRelatedDate gets a reference to the given time.Time and assigns it to the RelatedDate field.
func (o *BackupRestoreHistoryInformation) SetRelatedDate(v time.Time) {
	o.RelatedDate = &v
}

// GetRelatedIsCheckMode returns the RelatedIsCheckMode field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetRelatedIsCheckMode() bool {
	if o == nil || IsNil(o.RelatedIsCheckMode) {
		var ret bool
		return ret
	}
	return *o.RelatedIsCheckMode
}

// GetRelatedIsCheckModeOk returns a tuple with the RelatedIsCheckMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetRelatedIsCheckModeOk() (*bool, bool) {
	if o == nil || IsNil(o.RelatedIsCheckMode) {
		return nil, false
	}
	return o.RelatedIsCheckMode, true
}

// HasRelatedIsCheckMode returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasRelatedIsCheckMode() bool {
	if o != nil && !IsNil(o.RelatedIsCheckMode) {
		return true
	}

	return false
}

// SetRelatedIsCheckMode gets a reference to the given bool and assigns it to the RelatedIsCheckMode field.
func (o *BackupRestoreHistoryInformation) SetRelatedIsCheckMode(v bool) {
	o.RelatedIsCheckMode = &v
}

// GetPinned returns the Pinned field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetPinned() bool {
	if o == nil || IsNil(o.Pinned) {
		var ret bool
		return ret
	}
	return *o.Pinned
}

// GetPinnedOk returns a tuple with the Pinned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetPinnedOk() (*bool, bool) {
	if o == nil || IsNil(o.Pinned) {
		return nil, false
	}
	return o.Pinned, true
}

// HasPinned returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasPinned() bool {
	if o != nil && !IsNil(o.Pinned) {
		return true
	}

	return false
}

// SetPinned gets a reference to the given bool and assigns it to the Pinned field.
func (o *BackupRestoreHistoryInformation) SetPinned(v bool) {
	o.Pinned = &v
}

// GetAdministratorName returns the AdministratorName field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetAdministratorName() string {
	if o == nil || IsNil(o.AdministratorName) {
		var ret string
		return ret
	}
	return *o.AdministratorName
}

// GetAdministratorNameOk returns a tuple with the AdministratorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetAdministratorNameOk() (*string, bool) {
	if o == nil || IsNil(o.AdministratorName) {
		return nil, false
	}
	return o.AdministratorName, true
}

// HasAdministratorName returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasAdministratorName() bool {
	if o != nil && !IsNil(o.AdministratorName) {
		return true
	}

	return false
}

// SetAdministratorName gets a reference to the given string and assigns it to the AdministratorName field.
func (o *BackupRestoreHistoryInformation) SetAdministratorName(v string) {
	o.AdministratorName = &v
}

// GetBackupDetails returns the BackupDetails field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetBackupDetails() map[string]string {
	if o == nil || IsNil(o.BackupDetails) {
		var ret map[string]string
		return ret
	}
	return *o.BackupDetails
}

// GetBackupDetailsOk returns a tuple with the BackupDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetBackupDetailsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.BackupDetails) {
		return nil, false
	}
	return o.BackupDetails, true
}

// HasBackupDetails returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasBackupDetails() bool {
	if o != nil && !IsNil(o.BackupDetails) {
		return true
	}

	return false
}

// SetBackupDetails gets a reference to the given map[string]string and assigns it to the BackupDetails field.
func (o *BackupRestoreHistoryInformation) SetBackupDetails(v map[string]string) {
	o.BackupDetails = &v
}

// GetRestoreDetails returns the RestoreDetails field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetRestoreDetails() []BackupRestoreRestoreSingleMemberModel {
	if o == nil || IsNil(o.RestoreDetails) {
		var ret []BackupRestoreRestoreSingleMemberModel
		return ret
	}
	return o.RestoreDetails
}

// GetRestoreDetailsOk returns a tuple with the RestoreDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetRestoreDetailsOk() ([]BackupRestoreRestoreSingleMemberModel, bool) {
	if o == nil || IsNil(o.RestoreDetails) {
		return nil, false
	}
	return o.RestoreDetails, true
}

// HasRestoreDetails returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasRestoreDetails() bool {
	if o != nil && !IsNil(o.RestoreDetails) {
		return true
	}

	return false
}

// SetRestoreDetails gets a reference to the given []BackupRestoreRestoreSingleMemberModel and assigns it to the RestoreDetails field.
func (o *BackupRestoreHistoryInformation) SetRestoreDetails(v []BackupRestoreRestoreSingleMemberModel) {
	o.RestoreDetails = v
}

// GetSimpleResults returns the SimpleResults field value if set, zero value otherwise.
func (o *BackupRestoreHistoryInformation) GetSimpleResults() []string {
	if o == nil || IsNil(o.SimpleResults) {
		var ret []string
		return ret
	}
	return o.SimpleResults
}

// GetSimpleResultsOk returns a tuple with the SimpleResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreHistoryInformation) GetSimpleResultsOk() ([]string, bool) {
	if o == nil || IsNil(o.SimpleResults) {
		return nil, false
	}
	return o.SimpleResults, true
}

// HasSimpleResults returns a boolean if a field has been set.
func (o *BackupRestoreHistoryInformation) HasSimpleResults() bool {
	if o != nil && !IsNil(o.SimpleResults) {
		return true
	}

	return false
}

// SetSimpleResults gets a reference to the given []string and assigns it to the SimpleResults field.
func (o *BackupRestoreHistoryInformation) SetSimpleResults(v []string) {
	o.SimpleResults = v
}

func (o BackupRestoreHistoryInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreHistoryInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uid) {
		toSerialize["Uid"] = o.Uid
	}
	toSerialize["Action"] = o.Action
	toSerialize["HistoryId"] = o.HistoryId
	toSerialize["Successful"] = o.Successful
	if !IsNil(o.Duration) {
		toSerialize["Duration"] = o.Duration
	}
	if !IsNil(o.TimeZoneOffset) {
		toSerialize["TimeZoneOffset"] = o.TimeZoneOffset
	}
	if !IsNil(o.DateTime) {
		toSerialize["DateTime"] = o.DateTime
	}
	if !IsNil(o.Notes) {
		toSerialize["Notes"] = o.Notes
	}
	if !IsNil(o.RestoreType) {
		toSerialize["RestoreType"] = o.RestoreType
	}
	if !IsNil(o.Filters) {
		toSerialize["Filters"] = o.Filters
	}
	if !IsNil(o.WithPrerequisites) {
		toSerialize["WithPrerequisites"] = o.WithPrerequisites
	}
	if !IsNil(o.CheckMode) {
		toSerialize["CheckMode"] = o.CheckMode
	}
	if !IsNil(o.ScheduleName) {
		toSerialize["ScheduleName"] = o.ScheduleName
	}
	if !IsNil(o.Component) {
		toSerialize["Component"] = o.Component
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["ExecutionId"] = o.ExecutionId
	}
	if !IsNil(o.BackupName) {
		toSerialize["BackupName"] = o.BackupName
	}
	if !IsNil(o.BackupFileSpec) {
		toSerialize["BackupFileSpec"] = o.BackupFileSpec
	}
	if !IsNil(o.RelatedUid) {
		toSerialize["RelatedUid"] = o.RelatedUid
	}
	if !IsNil(o.RelatedDate) {
		toSerialize["RelatedDate"] = o.RelatedDate
	}
	if !IsNil(o.RelatedIsCheckMode) {
		toSerialize["RelatedIsCheckMode"] = o.RelatedIsCheckMode
	}
	if !IsNil(o.Pinned) {
		toSerialize["Pinned"] = o.Pinned
	}
	if !IsNil(o.AdministratorName) {
		toSerialize["AdministratorName"] = o.AdministratorName
	}
	if !IsNil(o.BackupDetails) {
		toSerialize["BackupDetails"] = o.BackupDetails
	}
	if !IsNil(o.RestoreDetails) {
		toSerialize["RestoreDetails"] = o.RestoreDetails
	}
	if !IsNil(o.SimpleResults) {
		toSerialize["SimpleResults"] = o.SimpleResults
	}
	return toSerialize, nil
}

type NullableBackupRestoreHistoryInformation struct {
	value *BackupRestoreHistoryInformation
	isSet bool
}

func (v NullableBackupRestoreHistoryInformation) Get() *BackupRestoreHistoryInformation {
	return v.value
}

func (v *NullableBackupRestoreHistoryInformation) Set(val *BackupRestoreHistoryInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreHistoryInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreHistoryInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreHistoryInformation(val *BackupRestoreHistoryInformation) *NullableBackupRestoreHistoryInformation {
	return &NullableBackupRestoreHistoryInformation{value: val, isSet: true}
}

func (v NullableBackupRestoreHistoryInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreHistoryInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


