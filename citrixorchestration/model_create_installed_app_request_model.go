/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the CreateInstalledAppRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstalledAppRequestModel{}

// CreateInstalledAppRequestModel Request object for installed application properties.
type CreateInstalledAppRequestModel struct {
	// Specifies the command-line arguments to use when launching the executable. Environment variables can be used.
	CommandLineArguments NullableString `json:"CommandLineArguments,omitempty"`
	// Specifies the name of the executable file to launch. The full path need not be provided if it's already in the path. Environment variables can also be used.
	CommandLineExecutable string `json:"CommandLineExecutable"`
	// Specifies which working directory the executable is launched from. Environment variables can be used.
	WorkingDirectory NullableString `json:"WorkingDirectory,omitempty"`
}

// NewCreateInstalledAppRequestModel instantiates a new CreateInstalledAppRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstalledAppRequestModel(commandLineExecutable string) *CreateInstalledAppRequestModel {
	this := CreateInstalledAppRequestModel{}
	this.CommandLineExecutable = commandLineExecutable
	return &this
}

// NewCreateInstalledAppRequestModelWithDefaults instantiates a new CreateInstalledAppRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstalledAppRequestModelWithDefaults() *CreateInstalledAppRequestModel {
	this := CreateInstalledAppRequestModel{}
	return &this
}

// GetCommandLineArguments returns the CommandLineArguments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInstalledAppRequestModel) GetCommandLineArguments() string {
	if o == nil || IsNil(o.CommandLineArguments.Get()) {
		var ret string
		return ret
	}
	return *o.CommandLineArguments.Get()
}

// GetCommandLineArgumentsOk returns a tuple with the CommandLineArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInstalledAppRequestModel) GetCommandLineArgumentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommandLineArguments.Get(), o.CommandLineArguments.IsSet()
}

// HasCommandLineArguments returns a boolean if a field has been set.
func (o *CreateInstalledAppRequestModel) HasCommandLineArguments() bool {
	if o != nil && o.CommandLineArguments.IsSet() {
		return true
	}

	return false
}

// SetCommandLineArguments gets a reference to the given NullableString and assigns it to the CommandLineArguments field.
func (o *CreateInstalledAppRequestModel) SetCommandLineArguments(v string) {
	o.CommandLineArguments.Set(&v)
}

// SetCommandLineArgumentsNil sets the value for CommandLineArguments to be an explicit nil
func (o *CreateInstalledAppRequestModel) SetCommandLineArgumentsNil() {
	o.CommandLineArguments.Set(nil)
}

// UnsetCommandLineArguments ensures that no value is present for CommandLineArguments, not even an explicit nil
func (o *CreateInstalledAppRequestModel) UnsetCommandLineArguments() {
	o.CommandLineArguments.Unset()
}

// GetCommandLineExecutable returns the CommandLineExecutable field value
func (o *CreateInstalledAppRequestModel) GetCommandLineExecutable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommandLineExecutable
}

// GetCommandLineExecutableOk returns a tuple with the CommandLineExecutable field value
// and a boolean to check if the value has been set.
func (o *CreateInstalledAppRequestModel) GetCommandLineExecutableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommandLineExecutable, true
}

// SetCommandLineExecutable sets field value
func (o *CreateInstalledAppRequestModel) SetCommandLineExecutable(v string) {
	o.CommandLineExecutable = v
}

// GetWorkingDirectory returns the WorkingDirectory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateInstalledAppRequestModel) GetWorkingDirectory() string {
	if o == nil || IsNil(o.WorkingDirectory.Get()) {
		var ret string
		return ret
	}
	return *o.WorkingDirectory.Get()
}

// GetWorkingDirectoryOk returns a tuple with the WorkingDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateInstalledAppRequestModel) GetWorkingDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkingDirectory.Get(), o.WorkingDirectory.IsSet()
}

// HasWorkingDirectory returns a boolean if a field has been set.
func (o *CreateInstalledAppRequestModel) HasWorkingDirectory() bool {
	if o != nil && o.WorkingDirectory.IsSet() {
		return true
	}

	return false
}

// SetWorkingDirectory gets a reference to the given NullableString and assigns it to the WorkingDirectory field.
func (o *CreateInstalledAppRequestModel) SetWorkingDirectory(v string) {
	o.WorkingDirectory.Set(&v)
}

// SetWorkingDirectoryNil sets the value for WorkingDirectory to be an explicit nil
func (o *CreateInstalledAppRequestModel) SetWorkingDirectoryNil() {
	o.WorkingDirectory.Set(nil)
}

// UnsetWorkingDirectory ensures that no value is present for WorkingDirectory, not even an explicit nil
func (o *CreateInstalledAppRequestModel) UnsetWorkingDirectory() {
	o.WorkingDirectory.Unset()
}

func (o CreateInstalledAppRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInstalledAppRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CommandLineArguments.IsSet() {
		toSerialize["CommandLineArguments"] = o.CommandLineArguments.Get()
	}
	toSerialize["CommandLineExecutable"] = o.CommandLineExecutable
	if o.WorkingDirectory.IsSet() {
		toSerialize["WorkingDirectory"] = o.WorkingDirectory.Get()
	}
	return toSerialize, nil
}

type NullableCreateInstalledAppRequestModel struct {
	value *CreateInstalledAppRequestModel
	isSet bool
}

func (v NullableCreateInstalledAppRequestModel) Get() *CreateInstalledAppRequestModel {
	return v.value
}

func (v *NullableCreateInstalledAppRequestModel) Set(val *CreateInstalledAppRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstalledAppRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstalledAppRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstalledAppRequestModel(val *CreateInstalledAppRequestModel) *NullableCreateInstalledAppRequestModel {
	return &NullableCreateInstalledAppRequestModel{value: val, isSet: true}
}

func (v NullableCreateInstalledAppRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstalledAppRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
