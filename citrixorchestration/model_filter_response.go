/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the FilterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilterResponse{}

// FilterResponse Filter response.
type FilterResponse struct {
	// Policy GUID.
	PolicyGuid string `json:"policyGuid"`
	// The filter type.
	FilterType *string `json:"filterType,omitempty"`
	// The filter Guid.
	FilterGuid string `json:"filterGuid"`
	// Allow or deny
	IsAllowed bool `json:"isAllowed"`
	// Enabled or disabled
	IsEnabled bool `json:"isEnabled"`
	// Serialized JSON string.
	FilterData *string `json:"filterData,omitempty"`
}

// NewFilterResponse instantiates a new FilterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilterResponse(policyGuid string, filterGuid string, isAllowed bool, isEnabled bool) *FilterResponse {
	this := FilterResponse{}
	this.PolicyGuid = policyGuid
	this.FilterGuid = filterGuid
	this.IsAllowed = isAllowed
	this.IsEnabled = isEnabled
	return &this
}

// NewFilterResponseWithDefaults instantiates a new FilterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilterResponseWithDefaults() *FilterResponse {
	this := FilterResponse{}
	return &this
}

// GetPolicyGuid returns the PolicyGuid field value
func (o *FilterResponse) GetPolicyGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyGuid
}

// GetPolicyGuidOk returns a tuple with the PolicyGuid field value
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetPolicyGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyGuid, true
}

// SetPolicyGuid sets field value
func (o *FilterResponse) SetPolicyGuid(v string) {
	o.PolicyGuid = v
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *FilterResponse) GetFilterType() string {
	if o == nil || IsNil(o.FilterType) {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetFilterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterType) {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *FilterResponse) HasFilterType() bool {
	if o != nil && !IsNil(o.FilterType) {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *FilterResponse) SetFilterType(v string) {
	o.FilterType = &v
}

// GetFilterGuid returns the FilterGuid field value
func (o *FilterResponse) GetFilterGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterGuid
}

// GetFilterGuidOk returns a tuple with the FilterGuid field value
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetFilterGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterGuid, true
}

// SetFilterGuid sets field value
func (o *FilterResponse) SetFilterGuid(v string) {
	o.FilterGuid = v
}

// GetIsAllowed returns the IsAllowed field value
func (o *FilterResponse) GetIsAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAllowed
}

// GetIsAllowedOk returns a tuple with the IsAllowed field value
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetIsAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAllowed, true
}

// SetIsAllowed sets field value
func (o *FilterResponse) SetIsAllowed(v bool) {
	o.IsAllowed = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *FilterResponse) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *FilterResponse) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetFilterData returns the FilterData field value if set, zero value otherwise.
func (o *FilterResponse) GetFilterData() string {
	if o == nil || IsNil(o.FilterData) {
		var ret string
		return ret
	}
	return *o.FilterData
}

// GetFilterDataOk returns a tuple with the FilterData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterResponse) GetFilterDataOk() (*string, bool) {
	if o == nil || IsNil(o.FilterData) {
		return nil, false
	}
	return o.FilterData, true
}

// HasFilterData returns a boolean if a field has been set.
func (o *FilterResponse) HasFilterData() bool {
	if o != nil && !IsNil(o.FilterData) {
		return true
	}

	return false
}

// SetFilterData gets a reference to the given string and assigns it to the FilterData field.
func (o *FilterResponse) SetFilterData(v string) {
	o.FilterData = &v
}

func (o FilterResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policyGuid"] = o.PolicyGuid
	if !IsNil(o.FilterType) {
		toSerialize["filterType"] = o.FilterType
	}
	toSerialize["filterGuid"] = o.FilterGuid
	toSerialize["isAllowed"] = o.IsAllowed
	toSerialize["isEnabled"] = o.IsEnabled
	if !IsNil(o.FilterData) {
		toSerialize["filterData"] = o.FilterData
	}
	return toSerialize, nil
}

type NullableFilterResponse struct {
	value *FilterResponse
	isSet bool
}

func (v NullableFilterResponse) Get() *FilterResponse {
	return v.value
}

func (v *NullableFilterResponse) Set(val *FilterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterResponse(val *FilterResponse) *NullableFilterResponse {
	return &NullableFilterResponse{value: val, isSet: true}
}

func (v NullableFilterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


