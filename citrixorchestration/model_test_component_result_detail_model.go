/*
Citrix Virtual Apps and Desktops REST API TECHPREVIEW

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: techpreview
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the TestComponentResultDetailModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestComponentResultDetailModel{}

// TestComponentResultDetailModel Represents one piece of test result explanatory data
type TestComponentResultDetailModel struct {
	// The service source of any error information present in this record. Typically, this will be the service that ran the test.  In some cases, particularly where an orphaned object target was detected and the test could not be run at all, the service source may be the framework itself, EnvTestService.
	ServiceSource *string `json:"ServiceSource,omitempty"`
	// The severity of the problem.
	Serverity *string `json:"Serverity,omitempty"`
	// The explanation of the problem.
	Explanation *string `json:"Explanation,omitempty"`
	// The action to be take to fix this problem.
	Action *string `json:"Action,omitempty"`
}

// NewTestComponentResultDetailModel instantiates a new TestComponentResultDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestComponentResultDetailModel() *TestComponentResultDetailModel {
	this := TestComponentResultDetailModel{}
	return &this
}

// NewTestComponentResultDetailModelWithDefaults instantiates a new TestComponentResultDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestComponentResultDetailModelWithDefaults() *TestComponentResultDetailModel {
	this := TestComponentResultDetailModel{}
	return &this
}

// GetServiceSource returns the ServiceSource field value if set, zero value otherwise.
func (o *TestComponentResultDetailModel) GetServiceSource() string {
	if o == nil || IsNil(o.ServiceSource) {
		var ret string
		return ret
	}
	return *o.ServiceSource
}

// GetServiceSourceOk returns a tuple with the ServiceSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestComponentResultDetailModel) GetServiceSourceOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceSource) {
		return nil, false
	}
	return o.ServiceSource, true
}

// HasServiceSource returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasServiceSource() bool {
	if o != nil && !IsNil(o.ServiceSource) {
		return true
	}

	return false
}

// SetServiceSource gets a reference to the given string and assigns it to the ServiceSource field.
func (o *TestComponentResultDetailModel) SetServiceSource(v string) {
	o.ServiceSource = &v
}

// GetServerity returns the Serverity field value if set, zero value otherwise.
func (o *TestComponentResultDetailModel) GetServerity() string {
	if o == nil || IsNil(o.Serverity) {
		var ret string
		return ret
	}
	return *o.Serverity
}

// GetServerityOk returns a tuple with the Serverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestComponentResultDetailModel) GetServerityOk() (*string, bool) {
	if o == nil || IsNil(o.Serverity) {
		return nil, false
	}
	return o.Serverity, true
}

// HasServerity returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasServerity() bool {
	if o != nil && !IsNil(o.Serverity) {
		return true
	}

	return false
}

// SetServerity gets a reference to the given string and assigns it to the Serverity field.
func (o *TestComponentResultDetailModel) SetServerity(v string) {
	o.Serverity = &v
}

// GetExplanation returns the Explanation field value if set, zero value otherwise.
func (o *TestComponentResultDetailModel) GetExplanation() string {
	if o == nil || IsNil(o.Explanation) {
		var ret string
		return ret
	}
	return *o.Explanation
}

// GetExplanationOk returns a tuple with the Explanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestComponentResultDetailModel) GetExplanationOk() (*string, bool) {
	if o == nil || IsNil(o.Explanation) {
		return nil, false
	}
	return o.Explanation, true
}

// HasExplanation returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasExplanation() bool {
	if o != nil && !IsNil(o.Explanation) {
		return true
	}

	return false
}

// SetExplanation gets a reference to the given string and assigns it to the Explanation field.
func (o *TestComponentResultDetailModel) SetExplanation(v string) {
	o.Explanation = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *TestComponentResultDetailModel) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestComponentResultDetailModel) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *TestComponentResultDetailModel) SetAction(v string) {
	o.Action = &v
}

func (o TestComponentResultDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestComponentResultDetailModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceSource) {
		toSerialize["ServiceSource"] = o.ServiceSource
	}
	if !IsNil(o.Serverity) {
		toSerialize["Serverity"] = o.Serverity
	}
	if !IsNil(o.Explanation) {
		toSerialize["Explanation"] = o.Explanation
	}
	if !IsNil(o.Action) {
		toSerialize["Action"] = o.Action
	}
	return toSerialize, nil
}

type NullableTestComponentResultDetailModel struct {
	value *TestComponentResultDetailModel
	isSet bool
}

func (v NullableTestComponentResultDetailModel) Get() *TestComponentResultDetailModel {
	return v.value
}

func (v *NullableTestComponentResultDetailModel) Set(val *TestComponentResultDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestComponentResultDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestComponentResultDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestComponentResultDetailModel(val *TestComponentResultDetailModel) *NullableTestComponentResultDetailModel {
	return &NullableTestComponentResultDetailModel{value: val, isSet: true}
}

func (v NullableTestComponentResultDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestComponentResultDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


