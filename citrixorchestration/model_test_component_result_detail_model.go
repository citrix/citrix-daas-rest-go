/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the TestComponentResultDetailModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestComponentResultDetailModel{}

// TestComponentResultDetailModel Represents one piece of test result explanatory data
type TestComponentResultDetailModel struct {
	// The service source of any error information present in this record. Typically, this will be the service that ran the test.  In some cases, particularly where an orphaned object target was detected and the test could not be run at all, the service source may be the framework itself, EnvTestService.
	ServiceSource NullableString `json:"ServiceSource,omitempty"`
	// The severity of the problem.
	Serverity NullableString `json:"Serverity,omitempty"`
	// The explanation of the problem.
	Explanation NullableString `json:"Explanation,omitempty"`
	// The action to be take to fix this problem.
	Action NullableString `json:"Action,omitempty"`
}

// NewTestComponentResultDetailModel instantiates a new TestComponentResultDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestComponentResultDetailModel() *TestComponentResultDetailModel {
	this := TestComponentResultDetailModel{}
	return &this
}

// NewTestComponentResultDetailModelWithDefaults instantiates a new TestComponentResultDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestComponentResultDetailModelWithDefaults() *TestComponentResultDetailModel {
	this := TestComponentResultDetailModel{}
	return &this
}

// GetServiceSource returns the ServiceSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestComponentResultDetailModel) GetServiceSource() string {
	if o == nil || IsNil(o.ServiceSource.Get()) {
		var ret string
		return ret
	}
	return *o.ServiceSource.Get()
}

// GetServiceSourceOk returns a tuple with the ServiceSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestComponentResultDetailModel) GetServiceSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceSource.Get(), o.ServiceSource.IsSet()
}

// HasServiceSource returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasServiceSource() bool {
	if o != nil && o.ServiceSource.IsSet() {
		return true
	}

	return false
}

// SetServiceSource gets a reference to the given NullableString and assigns it to the ServiceSource field.
func (o *TestComponentResultDetailModel) SetServiceSource(v string) {
	o.ServiceSource.Set(&v)
}
// SetServiceSourceNil sets the value for ServiceSource to be an explicit nil
func (o *TestComponentResultDetailModel) SetServiceSourceNil() {
	o.ServiceSource.Set(nil)
}

// UnsetServiceSource ensures that no value is present for ServiceSource, not even an explicit nil
func (o *TestComponentResultDetailModel) UnsetServiceSource() {
	o.ServiceSource.Unset()
}

// GetServerity returns the Serverity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestComponentResultDetailModel) GetServerity() string {
	if o == nil || IsNil(o.Serverity.Get()) {
		var ret string
		return ret
	}
	return *o.Serverity.Get()
}

// GetServerityOk returns a tuple with the Serverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestComponentResultDetailModel) GetServerityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Serverity.Get(), o.Serverity.IsSet()
}

// HasServerity returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasServerity() bool {
	if o != nil && o.Serverity.IsSet() {
		return true
	}

	return false
}

// SetServerity gets a reference to the given NullableString and assigns it to the Serverity field.
func (o *TestComponentResultDetailModel) SetServerity(v string) {
	o.Serverity.Set(&v)
}
// SetServerityNil sets the value for Serverity to be an explicit nil
func (o *TestComponentResultDetailModel) SetServerityNil() {
	o.Serverity.Set(nil)
}

// UnsetServerity ensures that no value is present for Serverity, not even an explicit nil
func (o *TestComponentResultDetailModel) UnsetServerity() {
	o.Serverity.Unset()
}

// GetExplanation returns the Explanation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestComponentResultDetailModel) GetExplanation() string {
	if o == nil || IsNil(o.Explanation.Get()) {
		var ret string
		return ret
	}
	return *o.Explanation.Get()
}

// GetExplanationOk returns a tuple with the Explanation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestComponentResultDetailModel) GetExplanationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Explanation.Get(), o.Explanation.IsSet()
}

// HasExplanation returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasExplanation() bool {
	if o != nil && o.Explanation.IsSet() {
		return true
	}

	return false
}

// SetExplanation gets a reference to the given NullableString and assigns it to the Explanation field.
func (o *TestComponentResultDetailModel) SetExplanation(v string) {
	o.Explanation.Set(&v)
}
// SetExplanationNil sets the value for Explanation to be an explicit nil
func (o *TestComponentResultDetailModel) SetExplanationNil() {
	o.Explanation.Set(nil)
}

// UnsetExplanation ensures that no value is present for Explanation, not even an explicit nil
func (o *TestComponentResultDetailModel) UnsetExplanation() {
	o.Explanation.Unset()
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestComponentResultDetailModel) GetAction() string {
	if o == nil || IsNil(o.Action.Get()) {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestComponentResultDetailModel) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *TestComponentResultDetailModel) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *TestComponentResultDetailModel) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *TestComponentResultDetailModel) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *TestComponentResultDetailModel) UnsetAction() {
	o.Action.Unset()
}

func (o TestComponentResultDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestComponentResultDetailModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceSource.IsSet() {
		toSerialize["ServiceSource"] = o.ServiceSource.Get()
	}
	if o.Serverity.IsSet() {
		toSerialize["Serverity"] = o.Serverity.Get()
	}
	if o.Explanation.IsSet() {
		toSerialize["Explanation"] = o.Explanation.Get()
	}
	if o.Action.IsSet() {
		toSerialize["Action"] = o.Action.Get()
	}
	return toSerialize, nil
}

type NullableTestComponentResultDetailModel struct {
	value *TestComponentResultDetailModel
	isSet bool
}

func (v NullableTestComponentResultDetailModel) Get() *TestComponentResultDetailModel {
	return v.value
}

func (v *NullableTestComponentResultDetailModel) Set(val *TestComponentResultDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestComponentResultDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestComponentResultDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestComponentResultDetailModel(val *TestComponentResultDetailModel) *NullableTestComponentResultDetailModel {
	return &NullableTestComponentResultDetailModel{value: val, isSet: true}
}

func (v NullableTestComponentResultDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestComponentResultDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


