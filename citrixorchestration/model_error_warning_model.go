/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the ErrorWarningModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorWarningModel{}

// ErrorWarningModel Model for error and warning counts.
type ErrorWarningModel struct {
	NumberOfErrors   *int32 `json:"NumberOfErrors,omitempty"`
	NumberOfWarnings *int32 `json:"NumberOfWarnings,omitempty"`
}

// NewErrorWarningModel instantiates a new ErrorWarningModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorWarningModel() *ErrorWarningModel {
	this := ErrorWarningModel{}
	return &this
}

// NewErrorWarningModelWithDefaults instantiates a new ErrorWarningModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorWarningModelWithDefaults() *ErrorWarningModel {
	this := ErrorWarningModel{}
	return &this
}

// GetNumberOfErrors returns the NumberOfErrors field value if set, zero value otherwise.
func (o *ErrorWarningModel) GetNumberOfErrors() int32 {
	if o == nil || IsNil(o.NumberOfErrors) {
		var ret int32
		return ret
	}
	return *o.NumberOfErrors
}

// GetNumberOfErrorsOk returns a tuple with the NumberOfErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorWarningModel) GetNumberOfErrorsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfErrors) {
		return nil, false
	}
	return o.NumberOfErrors, true
}

// HasNumberOfErrors returns a boolean if a field has been set.
func (o *ErrorWarningModel) HasNumberOfErrors() bool {
	if o != nil && !IsNil(o.NumberOfErrors) {
		return true
	}

	return false
}

// SetNumberOfErrors gets a reference to the given int32 and assigns it to the NumberOfErrors field.
func (o *ErrorWarningModel) SetNumberOfErrors(v int32) {
	o.NumberOfErrors = &v
}

// GetNumberOfWarnings returns the NumberOfWarnings field value if set, zero value otherwise.
func (o *ErrorWarningModel) GetNumberOfWarnings() int32 {
	if o == nil || IsNil(o.NumberOfWarnings) {
		var ret int32
		return ret
	}
	return *o.NumberOfWarnings
}

// GetNumberOfWarningsOk returns a tuple with the NumberOfWarnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorWarningModel) GetNumberOfWarningsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfWarnings) {
		return nil, false
	}
	return o.NumberOfWarnings, true
}

// HasNumberOfWarnings returns a boolean if a field has been set.
func (o *ErrorWarningModel) HasNumberOfWarnings() bool {
	if o != nil && !IsNil(o.NumberOfWarnings) {
		return true
	}

	return false
}

// SetNumberOfWarnings gets a reference to the given int32 and assigns it to the NumberOfWarnings field.
func (o *ErrorWarningModel) SetNumberOfWarnings(v int32) {
	o.NumberOfWarnings = &v
}

func (o ErrorWarningModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorWarningModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfErrors) {
		toSerialize["NumberOfErrors"] = o.NumberOfErrors
	}
	if !IsNil(o.NumberOfWarnings) {
		toSerialize["NumberOfWarnings"] = o.NumberOfWarnings
	}
	return toSerialize, nil
}

type NullableErrorWarningModel struct {
	value *ErrorWarningModel
	isSet bool
}

func (v NullableErrorWarningModel) Get() *ErrorWarningModel {
	return v.value
}

func (v *NullableErrorWarningModel) Set(val *ErrorWarningModel) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorWarningModel) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorWarningModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorWarningModel(val *ErrorWarningModel) *NullableErrorWarningModel {
	return &NullableErrorWarningModel{value: val, isSet: true}
}

func (v NullableErrorWarningModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorWarningModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
