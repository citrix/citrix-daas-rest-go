/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the TemplateResponseContract type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateResponseContract{}

// TemplateResponseContract Template
type TemplateResponseContract struct {
	// Template name as identifier
	TemplateName NullableString `json:"TemplateName,omitempty"`
	// Is template builtin.
	IsReadOnly *bool `json:"IsReadOnly,omitempty"`
	// Template description
	Description NullableString `json:"Description,omitempty"`
	// Settings
	Settings []SettingResponseContract `json:"Settings,omitempty"`
}

// NewTemplateResponseContract instantiates a new TemplateResponseContract object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateResponseContract() *TemplateResponseContract {
	this := TemplateResponseContract{}
	return &this
}

// NewTemplateResponseContractWithDefaults instantiates a new TemplateResponseContract object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateResponseContractWithDefaults() *TemplateResponseContract {
	this := TemplateResponseContract{}
	return &this
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseContract) GetTemplateName() string {
	if o == nil || IsNil(o.TemplateName.Get()) {
		var ret string
		return ret
	}
	return *o.TemplateName.Get()
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseContract) GetTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateName.Get(), o.TemplateName.IsSet()
}

// HasTemplateName returns a boolean if a field has been set.
func (o *TemplateResponseContract) HasTemplateName() bool {
	if o != nil && o.TemplateName.IsSet() {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given NullableString and assigns it to the TemplateName field.
func (o *TemplateResponseContract) SetTemplateName(v string) {
	o.TemplateName.Set(&v)
}

// SetTemplateNameNil sets the value for TemplateName to be an explicit nil
func (o *TemplateResponseContract) SetTemplateNameNil() {
	o.TemplateName.Set(nil)
}

// UnsetTemplateName ensures that no value is present for TemplateName, not even an explicit nil
func (o *TemplateResponseContract) UnsetTemplateName() {
	o.TemplateName.Unset()
}

// GetIsReadOnly returns the IsReadOnly field value if set, zero value otherwise.
func (o *TemplateResponseContract) GetIsReadOnly() bool {
	if o == nil || IsNil(o.IsReadOnly) {
		var ret bool
		return ret
	}
	return *o.IsReadOnly
}

// GetIsReadOnlyOk returns a tuple with the IsReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateResponseContract) GetIsReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReadOnly) {
		return nil, false
	}
	return o.IsReadOnly, true
}

// HasIsReadOnly returns a boolean if a field has been set.
func (o *TemplateResponseContract) HasIsReadOnly() bool {
	if o != nil && !IsNil(o.IsReadOnly) {
		return true
	}

	return false
}

// SetIsReadOnly gets a reference to the given bool and assigns it to the IsReadOnly field.
func (o *TemplateResponseContract) SetIsReadOnly(v bool) {
	o.IsReadOnly = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseContract) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseContract) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateResponseContract) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TemplateResponseContract) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TemplateResponseContract) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TemplateResponseContract) UnsetDescription() {
	o.Description.Unset()
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateResponseContract) GetSettings() []SettingResponseContract {
	if o == nil {
		var ret []SettingResponseContract
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateResponseContract) GetSettingsOk() ([]SettingResponseContract, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *TemplateResponseContract) HasSettings() bool {
	if o != nil && IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given []SettingResponseContract and assigns it to the Settings field.
func (o *TemplateResponseContract) SetSettings(v []SettingResponseContract) {
	o.Settings = v
}

func (o TemplateResponseContract) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateResponseContract) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TemplateName.IsSet() {
		toSerialize["TemplateName"] = o.TemplateName.Get()
	}
	if !IsNil(o.IsReadOnly) {
		toSerialize["IsReadOnly"] = o.IsReadOnly
	}
	if o.Description.IsSet() {
		toSerialize["Description"] = o.Description.Get()
	}
	if o.Settings != nil {
		toSerialize["Settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableTemplateResponseContract struct {
	value *TemplateResponseContract
	isSet bool
}

func (v NullableTemplateResponseContract) Get() *TemplateResponseContract {
	return v.value
}

func (v *NullableTemplateResponseContract) Set(val *TemplateResponseContract) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateResponseContract) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateResponseContract) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateResponseContract(val *TemplateResponseContract) *NullableTemplateResponseContract {
	return &NullableTemplateResponseContract{value: val, isSet: true}
}

func (v NullableTemplateResponseContract) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateResponseContract) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
