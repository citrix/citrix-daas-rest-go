/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// PrintOrientationSetting Orientation.
type PrintOrientationSetting string

// List of PrintOrientationSetting
const (
	PRINTORIENTATIONSETTING_PORTRAIT PrintOrientationSetting = "Portrait"
	PRINTORIENTATIONSETTING_LANDSCAPE PrintOrientationSetting = "Landscape"
)

// All allowed values of PrintOrientationSetting enum
var AllowedPrintOrientationSettingEnumValues = []PrintOrientationSetting{
	"Portrait",
	"Landscape",
}

func (v *PrintOrientationSetting) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	
	*v = PrintOrientationSetting(value)
	return nil
}

// NewPrintOrientationSettingFromValue returns a pointer to a valid PrintOrientationSetting
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPrintOrientationSettingFromValue(v string) (*PrintOrientationSetting, error) {
	ev := PrintOrientationSetting(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PrintOrientationSetting: valid values are %v", v, AllowedPrintOrientationSettingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PrintOrientationSetting) IsValid() bool {
	for _, existing := range AllowedPrintOrientationSettingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PrintOrientationSetting value
func (v PrintOrientationSetting) Ptr() *PrintOrientationSetting {
	return &v
}

type NullablePrintOrientationSetting struct {
	value *PrintOrientationSetting
	isSet bool
}

func (v NullablePrintOrientationSetting) Get() *PrintOrientationSetting {
	return v.value
}

func (v *NullablePrintOrientationSetting) Set(val *PrintOrientationSetting) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintOrientationSetting) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintOrientationSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintOrientationSetting(val *PrintOrientationSetting) *NullablePrintOrientationSetting {
	return &NullablePrintOrientationSetting{value: val, isSet: true}
}

func (v NullablePrintOrientationSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintOrientationSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

