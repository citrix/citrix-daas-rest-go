/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
	"fmt"
)

// AppLibPackageDiscoveryStatus Enum to indicate the status of the package discovery process
type AppLibPackageDiscoveryStatus string

// List of AppLibPackageDiscoveryStatus
const (
	APPLIBPACKAGEDISCOVERYSTATUS_UNKNOWN AppLibPackageDiscoveryStatus = "Unknown"
	APPLIBPACKAGEDISCOVERYSTATUS_PENDING AppLibPackageDiscoveryStatus = "Pending"
	APPLIBPACKAGEDISCOVERYSTATUS_FAILED AppLibPackageDiscoveryStatus = "Failed"
	APPLIBPACKAGEDISCOVERYSTATUS_DISCOVERING AppLibPackageDiscoveryStatus = "Discovering"
	APPLIBPACKAGEDISCOVERYSTATUS_FINISHED_WITH_DATA_WAITING AppLibPackageDiscoveryStatus = "FinishedWithDataWaiting"
	APPLIBPACKAGEDISCOVERYSTATUS_REPORTING AppLibPackageDiscoveryStatus = "Reporting"
	APPLIBPACKAGEDISCOVERYSTATUS_IMPORTING AppLibPackageDiscoveryStatus = "Importing"
	APPLIBPACKAGEDISCOVERYSTATUS_FINISHED AppLibPackageDiscoveryStatus = "Finished"
)

// All allowed values of AppLibPackageDiscoveryStatus enum
var AllowedAppLibPackageDiscoveryStatusEnumValues = []AppLibPackageDiscoveryStatus{
	"Unknown",
	"Pending",
	"Failed",
	"Discovering",
	"FinishedWithDataWaiting",
	"Reporting",
	"Importing",
	"Finished",
}

func (v *AppLibPackageDiscoveryStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppLibPackageDiscoveryStatus(value)
	for _, existing := range AllowedAppLibPackageDiscoveryStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppLibPackageDiscoveryStatus", value)
}

// NewAppLibPackageDiscoveryStatusFromValue returns a pointer to a valid AppLibPackageDiscoveryStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAppLibPackageDiscoveryStatusFromValue(v string) (*AppLibPackageDiscoveryStatus, error) {
	ev := AppLibPackageDiscoveryStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AppLibPackageDiscoveryStatus: valid values are %v", v, AllowedAppLibPackageDiscoveryStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AppLibPackageDiscoveryStatus) IsValid() bool {
	for _, existing := range AllowedAppLibPackageDiscoveryStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AppLibPackageDiscoveryStatus value
func (v AppLibPackageDiscoveryStatus) Ptr() *AppLibPackageDiscoveryStatus {
	return &v
}

type NullableAppLibPackageDiscoveryStatus struct {
	value *AppLibPackageDiscoveryStatus
	isSet bool
}

func (v NullableAppLibPackageDiscoveryStatus) Get() *AppLibPackageDiscoveryStatus {
	return v.value
}

func (v *NullableAppLibPackageDiscoveryStatus) Set(val *AppLibPackageDiscoveryStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAppLibPackageDiscoveryStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAppLibPackageDiscoveryStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppLibPackageDiscoveryStatus(val *AppLibPackageDiscoveryStatus) *NullableAppLibPackageDiscoveryStatus {
	return &NullableAppLibPackageDiscoveryStatus{value: val, isSet: true}
}

func (v NullableAppLibPackageDiscoveryStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppLibPackageDiscoveryStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

