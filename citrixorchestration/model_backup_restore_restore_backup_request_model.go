/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the BackupRestoreRestoreBackupRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRestoreRestoreBackupRequestModel{}

// BackupRestoreRestoreBackupRequestModel Restore Backup Request Model
type BackupRestoreRestoreBackupRequestModel struct {
	// Name of backup to restore
	BackupName string `json:"BackupName"`
	// Hisotry Uid
	HistoryUid int32                       `json:"HistoryUid"`
	Component  BckRstrAutoConfigComponents `json:"Component"`
	// Comma delimted component member names to restore; may include wildcards
	Filters NullableString `json:"Filters,omitempty"`
	// Restore component prerequisites as necessary
	WithPrereq *bool `json:"WithPrereq,omitempty"`
	// Determine what should be restored but to not do the actual restore; report only
	Checkmode *bool `json:"Checkmode,omitempty"`
	// Admin entered notes
	Notes       NullableString             `json:"Notes,omitempty"`
	RestoreType *BackupRestoreRestoreTypes `json:"RestoreType,omitempty"`
	// Cvad Security info valid only when Component is HostConnections
	CvadSecurityInfo []BackupRestoreCvadSecurityInfo `json:"CvadSecurityInfo,omitempty"`
}

type _BackupRestoreRestoreBackupRequestModel BackupRestoreRestoreBackupRequestModel

// NewBackupRestoreRestoreBackupRequestModel instantiates a new BackupRestoreRestoreBackupRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRestoreRestoreBackupRequestModel(backupName string, historyUid int32, component BckRstrAutoConfigComponents) *BackupRestoreRestoreBackupRequestModel {
	this := BackupRestoreRestoreBackupRequestModel{}
	this.BackupName = backupName
	this.HistoryUid = historyUid
	this.Component = component
	return &this
}

// NewBackupRestoreRestoreBackupRequestModelWithDefaults instantiates a new BackupRestoreRestoreBackupRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestoreRestoreBackupRequestModelWithDefaults() *BackupRestoreRestoreBackupRequestModel {
	this := BackupRestoreRestoreBackupRequestModel{}
	return &this
}

// GetBackupName returns the BackupName field value
func (o *BackupRestoreRestoreBackupRequestModel) GetBackupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupName
}

// GetBackupNameOk returns a tuple with the BackupName field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetBackupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupName, true
}

// SetBackupName sets field value
func (o *BackupRestoreRestoreBackupRequestModel) SetBackupName(v string) {
	o.BackupName = v
}

// GetHistoryUid returns the HistoryUid field value
func (o *BackupRestoreRestoreBackupRequestModel) GetHistoryUid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HistoryUid
}

// GetHistoryUidOk returns a tuple with the HistoryUid field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetHistoryUidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HistoryUid, true
}

// SetHistoryUid sets field value
func (o *BackupRestoreRestoreBackupRequestModel) SetHistoryUid(v int32) {
	o.HistoryUid = v
}

// GetComponent returns the Component field value
func (o *BackupRestoreRestoreBackupRequestModel) GetComponent() BckRstrAutoConfigComponents {
	if o == nil {
		var ret BckRstrAutoConfigComponents
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetComponentOk() (*BckRstrAutoConfigComponents, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *BackupRestoreRestoreBackupRequestModel) SetComponent(v BckRstrAutoConfigComponents) {
	o.Component = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRestoreBackupRequestModel) GetFilters() string {
	if o == nil || IsNil(o.Filters.Get()) {
		var ret string
		return ret
	}
	return *o.Filters.Get()
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRestoreBackupRequestModel) GetFiltersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filters.Get(), o.Filters.IsSet()
}

// HasFilters returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasFilters() bool {
	if o != nil && o.Filters.IsSet() {
		return true
	}

	return false
}

// SetFilters gets a reference to the given NullableString and assigns it to the Filters field.
func (o *BackupRestoreRestoreBackupRequestModel) SetFilters(v string) {
	o.Filters.Set(&v)
}

// SetFiltersNil sets the value for Filters to be an explicit nil
func (o *BackupRestoreRestoreBackupRequestModel) SetFiltersNil() {
	o.Filters.Set(nil)
}

// UnsetFilters ensures that no value is present for Filters, not even an explicit nil
func (o *BackupRestoreRestoreBackupRequestModel) UnsetFilters() {
	o.Filters.Unset()
}

// GetWithPrereq returns the WithPrereq field value if set, zero value otherwise.
func (o *BackupRestoreRestoreBackupRequestModel) GetWithPrereq() bool {
	if o == nil || IsNil(o.WithPrereq) {
		var ret bool
		return ret
	}
	return *o.WithPrereq
}

// GetWithPrereqOk returns a tuple with the WithPrereq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetWithPrereqOk() (*bool, bool) {
	if o == nil || IsNil(o.WithPrereq) {
		return nil, false
	}
	return o.WithPrereq, true
}

// HasWithPrereq returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasWithPrereq() bool {
	if o != nil && !IsNil(o.WithPrereq) {
		return true
	}

	return false
}

// SetWithPrereq gets a reference to the given bool and assigns it to the WithPrereq field.
func (o *BackupRestoreRestoreBackupRequestModel) SetWithPrereq(v bool) {
	o.WithPrereq = &v
}

// GetCheckmode returns the Checkmode field value if set, zero value otherwise.
func (o *BackupRestoreRestoreBackupRequestModel) GetCheckmode() bool {
	if o == nil || IsNil(o.Checkmode) {
		var ret bool
		return ret
	}
	return *o.Checkmode
}

// GetCheckmodeOk returns a tuple with the Checkmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetCheckmodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Checkmode) {
		return nil, false
	}
	return o.Checkmode, true
}

// HasCheckmode returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasCheckmode() bool {
	if o != nil && !IsNil(o.Checkmode) {
		return true
	}

	return false
}

// SetCheckmode gets a reference to the given bool and assigns it to the Checkmode field.
func (o *BackupRestoreRestoreBackupRequestModel) SetCheckmode(v bool) {
	o.Checkmode = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRestoreBackupRequestModel) GetNotes() string {
	if o == nil || IsNil(o.Notes.Get()) {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRestoreBackupRequestModel) GetNotesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *BackupRestoreRestoreBackupRequestModel) SetNotes(v string) {
	o.Notes.Set(&v)
}

// SetNotesNil sets the value for Notes to be an explicit nil
func (o *BackupRestoreRestoreBackupRequestModel) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *BackupRestoreRestoreBackupRequestModel) UnsetNotes() {
	o.Notes.Unset()
}

// GetRestoreType returns the RestoreType field value if set, zero value otherwise.
func (o *BackupRestoreRestoreBackupRequestModel) GetRestoreType() BackupRestoreRestoreTypes {
	if o == nil || IsNil(o.RestoreType) {
		var ret BackupRestoreRestoreTypes
		return ret
	}
	return *o.RestoreType
}

// GetRestoreTypeOk returns a tuple with the RestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRestoreRestoreBackupRequestModel) GetRestoreTypeOk() (*BackupRestoreRestoreTypes, bool) {
	if o == nil || IsNil(o.RestoreType) {
		return nil, false
	}
	return o.RestoreType, true
}

// HasRestoreType returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasRestoreType() bool {
	if o != nil && !IsNil(o.RestoreType) {
		return true
	}

	return false
}

// SetRestoreType gets a reference to the given BackupRestoreRestoreTypes and assigns it to the RestoreType field.
func (o *BackupRestoreRestoreBackupRequestModel) SetRestoreType(v BackupRestoreRestoreTypes) {
	o.RestoreType = &v
}

// GetCvadSecurityInfo returns the CvadSecurityInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackupRestoreRestoreBackupRequestModel) GetCvadSecurityInfo() []BackupRestoreCvadSecurityInfo {
	if o == nil {
		var ret []BackupRestoreCvadSecurityInfo
		return ret
	}
	return o.CvadSecurityInfo
}

// GetCvadSecurityInfoOk returns a tuple with the CvadSecurityInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackupRestoreRestoreBackupRequestModel) GetCvadSecurityInfoOk() ([]BackupRestoreCvadSecurityInfo, bool) {
	if o == nil || IsNil(o.CvadSecurityInfo) {
		return nil, false
	}
	return o.CvadSecurityInfo, true
}

// HasCvadSecurityInfo returns a boolean if a field has been set.
func (o *BackupRestoreRestoreBackupRequestModel) HasCvadSecurityInfo() bool {
	if o != nil && !IsNil(o.CvadSecurityInfo) {
		return true
	}

	return false
}

// SetCvadSecurityInfo gets a reference to the given []BackupRestoreCvadSecurityInfo and assigns it to the CvadSecurityInfo field.
func (o *BackupRestoreRestoreBackupRequestModel) SetCvadSecurityInfo(v []BackupRestoreCvadSecurityInfo) {
	o.CvadSecurityInfo = v
}

func (o BackupRestoreRestoreBackupRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRestoreRestoreBackupRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["BackupName"] = o.BackupName
	toSerialize["HistoryUid"] = o.HistoryUid
	toSerialize["Component"] = o.Component
	if o.Filters.IsSet() {
		toSerialize["Filters"] = o.Filters.Get()
	}
	if !IsNil(o.WithPrereq) {
		toSerialize["WithPrereq"] = o.WithPrereq
	}
	if !IsNil(o.Checkmode) {
		toSerialize["Checkmode"] = o.Checkmode
	}
	if o.Notes.IsSet() {
		toSerialize["Notes"] = o.Notes.Get()
	}
	if !IsNil(o.RestoreType) {
		toSerialize["RestoreType"] = o.RestoreType
	}
	if o.CvadSecurityInfo != nil {
		toSerialize["CvadSecurityInfo"] = o.CvadSecurityInfo
	}
	return toSerialize, nil
}

type NullableBackupRestoreRestoreBackupRequestModel struct {
	value *BackupRestoreRestoreBackupRequestModel
	isSet bool
}

func (v NullableBackupRestoreRestoreBackupRequestModel) Get() *BackupRestoreRestoreBackupRequestModel {
	return v.value
}

func (v *NullableBackupRestoreRestoreBackupRequestModel) Set(val *BackupRestoreRestoreBackupRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRestoreRestoreBackupRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRestoreRestoreBackupRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRestoreRestoreBackupRequestModel(val *BackupRestoreRestoreBackupRequestModel) *NullableBackupRestoreRestoreBackupRequestModel {
	return &NullableBackupRestoreRestoreBackupRequestModel{value: val, isSet: true}
}

func (v NullableBackupRestoreRestoreBackupRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRestoreRestoreBackupRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
