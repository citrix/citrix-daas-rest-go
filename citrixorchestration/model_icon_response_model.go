/*
Citrix Virtual Apps and Desktops Rest API for Developer Portal

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: devportal-onprem-ga
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixorchestration

import (
	"encoding/json"
)

// checks if the IconResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IconResponseModel{}

// IconResponseModel struct for IconResponseModel
type IconResponseModel struct {
	// Raw icon data, Base64-encoded.
	RawData string `json:"RawData"`
	// Icon data in the requested format for display.  For example, if the caller requested \"image/png;32x32x24\" image format, then this will be a 32x32, 24bpp PNG-format image, Base64-encoded.  If the caller did not request an icon format, this will not be set.
	FormattedData NullableString `json:"FormattedData,omitempty"`
	// Id of the icon.
	Id string `json:"Id"`
	// Indicates if the icon is built-in (i.e. Citrix-provided).  The built-in icons can be used for applications or desktops that don't have their own icons.
	IsBuiltIn bool `json:"IsBuiltIn"`
	// DEPRECATED.  Use Id.
	// Deprecated
	Uid NullableInt32 `json:"Uid,omitempty"`
}

// NewIconResponseModel instantiates a new IconResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIconResponseModel(rawData string, id string, isBuiltIn bool) *IconResponseModel {
	this := IconResponseModel{}
	this.RawData = rawData
	this.Id = id
	this.IsBuiltIn = isBuiltIn
	return &this
}

// NewIconResponseModelWithDefaults instantiates a new IconResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIconResponseModelWithDefaults() *IconResponseModel {
	this := IconResponseModel{}
	return &this
}

// GetRawData returns the RawData field value
func (o *IconResponseModel) GetRawData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value
// and a boolean to check if the value has been set.
func (o *IconResponseModel) GetRawDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawData, true
}

// SetRawData sets field value
func (o *IconResponseModel) SetRawData(v string) {
	o.RawData = v
}

// GetFormattedData returns the FormattedData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IconResponseModel) GetFormattedData() string {
	if o == nil || IsNil(o.FormattedData.Get()) {
		var ret string
		return ret
	}
	return *o.FormattedData.Get()
}

// GetFormattedDataOk returns a tuple with the FormattedData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IconResponseModel) GetFormattedDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FormattedData.Get(), o.FormattedData.IsSet()
}

// HasFormattedData returns a boolean if a field has been set.
func (o *IconResponseModel) HasFormattedData() bool {
	if o != nil && o.FormattedData.IsSet() {
		return true
	}

	return false
}

// SetFormattedData gets a reference to the given NullableString and assigns it to the FormattedData field.
func (o *IconResponseModel) SetFormattedData(v string) {
	o.FormattedData.Set(&v)
}

// SetFormattedDataNil sets the value for FormattedData to be an explicit nil
func (o *IconResponseModel) SetFormattedDataNil() {
	o.FormattedData.Set(nil)
}

// UnsetFormattedData ensures that no value is present for FormattedData, not even an explicit nil
func (o *IconResponseModel) UnsetFormattedData() {
	o.FormattedData.Unset()
}

// GetId returns the Id field value
func (o *IconResponseModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IconResponseModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IconResponseModel) SetId(v string) {
	o.Id = v
}

// GetIsBuiltIn returns the IsBuiltIn field value
func (o *IconResponseModel) GetIsBuiltIn() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBuiltIn
}

// GetIsBuiltInOk returns a tuple with the IsBuiltIn field value
// and a boolean to check if the value has been set.
func (o *IconResponseModel) GetIsBuiltInOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBuiltIn, true
}

// SetIsBuiltIn sets field value
func (o *IconResponseModel) SetIsBuiltIn(v bool) {
	o.IsBuiltIn = v
}

// GetUid returns the Uid field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *IconResponseModel) GetUid() int32 {
	if o == nil || IsNil(o.Uid.Get()) {
		var ret int32
		return ret
	}
	return *o.Uid.Get()
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *IconResponseModel) GetUidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uid.Get(), o.Uid.IsSet()
}

// HasUid returns a boolean if a field has been set.
func (o *IconResponseModel) HasUid() bool {
	if o != nil && o.Uid.IsSet() {
		return true
	}

	return false
}

// SetUid gets a reference to the given NullableInt32 and assigns it to the Uid field.
// Deprecated
func (o *IconResponseModel) SetUid(v int32) {
	o.Uid.Set(&v)
}

// SetUidNil sets the value for Uid to be an explicit nil
func (o *IconResponseModel) SetUidNil() {
	o.Uid.Set(nil)
}

// UnsetUid ensures that no value is present for Uid, not even an explicit nil
func (o *IconResponseModel) UnsetUid() {
	o.Uid.Unset()
}

func (o IconResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IconResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["RawData"] = o.RawData
	if o.FormattedData.IsSet() {
		toSerialize["FormattedData"] = o.FormattedData.Get()
	}
	toSerialize["Id"] = o.Id
	toSerialize["IsBuiltIn"] = o.IsBuiltIn
	if o.Uid.IsSet() {
		toSerialize["Uid"] = o.Uid.Get()
	}
	return toSerialize, nil
}

type NullableIconResponseModel struct {
	value *IconResponseModel
	isSet bool
}

func (v NullableIconResponseModel) Get() *IconResponseModel {
	return v.value
}

func (v *NullableIconResponseModel) Set(val *IconResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIconResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIconResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIconResponseModel(val *IconResponseModel) *NullableIconResponseModel {
	return &NullableIconResponseModel{value: val, isSet: true}
}

func (v NullableIconResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIconResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
