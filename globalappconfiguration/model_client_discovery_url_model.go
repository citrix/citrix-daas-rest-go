/*
Global App Config Admin

Describes API used by Global App Config Admin Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package globalappconfiguration

import (
	"encoding/json"
)

// checks if the ClientDiscoveryURLModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientDiscoveryURLModel{}

// ClientDiscoveryURLModel struct for ClientDiscoveryURLModel
type ClientDiscoveryURLModel struct {
	SettingsAvailability *string `json:"settingsAvailability,omitempty"`
	Url                  *string `json:"url,omitempty"`
}

// NewClientDiscoveryURLModel instantiates a new ClientDiscoveryURLModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientDiscoveryURLModel() *ClientDiscoveryURLModel {
	this := ClientDiscoveryURLModel{}
	return &this
}

// NewClientDiscoveryURLModelWithDefaults instantiates a new ClientDiscoveryURLModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientDiscoveryURLModelWithDefaults() *ClientDiscoveryURLModel {
	this := ClientDiscoveryURLModel{}
	return &this
}

// GetSettingsAvailability returns the SettingsAvailability field value if set, zero value otherwise.
func (o *ClientDiscoveryURLModel) GetSettingsAvailability() string {
	if o == nil || IsNil(o.SettingsAvailability) {
		var ret string
		return ret
	}
	return *o.SettingsAvailability
}

// GetSettingsAvailabilityOk returns a tuple with the SettingsAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientDiscoveryURLModel) GetSettingsAvailabilityOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAvailability) {
		return nil, false
	}
	return o.SettingsAvailability, true
}

// HasSettingsAvailability returns a boolean if a field has been set.
func (o *ClientDiscoveryURLModel) HasSettingsAvailability() bool {
	if o != nil && !IsNil(o.SettingsAvailability) {
		return true
	}

	return false
}

// SetSettingsAvailability gets a reference to the given string and assigns it to the SettingsAvailability field.
func (o *ClientDiscoveryURLModel) SetSettingsAvailability(v string) {
	o.SettingsAvailability = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ClientDiscoveryURLModel) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientDiscoveryURLModel) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ClientDiscoveryURLModel) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ClientDiscoveryURLModel) SetUrl(v string) {
	o.Url = &v
}

func (o ClientDiscoveryURLModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientDiscoveryURLModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SettingsAvailability) {
		toSerialize["settingsAvailability"] = o.SettingsAvailability
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableClientDiscoveryURLModel struct {
	value *ClientDiscoveryURLModel
	isSet bool
}

func (v NullableClientDiscoveryURLModel) Get() *ClientDiscoveryURLModel {
	return v.value
}

func (v *NullableClientDiscoveryURLModel) Set(val *ClientDiscoveryURLModel) {
	v.value = val
	v.isSet = true
}

func (v NullableClientDiscoveryURLModel) IsSet() bool {
	return v.isSet
}

func (v *NullableClientDiscoveryURLModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientDiscoveryURLModel(val *ClientDiscoveryURLModel) *NullableClientDiscoveryURLModel {
	return &NullableClientDiscoveryURLModel{value: val, isSet: true}
}

func (v NullableClientDiscoveryURLModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientDiscoveryURLModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
