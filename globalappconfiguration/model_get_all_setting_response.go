/*
Global App Config Admin

Describes API used by Global App Config Admin Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package globalappconfiguration

import (
	"encoding/json"
)

// checks if the GetAllSettingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllSettingResponse{}

// GetAllSettingResponse struct for GetAllSettingResponse
type GetAllSettingResponse struct {
	Count     *int32                `json:"count,omitempty"`
	Items     []SettingsRecordModel `json:"items,omitempty"`
	NextToken *string               `json:"nextToken,omitempty"`
}

// NewGetAllSettingResponse instantiates a new GetAllSettingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllSettingResponse() *GetAllSettingResponse {
	this := GetAllSettingResponse{}
	return &this
}

// NewGetAllSettingResponseWithDefaults instantiates a new GetAllSettingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllSettingResponseWithDefaults() *GetAllSettingResponse {
	this := GetAllSettingResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetAllSettingResponse) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllSettingResponse) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetAllSettingResponse) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GetAllSettingResponse) SetCount(v int32) {
	o.Count = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetAllSettingResponse) GetItems() []SettingsRecordModel {
	if o == nil || IsNil(o.Items) {
		var ret []SettingsRecordModel
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllSettingResponse) GetItemsOk() ([]SettingsRecordModel, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GetAllSettingResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []SettingsRecordModel and assigns it to the Items field.
func (o *GetAllSettingResponse) SetItems(v []SettingsRecordModel) {
	o.Items = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *GetAllSettingResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllSettingResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *GetAllSettingResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *GetAllSettingResponse) SetNextToken(v string) {
	o.NextToken = &v
}

func (o GetAllSettingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllSettingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	return toSerialize, nil
}

type NullableGetAllSettingResponse struct {
	value *GetAllSettingResponse
	isSet bool
}

func (v NullableGetAllSettingResponse) Get() *GetAllSettingResponse {
	return v.value
}

func (v *NullableGetAllSettingResponse) Set(val *GetAllSettingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllSettingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllSettingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllSettingResponse(val *GetAllSettingResponse) *NullableGetAllSettingResponse {
	return &NullableGetAllSettingResponse{value: val, isSet: true}
}

func (v NullableGetAllSettingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllSettingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
