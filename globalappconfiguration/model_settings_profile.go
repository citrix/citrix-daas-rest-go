/*
Global App Config Admin

Describes API used by Global App Config Admin Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package globalappconfiguration

import (
	"encoding/json"
)

// checks if the SettingsProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettingsProfile{}

// SettingsProfile struct for SettingsProfile
type SettingsProfile struct {
	ProfileId *string `json:"profileId,omitempty"`
}

// NewSettingsProfile instantiates a new SettingsProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsProfile() *SettingsProfile {
	this := SettingsProfile{}
	return &this
}

// NewSettingsProfileWithDefaults instantiates a new SettingsProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsProfileWithDefaults() *SettingsProfile {
	this := SettingsProfile{}
	return &this
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *SettingsProfile) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsProfile) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *SettingsProfile) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *SettingsProfile) SetProfileId(v string) {
	o.ProfileId = &v
}

func (o SettingsProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettingsProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	return toSerialize, nil
}

type NullableSettingsProfile struct {
	value *SettingsProfile
	isSet bool
}

func (v NullableSettingsProfile) Get() *SettingsProfile {
	return v.value
}

func (v *NullableSettingsProfile) Set(val *SettingsProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsProfile(val *SettingsProfile) *NullableSettingsProfile {
	return &NullableSettingsProfile{value: val, isSet: true}
}

func (v NullableSettingsProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
