/*
Global App Config Admin

Describes API used by Global App Config Admin Service

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package globalappconfiguration

import (
	"encoding/json"
)

// checks if the TranslatedSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslatedSettings{}

// TranslatedSettings struct for TranslatedSettings
type TranslatedSettings struct {
	AppSettings                        *TranslatedAppSettings `json:"appSettings,omitempty"`
	Description                        *string                `json:"description,omitempty"`
	Name                               *string                `json:"name,omitempty"`
	PlatformsWithAuthenticatedSettings []string               `json:"platformsWithAuthenticatedSettings,omitempty"`
	RequiresClientAuthentication       *bool                  `json:"requiresClientAuthentication,omitempty"`
	UseForAppConfig                    *bool                  `json:"useForAppConfig,omitempty"`
}

// NewTranslatedSettings instantiates a new TranslatedSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslatedSettings() *TranslatedSettings {
	this := TranslatedSettings{}
	return &this
}

// NewTranslatedSettingsWithDefaults instantiates a new TranslatedSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslatedSettingsWithDefaults() *TranslatedSettings {
	this := TranslatedSettings{}
	return &this
}

// GetAppSettings returns the AppSettings field value if set, zero value otherwise.
func (o *TranslatedSettings) GetAppSettings() TranslatedAppSettings {
	if o == nil || IsNil(o.AppSettings) {
		var ret TranslatedAppSettings
		return ret
	}
	return *o.AppSettings
}

// GetAppSettingsOk returns a tuple with the AppSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetAppSettingsOk() (*TranslatedAppSettings, bool) {
	if o == nil || IsNil(o.AppSettings) {
		return nil, false
	}
	return o.AppSettings, true
}

// HasAppSettings returns a boolean if a field has been set.
func (o *TranslatedSettings) HasAppSettings() bool {
	if o != nil && !IsNil(o.AppSettings) {
		return true
	}

	return false
}

// SetAppSettings gets a reference to the given TranslatedAppSettings and assigns it to the AppSettings field.
func (o *TranslatedSettings) SetAppSettings(v TranslatedAppSettings) {
	o.AppSettings = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TranslatedSettings) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TranslatedSettings) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TranslatedSettings) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TranslatedSettings) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TranslatedSettings) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TranslatedSettings) SetName(v string) {
	o.Name = &v
}

// GetPlatformsWithAuthenticatedSettings returns the PlatformsWithAuthenticatedSettings field value if set, zero value otherwise.
func (o *TranslatedSettings) GetPlatformsWithAuthenticatedSettings() []string {
	if o == nil || IsNil(o.PlatformsWithAuthenticatedSettings) {
		var ret []string
		return ret
	}
	return o.PlatformsWithAuthenticatedSettings
}

// GetPlatformsWithAuthenticatedSettingsOk returns a tuple with the PlatformsWithAuthenticatedSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetPlatformsWithAuthenticatedSettingsOk() ([]string, bool) {
	if o == nil || IsNil(o.PlatformsWithAuthenticatedSettings) {
		return nil, false
	}
	return o.PlatformsWithAuthenticatedSettings, true
}

// HasPlatformsWithAuthenticatedSettings returns a boolean if a field has been set.
func (o *TranslatedSettings) HasPlatformsWithAuthenticatedSettings() bool {
	if o != nil && !IsNil(o.PlatformsWithAuthenticatedSettings) {
		return true
	}

	return false
}

// SetPlatformsWithAuthenticatedSettings gets a reference to the given []string and assigns it to the PlatformsWithAuthenticatedSettings field.
func (o *TranslatedSettings) SetPlatformsWithAuthenticatedSettings(v []string) {
	o.PlatformsWithAuthenticatedSettings = v
}

// GetRequiresClientAuthentication returns the RequiresClientAuthentication field value if set, zero value otherwise.
func (o *TranslatedSettings) GetRequiresClientAuthentication() bool {
	if o == nil || IsNil(o.RequiresClientAuthentication) {
		var ret bool
		return ret
	}
	return *o.RequiresClientAuthentication
}

// GetRequiresClientAuthenticationOk returns a tuple with the RequiresClientAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetRequiresClientAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresClientAuthentication) {
		return nil, false
	}
	return o.RequiresClientAuthentication, true
}

// HasRequiresClientAuthentication returns a boolean if a field has been set.
func (o *TranslatedSettings) HasRequiresClientAuthentication() bool {
	if o != nil && !IsNil(o.RequiresClientAuthentication) {
		return true
	}

	return false
}

// SetRequiresClientAuthentication gets a reference to the given bool and assigns it to the RequiresClientAuthentication field.
func (o *TranslatedSettings) SetRequiresClientAuthentication(v bool) {
	o.RequiresClientAuthentication = &v
}

// GetUseForAppConfig returns the UseForAppConfig field value if set, zero value otherwise.
func (o *TranslatedSettings) GetUseForAppConfig() bool {
	if o == nil || IsNil(o.UseForAppConfig) {
		var ret bool
		return ret
	}
	return *o.UseForAppConfig
}

// GetUseForAppConfigOk returns a tuple with the UseForAppConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TranslatedSettings) GetUseForAppConfigOk() (*bool, bool) {
	if o == nil || IsNil(o.UseForAppConfig) {
		return nil, false
	}
	return o.UseForAppConfig, true
}

// HasUseForAppConfig returns a boolean if a field has been set.
func (o *TranslatedSettings) HasUseForAppConfig() bool {
	if o != nil && !IsNil(o.UseForAppConfig) {
		return true
	}

	return false
}

// SetUseForAppConfig gets a reference to the given bool and assigns it to the UseForAppConfig field.
func (o *TranslatedSettings) SetUseForAppConfig(v bool) {
	o.UseForAppConfig = &v
}

func (o TranslatedSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslatedSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppSettings) {
		toSerialize["appSettings"] = o.AppSettings
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PlatformsWithAuthenticatedSettings) {
		toSerialize["platformsWithAuthenticatedSettings"] = o.PlatformsWithAuthenticatedSettings
	}
	if !IsNil(o.RequiresClientAuthentication) {
		toSerialize["requiresClientAuthentication"] = o.RequiresClientAuthentication
	}
	if !IsNil(o.UseForAppConfig) {
		toSerialize["useForAppConfig"] = o.UseForAppConfig
	}
	return toSerialize, nil
}

type NullableTranslatedSettings struct {
	value *TranslatedSettings
	isSet bool
}

func (v NullableTranslatedSettings) Get() *TranslatedSettings {
	return v.value
}

func (v *NullableTranslatedSettings) Set(val *TranslatedSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslatedSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslatedSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslatedSettings(val *TranslatedSettings) *NullableTranslatedSettings {
	return &NullableTranslatedSettings{value: val, isSet: true}
}

func (v NullableTranslatedSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslatedSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
