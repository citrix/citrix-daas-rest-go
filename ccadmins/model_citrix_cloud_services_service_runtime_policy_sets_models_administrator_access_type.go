/*
Citrix.CloudServices.Administrators.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
	"fmt"
)

// CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType the model 'CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType'
type CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType string

// List of Citrix.CloudServices.ServiceRuntime.PolicySets.Models.AdministratorAccessType
const (
	CITRIXCLOUDSERVICESSERVICERUNTIMEPOLICYSETSMODELSADMINISTRATORACCESSTYPE_FULL CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType = "Full"
	CITRIXCLOUDSERVICESSERVICERUNTIMEPOLICYSETSMODELSADMINISTRATORACCESSTYPE_CUSTOM CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType = "Custom"
	CITRIXCLOUDSERVICESSERVICERUNTIMEPOLICYSETSMODELSADMINISTRATORACCESSTYPE_REINVITE CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType = "Reinvite"
)

// All allowed values of CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType enum
var AllowedCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeEnumValues = []CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType{
	"Full",
	"Custom",
	"Reinvite",
}

func (v *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType(value)
	for _, existing := range AllowedCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType", value)
}

// NewCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeFromValue returns a pointer to a valid CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeFromValue(v string) (*CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType, error) {
	ev := CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType: valid values are %v", v, AllowedCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) IsValid() bool {
	for _, existing := range AllowedCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Citrix.CloudServices.ServiceRuntime.PolicySets.Models.AdministratorAccessType value
func (v CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) Ptr() *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType {
	return &v
}

type NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType struct {
	value *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType
	isSet bool
}

func (v NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) Get() *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType {
	return v.value
}

func (v *NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) Set(val *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) {
	v.value = val
	v.isSet = true
}

func (v NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) IsSet() bool {
	return v.isSet
}

func (v *NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType(val *CitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) *NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType {
	return &NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType{value: val, isSet: true}
}

func (v NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCitrixCloudServicesServiceRuntimePolicySetsModelsAdministratorAccessType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

