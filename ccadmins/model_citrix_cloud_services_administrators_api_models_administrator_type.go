/*
Citrix.CloudServices.Administrators.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
	"fmt"
)

// CitrixCloudServicesAdministratorsApiModelsAdministratorType the model 'CitrixCloudServicesAdministratorsApiModelsAdministratorType'
type CitrixCloudServicesAdministratorsApiModelsAdministratorType string

// List of Citrix.CloudServices.Administrators.ApiModels.AdministratorType
const (
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORTYPE_ADMINISTRATOR_USER CitrixCloudServicesAdministratorsApiModelsAdministratorType = "AdministratorUser"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORTYPE_ADMINISTRATOR_GROUP CitrixCloudServicesAdministratorsApiModelsAdministratorType = "AdministratorGroup"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORTYPE_SERVICE_PRINCIPAL CitrixCloudServicesAdministratorsApiModelsAdministratorType = "ServicePrincipal"
)

// All allowed values of CitrixCloudServicesAdministratorsApiModelsAdministratorType enum
var AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorTypeEnumValues = []CitrixCloudServicesAdministratorsApiModelsAdministratorType{
	"AdministratorUser",
	"AdministratorGroup",
	"ServicePrincipal",
}

func (v *CitrixCloudServicesAdministratorsApiModelsAdministratorType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CitrixCloudServicesAdministratorsApiModelsAdministratorType(value)
	for _, existing := range AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CitrixCloudServicesAdministratorsApiModelsAdministratorType", value)
}

// NewCitrixCloudServicesAdministratorsApiModelsAdministratorTypeFromValue returns a pointer to a valid CitrixCloudServicesAdministratorsApiModelsAdministratorType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCitrixCloudServicesAdministratorsApiModelsAdministratorTypeFromValue(v string) (*CitrixCloudServicesAdministratorsApiModelsAdministratorType, error) {
	ev := CitrixCloudServicesAdministratorsApiModelsAdministratorType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CitrixCloudServicesAdministratorsApiModelsAdministratorType: valid values are %v", v, AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CitrixCloudServicesAdministratorsApiModelsAdministratorType) IsValid() bool {
	for _, existing := range AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Citrix.CloudServices.Administrators.ApiModels.AdministratorType value
func (v CitrixCloudServicesAdministratorsApiModelsAdministratorType) Ptr() *CitrixCloudServicesAdministratorsApiModelsAdministratorType {
	return &v
}

type NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType struct {
	value *CitrixCloudServicesAdministratorsApiModelsAdministratorType
	isSet bool
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) Get() *CitrixCloudServicesAdministratorsApiModelsAdministratorType {
	return v.value
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) Set(val *CitrixCloudServicesAdministratorsApiModelsAdministratorType) {
	v.value = val
	v.isSet = true
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) IsSet() bool {
	return v.isSet
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCitrixCloudServicesAdministratorsApiModelsAdministratorType(val *CitrixCloudServicesAdministratorsApiModelsAdministratorType) *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType {
	return &NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType{value: val, isSet: true}
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

