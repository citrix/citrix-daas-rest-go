/*
Administrators APIs

APIs for managing CC administrators.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
)

// checks if the CreateAdministratorInputModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAdministratorInputModel{}

// CreateAdministratorInputModel struct for CreateAdministratorInputModel
type CreateAdministratorInputModel struct {
	AccessType string `json:"accessType"`
	DisplayName NullableString `json:"displayName,omitempty"`
	Email NullableString `json:"email,omitempty"`
	ExternalProviderId *string `json:"externalProviderId,omitempty"`
	ExternalUserId *string `json:"externalUserId,omitempty"`
	FirstName NullableString `json:"firstName,omitempty"`
	LastName NullableString `json:"lastName,omitempty"`
	Policies []AdministratorAccessPolicyModel `json:"policies,omitempty"`
	ProviderType AdministratorProviderType `json:"providerType"`
	Type string `json:"type"`
}

// NewCreateAdministratorInputModel instantiates a new CreateAdministratorInputModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAdministratorInputModel(accessType string, providerType AdministratorProviderType, type_ string) *CreateAdministratorInputModel {
	this := CreateAdministratorInputModel{}
	this.AccessType = accessType
	this.ProviderType = providerType
	this.Type = type_
	return &this
}

// NewCreateAdministratorInputModelWithDefaults instantiates a new CreateAdministratorInputModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAdministratorInputModelWithDefaults() *CreateAdministratorInputModel {
	this := CreateAdministratorInputModel{}
	return &this
}

// GetAccessType returns the AccessType field value
func (o *CreateAdministratorInputModel) GetAccessType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *CreateAdministratorInputModel) GetAccessTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *CreateAdministratorInputModel) SetAccessType(v string) {
	o.AccessType = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdministratorInputModel) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdministratorInputModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *CreateAdministratorInputModel) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *CreateAdministratorInputModel) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *CreateAdministratorInputModel) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdministratorInputModel) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdministratorInputModel) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *CreateAdministratorInputModel) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *CreateAdministratorInputModel) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *CreateAdministratorInputModel) UnsetEmail() {
	o.Email.Unset()
}

// GetExternalProviderId returns the ExternalProviderId field value if set, zero value otherwise.
func (o *CreateAdministratorInputModel) GetExternalProviderId() string {
	if o == nil || IsNil(o.ExternalProviderId) {
		var ret string
		return ret
	}
	return *o.ExternalProviderId
}

// GetExternalProviderIdOk returns a tuple with the ExternalProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAdministratorInputModel) GetExternalProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalProviderId) {
		return nil, false
	}
	return o.ExternalProviderId, true
}

// HasExternalProviderId returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasExternalProviderId() bool {
	if o != nil && !IsNil(o.ExternalProviderId) {
		return true
	}

	return false
}

// SetExternalProviderId gets a reference to the given string and assigns it to the ExternalProviderId field.
func (o *CreateAdministratorInputModel) SetExternalProviderId(v string) {
	o.ExternalProviderId = &v
}

// GetExternalUserId returns the ExternalUserId field value if set, zero value otherwise.
func (o *CreateAdministratorInputModel) GetExternalUserId() string {
	if o == nil || IsNil(o.ExternalUserId) {
		var ret string
		return ret
	}
	return *o.ExternalUserId
}

// GetExternalUserIdOk returns a tuple with the ExternalUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAdministratorInputModel) GetExternalUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUserId) {
		return nil, false
	}
	return o.ExternalUserId, true
}

// HasExternalUserId returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasExternalUserId() bool {
	if o != nil && !IsNil(o.ExternalUserId) {
		return true
	}

	return false
}

// SetExternalUserId gets a reference to the given string and assigns it to the ExternalUserId field.
func (o *CreateAdministratorInputModel) SetExternalUserId(v string) {
	o.ExternalUserId = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdministratorInputModel) GetFirstName() string {
	if o == nil || IsNil(o.FirstName.Get()) {
		var ret string
		return ret
	}
	return *o.FirstName.Get()
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdministratorInputModel) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FirstName.Get(), o.FirstName.IsSet()
}

// HasFirstName returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasFirstName() bool {
	if o != nil && o.FirstName.IsSet() {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given NullableString and assigns it to the FirstName field.
func (o *CreateAdministratorInputModel) SetFirstName(v string) {
	o.FirstName.Set(&v)
}
// SetFirstNameNil sets the value for FirstName to be an explicit nil
func (o *CreateAdministratorInputModel) SetFirstNameNil() {
	o.FirstName.Set(nil)
}

// UnsetFirstName ensures that no value is present for FirstName, not even an explicit nil
func (o *CreateAdministratorInputModel) UnsetFirstName() {
	o.FirstName.Unset()
}

// GetLastName returns the LastName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdministratorInputModel) GetLastName() string {
	if o == nil || IsNil(o.LastName.Get()) {
		var ret string
		return ret
	}
	return *o.LastName.Get()
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdministratorInputModel) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastName.Get(), o.LastName.IsSet()
}

// HasLastName returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasLastName() bool {
	if o != nil && o.LastName.IsSet() {
		return true
	}

	return false
}

// SetLastName gets a reference to the given NullableString and assigns it to the LastName field.
func (o *CreateAdministratorInputModel) SetLastName(v string) {
	o.LastName.Set(&v)
}
// SetLastNameNil sets the value for LastName to be an explicit nil
func (o *CreateAdministratorInputModel) SetLastNameNil() {
	o.LastName.Set(nil)
}

// UnsetLastName ensures that no value is present for LastName, not even an explicit nil
func (o *CreateAdministratorInputModel) UnsetLastName() {
	o.LastName.Unset()
}

// GetPolicies returns the Policies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAdministratorInputModel) GetPolicies() []AdministratorAccessPolicyModel {
	if o == nil {
		var ret []AdministratorAccessPolicyModel
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAdministratorInputModel) GetPoliciesOk() ([]AdministratorAccessPolicyModel, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *CreateAdministratorInputModel) HasPolicies() bool {
	if o != nil && IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []AdministratorAccessPolicyModel and assigns it to the Policies field.
func (o *CreateAdministratorInputModel) SetPolicies(v []AdministratorAccessPolicyModel) {
	o.Policies = v
}

// GetProviderType returns the ProviderType field value
func (o *CreateAdministratorInputModel) GetProviderType() AdministratorProviderType {
	if o == nil {
		var ret AdministratorProviderType
		return ret
	}

	return o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value
// and a boolean to check if the value has been set.
func (o *CreateAdministratorInputModel) GetProviderTypeOk() (*AdministratorProviderType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderType, true
}

// SetProviderType sets field value
func (o *CreateAdministratorInputModel) SetProviderType(v AdministratorProviderType) {
	o.ProviderType = v
}

// GetType returns the Type field value
func (o *CreateAdministratorInputModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateAdministratorInputModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateAdministratorInputModel) SetType(v string) {
	o.Type = v
}

func (o CreateAdministratorInputModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAdministratorInputModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessType"] = o.AccessType
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if !IsNil(o.ExternalProviderId) {
		toSerialize["externalProviderId"] = o.ExternalProviderId
	}
	if !IsNil(o.ExternalUserId) {
		toSerialize["externalUserId"] = o.ExternalUserId
	}
	if o.FirstName.IsSet() {
		toSerialize["firstName"] = o.FirstName.Get()
	}
	if o.LastName.IsSet() {
		toSerialize["lastName"] = o.LastName.Get()
	}
	if o.Policies != nil {
		toSerialize["policies"] = o.Policies
	}
	toSerialize["providerType"] = o.ProviderType
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableCreateAdministratorInputModel struct {
	value *CreateAdministratorInputModel
	isSet bool
}

func (v NullableCreateAdministratorInputModel) Get() *CreateAdministratorInputModel {
	return v.value
}

func (v *NullableCreateAdministratorInputModel) Set(val *CreateAdministratorInputModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAdministratorInputModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAdministratorInputModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAdministratorInputModel(val *CreateAdministratorInputModel) *NullableCreateAdministratorInputModel {
	return &NullableCreateAdministratorInputModel{value: val, isSet: true}
}

func (v NullableCreateAdministratorInputModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAdministratorInputModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


