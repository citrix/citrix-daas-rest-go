/*
Administrators APIs

APIs for managing CC administrators.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
)

// checks if the AdministratorsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdministratorsResult{}

// AdministratorsResult struct for AdministratorsResult
type AdministratorsResult struct {
	ContinuationToken NullableString        `json:"continuationToken,omitempty"`
	Items             []AdministratorResult `json:"items,omitempty"`
}

// NewAdministratorsResult instantiates a new AdministratorsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministratorsResult() *AdministratorsResult {
	this := AdministratorsResult{}
	return &this
}

// NewAdministratorsResultWithDefaults instantiates a new AdministratorsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministratorsResultWithDefaults() *AdministratorsResult {
	this := AdministratorsResult{}
	return &this
}

// GetContinuationToken returns the ContinuationToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdministratorsResult) GetContinuationToken() string {
	if o == nil || IsNil(o.ContinuationToken.Get()) {
		var ret string
		return ret
	}
	return *o.ContinuationToken.Get()
}

// GetContinuationTokenOk returns a tuple with the ContinuationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdministratorsResult) GetContinuationTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContinuationToken.Get(), o.ContinuationToken.IsSet()
}

// HasContinuationToken returns a boolean if a field has been set.
func (o *AdministratorsResult) HasContinuationToken() bool {
	if o != nil && o.ContinuationToken.IsSet() {
		return true
	}

	return false
}

// SetContinuationToken gets a reference to the given NullableString and assigns it to the ContinuationToken field.
func (o *AdministratorsResult) SetContinuationToken(v string) {
	o.ContinuationToken.Set(&v)
}

// SetContinuationTokenNil sets the value for ContinuationToken to be an explicit nil
func (o *AdministratorsResult) SetContinuationTokenNil() {
	o.ContinuationToken.Set(nil)
}

// UnsetContinuationToken ensures that no value is present for ContinuationToken, not even an explicit nil
func (o *AdministratorsResult) UnsetContinuationToken() {
	o.ContinuationToken.Unset()
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdministratorsResult) GetItems() []AdministratorResult {
	if o == nil {
		var ret []AdministratorResult
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdministratorsResult) GetItemsOk() ([]AdministratorResult, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AdministratorsResult) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AdministratorResult and assigns it to the Items field.
func (o *AdministratorsResult) SetItems(v []AdministratorResult) {
	o.Items = v
}

func (o AdministratorsResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdministratorsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContinuationToken.IsSet() {
		toSerialize["continuationToken"] = o.ContinuationToken.Get()
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

type NullableAdministratorsResult struct {
	value *AdministratorsResult
	isSet bool
}

func (v NullableAdministratorsResult) Get() *AdministratorsResult {
	return v.value
}

func (v *NullableAdministratorsResult) Set(val *AdministratorsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministratorsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministratorsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministratorsResult(val *AdministratorsResult) *NullableAdministratorsResult {
	return &NullableAdministratorsResult{value: val, isSet: true}
}

func (v NullableAdministratorsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministratorsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
