/*
Administrators APIs

APIs for managing CC administrators.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
)

// checks if the BooleanPolicyProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BooleanPolicyProperty{}

// BooleanPolicyProperty struct for BooleanPolicyProperty
type BooleanPolicyProperty struct {
	Value *bool `json:"value,omitempty"`
	CanChangeValue *bool `json:"canChangeValue,omitempty"`
}

// NewBooleanPolicyProperty instantiates a new BooleanPolicyProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooleanPolicyProperty() *BooleanPolicyProperty {
	this := BooleanPolicyProperty{}
	return &this
}

// NewBooleanPolicyPropertyWithDefaults instantiates a new BooleanPolicyProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooleanPolicyPropertyWithDefaults() *BooleanPolicyProperty {
	this := BooleanPolicyProperty{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BooleanPolicyProperty) GetValue() bool {
	if o == nil || IsNil(o.Value) {
		var ret bool
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanPolicyProperty) GetValueOk() (*bool, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *BooleanPolicyProperty) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given bool and assigns it to the Value field.
func (o *BooleanPolicyProperty) SetValue(v bool) {
	o.Value = &v
}

// GetCanChangeValue returns the CanChangeValue field value if set, zero value otherwise.
func (o *BooleanPolicyProperty) GetCanChangeValue() bool {
	if o == nil || IsNil(o.CanChangeValue) {
		var ret bool
		return ret
	}
	return *o.CanChangeValue
}

// GetCanChangeValueOk returns a tuple with the CanChangeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanPolicyProperty) GetCanChangeValueOk() (*bool, bool) {
	if o == nil || IsNil(o.CanChangeValue) {
		return nil, false
	}
	return o.CanChangeValue, true
}

// HasCanChangeValue returns a boolean if a field has been set.
func (o *BooleanPolicyProperty) HasCanChangeValue() bool {
	if o != nil && !IsNil(o.CanChangeValue) {
		return true
	}

	return false
}

// SetCanChangeValue gets a reference to the given bool and assigns it to the CanChangeValue field.
func (o *BooleanPolicyProperty) SetCanChangeValue(v bool) {
	o.CanChangeValue = &v
}

func (o BooleanPolicyProperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BooleanPolicyProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.CanChangeValue) {
		toSerialize["canChangeValue"] = o.CanChangeValue
	}
	return toSerialize, nil
}

type NullableBooleanPolicyProperty struct {
	value *BooleanPolicyProperty
	isSet bool
}

func (v NullableBooleanPolicyProperty) Get() *BooleanPolicyProperty {
	return v.value
}

func (v *NullableBooleanPolicyProperty) Set(val *BooleanPolicyProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableBooleanPolicyProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableBooleanPolicyProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooleanPolicyProperty(val *BooleanPolicyProperty) *NullableBooleanPolicyProperty {
	return &NullableBooleanPolicyProperty{value: val, isSet: true}
}

func (v NullableBooleanPolicyProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooleanPolicyProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


