/*
Administrators APIs

Testing AdministratorsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package ccadmins

import (
	"context"
	"testing"

	openapiclient "github.com/citrix/citrix-daas-rest-go/ccadmins"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_ccadmins_AdministratorsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AdministratorsAPIService CreateAdministrator", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AdministratorsAPI.CreateAdministrator(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdministratorsAPIService DeleteAdministrator", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id string

		httpRes, err := apiClient.AdministratorsAPI.DeleteAdministrator(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdministratorsAPIService DeleteInvitation", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AdministratorsAPI.DeleteInvitation(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdministratorsAPIService FetchAdministrators", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AdministratorsAPI.FetchAdministrators(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdministratorsAPIService GetAdministratorAccess", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id string

		resp, httpRes, err := apiClient.AdministratorsAPI.GetAdministratorAccess(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdministratorsAPIService UpdateAdministratorAccess", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.AdministratorsAPI.UpdateAdministratorAccess(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
