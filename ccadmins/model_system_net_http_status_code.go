/*
Citrix.CloudServices.Administrators.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
	"fmt"
)

// SystemNetHttpStatusCode the model 'SystemNetHttpStatusCode'
type SystemNetHttpStatusCode string

// List of System.Net.HttpStatusCode
const (
	SYSTEMNETHTTPSTATUSCODE_CONTINUE SystemNetHttpStatusCode = "Continue"
	SYSTEMNETHTTPSTATUSCODE_SWITCHING_PROTOCOLS SystemNetHttpStatusCode = "SwitchingProtocols"
	SYSTEMNETHTTPSTATUSCODE_PROCESSING SystemNetHttpStatusCode = "Processing"
	SYSTEMNETHTTPSTATUSCODE_EARLY_HINTS SystemNetHttpStatusCode = "EarlyHints"
	SYSTEMNETHTTPSTATUSCODE_OK SystemNetHttpStatusCode = "OK"
	SYSTEMNETHTTPSTATUSCODE_CREATED SystemNetHttpStatusCode = "Created"
	SYSTEMNETHTTPSTATUSCODE_ACCEPTED SystemNetHttpStatusCode = "Accepted"
	SYSTEMNETHTTPSTATUSCODE_NON_AUTHORITATIVE_INFORMATION SystemNetHttpStatusCode = "NonAuthoritativeInformation"
	SYSTEMNETHTTPSTATUSCODE_NO_CONTENT SystemNetHttpStatusCode = "NoContent"
	SYSTEMNETHTTPSTATUSCODE_RESET_CONTENT SystemNetHttpStatusCode = "ResetContent"
	SYSTEMNETHTTPSTATUSCODE_PARTIAL_CONTENT SystemNetHttpStatusCode = "PartialContent"
	SYSTEMNETHTTPSTATUSCODE_MULTI_STATUS SystemNetHttpStatusCode = "MultiStatus"
	SYSTEMNETHTTPSTATUSCODE_ALREADY_REPORTED SystemNetHttpStatusCode = "AlreadyReported"
	SYSTEMNETHTTPSTATUSCODE_IM_USED SystemNetHttpStatusCode = "IMUsed"
	SYSTEMNETHTTPSTATUSCODE_MULTIPLE_CHOICES SystemNetHttpStatusCode = "MultipleChoices"
	SYSTEMNETHTTPSTATUSCODE_MOVED_PERMANENTLY SystemNetHttpStatusCode = "MovedPermanently"
	SYSTEMNETHTTPSTATUSCODE_FOUND SystemNetHttpStatusCode = "Found"
	SYSTEMNETHTTPSTATUSCODE_SEE_OTHER SystemNetHttpStatusCode = "SeeOther"
	SYSTEMNETHTTPSTATUSCODE_NOT_MODIFIED SystemNetHttpStatusCode = "NotModified"
	SYSTEMNETHTTPSTATUSCODE_USE_PROXY SystemNetHttpStatusCode = "UseProxy"
	SYSTEMNETHTTPSTATUSCODE_UNUSED SystemNetHttpStatusCode = "Unused"
	SYSTEMNETHTTPSTATUSCODE_TEMPORARY_REDIRECT SystemNetHttpStatusCode = "TemporaryRedirect"
	SYSTEMNETHTTPSTATUSCODE_PERMANENT_REDIRECT SystemNetHttpStatusCode = "PermanentRedirect"
	SYSTEMNETHTTPSTATUSCODE_BAD_REQUEST SystemNetHttpStatusCode = "BadRequest"
	SYSTEMNETHTTPSTATUSCODE_UNAUTHORIZED SystemNetHttpStatusCode = "Unauthorized"
	SYSTEMNETHTTPSTATUSCODE_PAYMENT_REQUIRED SystemNetHttpStatusCode = "PaymentRequired"
	SYSTEMNETHTTPSTATUSCODE_FORBIDDEN SystemNetHttpStatusCode = "Forbidden"
	SYSTEMNETHTTPSTATUSCODE_NOT_FOUND SystemNetHttpStatusCode = "NotFound"
	SYSTEMNETHTTPSTATUSCODE_METHOD_NOT_ALLOWED SystemNetHttpStatusCode = "MethodNotAllowed"
	SYSTEMNETHTTPSTATUSCODE_NOT_ACCEPTABLE SystemNetHttpStatusCode = "NotAcceptable"
	SYSTEMNETHTTPSTATUSCODE_PROXY_AUTHENTICATION_REQUIRED SystemNetHttpStatusCode = "ProxyAuthenticationRequired"
	SYSTEMNETHTTPSTATUSCODE_REQUEST_TIMEOUT SystemNetHttpStatusCode = "RequestTimeout"
	SYSTEMNETHTTPSTATUSCODE_CONFLICT SystemNetHttpStatusCode = "Conflict"
	SYSTEMNETHTTPSTATUSCODE_GONE SystemNetHttpStatusCode = "Gone"
	SYSTEMNETHTTPSTATUSCODE_LENGTH_REQUIRED SystemNetHttpStatusCode = "LengthRequired"
	SYSTEMNETHTTPSTATUSCODE_PRECONDITION_FAILED SystemNetHttpStatusCode = "PreconditionFailed"
	SYSTEMNETHTTPSTATUSCODE_REQUEST_ENTITY_TOO_LARGE SystemNetHttpStatusCode = "RequestEntityTooLarge"
	SYSTEMNETHTTPSTATUSCODE_REQUEST_URI_TOO_LONG SystemNetHttpStatusCode = "RequestUriTooLong"
	SYSTEMNETHTTPSTATUSCODE_UNSUPPORTED_MEDIA_TYPE SystemNetHttpStatusCode = "UnsupportedMediaType"
	SYSTEMNETHTTPSTATUSCODE_REQUESTED_RANGE_NOT_SATISFIABLE SystemNetHttpStatusCode = "RequestedRangeNotSatisfiable"
	SYSTEMNETHTTPSTATUSCODE_EXPECTATION_FAILED SystemNetHttpStatusCode = "ExpectationFailed"
	SYSTEMNETHTTPSTATUSCODE_MISDIRECTED_REQUEST SystemNetHttpStatusCode = "MisdirectedRequest"
	SYSTEMNETHTTPSTATUSCODE_UNPROCESSABLE_ENTITY SystemNetHttpStatusCode = "UnprocessableEntity"
	SYSTEMNETHTTPSTATUSCODE_LOCKED SystemNetHttpStatusCode = "Locked"
	SYSTEMNETHTTPSTATUSCODE_FAILED_DEPENDENCY SystemNetHttpStatusCode = "FailedDependency"
	SYSTEMNETHTTPSTATUSCODE_UPGRADE_REQUIRED SystemNetHttpStatusCode = "UpgradeRequired"
	SYSTEMNETHTTPSTATUSCODE_PRECONDITION_REQUIRED SystemNetHttpStatusCode = "PreconditionRequired"
	SYSTEMNETHTTPSTATUSCODE_TOO_MANY_REQUESTS SystemNetHttpStatusCode = "TooManyRequests"
	SYSTEMNETHTTPSTATUSCODE_REQUEST_HEADER_FIELDS_TOO_LARGE SystemNetHttpStatusCode = "RequestHeaderFieldsTooLarge"
	SYSTEMNETHTTPSTATUSCODE_UNAVAILABLE_FOR_LEGAL_REASONS SystemNetHttpStatusCode = "UnavailableForLegalReasons"
	SYSTEMNETHTTPSTATUSCODE_INTERNAL_SERVER_ERROR SystemNetHttpStatusCode = "InternalServerError"
	SYSTEMNETHTTPSTATUSCODE_NOT_IMPLEMENTED SystemNetHttpStatusCode = "NotImplemented"
	SYSTEMNETHTTPSTATUSCODE_BAD_GATEWAY SystemNetHttpStatusCode = "BadGateway"
	SYSTEMNETHTTPSTATUSCODE_SERVICE_UNAVAILABLE SystemNetHttpStatusCode = "ServiceUnavailable"
	SYSTEMNETHTTPSTATUSCODE_GATEWAY_TIMEOUT SystemNetHttpStatusCode = "GatewayTimeout"
	SYSTEMNETHTTPSTATUSCODE_HTTP_VERSION_NOT_SUPPORTED SystemNetHttpStatusCode = "HttpVersionNotSupported"
	SYSTEMNETHTTPSTATUSCODE_VARIANT_ALSO_NEGOTIATES SystemNetHttpStatusCode = "VariantAlsoNegotiates"
	SYSTEMNETHTTPSTATUSCODE_INSUFFICIENT_STORAGE SystemNetHttpStatusCode = "InsufficientStorage"
	SYSTEMNETHTTPSTATUSCODE_LOOP_DETECTED SystemNetHttpStatusCode = "LoopDetected"
	SYSTEMNETHTTPSTATUSCODE_NOT_EXTENDED SystemNetHttpStatusCode = "NotExtended"
	SYSTEMNETHTTPSTATUSCODE_NETWORK_AUTHENTICATION_REQUIRED SystemNetHttpStatusCode = "NetworkAuthenticationRequired"
)

// All allowed values of SystemNetHttpStatusCode enum
var AllowedSystemNetHttpStatusCodeEnumValues = []SystemNetHttpStatusCode{
	"Continue",
	"SwitchingProtocols",
	"Processing",
	"EarlyHints",
	"OK",
	"Created",
	"Accepted",
	"NonAuthoritativeInformation",
	"NoContent",
	"ResetContent",
	"PartialContent",
	"MultiStatus",
	"AlreadyReported",
	"IMUsed",
	"MultipleChoices",
	"MovedPermanently",
	"Found",
	"SeeOther",
	"NotModified",
	"UseProxy",
	"Unused",
	"TemporaryRedirect",
	"PermanentRedirect",
	"BadRequest",
	"Unauthorized",
	"PaymentRequired",
	"Forbidden",
	"NotFound",
	"MethodNotAllowed",
	"NotAcceptable",
	"ProxyAuthenticationRequired",
	"RequestTimeout",
	"Conflict",
	"Gone",
	"LengthRequired",
	"PreconditionFailed",
	"RequestEntityTooLarge",
	"RequestUriTooLong",
	"UnsupportedMediaType",
	"RequestedRangeNotSatisfiable",
	"ExpectationFailed",
	"MisdirectedRequest",
	"UnprocessableEntity",
	"Locked",
	"FailedDependency",
	"UpgradeRequired",
	"PreconditionRequired",
	"TooManyRequests",
	"RequestHeaderFieldsTooLarge",
	"UnavailableForLegalReasons",
	"InternalServerError",
	"NotImplemented",
	"BadGateway",
	"ServiceUnavailable",
	"GatewayTimeout",
	"HttpVersionNotSupported",
	"VariantAlsoNegotiates",
	"InsufficientStorage",
	"LoopDetected",
	"NotExtended",
	"NetworkAuthenticationRequired",
}

func (v *SystemNetHttpStatusCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SystemNetHttpStatusCode(value)
	for _, existing := range AllowedSystemNetHttpStatusCodeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SystemNetHttpStatusCode", value)
}

// NewSystemNetHttpStatusCodeFromValue returns a pointer to a valid SystemNetHttpStatusCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSystemNetHttpStatusCodeFromValue(v string) (*SystemNetHttpStatusCode, error) {
	ev := SystemNetHttpStatusCode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SystemNetHttpStatusCode: valid values are %v", v, AllowedSystemNetHttpStatusCodeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SystemNetHttpStatusCode) IsValid() bool {
	for _, existing := range AllowedSystemNetHttpStatusCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to System.Net.HttpStatusCode value
func (v SystemNetHttpStatusCode) Ptr() *SystemNetHttpStatusCode {
	return &v
}

type NullableSystemNetHttpStatusCode struct {
	value *SystemNetHttpStatusCode
	isSet bool
}

func (v NullableSystemNetHttpStatusCode) Get() *SystemNetHttpStatusCode {
	return v.value
}

func (v *NullableSystemNetHttpStatusCode) Set(val *SystemNetHttpStatusCode) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemNetHttpStatusCode) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemNetHttpStatusCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemNetHttpStatusCode(val *SystemNetHttpStatusCode) *NullableSystemNetHttpStatusCode {
	return &NullableSystemNetHttpStatusCode{value: val, isSet: true}
}

func (v NullableSystemNetHttpStatusCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemNetHttpStatusCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

