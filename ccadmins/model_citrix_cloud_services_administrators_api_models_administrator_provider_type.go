/*
Citrix.CloudServices.Administrators.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccadmins

import (
	"encoding/json"
	"fmt"
)

// CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType the model 'CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType'
type CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType string

// List of Citrix.CloudServices.Administrators.ApiModels.AdministratorProviderType
const (
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_AZURE_AD CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "AzureAd"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_CITRIX_STS CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "CitrixSts"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_AD CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "Ad"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_GOOGLE CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "Google"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_OKTA CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "Okta"
	CITRIXCLOUDSERVICESADMINISTRATORSAPIMODELSADMINISTRATORPROVIDERTYPE_UNDEFINED CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType = "Undefined"
)

// All allowed values of CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType enum
var AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeEnumValues = []CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType{
	"AzureAd",
	"CitrixSts",
	"Ad",
	"Google",
	"Okta",
	"Undefined",
}

func (v *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType(value)
	for _, existing := range AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType", value)
}

// NewCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeFromValue returns a pointer to a valid CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeFromValue(v string) (*CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType, error) {
	ev := CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType: valid values are %v", v, AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) IsValid() bool {
	for _, existing := range AllowedCitrixCloudServicesAdministratorsApiModelsAdministratorProviderTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Citrix.CloudServices.Administrators.ApiModels.AdministratorProviderType value
func (v CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) Ptr() *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType {
	return &v
}

type NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType struct {
	value *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType
	isSet bool
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) Get() *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType {
	return v.value
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) Set(val *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) {
	v.value = val
	v.isSet = true
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) IsSet() bool {
	return v.isSet
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType(val *CitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType {
	return &NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType{value: val, isSet: true}
}

func (v NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCitrixCloudServicesAdministratorsApiModelsAdministratorProviderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

