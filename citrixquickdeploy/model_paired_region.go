/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the PairedRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PairedRegion{}

// PairedRegion struct for PairedRegion
type PairedRegion struct {
	Name           *string `json:"name,omitempty"`
	Id             *string `json:"id,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewPairedRegionWithDefaults instantiates a new PairedRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPairedRegionWithDefaults() *PairedRegion {
	this := PairedRegion{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PairedRegion) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PairedRegion) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PairedRegion) SetName(v string) {
	o.Name = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PairedRegion) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PairedRegion) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PairedRegion) SetId(v string) {
	o.Id = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *PairedRegion) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PairedRegion) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *PairedRegion) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o PairedRegion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PairedRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullablePairedRegion struct {
	value *PairedRegion
	isSet bool
}

func (v NullablePairedRegion) Get() *PairedRegion {
	return v.value
}

func (v *NullablePairedRegion) Set(val *PairedRegion) {
	v.value = val
	v.isSet = true
}

func (v NullablePairedRegion) IsSet() bool {
	return v.isSet
}

func (v *NullablePairedRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePairedRegion(val *PairedRegion) *NullablePairedRegion {
	return &NullablePairedRegion{value: val, isSet: true}
}

func (v NullablePairedRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePairedRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
