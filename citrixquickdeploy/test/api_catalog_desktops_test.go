/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Testing CatalogDesktopsCMDService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package citrixquickdeploy

import (
	"context"
	"testing"

	openapiclient "github.com/citrix/citrix-daas-rest-go/citrixquickdeploy"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_citrixquickdeploy_CatalogDesktopsCMDService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CatalogDesktopsCMDService GetCatalogDesktops", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customerId string
		var siteId string
		var catalogId string

		resp, httpRes, err := apiClient.CatalogDesktopsCMD.GetCatalogDesktops(context.Background(), customerId, siteId, catalogId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatalogDesktopsCMDService PublishDesktops", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customerId string
		var siteId string
		var catalogId string

		resp, httpRes, err := apiClient.CatalogDesktopsCMD.PublishDesktops(context.Background(), customerId, siteId, catalogId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatalogDesktopsCMDService UnpublishDesktop", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customerId string
		var siteId string
		var catalogId string
		var desktopId string

		httpRes, err := apiClient.CatalogDesktopsCMD.UnpublishDesktop(context.Background(), customerId, siteId, catalogId, desktopId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatalogDesktopsCMDService UnpublishDesktops", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customerId string
		var siteId string
		var catalogId string

		httpRes, err := apiClient.CatalogDesktopsCMD.UnpublishDesktops(context.Background(), customerId, siteId, catalogId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatalogDesktopsCMDService UpdateDesktop", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customerId string
		var siteId string
		var catalogId string
		var desktopId string

		httpRes, err := apiClient.CatalogDesktopsCMD.UpdateDesktop(context.Background(), customerId, siteId, catalogId, desktopId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
