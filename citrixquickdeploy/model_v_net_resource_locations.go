/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the VNetResourceLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VNetResourceLocations{}

// VNetResourceLocations struct for VNetResourceLocations
type VNetResourceLocations struct {
	// The id of the subscription
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// The list of resource locations associated with the subscription
	ResourceLocations []VNetResourceLocation `json:"resourceLocations,omitempty"`
}

// NewVNetResourceLocationsWithDefaults instantiates a new VNetResourceLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVNetResourceLocationsWithDefaults() *VNetResourceLocations {
	this := VNetResourceLocations{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *VNetResourceLocations) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VNetResourceLocations) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *VNetResourceLocations) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetResourceLocations returns the ResourceLocations field value if set, zero value otherwise.
func (o *VNetResourceLocations) GetResourceLocations() []VNetResourceLocation {
	if o == nil || IsNil(o.ResourceLocations) {
		var ret []VNetResourceLocation
		return ret
	}
	return o.ResourceLocations
}

// GetResourceLocationsOk returns a tuple with the ResourceLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VNetResourceLocations) GetResourceLocationsOk() ([]VNetResourceLocation, bool) {
	if o == nil || IsNil(o.ResourceLocations) {
		return nil, false
	}
	return o.ResourceLocations, true
}

// SetResourceLocations gets a reference to the given []VNetResourceLocation and assigns it to the ResourceLocations field.
func (o *VNetResourceLocations) SetResourceLocations(v []VNetResourceLocation) {
	o.ResourceLocations = v
}

func (o VNetResourceLocations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VNetResourceLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.ResourceLocations) {
		toSerialize["resourceLocations"] = o.ResourceLocations
	}
	return toSerialize, nil
}

type NullableVNetResourceLocations struct {
	value *VNetResourceLocations
	isSet bool
}

func (v NullableVNetResourceLocations) Get() *VNetResourceLocations {
	return v.value
}

func (v *NullableVNetResourceLocations) Set(val *VNetResourceLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableVNetResourceLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableVNetResourceLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVNetResourceLocations(val *VNetResourceLocations) *NullableVNetResourceLocations {
	return &NullableVNetResourceLocations{value: val, isSet: true}
}

func (v NullableVNetResourceLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVNetResourceLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
