/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureStorageFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureStorageFile{}

// AzureStorageFile struct for AzureStorageFile
type AzureStorageFile struct {
	// Name of the storage account the file is located within
	StorageAccount string `json:"storageAccount"`
	// Name of the file
	Name string `json:"name"`
	// Path of the file within the storage account
	Uri string `json:"uri"`
}

// NewAzureStorageFileWithDefaults instantiates a new AzureStorageFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureStorageFileWithDefaults() *AzureStorageFile {
	this := AzureStorageFile{}
	return &this
}

// GetStorageAccount returns the StorageAccount field value
func (o *AzureStorageFile) GetStorageAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value
// and a boolean to check if the value has been set.
func (o *AzureStorageFile) GetStorageAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageAccount, true
}

// SetStorageAccount sets field value
func (o *AzureStorageFile) SetStorageAccount(v string) {
	o.StorageAccount = v
}

// GetName returns the Name field value
func (o *AzureStorageFile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureStorageFile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureStorageFile) SetName(v string) {
	o.Name = v
}

// GetUri returns the Uri field value
func (o *AzureStorageFile) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *AzureStorageFile) GetUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *AzureStorageFile) SetUri(v string) {
	o.Uri = v
}

func (o AzureStorageFile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureStorageFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storageAccount"] = o.StorageAccount
	toSerialize["name"] = o.Name
	toSerialize["uri"] = o.Uri
	return toSerialize, nil
}

type NullableAzureStorageFile struct {
	value *AzureStorageFile
	isSet bool
}

func (v NullableAzureStorageFile) Get() *AzureStorageFile {
	return v.value
}

func (v *NullableAzureStorageFile) Set(val *AzureStorageFile) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureStorageFile) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureStorageFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureStorageFile(val *AzureStorageFile) *NullableAzureStorageFile {
	return &NullableAzureStorageFile{value: val, isSet: true}
}

func (v NullableAzureStorageFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureStorageFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
