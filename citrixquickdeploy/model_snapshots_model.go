/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the SnapshotsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotsModel{}

// SnapshotsModel struct for SnapshotsModel
type SnapshotsModel struct {
	Items                    []SnapshotModel `json:"items,omitempty"`
	LastRestoreTime          *time.Time      `json:"lastRestoreTime,omitempty"`
	LastBackupTime           *time.Time      `json:"lastBackupTime,omitempty"`
	LastRestoredSnapshotName *string         `json:"lastRestoredSnapshotName,omitempty"`
	LastRestoredSnapshot     *SnapshotModel  `json:"lastRestoredSnapshot,omitempty"`
}

// NewSnapshotsModelWithDefaults instantiates a new SnapshotsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotsModelWithDefaults() *SnapshotsModel {
	this := SnapshotsModel{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SnapshotsModel) GetItems() []SnapshotModel {
	if o == nil || IsNil(o.Items) {
		var ret []SnapshotModel
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsModel) GetItemsOk() ([]SnapshotModel, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// SetItems gets a reference to the given []SnapshotModel and assigns it to the Items field.
func (o *SnapshotsModel) SetItems(v []SnapshotModel) {
	o.Items = v
}

// GetLastRestoreTime returns the LastRestoreTime field value if set, zero value otherwise.
func (o *SnapshotsModel) GetLastRestoreTime() time.Time {
	if o == nil || IsNil(o.LastRestoreTime) {
		var ret time.Time
		return ret
	}
	return *o.LastRestoreTime
}

// GetLastRestoreTimeOk returns a tuple with the LastRestoreTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsModel) GetLastRestoreTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastRestoreTime) {
		return nil, false
	}
	return o.LastRestoreTime, true
}

// SetLastRestoreTime gets a reference to the given time.Time and assigns it to the LastRestoreTime field.
func (o *SnapshotsModel) SetLastRestoreTime(v time.Time) {
	o.LastRestoreTime = &v
}

// GetLastBackupTime returns the LastBackupTime field value if set, zero value otherwise.
func (o *SnapshotsModel) GetLastBackupTime() time.Time {
	if o == nil || IsNil(o.LastBackupTime) {
		var ret time.Time
		return ret
	}
	return *o.LastBackupTime
}

// GetLastBackupTimeOk returns a tuple with the LastBackupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsModel) GetLastBackupTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastBackupTime) {
		return nil, false
	}
	return o.LastBackupTime, true
}

// SetLastBackupTime gets a reference to the given time.Time and assigns it to the LastBackupTime field.
func (o *SnapshotsModel) SetLastBackupTime(v time.Time) {
	o.LastBackupTime = &v
}

// GetLastRestoredSnapshotName returns the LastRestoredSnapshotName field value if set, zero value otherwise.
func (o *SnapshotsModel) GetLastRestoredSnapshotName() string {
	if o == nil || IsNil(o.LastRestoredSnapshotName) {
		var ret string
		return ret
	}
	return *o.LastRestoredSnapshotName
}

// GetLastRestoredSnapshotNameOk returns a tuple with the LastRestoredSnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsModel) GetLastRestoredSnapshotNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastRestoredSnapshotName) {
		return nil, false
	}
	return o.LastRestoredSnapshotName, true
}

// SetLastRestoredSnapshotName gets a reference to the given string and assigns it to the LastRestoredSnapshotName field.
func (o *SnapshotsModel) SetLastRestoredSnapshotName(v string) {
	o.LastRestoredSnapshotName = &v
}

// GetLastRestoredSnapshot returns the LastRestoredSnapshot field value if set, zero value otherwise.
func (o *SnapshotsModel) GetLastRestoredSnapshot() SnapshotModel {
	if o == nil || IsNil(o.LastRestoredSnapshot) {
		var ret SnapshotModel
		return ret
	}
	return *o.LastRestoredSnapshot
}

// GetLastRestoredSnapshotOk returns a tuple with the LastRestoredSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotsModel) GetLastRestoredSnapshotOk() (*SnapshotModel, bool) {
	if o == nil || IsNil(o.LastRestoredSnapshot) {
		return nil, false
	}
	return o.LastRestoredSnapshot, true
}

// SetLastRestoredSnapshot gets a reference to the given SnapshotModel and assigns it to the LastRestoredSnapshot field.
func (o *SnapshotsModel) SetLastRestoredSnapshot(v SnapshotModel) {
	o.LastRestoredSnapshot = &v
}

func (o SnapshotsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.LastRestoreTime) {
		toSerialize["lastRestoreTime"] = o.LastRestoreTime
	}
	if !IsNil(o.LastBackupTime) {
		toSerialize["lastBackupTime"] = o.LastBackupTime
	}
	if !IsNil(o.LastRestoredSnapshotName) {
		toSerialize["lastRestoredSnapshotName"] = o.LastRestoredSnapshotName
	}
	if !IsNil(o.LastRestoredSnapshot) {
		toSerialize["lastRestoredSnapshot"] = o.LastRestoredSnapshot
	}
	return toSerialize, nil
}

type NullableSnapshotsModel struct {
	value *SnapshotsModel
	isSet bool
}

func (v NullableSnapshotsModel) Get() *SnapshotsModel {
	return v.value
}

func (v *NullableSnapshotsModel) Set(val *SnapshotsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotsModel(val *SnapshotsModel) *NullableSnapshotsModel {
	return &NullableSnapshotsModel{value: val, isSet: true}
}

func (v NullableSnapshotsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
