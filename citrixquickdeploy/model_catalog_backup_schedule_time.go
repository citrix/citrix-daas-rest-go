/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogBackupScheduleTime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogBackupScheduleTime{}

// CatalogBackupScheduleTime struct for CatalogBackupScheduleTime
type CatalogBackupScheduleTime struct {
	// Timezone the backup should take place in
	TimeZoneId *string `json:"timeZoneId,omitempty"`
	// Hour of the day to initiate backup (backup will occur sometime within the hour)
	Hour *int32 `json:"hour,omitempty"`
}

// NewCatalogBackupScheduleTimeWithDefaults instantiates a new CatalogBackupScheduleTime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogBackupScheduleTimeWithDefaults() *CatalogBackupScheduleTime {
	this := CatalogBackupScheduleTime{}
	return &this
}

// GetTimeZoneId returns the TimeZoneId field value if set, zero value otherwise.
func (o *CatalogBackupScheduleTime) GetTimeZoneId() string {
	if o == nil || IsNil(o.TimeZoneId) {
		var ret string
		return ret
	}
	return *o.TimeZoneId
}

// GetTimeZoneIdOk returns a tuple with the TimeZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogBackupScheduleTime) GetTimeZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZoneId) {
		return nil, false
	}
	return o.TimeZoneId, true
}

// SetTimeZoneId gets a reference to the given string and assigns it to the TimeZoneId field.
func (o *CatalogBackupScheduleTime) SetTimeZoneId(v string) {
	o.TimeZoneId = &v
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *CatalogBackupScheduleTime) GetHour() int32 {
	if o == nil || IsNil(o.Hour) {
		var ret int32
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogBackupScheduleTime) GetHourOk() (*int32, bool) {
	if o == nil || IsNil(o.Hour) {
		return nil, false
	}
	return o.Hour, true
}

// SetHour gets a reference to the given int32 and assigns it to the Hour field.
func (o *CatalogBackupScheduleTime) SetHour(v int32) {
	o.Hour = &v
}

func (o CatalogBackupScheduleTime) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogBackupScheduleTime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeZoneId) {
		toSerialize["timeZoneId"] = o.TimeZoneId
	}
	if !IsNil(o.Hour) {
		toSerialize["hour"] = o.Hour
	}
	return toSerialize, nil
}

type NullableCatalogBackupScheduleTime struct {
	value *CatalogBackupScheduleTime
	isSet bool
}

func (v NullableCatalogBackupScheduleTime) Get() *CatalogBackupScheduleTime {
	return v.value
}

func (v *NullableCatalogBackupScheduleTime) Set(val *CatalogBackupScheduleTime) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogBackupScheduleTime) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogBackupScheduleTime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogBackupScheduleTime(val *CatalogBackupScheduleTime) *NullableCatalogBackupScheduleTime {
	return &NullableCatalogBackupScheduleTime{value: val, isSet: true}
}

func (v NullableCatalogBackupScheduleTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogBackupScheduleTime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
