/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the MachineForBackup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineForBackup{}

// MachineForBackup struct for MachineForBackup
type MachineForBackup struct {
	MachineName   string `json:"machineName"`
	ResourceGroup string `json:"resourceGroup"`
}

// NewMachineForBackupWithDefaults instantiates a new MachineForBackup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineForBackupWithDefaults() *MachineForBackup {
	this := MachineForBackup{}
	return &this
}

// GetMachineName returns the MachineName field value
func (o *MachineForBackup) GetMachineName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MachineName
}

// GetMachineNameOk returns a tuple with the MachineName field value
// and a boolean to check if the value has been set.
func (o *MachineForBackup) GetMachineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MachineName, true
}

// SetMachineName sets field value
func (o *MachineForBackup) SetMachineName(v string) {
	o.MachineName = v
}

// GetResourceGroup returns the ResourceGroup field value
func (o *MachineForBackup) GetResourceGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value
// and a boolean to check if the value has been set.
func (o *MachineForBackup) GetResourceGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceGroup, true
}

// SetResourceGroup sets field value
func (o *MachineForBackup) SetResourceGroup(v string) {
	o.ResourceGroup = v
}

func (o MachineForBackup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineForBackup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["machineName"] = o.MachineName
	toSerialize["resourceGroup"] = o.ResourceGroup
	return toSerialize, nil
}

type NullableMachineForBackup struct {
	value *MachineForBackup
	isSet bool
}

func (v NullableMachineForBackup) Get() *MachineForBackup {
	return v.value
}

func (v *NullableMachineForBackup) Set(val *MachineForBackup) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineForBackup) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineForBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineForBackup(val *MachineForBackup) *NullableMachineForBackup {
	return &NullableMachineForBackup{value: val, isSet: true}
}

func (v NullableMachineForBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineForBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
