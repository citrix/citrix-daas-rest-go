/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ApiGetContainersResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiGetContainersResult{}

// ApiGetContainersResult struct for ApiGetContainersResult
type ApiGetContainersResult struct {
	ParentContainers  []string `json:"parentContainers,omitempty"`
	DomainName        *string  `json:"domainName,omitempty"`
	ForestName        *string  `json:"forestName,omitempty"`
	Guid              *string  `json:"guid,omitempty"`
	DistinguishedName *string  `json:"distinguishedName,omitempty"`
	Name              *string  `json:"name,omitempty"`
	CanonicalName     *string  `json:"canonicalName,omitempty"`
}

// NewApiGetContainersResultWithDefaults instantiates a new ApiGetContainersResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiGetContainersResultWithDefaults() *ApiGetContainersResult {
	this := ApiGetContainersResult{}
	return &this
}

// GetParentContainers returns the ParentContainers field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetParentContainers() []string {
	if o == nil || IsNil(o.ParentContainers) {
		var ret []string
		return ret
	}
	return o.ParentContainers
}

// GetParentContainersOk returns a tuple with the ParentContainers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetParentContainersOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentContainers) {
		return nil, false
	}
	return o.ParentContainers, true
}

// SetParentContainers gets a reference to the given []string and assigns it to the ParentContainers field.
func (o *ApiGetContainersResult) SetParentContainers(v []string) {
	o.ParentContainers = v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *ApiGetContainersResult) SetDomainName(v string) {
	o.DomainName = &v
}

// GetForestName returns the ForestName field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetForestName() string {
	if o == nil || IsNil(o.ForestName) {
		var ret string
		return ret
	}
	return *o.ForestName
}

// GetForestNameOk returns a tuple with the ForestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetForestNameOk() (*string, bool) {
	if o == nil || IsNil(o.ForestName) {
		return nil, false
	}
	return o.ForestName, true
}

// SetForestName gets a reference to the given string and assigns it to the ForestName field.
func (o *ApiGetContainersResult) SetForestName(v string) {
	o.ForestName = &v
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *ApiGetContainersResult) SetGuid(v string) {
	o.Guid = &v
}

// GetDistinguishedName returns the DistinguishedName field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetDistinguishedName() string {
	if o == nil || IsNil(o.DistinguishedName) {
		var ret string
		return ret
	}
	return *o.DistinguishedName
}

// GetDistinguishedNameOk returns a tuple with the DistinguishedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetDistinguishedNameOk() (*string, bool) {
	if o == nil || IsNil(o.DistinguishedName) {
		return nil, false
	}
	return o.DistinguishedName, true
}

// SetDistinguishedName gets a reference to the given string and assigns it to the DistinguishedName field.
func (o *ApiGetContainersResult) SetDistinguishedName(v string) {
	o.DistinguishedName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiGetContainersResult) SetName(v string) {
	o.Name = &v
}

// GetCanonicalName returns the CanonicalName field value if set, zero value otherwise.
func (o *ApiGetContainersResult) GetCanonicalName() string {
	if o == nil || IsNil(o.CanonicalName) {
		var ret string
		return ret
	}
	return *o.CanonicalName
}

// GetCanonicalNameOk returns a tuple with the CanonicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiGetContainersResult) GetCanonicalNameOk() (*string, bool) {
	if o == nil || IsNil(o.CanonicalName) {
		return nil, false
	}
	return o.CanonicalName, true
}

// SetCanonicalName gets a reference to the given string and assigns it to the CanonicalName field.
func (o *ApiGetContainersResult) SetCanonicalName(v string) {
	o.CanonicalName = &v
}

func (o ApiGetContainersResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiGetContainersResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentContainers) {
		toSerialize["parentContainers"] = o.ParentContainers
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.ForestName) {
		toSerialize["forestName"] = o.ForestName
	}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.DistinguishedName) {
		toSerialize["distinguishedName"] = o.DistinguishedName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CanonicalName) {
		toSerialize["canonicalName"] = o.CanonicalName
	}
	return toSerialize, nil
}

type NullableApiGetContainersResult struct {
	value *ApiGetContainersResult
	isSet bool
}

func (v NullableApiGetContainersResult) Get() *ApiGetContainersResult {
	return v.value
}

func (v *NullableApiGetContainersResult) Set(val *ApiGetContainersResult) {
	v.value = val
	v.isSet = true
}

func (v NullableApiGetContainersResult) IsSet() bool {
	return v.isSet
}

func (v *NullableApiGetContainersResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiGetContainersResult(val *ApiGetContainersResult) *NullableApiGetContainersResult {
	return &NullableApiGetContainersResult{value: val, isSet: true}
}

func (v NullableApiGetContainersResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiGetContainersResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
