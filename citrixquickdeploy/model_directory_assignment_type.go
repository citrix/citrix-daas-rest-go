/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// DirectoryAssignmentType the model 'DirectoryAssignmentType'
type DirectoryAssignmentType string

// List of DirectoryAssignmentType
const (
	DIRECTORYASSIGNMENTTYPE_POOL     DirectoryAssignmentType = "Pool"
	DIRECTORYASSIGNMENTTYPE_CUSTOMER DirectoryAssignmentType = "Customer"
)

// All allowed values of DirectoryAssignmentType enum
var AllowedDirectoryAssignmentTypeEnumValues = []DirectoryAssignmentType{
	"Pool",
	"Customer",
}

func (v *DirectoryAssignmentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = DirectoryAssignmentType(value)
	return nil
}

// NewDirectoryAssignmentTypeFromValue returns a pointer to a valid DirectoryAssignmentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDirectoryAssignmentTypeFromValue(v string) (*DirectoryAssignmentType, error) {
	ev := DirectoryAssignmentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DirectoryAssignmentType: valid values are %v", v, AllowedDirectoryAssignmentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DirectoryAssignmentType) IsValid() bool {
	for _, existing := range AllowedDirectoryAssignmentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DirectoryAssignmentType value
func (v DirectoryAssignmentType) Ptr() *DirectoryAssignmentType {
	return &v
}

type NullableDirectoryAssignmentType struct {
	value *DirectoryAssignmentType
	isSet bool
}

func (v NullableDirectoryAssignmentType) Get() *DirectoryAssignmentType {
	return v.value
}

func (v *NullableDirectoryAssignmentType) Set(val *DirectoryAssignmentType) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryAssignmentType) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryAssignmentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryAssignmentType(val *DirectoryAssignmentType) *NullableDirectoryAssignmentType {
	return &NullableDirectoryAssignmentType{value: val, isSet: true}
}

func (v NullableDirectoryAssignmentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryAssignmentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
