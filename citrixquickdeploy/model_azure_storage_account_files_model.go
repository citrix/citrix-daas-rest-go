/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureStorageAccountFilesModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureStorageAccountFilesModel{}

// AzureStorageAccountFilesModel struct for AzureStorageAccountFilesModel
type AzureStorageAccountFilesModel struct {
	// Name of the Storage Account
	StorageAccount string `json:"storageAccount"`
	// Files within the account
	Items []AzureStorageFile `json:"items"`
	// Alias of Items property for backward compatibility
	Files []AzureStorageFile `json:"files,omitempty"`
}

// NewAzureStorageAccountFilesModelWithDefaults instantiates a new AzureStorageAccountFilesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureStorageAccountFilesModelWithDefaults() *AzureStorageAccountFilesModel {
	this := AzureStorageAccountFilesModel{}
	return &this
}

// GetStorageAccount returns the StorageAccount field value
func (o *AzureStorageAccountFilesModel) GetStorageAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value
// and a boolean to check if the value has been set.
func (o *AzureStorageAccountFilesModel) GetStorageAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageAccount, true
}

// SetStorageAccount sets field value
func (o *AzureStorageAccountFilesModel) SetStorageAccount(v string) {
	o.StorageAccount = v
}

// GetItems returns the Items field value
func (o *AzureStorageAccountFilesModel) GetItems() []AzureStorageFile {
	if o == nil {
		var ret []AzureStorageFile
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AzureStorageAccountFilesModel) GetItemsOk() ([]AzureStorageFile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AzureStorageAccountFilesModel) SetItems(v []AzureStorageFile) {
	o.Items = v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *AzureStorageAccountFilesModel) GetFiles() []AzureStorageFile {
	if o == nil || IsNil(o.Files) {
		var ret []AzureStorageFile
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureStorageAccountFilesModel) GetFilesOk() ([]AzureStorageFile, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// SetFiles gets a reference to the given []AzureStorageFile and assigns it to the Files field.
func (o *AzureStorageAccountFilesModel) SetFiles(v []AzureStorageFile) {
	o.Files = v
}

func (o AzureStorageAccountFilesModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureStorageAccountFilesModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["storageAccount"] = o.StorageAccount
	toSerialize["items"] = o.Items
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	return toSerialize, nil
}

type NullableAzureStorageAccountFilesModel struct {
	value *AzureStorageAccountFilesModel
	isSet bool
}

func (v NullableAzureStorageAccountFilesModel) Get() *AzureStorageAccountFilesModel {
	return v.value
}

func (v *NullableAzureStorageAccountFilesModel) Set(val *AzureStorageAccountFilesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureStorageAccountFilesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureStorageAccountFilesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureStorageAccountFilesModel(val *AzureStorageAccountFilesModel) *NullableAzureStorageAccountFilesModel {
	return &NullableAzureStorageAccountFilesModel{value: val, isSet: true}
}

func (v NullableAzureStorageAccountFilesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureStorageAccountFilesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
