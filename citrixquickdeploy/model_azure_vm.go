/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVM{}

// AzureVM struct for AzureVM
type AzureVM struct {
	PowerState        *string              `json:"powerState,omitempty"`
	MachineSid        *string              `json:"machineSid,omitempty"`
	MachineUid        *int32               `json:"machineUid,omitempty"`
	ResourceGroupName *string              `json:"resourceGroupName,omitempty"`
	Name              *string              `json:"name,omitempty"`
	ResourceType      *CatalogResourceType `json:"resourceType,omitempty"`
}

// NewAzureVMWithDefaults instantiates a new AzureVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVMWithDefaults() *AzureVM {
	this := AzureVM{}
	return &this
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *AzureVM) GetPowerState() string {
	if o == nil || IsNil(o.PowerState) {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetPowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *AzureVM) SetPowerState(v string) {
	o.PowerState = &v
}

// GetMachineSid returns the MachineSid field value if set, zero value otherwise.
func (o *AzureVM) GetMachineSid() string {
	if o == nil || IsNil(o.MachineSid) {
		var ret string
		return ret
	}
	return *o.MachineSid
}

// GetMachineSidOk returns a tuple with the MachineSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetMachineSidOk() (*string, bool) {
	if o == nil || IsNil(o.MachineSid) {
		return nil, false
	}
	return o.MachineSid, true
}

// SetMachineSid gets a reference to the given string and assigns it to the MachineSid field.
func (o *AzureVM) SetMachineSid(v string) {
	o.MachineSid = &v
}

// GetMachineUid returns the MachineUid field value if set, zero value otherwise.
func (o *AzureVM) GetMachineUid() int32 {
	if o == nil || IsNil(o.MachineUid) {
		var ret int32
		return ret
	}
	return *o.MachineUid
}

// GetMachineUidOk returns a tuple with the MachineUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetMachineUidOk() (*int32, bool) {
	if o == nil || IsNil(o.MachineUid) {
		return nil, false
	}
	return o.MachineUid, true
}

// SetMachineUid gets a reference to the given int32 and assigns it to the MachineUid field.
func (o *AzureVM) SetMachineUid(v int32) {
	o.MachineUid = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureVM) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroupName) {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureVM) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureVM) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureVM) SetName(v string) {
	o.Name = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureVM) GetResourceType() CatalogResourceType {
	if o == nil || IsNil(o.ResourceType) {
		var ret CatalogResourceType
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVM) GetResourceTypeOk() (*CatalogResourceType, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// SetResourceType gets a reference to the given CatalogResourceType and assigns it to the ResourceType field.
func (o *AzureVM) SetResourceType(v CatalogResourceType) {
	o.ResourceType = &v
}

func (o AzureVM) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PowerState) {
		toSerialize["powerState"] = o.PowerState
	}
	if !IsNil(o.MachineSid) {
		toSerialize["machineSid"] = o.MachineSid
	}
	if !IsNil(o.MachineUid) {
		toSerialize["machineUid"] = o.MachineUid
	}
	if !IsNil(o.ResourceGroupName) {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	return toSerialize, nil
}

type NullableAzureVM struct {
	value *AzureVM
	isSet bool
}

func (v NullableAzureVM) Get() *AzureVM {
	return v.value
}

func (v *NullableAzureVM) Set(val *AzureVM) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVM) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVM(val *AzureVM) *NullableAzureVM {
	return &NullableAzureVM{value: val, isSet: true}
}

func (v NullableAzureVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
