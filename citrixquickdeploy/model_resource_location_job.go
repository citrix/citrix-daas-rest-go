/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the ResourceLocationJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLocationJob{}

// ResourceLocationJob struct for ResourceLocationJob
type ResourceLocationJob struct {
	// The type of job
	JobType *ResourceLocationJobType `json:"jobType,omitempty"`
	// The state of the job
	State *ResourceLocationJobState `json:"state,omitempty"`
	// Status of the job
	Status *ResourceLocationJobStatus `json:"status,omitempty"`
	// Error associated with the job failure
	StatusMessage *string `json:"statusMessage,omitempty"`
	// Time at which the job was completed at
	EndedAt *time.Time `json:"endedAt,omitempty"`
	// ID of the transaction performing the job
	TransactionId *string `json:"transactionId,omitempty"`
	// Quantity of items requested in the job
	Quantity *int32 `json:"quantity,omitempty"`
	// Quantity of items that failed the job
	QuantityFailed *int32 `json:"quantityFailed,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewResourceLocationJobWithDefaults instantiates a new ResourceLocationJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLocationJobWithDefaults() *ResourceLocationJob {
	this := ResourceLocationJob{}
	return &this
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetJobType() ResourceLocationJobType {
	if o == nil || IsNil(o.JobType) {
		var ret ResourceLocationJobType
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetJobTypeOk() (*ResourceLocationJobType, bool) {
	if o == nil || IsNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// SetJobType gets a reference to the given ResourceLocationJobType and assigns it to the JobType field.
func (o *ResourceLocationJob) SetJobType(v ResourceLocationJobType) {
	o.JobType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetState() ResourceLocationJobState {
	if o == nil || IsNil(o.State) {
		var ret ResourceLocationJobState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetStateOk() (*ResourceLocationJobState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given ResourceLocationJobState and assigns it to the State field.
func (o *ResourceLocationJob) SetState(v ResourceLocationJobState) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetStatus() ResourceLocationJobStatus {
	if o == nil || IsNil(o.Status) {
		var ret ResourceLocationJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetStatusOk() (*ResourceLocationJobStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given ResourceLocationJobStatus and assigns it to the Status field.
func (o *ResourceLocationJob) SetStatus(v ResourceLocationJobStatus) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *ResourceLocationJob) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *ResourceLocationJob) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ResourceLocationJob) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *ResourceLocationJob) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetQuantityFailed returns the QuantityFailed field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetQuantityFailed() int32 {
	if o == nil || IsNil(o.QuantityFailed) {
		var ret int32
		return ret
	}
	return *o.QuantityFailed
}

// GetQuantityFailedOk returns a tuple with the QuantityFailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetQuantityFailedOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityFailed) {
		return nil, false
	}
	return o.QuantityFailed, true
}

// SetQuantityFailed gets a reference to the given int32 and assigns it to the QuantityFailed field.
func (o *ResourceLocationJob) SetQuantityFailed(v int32) {
	o.QuantityFailed = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *ResourceLocationJob) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *ResourceLocationJob) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationJob) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *ResourceLocationJob) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o ResourceLocationJob) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLocationJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobType) {
		toSerialize["jobType"] = o.JobType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.EndedAt) {
		toSerialize["endedAt"] = o.EndedAt
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.QuantityFailed) {
		toSerialize["quantityFailed"] = o.QuantityFailed
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableResourceLocationJob struct {
	value *ResourceLocationJob
	isSet bool
}

func (v NullableResourceLocationJob) Get() *ResourceLocationJob {
	return v.value
}

func (v *NullableResourceLocationJob) Set(val *ResourceLocationJob) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLocationJob) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLocationJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLocationJob(val *ResourceLocationJob) *NullableResourceLocationJob {
	return &NullableResourceLocationJob{value: val, isSet: true}
}

func (v NullableResourceLocationJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLocationJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
