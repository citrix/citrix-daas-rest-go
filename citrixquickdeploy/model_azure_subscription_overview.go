/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the AzureSubscriptionOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSubscriptionOverview{}

// AzureSubscriptionOverview struct for AzureSubscriptionOverview
type AzureSubscriptionOverview struct {
	// Number of Images that are stored within this subscription
	LinkedImages *int32 `json:"linkedImages,omitempty"`
	// Number of Catalogs that have their resources stored in this subscription
	LinkedCatalogs *int32 `json:"linkedCatalogs,omitempty"`
	// Number of SimpleUI Advanced Catalogs that may have their resources stored in this subscription
	LinkedAdvancedCatalogs *int32 `json:"linkedAdvancedCatalogs,omitempty"`
	// The Azure Active Directory information for the directory tied to this subscription
	Directory           *string  `json:"directory,omitempty"`
	DirectoryDomainName *string  `json:"directoryDomainName,omitempty"`
	LinkedCatalogsIds   []string `json:"linkedCatalogsIds,omitempty"`
	LinkedImagesIds     []string `json:"linkedImagesIds,omitempty"`
	Warnings            []string `json:"warnings,omitempty"`
	// Number of VMs that have been created in the catalogs that are associated with this subscription.
	CatalogVMs *int32 `json:"catalogVMs,omitempty"`
	// Id of the customers subscription
	SubscriptionId string `json:"subscriptionId"`
	// Name of the Azure Subscription to display to the user
	Name string `json:"name"`
	// Indicates if this subscription is linked and we have the ability to manage resources within it
	IsLinked *bool `json:"isLinked,omitempty"`
	// Indicates whether catalog service can access the subscription or not
	IsValid *bool `json:"isValid,omitempty"`
	// Indicates whether subscription is managed by Citrix or not
	CitrixManaged *bool `json:"citrixManaged,omitempty"`
	// Which Citrix Managed subscription is this? For the first Citrix Managedsubscription this is set to null
	CitrixManagedIndex *int32 `json:"citrixManagedIndex,omitempty"`
	// Indicates if this subscription should not be used
	Disabled *bool `json:"disabled,omitempty"`
	// Indicates that partner-tenant relationship exists if not null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// ID of the Azure App User provided to manage the subscription
	AzureAppId *string `json:"azureAppId,omitempty"`
	// An obfuscated form of the client secret that only shows the first few characters
	ObfuscatedAzureAppSecret *string `json:"obfuscatedAzureAppSecret,omitempty"`
	// The expiration date of the user provided secret, if one was used
	SecretExpirationDate *time.Time `json:"secretExpirationDate,omitempty"`
	// Id of the directory that the user provided to manage the subscription
	TenantId *string `json:"tenantId,omitempty"`
	// Details of job to update the azure app credentials
	UpdateJob *DataStoreAzureSubscriptionUpdateCredentialsJobModel `json:"updateJob,omitempty"`
	// The details of consent obtained for use of managed subscription
	UserConsentDetails *DataStoreManagedSubscriptionConsentModel `json:"userConsentDetails,omitempty"`
}

// NewAzureSubscriptionOverviewWithDefaults instantiates a new AzureSubscriptionOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSubscriptionOverviewWithDefaults() *AzureSubscriptionOverview {
	this := AzureSubscriptionOverview{}
	return &this
}

// GetLinkedImages returns the LinkedImages field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetLinkedImages() int32 {
	if o == nil || IsNil(o.LinkedImages) {
		var ret int32
		return ret
	}
	return *o.LinkedImages
}

// GetLinkedImagesOk returns a tuple with the LinkedImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetLinkedImagesOk() (*int32, bool) {
	if o == nil || IsNil(o.LinkedImages) {
		return nil, false
	}
	return o.LinkedImages, true
}

// SetLinkedImages gets a reference to the given int32 and assigns it to the LinkedImages field.
func (o *AzureSubscriptionOverview) SetLinkedImages(v int32) {
	o.LinkedImages = &v
}

// GetLinkedCatalogs returns the LinkedCatalogs field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetLinkedCatalogs() int32 {
	if o == nil || IsNil(o.LinkedCatalogs) {
		var ret int32
		return ret
	}
	return *o.LinkedCatalogs
}

// GetLinkedCatalogsOk returns a tuple with the LinkedCatalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetLinkedCatalogsOk() (*int32, bool) {
	if o == nil || IsNil(o.LinkedCatalogs) {
		return nil, false
	}
	return o.LinkedCatalogs, true
}

// SetLinkedCatalogs gets a reference to the given int32 and assigns it to the LinkedCatalogs field.
func (o *AzureSubscriptionOverview) SetLinkedCatalogs(v int32) {
	o.LinkedCatalogs = &v
}

// GetLinkedAdvancedCatalogs returns the LinkedAdvancedCatalogs field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetLinkedAdvancedCatalogs() int32 {
	if o == nil || IsNil(o.LinkedAdvancedCatalogs) {
		var ret int32
		return ret
	}
	return *o.LinkedAdvancedCatalogs
}

// GetLinkedAdvancedCatalogsOk returns a tuple with the LinkedAdvancedCatalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetLinkedAdvancedCatalogsOk() (*int32, bool) {
	if o == nil || IsNil(o.LinkedAdvancedCatalogs) {
		return nil, false
	}
	return o.LinkedAdvancedCatalogs, true
}

// SetLinkedAdvancedCatalogs gets a reference to the given int32 and assigns it to the LinkedAdvancedCatalogs field.
func (o *AzureSubscriptionOverview) SetLinkedAdvancedCatalogs(v int32) {
	o.LinkedAdvancedCatalogs = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetDirectory() string {
	if o == nil || IsNil(o.Directory) {
		var ret string
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// SetDirectory gets a reference to the given string and assigns it to the Directory field.
func (o *AzureSubscriptionOverview) SetDirectory(v string) {
	o.Directory = &v
}

// GetDirectoryDomainName returns the DirectoryDomainName field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetDirectoryDomainName() string {
	if o == nil || IsNil(o.DirectoryDomainName) {
		var ret string
		return ret
	}
	return *o.DirectoryDomainName
}

// GetDirectoryDomainNameOk returns a tuple with the DirectoryDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetDirectoryDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DirectoryDomainName) {
		return nil, false
	}
	return o.DirectoryDomainName, true
}

// SetDirectoryDomainName gets a reference to the given string and assigns it to the DirectoryDomainName field.
func (o *AzureSubscriptionOverview) SetDirectoryDomainName(v string) {
	o.DirectoryDomainName = &v
}

// GetLinkedCatalogsIds returns the LinkedCatalogsIds field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetLinkedCatalogsIds() []string {
	if o == nil || IsNil(o.LinkedCatalogsIds) {
		var ret []string
		return ret
	}
	return o.LinkedCatalogsIds
}

// GetLinkedCatalogsIdsOk returns a tuple with the LinkedCatalogsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetLinkedCatalogsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LinkedCatalogsIds) {
		return nil, false
	}
	return o.LinkedCatalogsIds, true
}

// SetLinkedCatalogsIds gets a reference to the given []string and assigns it to the LinkedCatalogsIds field.
func (o *AzureSubscriptionOverview) SetLinkedCatalogsIds(v []string) {
	o.LinkedCatalogsIds = v
}

// GetLinkedImagesIds returns the LinkedImagesIds field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetLinkedImagesIds() []string {
	if o == nil || IsNil(o.LinkedImagesIds) {
		var ret []string
		return ret
	}
	return o.LinkedImagesIds
}

// GetLinkedImagesIdsOk returns a tuple with the LinkedImagesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetLinkedImagesIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LinkedImagesIds) {
		return nil, false
	}
	return o.LinkedImagesIds, true
}

// SetLinkedImagesIds gets a reference to the given []string and assigns it to the LinkedImagesIds field.
func (o *AzureSubscriptionOverview) SetLinkedImagesIds(v []string) {
	o.LinkedImagesIds = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *AzureSubscriptionOverview) SetWarnings(v []string) {
	o.Warnings = v
}

// GetCatalogVMs returns the CatalogVMs field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetCatalogVMs() int32 {
	if o == nil || IsNil(o.CatalogVMs) {
		var ret int32
		return ret
	}
	return *o.CatalogVMs
}

// GetCatalogVMsOk returns a tuple with the CatalogVMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetCatalogVMsOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogVMs) {
		return nil, false
	}
	return o.CatalogVMs, true
}

// SetCatalogVMs gets a reference to the given int32 and assigns it to the CatalogVMs field.
func (o *AzureSubscriptionOverview) SetCatalogVMs(v int32) {
	o.CatalogVMs = &v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *AzureSubscriptionOverview) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *AzureSubscriptionOverview) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetName returns the Name field value
func (o *AzureSubscriptionOverview) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureSubscriptionOverview) SetName(v string) {
	o.Name = v
}

// GetIsLinked returns the IsLinked field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetIsLinked() bool {
	if o == nil || IsNil(o.IsLinked) {
		var ret bool
		return ret
	}
	return *o.IsLinked
}

// GetIsLinkedOk returns a tuple with the IsLinked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetIsLinkedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLinked) {
		return nil, false
	}
	return o.IsLinked, true
}

// SetIsLinked gets a reference to the given bool and assigns it to the IsLinked field.
func (o *AzureSubscriptionOverview) SetIsLinked(v bool) {
	o.IsLinked = &v
}

// GetIsValid returns the IsValid field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetIsValid() bool {
	if o == nil || IsNil(o.IsValid) {
		var ret bool
		return ret
	}
	return *o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetIsValidOk() (*bool, bool) {
	if o == nil || IsNil(o.IsValid) {
		return nil, false
	}
	return o.IsValid, true
}

// SetIsValid gets a reference to the given bool and assigns it to the IsValid field.
func (o *AzureSubscriptionOverview) SetIsValid(v bool) {
	o.IsValid = &v
}

// GetCitrixManaged returns the CitrixManaged field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetCitrixManaged() bool {
	if o == nil || IsNil(o.CitrixManaged) {
		var ret bool
		return ret
	}
	return *o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixManaged) {
		return nil, false
	}
	return o.CitrixManaged, true
}

// SetCitrixManaged gets a reference to the given bool and assigns it to the CitrixManaged field.
func (o *AzureSubscriptionOverview) SetCitrixManaged(v bool) {
	o.CitrixManaged = &v
}

// GetCitrixManagedIndex returns the CitrixManagedIndex field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetCitrixManagedIndex() int32 {
	if o == nil || IsNil(o.CitrixManagedIndex) {
		var ret int32
		return ret
	}
	return *o.CitrixManagedIndex
}

// GetCitrixManagedIndexOk returns a tuple with the CitrixManagedIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetCitrixManagedIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.CitrixManagedIndex) {
		return nil, false
	}
	return o.CitrixManagedIndex, true
}

// SetCitrixManagedIndex gets a reference to the given int32 and assigns it to the CitrixManagedIndex field.
func (o *AzureSubscriptionOverview) SetCitrixManagedIndex(v int32) {
	o.CitrixManagedIndex = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *AzureSubscriptionOverview) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *AzureSubscriptionOverview) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetAzureAppId returns the AzureAppId field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetAzureAppId() string {
	if o == nil || IsNil(o.AzureAppId) {
		var ret string
		return ret
	}
	return *o.AzureAppId
}

// GetAzureAppIdOk returns a tuple with the AzureAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetAzureAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureAppId) {
		return nil, false
	}
	return o.AzureAppId, true
}

// SetAzureAppId gets a reference to the given string and assigns it to the AzureAppId field.
func (o *AzureSubscriptionOverview) SetAzureAppId(v string) {
	o.AzureAppId = &v
}

// GetObfuscatedAzureAppSecret returns the ObfuscatedAzureAppSecret field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetObfuscatedAzureAppSecret() string {
	if o == nil || IsNil(o.ObfuscatedAzureAppSecret) {
		var ret string
		return ret
	}
	return *o.ObfuscatedAzureAppSecret
}

// GetObfuscatedAzureAppSecretOk returns a tuple with the ObfuscatedAzureAppSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetObfuscatedAzureAppSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ObfuscatedAzureAppSecret) {
		return nil, false
	}
	return o.ObfuscatedAzureAppSecret, true
}

// SetObfuscatedAzureAppSecret gets a reference to the given string and assigns it to the ObfuscatedAzureAppSecret field.
func (o *AzureSubscriptionOverview) SetObfuscatedAzureAppSecret(v string) {
	o.ObfuscatedAzureAppSecret = &v
}

// GetSecretExpirationDate returns the SecretExpirationDate field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetSecretExpirationDate() time.Time {
	if o == nil || IsNil(o.SecretExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.SecretExpirationDate
}

// GetSecretExpirationDateOk returns a tuple with the SecretExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetSecretExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SecretExpirationDate) {
		return nil, false
	}
	return o.SecretExpirationDate, true
}

// SetSecretExpirationDate gets a reference to the given time.Time and assigns it to the SecretExpirationDate field.
func (o *AzureSubscriptionOverview) SetSecretExpirationDate(v time.Time) {
	o.SecretExpirationDate = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureSubscriptionOverview) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUpdateJob returns the UpdateJob field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetUpdateJob() DataStoreAzureSubscriptionUpdateCredentialsJobModel {
	if o == nil || IsNil(o.UpdateJob) {
		var ret DataStoreAzureSubscriptionUpdateCredentialsJobModel
		return ret
	}
	return *o.UpdateJob
}

// GetUpdateJobOk returns a tuple with the UpdateJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetUpdateJobOk() (*DataStoreAzureSubscriptionUpdateCredentialsJobModel, bool) {
	if o == nil || IsNil(o.UpdateJob) {
		return nil, false
	}
	return o.UpdateJob, true
}

// SetUpdateJob gets a reference to the given DataStoreAzureSubscriptionUpdateCredentialsJobModel and assigns it to the UpdateJob field.
func (o *AzureSubscriptionOverview) SetUpdateJob(v DataStoreAzureSubscriptionUpdateCredentialsJobModel) {
	o.UpdateJob = &v
}

// GetUserConsentDetails returns the UserConsentDetails field value if set, zero value otherwise.
func (o *AzureSubscriptionOverview) GetUserConsentDetails() DataStoreManagedSubscriptionConsentModel {
	if o == nil || IsNil(o.UserConsentDetails) {
		var ret DataStoreManagedSubscriptionConsentModel
		return ret
	}
	return *o.UserConsentDetails
}

// GetUserConsentDetailsOk returns a tuple with the UserConsentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSubscriptionOverview) GetUserConsentDetailsOk() (*DataStoreManagedSubscriptionConsentModel, bool) {
	if o == nil || IsNil(o.UserConsentDetails) {
		return nil, false
	}
	return o.UserConsentDetails, true
}

// SetUserConsentDetails gets a reference to the given DataStoreManagedSubscriptionConsentModel and assigns it to the UserConsentDetails field.
func (o *AzureSubscriptionOverview) SetUserConsentDetails(v DataStoreManagedSubscriptionConsentModel) {
	o.UserConsentDetails = &v
}

func (o AzureSubscriptionOverview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSubscriptionOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkedImages) {
		toSerialize["linkedImages"] = o.LinkedImages
	}
	if !IsNil(o.LinkedCatalogs) {
		toSerialize["linkedCatalogs"] = o.LinkedCatalogs
	}
	if !IsNil(o.LinkedAdvancedCatalogs) {
		toSerialize["linkedAdvancedCatalogs"] = o.LinkedAdvancedCatalogs
	}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.DirectoryDomainName) {
		toSerialize["directoryDomainName"] = o.DirectoryDomainName
	}
	if !IsNil(o.LinkedCatalogsIds) {
		toSerialize["linkedCatalogsIds"] = o.LinkedCatalogsIds
	}
	if !IsNil(o.LinkedImagesIds) {
		toSerialize["linkedImagesIds"] = o.LinkedImagesIds
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.CatalogVMs) {
		toSerialize["catalogVMs"] = o.CatalogVMs
	}
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["name"] = o.Name
	if !IsNil(o.IsLinked) {
		toSerialize["isLinked"] = o.IsLinked
	}
	if !IsNil(o.IsValid) {
		toSerialize["isValid"] = o.IsValid
	}
	if !IsNil(o.CitrixManaged) {
		toSerialize["citrixManaged"] = o.CitrixManaged
	}
	if !IsNil(o.CitrixManagedIndex) {
		toSerialize["citrixManagedIndex"] = o.CitrixManagedIndex
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.AzureAppId) {
		toSerialize["azureAppId"] = o.AzureAppId
	}
	if !IsNil(o.ObfuscatedAzureAppSecret) {
		toSerialize["obfuscatedAzureAppSecret"] = o.ObfuscatedAzureAppSecret
	}
	if !IsNil(o.SecretExpirationDate) {
		toSerialize["secretExpirationDate"] = o.SecretExpirationDate
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.UpdateJob) {
		toSerialize["updateJob"] = o.UpdateJob
	}
	if !IsNil(o.UserConsentDetails) {
		toSerialize["userConsentDetails"] = o.UserConsentDetails
	}
	return toSerialize, nil
}

type NullableAzureSubscriptionOverview struct {
	value *AzureSubscriptionOverview
	isSet bool
}

func (v NullableAzureSubscriptionOverview) Get() *AzureSubscriptionOverview {
	return v.value
}

func (v *NullableAzureSubscriptionOverview) Set(val *AzureSubscriptionOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSubscriptionOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSubscriptionOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSubscriptionOverview(val *AzureSubscriptionOverview) *NullableAzureSubscriptionOverview {
	return &NullableAzureSubscriptionOverview{value: val, isSet: true}
}

func (v NullableAzureSubscriptionOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSubscriptionOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
