/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzurePoolSubscriptionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzurePoolSubscriptionDetails{}

// AzurePoolSubscriptionDetails struct for AzurePoolSubscriptionDetails
type AzurePoolSubscriptionDetails struct {
	// Id of the tenant being onboarded
	TenantId *string `json:"tenantId,omitempty"`
	// Id of the subscription being onboarded
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// Current state of subscription onboarding process
	State *DirectoryState `json:"state,omitempty"`
	// Failure details if any
	ErrorDetails *string `json:"errorDetails,omitempty"`
}

// NewAzurePoolSubscriptionDetailsWithDefaults instantiates a new AzurePoolSubscriptionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzurePoolSubscriptionDetailsWithDefaults() *AzurePoolSubscriptionDetails {
	this := AzurePoolSubscriptionDetails{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzurePoolSubscriptionDetails) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePoolSubscriptionDetails) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzurePoolSubscriptionDetails) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzurePoolSubscriptionDetails) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePoolSubscriptionDetails) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzurePoolSubscriptionDetails) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AzurePoolSubscriptionDetails) GetState() DirectoryState {
	if o == nil || IsNil(o.State) {
		var ret DirectoryState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePoolSubscriptionDetails) GetStateOk() (*DirectoryState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given DirectoryState and assigns it to the State field.
func (o *AzurePoolSubscriptionDetails) SetState(v DirectoryState) {
	o.State = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *AzurePoolSubscriptionDetails) GetErrorDetails() string {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePoolSubscriptionDetails) GetErrorDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *AzurePoolSubscriptionDetails) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

func (o AzurePoolSubscriptionDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzurePoolSubscriptionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	return toSerialize, nil
}

type NullableAzurePoolSubscriptionDetails struct {
	value *AzurePoolSubscriptionDetails
	isSet bool
}

func (v NullableAzurePoolSubscriptionDetails) Get() *AzurePoolSubscriptionDetails {
	return v.value
}

func (v *NullableAzurePoolSubscriptionDetails) Set(val *AzurePoolSubscriptionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAzurePoolSubscriptionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAzurePoolSubscriptionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzurePoolSubscriptionDetails(val *AzurePoolSubscriptionDetails) *NullableAzurePoolSubscriptionDetails {
	return &NullableAzurePoolSubscriptionDetails{value: val, isSet: true}
}

func (v NullableAzurePoolSubscriptionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzurePoolSubscriptionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
