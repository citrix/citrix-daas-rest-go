/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the TemplateImageDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateImageDetails{}

// TemplateImageDetails struct for TemplateImageDetails
type TemplateImageDetails struct {
	// Catalogs that are using this image
	Catalogs []TemplateImageAssociatedCatalog `json:"catalogs"`
	// Applications that have been discovered in this template
	Applications []Application `json:"applications"`
	// Id of the template image
	Id string `json:"id"`
	// Name of the Template Image / VM
	Name string `json:"name"`
	// Type of sessions that are supported by OS
	SessionSupport TemplateImageSessionSupport `json:"sessionSupport"`
	// State of the template image
	State TemplateImageState `json:"state"`
	// Sub State of template image
	SubState *TemplateImageSubState `json:"subState,omitempty"`
	// Type of operating system that will be imported
	OsPlatform *SupportedOperatingSystemType `json:"osPlatform,omitempty"`
	// Shows name of image OS
	OsName *string `json:"osName,omitempty"`
	// Shows version of image OS
	OsVersion *string `json:"osVersion,omitempty"`
	// For linux customers it shows domain configuration set in mcs.conf file
	LinuxDomainSupport *string `json:"linuxDomainSupport,omitempty"`
	// For linux customers it shows if rdp package was installed
	LinuxRdpSupport *bool `json:"linuxRdpSupport,omitempty"`
	// For windows customers it shows if mcsio driver was installed
	McsioSupport *bool `json:"mcsioSupport,omitempty"`
	// For windows customers it shows if VDA update service was installed
	VusSupport *bool `json:"vusSupport,omitempty"`
	// Shows public ip address for image
	PublicIp *string `json:"publicIp,omitempty"`
	// Shows private ip address for image
	PrivateIp *string `json:"privateIp,omitempty"`
	// Shows if image is currently domain joined and to which domain
	DomainName *string `json:"domainName,omitempty"`
	// Indicates if the image is using a server based OS
	IsServerOs *bool `json:"isServerOs,omitempty"`
	// Shows version of image Virtual Desktop Agent
	VdaVersion *string `json:"vdaVersion,omitempty"`
	// Status message enum related to verifying and enumerating the image
	StatusMessageId *string `json:"statusMessageId,omitempty"`
	// Status message related to verifying and enumerating the image
	Status *string `json:"status,omitempty"`
	// The string to displayed in UI for extra information
	ExtraInfo *string `json:"extraInfo,omitempty"`
	// Customer notes about template image
	Notes *string `json:"notes,omitempty"`
	// ID of the transaction that the image was verified on
	TransactionId *string `json:"transactionId,omitempty"`
	// Id of the Subscription where the image is stored (BYOA)
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// Name of the Subscription that catalog VMs will be deployed to
	SubscriptionName string `json:"subscriptionName"`
	// Name of the Azure Resource Group where the image is stored
	ResourceGroup *string `json:"resourceGroup,omitempty"`
	// Name of the Storage Account where the image is stored
	StorageAccount *string `json:"storageAccount,omitempty"`
	// Azure region where VMs are deployed for this catalog
	Region string `json:"region"`
	// Name of the Domain the Image Builder will join
	BuilderDomainName *string `json:"builderDomainName,omitempty"`
	// ID of the on-prem connection associated with the builder image
	BuilderConnectionId *string `json:"builderConnectionId,omitempty"`
	// Name of VM that is being used by the builder image
	BuilderVmName *string `json:"builderVmName,omitempty"`
	// Type of VM that is being used by the builder image
	BuilderVmType *string `json:"builderVmType,omitempty"`
	// Size of disk of VM that is being used by the builder image
	BuilderVmDiskSize *string `json:"builderVmDiskSize,omitempty"`
	// Ip Addresses allowed to RDP
	BuilderAllowedIPs []string `json:"builderAllowedIPs,omitempty"`
	// The HyperVGeneration that should be set to either V1 or V2
	HyperVGen *string `json:"hyperVGen,omitempty"`
	// Is TrustedLaunch VTPM supported in V2 gen
	VtpmEnabled *bool `json:"vtpmEnabled,omitempty"`
	// Is TrustedLaunch SecureBoot supported in V2 gen
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`
	// Whether the image was prepared by Citrix, or provided by the customer
	CitrixPrepared bool `json:"citrixPrepared"`
	// Indicates that partner-tenant relationship exists if not null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// Indicates if the image is using customer managed encryption keys
	IsCmekEnabled *bool `json:"isCmekEnabled,omitempty"`
	// Indicates if customer managed encryption key Id
	CmekId *string `json:"cmekId,omitempty"`
	// Indicates if the image is deprecated and should not be used in new catalogs
	IsDeprecated *bool `json:"isDeprecated,omitempty"`
	// Indicates if the image is built or imported with BYOA
	IsByoaImage *bool `json:"isByoaImage,omitempty"`
	// Number of catalogs that are using this image
	LinkedCatalogs *int32 `json:"linkedCatalogs,omitempty"`
	// Names of catalogs that are using this image
	LinkedCatalogsNames []string `json:"linkedCatalogsNames,omitempty"`
	// Created from datastore.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// Image builder finalized date.
	FinalizedDate *time.Time `json:"finalizedDate,omitempty"`
	// Customer image path in Azure
	Path *string `json:"path,omitempty"`
	// Shows version of sbsession
	SbSessionVdaVersion *string `json:"sbSessionVdaVersion,omitempty"`
	// Indicates if the image is for Secure Browser
	IsSecureBrowserImage *bool `json:"isSecureBrowserImage,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewTemplateImageDetailsWithDefaults instantiates a new TemplateImageDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateImageDetailsWithDefaults() *TemplateImageDetails {
	this := TemplateImageDetails{}
	return &this
}

// GetCatalogs returns the Catalogs field value
func (o *TemplateImageDetails) GetCatalogs() []TemplateImageAssociatedCatalog {
	if o == nil {
		var ret []TemplateImageAssociatedCatalog
		return ret
	}

	return o.Catalogs
}

// GetCatalogsOk returns a tuple with the Catalogs field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetCatalogsOk() ([]TemplateImageAssociatedCatalog, bool) {
	if o == nil {
		return nil, false
	}
	return o.Catalogs, true
}

// SetCatalogs sets field value
func (o *TemplateImageDetails) SetCatalogs(v []TemplateImageAssociatedCatalog) {
	o.Catalogs = v
}

// GetApplications returns the Applications field value
func (o *TemplateImageDetails) GetApplications() []Application {
	if o == nil {
		var ret []Application
		return ret
	}

	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetApplicationsOk() ([]Application, bool) {
	if o == nil {
		return nil, false
	}
	return o.Applications, true
}

// SetApplications sets field value
func (o *TemplateImageDetails) SetApplications(v []Application) {
	o.Applications = v
}

// GetId returns the Id field value
func (o *TemplateImageDetails) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemplateImageDetails) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TemplateImageDetails) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateImageDetails) SetName(v string) {
	o.Name = v
}

// GetSessionSupport returns the SessionSupport field value
func (o *TemplateImageDetails) GetSessionSupport() TemplateImageSessionSupport {
	if o == nil {
		var ret TemplateImageSessionSupport
		return ret
	}

	return o.SessionSupport
}

// GetSessionSupportOk returns a tuple with the SessionSupport field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSessionSupportOk() (*TemplateImageSessionSupport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionSupport, true
}

// SetSessionSupport sets field value
func (o *TemplateImageDetails) SetSessionSupport(v TemplateImageSessionSupport) {
	o.SessionSupport = v
}

// GetState returns the State field value
func (o *TemplateImageDetails) GetState() TemplateImageState {
	if o == nil {
		var ret TemplateImageState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetStateOk() (*TemplateImageState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TemplateImageDetails) SetState(v TemplateImageState) {
	o.State = v
}

// GetSubState returns the SubState field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetSubState() TemplateImageSubState {
	if o == nil || IsNil(o.SubState) {
		var ret TemplateImageSubState
		return ret
	}
	return *o.SubState
}

// GetSubStateOk returns a tuple with the SubState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSubStateOk() (*TemplateImageSubState, bool) {
	if o == nil || IsNil(o.SubState) {
		return nil, false
	}
	return o.SubState, true
}

// SetSubState gets a reference to the given TemplateImageSubState and assigns it to the SubState field.
func (o *TemplateImageDetails) SetSubState(v TemplateImageSubState) {
	o.SubState = &v
}

// GetOsPlatform returns the OsPlatform field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetOsPlatform() SupportedOperatingSystemType {
	if o == nil || IsNil(o.OsPlatform) {
		var ret SupportedOperatingSystemType
		return ret
	}
	return *o.OsPlatform
}

// GetOsPlatformOk returns a tuple with the OsPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetOsPlatformOk() (*SupportedOperatingSystemType, bool) {
	if o == nil || IsNil(o.OsPlatform) {
		return nil, false
	}
	return o.OsPlatform, true
}

// SetOsPlatform gets a reference to the given SupportedOperatingSystemType and assigns it to the OsPlatform field.
func (o *TemplateImageDetails) SetOsPlatform(v SupportedOperatingSystemType) {
	o.OsPlatform = &v
}

// GetOsName returns the OsName field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetOsName() string {
	if o == nil || IsNil(o.OsName) {
		var ret string
		return ret
	}
	return *o.OsName
}

// GetOsNameOk returns a tuple with the OsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetOsNameOk() (*string, bool) {
	if o == nil || IsNil(o.OsName) {
		return nil, false
	}
	return o.OsName, true
}

// SetOsName gets a reference to the given string and assigns it to the OsName field.
func (o *TemplateImageDetails) SetOsName(v string) {
	o.OsName = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *TemplateImageDetails) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetLinuxDomainSupport returns the LinuxDomainSupport field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetLinuxDomainSupport() string {
	if o == nil || IsNil(o.LinuxDomainSupport) {
		var ret string
		return ret
	}
	return *o.LinuxDomainSupport
}

// GetLinuxDomainSupportOk returns a tuple with the LinuxDomainSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetLinuxDomainSupportOk() (*string, bool) {
	if o == nil || IsNil(o.LinuxDomainSupport) {
		return nil, false
	}
	return o.LinuxDomainSupport, true
}

// SetLinuxDomainSupport gets a reference to the given string and assigns it to the LinuxDomainSupport field.
func (o *TemplateImageDetails) SetLinuxDomainSupport(v string) {
	o.LinuxDomainSupport = &v
}

// GetLinuxRdpSupport returns the LinuxRdpSupport field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetLinuxRdpSupport() bool {
	if o == nil || IsNil(o.LinuxRdpSupport) {
		var ret bool
		return ret
	}
	return *o.LinuxRdpSupport
}

// GetLinuxRdpSupportOk returns a tuple with the LinuxRdpSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetLinuxRdpSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.LinuxRdpSupport) {
		return nil, false
	}
	return o.LinuxRdpSupport, true
}

// SetLinuxRdpSupport gets a reference to the given bool and assigns it to the LinuxRdpSupport field.
func (o *TemplateImageDetails) SetLinuxRdpSupport(v bool) {
	o.LinuxRdpSupport = &v
}

// GetMcsioSupport returns the McsioSupport field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetMcsioSupport() bool {
	if o == nil || IsNil(o.McsioSupport) {
		var ret bool
		return ret
	}
	return *o.McsioSupport
}

// GetMcsioSupportOk returns a tuple with the McsioSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetMcsioSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.McsioSupport) {
		return nil, false
	}
	return o.McsioSupport, true
}

// SetMcsioSupport gets a reference to the given bool and assigns it to the McsioSupport field.
func (o *TemplateImageDetails) SetMcsioSupport(v bool) {
	o.McsioSupport = &v
}

// GetVusSupport returns the VusSupport field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetVusSupport() bool {
	if o == nil || IsNil(o.VusSupport) {
		var ret bool
		return ret
	}
	return *o.VusSupport
}

// GetVusSupportOk returns a tuple with the VusSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetVusSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.VusSupport) {
		return nil, false
	}
	return o.VusSupport, true
}

// SetVusSupport gets a reference to the given bool and assigns it to the VusSupport field.
func (o *TemplateImageDetails) SetVusSupport(v bool) {
	o.VusSupport = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *TemplateImageDetails) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *TemplateImageDetails) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *TemplateImageDetails) SetDomainName(v string) {
	o.DomainName = &v
}

// GetIsServerOs returns the IsServerOs field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetIsServerOs() bool {
	if o == nil || IsNil(o.IsServerOs) {
		var ret bool
		return ret
	}
	return *o.IsServerOs
}

// GetIsServerOsOk returns a tuple with the IsServerOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIsServerOsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsServerOs) {
		return nil, false
	}
	return o.IsServerOs, true
}

// SetIsServerOs gets a reference to the given bool and assigns it to the IsServerOs field.
func (o *TemplateImageDetails) SetIsServerOs(v bool) {
	o.IsServerOs = &v
}

// GetVdaVersion returns the VdaVersion field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetVdaVersion() string {
	if o == nil || IsNil(o.VdaVersion) {
		var ret string
		return ret
	}
	return *o.VdaVersion
}

// GetVdaVersionOk returns a tuple with the VdaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetVdaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.VdaVersion) {
		return nil, false
	}
	return o.VdaVersion, true
}

// SetVdaVersion gets a reference to the given string and assigns it to the VdaVersion field.
func (o *TemplateImageDetails) SetVdaVersion(v string) {
	o.VdaVersion = &v
}

// GetStatusMessageId returns the StatusMessageId field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetStatusMessageId() string {
	if o == nil || IsNil(o.StatusMessageId) {
		var ret string
		return ret
	}
	return *o.StatusMessageId
}

// GetStatusMessageIdOk returns a tuple with the StatusMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetStatusMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessageId) {
		return nil, false
	}
	return o.StatusMessageId, true
}

// SetStatusMessageId gets a reference to the given string and assigns it to the StatusMessageId field.
func (o *TemplateImageDetails) SetStatusMessageId(v string) {
	o.StatusMessageId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TemplateImageDetails) SetStatus(v string) {
	o.Status = &v
}

// GetExtraInfo returns the ExtraInfo field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetExtraInfo() string {
	if o == nil || IsNil(o.ExtraInfo) {
		var ret string
		return ret
	}
	return *o.ExtraInfo
}

// GetExtraInfoOk returns a tuple with the ExtraInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetExtraInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraInfo) {
		return nil, false
	}
	return o.ExtraInfo, true
}

// SetExtraInfo gets a reference to the given string and assigns it to the ExtraInfo field.
func (o *TemplateImageDetails) SetExtraInfo(v string) {
	o.ExtraInfo = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *TemplateImageDetails) SetNotes(v string) {
	o.Notes = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *TemplateImageDetails) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *TemplateImageDetails) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionName returns the SubscriptionName field value
func (o *TemplateImageDetails) GetSubscriptionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSubscriptionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionName, true
}

// SetSubscriptionName sets field value
func (o *TemplateImageDetails) SetSubscriptionName(v string) {
	o.SubscriptionName = v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetResourceGroup() string {
	if o == nil || IsNil(o.ResourceGroup) {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroup) {
		return nil, false
	}
	return o.ResourceGroup, true
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *TemplateImageDetails) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetStorageAccount returns the StorageAccount field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetStorageAccount() string {
	if o == nil || IsNil(o.StorageAccount) {
		var ret string
		return ret
	}
	return *o.StorageAccount
}

// GetStorageAccountOk returns a tuple with the StorageAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetStorageAccountOk() (*string, bool) {
	if o == nil || IsNil(o.StorageAccount) {
		return nil, false
	}
	return o.StorageAccount, true
}

// SetStorageAccount gets a reference to the given string and assigns it to the StorageAccount field.
func (o *TemplateImageDetails) SetStorageAccount(v string) {
	o.StorageAccount = &v
}

// GetRegion returns the Region field value
func (o *TemplateImageDetails) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *TemplateImageDetails) SetRegion(v string) {
	o.Region = v
}

// GetBuilderDomainName returns the BuilderDomainName field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderDomainName() string {
	if o == nil || IsNil(o.BuilderDomainName) {
		var ret string
		return ret
	}
	return *o.BuilderDomainName
}

// GetBuilderDomainNameOk returns a tuple with the BuilderDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.BuilderDomainName) {
		return nil, false
	}
	return o.BuilderDomainName, true
}

// SetBuilderDomainName gets a reference to the given string and assigns it to the BuilderDomainName field.
func (o *TemplateImageDetails) SetBuilderDomainName(v string) {
	o.BuilderDomainName = &v
}

// GetBuilderConnectionId returns the BuilderConnectionId field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderConnectionId() string {
	if o == nil || IsNil(o.BuilderConnectionId) {
		var ret string
		return ret
	}
	return *o.BuilderConnectionId
}

// GetBuilderConnectionIdOk returns a tuple with the BuilderConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.BuilderConnectionId) {
		return nil, false
	}
	return o.BuilderConnectionId, true
}

// SetBuilderConnectionId gets a reference to the given string and assigns it to the BuilderConnectionId field.
func (o *TemplateImageDetails) SetBuilderConnectionId(v string) {
	o.BuilderConnectionId = &v
}

// GetBuilderVmName returns the BuilderVmName field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderVmName() string {
	if o == nil || IsNil(o.BuilderVmName) {
		var ret string
		return ret
	}
	return *o.BuilderVmName
}

// GetBuilderVmNameOk returns a tuple with the BuilderVmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderVmNameOk() (*string, bool) {
	if o == nil || IsNil(o.BuilderVmName) {
		return nil, false
	}
	return o.BuilderVmName, true
}

// SetBuilderVmName gets a reference to the given string and assigns it to the BuilderVmName field.
func (o *TemplateImageDetails) SetBuilderVmName(v string) {
	o.BuilderVmName = &v
}

// GetBuilderVmType returns the BuilderVmType field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderVmType() string {
	if o == nil || IsNil(o.BuilderVmType) {
		var ret string
		return ret
	}
	return *o.BuilderVmType
}

// GetBuilderVmTypeOk returns a tuple with the BuilderVmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderVmTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BuilderVmType) {
		return nil, false
	}
	return o.BuilderVmType, true
}

// SetBuilderVmType gets a reference to the given string and assigns it to the BuilderVmType field.
func (o *TemplateImageDetails) SetBuilderVmType(v string) {
	o.BuilderVmType = &v
}

// GetBuilderVmDiskSize returns the BuilderVmDiskSize field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderVmDiskSize() string {
	if o == nil || IsNil(o.BuilderVmDiskSize) {
		var ret string
		return ret
	}
	return *o.BuilderVmDiskSize
}

// GetBuilderVmDiskSizeOk returns a tuple with the BuilderVmDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderVmDiskSizeOk() (*string, bool) {
	if o == nil || IsNil(o.BuilderVmDiskSize) {
		return nil, false
	}
	return o.BuilderVmDiskSize, true
}

// SetBuilderVmDiskSize gets a reference to the given string and assigns it to the BuilderVmDiskSize field.
func (o *TemplateImageDetails) SetBuilderVmDiskSize(v string) {
	o.BuilderVmDiskSize = &v
}

// GetBuilderAllowedIPs returns the BuilderAllowedIPs field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetBuilderAllowedIPs() []string {
	if o == nil || IsNil(o.BuilderAllowedIPs) {
		var ret []string
		return ret
	}
	return o.BuilderAllowedIPs
}

// GetBuilderAllowedIPsOk returns a tuple with the BuilderAllowedIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetBuilderAllowedIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.BuilderAllowedIPs) {
		return nil, false
	}
	return o.BuilderAllowedIPs, true
}

// SetBuilderAllowedIPs gets a reference to the given []string and assigns it to the BuilderAllowedIPs field.
func (o *TemplateImageDetails) SetBuilderAllowedIPs(v []string) {
	o.BuilderAllowedIPs = v
}

// GetHyperVGen returns the HyperVGen field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetHyperVGen() string {
	if o == nil || IsNil(o.HyperVGen) {
		var ret string
		return ret
	}
	return *o.HyperVGen
}

// GetHyperVGenOk returns a tuple with the HyperVGen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetHyperVGenOk() (*string, bool) {
	if o == nil || IsNil(o.HyperVGen) {
		return nil, false
	}
	return o.HyperVGen, true
}

// SetHyperVGen gets a reference to the given string and assigns it to the HyperVGen field.
func (o *TemplateImageDetails) SetHyperVGen(v string) {
	o.HyperVGen = &v
}

// GetVtpmEnabled returns the VtpmEnabled field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetVtpmEnabled() bool {
	if o == nil || IsNil(o.VtpmEnabled) {
		var ret bool
		return ret
	}
	return *o.VtpmEnabled
}

// GetVtpmEnabledOk returns a tuple with the VtpmEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetVtpmEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.VtpmEnabled) {
		return nil, false
	}
	return o.VtpmEnabled, true
}

// SetVtpmEnabled gets a reference to the given bool and assigns it to the VtpmEnabled field.
func (o *TemplateImageDetails) SetVtpmEnabled(v bool) {
	o.VtpmEnabled = &v
}

// GetSecureBootEnabled returns the SecureBootEnabled field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetSecureBootEnabled() bool {
	if o == nil || IsNil(o.SecureBootEnabled) {
		var ret bool
		return ret
	}
	return *o.SecureBootEnabled
}

// GetSecureBootEnabledOk returns a tuple with the SecureBootEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSecureBootEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureBootEnabled) {
		return nil, false
	}
	return o.SecureBootEnabled, true
}

// SetSecureBootEnabled gets a reference to the given bool and assigns it to the SecureBootEnabled field.
func (o *TemplateImageDetails) SetSecureBootEnabled(v bool) {
	o.SecureBootEnabled = &v
}

// GetCitrixPrepared returns the CitrixPrepared field value
func (o *TemplateImageDetails) GetCitrixPrepared() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CitrixPrepared
}

// GetCitrixPreparedOk returns a tuple with the CitrixPrepared field value
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetCitrixPreparedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CitrixPrepared, true
}

// SetCitrixPrepared sets field value
func (o *TemplateImageDetails) SetCitrixPrepared(v bool) {
	o.CitrixPrepared = v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *TemplateImageDetails) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetIsCmekEnabled returns the IsCmekEnabled field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetIsCmekEnabled() bool {
	if o == nil || IsNil(o.IsCmekEnabled) {
		var ret bool
		return ret
	}
	return *o.IsCmekEnabled
}

// GetIsCmekEnabledOk returns a tuple with the IsCmekEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIsCmekEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCmekEnabled) {
		return nil, false
	}
	return o.IsCmekEnabled, true
}

// SetIsCmekEnabled gets a reference to the given bool and assigns it to the IsCmekEnabled field.
func (o *TemplateImageDetails) SetIsCmekEnabled(v bool) {
	o.IsCmekEnabled = &v
}

// GetCmekId returns the CmekId field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetCmekId() string {
	if o == nil || IsNil(o.CmekId) {
		var ret string
		return ret
	}
	return *o.CmekId
}

// GetCmekIdOk returns a tuple with the CmekId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetCmekIdOk() (*string, bool) {
	if o == nil || IsNil(o.CmekId) {
		return nil, false
	}
	return o.CmekId, true
}

// SetCmekId gets a reference to the given string and assigns it to the CmekId field.
func (o *TemplateImageDetails) SetCmekId(v string) {
	o.CmekId = &v
}

// GetIsDeprecated returns the IsDeprecated field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetIsDeprecated() bool {
	if o == nil || IsNil(o.IsDeprecated) {
		var ret bool
		return ret
	}
	return *o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeprecated) {
		return nil, false
	}
	return o.IsDeprecated, true
}

// SetIsDeprecated gets a reference to the given bool and assigns it to the IsDeprecated field.
func (o *TemplateImageDetails) SetIsDeprecated(v bool) {
	o.IsDeprecated = &v
}

// GetIsByoaImage returns the IsByoaImage field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetIsByoaImage() bool {
	if o == nil || IsNil(o.IsByoaImage) {
		var ret bool
		return ret
	}
	return *o.IsByoaImage
}

// GetIsByoaImageOk returns a tuple with the IsByoaImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIsByoaImageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsByoaImage) {
		return nil, false
	}
	return o.IsByoaImage, true
}

// SetIsByoaImage gets a reference to the given bool and assigns it to the IsByoaImage field.
func (o *TemplateImageDetails) SetIsByoaImage(v bool) {
	o.IsByoaImage = &v
}

// GetLinkedCatalogs returns the LinkedCatalogs field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetLinkedCatalogs() int32 {
	if o == nil || IsNil(o.LinkedCatalogs) {
		var ret int32
		return ret
	}
	return *o.LinkedCatalogs
}

// GetLinkedCatalogsOk returns a tuple with the LinkedCatalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetLinkedCatalogsOk() (*int32, bool) {
	if o == nil || IsNil(o.LinkedCatalogs) {
		return nil, false
	}
	return o.LinkedCatalogs, true
}

// SetLinkedCatalogs gets a reference to the given int32 and assigns it to the LinkedCatalogs field.
func (o *TemplateImageDetails) SetLinkedCatalogs(v int32) {
	o.LinkedCatalogs = &v
}

// GetLinkedCatalogsNames returns the LinkedCatalogsNames field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetLinkedCatalogsNames() []string {
	if o == nil || IsNil(o.LinkedCatalogsNames) {
		var ret []string
		return ret
	}
	return o.LinkedCatalogsNames
}

// GetLinkedCatalogsNamesOk returns a tuple with the LinkedCatalogsNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetLinkedCatalogsNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.LinkedCatalogsNames) {
		return nil, false
	}
	return o.LinkedCatalogsNames, true
}

// SetLinkedCatalogsNames gets a reference to the given []string and assigns it to the LinkedCatalogsNames field.
func (o *TemplateImageDetails) SetLinkedCatalogsNames(v []string) {
	o.LinkedCatalogsNames = v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *TemplateImageDetails) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetFinalizedDate returns the FinalizedDate field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetFinalizedDate() time.Time {
	if o == nil || IsNil(o.FinalizedDate) {
		var ret time.Time
		return ret
	}
	return *o.FinalizedDate
}

// GetFinalizedDateOk returns a tuple with the FinalizedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetFinalizedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinalizedDate) {
		return nil, false
	}
	return o.FinalizedDate, true
}

// SetFinalizedDate gets a reference to the given time.Time and assigns it to the FinalizedDate field.
func (o *TemplateImageDetails) SetFinalizedDate(v time.Time) {
	o.FinalizedDate = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *TemplateImageDetails) SetPath(v string) {
	o.Path = &v
}

// GetSbSessionVdaVersion returns the SbSessionVdaVersion field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetSbSessionVdaVersion() string {
	if o == nil || IsNil(o.SbSessionVdaVersion) {
		var ret string
		return ret
	}
	return *o.SbSessionVdaVersion
}

// GetSbSessionVdaVersionOk returns a tuple with the SbSessionVdaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetSbSessionVdaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SbSessionVdaVersion) {
		return nil, false
	}
	return o.SbSessionVdaVersion, true
}

// SetSbSessionVdaVersion gets a reference to the given string and assigns it to the SbSessionVdaVersion field.
func (o *TemplateImageDetails) SetSbSessionVdaVersion(v string) {
	o.SbSessionVdaVersion = &v
}

// GetIsSecureBrowserImage returns the IsSecureBrowserImage field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetIsSecureBrowserImage() bool {
	if o == nil || IsNil(o.IsSecureBrowserImage) {
		var ret bool
		return ret
	}
	return *o.IsSecureBrowserImage
}

// GetIsSecureBrowserImageOk returns a tuple with the IsSecureBrowserImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetIsSecureBrowserImageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecureBrowserImage) {
		return nil, false
	}
	return o.IsSecureBrowserImage, true
}

// SetIsSecureBrowserImage gets a reference to the given bool and assigns it to the IsSecureBrowserImage field.
func (o *TemplateImageDetails) SetIsSecureBrowserImage(v bool) {
	o.IsSecureBrowserImage = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *TemplateImageDetails) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *TemplateImageDetails) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateImageDetails) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *TemplateImageDetails) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o TemplateImageDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateImageDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["catalogs"] = o.Catalogs
	toSerialize["applications"] = o.Applications
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["sessionSupport"] = o.SessionSupport
	toSerialize["state"] = o.State
	if !IsNil(o.SubState) {
		toSerialize["subState"] = o.SubState
	}
	if !IsNil(o.OsPlatform) {
		toSerialize["osPlatform"] = o.OsPlatform
	}
	if !IsNil(o.OsName) {
		toSerialize["osName"] = o.OsName
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.LinuxDomainSupport) {
		toSerialize["linuxDomainSupport"] = o.LinuxDomainSupport
	}
	if !IsNil(o.LinuxRdpSupport) {
		toSerialize["linuxRdpSupport"] = o.LinuxRdpSupport
	}
	if !IsNil(o.McsioSupport) {
		toSerialize["mcsioSupport"] = o.McsioSupport
	}
	if !IsNil(o.VusSupport) {
		toSerialize["vusSupport"] = o.VusSupport
	}
	if !IsNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["privateIp"] = o.PrivateIp
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.IsServerOs) {
		toSerialize["isServerOs"] = o.IsServerOs
	}
	if !IsNil(o.VdaVersion) {
		toSerialize["vdaVersion"] = o.VdaVersion
	}
	if !IsNil(o.StatusMessageId) {
		toSerialize["statusMessageId"] = o.StatusMessageId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ExtraInfo) {
		toSerialize["extraInfo"] = o.ExtraInfo
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	toSerialize["subscriptionName"] = o.SubscriptionName
	if !IsNil(o.ResourceGroup) {
		toSerialize["resourceGroup"] = o.ResourceGroup
	}
	if !IsNil(o.StorageAccount) {
		toSerialize["storageAccount"] = o.StorageAccount
	}
	toSerialize["region"] = o.Region
	if !IsNil(o.BuilderDomainName) {
		toSerialize["builderDomainName"] = o.BuilderDomainName
	}
	if !IsNil(o.BuilderConnectionId) {
		toSerialize["builderConnectionId"] = o.BuilderConnectionId
	}
	if !IsNil(o.BuilderVmName) {
		toSerialize["builderVmName"] = o.BuilderVmName
	}
	if !IsNil(o.BuilderVmType) {
		toSerialize["builderVmType"] = o.BuilderVmType
	}
	if !IsNil(o.BuilderVmDiskSize) {
		toSerialize["builderVmDiskSize"] = o.BuilderVmDiskSize
	}
	if !IsNil(o.BuilderAllowedIPs) {
		toSerialize["builderAllowedIPs"] = o.BuilderAllowedIPs
	}
	if !IsNil(o.HyperVGen) {
		toSerialize["hyperVGen"] = o.HyperVGen
	}
	if !IsNil(o.VtpmEnabled) {
		toSerialize["vtpmEnabled"] = o.VtpmEnabled
	}
	if !IsNil(o.SecureBootEnabled) {
		toSerialize["secureBootEnabled"] = o.SecureBootEnabled
	}
	toSerialize["citrixPrepared"] = o.CitrixPrepared
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.IsCmekEnabled) {
		toSerialize["isCmekEnabled"] = o.IsCmekEnabled
	}
	if !IsNil(o.CmekId) {
		toSerialize["cmekId"] = o.CmekId
	}
	if !IsNil(o.IsDeprecated) {
		toSerialize["isDeprecated"] = o.IsDeprecated
	}
	if !IsNil(o.IsByoaImage) {
		toSerialize["isByoaImage"] = o.IsByoaImage
	}
	if !IsNil(o.LinkedCatalogs) {
		toSerialize["linkedCatalogs"] = o.LinkedCatalogs
	}
	if !IsNil(o.LinkedCatalogsNames) {
		toSerialize["linkedCatalogsNames"] = o.LinkedCatalogsNames
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.FinalizedDate) {
		toSerialize["finalizedDate"] = o.FinalizedDate
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.SbSessionVdaVersion) {
		toSerialize["sbSessionVdaVersion"] = o.SbSessionVdaVersion
	}
	if !IsNil(o.IsSecureBrowserImage) {
		toSerialize["isSecureBrowserImage"] = o.IsSecureBrowserImage
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableTemplateImageDetails struct {
	value *TemplateImageDetails
	isSet bool
}

func (v NullableTemplateImageDetails) Get() *TemplateImageDetails {
	return v.value
}

func (v *NullableTemplateImageDetails) Set(val *TemplateImageDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateImageDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateImageDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateImageDetails(val *TemplateImageDetails) *NullableTemplateImageDetails {
	return &NullableTemplateImageDetails{value: val, isSet: true}
}

func (v NullableTemplateImageDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateImageDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
