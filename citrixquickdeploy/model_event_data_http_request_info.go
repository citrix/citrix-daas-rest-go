/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the EventDataHttpRequestInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventDataHttpRequestInfo{}

// EventDataHttpRequestInfo struct for EventDataHttpRequestInfo
type EventDataHttpRequestInfo struct {
	ClientRequestId *string    `json:"clientRequestId,omitempty"`
	ClientIPAddress *IPAddress `json:"clientIPAddress,omitempty"`
	Method          *string    `json:"method,omitempty"`
	Uri             *string    `json:"uri,omitempty"`
}

// NewEventDataHttpRequestInfoWithDefaults instantiates a new EventDataHttpRequestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventDataHttpRequestInfoWithDefaults() *EventDataHttpRequestInfo {
	this := EventDataHttpRequestInfo{}
	return &this
}

// GetClientRequestId returns the ClientRequestId field value if set, zero value otherwise.
func (o *EventDataHttpRequestInfo) GetClientRequestId() string {
	if o == nil || IsNil(o.ClientRequestId) {
		var ret string
		return ret
	}
	return *o.ClientRequestId
}

// GetClientRequestIdOk returns a tuple with the ClientRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventDataHttpRequestInfo) GetClientRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientRequestId) {
		return nil, false
	}
	return o.ClientRequestId, true
}

// SetClientRequestId gets a reference to the given string and assigns it to the ClientRequestId field.
func (o *EventDataHttpRequestInfo) SetClientRequestId(v string) {
	o.ClientRequestId = &v
}

// GetClientIPAddress returns the ClientIPAddress field value if set, zero value otherwise.
func (o *EventDataHttpRequestInfo) GetClientIPAddress() IPAddress {
	if o == nil || IsNil(o.ClientIPAddress) {
		var ret IPAddress
		return ret
	}
	return *o.ClientIPAddress
}

// GetClientIPAddressOk returns a tuple with the ClientIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventDataHttpRequestInfo) GetClientIPAddressOk() (*IPAddress, bool) {
	if o == nil || IsNil(o.ClientIPAddress) {
		return nil, false
	}
	return o.ClientIPAddress, true
}

// SetClientIPAddress gets a reference to the given IPAddress and assigns it to the ClientIPAddress field.
func (o *EventDataHttpRequestInfo) SetClientIPAddress(v IPAddress) {
	o.ClientIPAddress = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *EventDataHttpRequestInfo) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventDataHttpRequestInfo) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *EventDataHttpRequestInfo) SetMethod(v string) {
	o.Method = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *EventDataHttpRequestInfo) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventDataHttpRequestInfo) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *EventDataHttpRequestInfo) SetUri(v string) {
	o.Uri = &v
}

func (o EventDataHttpRequestInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventDataHttpRequestInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientRequestId) {
		toSerialize["clientRequestId"] = o.ClientRequestId
	}
	if !IsNil(o.ClientIPAddress) {
		toSerialize["clientIPAddress"] = o.ClientIPAddress
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableEventDataHttpRequestInfo struct {
	value *EventDataHttpRequestInfo
	isSet bool
}

func (v NullableEventDataHttpRequestInfo) Get() *EventDataHttpRequestInfo {
	return v.value
}

func (v *NullableEventDataHttpRequestInfo) Set(val *EventDataHttpRequestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEventDataHttpRequestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEventDataHttpRequestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventDataHttpRequestInfo(val *EventDataHttpRequestInfo) *NullableEventDataHttpRequestInfo {
	return &NullableEventDataHttpRequestInfo{value: val, isSet: true}
}

func (v NullableEventDataHttpRequestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventDataHttpRequestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
