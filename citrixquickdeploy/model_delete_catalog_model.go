/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the DeleteCatalogModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCatalogModel{}

// DeleteCatalogModel struct for DeleteCatalogModel
type DeleteCatalogModel struct {
	// Indicates that we want to bypass processing checks on deploy and force delete the catalog
	ForceDelete *bool `json:"forceDelete,omitempty"`
	// Specifies whether to delete virtual machines that were provisioned in the machine catalog
	DeleteVm *bool `json:"deleteVm,omitempty"`
	// Indicates if the Resource Location associated with the catalog should be removed (along with any Catalog Service deployed connectors)  if this is the last catalog to use the Resource Location
	DeleteResourceLocationIfUnused *bool `json:"deleteResourceLocationIfUnused,omitempty"`
	// Service account to perform delete with
	ServiceAccount *string `json:"serviceAccount,omitempty" validate:"regexp=^[^\\/\\\\[\\\\]:;\\\\\\\\|=\\\\^,+*?<>]*$"`
	// Customer's domain password
	ServiceAccountPassword *string `json:"serviceAccountPassword,omitempty"`
}

// NewDeleteCatalogModelWithDefaults instantiates a new DeleteCatalogModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCatalogModelWithDefaults() *DeleteCatalogModel {
	this := DeleteCatalogModel{}
	return &this
}

// GetForceDelete returns the ForceDelete field value if set, zero value otherwise.
func (o *DeleteCatalogModel) GetForceDelete() bool {
	if o == nil || IsNil(o.ForceDelete) {
		var ret bool
		return ret
	}
	return *o.ForceDelete
}

// GetForceDeleteOk returns a tuple with the ForceDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCatalogModel) GetForceDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceDelete) {
		return nil, false
	}
	return o.ForceDelete, true
}

// SetForceDelete gets a reference to the given bool and assigns it to the ForceDelete field.
func (o *DeleteCatalogModel) SetForceDelete(v bool) {
	o.ForceDelete = &v
}

// GetDeleteVm returns the DeleteVm field value if set, zero value otherwise.
func (o *DeleteCatalogModel) GetDeleteVm() bool {
	if o == nil || IsNil(o.DeleteVm) {
		var ret bool
		return ret
	}
	return *o.DeleteVm
}

// GetDeleteVmOk returns a tuple with the DeleteVm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCatalogModel) GetDeleteVmOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteVm) {
		return nil, false
	}
	return o.DeleteVm, true
}

// SetDeleteVm gets a reference to the given bool and assigns it to the DeleteVm field.
func (o *DeleteCatalogModel) SetDeleteVm(v bool) {
	o.DeleteVm = &v
}

// GetDeleteResourceLocationIfUnused returns the DeleteResourceLocationIfUnused field value if set, zero value otherwise.
func (o *DeleteCatalogModel) GetDeleteResourceLocationIfUnused() bool {
	if o == nil || IsNil(o.DeleteResourceLocationIfUnused) {
		var ret bool
		return ret
	}
	return *o.DeleteResourceLocationIfUnused
}

// GetDeleteResourceLocationIfUnusedOk returns a tuple with the DeleteResourceLocationIfUnused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCatalogModel) GetDeleteResourceLocationIfUnusedOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteResourceLocationIfUnused) {
		return nil, false
	}
	return o.DeleteResourceLocationIfUnused, true
}

// SetDeleteResourceLocationIfUnused gets a reference to the given bool and assigns it to the DeleteResourceLocationIfUnused field.
func (o *DeleteCatalogModel) SetDeleteResourceLocationIfUnused(v bool) {
	o.DeleteResourceLocationIfUnused = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *DeleteCatalogModel) GetServiceAccount() string {
	if o == nil || IsNil(o.ServiceAccount) {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCatalogModel) GetServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccount) {
		return nil, false
	}
	return o.ServiceAccount, true
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *DeleteCatalogModel) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

// GetServiceAccountPassword returns the ServiceAccountPassword field value if set, zero value otherwise.
func (o *DeleteCatalogModel) GetServiceAccountPassword() string {
	if o == nil || IsNil(o.ServiceAccountPassword) {
		var ret string
		return ret
	}
	return *o.ServiceAccountPassword
}

// GetServiceAccountPasswordOk returns a tuple with the ServiceAccountPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteCatalogModel) GetServiceAccountPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountPassword) {
		return nil, false
	}
	return o.ServiceAccountPassword, true
}

// SetServiceAccountPassword gets a reference to the given string and assigns it to the ServiceAccountPassword field.
func (o *DeleteCatalogModel) SetServiceAccountPassword(v string) {
	o.ServiceAccountPassword = &v
}

func (o DeleteCatalogModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCatalogModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForceDelete) {
		toSerialize["forceDelete"] = o.ForceDelete
	}
	if !IsNil(o.DeleteVm) {
		toSerialize["deleteVm"] = o.DeleteVm
	}
	if !IsNil(o.DeleteResourceLocationIfUnused) {
		toSerialize["deleteResourceLocationIfUnused"] = o.DeleteResourceLocationIfUnused
	}
	if !IsNil(o.ServiceAccount) {
		toSerialize["serviceAccount"] = o.ServiceAccount
	}
	if !IsNil(o.ServiceAccountPassword) {
		toSerialize["serviceAccountPassword"] = o.ServiceAccountPassword
	}
	return toSerialize, nil
}

type NullableDeleteCatalogModel struct {
	value *DeleteCatalogModel
	isSet bool
}

func (v NullableDeleteCatalogModel) Get() *DeleteCatalogModel {
	return v.value
}

func (v *NullableDeleteCatalogModel) Set(val *DeleteCatalogModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCatalogModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCatalogModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCatalogModel(val *DeleteCatalogModel) *NullableDeleteCatalogModel {
	return &NullableDeleteCatalogModel{value: val, isSet: true}
}

func (v NullableDeleteCatalogModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCatalogModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
