/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ManagedCapacityDirectory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCapacityDirectory{}

// ManagedCapacityDirectory struct for ManagedCapacityDirectory
type ManagedCapacityDirectory struct {
	DirectoryId      string                           `json:"directoryId"`
	DirectoryName    string                           `json:"directoryName"`
	AzurePoolName    *string                          `json:"azurePoolName,omitempty"`
	CustomerDeleted  *bool                            `json:"customerDeleted,omitempty"`
	Subscriptions    []ManagedCapacitySubscription    `json:"subscriptions,omitempty"`
	AssignedCustomer *ManagedCapacityAssignedCustomer `json:"assignedCustomer,omitempty"`
}

// NewManagedCapacityDirectoryWithDefaults instantiates a new ManagedCapacityDirectory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCapacityDirectoryWithDefaults() *ManagedCapacityDirectory {
	this := ManagedCapacityDirectory{}
	return &this
}

// GetDirectoryId returns the DirectoryId field value
func (o *ManagedCapacityDirectory) GetDirectoryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectoryId
}

// GetDirectoryIdOk returns a tuple with the DirectoryId field value
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetDirectoryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectoryId, true
}

// SetDirectoryId sets field value
func (o *ManagedCapacityDirectory) SetDirectoryId(v string) {
	o.DirectoryId = v
}

// GetDirectoryName returns the DirectoryName field value
func (o *ManagedCapacityDirectory) GetDirectoryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectoryName
}

// GetDirectoryNameOk returns a tuple with the DirectoryName field value
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetDirectoryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectoryName, true
}

// SetDirectoryName sets field value
func (o *ManagedCapacityDirectory) SetDirectoryName(v string) {
	o.DirectoryName = v
}

// GetAzurePoolName returns the AzurePoolName field value if set, zero value otherwise.
func (o *ManagedCapacityDirectory) GetAzurePoolName() string {
	if o == nil || IsNil(o.AzurePoolName) {
		var ret string
		return ret
	}
	return *o.AzurePoolName
}

// GetAzurePoolNameOk returns a tuple with the AzurePoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetAzurePoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.AzurePoolName) {
		return nil, false
	}
	return o.AzurePoolName, true
}

// SetAzurePoolName gets a reference to the given string and assigns it to the AzurePoolName field.
func (o *ManagedCapacityDirectory) SetAzurePoolName(v string) {
	o.AzurePoolName = &v
}

// GetCustomerDeleted returns the CustomerDeleted field value if set, zero value otherwise.
func (o *ManagedCapacityDirectory) GetCustomerDeleted() bool {
	if o == nil || IsNil(o.CustomerDeleted) {
		var ret bool
		return ret
	}
	return *o.CustomerDeleted
}

// GetCustomerDeletedOk returns a tuple with the CustomerDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetCustomerDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomerDeleted) {
		return nil, false
	}
	return o.CustomerDeleted, true
}

// SetCustomerDeleted gets a reference to the given bool and assigns it to the CustomerDeleted field.
func (o *ManagedCapacityDirectory) SetCustomerDeleted(v bool) {
	o.CustomerDeleted = &v
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *ManagedCapacityDirectory) GetSubscriptions() []ManagedCapacitySubscription {
	if o == nil || IsNil(o.Subscriptions) {
		var ret []ManagedCapacitySubscription
		return ret
	}
	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetSubscriptionsOk() ([]ManagedCapacitySubscription, bool) {
	if o == nil || IsNil(o.Subscriptions) {
		return nil, false
	}
	return o.Subscriptions, true
}

// SetSubscriptions gets a reference to the given []ManagedCapacitySubscription and assigns it to the Subscriptions field.
func (o *ManagedCapacityDirectory) SetSubscriptions(v []ManagedCapacitySubscription) {
	o.Subscriptions = v
}

// GetAssignedCustomer returns the AssignedCustomer field value if set, zero value otherwise.
func (o *ManagedCapacityDirectory) GetAssignedCustomer() ManagedCapacityAssignedCustomer {
	if o == nil || IsNil(o.AssignedCustomer) {
		var ret ManagedCapacityAssignedCustomer
		return ret
	}
	return *o.AssignedCustomer
}

// GetAssignedCustomerOk returns a tuple with the AssignedCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCapacityDirectory) GetAssignedCustomerOk() (*ManagedCapacityAssignedCustomer, bool) {
	if o == nil || IsNil(o.AssignedCustomer) {
		return nil, false
	}
	return o.AssignedCustomer, true
}

// SetAssignedCustomer gets a reference to the given ManagedCapacityAssignedCustomer and assigns it to the AssignedCustomer field.
func (o *ManagedCapacityDirectory) SetAssignedCustomer(v ManagedCapacityAssignedCustomer) {
	o.AssignedCustomer = &v
}

func (o ManagedCapacityDirectory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCapacityDirectory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["directoryId"] = o.DirectoryId
	toSerialize["directoryName"] = o.DirectoryName
	if !IsNil(o.AzurePoolName) {
		toSerialize["azurePoolName"] = o.AzurePoolName
	}
	if !IsNil(o.CustomerDeleted) {
		toSerialize["customerDeleted"] = o.CustomerDeleted
	}
	if !IsNil(o.Subscriptions) {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if !IsNil(o.AssignedCustomer) {
		toSerialize["assignedCustomer"] = o.AssignedCustomer
	}
	return toSerialize, nil
}

type NullableManagedCapacityDirectory struct {
	value *ManagedCapacityDirectory
	isSet bool
}

func (v NullableManagedCapacityDirectory) Get() *ManagedCapacityDirectory {
	return v.value
}

func (v *NullableManagedCapacityDirectory) Set(val *ManagedCapacityDirectory) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCapacityDirectory) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCapacityDirectory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCapacityDirectory(val *ManagedCapacityDirectory) *NullableManagedCapacityDirectory {
	return &NullableManagedCapacityDirectory{value: val, isSet: true}
}

func (v NullableManagedCapacityDirectory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCapacityDirectory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
