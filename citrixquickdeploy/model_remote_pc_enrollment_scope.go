/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the RemotePcEnrollmentScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemotePcEnrollmentScope{}

// RemotePcEnrollmentScope struct for RemotePcEnrollmentScope
type RemotePcEnrollmentScope struct {
	// The OU to include in the catalog.
	Ou *string `json:"ou,omitempty"`
	// Indicates if the subfolders of this OU should also be included.
	IncludeSubfolders *bool `json:"includeSubfolders,omitempty"`
}

// NewRemotePcEnrollmentScopeWithDefaults instantiates a new RemotePcEnrollmentScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemotePcEnrollmentScopeWithDefaults() *RemotePcEnrollmentScope {
	this := RemotePcEnrollmentScope{}
	return &this
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *RemotePcEnrollmentScope) GetOu() string {
	if o == nil || IsNil(o.Ou) {
		var ret string
		return ret
	}
	return *o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemotePcEnrollmentScope) GetOuOk() (*string, bool) {
	if o == nil || IsNil(o.Ou) {
		return nil, false
	}
	return o.Ou, true
}

// SetOu gets a reference to the given string and assigns it to the Ou field.
func (o *RemotePcEnrollmentScope) SetOu(v string) {
	o.Ou = &v
}

// GetIncludeSubfolders returns the IncludeSubfolders field value if set, zero value otherwise.
func (o *RemotePcEnrollmentScope) GetIncludeSubfolders() bool {
	if o == nil || IsNil(o.IncludeSubfolders) {
		var ret bool
		return ret
	}
	return *o.IncludeSubfolders
}

// GetIncludeSubfoldersOk returns a tuple with the IncludeSubfolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemotePcEnrollmentScope) GetIncludeSubfoldersOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeSubfolders) {
		return nil, false
	}
	return o.IncludeSubfolders, true
}

// SetIncludeSubfolders gets a reference to the given bool and assigns it to the IncludeSubfolders field.
func (o *RemotePcEnrollmentScope) SetIncludeSubfolders(v bool) {
	o.IncludeSubfolders = &v
}

func (o RemotePcEnrollmentScope) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemotePcEnrollmentScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ou) {
		toSerialize["ou"] = o.Ou
	}
	if !IsNil(o.IncludeSubfolders) {
		toSerialize["includeSubfolders"] = o.IncludeSubfolders
	}
	return toSerialize, nil
}

type NullableRemotePcEnrollmentScope struct {
	value *RemotePcEnrollmentScope
	isSet bool
}

func (v NullableRemotePcEnrollmentScope) Get() *RemotePcEnrollmentScope {
	return v.value
}

func (v *NullableRemotePcEnrollmentScope) Set(val *RemotePcEnrollmentScope) {
	v.value = val
	v.isSet = true
}

func (v NullableRemotePcEnrollmentScope) IsSet() bool {
	return v.isSet
}

func (v *NullableRemotePcEnrollmentScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemotePcEnrollmentScope(val *RemotePcEnrollmentScope) *NullableRemotePcEnrollmentScope {
	return &NullableRemotePcEnrollmentScope{value: val, isSet: true}
}

func (v NullableRemotePcEnrollmentScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemotePcEnrollmentScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
