/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdateDesktopConfigurationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDesktopConfigurationModel{}

// UpdateDesktopConfigurationModel struct for UpdateDesktopConfigurationModel
type UpdateDesktopConfigurationModel struct {
	// Name of the desktop
	Name string `json:"name"`
	// Description
	Description *string `json:"description,omitempty"`
	// The publish state of the desktop
	State *AppsAndDesktopsProvisionState `json:"state,omitempty"`
}

// NewUpdateDesktopConfigurationModelWithDefaults instantiates a new UpdateDesktopConfigurationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDesktopConfigurationModelWithDefaults() *UpdateDesktopConfigurationModel {
	this := UpdateDesktopConfigurationModel{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateDesktopConfigurationModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateDesktopConfigurationModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateDesktopConfigurationModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateDesktopConfigurationModel) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDesktopConfigurationModel) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateDesktopConfigurationModel) SetDescription(v string) {
	o.Description = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *UpdateDesktopConfigurationModel) GetState() AppsAndDesktopsProvisionState {
	if o == nil || IsNil(o.State) {
		var ret AppsAndDesktopsProvisionState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDesktopConfigurationModel) GetStateOk() (*AppsAndDesktopsProvisionState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given AppsAndDesktopsProvisionState and assigns it to the State field.
func (o *UpdateDesktopConfigurationModel) SetState(v AppsAndDesktopsProvisionState) {
	o.State = &v
}

func (o UpdateDesktopConfigurationModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDesktopConfigurationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableUpdateDesktopConfigurationModel struct {
	value *UpdateDesktopConfigurationModel
	isSet bool
}

func (v NullableUpdateDesktopConfigurationModel) Get() *UpdateDesktopConfigurationModel {
	return v.value
}

func (v *NullableUpdateDesktopConfigurationModel) Set(val *UpdateDesktopConfigurationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDesktopConfigurationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDesktopConfigurationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDesktopConfigurationModel(val *UpdateDesktopConfigurationModel) *NullableUpdateDesktopConfigurationModel {
	return &NullableUpdateDesktopConfigurationModel{value: val, isSet: true}
}

func (v NullableUpdateDesktopConfigurationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDesktopConfigurationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
