/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogDeletionStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDeletionStatus{}

// CatalogDeletionStatus struct for CatalogDeletionStatus
type CatalogDeletionStatus struct {
	// Indicates if service account credentials are needed
	NeedsServiceAccountCredentials *bool `json:"needsServiceAccountCredentials,omitempty"`
	// Indicates if the catalog's resource location could be deleted with the catalog
	PromptForResourceLocationDeletion *bool `json:"promptForResourceLocationDeletion,omitempty"`
}

// NewCatalogDeletionStatusWithDefaults instantiates a new CatalogDeletionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDeletionStatusWithDefaults() *CatalogDeletionStatus {
	this := CatalogDeletionStatus{}
	return &this
}

// GetNeedsServiceAccountCredentials returns the NeedsServiceAccountCredentials field value if set, zero value otherwise.
func (o *CatalogDeletionStatus) GetNeedsServiceAccountCredentials() bool {
	if o == nil || IsNil(o.NeedsServiceAccountCredentials) {
		var ret bool
		return ret
	}
	return *o.NeedsServiceAccountCredentials
}

// GetNeedsServiceAccountCredentialsOk returns a tuple with the NeedsServiceAccountCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDeletionStatus) GetNeedsServiceAccountCredentialsOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedsServiceAccountCredentials) {
		return nil, false
	}
	return o.NeedsServiceAccountCredentials, true
}

// SetNeedsServiceAccountCredentials gets a reference to the given bool and assigns it to the NeedsServiceAccountCredentials field.
func (o *CatalogDeletionStatus) SetNeedsServiceAccountCredentials(v bool) {
	o.NeedsServiceAccountCredentials = &v
}

// GetPromptForResourceLocationDeletion returns the PromptForResourceLocationDeletion field value if set, zero value otherwise.
func (o *CatalogDeletionStatus) GetPromptForResourceLocationDeletion() bool {
	if o == nil || IsNil(o.PromptForResourceLocationDeletion) {
		var ret bool
		return ret
	}
	return *o.PromptForResourceLocationDeletion
}

// GetPromptForResourceLocationDeletionOk returns a tuple with the PromptForResourceLocationDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDeletionStatus) GetPromptForResourceLocationDeletionOk() (*bool, bool) {
	if o == nil || IsNil(o.PromptForResourceLocationDeletion) {
		return nil, false
	}
	return o.PromptForResourceLocationDeletion, true
}

// SetPromptForResourceLocationDeletion gets a reference to the given bool and assigns it to the PromptForResourceLocationDeletion field.
func (o *CatalogDeletionStatus) SetPromptForResourceLocationDeletion(v bool) {
	o.PromptForResourceLocationDeletion = &v
}

func (o CatalogDeletionStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDeletionStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NeedsServiceAccountCredentials) {
		toSerialize["needsServiceAccountCredentials"] = o.NeedsServiceAccountCredentials
	}
	if !IsNil(o.PromptForResourceLocationDeletion) {
		toSerialize["promptForResourceLocationDeletion"] = o.PromptForResourceLocationDeletion
	}
	return toSerialize, nil
}

type NullableCatalogDeletionStatus struct {
	value *CatalogDeletionStatus
	isSet bool
}

func (v NullableCatalogDeletionStatus) Get() *CatalogDeletionStatus {
	return v.value
}

func (v *NullableCatalogDeletionStatus) Set(val *CatalogDeletionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDeletionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDeletionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDeletionStatus(val *CatalogDeletionStatus) *NullableCatalogDeletionStatus {
	return &NullableCatalogDeletionStatus{value: val, isSet: true}
}

func (v NullableCatalogDeletionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDeletionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
