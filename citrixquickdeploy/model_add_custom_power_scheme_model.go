/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AddCustomPowerSchemeModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCustomPowerSchemeModel{}

// AddCustomPowerSchemeModel struct for AddCustomPowerSchemeModel
type AddCustomPowerSchemeModel struct {
	// Name of the custom power scheme
	SchemeName string `json:"schemeName"`
	// Days of the week that are included in peak days
	Weekdays *map[string]bool `json:"weekdays,omitempty"`
	// Hour of day when peak usage ends
	PeakEndTime *int32 `json:"peakEndTime,omitempty"`
	// Hour of day when peak usage begins
	PeakStartTime *int32 `json:"peakStartTime,omitempty"`
	// ID of the peak usage Timezone
	PeakTimeZoneId *string `json:"peakTimeZoneId,omitempty"`
	// During Peak Hours, the time before a disconnected session is shutdown
	PeakDisconnectedSessionTimeout *int32 `json:"peakDisconnectedSessionTimeout,omitempty"`
	// During Off Peak Hours, the time before a disconnected session is shutdown
	OffPeakDisconnectedSessionTimeout *int32 `json:"offPeakDisconnectedSessionTimeout,omitempty"`
	// Minutes to wait for disconnected sessions to be logged off on multi-session VMs
	MultiSessionDisconnectedSessionTimeout *int32 `json:"multiSessionDisconnectedSessionTimeout,omitempty"`
	// Idle timeout for session in the catalog (in mins)
	SessionTimeout *int32 `json:"sessionTimeout,omitempty"`
	// Percentage of buffer capacity
	BufferCapacity *int32 `json:"bufferCapacity,omitempty"`
	// During peak hours, the action to be taken on disconnected session
	PeakDisconnectedSessionAction *SessionChangeHostingAction `json:"peakDisconnectedSessionAction,omitempty"`
	// During off peak hours, the action to be taken on disconnected session
	OffPeakDisconnectedSessionAction *SessionChangeHostingAction `json:"offPeakDisconnectedSessionAction,omitempty"`
	// TThe number of minutes before the second action (Shutdown) should be performed after a user session disconnects during peak hours. Used when peak disconnection action is Suspend
	PeakExtendedDisconnectTimeoutMinutes *int32 `json:"peakExtendedDisconnectTimeoutMinutes,omitempty"`
	// The number of minutes before the second action (Shutdown) should be performed after a user session disconnects outside peak hours. Used when off peak disconnect action is Suspend
	OffPeakExtendedDisconnectTimeoutMinutes *int32 `json:"offPeakExtendedDisconnectTimeoutMinutes,omitempty"`
	// Percentage of buffer capacity during off-peak hours
	OffPeakBufferCapacity *int32 `json:"offPeakBufferCapacity,omitempty"`
	// Amount of time to delay powering off machines with no active sessions
	PowerOffDelay *int32 `json:"powerOffDelay,omitempty"`
}

// NewAddCustomPowerSchemeModelWithDefaults instantiates a new AddCustomPowerSchemeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCustomPowerSchemeModelWithDefaults() *AddCustomPowerSchemeModel {
	this := AddCustomPowerSchemeModel{}
	return &this
}

// GetSchemeName returns the SchemeName field value
func (o *AddCustomPowerSchemeModel) GetSchemeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemeName
}

// GetSchemeNameOk returns a tuple with the SchemeName field value
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetSchemeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeName, true
}

// SetSchemeName sets field value
func (o *AddCustomPowerSchemeModel) SetSchemeName(v string) {
	o.SchemeName = v
}

// GetWeekdays returns the Weekdays field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetWeekdays() map[string]bool {
	if o == nil || IsNil(o.Weekdays) {
		var ret map[string]bool
		return ret
	}
	return *o.Weekdays
}

// GetWeekdaysOk returns a tuple with the Weekdays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetWeekdaysOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Weekdays) {
		return nil, false
	}
	return o.Weekdays, true
}

// SetWeekdays gets a reference to the given map[string]bool and assigns it to the Weekdays field.
func (o *AddCustomPowerSchemeModel) SetWeekdays(v map[string]bool) {
	o.Weekdays = &v
}

// GetPeakEndTime returns the PeakEndTime field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakEndTime() int32 {
	if o == nil || IsNil(o.PeakEndTime) {
		var ret int32
		return ret
	}
	return *o.PeakEndTime
}

// GetPeakEndTimeOk returns a tuple with the PeakEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakEndTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakEndTime) {
		return nil, false
	}
	return o.PeakEndTime, true
}

// SetPeakEndTime gets a reference to the given int32 and assigns it to the PeakEndTime field.
func (o *AddCustomPowerSchemeModel) SetPeakEndTime(v int32) {
	o.PeakEndTime = &v
}

// GetPeakStartTime returns the PeakStartTime field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakStartTime() int32 {
	if o == nil || IsNil(o.PeakStartTime) {
		var ret int32
		return ret
	}
	return *o.PeakStartTime
}

// GetPeakStartTimeOk returns a tuple with the PeakStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakStartTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakStartTime) {
		return nil, false
	}
	return o.PeakStartTime, true
}

// SetPeakStartTime gets a reference to the given int32 and assigns it to the PeakStartTime field.
func (o *AddCustomPowerSchemeModel) SetPeakStartTime(v int32) {
	o.PeakStartTime = &v
}

// GetPeakTimeZoneId returns the PeakTimeZoneId field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakTimeZoneId() string {
	if o == nil || IsNil(o.PeakTimeZoneId) {
		var ret string
		return ret
	}
	return *o.PeakTimeZoneId
}

// GetPeakTimeZoneIdOk returns a tuple with the PeakTimeZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakTimeZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeakTimeZoneId) {
		return nil, false
	}
	return o.PeakTimeZoneId, true
}

// SetPeakTimeZoneId gets a reference to the given string and assigns it to the PeakTimeZoneId field.
func (o *AddCustomPowerSchemeModel) SetPeakTimeZoneId(v string) {
	o.PeakTimeZoneId = &v
}

// GetPeakDisconnectedSessionTimeout returns the PeakDisconnectedSessionTimeout field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakDisconnectedSessionTimeout() int32 {
	if o == nil || IsNil(o.PeakDisconnectedSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.PeakDisconnectedSessionTimeout
}

// GetPeakDisconnectedSessionTimeoutOk returns a tuple with the PeakDisconnectedSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakDisconnectedSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakDisconnectedSessionTimeout) {
		return nil, false
	}
	return o.PeakDisconnectedSessionTimeout, true
}

// SetPeakDisconnectedSessionTimeout gets a reference to the given int32 and assigns it to the PeakDisconnectedSessionTimeout field.
func (o *AddCustomPowerSchemeModel) SetPeakDisconnectedSessionTimeout(v int32) {
	o.PeakDisconnectedSessionTimeout = &v
}

// GetOffPeakDisconnectedSessionTimeout returns the OffPeakDisconnectedSessionTimeout field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetOffPeakDisconnectedSessionTimeout() int32 {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.OffPeakDisconnectedSessionTimeout
}

// GetOffPeakDisconnectedSessionTimeoutOk returns a tuple with the OffPeakDisconnectedSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetOffPeakDisconnectedSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionTimeout) {
		return nil, false
	}
	return o.OffPeakDisconnectedSessionTimeout, true
}

// SetOffPeakDisconnectedSessionTimeout gets a reference to the given int32 and assigns it to the OffPeakDisconnectedSessionTimeout field.
func (o *AddCustomPowerSchemeModel) SetOffPeakDisconnectedSessionTimeout(v int32) {
	o.OffPeakDisconnectedSessionTimeout = &v
}

// GetMultiSessionDisconnectedSessionTimeout returns the MultiSessionDisconnectedSessionTimeout field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetMultiSessionDisconnectedSessionTimeout() int32 {
	if o == nil || IsNil(o.MultiSessionDisconnectedSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.MultiSessionDisconnectedSessionTimeout
}

// GetMultiSessionDisconnectedSessionTimeoutOk returns a tuple with the MultiSessionDisconnectedSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetMultiSessionDisconnectedSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.MultiSessionDisconnectedSessionTimeout) {
		return nil, false
	}
	return o.MultiSessionDisconnectedSessionTimeout, true
}

// SetMultiSessionDisconnectedSessionTimeout gets a reference to the given int32 and assigns it to the MultiSessionDisconnectedSessionTimeout field.
func (o *AddCustomPowerSchemeModel) SetMultiSessionDisconnectedSessionTimeout(v int32) {
	o.MultiSessionDisconnectedSessionTimeout = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetSessionTimeout() int32 {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret int32
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// SetSessionTimeout gets a reference to the given int32 and assigns it to the SessionTimeout field.
func (o *AddCustomPowerSchemeModel) SetSessionTimeout(v int32) {
	o.SessionTimeout = &v
}

// GetBufferCapacity returns the BufferCapacity field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetBufferCapacity() int32 {
	if o == nil || IsNil(o.BufferCapacity) {
		var ret int32
		return ret
	}
	return *o.BufferCapacity
}

// GetBufferCapacityOk returns a tuple with the BufferCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetBufferCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.BufferCapacity) {
		return nil, false
	}
	return o.BufferCapacity, true
}

// SetBufferCapacity gets a reference to the given int32 and assigns it to the BufferCapacity field.
func (o *AddCustomPowerSchemeModel) SetBufferCapacity(v int32) {
	o.BufferCapacity = &v
}

// GetPeakDisconnectedSessionAction returns the PeakDisconnectedSessionAction field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakDisconnectedSessionAction() SessionChangeHostingAction {
	if o == nil || IsNil(o.PeakDisconnectedSessionAction) {
		var ret SessionChangeHostingAction
		return ret
	}
	return *o.PeakDisconnectedSessionAction
}

// GetPeakDisconnectedSessionActionOk returns a tuple with the PeakDisconnectedSessionAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakDisconnectedSessionActionOk() (*SessionChangeHostingAction, bool) {
	if o == nil || IsNil(o.PeakDisconnectedSessionAction) {
		return nil, false
	}
	return o.PeakDisconnectedSessionAction, true
}

// SetPeakDisconnectedSessionAction gets a reference to the given SessionChangeHostingAction and assigns it to the PeakDisconnectedSessionAction field.
func (o *AddCustomPowerSchemeModel) SetPeakDisconnectedSessionAction(v SessionChangeHostingAction) {
	o.PeakDisconnectedSessionAction = &v
}

// GetOffPeakDisconnectedSessionAction returns the OffPeakDisconnectedSessionAction field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetOffPeakDisconnectedSessionAction() SessionChangeHostingAction {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionAction) {
		var ret SessionChangeHostingAction
		return ret
	}
	return *o.OffPeakDisconnectedSessionAction
}

// GetOffPeakDisconnectedSessionActionOk returns a tuple with the OffPeakDisconnectedSessionAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetOffPeakDisconnectedSessionActionOk() (*SessionChangeHostingAction, bool) {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionAction) {
		return nil, false
	}
	return o.OffPeakDisconnectedSessionAction, true
}

// SetOffPeakDisconnectedSessionAction gets a reference to the given SessionChangeHostingAction and assigns it to the OffPeakDisconnectedSessionAction field.
func (o *AddCustomPowerSchemeModel) SetOffPeakDisconnectedSessionAction(v SessionChangeHostingAction) {
	o.OffPeakDisconnectedSessionAction = &v
}

// GetPeakExtendedDisconnectTimeoutMinutes returns the PeakExtendedDisconnectTimeoutMinutes field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPeakExtendedDisconnectTimeoutMinutes() int32 {
	if o == nil || IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		var ret int32
		return ret
	}
	return *o.PeakExtendedDisconnectTimeoutMinutes
}

// GetPeakExtendedDisconnectTimeoutMinutesOk returns a tuple with the PeakExtendedDisconnectTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPeakExtendedDisconnectTimeoutMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		return nil, false
	}
	return o.PeakExtendedDisconnectTimeoutMinutes, true
}

// SetPeakExtendedDisconnectTimeoutMinutes gets a reference to the given int32 and assigns it to the PeakExtendedDisconnectTimeoutMinutes field.
func (o *AddCustomPowerSchemeModel) SetPeakExtendedDisconnectTimeoutMinutes(v int32) {
	o.PeakExtendedDisconnectTimeoutMinutes = &v
}

// GetOffPeakExtendedDisconnectTimeoutMinutes returns the OffPeakExtendedDisconnectTimeoutMinutes field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetOffPeakExtendedDisconnectTimeoutMinutes() int32 {
	if o == nil || IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		var ret int32
		return ret
	}
	return *o.OffPeakExtendedDisconnectTimeoutMinutes
}

// GetOffPeakExtendedDisconnectTimeoutMinutesOk returns a tuple with the OffPeakExtendedDisconnectTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetOffPeakExtendedDisconnectTimeoutMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		return nil, false
	}
	return o.OffPeakExtendedDisconnectTimeoutMinutes, true
}

// SetOffPeakExtendedDisconnectTimeoutMinutes gets a reference to the given int32 and assigns it to the OffPeakExtendedDisconnectTimeoutMinutes field.
func (o *AddCustomPowerSchemeModel) SetOffPeakExtendedDisconnectTimeoutMinutes(v int32) {
	o.OffPeakExtendedDisconnectTimeoutMinutes = &v
}

// GetOffPeakBufferCapacity returns the OffPeakBufferCapacity field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetOffPeakBufferCapacity() int32 {
	if o == nil || IsNil(o.OffPeakBufferCapacity) {
		var ret int32
		return ret
	}
	return *o.OffPeakBufferCapacity
}

// GetOffPeakBufferCapacityOk returns a tuple with the OffPeakBufferCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetOffPeakBufferCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakBufferCapacity) {
		return nil, false
	}
	return o.OffPeakBufferCapacity, true
}

// SetOffPeakBufferCapacity gets a reference to the given int32 and assigns it to the OffPeakBufferCapacity field.
func (o *AddCustomPowerSchemeModel) SetOffPeakBufferCapacity(v int32) {
	o.OffPeakBufferCapacity = &v
}

// GetPowerOffDelay returns the PowerOffDelay field value if set, zero value otherwise.
func (o *AddCustomPowerSchemeModel) GetPowerOffDelay() int32 {
	if o == nil || IsNil(o.PowerOffDelay) {
		var ret int32
		return ret
	}
	return *o.PowerOffDelay
}

// GetPowerOffDelayOk returns a tuple with the PowerOffDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomPowerSchemeModel) GetPowerOffDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.PowerOffDelay) {
		return nil, false
	}
	return o.PowerOffDelay, true
}

// SetPowerOffDelay gets a reference to the given int32 and assigns it to the PowerOffDelay field.
func (o *AddCustomPowerSchemeModel) SetPowerOffDelay(v int32) {
	o.PowerOffDelay = &v
}

func (o AddCustomPowerSchemeModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCustomPowerSchemeModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemeName"] = o.SchemeName
	if !IsNil(o.Weekdays) {
		toSerialize["weekdays"] = o.Weekdays
	}
	if !IsNil(o.PeakEndTime) {
		toSerialize["peakEndTime"] = o.PeakEndTime
	}
	if !IsNil(o.PeakStartTime) {
		toSerialize["peakStartTime"] = o.PeakStartTime
	}
	if !IsNil(o.PeakTimeZoneId) {
		toSerialize["peakTimeZoneId"] = o.PeakTimeZoneId
	}
	if !IsNil(o.PeakDisconnectedSessionTimeout) {
		toSerialize["peakDisconnectedSessionTimeout"] = o.PeakDisconnectedSessionTimeout
	}
	if !IsNil(o.OffPeakDisconnectedSessionTimeout) {
		toSerialize["offPeakDisconnectedSessionTimeout"] = o.OffPeakDisconnectedSessionTimeout
	}
	if !IsNil(o.MultiSessionDisconnectedSessionTimeout) {
		toSerialize["multiSessionDisconnectedSessionTimeout"] = o.MultiSessionDisconnectedSessionTimeout
	}
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if !IsNil(o.BufferCapacity) {
		toSerialize["bufferCapacity"] = o.BufferCapacity
	}
	if !IsNil(o.PeakDisconnectedSessionAction) {
		toSerialize["peakDisconnectedSessionAction"] = o.PeakDisconnectedSessionAction
	}
	if !IsNil(o.OffPeakDisconnectedSessionAction) {
		toSerialize["offPeakDisconnectedSessionAction"] = o.OffPeakDisconnectedSessionAction
	}
	if !IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		toSerialize["peakExtendedDisconnectTimeoutMinutes"] = o.PeakExtendedDisconnectTimeoutMinutes
	}
	if !IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		toSerialize["offPeakExtendedDisconnectTimeoutMinutes"] = o.OffPeakExtendedDisconnectTimeoutMinutes
	}
	if !IsNil(o.OffPeakBufferCapacity) {
		toSerialize["offPeakBufferCapacity"] = o.OffPeakBufferCapacity
	}
	if !IsNil(o.PowerOffDelay) {
		toSerialize["powerOffDelay"] = o.PowerOffDelay
	}
	return toSerialize, nil
}

type NullableAddCustomPowerSchemeModel struct {
	value *AddCustomPowerSchemeModel
	isSet bool
}

func (v NullableAddCustomPowerSchemeModel) Get() *AddCustomPowerSchemeModel {
	return v.value
}

func (v *NullableAddCustomPowerSchemeModel) Set(val *AddCustomPowerSchemeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCustomPowerSchemeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCustomPowerSchemeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCustomPowerSchemeModel(val *AddCustomPowerSchemeModel) *NullableAddCustomPowerSchemeModel {
	return &NullableAddCustomPowerSchemeModel{value: val, isSet: true}
}

func (v NullableAddCustomPowerSchemeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCustomPowerSchemeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
