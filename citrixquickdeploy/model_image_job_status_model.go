/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the ImageJobStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageJobStatusModel{}

// ImageJobStatusModel struct for ImageJobStatusModel
type ImageJobStatusModel struct {
	// ID of the job
	Id *string `json:"id,omitempty"`
	// Type of the job
	JobType *CatalogJobType `json:"jobType,omitempty"`
	// The percentage of progress of the job
	OverallProgressPercent *int32 `json:"overallProgressPercent,omitempty"`
	// Indicator of whether the job is cancellable
	IsCancellable *bool `json:"isCancellable,omitempty"`
	// Parameters for the job
	Parameters *map[string]string `json:"parameters,omitempty"`
	// Subjobs of the job
	SubJobs []CatalogJobType `json:"subJobs,omitempty"`
	// Current state of the job
	Status *TemplateImageState `json:"status,omitempty"`
	// Uri for query result of the job
	ResultLocation *string `json:"resultLocation,omitempty"`
	// Warnings of the job
	Warnings []string `json:"warnings,omitempty"`
	// Error occurred in the job
	Error *string `json:"error,omitempty"`
	// Timestamp when the job is created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Timestamp when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Timestamp when the job ended
	EndedAt *time.Time `json:"endedAt,omitempty"`
}

// NewImageJobStatusModelWithDefaults instantiates a new ImageJobStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageJobStatusModelWithDefaults() *ImageJobStatusModel {
	this := ImageJobStatusModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageJobStatusModel) SetId(v string) {
	o.Id = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetJobType() CatalogJobType {
	if o == nil || IsNil(o.JobType) {
		var ret CatalogJobType
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetJobTypeOk() (*CatalogJobType, bool) {
	if o == nil || IsNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// SetJobType gets a reference to the given CatalogJobType and assigns it to the JobType field.
func (o *ImageJobStatusModel) SetJobType(v CatalogJobType) {
	o.JobType = &v
}

// GetOverallProgressPercent returns the OverallProgressPercent field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetOverallProgressPercent() int32 {
	if o == nil || IsNil(o.OverallProgressPercent) {
		var ret int32
		return ret
	}
	return *o.OverallProgressPercent
}

// GetOverallProgressPercentOk returns a tuple with the OverallProgressPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetOverallProgressPercentOk() (*int32, bool) {
	if o == nil || IsNil(o.OverallProgressPercent) {
		return nil, false
	}
	return o.OverallProgressPercent, true
}

// SetOverallProgressPercent gets a reference to the given int32 and assigns it to the OverallProgressPercent field.
func (o *ImageJobStatusModel) SetOverallProgressPercent(v int32) {
	o.OverallProgressPercent = &v
}

// GetIsCancellable returns the IsCancellable field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetIsCancellable() bool {
	if o == nil || IsNil(o.IsCancellable) {
		var ret bool
		return ret
	}
	return *o.IsCancellable
}

// GetIsCancellableOk returns a tuple with the IsCancellable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetIsCancellableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCancellable) {
		return nil, false
	}
	return o.IsCancellable, true
}

// SetIsCancellable gets a reference to the given bool and assigns it to the IsCancellable field.
func (o *ImageJobStatusModel) SetIsCancellable(v bool) {
	o.IsCancellable = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetParameters() map[string]string {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *ImageJobStatusModel) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetSubJobs returns the SubJobs field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetSubJobs() []CatalogJobType {
	if o == nil || IsNil(o.SubJobs) {
		var ret []CatalogJobType
		return ret
	}
	return o.SubJobs
}

// GetSubJobsOk returns a tuple with the SubJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetSubJobsOk() ([]CatalogJobType, bool) {
	if o == nil || IsNil(o.SubJobs) {
		return nil, false
	}
	return o.SubJobs, true
}

// SetSubJobs gets a reference to the given []CatalogJobType and assigns it to the SubJobs field.
func (o *ImageJobStatusModel) SetSubJobs(v []CatalogJobType) {
	o.SubJobs = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetStatus() TemplateImageState {
	if o == nil || IsNil(o.Status) {
		var ret TemplateImageState
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetStatusOk() (*TemplateImageState, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given TemplateImageState and assigns it to the Status field.
func (o *ImageJobStatusModel) SetStatus(v TemplateImageState) {
	o.Status = &v
}

// GetResultLocation returns the ResultLocation field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetResultLocation() string {
	if o == nil || IsNil(o.ResultLocation) {
		var ret string
		return ret
	}
	return *o.ResultLocation
}

// GetResultLocationOk returns a tuple with the ResultLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetResultLocationOk() (*string, bool) {
	if o == nil || IsNil(o.ResultLocation) {
		return nil, false
	}
	return o.ResultLocation, true
}

// SetResultLocation gets a reference to the given string and assigns it to the ResultLocation field.
func (o *ImageJobStatusModel) SetResultLocation(v string) {
	o.ResultLocation = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *ImageJobStatusModel) SetWarnings(v []string) {
	o.Warnings = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ImageJobStatusModel) SetError(v string) {
	o.Error = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ImageJobStatusModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *ImageJobStatusModel) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *ImageJobStatusModel) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageJobStatusModel) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *ImageJobStatusModel) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

func (o ImageJobStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageJobStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.JobType) {
		toSerialize["jobType"] = o.JobType
	}
	if !IsNil(o.OverallProgressPercent) {
		toSerialize["overallProgressPercent"] = o.OverallProgressPercent
	}
	if !IsNil(o.IsCancellable) {
		toSerialize["isCancellable"] = o.IsCancellable
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.SubJobs) {
		toSerialize["subJobs"] = o.SubJobs
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ResultLocation) {
		toSerialize["resultLocation"] = o.ResultLocation
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["endedAt"] = o.EndedAt
	}
	return toSerialize, nil
}

type NullableImageJobStatusModel struct {
	value *ImageJobStatusModel
	isSet bool
}

func (v NullableImageJobStatusModel) Get() *ImageJobStatusModel {
	return v.value
}

func (v *NullableImageJobStatusModel) Set(val *ImageJobStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImageJobStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImageJobStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageJobStatusModel(val *ImageJobStatusModel) *NullableImageJobStatusModel {
	return &NullableImageJobStatusModel{value: val, isSet: true}
}

func (v NullableImageJobStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageJobStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
