/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the ConnectorOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorOverview{}

// ConnectorOverview struct for ConnectorOverview
type ConnectorOverview struct {
	// Name of the Edge Server VM
	ConnectorName *string `json:"connectorName,omitempty"`
	// Resource group of the Edge Server VM
	AzureResourceGroup *string `json:"azureResourceGroup,omitempty"`
	// The current state of the connector install job
	State ConnectorJobState `json:"state"`
	// Any status message that needs to be shown to the user
	Status *string `json:"status,omitempty"`
	// Last time the status was modified
	LastStatusModified *time.Time `json:"lastStatusModified,omitempty"`
	// Error message in case of failures
	Error *string `json:"error,omitempty"`
	// The completion percentage of the current job
	CompletionPercentage *int32 `json:"completionPercentage,omitempty"`
	// Whether the connector is currently being rebooted or not.
	IsRebootInProgress *bool `json:"isRebootInProgress,omitempty"`
}

// NewConnectorOverviewWithDefaults instantiates a new ConnectorOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorOverviewWithDefaults() *ConnectorOverview {
	this := ConnectorOverview{}
	return &this
}

// GetConnectorName returns the ConnectorName field value if set, zero value otherwise.
func (o *ConnectorOverview) GetConnectorName() string {
	if o == nil || IsNil(o.ConnectorName) {
		var ret string
		return ret
	}
	return *o.ConnectorName
}

// GetConnectorNameOk returns a tuple with the ConnectorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetConnectorNameOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorName) {
		return nil, false
	}
	return o.ConnectorName, true
}

// SetConnectorName gets a reference to the given string and assigns it to the ConnectorName field.
func (o *ConnectorOverview) SetConnectorName(v string) {
	o.ConnectorName = &v
}

// GetAzureResourceGroup returns the AzureResourceGroup field value if set, zero value otherwise.
func (o *ConnectorOverview) GetAzureResourceGroup() string {
	if o == nil || IsNil(o.AzureResourceGroup) {
		var ret string
		return ret
	}
	return *o.AzureResourceGroup
}

// GetAzureResourceGroupOk returns a tuple with the AzureResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetAzureResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceGroup) {
		return nil, false
	}
	return o.AzureResourceGroup, true
}

// SetAzureResourceGroup gets a reference to the given string and assigns it to the AzureResourceGroup field.
func (o *ConnectorOverview) SetAzureResourceGroup(v string) {
	o.AzureResourceGroup = &v
}

// GetState returns the State field value
func (o *ConnectorOverview) GetState() ConnectorJobState {
	if o == nil {
		var ret ConnectorJobState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetStateOk() (*ConnectorJobState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ConnectorOverview) SetState(v ConnectorJobState) {
	o.State = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConnectorOverview) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ConnectorOverview) SetStatus(v string) {
	o.Status = &v
}

// GetLastStatusModified returns the LastStatusModified field value if set, zero value otherwise.
func (o *ConnectorOverview) GetLastStatusModified() time.Time {
	if o == nil || IsNil(o.LastStatusModified) {
		var ret time.Time
		return ret
	}
	return *o.LastStatusModified
}

// GetLastStatusModifiedOk returns a tuple with the LastStatusModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetLastStatusModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastStatusModified) {
		return nil, false
	}
	return o.LastStatusModified, true
}

// SetLastStatusModified gets a reference to the given time.Time and assigns it to the LastStatusModified field.
func (o *ConnectorOverview) SetLastStatusModified(v time.Time) {
	o.LastStatusModified = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ConnectorOverview) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ConnectorOverview) SetError(v string) {
	o.Error = &v
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise.
func (o *ConnectorOverview) GetCompletionPercentage() int32 {
	if o == nil || IsNil(o.CompletionPercentage) {
		var ret int32
		return ret
	}
	return *o.CompletionPercentage
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetCompletionPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.CompletionPercentage) {
		return nil, false
	}
	return o.CompletionPercentage, true
}

// SetCompletionPercentage gets a reference to the given int32 and assigns it to the CompletionPercentage field.
func (o *ConnectorOverview) SetCompletionPercentage(v int32) {
	o.CompletionPercentage = &v
}

// GetIsRebootInProgress returns the IsRebootInProgress field value if set, zero value otherwise.
func (o *ConnectorOverview) GetIsRebootInProgress() bool {
	if o == nil || IsNil(o.IsRebootInProgress) {
		var ret bool
		return ret
	}
	return *o.IsRebootInProgress
}

// GetIsRebootInProgressOk returns a tuple with the IsRebootInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorOverview) GetIsRebootInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRebootInProgress) {
		return nil, false
	}
	return o.IsRebootInProgress, true
}

// SetIsRebootInProgress gets a reference to the given bool and assigns it to the IsRebootInProgress field.
func (o *ConnectorOverview) SetIsRebootInProgress(v bool) {
	o.IsRebootInProgress = &v
}

func (o ConnectorOverview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectorName) {
		toSerialize["connectorName"] = o.ConnectorName
	}
	if !IsNil(o.AzureResourceGroup) {
		toSerialize["azureResourceGroup"] = o.AzureResourceGroup
	}
	toSerialize["state"] = o.State
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LastStatusModified) {
		toSerialize["lastStatusModified"] = o.LastStatusModified
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.CompletionPercentage) {
		toSerialize["completionPercentage"] = o.CompletionPercentage
	}
	if !IsNil(o.IsRebootInProgress) {
		toSerialize["isRebootInProgress"] = o.IsRebootInProgress
	}
	return toSerialize, nil
}

type NullableConnectorOverview struct {
	value *ConnectorOverview
	isSet bool
}

func (v NullableConnectorOverview) Get() *ConnectorOverview {
	return v.value
}

func (v *NullableConnectorOverview) Set(val *ConnectorOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorOverview(val *ConnectorOverview) *NullableConnectorOverview {
	return &NullableConnectorOverview{value: val, isSet: true}
}

func (v NullableConnectorOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
