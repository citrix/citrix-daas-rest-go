/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdateCatalogTemplateImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCatalogTemplateImageModel{}

// UpdateCatalogTemplateImageModel struct for UpdateCatalogTemplateImageModel
type UpdateCatalogTemplateImageModel struct {
	// ID of the master image to update the catalog with
	TemplateId string `json:"templateId"`
	// Whether the image was prepared by Citrix, or provided by the customer
	CitrixPrepared *bool `json:"citrixPrepared,omitempty"`
	// Number of minutes to delay updating the VDAs
	VdaUpdateDelay *int32 `json:"vdaUpdateDelay,omitempty"`
}

// NewUpdateCatalogTemplateImageModelWithDefaults instantiates a new UpdateCatalogTemplateImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCatalogTemplateImageModelWithDefaults() *UpdateCatalogTemplateImageModel {
	this := UpdateCatalogTemplateImageModel{}
	return &this
}

// GetTemplateId returns the TemplateId field value
func (o *UpdateCatalogTemplateImageModel) GetTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *UpdateCatalogTemplateImageModel) GetTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *UpdateCatalogTemplateImageModel) SetTemplateId(v string) {
	o.TemplateId = v
}

// GetCitrixPrepared returns the CitrixPrepared field value if set, zero value otherwise.
func (o *UpdateCatalogTemplateImageModel) GetCitrixPrepared() bool {
	if o == nil || IsNil(o.CitrixPrepared) {
		var ret bool
		return ret
	}
	return *o.CitrixPrepared
}

// GetCitrixPreparedOk returns a tuple with the CitrixPrepared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogTemplateImageModel) GetCitrixPreparedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixPrepared) {
		return nil, false
	}
	return o.CitrixPrepared, true
}

// SetCitrixPrepared gets a reference to the given bool and assigns it to the CitrixPrepared field.
func (o *UpdateCatalogTemplateImageModel) SetCitrixPrepared(v bool) {
	o.CitrixPrepared = &v
}

// GetVdaUpdateDelay returns the VdaUpdateDelay field value if set, zero value otherwise.
func (o *UpdateCatalogTemplateImageModel) GetVdaUpdateDelay() int32 {
	if o == nil || IsNil(o.VdaUpdateDelay) {
		var ret int32
		return ret
	}
	return *o.VdaUpdateDelay
}

// GetVdaUpdateDelayOk returns a tuple with the VdaUpdateDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCatalogTemplateImageModel) GetVdaUpdateDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.VdaUpdateDelay) {
		return nil, false
	}
	return o.VdaUpdateDelay, true
}

// SetVdaUpdateDelay gets a reference to the given int32 and assigns it to the VdaUpdateDelay field.
func (o *UpdateCatalogTemplateImageModel) SetVdaUpdateDelay(v int32) {
	o.VdaUpdateDelay = &v
}

func (o UpdateCatalogTemplateImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCatalogTemplateImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["templateId"] = o.TemplateId
	if !IsNil(o.CitrixPrepared) {
		toSerialize["citrixPrepared"] = o.CitrixPrepared
	}
	if !IsNil(o.VdaUpdateDelay) {
		toSerialize["vdaUpdateDelay"] = o.VdaUpdateDelay
	}
	return toSerialize, nil
}

type NullableUpdateCatalogTemplateImageModel struct {
	value *UpdateCatalogTemplateImageModel
	isSet bool
}

func (v NullableUpdateCatalogTemplateImageModel) Get() *UpdateCatalogTemplateImageModel {
	return v.value
}

func (v *NullableUpdateCatalogTemplateImageModel) Set(val *UpdateCatalogTemplateImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCatalogTemplateImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCatalogTemplateImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCatalogTemplateImageModel(val *UpdateCatalogTemplateImageModel) *NullableUpdateCatalogTemplateImageModel {
	return &NullableUpdateCatalogTemplateImageModel{value: val, isSet: true}
}

func (v NullableUpdateCatalogTemplateImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCatalogTemplateImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
