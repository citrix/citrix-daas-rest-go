/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogResourceLocationConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogResourceLocationConfiguration{}

// CatalogResourceLocationConfiguration struct for CatalogResourceLocationConfiguration
type CatalogResourceLocationConfiguration struct {
	// Indicates if the catalog is assigned to an existing Resource Location, instead of needing a new one
	IsAssignedExistingResourceLocation *bool `json:"isAssignedExistingResourceLocation,omitempty"`
	// The desired name of the resource location that will be created for the catalog
	Name string `json:"name" validate:"regexp=[^\\/\\\\\\\\#?%|[\\\\]{}<>$^&+]+"`
	// Name of the resource location where to provision the connector vdas
	AzureResourceGroup *string `json:"azureResourceGroup,omitempty" validate:"regexp=^[\\\\p{L}0-9-_.\\\\(\\\\)]*$"`
	// Organization Unit associated with computer accounts added for the Resource Location
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// Connectivity method for access to desktops and apps
	ConnectivityMethod *ConnectivityType `json:"connectivityMethod,omitempty"`
	// The ID of the vm size for the connector
	VmSize *string `json:"vmSize,omitempty"`
}

// NewCatalogResourceLocationConfigurationWithDefaults instantiates a new CatalogResourceLocationConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogResourceLocationConfigurationWithDefaults() *CatalogResourceLocationConfiguration {
	this := CatalogResourceLocationConfiguration{}
	return &this
}

// GetIsAssignedExistingResourceLocation returns the IsAssignedExistingResourceLocation field value if set, zero value otherwise.
func (o *CatalogResourceLocationConfiguration) GetIsAssignedExistingResourceLocation() bool {
	if o == nil || IsNil(o.IsAssignedExistingResourceLocation) {
		var ret bool
		return ret
	}
	return *o.IsAssignedExistingResourceLocation
}

// GetIsAssignedExistingResourceLocationOk returns a tuple with the IsAssignedExistingResourceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetIsAssignedExistingResourceLocationOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAssignedExistingResourceLocation) {
		return nil, false
	}
	return o.IsAssignedExistingResourceLocation, true
}

// SetIsAssignedExistingResourceLocation gets a reference to the given bool and assigns it to the IsAssignedExistingResourceLocation field.
func (o *CatalogResourceLocationConfiguration) SetIsAssignedExistingResourceLocation(v bool) {
	o.IsAssignedExistingResourceLocation = &v
}

// GetName returns the Name field value
func (o *CatalogResourceLocationConfiguration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogResourceLocationConfiguration) SetName(v string) {
	o.Name = v
}

// GetAzureResourceGroup returns the AzureResourceGroup field value if set, zero value otherwise.
func (o *CatalogResourceLocationConfiguration) GetAzureResourceGroup() string {
	if o == nil || IsNil(o.AzureResourceGroup) {
		var ret string
		return ret
	}
	return *o.AzureResourceGroup
}

// GetAzureResourceGroupOk returns a tuple with the AzureResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetAzureResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.AzureResourceGroup) {
		return nil, false
	}
	return o.AzureResourceGroup, true
}

// SetAzureResourceGroup gets a reference to the given string and assigns it to the AzureResourceGroup field.
func (o *CatalogResourceLocationConfiguration) SetAzureResourceGroup(v string) {
	o.AzureResourceGroup = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *CatalogResourceLocationConfiguration) GetOrganizationalUnit() string {
	if o == nil || IsNil(o.OrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationalUnit) {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *CatalogResourceLocationConfiguration) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetConnectivityMethod returns the ConnectivityMethod field value if set, zero value otherwise.
func (o *CatalogResourceLocationConfiguration) GetConnectivityMethod() ConnectivityType {
	if o == nil || IsNil(o.ConnectivityMethod) {
		var ret ConnectivityType
		return ret
	}
	return *o.ConnectivityMethod
}

// GetConnectivityMethodOk returns a tuple with the ConnectivityMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetConnectivityMethodOk() (*ConnectivityType, bool) {
	if o == nil || IsNil(o.ConnectivityMethod) {
		return nil, false
	}
	return o.ConnectivityMethod, true
}

// SetConnectivityMethod gets a reference to the given ConnectivityType and assigns it to the ConnectivityMethod field.
func (o *CatalogResourceLocationConfiguration) SetConnectivityMethod(v ConnectivityType) {
	o.ConnectivityMethod = &v
}

// GetVmSize returns the VmSize field value if set, zero value otherwise.
func (o *CatalogResourceLocationConfiguration) GetVmSize() string {
	if o == nil || IsNil(o.VmSize) {
		var ret string
		return ret
	}
	return *o.VmSize
}

// GetVmSizeOk returns a tuple with the VmSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogResourceLocationConfiguration) GetVmSizeOk() (*string, bool) {
	if o == nil || IsNil(o.VmSize) {
		return nil, false
	}
	return o.VmSize, true
}

// SetVmSize gets a reference to the given string and assigns it to the VmSize field.
func (o *CatalogResourceLocationConfiguration) SetVmSize(v string) {
	o.VmSize = &v
}

func (o CatalogResourceLocationConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogResourceLocationConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAssignedExistingResourceLocation) {
		toSerialize["isAssignedExistingResourceLocation"] = o.IsAssignedExistingResourceLocation
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.AzureResourceGroup) {
		toSerialize["azureResourceGroup"] = o.AzureResourceGroup
	}
	if !IsNil(o.OrganizationalUnit) {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	if !IsNil(o.ConnectivityMethod) {
		toSerialize["connectivityMethod"] = o.ConnectivityMethod
	}
	if !IsNil(o.VmSize) {
		toSerialize["vmSize"] = o.VmSize
	}
	return toSerialize, nil
}

type NullableCatalogResourceLocationConfiguration struct {
	value *CatalogResourceLocationConfiguration
	isSet bool
}

func (v NullableCatalogResourceLocationConfiguration) Get() *CatalogResourceLocationConfiguration {
	return v.value
}

func (v *NullableCatalogResourceLocationConfiguration) Set(val *CatalogResourceLocationConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogResourceLocationConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogResourceLocationConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogResourceLocationConfiguration(val *CatalogResourceLocationConfiguration) *NullableCatalogResourceLocationConfiguration {
	return &NullableCatalogResourceLocationConfiguration{value: val, isSet: true}
}

func (v NullableCatalogResourceLocationConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogResourceLocationConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
