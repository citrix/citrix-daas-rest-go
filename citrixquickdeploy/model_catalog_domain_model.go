/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogDomainModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogDomainModel{}

// CatalogDomainModel struct for CatalogDomainModel
type CatalogDomainModel struct {
	// Domain the VMs will join
	DomainName string `json:"domainName" validate:"regexp=^[\\\\p{L}0-9-_.]*$"`
	// OU of the domain
	DomainOu *string `json:"domainOu,omitempty"`
	// Name of the service account that will be used to join the domain
	ServiceAccountName *string `json:"serviceAccountName,omitempty" validate:"regexp=^[^\\/\\\\[\\\\]:;\\\\\\\\|=\\\\^,+*?<>]*$"`
	IsSecureBrowser    *bool   `json:"isSecureBrowser,omitempty"`
	CspCustomer        *string `json:"cspCustomer,omitempty"`
}

// NewCatalogDomainModelWithDefaults instantiates a new CatalogDomainModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogDomainModelWithDefaults() *CatalogDomainModel {
	this := CatalogDomainModel{}
	return &this
}

// GetDomainName returns the DomainName field value
func (o *CatalogDomainModel) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *CatalogDomainModel) GetDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *CatalogDomainModel) SetDomainName(v string) {
	o.DomainName = v
}

// GetDomainOu returns the DomainOu field value if set, zero value otherwise.
func (o *CatalogDomainModel) GetDomainOu() string {
	if o == nil || IsNil(o.DomainOu) {
		var ret string
		return ret
	}
	return *o.DomainOu
}

// GetDomainOuOk returns a tuple with the DomainOu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDomainModel) GetDomainOuOk() (*string, bool) {
	if o == nil || IsNil(o.DomainOu) {
		return nil, false
	}
	return o.DomainOu, true
}

// SetDomainOu gets a reference to the given string and assigns it to the DomainOu field.
func (o *CatalogDomainModel) SetDomainOu(v string) {
	o.DomainOu = &v
}

// GetServiceAccountName returns the ServiceAccountName field value if set, zero value otherwise.
func (o *CatalogDomainModel) GetServiceAccountName() string {
	if o == nil || IsNil(o.ServiceAccountName) {
		var ret string
		return ret
	}
	return *o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDomainModel) GetServiceAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountName) {
		return nil, false
	}
	return o.ServiceAccountName, true
}

// SetServiceAccountName gets a reference to the given string and assigns it to the ServiceAccountName field.
func (o *CatalogDomainModel) SetServiceAccountName(v string) {
	o.ServiceAccountName = &v
}

// GetIsSecureBrowser returns the IsSecureBrowser field value if set, zero value otherwise.
func (o *CatalogDomainModel) GetIsSecureBrowser() bool {
	if o == nil || IsNil(o.IsSecureBrowser) {
		var ret bool
		return ret
	}
	return *o.IsSecureBrowser
}

// GetIsSecureBrowserOk returns a tuple with the IsSecureBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDomainModel) GetIsSecureBrowserOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecureBrowser) {
		return nil, false
	}
	return o.IsSecureBrowser, true
}

// SetIsSecureBrowser gets a reference to the given bool and assigns it to the IsSecureBrowser field.
func (o *CatalogDomainModel) SetIsSecureBrowser(v bool) {
	o.IsSecureBrowser = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *CatalogDomainModel) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogDomainModel) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *CatalogDomainModel) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

func (o CatalogDomainModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogDomainModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domainName"] = o.DomainName
	if !IsNil(o.DomainOu) {
		toSerialize["domainOu"] = o.DomainOu
	}
	if !IsNil(o.ServiceAccountName) {
		toSerialize["serviceAccountName"] = o.ServiceAccountName
	}
	if !IsNil(o.IsSecureBrowser) {
		toSerialize["isSecureBrowser"] = o.IsSecureBrowser
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	return toSerialize, nil
}

type NullableCatalogDomainModel struct {
	value *CatalogDomainModel
	isSet bool
}

func (v NullableCatalogDomainModel) Get() *CatalogDomainModel {
	return v.value
}

func (v *NullableCatalogDomainModel) Set(val *CatalogDomainModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogDomainModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogDomainModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogDomainModel(val *CatalogDomainModel) *NullableCatalogDomainModel {
	return &NullableCatalogDomainModel{value: val, isSet: true}
}

func (v NullableCatalogDomainModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogDomainModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
