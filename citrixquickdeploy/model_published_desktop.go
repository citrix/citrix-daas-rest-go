/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the PublishedDesktop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublishedDesktop{}

// PublishedDesktop struct for PublishedDesktop
type PublishedDesktop struct {
	// Current state in publishing the desktop
	State AppsAndDesktopsProvisionState `json:"state"`
	// Status message related to desktop state
	Status *string `json:"status,omitempty"`
	// Unique identifier of desktop, generally a GUID
	Id string `json:"id"`
	// Display name of desktop
	Name string `json:"name"`
	// Description
	Description *string `json:"description,omitempty"`
}

// NewPublishedDesktopWithDefaults instantiates a new PublishedDesktop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishedDesktopWithDefaults() *PublishedDesktop {
	this := PublishedDesktop{}
	return &this
}

// GetState returns the State field value
func (o *PublishedDesktop) GetState() AppsAndDesktopsProvisionState {
	if o == nil {
		var ret AppsAndDesktopsProvisionState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *PublishedDesktop) GetStateOk() (*AppsAndDesktopsProvisionState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *PublishedDesktop) SetState(v AppsAndDesktopsProvisionState) {
	o.State = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PublishedDesktop) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishedDesktop) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PublishedDesktop) SetStatus(v string) {
	o.Status = &v
}

// GetId returns the Id field value
func (o *PublishedDesktop) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublishedDesktop) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublishedDesktop) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PublishedDesktop) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PublishedDesktop) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PublishedDesktop) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PublishedDesktop) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishedDesktop) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PublishedDesktop) SetDescription(v string) {
	o.Description = &v
}

func (o PublishedDesktop) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublishedDesktop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullablePublishedDesktop struct {
	value *PublishedDesktop
	isSet bool
}

func (v NullablePublishedDesktop) Get() *PublishedDesktop {
	return v.value
}

func (v *NullablePublishedDesktop) Set(val *PublishedDesktop) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishedDesktop) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishedDesktop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishedDesktop(val *PublishedDesktop) *NullablePublishedDesktop {
	return &NullablePublishedDesktop{value: val, isSet: true}
}

func (v NullablePublishedDesktop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishedDesktop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
