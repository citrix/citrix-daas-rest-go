/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AssociatedCatalog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssociatedCatalog{}

// AssociatedCatalog struct for AssociatedCatalog
type AssociatedCatalog struct {
	// ID of the associated catalog.
	CatalogId *string `json:"catalogId,omitempty"`
	// Name of the associated catalog.
	CatalogName *string `json:"catalogName,omitempty"`
}

// NewAssociatedCatalogWithDefaults instantiates a new AssociatedCatalog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociatedCatalogWithDefaults() *AssociatedCatalog {
	this := AssociatedCatalog{}
	return &this
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *AssociatedCatalog) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedCatalog) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *AssociatedCatalog) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *AssociatedCatalog) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssociatedCatalog) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *AssociatedCatalog) SetCatalogName(v string) {
	o.CatalogName = &v
}

func (o AssociatedCatalog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssociatedCatalog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogId) {
		toSerialize["catalogId"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalogName"] = o.CatalogName
	}
	return toSerialize, nil
}

type NullableAssociatedCatalog struct {
	value *AssociatedCatalog
	isSet bool
}

func (v NullableAssociatedCatalog) Get() *AssociatedCatalog {
	return v.value
}

func (v *NullableAssociatedCatalog) Set(val *AssociatedCatalog) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociatedCatalog) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociatedCatalog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociatedCatalog(val *AssociatedCatalog) *NullableAssociatedCatalog {
	return &NullableAssociatedCatalog{value: val, isSet: true}
}

func (v NullableAssociatedCatalog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociatedCatalog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
