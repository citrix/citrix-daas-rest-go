/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdatePreparedImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePreparedImageModel{}

// UpdatePreparedImageModel struct for UpdatePreparedImageModel
type UpdatePreparedImageModel struct {
	// Name of the citrix prepared image
	Deprecate bool `json:"deprecate"`
}

// NewUpdatePreparedImageModelWithDefaults instantiates a new UpdatePreparedImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePreparedImageModelWithDefaults() *UpdatePreparedImageModel {
	this := UpdatePreparedImageModel{}
	return &this
}

// GetDeprecate returns the Deprecate field value
func (o *UpdatePreparedImageModel) GetDeprecate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deprecate
}

// GetDeprecateOk returns a tuple with the Deprecate field value
// and a boolean to check if the value has been set.
func (o *UpdatePreparedImageModel) GetDeprecateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deprecate, true
}

// SetDeprecate sets field value
func (o *UpdatePreparedImageModel) SetDeprecate(v bool) {
	o.Deprecate = v
}

func (o UpdatePreparedImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePreparedImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deprecate"] = o.Deprecate
	return toSerialize, nil
}

type NullableUpdatePreparedImageModel struct {
	value *UpdatePreparedImageModel
	isSet bool
}

func (v NullableUpdatePreparedImageModel) Get() *UpdatePreparedImageModel {
	return v.value
}

func (v *NullableUpdatePreparedImageModel) Set(val *UpdatePreparedImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePreparedImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePreparedImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePreparedImageModel(val *UpdatePreparedImageModel) *NullableUpdatePreparedImageModel {
	return &NullableUpdatePreparedImageModel{value: val, isSet: true}
}

func (v NullableUpdatePreparedImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePreparedImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
