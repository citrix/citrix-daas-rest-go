/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the PendingUsersModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PendingUsersModel{}

// PendingUsersModel struct for PendingUsersModel
type PendingUsersModel struct {
	// Identity Provider used to contain information for users
	IdentityProvider *IdentityProvider `json:"identityProvider,omitempty"`
	Users            []PendingUser     `json:"users,omitempty"`
}

// NewPendingUsersModelWithDefaults instantiates a new PendingUsersModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingUsersModelWithDefaults() *PendingUsersModel {
	this := PendingUsersModel{}
	return &this
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise.
func (o *PendingUsersModel) GetIdentityProvider() IdentityProvider {
	if o == nil || IsNil(o.IdentityProvider) {
		var ret IdentityProvider
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingUsersModel) GetIdentityProviderOk() (*IdentityProvider, bool) {
	if o == nil || IsNil(o.IdentityProvider) {
		return nil, false
	}
	return o.IdentityProvider, true
}

// SetIdentityProvider gets a reference to the given IdentityProvider and assigns it to the IdentityProvider field.
func (o *PendingUsersModel) SetIdentityProvider(v IdentityProvider) {
	o.IdentityProvider = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *PendingUsersModel) GetUsers() []PendingUser {
	if o == nil || IsNil(o.Users) {
		var ret []PendingUser
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingUsersModel) GetUsersOk() ([]PendingUser, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// SetUsers gets a reference to the given []PendingUser and assigns it to the Users field.
func (o *PendingUsersModel) SetUsers(v []PendingUser) {
	o.Users = v
}

func (o PendingUsersModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PendingUsersModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityProvider) {
		toSerialize["identityProvider"] = o.IdentityProvider
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullablePendingUsersModel struct {
	value *PendingUsersModel
	isSet bool
}

func (v NullablePendingUsersModel) Get() *PendingUsersModel {
	return v.value
}

func (v *NullablePendingUsersModel) Set(val *PendingUsersModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingUsersModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingUsersModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingUsersModel(val *PendingUsersModel) *NullablePendingUsersModel {
	return &NullablePendingUsersModel{value: val, isSet: true}
}

func (v NullablePendingUsersModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingUsersModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
