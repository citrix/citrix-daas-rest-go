/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the BackupVmConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupVmConfiguration{}

// BackupVmConfiguration struct for BackupVmConfiguration
type BackupVmConfiguration struct {
	// The service offering for the backup VM.  Ex: \"Standard_D2as_v4\"
	ServiceOffering *string `json:"serviceOffering,omitempty"`
	// The service offering type for the backup VM.  Options are: \"Regular\" or \"Spot\".  Default to \"Regular\" if unspecified.
	Type *string `json:"type,omitempty"`
}

// NewBackupVmConfigurationWithDefaults instantiates a new BackupVmConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupVmConfigurationWithDefaults() *BackupVmConfiguration {
	this := BackupVmConfiguration{}
	return &this
}

// GetServiceOffering returns the ServiceOffering field value if set, zero value otherwise.
func (o *BackupVmConfiguration) GetServiceOffering() string {
	if o == nil || IsNil(o.ServiceOffering) {
		var ret string
		return ret
	}
	return *o.ServiceOffering
}

// GetServiceOfferingOk returns a tuple with the ServiceOffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupVmConfiguration) GetServiceOfferingOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceOffering) {
		return nil, false
	}
	return o.ServiceOffering, true
}

// SetServiceOffering gets a reference to the given string and assigns it to the ServiceOffering field.
func (o *BackupVmConfiguration) SetServiceOffering(v string) {
	o.ServiceOffering = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BackupVmConfiguration) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupVmConfiguration) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BackupVmConfiguration) SetType(v string) {
	o.Type = &v
}

func (o BackupVmConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupVmConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceOffering) {
		toSerialize["serviceOffering"] = o.ServiceOffering
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableBackupVmConfiguration struct {
	value *BackupVmConfiguration
	isSet bool
}

func (v NullableBackupVmConfiguration) Get() *BackupVmConfiguration {
	return v.value
}

func (v *NullableBackupVmConfiguration) Set(val *BackupVmConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupVmConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupVmConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupVmConfiguration(val *BackupVmConfiguration) *NullableBackupVmConfiguration {
	return &NullableBackupVmConfiguration{value: val, isSet: true}
}

func (v NullableBackupVmConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupVmConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
