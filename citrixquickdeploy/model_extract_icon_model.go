/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ExtractIconModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtractIconModel{}

// ExtractIconModel struct for ExtractIconModel
type ExtractIconModel struct {
	FileName *string `json:"fileName,omitempty"`
	// The bytes of the file that contains the icon to be extracted
	IconFileBytes *string `json:"iconFileBytes,omitempty" validate:"regexp=^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"`
}

// NewExtractIconModelWithDefaults instantiates a new ExtractIconModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractIconModelWithDefaults() *ExtractIconModel {
	this := ExtractIconModel{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ExtractIconModel) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractIconModel) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ExtractIconModel) SetFileName(v string) {
	o.FileName = &v
}

// GetIconFileBytes returns the IconFileBytes field value if set, zero value otherwise.
func (o *ExtractIconModel) GetIconFileBytes() string {
	if o == nil || IsNil(o.IconFileBytes) {
		var ret string
		return ret
	}
	return *o.IconFileBytes
}

// GetIconFileBytesOk returns a tuple with the IconFileBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractIconModel) GetIconFileBytesOk() (*string, bool) {
	if o == nil || IsNil(o.IconFileBytes) {
		return nil, false
	}
	return o.IconFileBytes, true
}

// SetIconFileBytes gets a reference to the given string and assigns it to the IconFileBytes field.
func (o *ExtractIconModel) SetIconFileBytes(v string) {
	o.IconFileBytes = &v
}

func (o ExtractIconModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtractIconModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.IconFileBytes) {
		toSerialize["iconFileBytes"] = o.IconFileBytes
	}
	return toSerialize, nil
}

type NullableExtractIconModel struct {
	value *ExtractIconModel
	isSet bool
}

func (v NullableExtractIconModel) Get() *ExtractIconModel {
	return v.value
}

func (v *NullableExtractIconModel) Set(val *ExtractIconModel) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractIconModel) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractIconModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractIconModel(val *ExtractIconModel) *NullableExtractIconModel {
	return &NullableExtractIconModel{value: val, isSet: true}
}

func (v NullableExtractIconModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractIconModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
