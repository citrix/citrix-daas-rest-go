/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the DataStoreConsumptionThresholdModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataStoreConsumptionThresholdModel{}

// DataStoreConsumptionThresholdModel struct for DataStoreConsumptionThresholdModel
type DataStoreConsumptionThresholdModel struct {
	// Threshold for monthly consumption commitment (in unit)
	MonthlyConsumptionCommitmentThreshold *int32 `json:"monthlyConsumptionCommitmentThreshold,omitempty"`
	// Indicator for whether monthly consumption threshold alert has been enabled
	MonthlyConsumptionAlertEnabled *bool `json:"monthlyConsumptionAlertEnabled,omitempty"`
	// Threshold for term consumption commitment (in percentage)
	TermConsumptionCommitmentThreshold *float64 `json:"termConsumptionCommitmentThreshold,omitempty"`
	// Indicator for whether term consumption threshold alert has been enabled
	TermConsumptionAlertEnabled *bool `json:"termConsumptionAlertEnabled,omitempty"`
}

// NewDataStoreConsumptionThresholdModelWithDefaults instantiates a new DataStoreConsumptionThresholdModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreConsumptionThresholdModelWithDefaults() *DataStoreConsumptionThresholdModel {
	this := DataStoreConsumptionThresholdModel{}
	return &this
}

// GetMonthlyConsumptionCommitmentThreshold returns the MonthlyConsumptionCommitmentThreshold field value if set, zero value otherwise.
func (o *DataStoreConsumptionThresholdModel) GetMonthlyConsumptionCommitmentThreshold() int32 {
	if o == nil || IsNil(o.MonthlyConsumptionCommitmentThreshold) {
		var ret int32
		return ret
	}
	return *o.MonthlyConsumptionCommitmentThreshold
}

// GetMonthlyConsumptionCommitmentThresholdOk returns a tuple with the MonthlyConsumptionCommitmentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreConsumptionThresholdModel) GetMonthlyConsumptionCommitmentThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyConsumptionCommitmentThreshold) {
		return nil, false
	}
	return o.MonthlyConsumptionCommitmentThreshold, true
}

// SetMonthlyConsumptionCommitmentThreshold gets a reference to the given int32 and assigns it to the MonthlyConsumptionCommitmentThreshold field.
func (o *DataStoreConsumptionThresholdModel) SetMonthlyConsumptionCommitmentThreshold(v int32) {
	o.MonthlyConsumptionCommitmentThreshold = &v
}

// GetMonthlyConsumptionAlertEnabled returns the MonthlyConsumptionAlertEnabled field value if set, zero value otherwise.
func (o *DataStoreConsumptionThresholdModel) GetMonthlyConsumptionAlertEnabled() bool {
	if o == nil || IsNil(o.MonthlyConsumptionAlertEnabled) {
		var ret bool
		return ret
	}
	return *o.MonthlyConsumptionAlertEnabled
}

// GetMonthlyConsumptionAlertEnabledOk returns a tuple with the MonthlyConsumptionAlertEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreConsumptionThresholdModel) GetMonthlyConsumptionAlertEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MonthlyConsumptionAlertEnabled) {
		return nil, false
	}
	return o.MonthlyConsumptionAlertEnabled, true
}

// SetMonthlyConsumptionAlertEnabled gets a reference to the given bool and assigns it to the MonthlyConsumptionAlertEnabled field.
func (o *DataStoreConsumptionThresholdModel) SetMonthlyConsumptionAlertEnabled(v bool) {
	o.MonthlyConsumptionAlertEnabled = &v
}

// GetTermConsumptionCommitmentThreshold returns the TermConsumptionCommitmentThreshold field value if set, zero value otherwise.
func (o *DataStoreConsumptionThresholdModel) GetTermConsumptionCommitmentThreshold() float64 {
	if o == nil || IsNil(o.TermConsumptionCommitmentThreshold) {
		var ret float64
		return ret
	}
	return *o.TermConsumptionCommitmentThreshold
}

// GetTermConsumptionCommitmentThresholdOk returns a tuple with the TermConsumptionCommitmentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreConsumptionThresholdModel) GetTermConsumptionCommitmentThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.TermConsumptionCommitmentThreshold) {
		return nil, false
	}
	return o.TermConsumptionCommitmentThreshold, true
}

// SetTermConsumptionCommitmentThreshold gets a reference to the given float64 and assigns it to the TermConsumptionCommitmentThreshold field.
func (o *DataStoreConsumptionThresholdModel) SetTermConsumptionCommitmentThreshold(v float64) {
	o.TermConsumptionCommitmentThreshold = &v
}

// GetTermConsumptionAlertEnabled returns the TermConsumptionAlertEnabled field value if set, zero value otherwise.
func (o *DataStoreConsumptionThresholdModel) GetTermConsumptionAlertEnabled() bool {
	if o == nil || IsNil(o.TermConsumptionAlertEnabled) {
		var ret bool
		return ret
	}
	return *o.TermConsumptionAlertEnabled
}

// GetTermConsumptionAlertEnabledOk returns a tuple with the TermConsumptionAlertEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreConsumptionThresholdModel) GetTermConsumptionAlertEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TermConsumptionAlertEnabled) {
		return nil, false
	}
	return o.TermConsumptionAlertEnabled, true
}

// SetTermConsumptionAlertEnabled gets a reference to the given bool and assigns it to the TermConsumptionAlertEnabled field.
func (o *DataStoreConsumptionThresholdModel) SetTermConsumptionAlertEnabled(v bool) {
	o.TermConsumptionAlertEnabled = &v
}

func (o DataStoreConsumptionThresholdModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataStoreConsumptionThresholdModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MonthlyConsumptionCommitmentThreshold) {
		toSerialize["monthlyConsumptionCommitmentThreshold"] = o.MonthlyConsumptionCommitmentThreshold
	}
	if !IsNil(o.MonthlyConsumptionAlertEnabled) {
		toSerialize["monthlyConsumptionAlertEnabled"] = o.MonthlyConsumptionAlertEnabled
	}
	if !IsNil(o.TermConsumptionCommitmentThreshold) {
		toSerialize["termConsumptionCommitmentThreshold"] = o.TermConsumptionCommitmentThreshold
	}
	if !IsNil(o.TermConsumptionAlertEnabled) {
		toSerialize["termConsumptionAlertEnabled"] = o.TermConsumptionAlertEnabled
	}
	return toSerialize, nil
}

type NullableDataStoreConsumptionThresholdModel struct {
	value *DataStoreConsumptionThresholdModel
	isSet bool
}

func (v NullableDataStoreConsumptionThresholdModel) Get() *DataStoreConsumptionThresholdModel {
	return v.value
}

func (v *NullableDataStoreConsumptionThresholdModel) Set(val *DataStoreConsumptionThresholdModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreConsumptionThresholdModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreConsumptionThresholdModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreConsumptionThresholdModel(val *DataStoreConsumptionThresholdModel) *NullableDataStoreConsumptionThresholdModel {
	return &NullableDataStoreConsumptionThresholdModel{value: val, isSet: true}
}

func (v NullableDataStoreConsumptionThresholdModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreConsumptionThresholdModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
