/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CustomerResourceLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerResourceLocations{}

// CustomerResourceLocations struct for CustomerResourceLocations
type CustomerResourceLocations struct {
	// The list of Resource Locations
	Items     []ResourceLocationDetails `json:"items,omitempty"`
	StaleData *bool                     `json:"staleData,omitempty"`
}

// NewCustomerResourceLocationsWithDefaults instantiates a new CustomerResourceLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerResourceLocationsWithDefaults() *CustomerResourceLocations {
	this := CustomerResourceLocations{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CustomerResourceLocations) GetItems() []ResourceLocationDetails {
	if o == nil || IsNil(o.Items) {
		var ret []ResourceLocationDetails
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResourceLocations) GetItemsOk() ([]ResourceLocationDetails, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// SetItems gets a reference to the given []ResourceLocationDetails and assigns it to the Items field.
func (o *CustomerResourceLocations) SetItems(v []ResourceLocationDetails) {
	o.Items = v
}

// GetStaleData returns the StaleData field value if set, zero value otherwise.
func (o *CustomerResourceLocations) GetStaleData() bool {
	if o == nil || IsNil(o.StaleData) {
		var ret bool
		return ret
	}
	return *o.StaleData
}

// GetStaleDataOk returns a tuple with the StaleData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerResourceLocations) GetStaleDataOk() (*bool, bool) {
	if o == nil || IsNil(o.StaleData) {
		return nil, false
	}
	return o.StaleData, true
}

// SetStaleData gets a reference to the given bool and assigns it to the StaleData field.
func (o *CustomerResourceLocations) SetStaleData(v bool) {
	o.StaleData = &v
}

func (o CustomerResourceLocations) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerResourceLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.StaleData) {
		toSerialize["staleData"] = o.StaleData
	}
	return toSerialize, nil
}

type NullableCustomerResourceLocations struct {
	value *CustomerResourceLocations
	isSet bool
}

func (v NullableCustomerResourceLocations) Get() *CustomerResourceLocations {
	return v.value
}

func (v *NullableCustomerResourceLocations) Set(val *CustomerResourceLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerResourceLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerResourceLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerResourceLocations(val *CustomerResourceLocations) *NullableCustomerResourceLocations {
	return &NullableCustomerResourceLocations{value: val, isSet: true}
}

func (v NullableCustomerResourceLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerResourceLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
