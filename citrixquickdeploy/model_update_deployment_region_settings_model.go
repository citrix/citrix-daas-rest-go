/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdateDeploymentRegionSettingsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDeploymentRegionSettingsModel{}

// UpdateDeploymentRegionSettingsModel struct for UpdateDeploymentRegionSettingsModel
type UpdateDeploymentRegionSettingsModel struct {
	// ID of the azure region to set as the default region
	DefaultRegion *string `json:"defaultRegion,omitempty"`
}

// NewUpdateDeploymentRegionSettingsModelWithDefaults instantiates a new UpdateDeploymentRegionSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeploymentRegionSettingsModelWithDefaults() *UpdateDeploymentRegionSettingsModel {
	this := UpdateDeploymentRegionSettingsModel{}
	return &this
}

// GetDefaultRegion returns the DefaultRegion field value if set, zero value otherwise.
func (o *UpdateDeploymentRegionSettingsModel) GetDefaultRegion() string {
	if o == nil || IsNil(o.DefaultRegion) {
		var ret string
		return ret
	}
	return *o.DefaultRegion
}

// GetDefaultRegionOk returns a tuple with the DefaultRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeploymentRegionSettingsModel) GetDefaultRegionOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRegion) {
		return nil, false
	}
	return o.DefaultRegion, true
}

// SetDefaultRegion gets a reference to the given string and assigns it to the DefaultRegion field.
func (o *UpdateDeploymentRegionSettingsModel) SetDefaultRegion(v string) {
	o.DefaultRegion = &v
}

func (o UpdateDeploymentRegionSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDeploymentRegionSettingsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultRegion) {
		toSerialize["defaultRegion"] = o.DefaultRegion
	}
	return toSerialize, nil
}

type NullableUpdateDeploymentRegionSettingsModel struct {
	value *UpdateDeploymentRegionSettingsModel
	isSet bool
}

func (v NullableUpdateDeploymentRegionSettingsModel) Get() *UpdateDeploymentRegionSettingsModel {
	return v.value
}

func (v *NullableUpdateDeploymentRegionSettingsModel) Set(val *UpdateDeploymentRegionSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeploymentRegionSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeploymentRegionSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeploymentRegionSettingsModel(val *UpdateDeploymentRegionSettingsModel) *NullableUpdateDeploymentRegionSettingsModel {
	return &NullableUpdateDeploymentRegionSettingsModel{value: val, isSet: true}
}

func (v NullableUpdateDeploymentRegionSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeploymentRegionSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
