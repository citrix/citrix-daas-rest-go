/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureToken{}

// AzureToken struct for AzureToken
type AzureToken struct {
	Resource    *string         `json:"resource,omitempty"`
	AccessToken *string         `json:"accessToken,omitempty"`
	Type        *AzureTokenType `json:"type,omitempty"`
}

// NewAzureTokenWithDefaults instantiates a new AzureToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureTokenWithDefaults() *AzureToken {
	this := AzureToken{}
	return &this
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AzureToken) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureToken) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *AzureToken) SetResource(v string) {
	o.Resource = &v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *AzureToken) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureToken) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *AzureToken) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AzureToken) GetType() AzureTokenType {
	if o == nil || IsNil(o.Type) {
		var ret AzureTokenType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureToken) GetTypeOk() (*AzureTokenType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given AzureTokenType and assigns it to the Type field.
func (o *AzureToken) SetType(v AzureTokenType) {
	o.Type = &v
}

func (o AzureToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAzureToken struct {
	value *AzureToken
	isSet bool
}

func (v NullableAzureToken) Get() *AzureToken {
	return v.value
}

func (v *NullableAzureToken) Set(val *AzureToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureToken(val *AzureToken) *NullableAzureToken {
	return &NullableAzureToken{value: val, isSet: true}
}

func (v NullableAzureToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
