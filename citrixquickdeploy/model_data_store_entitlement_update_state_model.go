/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the DataStoreEntitlementUpdateStateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataStoreEntitlementUpdateStateModel{}

// DataStoreEntitlementUpdateStateModel struct for DataStoreEntitlementUpdateStateModel
type DataStoreEntitlementUpdateStateModel struct {
	UpdateState *DataStoreEntitlementUpdateState `json:"updateState,omitempty"`
}

// NewDataStoreEntitlementUpdateStateModelWithDefaults instantiates a new DataStoreEntitlementUpdateStateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreEntitlementUpdateStateModelWithDefaults() *DataStoreEntitlementUpdateStateModel {
	this := DataStoreEntitlementUpdateStateModel{}
	return &this
}

// GetUpdateState returns the UpdateState field value if set, zero value otherwise.
func (o *DataStoreEntitlementUpdateStateModel) GetUpdateState() DataStoreEntitlementUpdateState {
	if o == nil || IsNil(o.UpdateState) {
		var ret DataStoreEntitlementUpdateState
		return ret
	}
	return *o.UpdateState
}

// GetUpdateStateOk returns a tuple with the UpdateState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreEntitlementUpdateStateModel) GetUpdateStateOk() (*DataStoreEntitlementUpdateState, bool) {
	if o == nil || IsNil(o.UpdateState) {
		return nil, false
	}
	return o.UpdateState, true
}

// SetUpdateState gets a reference to the given DataStoreEntitlementUpdateState and assigns it to the UpdateState field.
func (o *DataStoreEntitlementUpdateStateModel) SetUpdateState(v DataStoreEntitlementUpdateState) {
	o.UpdateState = &v
}

func (o DataStoreEntitlementUpdateStateModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataStoreEntitlementUpdateStateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpdateState) {
		toSerialize["updateState"] = o.UpdateState
	}
	return toSerialize, nil
}

type NullableDataStoreEntitlementUpdateStateModel struct {
	value *DataStoreEntitlementUpdateStateModel
	isSet bool
}

func (v NullableDataStoreEntitlementUpdateStateModel) Get() *DataStoreEntitlementUpdateStateModel {
	return v.value
}

func (v *NullableDataStoreEntitlementUpdateStateModel) Set(val *DataStoreEntitlementUpdateStateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreEntitlementUpdateStateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreEntitlementUpdateStateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreEntitlementUpdateStateModel(val *DataStoreEntitlementUpdateStateModel) *NullableDataStoreEntitlementUpdateStateModel {
	return &NullableDataStoreEntitlementUpdateStateModel{value: val, isSet: true}
}

func (v NullableDataStoreEntitlementUpdateStateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreEntitlementUpdateStateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
