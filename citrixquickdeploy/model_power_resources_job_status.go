/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// PowerResourcesJobStatus the model 'PowerResourcesJobStatus'
type PowerResourcesJobStatus string

// List of PowerResourcesJobStatus
const (
	POWERRESOURCESJOBSTATUS_NOT_STARTED PowerResourcesJobStatus = "NotStarted"
	POWERRESOURCESJOBSTATUS_IN_PROGRESS PowerResourcesJobStatus = "InProgress"
	POWERRESOURCESJOBSTATUS_COMPLETE    PowerResourcesJobStatus = "Complete"
	POWERRESOURCESJOBSTATUS_FAILED      PowerResourcesJobStatus = "Failed"
)

// All allowed values of PowerResourcesJobStatus enum
var AllowedPowerResourcesJobStatusEnumValues = []PowerResourcesJobStatus{
	"NotStarted",
	"InProgress",
	"Complete",
	"Failed",
}

func (v *PowerResourcesJobStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = PowerResourcesJobStatus(value)
	return nil
}

// NewPowerResourcesJobStatusFromValue returns a pointer to a valid PowerResourcesJobStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPowerResourcesJobStatusFromValue(v string) (*PowerResourcesJobStatus, error) {
	ev := PowerResourcesJobStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PowerResourcesJobStatus: valid values are %v", v, AllowedPowerResourcesJobStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PowerResourcesJobStatus) IsValid() bool {
	for _, existing := range AllowedPowerResourcesJobStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PowerResourcesJobStatus value
func (v PowerResourcesJobStatus) Ptr() *PowerResourcesJobStatus {
	return &v
}

type NullablePowerResourcesJobStatus struct {
	value *PowerResourcesJobStatus
	isSet bool
}

func (v NullablePowerResourcesJobStatus) Get() *PowerResourcesJobStatus {
	return v.value
}

func (v *NullablePowerResourcesJobStatus) Set(val *PowerResourcesJobStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerResourcesJobStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerResourcesJobStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerResourcesJobStatus(val *PowerResourcesJobStatus) *NullablePowerResourcesJobStatus {
	return &NullablePowerResourcesJobStatus{value: val, isSet: true}
}

func (v NullablePowerResourcesJobStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerResourcesJobStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
