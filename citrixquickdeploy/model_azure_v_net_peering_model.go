/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureVNetPeeringModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVNetPeeringModel{}

// AzureVNetPeeringModel struct for AzureVNetPeeringModel
type AzureVNetPeeringModel struct {
	// A unique name for this vnet peering
	PeeringName *string `json:"peeringName,omitempty"`
	// The first VNet, the one owned by Citrix
	CitrixVNet *AzureVNet `json:"citrixVNet,omitempty"`
	// The second VNet which the customers owns
	CustomerVNet *AzureVNet `json:"customerVNet,omitempty"`
	// Indicates if the vpn peering will use the customer's gateway
	UseCustomerGateway *bool `json:"useCustomerGateway,omitempty"`
	// Indicates if traffic forwarded from another peer should be allowed into the citrix created vnet  This does not apply to traffic from a gateway on a customer side  When using this feature, a route table entry will need to be added
	AllowForwardedTraffic *bool `json:"allowForwardedTraffic,omitempty"`
}

// NewAzureVNetPeeringModelWithDefaults instantiates a new AzureVNetPeeringModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVNetPeeringModelWithDefaults() *AzureVNetPeeringModel {
	this := AzureVNetPeeringModel{}
	return &this
}

// GetPeeringName returns the PeeringName field value if set, zero value otherwise.
func (o *AzureVNetPeeringModel) GetPeeringName() string {
	if o == nil || IsNil(o.PeeringName) {
		var ret string
		return ret
	}
	return *o.PeeringName
}

// GetPeeringNameOk returns a tuple with the PeeringName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNetPeeringModel) GetPeeringNameOk() (*string, bool) {
	if o == nil || IsNil(o.PeeringName) {
		return nil, false
	}
	return o.PeeringName, true
}

// SetPeeringName gets a reference to the given string and assigns it to the PeeringName field.
func (o *AzureVNetPeeringModel) SetPeeringName(v string) {
	o.PeeringName = &v
}

// GetCitrixVNet returns the CitrixVNet field value if set, zero value otherwise.
func (o *AzureVNetPeeringModel) GetCitrixVNet() AzureVNet {
	if o == nil || IsNil(o.CitrixVNet) {
		var ret AzureVNet
		return ret
	}
	return *o.CitrixVNet
}

// GetCitrixVNetOk returns a tuple with the CitrixVNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNetPeeringModel) GetCitrixVNetOk() (*AzureVNet, bool) {
	if o == nil || IsNil(o.CitrixVNet) {
		return nil, false
	}
	return o.CitrixVNet, true
}

// SetCitrixVNet gets a reference to the given AzureVNet and assigns it to the CitrixVNet field.
func (o *AzureVNetPeeringModel) SetCitrixVNet(v AzureVNet) {
	o.CitrixVNet = &v
}

// GetCustomerVNet returns the CustomerVNet field value if set, zero value otherwise.
func (o *AzureVNetPeeringModel) GetCustomerVNet() AzureVNet {
	if o == nil || IsNil(o.CustomerVNet) {
		var ret AzureVNet
		return ret
	}
	return *o.CustomerVNet
}

// GetCustomerVNetOk returns a tuple with the CustomerVNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNetPeeringModel) GetCustomerVNetOk() (*AzureVNet, bool) {
	if o == nil || IsNil(o.CustomerVNet) {
		return nil, false
	}
	return o.CustomerVNet, true
}

// SetCustomerVNet gets a reference to the given AzureVNet and assigns it to the CustomerVNet field.
func (o *AzureVNetPeeringModel) SetCustomerVNet(v AzureVNet) {
	o.CustomerVNet = &v
}

// GetUseCustomerGateway returns the UseCustomerGateway field value if set, zero value otherwise.
func (o *AzureVNetPeeringModel) GetUseCustomerGateway() bool {
	if o == nil || IsNil(o.UseCustomerGateway) {
		var ret bool
		return ret
	}
	return *o.UseCustomerGateway
}

// GetUseCustomerGatewayOk returns a tuple with the UseCustomerGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNetPeeringModel) GetUseCustomerGatewayOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCustomerGateway) {
		return nil, false
	}
	return o.UseCustomerGateway, true
}

// SetUseCustomerGateway gets a reference to the given bool and assigns it to the UseCustomerGateway field.
func (o *AzureVNetPeeringModel) SetUseCustomerGateway(v bool) {
	o.UseCustomerGateway = &v
}

// GetAllowForwardedTraffic returns the AllowForwardedTraffic field value if set, zero value otherwise.
func (o *AzureVNetPeeringModel) GetAllowForwardedTraffic() bool {
	if o == nil || IsNil(o.AllowForwardedTraffic) {
		var ret bool
		return ret
	}
	return *o.AllowForwardedTraffic
}

// GetAllowForwardedTrafficOk returns a tuple with the AllowForwardedTraffic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNetPeeringModel) GetAllowForwardedTrafficOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowForwardedTraffic) {
		return nil, false
	}
	return o.AllowForwardedTraffic, true
}

// SetAllowForwardedTraffic gets a reference to the given bool and assigns it to the AllowForwardedTraffic field.
func (o *AzureVNetPeeringModel) SetAllowForwardedTraffic(v bool) {
	o.AllowForwardedTraffic = &v
}

func (o AzureVNetPeeringModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVNetPeeringModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PeeringName) {
		toSerialize["peeringName"] = o.PeeringName
	}
	if !IsNil(o.CitrixVNet) {
		toSerialize["citrixVNet"] = o.CitrixVNet
	}
	if !IsNil(o.CustomerVNet) {
		toSerialize["customerVNet"] = o.CustomerVNet
	}
	if !IsNil(o.UseCustomerGateway) {
		toSerialize["useCustomerGateway"] = o.UseCustomerGateway
	}
	if !IsNil(o.AllowForwardedTraffic) {
		toSerialize["allowForwardedTraffic"] = o.AllowForwardedTraffic
	}
	return toSerialize, nil
}

type NullableAzureVNetPeeringModel struct {
	value *AzureVNetPeeringModel
	isSet bool
}

func (v NullableAzureVNetPeeringModel) Get() *AzureVNetPeeringModel {
	return v.value
}

func (v *NullableAzureVNetPeeringModel) Set(val *AzureVNetPeeringModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVNetPeeringModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVNetPeeringModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVNetPeeringModel(val *AzureVNetPeeringModel) *NullableAzureVNetPeeringModel {
	return &NullableAzureVNetPeeringModel{value: val, isSet: true}
}

func (v NullableAzureVNetPeeringModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVNetPeeringModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
