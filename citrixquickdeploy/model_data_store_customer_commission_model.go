/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the DataStoreCustomerCommissionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataStoreCustomerCommissionModel{}

// DataStoreCustomerCommissionModel struct for DataStoreCustomerCommissionModel
type DataStoreCustomerCommissionModel struct {
	CommissionState                    *CommissionState `json:"commissionState,omitempty"`
	Error                              *string          `json:"error,omitempty"`
	TransactionId                      *string          `json:"transactionId,omitempty"`
	CommissionStateTransitionTimeStamp *time.Time       `json:"commissionStateTransitionTimeStamp,omitempty"`
}

// NewDataStoreCustomerCommissionModelWithDefaults instantiates a new DataStoreCustomerCommissionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreCustomerCommissionModelWithDefaults() *DataStoreCustomerCommissionModel {
	this := DataStoreCustomerCommissionModel{}
	return &this
}

// GetCommissionState returns the CommissionState field value if set, zero value otherwise.
func (o *DataStoreCustomerCommissionModel) GetCommissionState() CommissionState {
	if o == nil || IsNil(o.CommissionState) {
		var ret CommissionState
		return ret
	}
	return *o.CommissionState
}

// GetCommissionStateOk returns a tuple with the CommissionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerCommissionModel) GetCommissionStateOk() (*CommissionState, bool) {
	if o == nil || IsNil(o.CommissionState) {
		return nil, false
	}
	return o.CommissionState, true
}

// SetCommissionState gets a reference to the given CommissionState and assigns it to the CommissionState field.
func (o *DataStoreCustomerCommissionModel) SetCommissionState(v CommissionState) {
	o.CommissionState = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DataStoreCustomerCommissionModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerCommissionModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *DataStoreCustomerCommissionModel) SetError(v string) {
	o.Error = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *DataStoreCustomerCommissionModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerCommissionModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *DataStoreCustomerCommissionModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetCommissionStateTransitionTimeStamp returns the CommissionStateTransitionTimeStamp field value if set, zero value otherwise.
func (o *DataStoreCustomerCommissionModel) GetCommissionStateTransitionTimeStamp() time.Time {
	if o == nil || IsNil(o.CommissionStateTransitionTimeStamp) {
		var ret time.Time
		return ret
	}
	return *o.CommissionStateTransitionTimeStamp
}

// GetCommissionStateTransitionTimeStampOk returns a tuple with the CommissionStateTransitionTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerCommissionModel) GetCommissionStateTransitionTimeStampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CommissionStateTransitionTimeStamp) {
		return nil, false
	}
	return o.CommissionStateTransitionTimeStamp, true
}

// SetCommissionStateTransitionTimeStamp gets a reference to the given time.Time and assigns it to the CommissionStateTransitionTimeStamp field.
func (o *DataStoreCustomerCommissionModel) SetCommissionStateTransitionTimeStamp(v time.Time) {
	o.CommissionStateTransitionTimeStamp = &v
}

func (o DataStoreCustomerCommissionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataStoreCustomerCommissionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommissionState) {
		toSerialize["commissionState"] = o.CommissionState
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.CommissionStateTransitionTimeStamp) {
		toSerialize["commissionStateTransitionTimeStamp"] = o.CommissionStateTransitionTimeStamp
	}
	return toSerialize, nil
}

type NullableDataStoreCustomerCommissionModel struct {
	value *DataStoreCustomerCommissionModel
	isSet bool
}

func (v NullableDataStoreCustomerCommissionModel) Get() *DataStoreCustomerCommissionModel {
	return v.value
}

func (v *NullableDataStoreCustomerCommissionModel) Set(val *DataStoreCustomerCommissionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreCustomerCommissionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreCustomerCommissionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreCustomerCommissionModel(val *DataStoreCustomerCommissionModel) *NullableDataStoreCustomerCommissionModel {
	return &NullableDataStoreCustomerCommissionModel{value: val, isSet: true}
}

func (v NullableDataStoreCustomerCommissionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreCustomerCommissionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
