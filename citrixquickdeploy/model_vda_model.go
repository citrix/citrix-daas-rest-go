/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the VdaModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VdaModel{}

// VdaModel struct for VdaModel
type VdaModel struct {
	DnsName                  *string                `json:"dnsName,omitempty"`
	Name                     *string                `json:"name,omitempty"`
	MachineUid               *int32                 `json:"machineUid,omitempty"`
	Sid                      *string                `json:"sid,omitempty"`
	CatalogUid               *int32                 `json:"catalogUid,omitempty"`
	RegistrationState        *string                `json:"registrationState,omitempty"`
	SummaryState             *string                `json:"summaryState,omitempty"`
	Powerstate               *string                `json:"powerstate,omitempty"`
	SessionCount             *int32                 `json:"sessionCount,omitempty"`
	InMaintenanceMode        *bool                  `json:"inMaintenanceMode,omitempty"`
	LastDeregistrationTime   *time.Time             `json:"lastDeregistrationTime,omitempty"`
	LastDeregistrationReason *string                `json:"lastDeregistrationReason,omitempty"`
	VdaResourceGroup         *string                `json:"vdaResourceGroup,omitempty"`
	AllocationType           *CatalogAllocationType `json:"allocationType,omitempty"`
	AssociatedUsers          []string               `json:"associatedUsers,omitempty"`
	RestoreStatus            *RestoreStatusModel    `json:"restoreStatus,omitempty"`
	IpAddress                *string                `json:"ipAddress,omitempty"`
	ImageOutOfDate           *bool                  `json:"imageOutOfDate,omitempty"`
}

// NewVdaModelWithDefaults instantiates a new VdaModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdaModelWithDefaults() *VdaModel {
	this := VdaModel{}
	return &this
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *VdaModel) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *VdaModel) SetDnsName(v string) {
	o.DnsName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdaModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdaModel) SetName(v string) {
	o.Name = &v
}

// GetMachineUid returns the MachineUid field value if set, zero value otherwise.
func (o *VdaModel) GetMachineUid() int32 {
	if o == nil || IsNil(o.MachineUid) {
		var ret int32
		return ret
	}
	return *o.MachineUid
}

// GetMachineUidOk returns a tuple with the MachineUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetMachineUidOk() (*int32, bool) {
	if o == nil || IsNil(o.MachineUid) {
		return nil, false
	}
	return o.MachineUid, true
}

// SetMachineUid gets a reference to the given int32 and assigns it to the MachineUid field.
func (o *VdaModel) SetMachineUid(v int32) {
	o.MachineUid = &v
}

// GetSid returns the Sid field value if set, zero value otherwise.
func (o *VdaModel) GetSid() string {
	if o == nil || IsNil(o.Sid) {
		var ret string
		return ret
	}
	return *o.Sid
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetSidOk() (*string, bool) {
	if o == nil || IsNil(o.Sid) {
		return nil, false
	}
	return o.Sid, true
}

// SetSid gets a reference to the given string and assigns it to the Sid field.
func (o *VdaModel) SetSid(v string) {
	o.Sid = &v
}

// GetCatalogUid returns the CatalogUid field value if set, zero value otherwise.
func (o *VdaModel) GetCatalogUid() int32 {
	if o == nil || IsNil(o.CatalogUid) {
		var ret int32
		return ret
	}
	return *o.CatalogUid
}

// GetCatalogUidOk returns a tuple with the CatalogUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetCatalogUidOk() (*int32, bool) {
	if o == nil || IsNil(o.CatalogUid) {
		return nil, false
	}
	return o.CatalogUid, true
}

// SetCatalogUid gets a reference to the given int32 and assigns it to the CatalogUid field.
func (o *VdaModel) SetCatalogUid(v int32) {
	o.CatalogUid = &v
}

// GetRegistrationState returns the RegistrationState field value if set, zero value otherwise.
func (o *VdaModel) GetRegistrationState() string {
	if o == nil || IsNil(o.RegistrationState) {
		var ret string
		return ret
	}
	return *o.RegistrationState
}

// GetRegistrationStateOk returns a tuple with the RegistrationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetRegistrationStateOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationState) {
		return nil, false
	}
	return o.RegistrationState, true
}

// SetRegistrationState gets a reference to the given string and assigns it to the RegistrationState field.
func (o *VdaModel) SetRegistrationState(v string) {
	o.RegistrationState = &v
}

// GetSummaryState returns the SummaryState field value if set, zero value otherwise.
func (o *VdaModel) GetSummaryState() string {
	if o == nil || IsNil(o.SummaryState) {
		var ret string
		return ret
	}
	return *o.SummaryState
}

// GetSummaryStateOk returns a tuple with the SummaryState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetSummaryStateOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryState) {
		return nil, false
	}
	return o.SummaryState, true
}

// SetSummaryState gets a reference to the given string and assigns it to the SummaryState field.
func (o *VdaModel) SetSummaryState(v string) {
	o.SummaryState = &v
}

// GetPowerstate returns the Powerstate field value if set, zero value otherwise.
func (o *VdaModel) GetPowerstate() string {
	if o == nil || IsNil(o.Powerstate) {
		var ret string
		return ret
	}
	return *o.Powerstate
}

// GetPowerstateOk returns a tuple with the Powerstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetPowerstateOk() (*string, bool) {
	if o == nil || IsNil(o.Powerstate) {
		return nil, false
	}
	return o.Powerstate, true
}

// SetPowerstate gets a reference to the given string and assigns it to the Powerstate field.
func (o *VdaModel) SetPowerstate(v string) {
	o.Powerstate = &v
}

// GetSessionCount returns the SessionCount field value if set, zero value otherwise.
func (o *VdaModel) GetSessionCount() int32 {
	if o == nil || IsNil(o.SessionCount) {
		var ret int32
		return ret
	}
	return *o.SessionCount
}

// GetSessionCountOk returns a tuple with the SessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionCount) {
		return nil, false
	}
	return o.SessionCount, true
}

// SetSessionCount gets a reference to the given int32 and assigns it to the SessionCount field.
func (o *VdaModel) SetSessionCount(v int32) {
	o.SessionCount = &v
}

// GetInMaintenanceMode returns the InMaintenanceMode field value if set, zero value otherwise.
func (o *VdaModel) GetInMaintenanceMode() bool {
	if o == nil || IsNil(o.InMaintenanceMode) {
		var ret bool
		return ret
	}
	return *o.InMaintenanceMode
}

// GetInMaintenanceModeOk returns a tuple with the InMaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetInMaintenanceModeOk() (*bool, bool) {
	if o == nil || IsNil(o.InMaintenanceMode) {
		return nil, false
	}
	return o.InMaintenanceMode, true
}

// SetInMaintenanceMode gets a reference to the given bool and assigns it to the InMaintenanceMode field.
func (o *VdaModel) SetInMaintenanceMode(v bool) {
	o.InMaintenanceMode = &v
}

// GetLastDeregistrationTime returns the LastDeregistrationTime field value if set, zero value otherwise.
func (o *VdaModel) GetLastDeregistrationTime() time.Time {
	if o == nil || IsNil(o.LastDeregistrationTime) {
		var ret time.Time
		return ret
	}
	return *o.LastDeregistrationTime
}

// GetLastDeregistrationTimeOk returns a tuple with the LastDeregistrationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetLastDeregistrationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastDeregistrationTime) {
		return nil, false
	}
	return o.LastDeregistrationTime, true
}

// SetLastDeregistrationTime gets a reference to the given time.Time and assigns it to the LastDeregistrationTime field.
func (o *VdaModel) SetLastDeregistrationTime(v time.Time) {
	o.LastDeregistrationTime = &v
}

// GetLastDeregistrationReason returns the LastDeregistrationReason field value if set, zero value otherwise.
func (o *VdaModel) GetLastDeregistrationReason() string {
	if o == nil || IsNil(o.LastDeregistrationReason) {
		var ret string
		return ret
	}
	return *o.LastDeregistrationReason
}

// GetLastDeregistrationReasonOk returns a tuple with the LastDeregistrationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetLastDeregistrationReasonOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeregistrationReason) {
		return nil, false
	}
	return o.LastDeregistrationReason, true
}

// SetLastDeregistrationReason gets a reference to the given string and assigns it to the LastDeregistrationReason field.
func (o *VdaModel) SetLastDeregistrationReason(v string) {
	o.LastDeregistrationReason = &v
}

// GetVdaResourceGroup returns the VdaResourceGroup field value if set, zero value otherwise.
func (o *VdaModel) GetVdaResourceGroup() string {
	if o == nil || IsNil(o.VdaResourceGroup) {
		var ret string
		return ret
	}
	return *o.VdaResourceGroup
}

// GetVdaResourceGroupOk returns a tuple with the VdaResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetVdaResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.VdaResourceGroup) {
		return nil, false
	}
	return o.VdaResourceGroup, true
}

// SetVdaResourceGroup gets a reference to the given string and assigns it to the VdaResourceGroup field.
func (o *VdaModel) SetVdaResourceGroup(v string) {
	o.VdaResourceGroup = &v
}

// GetAllocationType returns the AllocationType field value if set, zero value otherwise.
func (o *VdaModel) GetAllocationType() CatalogAllocationType {
	if o == nil || IsNil(o.AllocationType) {
		var ret CatalogAllocationType
		return ret
	}
	return *o.AllocationType
}

// GetAllocationTypeOk returns a tuple with the AllocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetAllocationTypeOk() (*CatalogAllocationType, bool) {
	if o == nil || IsNil(o.AllocationType) {
		return nil, false
	}
	return o.AllocationType, true
}

// SetAllocationType gets a reference to the given CatalogAllocationType and assigns it to the AllocationType field.
func (o *VdaModel) SetAllocationType(v CatalogAllocationType) {
	o.AllocationType = &v
}

// GetAssociatedUsers returns the AssociatedUsers field value if set, zero value otherwise.
func (o *VdaModel) GetAssociatedUsers() []string {
	if o == nil || IsNil(o.AssociatedUsers) {
		var ret []string
		return ret
	}
	return o.AssociatedUsers
}

// GetAssociatedUsersOk returns a tuple with the AssociatedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetAssociatedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.AssociatedUsers) {
		return nil, false
	}
	return o.AssociatedUsers, true
}

// SetAssociatedUsers gets a reference to the given []string and assigns it to the AssociatedUsers field.
func (o *VdaModel) SetAssociatedUsers(v []string) {
	o.AssociatedUsers = v
}

// GetRestoreStatus returns the RestoreStatus field value if set, zero value otherwise.
func (o *VdaModel) GetRestoreStatus() RestoreStatusModel {
	if o == nil || IsNil(o.RestoreStatus) {
		var ret RestoreStatusModel
		return ret
	}
	return *o.RestoreStatus
}

// GetRestoreStatusOk returns a tuple with the RestoreStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetRestoreStatusOk() (*RestoreStatusModel, bool) {
	if o == nil || IsNil(o.RestoreStatus) {
		return nil, false
	}
	return o.RestoreStatus, true
}

// SetRestoreStatus gets a reference to the given RestoreStatusModel and assigns it to the RestoreStatus field.
func (o *VdaModel) SetRestoreStatus(v RestoreStatusModel) {
	o.RestoreStatus = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *VdaModel) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *VdaModel) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetImageOutOfDate returns the ImageOutOfDate field value if set, zero value otherwise.
func (o *VdaModel) GetImageOutOfDate() bool {
	if o == nil || IsNil(o.ImageOutOfDate) {
		var ret bool
		return ret
	}
	return *o.ImageOutOfDate
}

// GetImageOutOfDateOk returns a tuple with the ImageOutOfDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdaModel) GetImageOutOfDateOk() (*bool, bool) {
	if o == nil || IsNil(o.ImageOutOfDate) {
		return nil, false
	}
	return o.ImageOutOfDate, true
}

// SetImageOutOfDate gets a reference to the given bool and assigns it to the ImageOutOfDate field.
func (o *VdaModel) SetImageOutOfDate(v bool) {
	o.ImageOutOfDate = &v
}

func (o VdaModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VdaModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsName) {
		toSerialize["dnsName"] = o.DnsName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MachineUid) {
		toSerialize["machineUid"] = o.MachineUid
	}
	if !IsNil(o.Sid) {
		toSerialize["sid"] = o.Sid
	}
	if !IsNil(o.CatalogUid) {
		toSerialize["catalogUid"] = o.CatalogUid
	}
	if !IsNil(o.RegistrationState) {
		toSerialize["registrationState"] = o.RegistrationState
	}
	if !IsNil(o.SummaryState) {
		toSerialize["summaryState"] = o.SummaryState
	}
	if !IsNil(o.Powerstate) {
		toSerialize["powerstate"] = o.Powerstate
	}
	if !IsNil(o.SessionCount) {
		toSerialize["sessionCount"] = o.SessionCount
	}
	if !IsNil(o.InMaintenanceMode) {
		toSerialize["inMaintenanceMode"] = o.InMaintenanceMode
	}
	if !IsNil(o.LastDeregistrationTime) {
		toSerialize["lastDeregistrationTime"] = o.LastDeregistrationTime
	}
	if !IsNil(o.LastDeregistrationReason) {
		toSerialize["lastDeregistrationReason"] = o.LastDeregistrationReason
	}
	if !IsNil(o.VdaResourceGroup) {
		toSerialize["vdaResourceGroup"] = o.VdaResourceGroup
	}
	if !IsNil(o.AllocationType) {
		toSerialize["allocationType"] = o.AllocationType
	}
	if !IsNil(o.AssociatedUsers) {
		toSerialize["associatedUsers"] = o.AssociatedUsers
	}
	if !IsNil(o.RestoreStatus) {
		toSerialize["restoreStatus"] = o.RestoreStatus
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.ImageOutOfDate) {
		toSerialize["imageOutOfDate"] = o.ImageOutOfDate
	}
	return toSerialize, nil
}

type NullableVdaModel struct {
	value *VdaModel
	isSet bool
}

func (v NullableVdaModel) Get() *VdaModel {
	return v.value
}

func (v *NullableVdaModel) Set(val *VdaModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVdaModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVdaModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdaModel(val *VdaModel) *NullableVdaModel {
	return &NullableVdaModel{value: val, isSet: true}
}

func (v NullableVdaModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdaModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
