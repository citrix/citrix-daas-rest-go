/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureAssignment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureAssignment{}

// AzureAssignment struct for AzureAssignment
type AzureAssignment struct {
	// ID of the assignment
	ObjectId *string `json:"objectId,omitempty"`
	// ID of the Role that has been assigned
	RoleId *string `json:"roleId,omitempty"`
	// Name of the assigned Role
	RoleName *string `json:"roleName,omitempty"`
	// Type of object that has been assigned the role
	ObjectType *string `json:"objectType,omitempty"`
	// Display name of the app / user assigned the role
	DisplayName *string `json:"displayName,omitempty"`
	// ID of the app that is associated with the Service Principal that hasd the assignment
	AppId *string `json:"appId,omitempty"`
	// UPN of the user assigned the role
	Upn *string `json:"upn,omitempty"`
}

// NewAzureAssignmentWithDefaults instantiates a new AzureAssignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureAssignmentWithDefaults() *AzureAssignment {
	this := AzureAssignment{}
	return &this
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *AzureAssignment) GetObjectId() string {
	if o == nil || IsNil(o.ObjectId) {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *AzureAssignment) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *AzureAssignment) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *AzureAssignment) SetRoleId(v string) {
	o.RoleId = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *AzureAssignment) GetRoleName() string {
	if o == nil || IsNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetRoleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *AzureAssignment) SetRoleName(v string) {
	o.RoleName = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *AzureAssignment) GetObjectType() string {
	if o == nil || IsNil(o.ObjectType) {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetObjectTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *AzureAssignment) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AzureAssignment) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AzureAssignment) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AzureAssignment) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *AzureAssignment) SetAppId(v string) {
	o.AppId = &v
}

// GetUpn returns the Upn field value if set, zero value otherwise.
func (o *AzureAssignment) GetUpn() string {
	if o == nil || IsNil(o.Upn) {
		var ret string
		return ret
	}
	return *o.Upn
}

// GetUpnOk returns a tuple with the Upn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAssignment) GetUpnOk() (*string, bool) {
	if o == nil || IsNil(o.Upn) {
		return nil, false
	}
	return o.Upn, true
}

// SetUpn gets a reference to the given string and assigns it to the Upn field.
func (o *AzureAssignment) SetUpn(v string) {
	o.Upn = &v
}

func (o AzureAssignment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureAssignment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectId) {
		toSerialize["objectId"] = o.ObjectId
	}
	if !IsNil(o.RoleId) {
		toSerialize["roleId"] = o.RoleId
	}
	if !IsNil(o.RoleName) {
		toSerialize["roleName"] = o.RoleName
	}
	if !IsNil(o.ObjectType) {
		toSerialize["objectType"] = o.ObjectType
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.Upn) {
		toSerialize["upn"] = o.Upn
	}
	return toSerialize, nil
}

type NullableAzureAssignment struct {
	value *AzureAssignment
	isSet bool
}

func (v NullableAzureAssignment) Get() *AzureAssignment {
	return v.value
}

func (v *NullableAzureAssignment) Set(val *AzureAssignment) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureAssignment(val *AzureAssignment) *NullableAzureAssignment {
	return &NullableAzureAssignment{value: val, isSet: true}
}

func (v NullableAzureAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
