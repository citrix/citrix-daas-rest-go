/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the AlertContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertContext{}

// AlertContext struct for AlertContext
type AlertContext struct {
	Authorization       *Authorization `json:"authorization,omitempty"`
	Channels            *string        `json:"channels,omitempty"`
	Claims              *string        `json:"claims,omitempty"`
	Caller              *string        `json:"caller,omitempty"`
	CorrelationId       *string        `json:"correlationId,omitempty"`
	EventSource         *string        `json:"eventSource,omitempty"`
	EventTimestamp      *time.Time     `json:"eventTimestamp,omitempty"`
	HttpRequest         *string        `json:"httpRequest,omitempty"`
	EventDataId         *string        `json:"eventDataId,omitempty"`
	Level               *string        `json:"level,omitempty"`
	OperationName       *string        `json:"operationName,omitempty"`
	OperationId         *string        `json:"operationId,omitempty"`
	Properties          *Properties    `json:"properties,omitempty"`
	Status              *string        `json:"status,omitempty"`
	SubStatus           *string        `json:"subStatus,omitempty"`
	SubmissionTimestamp *time.Time     `json:"submissionTimestamp,omitempty"`
}

// NewAlertContextWithDefaults instantiates a new AlertContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertContextWithDefaults() *AlertContext {
	this := AlertContext{}
	return &this
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *AlertContext) GetAuthorization() Authorization {
	if o == nil || IsNil(o.Authorization) {
		var ret Authorization
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetAuthorizationOk() (*Authorization, bool) {
	if o == nil || IsNil(o.Authorization) {
		return nil, false
	}
	return o.Authorization, true
}

// SetAuthorization gets a reference to the given Authorization and assigns it to the Authorization field.
func (o *AlertContext) SetAuthorization(v Authorization) {
	o.Authorization = &v
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *AlertContext) GetChannels() string {
	if o == nil || IsNil(o.Channels) {
		var ret string
		return ret
	}
	return *o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetChannelsOk() (*string, bool) {
	if o == nil || IsNil(o.Channels) {
		return nil, false
	}
	return o.Channels, true
}

// SetChannels gets a reference to the given string and assigns it to the Channels field.
func (o *AlertContext) SetChannels(v string) {
	o.Channels = &v
}

// GetClaims returns the Claims field value if set, zero value otherwise.
func (o *AlertContext) GetClaims() string {
	if o == nil || IsNil(o.Claims) {
		var ret string
		return ret
	}
	return *o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetClaimsOk() (*string, bool) {
	if o == nil || IsNil(o.Claims) {
		return nil, false
	}
	return o.Claims, true
}

// SetClaims gets a reference to the given string and assigns it to the Claims field.
func (o *AlertContext) SetClaims(v string) {
	o.Claims = &v
}

// GetCaller returns the Caller field value if set, zero value otherwise.
func (o *AlertContext) GetCaller() string {
	if o == nil || IsNil(o.Caller) {
		var ret string
		return ret
	}
	return *o.Caller
}

// GetCallerOk returns a tuple with the Caller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetCallerOk() (*string, bool) {
	if o == nil || IsNil(o.Caller) {
		return nil, false
	}
	return o.Caller, true
}

// SetCaller gets a reference to the given string and assigns it to the Caller field.
func (o *AlertContext) SetCaller(v string) {
	o.Caller = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *AlertContext) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *AlertContext) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetEventSource returns the EventSource field value if set, zero value otherwise.
func (o *AlertContext) GetEventSource() string {
	if o == nil || IsNil(o.EventSource) {
		var ret string
		return ret
	}
	return *o.EventSource
}

// GetEventSourceOk returns a tuple with the EventSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetEventSourceOk() (*string, bool) {
	if o == nil || IsNil(o.EventSource) {
		return nil, false
	}
	return o.EventSource, true
}

// SetEventSource gets a reference to the given string and assigns it to the EventSource field.
func (o *AlertContext) SetEventSource(v string) {
	o.EventSource = &v
}

// GetEventTimestamp returns the EventTimestamp field value if set, zero value otherwise.
func (o *AlertContext) GetEventTimestamp() time.Time {
	if o == nil || IsNil(o.EventTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.EventTimestamp
}

// GetEventTimestampOk returns a tuple with the EventTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetEventTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EventTimestamp) {
		return nil, false
	}
	return o.EventTimestamp, true
}

// SetEventTimestamp gets a reference to the given time.Time and assigns it to the EventTimestamp field.
func (o *AlertContext) SetEventTimestamp(v time.Time) {
	o.EventTimestamp = &v
}

// GetHttpRequest returns the HttpRequest field value if set, zero value otherwise.
func (o *AlertContext) GetHttpRequest() string {
	if o == nil || IsNil(o.HttpRequest) {
		var ret string
		return ret
	}
	return *o.HttpRequest
}

// GetHttpRequestOk returns a tuple with the HttpRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetHttpRequestOk() (*string, bool) {
	if o == nil || IsNil(o.HttpRequest) {
		return nil, false
	}
	return o.HttpRequest, true
}

// SetHttpRequest gets a reference to the given string and assigns it to the HttpRequest field.
func (o *AlertContext) SetHttpRequest(v string) {
	o.HttpRequest = &v
}

// GetEventDataId returns the EventDataId field value if set, zero value otherwise.
func (o *AlertContext) GetEventDataId() string {
	if o == nil || IsNil(o.EventDataId) {
		var ret string
		return ret
	}
	return *o.EventDataId
}

// GetEventDataIdOk returns a tuple with the EventDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetEventDataIdOk() (*string, bool) {
	if o == nil || IsNil(o.EventDataId) {
		return nil, false
	}
	return o.EventDataId, true
}

// SetEventDataId gets a reference to the given string and assigns it to the EventDataId field.
func (o *AlertContext) SetEventDataId(v string) {
	o.EventDataId = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AlertContext) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *AlertContext) SetLevel(v string) {
	o.Level = &v
}

// GetOperationName returns the OperationName field value if set, zero value otherwise.
func (o *AlertContext) GetOperationName() string {
	if o == nil || IsNil(o.OperationName) {
		var ret string
		return ret
	}
	return *o.OperationName
}

// GetOperationNameOk returns a tuple with the OperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetOperationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OperationName) {
		return nil, false
	}
	return o.OperationName, true
}

// SetOperationName gets a reference to the given string and assigns it to the OperationName field.
func (o *AlertContext) SetOperationName(v string) {
	o.OperationName = &v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *AlertContext) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *AlertContext) SetOperationId(v string) {
	o.OperationId = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AlertContext) GetProperties() Properties {
	if o == nil || IsNil(o.Properties) {
		var ret Properties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetPropertiesOk() (*Properties, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// SetProperties gets a reference to the given Properties and assigns it to the Properties field.
func (o *AlertContext) SetProperties(v Properties) {
	o.Properties = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AlertContext) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AlertContext) SetStatus(v string) {
	o.Status = &v
}

// GetSubStatus returns the SubStatus field value if set, zero value otherwise.
func (o *AlertContext) GetSubStatus() string {
	if o == nil || IsNil(o.SubStatus) {
		var ret string
		return ret
	}
	return *o.SubStatus
}

// GetSubStatusOk returns a tuple with the SubStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetSubStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SubStatus) {
		return nil, false
	}
	return o.SubStatus, true
}

// SetSubStatus gets a reference to the given string and assigns it to the SubStatus field.
func (o *AlertContext) SetSubStatus(v string) {
	o.SubStatus = &v
}

// GetSubmissionTimestamp returns the SubmissionTimestamp field value if set, zero value otherwise.
func (o *AlertContext) GetSubmissionTimestamp() time.Time {
	if o == nil || IsNil(o.SubmissionTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.SubmissionTimestamp
}

// GetSubmissionTimestampOk returns a tuple with the SubmissionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContext) GetSubmissionTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SubmissionTimestamp) {
		return nil, false
	}
	return o.SubmissionTimestamp, true
}

// SetSubmissionTimestamp gets a reference to the given time.Time and assigns it to the SubmissionTimestamp field.
func (o *AlertContext) SetSubmissionTimestamp(v time.Time) {
	o.SubmissionTimestamp = &v
}

func (o AlertContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Authorization) {
		toSerialize["authorization"] = o.Authorization
	}
	if !IsNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	if !IsNil(o.Claims) {
		toSerialize["claims"] = o.Claims
	}
	if !IsNil(o.Caller) {
		toSerialize["caller"] = o.Caller
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.EventSource) {
		toSerialize["eventSource"] = o.EventSource
	}
	if !IsNil(o.EventTimestamp) {
		toSerialize["eventTimestamp"] = o.EventTimestamp
	}
	if !IsNil(o.HttpRequest) {
		toSerialize["httpRequest"] = o.HttpRequest
	}
	if !IsNil(o.EventDataId) {
		toSerialize["eventDataId"] = o.EventDataId
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.OperationName) {
		toSerialize["operationName"] = o.OperationName
	}
	if !IsNil(o.OperationId) {
		toSerialize["operationId"] = o.OperationId
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubStatus) {
		toSerialize["subStatus"] = o.SubStatus
	}
	if !IsNil(o.SubmissionTimestamp) {
		toSerialize["submissionTimestamp"] = o.SubmissionTimestamp
	}
	return toSerialize, nil
}

type NullableAlertContext struct {
	value *AlertContext
	isSet bool
}

func (v NullableAlertContext) Get() *AlertContext {
	return v.value
}

func (v *NullableAlertContext) Set(val *AlertContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertContext(val *AlertContext) *NullableAlertContext {
	return &NullableAlertContext{value: val, isSet: true}
}

func (v NullableAlertContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
