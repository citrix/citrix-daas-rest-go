/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ImportTemplateImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportTemplateImageModel{}

// ImportTemplateImageModel Import a Image template from a vhd url
type ImportTemplateImageModel struct {
	// Name of the image
	Name string `json:"name"`
	// URI of the VHD file that will be imported
	VhdUri string `json:"vhdUri"`
	// URI of the VHD guest disk file that will be imported
	VhdEncryptionUri *string `json:"vhdEncryptionUri,omitempty"`
	// Customer notes about template image
	Notes *string `json:"notes,omitempty"`
	// Type of operating system that will be imported
	OsPlatform *SupportedOperatingSystemType `json:"osPlatform,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspCustomerId *string `json:"cspCustomerId,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspSiteId *string `json:"cspSiteId,omitempty"`
	// The Id of the azure subscription where the image will be stored
	AzureSubscriptionId *string `json:"azureSubscriptionId,omitempty"`
	// The region where the storage account will be created for the image to be imported.
	Region *string `json:"region,omitempty"`
	// The HyperVGeneration that should be set to either V1 or V2
	HyperVGen *string `json:"hyperVGen,omitempty"`
	// The HyperVGeneration V2 supports vTPM TrustedLaunch
	VtpmEnabled *bool `json:"vtpmEnabled,omitempty"`
	// The Secure boot support enabled
	SecureBootEnabled *bool `json:"secureBootEnabled,omitempty"`
	// The customer managed encryption key enabled
	CmekEnabled *bool `json:"cmekEnabled,omitempty"`
	// The customer managed encryption ID
	CmekID *string `json:"cmekID,omitempty"`
}

// NewImportTemplateImageModelWithDefaults instantiates a new ImportTemplateImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportTemplateImageModelWithDefaults() *ImportTemplateImageModel {
	this := ImportTemplateImageModel{}
	return &this
}

// GetName returns the Name field value
func (o *ImportTemplateImageModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ImportTemplateImageModel) SetName(v string) {
	o.Name = v
}

// GetVhdUri returns the VhdUri field value
func (o *ImportTemplateImageModel) GetVhdUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VhdUri
}

// GetVhdUriOk returns a tuple with the VhdUri field value
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetVhdUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VhdUri, true
}

// SetVhdUri sets field value
func (o *ImportTemplateImageModel) SetVhdUri(v string) {
	o.VhdUri = v
}

// GetVhdEncryptionUri returns the VhdEncryptionUri field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetVhdEncryptionUri() string {
	if o == nil || IsNil(o.VhdEncryptionUri) {
		var ret string
		return ret
	}
	return *o.VhdEncryptionUri
}

// GetVhdEncryptionUriOk returns a tuple with the VhdEncryptionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetVhdEncryptionUriOk() (*string, bool) {
	if o == nil || IsNil(o.VhdEncryptionUri) {
		return nil, false
	}
	return o.VhdEncryptionUri, true
}

// SetVhdEncryptionUri gets a reference to the given string and assigns it to the VhdEncryptionUri field.
func (o *ImportTemplateImageModel) SetVhdEncryptionUri(v string) {
	o.VhdEncryptionUri = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ImportTemplateImageModel) SetNotes(v string) {
	o.Notes = &v
}

// GetOsPlatform returns the OsPlatform field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetOsPlatform() SupportedOperatingSystemType {
	if o == nil || IsNil(o.OsPlatform) {
		var ret SupportedOperatingSystemType
		return ret
	}
	return *o.OsPlatform
}

// GetOsPlatformOk returns a tuple with the OsPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetOsPlatformOk() (*SupportedOperatingSystemType, bool) {
	if o == nil || IsNil(o.OsPlatform) {
		return nil, false
	}
	return o.OsPlatform, true
}

// SetOsPlatform gets a reference to the given SupportedOperatingSystemType and assigns it to the OsPlatform field.
func (o *ImportTemplateImageModel) SetOsPlatform(v SupportedOperatingSystemType) {
	o.OsPlatform = &v
}

// GetCspCustomerId returns the CspCustomerId field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetCspCustomerId() string {
	if o == nil || IsNil(o.CspCustomerId) {
		var ret string
		return ret
	}
	return *o.CspCustomerId
}

// GetCspCustomerIdOk returns a tuple with the CspCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetCspCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomerId) {
		return nil, false
	}
	return o.CspCustomerId, true
}

// SetCspCustomerId gets a reference to the given string and assigns it to the CspCustomerId field.
func (o *ImportTemplateImageModel) SetCspCustomerId(v string) {
	o.CspCustomerId = &v
}

// GetCspSiteId returns the CspSiteId field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetCspSiteId() string {
	if o == nil || IsNil(o.CspSiteId) {
		var ret string
		return ret
	}
	return *o.CspSiteId
}

// GetCspSiteIdOk returns a tuple with the CspSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetCspSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspSiteId) {
		return nil, false
	}
	return o.CspSiteId, true
}

// SetCspSiteId gets a reference to the given string and assigns it to the CspSiteId field.
func (o *ImportTemplateImageModel) SetCspSiteId(v string) {
	o.CspSiteId = &v
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetAzureSubscriptionId() string {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		return nil, false
	}
	return o.AzureSubscriptionId, true
}

// SetAzureSubscriptionId gets a reference to the given string and assigns it to the AzureSubscriptionId field.
func (o *ImportTemplateImageModel) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ImportTemplateImageModel) SetRegion(v string) {
	o.Region = &v
}

// GetHyperVGen returns the HyperVGen field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetHyperVGen() string {
	if o == nil || IsNil(o.HyperVGen) {
		var ret string
		return ret
	}
	return *o.HyperVGen
}

// GetHyperVGenOk returns a tuple with the HyperVGen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetHyperVGenOk() (*string, bool) {
	if o == nil || IsNil(o.HyperVGen) {
		return nil, false
	}
	return o.HyperVGen, true
}

// SetHyperVGen gets a reference to the given string and assigns it to the HyperVGen field.
func (o *ImportTemplateImageModel) SetHyperVGen(v string) {
	o.HyperVGen = &v
}

// GetVtpmEnabled returns the VtpmEnabled field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetVtpmEnabled() bool {
	if o == nil || IsNil(o.VtpmEnabled) {
		var ret bool
		return ret
	}
	return *o.VtpmEnabled
}

// GetVtpmEnabledOk returns a tuple with the VtpmEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetVtpmEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.VtpmEnabled) {
		return nil, false
	}
	return o.VtpmEnabled, true
}

// SetVtpmEnabled gets a reference to the given bool and assigns it to the VtpmEnabled field.
func (o *ImportTemplateImageModel) SetVtpmEnabled(v bool) {
	o.VtpmEnabled = &v
}

// GetSecureBootEnabled returns the SecureBootEnabled field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetSecureBootEnabled() bool {
	if o == nil || IsNil(o.SecureBootEnabled) {
		var ret bool
		return ret
	}
	return *o.SecureBootEnabled
}

// GetSecureBootEnabledOk returns a tuple with the SecureBootEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetSecureBootEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecureBootEnabled) {
		return nil, false
	}
	return o.SecureBootEnabled, true
}

// SetSecureBootEnabled gets a reference to the given bool and assigns it to the SecureBootEnabled field.
func (o *ImportTemplateImageModel) SetSecureBootEnabled(v bool) {
	o.SecureBootEnabled = &v
}

// GetCmekEnabled returns the CmekEnabled field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetCmekEnabled() bool {
	if o == nil || IsNil(o.CmekEnabled) {
		var ret bool
		return ret
	}
	return *o.CmekEnabled
}

// GetCmekEnabledOk returns a tuple with the CmekEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetCmekEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CmekEnabled) {
		return nil, false
	}
	return o.CmekEnabled, true
}

// SetCmekEnabled gets a reference to the given bool and assigns it to the CmekEnabled field.
func (o *ImportTemplateImageModel) SetCmekEnabled(v bool) {
	o.CmekEnabled = &v
}

// GetCmekID returns the CmekID field value if set, zero value otherwise.
func (o *ImportTemplateImageModel) GetCmekID() string {
	if o == nil || IsNil(o.CmekID) {
		var ret string
		return ret
	}
	return *o.CmekID
}

// GetCmekIDOk returns a tuple with the CmekID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportTemplateImageModel) GetCmekIDOk() (*string, bool) {
	if o == nil || IsNil(o.CmekID) {
		return nil, false
	}
	return o.CmekID, true
}

// SetCmekID gets a reference to the given string and assigns it to the CmekID field.
func (o *ImportTemplateImageModel) SetCmekID(v string) {
	o.CmekID = &v
}

func (o ImportTemplateImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportTemplateImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["vhdUri"] = o.VhdUri
	if !IsNil(o.VhdEncryptionUri) {
		toSerialize["vhdEncryptionUri"] = o.VhdEncryptionUri
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.OsPlatform) {
		toSerialize["osPlatform"] = o.OsPlatform
	}
	if !IsNil(o.CspCustomerId) {
		toSerialize["cspCustomerId"] = o.CspCustomerId
	}
	if !IsNil(o.CspSiteId) {
		toSerialize["cspSiteId"] = o.CspSiteId
	}
	if !IsNil(o.AzureSubscriptionId) {
		toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.HyperVGen) {
		toSerialize["hyperVGen"] = o.HyperVGen
	}
	if !IsNil(o.VtpmEnabled) {
		toSerialize["vtpmEnabled"] = o.VtpmEnabled
	}
	if !IsNil(o.SecureBootEnabled) {
		toSerialize["secureBootEnabled"] = o.SecureBootEnabled
	}
	if !IsNil(o.CmekEnabled) {
		toSerialize["cmekEnabled"] = o.CmekEnabled
	}
	if !IsNil(o.CmekID) {
		toSerialize["cmekID"] = o.CmekID
	}
	return toSerialize, nil
}

type NullableImportTemplateImageModel struct {
	value *ImportTemplateImageModel
	isSet bool
}

func (v NullableImportTemplateImageModel) Get() *ImportTemplateImageModel {
	return v.value
}

func (v *NullableImportTemplateImageModel) Set(val *ImportTemplateImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableImportTemplateImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableImportTemplateImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportTemplateImageModel(val *ImportTemplateImageModel) *NullableImportTemplateImageModel {
	return &NullableImportTemplateImageModel{value: val, isSet: true}
}

func (v NullableImportTemplateImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportTemplateImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
