/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureResourceTagAudit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureResourceTagAudit{}

// AzureResourceTagAudit struct for AzureResourceTagAudit
type AzureResourceTagAudit struct {
	Type            *AzureResourceTagAuditType      `json:"type,omitempty"`
	Violation       *AzureResourceTagAuditViolation `json:"violation,omitempty"`
	ResourceIdTag   *string                         `json:"resourceIdTag,omitempty"`
	TagName         *string                         `json:"tagName,omitempty"`
	TagValue        *string                         `json:"tagValue,omitempty"`
	CorrectTagValue *string                         `json:"correctTagValue,omitempty"`
	RepairCompleted *bool                           `json:"repairCompleted,omitempty"`
}

// NewAzureResourceTagAuditWithDefaults instantiates a new AzureResourceTagAudit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureResourceTagAuditWithDefaults() *AzureResourceTagAudit {
	this := AzureResourceTagAudit{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetType() AzureResourceTagAuditType {
	if o == nil || IsNil(o.Type) {
		var ret AzureResourceTagAuditType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetTypeOk() (*AzureResourceTagAuditType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given AzureResourceTagAuditType and assigns it to the Type field.
func (o *AzureResourceTagAudit) SetType(v AzureResourceTagAuditType) {
	o.Type = &v
}

// GetViolation returns the Violation field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetViolation() AzureResourceTagAuditViolation {
	if o == nil || IsNil(o.Violation) {
		var ret AzureResourceTagAuditViolation
		return ret
	}
	return *o.Violation
}

// GetViolationOk returns a tuple with the Violation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetViolationOk() (*AzureResourceTagAuditViolation, bool) {
	if o == nil || IsNil(o.Violation) {
		return nil, false
	}
	return o.Violation, true
}

// SetViolation gets a reference to the given AzureResourceTagAuditViolation and assigns it to the Violation field.
func (o *AzureResourceTagAudit) SetViolation(v AzureResourceTagAuditViolation) {
	o.Violation = &v
}

// GetResourceIdTag returns the ResourceIdTag field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetResourceIdTag() string {
	if o == nil || IsNil(o.ResourceIdTag) {
		var ret string
		return ret
	}
	return *o.ResourceIdTag
}

// GetResourceIdTagOk returns a tuple with the ResourceIdTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetResourceIdTagOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceIdTag) {
		return nil, false
	}
	return o.ResourceIdTag, true
}

// SetResourceIdTag gets a reference to the given string and assigns it to the ResourceIdTag field.
func (o *AzureResourceTagAudit) SetResourceIdTag(v string) {
	o.ResourceIdTag = &v
}

// GetTagName returns the TagName field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetTagName() string {
	if o == nil || IsNil(o.TagName) {
		var ret string
		return ret
	}
	return *o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetTagNameOk() (*string, bool) {
	if o == nil || IsNil(o.TagName) {
		return nil, false
	}
	return o.TagName, true
}

// SetTagName gets a reference to the given string and assigns it to the TagName field.
func (o *AzureResourceTagAudit) SetTagName(v string) {
	o.TagName = &v
}

// GetTagValue returns the TagValue field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetTagValue() string {
	if o == nil || IsNil(o.TagValue) {
		var ret string
		return ret
	}
	return *o.TagValue
}

// GetTagValueOk returns a tuple with the TagValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetTagValueOk() (*string, bool) {
	if o == nil || IsNil(o.TagValue) {
		return nil, false
	}
	return o.TagValue, true
}

// SetTagValue gets a reference to the given string and assigns it to the TagValue field.
func (o *AzureResourceTagAudit) SetTagValue(v string) {
	o.TagValue = &v
}

// GetCorrectTagValue returns the CorrectTagValue field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetCorrectTagValue() string {
	if o == nil || IsNil(o.CorrectTagValue) {
		var ret string
		return ret
	}
	return *o.CorrectTagValue
}

// GetCorrectTagValueOk returns a tuple with the CorrectTagValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetCorrectTagValueOk() (*string, bool) {
	if o == nil || IsNil(o.CorrectTagValue) {
		return nil, false
	}
	return o.CorrectTagValue, true
}

// SetCorrectTagValue gets a reference to the given string and assigns it to the CorrectTagValue field.
func (o *AzureResourceTagAudit) SetCorrectTagValue(v string) {
	o.CorrectTagValue = &v
}

// GetRepairCompleted returns the RepairCompleted field value if set, zero value otherwise.
func (o *AzureResourceTagAudit) GetRepairCompleted() bool {
	if o == nil || IsNil(o.RepairCompleted) {
		var ret bool
		return ret
	}
	return *o.RepairCompleted
}

// GetRepairCompletedOk returns a tuple with the RepairCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceTagAudit) GetRepairCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.RepairCompleted) {
		return nil, false
	}
	return o.RepairCompleted, true
}

// SetRepairCompleted gets a reference to the given bool and assigns it to the RepairCompleted field.
func (o *AzureResourceTagAudit) SetRepairCompleted(v bool) {
	o.RepairCompleted = &v
}

func (o AzureResourceTagAudit) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureResourceTagAudit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Violation) {
		toSerialize["violation"] = o.Violation
	}
	if !IsNil(o.ResourceIdTag) {
		toSerialize["resourceIdTag"] = o.ResourceIdTag
	}
	if !IsNil(o.TagName) {
		toSerialize["tagName"] = o.TagName
	}
	if !IsNil(o.TagValue) {
		toSerialize["tagValue"] = o.TagValue
	}
	if !IsNil(o.CorrectTagValue) {
		toSerialize["correctTagValue"] = o.CorrectTagValue
	}
	if !IsNil(o.RepairCompleted) {
		toSerialize["repairCompleted"] = o.RepairCompleted
	}
	return toSerialize, nil
}

type NullableAzureResourceTagAudit struct {
	value *AzureResourceTagAudit
	isSet bool
}

func (v NullableAzureResourceTagAudit) Get() *AzureResourceTagAudit {
	return v.value
}

func (v *NullableAzureResourceTagAudit) Set(val *AzureResourceTagAudit) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureResourceTagAudit) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureResourceTagAudit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureResourceTagAudit(val *AzureResourceTagAudit) *NullableAzureResourceTagAudit {
	return &NullableAzureResourceTagAudit{value: val, isSet: true}
}

func (v NullableAzureResourceTagAudit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureResourceTagAudit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
