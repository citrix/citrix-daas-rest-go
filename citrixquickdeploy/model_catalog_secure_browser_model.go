/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogSecureBrowserModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogSecureBrowserModel{}

// CatalogSecureBrowserModel struct for CatalogSecureBrowserModel
type CatalogSecureBrowserModel struct {
	// Indicates Secure Browser apps
	WebAppModels []AddRemoteBrowserIsolationWebAppModel `json:"webAppModels,omitempty"`
}

// NewCatalogSecureBrowserModelWithDefaults instantiates a new CatalogSecureBrowserModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogSecureBrowserModelWithDefaults() *CatalogSecureBrowserModel {
	this := CatalogSecureBrowserModel{}
	return &this
}

// GetWebAppModels returns the WebAppModels field value if set, zero value otherwise.
func (o *CatalogSecureBrowserModel) GetWebAppModels() []AddRemoteBrowserIsolationWebAppModel {
	if o == nil || IsNil(o.WebAppModels) {
		var ret []AddRemoteBrowserIsolationWebAppModel
		return ret
	}
	return o.WebAppModels
}

// GetWebAppModelsOk returns a tuple with the WebAppModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogSecureBrowserModel) GetWebAppModelsOk() ([]AddRemoteBrowserIsolationWebAppModel, bool) {
	if o == nil || IsNil(o.WebAppModels) {
		return nil, false
	}
	return o.WebAppModels, true
}

// SetWebAppModels gets a reference to the given []AddRemoteBrowserIsolationWebAppModel and assigns it to the WebAppModels field.
func (o *CatalogSecureBrowserModel) SetWebAppModels(v []AddRemoteBrowserIsolationWebAppModel) {
	o.WebAppModels = v
}

func (o CatalogSecureBrowserModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogSecureBrowserModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WebAppModels) {
		toSerialize["webAppModels"] = o.WebAppModels
	}
	return toSerialize, nil
}

type NullableCatalogSecureBrowserModel struct {
	value *CatalogSecureBrowserModel
	isSet bool
}

func (v NullableCatalogSecureBrowserModel) Get() *CatalogSecureBrowserModel {
	return v.value
}

func (v *NullableCatalogSecureBrowserModel) Set(val *CatalogSecureBrowserModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogSecureBrowserModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogSecureBrowserModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogSecureBrowserModel(val *CatalogSecureBrowserModel) *NullableCatalogSecureBrowserModel {
	return &NullableCatalogSecureBrowserModel{value: val, isSet: true}
}

func (v NullableCatalogSecureBrowserModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogSecureBrowserModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
