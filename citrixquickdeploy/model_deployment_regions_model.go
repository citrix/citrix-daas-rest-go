/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the DeploymentRegionsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentRegionsModel{}

// DeploymentRegionsModel struct for DeploymentRegionsModel
type DeploymentRegionsModel struct {
	// List of availabile regions
	Items []DeploymentRegionModel `json:"items,omitempty"`
	// Alias of Items property for backward compatibility
	Regions []DeploymentRegionModel `json:"regions,omitempty"`
}

// NewDeploymentRegionsModelWithDefaults instantiates a new DeploymentRegionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentRegionsModelWithDefaults() *DeploymentRegionsModel {
	this := DeploymentRegionsModel{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DeploymentRegionsModel) GetItems() []DeploymentRegionModel {
	if o == nil || IsNil(o.Items) {
		var ret []DeploymentRegionModel
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionsModel) GetItemsOk() ([]DeploymentRegionModel, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// SetItems gets a reference to the given []DeploymentRegionModel and assigns it to the Items field.
func (o *DeploymentRegionsModel) SetItems(v []DeploymentRegionModel) {
	o.Items = v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *DeploymentRegionsModel) GetRegions() []DeploymentRegionModel {
	if o == nil || IsNil(o.Regions) {
		var ret []DeploymentRegionModel
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionsModel) GetRegionsOk() ([]DeploymentRegionModel, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// SetRegions gets a reference to the given []DeploymentRegionModel and assigns it to the Regions field.
func (o *DeploymentRegionsModel) SetRegions(v []DeploymentRegionModel) {
	o.Regions = v
}

func (o DeploymentRegionsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentRegionsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

type NullableDeploymentRegionsModel struct {
	value *DeploymentRegionsModel
	isSet bool
}

func (v NullableDeploymentRegionsModel) Get() *DeploymentRegionsModel {
	return v.value
}

func (v *NullableDeploymentRegionsModel) Set(val *DeploymentRegionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentRegionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentRegionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentRegionsModel(val *DeploymentRegionsModel) *NullableDeploymentRegionsModel {
	return &NullableDeploymentRegionsModel{value: val, isSet: true}
}

func (v NullableDeploymentRegionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentRegionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
