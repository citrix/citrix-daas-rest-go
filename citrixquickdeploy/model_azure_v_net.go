/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureVNet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVNet{}

// AzureVNet struct for AzureVNet
type AzureVNet struct {
	// ID of the Azure Subscription where VNet is configured
	SubscriptionId string `json:"subscriptionId"`
	// Name of the Resource Group the VNet is associated with
	ResourceGroup string `json:"resourceGroup"`
	// Name of the VNet
	Name string `json:"name"`
	// Azure region where the VNet is located
	Location *string `json:"location,omitempty"`
	// Subnets that have been configured for this VNet
	Subnets    []AzureSubnet `json:"subnets,omitempty"`
	DnsServers []string      `json:"dnsServers,omitempty"`
}

// NewAzureVNetWithDefaults instantiates a new AzureVNet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVNetWithDefaults() *AzureVNet {
	this := AzureVNet{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *AzureVNet) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *AzureVNet) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetResourceGroup returns the ResourceGroup field value
func (o *AzureVNet) GetResourceGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetResourceGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceGroup, true
}

// SetResourceGroup sets field value
func (o *AzureVNet) SetResourceGroup(v string) {
	o.ResourceGroup = v
}

// GetName returns the Name field value
func (o *AzureVNet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureVNet) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *AzureVNet) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *AzureVNet) SetLocation(v string) {
	o.Location = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *AzureVNet) GetSubnets() []AzureSubnet {
	if o == nil || IsNil(o.Subnets) {
		var ret []AzureSubnet
		return ret
	}
	return o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetSubnetsOk() ([]AzureSubnet, bool) {
	if o == nil || IsNil(o.Subnets) {
		return nil, false
	}
	return o.Subnets, true
}

// SetSubnets gets a reference to the given []AzureSubnet and assigns it to the Subnets field.
func (o *AzureVNet) SetSubnets(v []AzureSubnet) {
	o.Subnets = v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *AzureVNet) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVNet) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *AzureVNet) SetDnsServers(v []string) {
	o.DnsServers = v
}

func (o AzureVNet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVNet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["resourceGroup"] = o.ResourceGroup
	toSerialize["name"] = o.Name
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Subnets) {
		toSerialize["subnets"] = o.Subnets
	}
	if !IsNil(o.DnsServers) {
		toSerialize["dnsServers"] = o.DnsServers
	}
	return toSerialize, nil
}

type NullableAzureVNet struct {
	value *AzureVNet
	isSet bool
}

func (v NullableAzureVNet) Get() *AzureVNet {
	return v.value
}

func (v *NullableAzureVNet) Set(val *AzureVNet) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVNet) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVNet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVNet(val *AzureVNet) *NullableAzureVNet {
	return &NullableAzureVNet{value: val, isSet: true}
}

func (v NullableAzureVNet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVNet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
