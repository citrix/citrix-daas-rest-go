/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ResourceLocationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLocationDetails{}

// ResourceLocationDetails struct for ResourceLocationDetails
type ResourceLocationDetails struct {
	// ID of the Resource Location
	LocationId *string `json:"locationId,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// Name of the Resource Location
	Name *string `json:"name,omitempty"`
	// State of the Resource Location
	State *ResourceLocationState `json:"state,omitempty"`
	// Region where resources associated with the RL is located
	Region *string `json:"region,omitempty"`
	// Id of the Region where resources associated with the RL is located
	RegionId *string `json:"regionId,omitempty"`
	// Indicates if this RL is associated with Citrix Managed resources
	IsCitrixManaged *bool `json:"isCitrixManaged,omitempty"`
	// Indicates if the RL is used by non-domain joined catalogs
	IsForNonDomainJoinedVms *bool `json:"isForNonDomainJoinedVms,omitempty"`
	// Domain name of the AD domain catalogs in this RL are associated with
	DomainName *string `json:"domainName,omitempty"`
	// ID of the Azure subscription associated with the Resource Location
	AzureSubscriptionId *string `json:"azureSubscriptionId,omitempty"`
	// Name of the Azure Virtual Network the RL is associated with
	AzureVnet *string `json:"azureVnet,omitempty"`
	// Name of the on-prem connection associated with
	OnPremConnection *string `json:"onPremConnection,omitempty"`
	// List of connectors configured for the RL
	Connectors []ConnectorDetails `json:"connectors,omitempty"`
	// List of jobs performed by the Resource Location.
	Jobs []ResourceLocationJob `json:"jobs,omitempty"`
	// List of catalogs that are associate with the Resource Location.
	AssociatedCatalogs []AssociatedCatalog `json:"associatedCatalogs,omitempty"`
	// The most recently used resource group for connectors of a BYOA RL
	ConnectorResourceGroup *string `json:"connectorResourceGroup,omitempty"`
	// The resource group containing the vnet the RL is associated with
	VnetResourceGroup *string `json:"vnetResourceGroup,omitempty"`
	// The most recently used OU for the connectors of a BYOA RL
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// Indicates if the Resource Location is for Secure Browser
	IsSecureBrowser *bool `json:"isSecureBrowser,omitempty"`
	// Indicates if the Resource Location is for connectorless catalogs
	IsForConnectorlessCatalogs *bool `json:"isForConnectorlessCatalogs,omitempty"`
	// Indicates if connectorless Resource Location can add connectors
	IsSupportingAddingConnectors *bool `json:"isSupportingAddingConnectors,omitempty"`
	// Overview model of the NatGateway
	NatGateway *NatGatewayModelOverview `json:"natGateway,omitempty"`
}

// NewResourceLocationDetailsWithDefaults instantiates a new ResourceLocationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLocationDetailsWithDefaults() *ResourceLocationDetails {
	this := ResourceLocationDetails{}
	return &this
}

// GetLocationId returns the LocationId field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetLocationId() string {
	if o == nil || IsNil(o.LocationId) {
		var ret string
		return ret
	}
	return *o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocationId) {
		return nil, false
	}
	return o.LocationId, true
}

// SetLocationId gets a reference to the given string and assigns it to the LocationId field.
func (o *ResourceLocationDetails) SetLocationId(v string) {
	o.LocationId = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *ResourceLocationDetails) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceLocationDetails) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetState() ResourceLocationState {
	if o == nil || IsNil(o.State) {
		var ret ResourceLocationState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetStateOk() (*ResourceLocationState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given ResourceLocationState and assigns it to the State field.
func (o *ResourceLocationDetails) SetState(v ResourceLocationState) {
	o.State = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ResourceLocationDetails) SetRegion(v string) {
	o.Region = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetRegionId() string {
	if o == nil || IsNil(o.RegionId) {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *ResourceLocationDetails) SetRegionId(v string) {
	o.RegionId = &v
}

// GetIsCitrixManaged returns the IsCitrixManaged field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetIsCitrixManaged() bool {
	if o == nil || IsNil(o.IsCitrixManaged) {
		var ret bool
		return ret
	}
	return *o.IsCitrixManaged
}

// GetIsCitrixManagedOk returns a tuple with the IsCitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetIsCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCitrixManaged) {
		return nil, false
	}
	return o.IsCitrixManaged, true
}

// SetIsCitrixManaged gets a reference to the given bool and assigns it to the IsCitrixManaged field.
func (o *ResourceLocationDetails) SetIsCitrixManaged(v bool) {
	o.IsCitrixManaged = &v
}

// GetIsForNonDomainJoinedVms returns the IsForNonDomainJoinedVms field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetIsForNonDomainJoinedVms() bool {
	if o == nil || IsNil(o.IsForNonDomainJoinedVms) {
		var ret bool
		return ret
	}
	return *o.IsForNonDomainJoinedVms
}

// GetIsForNonDomainJoinedVmsOk returns a tuple with the IsForNonDomainJoinedVms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetIsForNonDomainJoinedVmsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForNonDomainJoinedVms) {
		return nil, false
	}
	return o.IsForNonDomainJoinedVms, true
}

// SetIsForNonDomainJoinedVms gets a reference to the given bool and assigns it to the IsForNonDomainJoinedVms field.
func (o *ResourceLocationDetails) SetIsForNonDomainJoinedVms(v bool) {
	o.IsForNonDomainJoinedVms = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *ResourceLocationDetails) SetDomainName(v string) {
	o.DomainName = &v
}

// GetAzureSubscriptionId returns the AzureSubscriptionId field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetAzureSubscriptionId() string {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionId
}

// GetAzureSubscriptionIdOk returns a tuple with the AzureSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetAzureSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSubscriptionId) {
		return nil, false
	}
	return o.AzureSubscriptionId, true
}

// SetAzureSubscriptionId gets a reference to the given string and assigns it to the AzureSubscriptionId field.
func (o *ResourceLocationDetails) SetAzureSubscriptionId(v string) {
	o.AzureSubscriptionId = &v
}

// GetAzureVnet returns the AzureVnet field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetAzureVnet() string {
	if o == nil || IsNil(o.AzureVnet) {
		var ret string
		return ret
	}
	return *o.AzureVnet
}

// GetAzureVnetOk returns a tuple with the AzureVnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetAzureVnetOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVnet) {
		return nil, false
	}
	return o.AzureVnet, true
}

// SetAzureVnet gets a reference to the given string and assigns it to the AzureVnet field.
func (o *ResourceLocationDetails) SetAzureVnet(v string) {
	o.AzureVnet = &v
}

// GetOnPremConnection returns the OnPremConnection field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetOnPremConnection() string {
	if o == nil || IsNil(o.OnPremConnection) {
		var ret string
		return ret
	}
	return *o.OnPremConnection
}

// GetOnPremConnectionOk returns a tuple with the OnPremConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetOnPremConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.OnPremConnection) {
		return nil, false
	}
	return o.OnPremConnection, true
}

// SetOnPremConnection gets a reference to the given string and assigns it to the OnPremConnection field.
func (o *ResourceLocationDetails) SetOnPremConnection(v string) {
	o.OnPremConnection = &v
}

// GetConnectors returns the Connectors field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetConnectors() []ConnectorDetails {
	if o == nil || IsNil(o.Connectors) {
		var ret []ConnectorDetails
		return ret
	}
	return o.Connectors
}

// GetConnectorsOk returns a tuple with the Connectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetConnectorsOk() ([]ConnectorDetails, bool) {
	if o == nil || IsNil(o.Connectors) {
		return nil, false
	}
	return o.Connectors, true
}

// SetConnectors gets a reference to the given []ConnectorDetails and assigns it to the Connectors field.
func (o *ResourceLocationDetails) SetConnectors(v []ConnectorDetails) {
	o.Connectors = v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetJobs() []ResourceLocationJob {
	if o == nil || IsNil(o.Jobs) {
		var ret []ResourceLocationJob
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetJobsOk() ([]ResourceLocationJob, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// SetJobs gets a reference to the given []ResourceLocationJob and assigns it to the Jobs field.
func (o *ResourceLocationDetails) SetJobs(v []ResourceLocationJob) {
	o.Jobs = v
}

// GetAssociatedCatalogs returns the AssociatedCatalogs field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetAssociatedCatalogs() []AssociatedCatalog {
	if o == nil || IsNil(o.AssociatedCatalogs) {
		var ret []AssociatedCatalog
		return ret
	}
	return o.AssociatedCatalogs
}

// GetAssociatedCatalogsOk returns a tuple with the AssociatedCatalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetAssociatedCatalogsOk() ([]AssociatedCatalog, bool) {
	if o == nil || IsNil(o.AssociatedCatalogs) {
		return nil, false
	}
	return o.AssociatedCatalogs, true
}

// SetAssociatedCatalogs gets a reference to the given []AssociatedCatalog and assigns it to the AssociatedCatalogs field.
func (o *ResourceLocationDetails) SetAssociatedCatalogs(v []AssociatedCatalog) {
	o.AssociatedCatalogs = v
}

// GetConnectorResourceGroup returns the ConnectorResourceGroup field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetConnectorResourceGroup() string {
	if o == nil || IsNil(o.ConnectorResourceGroup) {
		var ret string
		return ret
	}
	return *o.ConnectorResourceGroup
}

// GetConnectorResourceGroupOk returns a tuple with the ConnectorResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetConnectorResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorResourceGroup) {
		return nil, false
	}
	return o.ConnectorResourceGroup, true
}

// SetConnectorResourceGroup gets a reference to the given string and assigns it to the ConnectorResourceGroup field.
func (o *ResourceLocationDetails) SetConnectorResourceGroup(v string) {
	o.ConnectorResourceGroup = &v
}

// GetVnetResourceGroup returns the VnetResourceGroup field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetVnetResourceGroup() string {
	if o == nil || IsNil(o.VnetResourceGroup) {
		var ret string
		return ret
	}
	return *o.VnetResourceGroup
}

// GetVnetResourceGroupOk returns a tuple with the VnetResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetVnetResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.VnetResourceGroup) {
		return nil, false
	}
	return o.VnetResourceGroup, true
}

// SetVnetResourceGroup gets a reference to the given string and assigns it to the VnetResourceGroup field.
func (o *ResourceLocationDetails) SetVnetResourceGroup(v string) {
	o.VnetResourceGroup = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetOrganizationalUnit() string {
	if o == nil || IsNil(o.OrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationalUnit) {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *ResourceLocationDetails) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetIsSecureBrowser returns the IsSecureBrowser field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetIsSecureBrowser() bool {
	if o == nil || IsNil(o.IsSecureBrowser) {
		var ret bool
		return ret
	}
	return *o.IsSecureBrowser
}

// GetIsSecureBrowserOk returns a tuple with the IsSecureBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetIsSecureBrowserOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecureBrowser) {
		return nil, false
	}
	return o.IsSecureBrowser, true
}

// SetIsSecureBrowser gets a reference to the given bool and assigns it to the IsSecureBrowser field.
func (o *ResourceLocationDetails) SetIsSecureBrowser(v bool) {
	o.IsSecureBrowser = &v
}

// GetIsForConnectorlessCatalogs returns the IsForConnectorlessCatalogs field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetIsForConnectorlessCatalogs() bool {
	if o == nil || IsNil(o.IsForConnectorlessCatalogs) {
		var ret bool
		return ret
	}
	return *o.IsForConnectorlessCatalogs
}

// GetIsForConnectorlessCatalogsOk returns a tuple with the IsForConnectorlessCatalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetIsForConnectorlessCatalogsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForConnectorlessCatalogs) {
		return nil, false
	}
	return o.IsForConnectorlessCatalogs, true
}

// SetIsForConnectorlessCatalogs gets a reference to the given bool and assigns it to the IsForConnectorlessCatalogs field.
func (o *ResourceLocationDetails) SetIsForConnectorlessCatalogs(v bool) {
	o.IsForConnectorlessCatalogs = &v
}

// GetIsSupportingAddingConnectors returns the IsSupportingAddingConnectors field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetIsSupportingAddingConnectors() bool {
	if o == nil || IsNil(o.IsSupportingAddingConnectors) {
		var ret bool
		return ret
	}
	return *o.IsSupportingAddingConnectors
}

// GetIsSupportingAddingConnectorsOk returns a tuple with the IsSupportingAddingConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetIsSupportingAddingConnectorsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSupportingAddingConnectors) {
		return nil, false
	}
	return o.IsSupportingAddingConnectors, true
}

// SetIsSupportingAddingConnectors gets a reference to the given bool and assigns it to the IsSupportingAddingConnectors field.
func (o *ResourceLocationDetails) SetIsSupportingAddingConnectors(v bool) {
	o.IsSupportingAddingConnectors = &v
}

// GetNatGateway returns the NatGateway field value if set, zero value otherwise.
func (o *ResourceLocationDetails) GetNatGateway() NatGatewayModelOverview {
	if o == nil || IsNil(o.NatGateway) {
		var ret NatGatewayModelOverview
		return ret
	}
	return *o.NatGateway
}

// GetNatGatewayOk returns a tuple with the NatGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationDetails) GetNatGatewayOk() (*NatGatewayModelOverview, bool) {
	if o == nil || IsNil(o.NatGateway) {
		return nil, false
	}
	return o.NatGateway, true
}

// SetNatGateway gets a reference to the given NatGatewayModelOverview and assigns it to the NatGateway field.
func (o *ResourceLocationDetails) SetNatGateway(v NatGatewayModelOverview) {
	o.NatGateway = &v
}

func (o ResourceLocationDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLocationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocationId) {
		toSerialize["locationId"] = o.LocationId
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	if !IsNil(o.IsCitrixManaged) {
		toSerialize["isCitrixManaged"] = o.IsCitrixManaged
	}
	if !IsNil(o.IsForNonDomainJoinedVms) {
		toSerialize["isForNonDomainJoinedVms"] = o.IsForNonDomainJoinedVms
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.AzureSubscriptionId) {
		toSerialize["azureSubscriptionId"] = o.AzureSubscriptionId
	}
	if !IsNil(o.AzureVnet) {
		toSerialize["azureVnet"] = o.AzureVnet
	}
	if !IsNil(o.OnPremConnection) {
		toSerialize["onPremConnection"] = o.OnPremConnection
	}
	if !IsNil(o.Connectors) {
		toSerialize["connectors"] = o.Connectors
	}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.AssociatedCatalogs) {
		toSerialize["associatedCatalogs"] = o.AssociatedCatalogs
	}
	if !IsNil(o.ConnectorResourceGroup) {
		toSerialize["connectorResourceGroup"] = o.ConnectorResourceGroup
	}
	if !IsNil(o.VnetResourceGroup) {
		toSerialize["vnetResourceGroup"] = o.VnetResourceGroup
	}
	if !IsNil(o.OrganizationalUnit) {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	if !IsNil(o.IsSecureBrowser) {
		toSerialize["isSecureBrowser"] = o.IsSecureBrowser
	}
	if !IsNil(o.IsForConnectorlessCatalogs) {
		toSerialize["isForConnectorlessCatalogs"] = o.IsForConnectorlessCatalogs
	}
	if !IsNil(o.IsSupportingAddingConnectors) {
		toSerialize["isSupportingAddingConnectors"] = o.IsSupportingAddingConnectors
	}
	if !IsNil(o.NatGateway) {
		toSerialize["natGateway"] = o.NatGateway
	}
	return toSerialize, nil
}

type NullableResourceLocationDetails struct {
	value *ResourceLocationDetails
	isSet bool
}

func (v NullableResourceLocationDetails) Get() *ResourceLocationDetails {
	return v.value
}

func (v *NullableResourceLocationDetails) Set(val *ResourceLocationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLocationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLocationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLocationDetails(val *ResourceLocationDetails) *NullableResourceLocationDetails {
	return &NullableResourceLocationDetails{value: val, isSet: true}
}

func (v NullableResourceLocationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLocationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
