/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// CatalogResourceType the model 'CatalogResourceType'
type CatalogResourceType string

// List of CatalogResourceType
const (
	CATALOGRESOURCETYPE_UNKNOWN   CatalogResourceType = "Unknown"
	CATALOGRESOURCETYPE_VDA       CatalogResourceType = "Vda"
	CATALOGRESOURCETYPE_CONNECTOR CatalogResourceType = "Connector"
)

// All allowed values of CatalogResourceType enum
var AllowedCatalogResourceTypeEnumValues = []CatalogResourceType{
	"Unknown",
	"Vda",
	"Connector",
}

func (v *CatalogResourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = CatalogResourceType(value)
	return nil
}

// NewCatalogResourceTypeFromValue returns a pointer to a valid CatalogResourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogResourceTypeFromValue(v string) (*CatalogResourceType, error) {
	ev := CatalogResourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CatalogResourceType: valid values are %v", v, AllowedCatalogResourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogResourceType) IsValid() bool {
	for _, existing := range AllowedCatalogResourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CatalogResourceType value
func (v CatalogResourceType) Ptr() *CatalogResourceType {
	return &v
}

type NullableCatalogResourceType struct {
	value *CatalogResourceType
	isSet bool
}

func (v NullableCatalogResourceType) Get() *CatalogResourceType {
	return v.value
}

func (v *NullableCatalogResourceType) Set(val *CatalogResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogResourceType(val *CatalogResourceType) *NullableCatalogResourceType {
	return &NullableCatalogResourceType{value: val, isSet: true}
}

func (v NullableCatalogResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
