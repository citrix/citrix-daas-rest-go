/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// CatalogOverallSubState the model 'CatalogOverallSubState'
type CatalogOverallSubState string

// List of CatalogOverallSubState
const (
	CATALOGOVERALLSUBSTATE_PROCESSING_PROVISIONING_VM                           CatalogOverallSubState = "ProcessingProvisioningVm"
	CATALOGOVERALLSUBSTATE_PROCESSING_VERIFYING_VNET_REACHABILITY               CatalogOverallSubState = "ProcessingVerifyingVnetReachability"
	CATALOGOVERALLSUBSTATE_PROCESSING_JOINING_DOMAIN                            CatalogOverallSubState = "ProcessingJoiningDomain"
	CATALOGOVERALLSUBSTATE_PROCESSING_INSTALLING_CONNECTOR                      CatalogOverallSubState = "ProcessingInstallingConnector"
	CATALOGOVERALLSUBSTATE_PROCESSING_PROVISIONING_MASTER_IMAGE                 CatalogOverallSubState = "ProcessingProvisioningMasterImage"
	CATALOGOVERALLSUBSTATE_PROCESSING_VERIFYING_MASTER_IMAGE                    CatalogOverallSubState = "ProcessingVerifyingMasterImage"
	CATALOGOVERALLSUBSTATE_PROCESSING_VDA_DEPLOYING_CITRIX_SERVERS              CatalogOverallSubState = "ProcessingVdaDeployingCitrixServers"
	CATALOGOVERALLSUBSTATE_PROCESSING_VDA_UPDATING_CITRIX_SERVERS               CatalogOverallSubState = "ProcessingVdaUpdatingCitrixServers"
	CATALOGOVERALLSUBSTATE_PROCESSING_VDA_DELETING_CITRIX_SERVERS               CatalogOverallSubState = "ProcessingVdaDeletingCitrixServers"
	CATALOGOVERALLSUBSTATE_PROCESSING_VDA_COPYING_MASTER_IMAGE                  CatalogOverallSubState = "ProcessingVdaCopyingMasterImage"
	CATALOGOVERALLSUBSTATE_PROCESSING_CAPACITY_SMART_SCALE                      CatalogOverallSubState = "ProcessingCapacitySmartScale"
	CATALOGOVERALLSUBSTATE_PROCESSING_CAPACITY_VDA_POLICY                       CatalogOverallSubState = "ProcessingCapacityVdaPolicy"
	CATALOGOVERALLSUBSTATE_PROCESSING_UPDATING_CAPACITY_MAX_INSTANCES           CatalogOverallSubState = "ProcessingUpdatingCapacityMaxInstances"
	CATALOGOVERALLSUBSTATE_PROCESSING_VDA_DELETE                                CatalogOverallSubState = "ProcessingVdaDelete"
	CATALOGOVERALLSUBSTATE_PROCESSING_CONFIGURING_REMOTE_PC_CATALOG             CatalogOverallSubState = "ProcessingConfiguringRemotePcCatalog"
	CATALOGOVERALLSUBSTATE_PROCESSING_CONFIGURING_REMOTE_PC_ENROLLMENT_SCOPES   CatalogOverallSubState = "ProcessingConfiguringRemotePcEnrollmentScopes"
	CATALOGOVERALLSUBSTATE_PROCESSING_CONFIGURING_REMOTE_PC_MACHINE_ASSIGNMENTS CatalogOverallSubState = "ProcessingConfiguringRemotePcMachineAssignments"
	CATALOGOVERALLSUBSTATE_PROCESSING_CONFIGURING_CATALOG_MACHINES              CatalogOverallSubState = "ProcessingConfiguringCatalogMachines"
	CATALOGOVERALLSUBSTATE_PROCESSING_IMPORTING_IMAGE_VHD_FILE                  CatalogOverallSubState = "ProcessingImportingImageVhdFile"
	CATALOGOVERALLSUBSTATE_PENDING_VDA_DEPLOYMENT                               CatalogOverallSubState = "PendingVdaDeployment"
	CATALOGOVERALLSUBSTATE_PENDING_VDA_UPDATE                                   CatalogOverallSubState = "PendingVdaUpdate"
	CATALOGOVERALLSUBSTATE_ERROR_PROVISIONING_VM_FAILED                         CatalogOverallSubState = "ErrorProvisioningVmFailed"
	CATALOGOVERALLSUBSTATE_ERROR_NO_INTERNET_CONNECTION                         CatalogOverallSubState = "ErrorNoInternetConnection"
	CATALOGOVERALLSUBSTATE_ERROR_DOMAIN_NOT_REACHABLE                           CatalogOverallSubState = "ErrorDomainNotReachable"
	CATALOGOVERALLSUBSTATE_ERROR_INCORRECT_DOMAIN_CREDENTIALS                   CatalogOverallSubState = "ErrorIncorrectDomainCredentials"
	CATALOGOVERALLSUBSTATE_ERROR_INSUFFICIENT_DOMAIN_PERMISSIONS                CatalogOverallSubState = "ErrorInsufficientDomainPermissions"
	CATALOGOVERALLSUBSTATE_ERROR_DOMAIN_JOIN_FAILED                             CatalogOverallSubState = "ErrorDomainJoinFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CATALOG_SUBSCRIPTION_AT_CAPACITY               CatalogOverallSubState = "ErrorCatalogSubscriptionAtCapacity"
	CATALOGOVERALLSUBSTATE_ERROR_CONNECTOR_INSTALL_FAILED                       CatalogOverallSubState = "ErrorConnectorInstallFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CONNECTOR_NOT_IN_CONNECTED_STATE               CatalogOverallSubState = "ErrorConnectorNotInConnectedState"
	CATALOGOVERALLSUBSTATE_ERROR_CONNECTOR_INSTALL_UNKNOWN                      CatalogOverallSubState = "ErrorConnectorInstallUnknown"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_PROVISIONING_FAILED               CatalogOverallSubState = "ErrorMasterImageProvisioningFailed"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_VERIFICATION_FAILED               CatalogOverallSubState = "ErrorMasterImageVerificationFailed"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_NOT_FOUND                         CatalogOverallSubState = "ErrorMasterImageNotFound"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_INVALID_OS                        CatalogOverallSubState = "ErrorMasterImageInvalidOs"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_MCS_NOT_CONFIGURED                CatalogOverallSubState = "ErrorMasterImageMcsNotConfigured"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_NO_SUPPORTED_VDA_FOUND            CatalogOverallSubState = "ErrorMasterImageNoSupportedVdaFound"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_SCANNING_START_MENU_APPS_FAILED   CatalogOverallSubState = "ErrorMasterImageScanningStartMenuAppsFailed"
	CATALOGOVERALLSUBSTATE_ERROR_MASTER_IMAGE_BUILDER_NOT_COMPLETE              CatalogOverallSubState = "ErrorMasterImageBuilderNotComplete"
	CATALOGOVERALLSUBSTATE_ERROR_VDA_DEPLOYING_CITRIX_SERVERS_FAILED            CatalogOverallSubState = "ErrorVdaDeployingCitrixServersFailed"
	CATALOGOVERALLSUBSTATE_ERROR_VDA_DELETING_CITRIX_SERVERS_FAILED             CatalogOverallSubState = "ErrorVdaDeletingCitrixServersFailed"
	CATALOGOVERALLSUBSTATE_ERROR_VDA_UPDATE_CITRIX_SERVERS_FAILED               CatalogOverallSubState = "ErrorVdaUpdateCitrixServersFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CAPACITY_SMART_SCALE_FAILED                    CatalogOverallSubState = "ErrorCapacitySmartScaleFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CAPACITY_VDA_POLICY_FAILED                     CatalogOverallSubState = "ErrorCapacityVdaPolicyFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATING_DIRECTOR_USER                         CatalogOverallSubState = "ErrorCreatingDirectorUser"
	CATALOGOVERALLSUBSTATE_ERROR_DELETING_DIRECTOR_USER                         CatalogOverallSubState = "ErrorDeletingDirectorUser"
	CATALOGOVERALLSUBSTATE_ERROR_CREATING_STORE_FRONT_STORE                     CatalogOverallSubState = "ErrorCreatingStoreFrontStore"
	CATALOGOVERALLSUBSTATE_ERROR_DELETING_STORE_FRONT_STORE                     CatalogOverallSubState = "ErrorDeletingStoreFrontStore"
	CATALOGOVERALLSUBSTATE_ERROR_CAPACITY_VM_CAPACITY_FAILED                    CatalogOverallSubState = "ErrorCapacityVmCapacityFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CAPACITY_UPDATE_BROKER_SETTINGS_FAILED         CatalogOverallSubState = "ErrorCapacityUpdateBrokerSettingsFailed"
	CATALOGOVERALLSUBSTATE_ERROR_PUBLISH_DESKTOP_FAILED                         CatalogOverallSubState = "ErrorPublishDesktopFailed"
	CATALOGOVERALLSUBSTATE_ERROR_INVALID_DEPLOYMENT_REGION                      CatalogOverallSubState = "ErrorInvalidDeploymentRegion"
	CATALOGOVERALLSUBSTATE_ERROR_MANAGED_CAPACITY_ONBOARD_FAILURE               CatalogOverallSubState = "ErrorManagedCapacityOnboardFailure"
	CATALOGOVERALLSUBSTATE_ERROR_INVALID_MANAGED_NETWORK_CONNECTION             CatalogOverallSubState = "ErrorInvalidManagedNetworkConnection"
	CATALOGOVERALLSUBSTATE_ERROR_FAILED_CREATING_CATALOG                        CatalogOverallSubState = "ErrorFailedCreatingCatalog"
	CATALOGOVERALLSUBSTATE_ERROR_MACHINE_CATALOG_EXISTS                         CatalogOverallSubState = "ErrorMachineCatalogExists"
	CATALOGOVERALLSUBSTATE_ERROR_DELIVERY_GROUP_EXISTS                          CatalogOverallSubState = "ErrorDeliveryGroupExists"
	CATALOGOVERALLSUBSTATE_ERROR_APPLICATION_FOLDER_EXISTS                      CatalogOverallSubState = "ErrorApplicationFolderExists"
	CATALOGOVERALLSUBSTATE_ERROR_HOSTING_UNIT_EXISTS                            CatalogOverallSubState = "ErrorHostingUnitExists"
	CATALOGOVERALLSUBSTATE_ERROR_GETTING_ZONES                                  CatalogOverallSubState = "ErrorGettingZones"
	CATALOGOVERALLSUBSTATE_ERROR_HOSTING_UNIT_CREATION_FAILED                   CatalogOverallSubState = "ErrorHostingUnitCreationFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_MACHINE_CATALOG_TIMED_OUT               CatalogOverallSubState = "ErrorCreateMachineCatalogTimedOut"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_MACHINE_CATALOG_FAILED                  CatalogOverallSubState = "ErrorCreateMachineCatalogFailed"
	CATALOGOVERALLSUBSTATE_CREATE_CATALOG_FAILED                                CatalogOverallSubState = "CreateCatalogFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_DELIVERY_GROUP_FAILED                   CatalogOverallSubState = "ErrorCreateDeliveryGroupFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_APPLICATION_FOLDER_FAILED               CatalogOverallSubState = "ErrorCreateApplicationFolderFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_APPLICATION_GROUP_FAILED                CatalogOverallSubState = "ErrorCreateApplicationGroupFailed"
	CATALOGOVERALLSUBSTATE_ERROR_CREATE_APPLICATIONS_FAILED                     CatalogOverallSubState = "ErrorCreateApplicationsFailed"
	CATALOGOVERALLSUBSTATE_ERROR_DELETION_UNKNOWN                               CatalogOverallSubState = "ErrorDeletionUnknown"
	CATALOGOVERALLSUBSTATE_UNKNOWN                                              CatalogOverallSubState = "Unknown"
	CATALOGOVERALLSUBSTATE_ERROR_REGISTER_VDA_FAILED                            CatalogOverallSubState = "ErrorRegisterVdaFailed"
	CATALOGOVERALLSUBSTATE_PROCESSING_CREATING_DIRECTOR_USER                    CatalogOverallSubState = "ProcessingCreatingDirectorUser"
	CATALOGOVERALLSUBSTATE_PROCESSING_DELETING_DIRECTOR_USER                    CatalogOverallSubState = "ProcessingDeletingDirectorUser"
	CATALOGOVERALLSUBSTATE_PROCESSING_CREATING_STORE_FRONT_STORE                CatalogOverallSubState = "ProcessingCreatingStoreFrontStore"
	CATALOGOVERALLSUBSTATE_PROCESSING_DELETING_STORE_FRONT_STORE                CatalogOverallSubState = "ProcessingDeletingStoreFrontStore"
	CATALOGOVERALLSUBSTATE_PROCESSING_AWAITING_SYSTEM_MAINTENANCE               CatalogOverallSubState = "ProcessingAwaitingSystemMaintenance"
)

// All allowed values of CatalogOverallSubState enum
var AllowedCatalogOverallSubStateEnumValues = []CatalogOverallSubState{
	"ProcessingProvisioningVm",
	"ProcessingVerifyingVnetReachability",
	"ProcessingJoiningDomain",
	"ProcessingInstallingConnector",
	"ProcessingProvisioningMasterImage",
	"ProcessingVerifyingMasterImage",
	"ProcessingVdaDeployingCitrixServers",
	"ProcessingVdaUpdatingCitrixServers",
	"ProcessingVdaDeletingCitrixServers",
	"ProcessingVdaCopyingMasterImage",
	"ProcessingCapacitySmartScale",
	"ProcessingCapacityVdaPolicy",
	"ProcessingUpdatingCapacityMaxInstances",
	"ProcessingVdaDelete",
	"ProcessingConfiguringRemotePcCatalog",
	"ProcessingConfiguringRemotePcEnrollmentScopes",
	"ProcessingConfiguringRemotePcMachineAssignments",
	"ProcessingConfiguringCatalogMachines",
	"ProcessingImportingImageVhdFile",
	"PendingVdaDeployment",
	"PendingVdaUpdate",
	"ErrorProvisioningVmFailed",
	"ErrorNoInternetConnection",
	"ErrorDomainNotReachable",
	"ErrorIncorrectDomainCredentials",
	"ErrorInsufficientDomainPermissions",
	"ErrorDomainJoinFailed",
	"ErrorCatalogSubscriptionAtCapacity",
	"ErrorConnectorInstallFailed",
	"ErrorConnectorNotInConnectedState",
	"ErrorConnectorInstallUnknown",
	"ErrorMasterImageProvisioningFailed",
	"ErrorMasterImageVerificationFailed",
	"ErrorMasterImageNotFound",
	"ErrorMasterImageInvalidOs",
	"ErrorMasterImageMcsNotConfigured",
	"ErrorMasterImageNoSupportedVdaFound",
	"ErrorMasterImageScanningStartMenuAppsFailed",
	"ErrorMasterImageBuilderNotComplete",
	"ErrorVdaDeployingCitrixServersFailed",
	"ErrorVdaDeletingCitrixServersFailed",
	"ErrorVdaUpdateCitrixServersFailed",
	"ErrorCapacitySmartScaleFailed",
	"ErrorCapacityVdaPolicyFailed",
	"ErrorCreatingDirectorUser",
	"ErrorDeletingDirectorUser",
	"ErrorCreatingStoreFrontStore",
	"ErrorDeletingStoreFrontStore",
	"ErrorCapacityVmCapacityFailed",
	"ErrorCapacityUpdateBrokerSettingsFailed",
	"ErrorPublishDesktopFailed",
	"ErrorInvalidDeploymentRegion",
	"ErrorManagedCapacityOnboardFailure",
	"ErrorInvalidManagedNetworkConnection",
	"ErrorFailedCreatingCatalog",
	"ErrorMachineCatalogExists",
	"ErrorDeliveryGroupExists",
	"ErrorApplicationFolderExists",
	"ErrorHostingUnitExists",
	"ErrorGettingZones",
	"ErrorHostingUnitCreationFailed",
	"ErrorCreateMachineCatalogTimedOut",
	"ErrorCreateMachineCatalogFailed",
	"CreateCatalogFailed",
	"ErrorCreateDeliveryGroupFailed",
	"ErrorCreateApplicationFolderFailed",
	"ErrorCreateApplicationGroupFailed",
	"ErrorCreateApplicationsFailed",
	"ErrorDeletionUnknown",
	"Unknown",
	"ErrorRegisterVdaFailed",
	"ProcessingCreatingDirectorUser",
	"ProcessingDeletingDirectorUser",
	"ProcessingCreatingStoreFrontStore",
	"ProcessingDeletingStoreFrontStore",
	"ProcessingAwaitingSystemMaintenance",
}

func (v *CatalogOverallSubState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = CatalogOverallSubState(value)
	return nil
}

// NewCatalogOverallSubStateFromValue returns a pointer to a valid CatalogOverallSubState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCatalogOverallSubStateFromValue(v string) (*CatalogOverallSubState, error) {
	ev := CatalogOverallSubState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CatalogOverallSubState: valid values are %v", v, AllowedCatalogOverallSubStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CatalogOverallSubState) IsValid() bool {
	for _, existing := range AllowedCatalogOverallSubStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CatalogOverallSubState value
func (v CatalogOverallSubState) Ptr() *CatalogOverallSubState {
	return &v
}

type NullableCatalogOverallSubState struct {
	value *CatalogOverallSubState
	isSet bool
}

func (v NullableCatalogOverallSubState) Get() *CatalogOverallSubState {
	return v.value
}

func (v *NullableCatalogOverallSubState) Set(val *CatalogOverallSubState) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogOverallSubState) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogOverallSubState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogOverallSubState(val *CatalogOverallSubState) *NullableCatalogOverallSubState {
	return &NullableCatalogOverallSubState{value: val, isSet: true}
}

func (v NullableCatalogOverallSubState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogOverallSubState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
