/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ResourceIdentifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceIdentifier{}

// ResourceIdentifier struct for ResourceIdentifier
type ResourceIdentifier struct {
	ResourceType      *ResourceType       `json:"resourceType,omitempty"`
	Name              *string             `json:"name,omitempty"`
	Parent            *ResourceIdentifier `json:"parent,omitempty"`
	SubscriptionId    *string             `json:"subscriptionId,omitempty"`
	Provider          *string             `json:"provider,omitempty"`
	Location          *AzureLocation      `json:"location,omitempty"`
	ResourceGroupName *string             `json:"resourceGroupName,omitempty"`
}

// NewResourceIdentifierWithDefaults instantiates a new ResourceIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceIdentifierWithDefaults() *ResourceIdentifier {
	this := ResourceIdentifier{}
	return &this
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetResourceType() ResourceType {
	if o == nil || IsNil(o.ResourceType) {
		var ret ResourceType
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetResourceTypeOk() (*ResourceType, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// SetResourceType gets a reference to the given ResourceType and assigns it to the ResourceType field.
func (o *ResourceIdentifier) SetResourceType(v ResourceType) {
	o.ResourceType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceIdentifier) SetName(v string) {
	o.Name = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetParent() ResourceIdentifier {
	if o == nil || IsNil(o.Parent) {
		var ret ResourceIdentifier
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetParentOk() (*ResourceIdentifier, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// SetParent gets a reference to the given ResourceIdentifier and assigns it to the Parent field.
func (o *ResourceIdentifier) SetParent(v ResourceIdentifier) {
	o.Parent = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *ResourceIdentifier) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ResourceIdentifier) SetProvider(v string) {
	o.Provider = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetLocation() AzureLocation {
	if o == nil || IsNil(o.Location) {
		var ret AzureLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetLocationOk() (*AzureLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// SetLocation gets a reference to the given AzureLocation and assigns it to the Location field.
func (o *ResourceIdentifier) SetLocation(v AzureLocation) {
	o.Location = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *ResourceIdentifier) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceIdentifier) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroupName) {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *ResourceIdentifier) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

func (o ResourceIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceIdentifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.ResourceGroupName) {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	return toSerialize, nil
}

type NullableResourceIdentifier struct {
	value *ResourceIdentifier
	isSet bool
}

func (v NullableResourceIdentifier) Get() *ResourceIdentifier {
	return v.value
}

func (v *NullableResourceIdentifier) Set(val *ResourceIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceIdentifier(val *ResourceIdentifier) *NullableResourceIdentifier {
	return &NullableResourceIdentifier{value: val, isSet: true}
}

func (v NullableResourceIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
