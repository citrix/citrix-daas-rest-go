/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the RemoteBrowserIsolationStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteBrowserIsolationStatusModel{}

// RemoteBrowserIsolationStatusModel struct for RemoteBrowserIsolationStatusModel
type RemoteBrowserIsolationStatusModel struct {
	// Current state of the job
	Status *RemoteBrowserIsolationStatusModelJobState `json:"status,omitempty"`
	// Error occurred in the job
	ErrorDetails *string `json:"errorDetails,omitempty"`
	// Indicate if the subscription is in-used by Remote Browser Isolation
	InUsedByRemoteBrowserIsolation *bool `json:"inUsedByRemoteBrowserIsolation,omitempty"`
}

// NewRemoteBrowserIsolationStatusModelWithDefaults instantiates a new RemoteBrowserIsolationStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteBrowserIsolationStatusModelWithDefaults() *RemoteBrowserIsolationStatusModel {
	this := RemoteBrowserIsolationStatusModel{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RemoteBrowserIsolationStatusModel) GetStatus() RemoteBrowserIsolationStatusModelJobState {
	if o == nil || IsNil(o.Status) {
		var ret RemoteBrowserIsolationStatusModelJobState
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteBrowserIsolationStatusModel) GetStatusOk() (*RemoteBrowserIsolationStatusModelJobState, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given RemoteBrowserIsolationStatusModelJobState and assigns it to the Status field.
func (o *RemoteBrowserIsolationStatusModel) SetStatus(v RemoteBrowserIsolationStatusModelJobState) {
	o.Status = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *RemoteBrowserIsolationStatusModel) GetErrorDetails() string {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteBrowserIsolationStatusModel) GetErrorDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *RemoteBrowserIsolationStatusModel) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

// GetInUsedByRemoteBrowserIsolation returns the InUsedByRemoteBrowserIsolation field value if set, zero value otherwise.
func (o *RemoteBrowserIsolationStatusModel) GetInUsedByRemoteBrowserIsolation() bool {
	if o == nil || IsNil(o.InUsedByRemoteBrowserIsolation) {
		var ret bool
		return ret
	}
	return *o.InUsedByRemoteBrowserIsolation
}

// GetInUsedByRemoteBrowserIsolationOk returns a tuple with the InUsedByRemoteBrowserIsolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteBrowserIsolationStatusModel) GetInUsedByRemoteBrowserIsolationOk() (*bool, bool) {
	if o == nil || IsNil(o.InUsedByRemoteBrowserIsolation) {
		return nil, false
	}
	return o.InUsedByRemoteBrowserIsolation, true
}

// SetInUsedByRemoteBrowserIsolation gets a reference to the given bool and assigns it to the InUsedByRemoteBrowserIsolation field.
func (o *RemoteBrowserIsolationStatusModel) SetInUsedByRemoteBrowserIsolation(v bool) {
	o.InUsedByRemoteBrowserIsolation = &v
}

func (o RemoteBrowserIsolationStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteBrowserIsolationStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if !IsNil(o.InUsedByRemoteBrowserIsolation) {
		toSerialize["inUsedByRemoteBrowserIsolation"] = o.InUsedByRemoteBrowserIsolation
	}
	return toSerialize, nil
}

type NullableRemoteBrowserIsolationStatusModel struct {
	value *RemoteBrowserIsolationStatusModel
	isSet bool
}

func (v NullableRemoteBrowserIsolationStatusModel) Get() *RemoteBrowserIsolationStatusModel {
	return v.value
}

func (v *NullableRemoteBrowserIsolationStatusModel) Set(val *RemoteBrowserIsolationStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteBrowserIsolationStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteBrowserIsolationStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteBrowserIsolationStatusModel(val *RemoteBrowserIsolationStatusModel) *NullableRemoteBrowserIsolationStatusModel {
	return &NullableRemoteBrowserIsolationStatusModel{value: val, isSet: true}
}

func (v NullableRemoteBrowserIsolationStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteBrowserIsolationStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
