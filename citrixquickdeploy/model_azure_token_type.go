/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// AzureTokenType the model 'AzureTokenType'
type AzureTokenType string

// List of AzureTokenType
const (
	AZURETOKENTYPE_MANAGEMENT AzureTokenType = "Management"
	AZURETOKENTYPE_GRAPH      AzureTokenType = "Graph"
)

// All allowed values of AzureTokenType enum
var AllowedAzureTokenTypeEnumValues = []AzureTokenType{
	"Management",
	"Graph",
}

func (v *AzureTokenType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = AzureTokenType(value)
	return nil
}

// NewAzureTokenTypeFromValue returns a pointer to a valid AzureTokenType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAzureTokenTypeFromValue(v string) (*AzureTokenType, error) {
	ev := AzureTokenType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AzureTokenType: valid values are %v", v, AllowedAzureTokenTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AzureTokenType) IsValid() bool {
	for _, existing := range AllowedAzureTokenTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AzureTokenType value
func (v AzureTokenType) Ptr() *AzureTokenType {
	return &v
}

type NullableAzureTokenType struct {
	value *AzureTokenType
	isSet bool
}

func (v NullableAzureTokenType) Get() *AzureTokenType {
	return v.value
}

func (v *NullableAzureTokenType) Set(val *AzureTokenType) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureTokenType) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureTokenType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureTokenType(val *AzureTokenType) *NullableAzureTokenType {
	return &NullableAzureTokenType{value: val, isSet: true}
}

func (v NullableAzureTokenType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureTokenType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
