/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AddManagedImageBuilderModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddManagedImageBuilderModel{}

// AddManagedImageBuilderModel struct for AddManagedImageBuilderModel
type AddManagedImageBuilderModel struct {
	// Friendly name of the template
	Name string `json:"name"`
	// ID of the image we will be building off of
	ImageId string `json:"imageId"`
	// ID of the managed subscription that the image will be placed in.
	ManagedSubscriptionId *string `json:"managedSubscriptionId,omitempty"`
	// Indicates if the builder vm will be domain joined
	IsDomainJoined *bool `json:"isDomainJoined,omitempty"`
	// Azure region to deploy image builder vm that does not have on-prem connectivity
	AzureRegion *string `json:"azureRegion,omitempty"`
	// ID of the vnet peering the image builder vm will be associated with
	VnetPeeringId *string `json:"vnetPeeringId,omitempty"`
	// ID of the Azure VPN the image builder will be associated with
	AzureVpnId *string `json:"azureVpnId,omitempty"`
	// Name of the Domain the Image Builder will join
	DomainName *string `json:"domainName,omitempty" validate:"regexp=^[\\\\p{L}0-9-_.]*$"`
	// The OU to associate the Image Builder VM with
	OrganizationalUnit *string `json:"organizationalUnit,omitempty"`
	// The type of VM Instance type
	VmType string `json:"vmType"`
	// The service account used to join the Image Builder VM to the domain or local account that will be created for non-domain joined images
	ServiceAccountName string `json:"serviceAccountName" validate:"regexp=^[^\\/\\\\[\\\\]:;\\\\\\\\|=\\\\^,+*?<>]*$"`
	// The service account password
	ServiceAccountPassword string `json:"serviceAccountPassword"`
	// Customer notes about template image
	Notes *string `json:"notes,omitempty"`
	// Ip Addresses allowed to RDP
	AllowedIPs []string `json:"allowedIPs,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspCustomerId *string `json:"cspCustomerId,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspSiteId *string `json:"cspSiteId,omitempty"`
}

// NewAddManagedImageBuilderModelWithDefaults instantiates a new AddManagedImageBuilderModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddManagedImageBuilderModelWithDefaults() *AddManagedImageBuilderModel {
	this := AddManagedImageBuilderModel{}
	return &this
}

// GetName returns the Name field value
func (o *AddManagedImageBuilderModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddManagedImageBuilderModel) SetName(v string) {
	o.Name = v
}

// GetImageId returns the ImageId field value
func (o *AddManagedImageBuilderModel) GetImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *AddManagedImageBuilderModel) SetImageId(v string) {
	o.ImageId = v
}

// GetManagedSubscriptionId returns the ManagedSubscriptionId field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetManagedSubscriptionId() string {
	if o == nil || IsNil(o.ManagedSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ManagedSubscriptionId
}

// GetManagedSubscriptionIdOk returns a tuple with the ManagedSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetManagedSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedSubscriptionId) {
		return nil, false
	}
	return o.ManagedSubscriptionId, true
}

// SetManagedSubscriptionId gets a reference to the given string and assigns it to the ManagedSubscriptionId field.
func (o *AddManagedImageBuilderModel) SetManagedSubscriptionId(v string) {
	o.ManagedSubscriptionId = &v
}

// GetIsDomainJoined returns the IsDomainJoined field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetIsDomainJoined() bool {
	if o == nil || IsNil(o.IsDomainJoined) {
		var ret bool
		return ret
	}
	return *o.IsDomainJoined
}

// GetIsDomainJoinedOk returns a tuple with the IsDomainJoined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetIsDomainJoinedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDomainJoined) {
		return nil, false
	}
	return o.IsDomainJoined, true
}

// SetIsDomainJoined gets a reference to the given bool and assigns it to the IsDomainJoined field.
func (o *AddManagedImageBuilderModel) SetIsDomainJoined(v bool) {
	o.IsDomainJoined = &v
}

// GetAzureRegion returns the AzureRegion field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetAzureRegion() string {
	if o == nil || IsNil(o.AzureRegion) {
		var ret string
		return ret
	}
	return *o.AzureRegion
}

// GetAzureRegionOk returns a tuple with the AzureRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetAzureRegionOk() (*string, bool) {
	if o == nil || IsNil(o.AzureRegion) {
		return nil, false
	}
	return o.AzureRegion, true
}

// SetAzureRegion gets a reference to the given string and assigns it to the AzureRegion field.
func (o *AddManagedImageBuilderModel) SetAzureRegion(v string) {
	o.AzureRegion = &v
}

// GetVnetPeeringId returns the VnetPeeringId field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetVnetPeeringId() string {
	if o == nil || IsNil(o.VnetPeeringId) {
		var ret string
		return ret
	}
	return *o.VnetPeeringId
}

// GetVnetPeeringIdOk returns a tuple with the VnetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetVnetPeeringIdOk() (*string, bool) {
	if o == nil || IsNil(o.VnetPeeringId) {
		return nil, false
	}
	return o.VnetPeeringId, true
}

// SetVnetPeeringId gets a reference to the given string and assigns it to the VnetPeeringId field.
func (o *AddManagedImageBuilderModel) SetVnetPeeringId(v string) {
	o.VnetPeeringId = &v
}

// GetAzureVpnId returns the AzureVpnId field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetAzureVpnId() string {
	if o == nil || IsNil(o.AzureVpnId) {
		var ret string
		return ret
	}
	return *o.AzureVpnId
}

// GetAzureVpnIdOk returns a tuple with the AzureVpnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetAzureVpnIdOk() (*string, bool) {
	if o == nil || IsNil(o.AzureVpnId) {
		return nil, false
	}
	return o.AzureVpnId, true
}

// SetAzureVpnId gets a reference to the given string and assigns it to the AzureVpnId field.
func (o *AddManagedImageBuilderModel) SetAzureVpnId(v string) {
	o.AzureVpnId = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *AddManagedImageBuilderModel) SetDomainName(v string) {
	o.DomainName = &v
}

// GetOrganizationalUnit returns the OrganizationalUnit field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetOrganizationalUnit() string {
	if o == nil || IsNil(o.OrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.OrganizationalUnit
}

// GetOrganizationalUnitOk returns a tuple with the OrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetOrganizationalUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationalUnit) {
		return nil, false
	}
	return o.OrganizationalUnit, true
}

// SetOrganizationalUnit gets a reference to the given string and assigns it to the OrganizationalUnit field.
func (o *AddManagedImageBuilderModel) SetOrganizationalUnit(v string) {
	o.OrganizationalUnit = &v
}

// GetVmType returns the VmType field value
func (o *AddManagedImageBuilderModel) GetVmType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmType
}

// GetVmTypeOk returns a tuple with the VmType field value
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetVmTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VmType, true
}

// SetVmType sets field value
func (o *AddManagedImageBuilderModel) SetVmType(v string) {
	o.VmType = v
}

// GetServiceAccountName returns the ServiceAccountName field value
func (o *AddManagedImageBuilderModel) GetServiceAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetServiceAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccountName, true
}

// SetServiceAccountName sets field value
func (o *AddManagedImageBuilderModel) SetServiceAccountName(v string) {
	o.ServiceAccountName = v
}

// GetServiceAccountPassword returns the ServiceAccountPassword field value
func (o *AddManagedImageBuilderModel) GetServiceAccountPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccountPassword
}

// GetServiceAccountPasswordOk returns a tuple with the ServiceAccountPassword field value
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetServiceAccountPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccountPassword, true
}

// SetServiceAccountPassword sets field value
func (o *AddManagedImageBuilderModel) SetServiceAccountPassword(v string) {
	o.ServiceAccountPassword = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *AddManagedImageBuilderModel) SetNotes(v string) {
	o.Notes = &v
}

// GetAllowedIPs returns the AllowedIPs field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetAllowedIPs() []string {
	if o == nil || IsNil(o.AllowedIPs) {
		var ret []string
		return ret
	}
	return o.AllowedIPs
}

// GetAllowedIPsOk returns a tuple with the AllowedIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetAllowedIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedIPs) {
		return nil, false
	}
	return o.AllowedIPs, true
}

// SetAllowedIPs gets a reference to the given []string and assigns it to the AllowedIPs field.
func (o *AddManagedImageBuilderModel) SetAllowedIPs(v []string) {
	o.AllowedIPs = v
}

// GetCspCustomerId returns the CspCustomerId field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetCspCustomerId() string {
	if o == nil || IsNil(o.CspCustomerId) {
		var ret string
		return ret
	}
	return *o.CspCustomerId
}

// GetCspCustomerIdOk returns a tuple with the CspCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetCspCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomerId) {
		return nil, false
	}
	return o.CspCustomerId, true
}

// SetCspCustomerId gets a reference to the given string and assigns it to the CspCustomerId field.
func (o *AddManagedImageBuilderModel) SetCspCustomerId(v string) {
	o.CspCustomerId = &v
}

// GetCspSiteId returns the CspSiteId field value if set, zero value otherwise.
func (o *AddManagedImageBuilderModel) GetCspSiteId() string {
	if o == nil || IsNil(o.CspSiteId) {
		var ret string
		return ret
	}
	return *o.CspSiteId
}

// GetCspSiteIdOk returns a tuple with the CspSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddManagedImageBuilderModel) GetCspSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspSiteId) {
		return nil, false
	}
	return o.CspSiteId, true
}

// SetCspSiteId gets a reference to the given string and assigns it to the CspSiteId field.
func (o *AddManagedImageBuilderModel) SetCspSiteId(v string) {
	o.CspSiteId = &v
}

func (o AddManagedImageBuilderModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddManagedImageBuilderModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["imageId"] = o.ImageId
	if !IsNil(o.ManagedSubscriptionId) {
		toSerialize["managedSubscriptionId"] = o.ManagedSubscriptionId
	}
	if !IsNil(o.IsDomainJoined) {
		toSerialize["isDomainJoined"] = o.IsDomainJoined
	}
	if !IsNil(o.AzureRegion) {
		toSerialize["azureRegion"] = o.AzureRegion
	}
	if !IsNil(o.VnetPeeringId) {
		toSerialize["vnetPeeringId"] = o.VnetPeeringId
	}
	if !IsNil(o.AzureVpnId) {
		toSerialize["azureVpnId"] = o.AzureVpnId
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.OrganizationalUnit) {
		toSerialize["organizationalUnit"] = o.OrganizationalUnit
	}
	toSerialize["vmType"] = o.VmType
	toSerialize["serviceAccountName"] = o.ServiceAccountName
	toSerialize["serviceAccountPassword"] = o.ServiceAccountPassword
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.AllowedIPs) {
		toSerialize["allowedIPs"] = o.AllowedIPs
	}
	if !IsNil(o.CspCustomerId) {
		toSerialize["cspCustomerId"] = o.CspCustomerId
	}
	if !IsNil(o.CspSiteId) {
		toSerialize["cspSiteId"] = o.CspSiteId
	}
	return toSerialize, nil
}

type NullableAddManagedImageBuilderModel struct {
	value *AddManagedImageBuilderModel
	isSet bool
}

func (v NullableAddManagedImageBuilderModel) Get() *AddManagedImageBuilderModel {
	return v.value
}

func (v *NullableAddManagedImageBuilderModel) Set(val *AddManagedImageBuilderModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddManagedImageBuilderModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddManagedImageBuilderModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddManagedImageBuilderModel(val *AddManagedImageBuilderModel) *NullableAddManagedImageBuilderModel {
	return &NullableAddManagedImageBuilderModel{value: val, isSet: true}
}

func (v NullableAddManagedImageBuilderModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddManagedImageBuilderModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
