/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the TroubleshootScriptOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TroubleshootScriptOverview{}

// TroubleshootScriptOverview struct for TroubleshootScriptOverview
type TroubleshootScriptOverview struct {
	// The Id of the troubleshoot script
	TroubleshootId *string `json:"troubleshootId,omitempty"`
	// The name of the troubleshoot script
	ScriptName *string `json:"scriptName,omitempty"`
	// The current state of the script
	State *TroubleshootState `json:"state,omitempty"`
	// Any error that occured during execution of the troubleshoot script
	ErrorMsg *string `json:"errorMsg,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// The datetime when the job ended
	EndedAt *time.Time `json:"endedAt,omitempty"`
	// The name of the machine that the script runs on
	MachineName *string `json:"machineName,omitempty"`
	// The sas url for downloading the output of the script
	SasUrl *string `json:"sasUrl,omitempty"`
	// The transaction id
	TransactionId *string `json:"transactionId,omitempty"`
}

// NewTroubleshootScriptOverviewWithDefaults instantiates a new TroubleshootScriptOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTroubleshootScriptOverviewWithDefaults() *TroubleshootScriptOverview {
	this := TroubleshootScriptOverview{}
	return &this
}

// GetTroubleshootId returns the TroubleshootId field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetTroubleshootId() string {
	if o == nil || IsNil(o.TroubleshootId) {
		var ret string
		return ret
	}
	return *o.TroubleshootId
}

// GetTroubleshootIdOk returns a tuple with the TroubleshootId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetTroubleshootIdOk() (*string, bool) {
	if o == nil || IsNil(o.TroubleshootId) {
		return nil, false
	}
	return o.TroubleshootId, true
}

// SetTroubleshootId gets a reference to the given string and assigns it to the TroubleshootId field.
func (o *TroubleshootScriptOverview) SetTroubleshootId(v string) {
	o.TroubleshootId = &v
}

// GetScriptName returns the ScriptName field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetScriptName() string {
	if o == nil || IsNil(o.ScriptName) {
		var ret string
		return ret
	}
	return *o.ScriptName
}

// GetScriptNameOk returns a tuple with the ScriptName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetScriptNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScriptName) {
		return nil, false
	}
	return o.ScriptName, true
}

// SetScriptName gets a reference to the given string and assigns it to the ScriptName field.
func (o *TroubleshootScriptOverview) SetScriptName(v string) {
	o.ScriptName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetState() TroubleshootState {
	if o == nil || IsNil(o.State) {
		var ret TroubleshootState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetStateOk() (*TroubleshootState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given TroubleshootState and assigns it to the State field.
func (o *TroubleshootScriptOverview) SetState(v TroubleshootState) {
	o.State = &v
}

// GetErrorMsg returns the ErrorMsg field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetErrorMsg() string {
	if o == nil || IsNil(o.ErrorMsg) {
		var ret string
		return ret
	}
	return *o.ErrorMsg
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetErrorMsgOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMsg) {
		return nil, false
	}
	return o.ErrorMsg, true
}

// SetErrorMsg gets a reference to the given string and assigns it to the ErrorMsg field.
func (o *TroubleshootScriptOverview) SetErrorMsg(v string) {
	o.ErrorMsg = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *TroubleshootScriptOverview) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *TroubleshootScriptOverview) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

// GetMachineName returns the MachineName field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetMachineName() string {
	if o == nil || IsNil(o.MachineName) {
		var ret string
		return ret
	}
	return *o.MachineName
}

// GetMachineNameOk returns a tuple with the MachineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetMachineNameOk() (*string, bool) {
	if o == nil || IsNil(o.MachineName) {
		return nil, false
	}
	return o.MachineName, true
}

// SetMachineName gets a reference to the given string and assigns it to the MachineName field.
func (o *TroubleshootScriptOverview) SetMachineName(v string) {
	o.MachineName = &v
}

// GetSasUrl returns the SasUrl field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetSasUrl() string {
	if o == nil || IsNil(o.SasUrl) {
		var ret string
		return ret
	}
	return *o.SasUrl
}

// GetSasUrlOk returns a tuple with the SasUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetSasUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SasUrl) {
		return nil, false
	}
	return o.SasUrl, true
}

// SetSasUrl gets a reference to the given string and assigns it to the SasUrl field.
func (o *TroubleshootScriptOverview) SetSasUrl(v string) {
	o.SasUrl = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *TroubleshootScriptOverview) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TroubleshootScriptOverview) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *TroubleshootScriptOverview) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o TroubleshootScriptOverview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TroubleshootScriptOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TroubleshootId) {
		toSerialize["troubleshootId"] = o.TroubleshootId
	}
	if !IsNil(o.ScriptName) {
		toSerialize["scriptName"] = o.ScriptName
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ErrorMsg) {
		toSerialize["errorMsg"] = o.ErrorMsg
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["endedAt"] = o.EndedAt
	}
	if !IsNil(o.MachineName) {
		toSerialize["machineName"] = o.MachineName
	}
	if !IsNil(o.SasUrl) {
		toSerialize["sasUrl"] = o.SasUrl
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	return toSerialize, nil
}

type NullableTroubleshootScriptOverview struct {
	value *TroubleshootScriptOverview
	isSet bool
}

func (v NullableTroubleshootScriptOverview) Get() *TroubleshootScriptOverview {
	return v.value
}

func (v *NullableTroubleshootScriptOverview) Set(val *TroubleshootScriptOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableTroubleshootScriptOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableTroubleshootScriptOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTroubleshootScriptOverview(val *TroubleshootScriptOverview) *NullableTroubleshootScriptOverview {
	return &NullableTroubleshootScriptOverview{value: val, isSet: true}
}

func (v NullableTroubleshootScriptOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTroubleshootScriptOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
