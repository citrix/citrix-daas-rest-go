/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the VnetPeeringModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VnetPeeringModel{}

// VnetPeeringModel struct for VnetPeeringModel
type VnetPeeringModel struct {
	// State of the peering
	State *VnetPeeringState `json:"state,omitempty"`
	// Error that occured while peering the vnet
	Error *string `json:"error,omitempty"`
	// ID of the transaction that performed pairing job
	TransactionId *string `json:"transactionId,omitempty"`
	// Azure region where the vnet in the managed subscription is located
	Region *string `json:"region,omitempty"`
	// Azure region where the originating vnet is located
	SourceVnetRegion *string `json:"sourceVnetRegion,omitempty"`
	// The IP Ranges allocated to the peering
	IpAddressSpace []string `json:"ipAddressSpace,omitempty"`
	// Number of IP Addresses that are currently in use in the subnet
	NumberOfAddressesInUse *int32 `json:"numberOfAddressesInUse,omitempty"`
	// Indicates if the Peering is active
	IsPeeringActive *bool `json:"isPeeringActive,omitempty"`
	// Indicates if the Peering is managed by Citrix
	CitrixManaged *bool `json:"citrixManaged,omitempty"`
	// Resource ID of the Peered VNET
	PeeredVnetId *string `json:"peeredVnetId,omitempty"`
	// ID of the Azure Subscription that the citrix managed vnet is associated with
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// IP address of the DNS server of this VNet
	DnsServers []string `json:"dnsServers,omitempty"`
	// Indicates that partner-tenant relationship exists if not null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// List of associated catalogs
	Catalogs []string `json:"catalogs,omitempty"`
	// List of associated images
	Images []string `json:"images,omitempty"`
	// List of associated bastions
	Bastions []string `json:"bastions,omitempty"`
	// Indicates if the peered vnet will be using the customers gateway
	UseGateway *bool `json:"useGateway,omitempty"`
	// Indicates if route propagation in the route table should be disabled (option is valid only if customer is using gateway).
	DisableRoutePropagation *bool `json:"disableRoutePropagation,omitempty"`
	// The NAT gateway config
	NatGatewayConfig *NatGatewayModelOverview `json:"natGatewayConfig,omitempty"`
	// ID of the connection
	Id *string `json:"id,omitempty"`
	// The type of connection
	Type *OnPremConnectionType `json:"type,omitempty"`
	// Name of the connection
	Name *string `json:"name,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewVnetPeeringModelWithDefaults instantiates a new VnetPeeringModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVnetPeeringModelWithDefaults() *VnetPeeringModel {
	this := VnetPeeringModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetState() VnetPeeringState {
	if o == nil || IsNil(o.State) {
		var ret VnetPeeringState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetStateOk() (*VnetPeeringState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given VnetPeeringState and assigns it to the State field.
func (o *VnetPeeringModel) SetState(v VnetPeeringState) {
	o.State = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *VnetPeeringModel) SetError(v string) {
	o.Error = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *VnetPeeringModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *VnetPeeringModel) SetRegion(v string) {
	o.Region = &v
}

// GetSourceVnetRegion returns the SourceVnetRegion field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetSourceVnetRegion() string {
	if o == nil || IsNil(o.SourceVnetRegion) {
		var ret string
		return ret
	}
	return *o.SourceVnetRegion
}

// GetSourceVnetRegionOk returns a tuple with the SourceVnetRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetSourceVnetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceVnetRegion) {
		return nil, false
	}
	return o.SourceVnetRegion, true
}

// SetSourceVnetRegion gets a reference to the given string and assigns it to the SourceVnetRegion field.
func (o *VnetPeeringModel) SetSourceVnetRegion(v string) {
	o.SourceVnetRegion = &v
}

// GetIpAddressSpace returns the IpAddressSpace field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetIpAddressSpace() []string {
	if o == nil || IsNil(o.IpAddressSpace) {
		var ret []string
		return ret
	}
	return o.IpAddressSpace
}

// GetIpAddressSpaceOk returns a tuple with the IpAddressSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetIpAddressSpaceOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddressSpace) {
		return nil, false
	}
	return o.IpAddressSpace, true
}

// SetIpAddressSpace gets a reference to the given []string and assigns it to the IpAddressSpace field.
func (o *VnetPeeringModel) SetIpAddressSpace(v []string) {
	o.IpAddressSpace = v
}

// GetNumberOfAddressesInUse returns the NumberOfAddressesInUse field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetNumberOfAddressesInUse() int32 {
	if o == nil || IsNil(o.NumberOfAddressesInUse) {
		var ret int32
		return ret
	}
	return *o.NumberOfAddressesInUse
}

// GetNumberOfAddressesInUseOk returns a tuple with the NumberOfAddressesInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetNumberOfAddressesInUseOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfAddressesInUse) {
		return nil, false
	}
	return o.NumberOfAddressesInUse, true
}

// SetNumberOfAddressesInUse gets a reference to the given int32 and assigns it to the NumberOfAddressesInUse field.
func (o *VnetPeeringModel) SetNumberOfAddressesInUse(v int32) {
	o.NumberOfAddressesInUse = &v
}

// GetIsPeeringActive returns the IsPeeringActive field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetIsPeeringActive() bool {
	if o == nil || IsNil(o.IsPeeringActive) {
		var ret bool
		return ret
	}
	return *o.IsPeeringActive
}

// GetIsPeeringActiveOk returns a tuple with the IsPeeringActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetIsPeeringActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPeeringActive) {
		return nil, false
	}
	return o.IsPeeringActive, true
}

// SetIsPeeringActive gets a reference to the given bool and assigns it to the IsPeeringActive field.
func (o *VnetPeeringModel) SetIsPeeringActive(v bool) {
	o.IsPeeringActive = &v
}

// GetCitrixManaged returns the CitrixManaged field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetCitrixManaged() bool {
	if o == nil || IsNil(o.CitrixManaged) {
		var ret bool
		return ret
	}
	return *o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixManaged) {
		return nil, false
	}
	return o.CitrixManaged, true
}

// SetCitrixManaged gets a reference to the given bool and assigns it to the CitrixManaged field.
func (o *VnetPeeringModel) SetCitrixManaged(v bool) {
	o.CitrixManaged = &v
}

// GetPeeredVnetId returns the PeeredVnetId field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetPeeredVnetId() string {
	if o == nil || IsNil(o.PeeredVnetId) {
		var ret string
		return ret
	}
	return *o.PeeredVnetId
}

// GetPeeredVnetIdOk returns a tuple with the PeeredVnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetPeeredVnetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeeredVnetId) {
		return nil, false
	}
	return o.PeeredVnetId, true
}

// SetPeeredVnetId gets a reference to the given string and assigns it to the PeeredVnetId field.
func (o *VnetPeeringModel) SetPeeredVnetId(v string) {
	o.PeeredVnetId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *VnetPeeringModel) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *VnetPeeringModel) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *VnetPeeringModel) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetCatalogs returns the Catalogs field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetCatalogs() []string {
	if o == nil || IsNil(o.Catalogs) {
		var ret []string
		return ret
	}
	return o.Catalogs
}

// GetCatalogsOk returns a tuple with the Catalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetCatalogsOk() ([]string, bool) {
	if o == nil || IsNil(o.Catalogs) {
		return nil, false
	}
	return o.Catalogs, true
}

// SetCatalogs gets a reference to the given []string and assigns it to the Catalogs field.
func (o *VnetPeeringModel) SetCatalogs(v []string) {
	o.Catalogs = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetImages() []string {
	if o == nil || IsNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *VnetPeeringModel) SetImages(v []string) {
	o.Images = v
}

// GetBastions returns the Bastions field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetBastions() []string {
	if o == nil || IsNil(o.Bastions) {
		var ret []string
		return ret
	}
	return o.Bastions
}

// GetBastionsOk returns a tuple with the Bastions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetBastionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Bastions) {
		return nil, false
	}
	return o.Bastions, true
}

// SetBastions gets a reference to the given []string and assigns it to the Bastions field.
func (o *VnetPeeringModel) SetBastions(v []string) {
	o.Bastions = v
}

// GetUseGateway returns the UseGateway field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetUseGateway() bool {
	if o == nil || IsNil(o.UseGateway) {
		var ret bool
		return ret
	}
	return *o.UseGateway
}

// GetUseGatewayOk returns a tuple with the UseGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetUseGatewayOk() (*bool, bool) {
	if o == nil || IsNil(o.UseGateway) {
		return nil, false
	}
	return o.UseGateway, true
}

// SetUseGateway gets a reference to the given bool and assigns it to the UseGateway field.
func (o *VnetPeeringModel) SetUseGateway(v bool) {
	o.UseGateway = &v
}

// GetDisableRoutePropagation returns the DisableRoutePropagation field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetDisableRoutePropagation() bool {
	if o == nil || IsNil(o.DisableRoutePropagation) {
		var ret bool
		return ret
	}
	return *o.DisableRoutePropagation
}

// GetDisableRoutePropagationOk returns a tuple with the DisableRoutePropagation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetDisableRoutePropagationOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableRoutePropagation) {
		return nil, false
	}
	return o.DisableRoutePropagation, true
}

// SetDisableRoutePropagation gets a reference to the given bool and assigns it to the DisableRoutePropagation field.
func (o *VnetPeeringModel) SetDisableRoutePropagation(v bool) {
	o.DisableRoutePropagation = &v
}

// GetNatGatewayConfig returns the NatGatewayConfig field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetNatGatewayConfig() NatGatewayModelOverview {
	if o == nil || IsNil(o.NatGatewayConfig) {
		var ret NatGatewayModelOverview
		return ret
	}
	return *o.NatGatewayConfig
}

// GetNatGatewayConfigOk returns a tuple with the NatGatewayConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetNatGatewayConfigOk() (*NatGatewayModelOverview, bool) {
	if o == nil || IsNil(o.NatGatewayConfig) {
		return nil, false
	}
	return o.NatGatewayConfig, true
}

// SetNatGatewayConfig gets a reference to the given NatGatewayModelOverview and assigns it to the NatGatewayConfig field.
func (o *VnetPeeringModel) SetNatGatewayConfig(v NatGatewayModelOverview) {
	o.NatGatewayConfig = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VnetPeeringModel) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetType() OnPremConnectionType {
	if o == nil || IsNil(o.Type) {
		var ret OnPremConnectionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetTypeOk() (*OnPremConnectionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given OnPremConnectionType and assigns it to the Type field.
func (o *VnetPeeringModel) SetType(v OnPremConnectionType) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VnetPeeringModel) SetName(v string) {
	o.Name = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *VnetPeeringModel) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *VnetPeeringModel) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VnetPeeringModel) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *VnetPeeringModel) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o VnetPeeringModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VnetPeeringModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SourceVnetRegion) {
		toSerialize["sourceVnetRegion"] = o.SourceVnetRegion
	}
	if !IsNil(o.IpAddressSpace) {
		toSerialize["ipAddressSpace"] = o.IpAddressSpace
	}
	if !IsNil(o.NumberOfAddressesInUse) {
		toSerialize["numberOfAddressesInUse"] = o.NumberOfAddressesInUse
	}
	if !IsNil(o.IsPeeringActive) {
		toSerialize["isPeeringActive"] = o.IsPeeringActive
	}
	if !IsNil(o.CitrixManaged) {
		toSerialize["citrixManaged"] = o.CitrixManaged
	}
	if !IsNil(o.PeeredVnetId) {
		toSerialize["peeredVnetId"] = o.PeeredVnetId
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.DnsServers) {
		toSerialize["dnsServers"] = o.DnsServers
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.Catalogs) {
		toSerialize["catalogs"] = o.Catalogs
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Bastions) {
		toSerialize["bastions"] = o.Bastions
	}
	if !IsNil(o.UseGateway) {
		toSerialize["useGateway"] = o.UseGateway
	}
	if !IsNil(o.DisableRoutePropagation) {
		toSerialize["disableRoutePropagation"] = o.DisableRoutePropagation
	}
	if !IsNil(o.NatGatewayConfig) {
		toSerialize["natGatewayConfig"] = o.NatGatewayConfig
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableVnetPeeringModel struct {
	value *VnetPeeringModel
	isSet bool
}

func (v NullableVnetPeeringModel) Get() *VnetPeeringModel {
	return v.value
}

func (v *NullableVnetPeeringModel) Set(val *VnetPeeringModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVnetPeeringModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVnetPeeringModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVnetPeeringModel(val *VnetPeeringModel) *NullableVnetPeeringModel {
	return &NullableVnetPeeringModel{value: val, isSet: true}
}

func (v NullableVnetPeeringModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVnetPeeringModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
