/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdateAzureVpnConnectionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAzureVpnConnectionModel{}

// UpdateAzureVpnConnectionModel struct for UpdateAzureVpnConnectionModel
type UpdateAzureVpnConnectionModel struct {
	// Sku type for the virtual network gateway
	GatewaySku *string `json:"gatewaySku,omitempty"`
	// IP address of the gateway to connect to
	GatewayIP *string `json:"gatewayIP,omitempty"`
	// List of addresses that will be accessible behind the gateway
	LocalAddresses []ConnectionSubnet `json:"localAddresses,omitempty"`
	// Pre-shared key that will be used to configure the IPSec tunnel
	SharedKey *string `json:"sharedKey,omitempty"`
	// List of DNS Servers
	DnsServers []string `json:"dnsServers,omitempty"`
}

// NewUpdateAzureVpnConnectionModelWithDefaults instantiates a new UpdateAzureVpnConnectionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAzureVpnConnectionModelWithDefaults() *UpdateAzureVpnConnectionModel {
	this := UpdateAzureVpnConnectionModel{}
	return &this
}

// GetGatewaySku returns the GatewaySku field value if set, zero value otherwise.
func (o *UpdateAzureVpnConnectionModel) GetGatewaySku() string {
	if o == nil || IsNil(o.GatewaySku) {
		var ret string
		return ret
	}
	return *o.GatewaySku
}

// GetGatewaySkuOk returns a tuple with the GatewaySku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAzureVpnConnectionModel) GetGatewaySkuOk() (*string, bool) {
	if o == nil || IsNil(o.GatewaySku) {
		return nil, false
	}
	return o.GatewaySku, true
}

// SetGatewaySku gets a reference to the given string and assigns it to the GatewaySku field.
func (o *UpdateAzureVpnConnectionModel) SetGatewaySku(v string) {
	o.GatewaySku = &v
}

// GetGatewayIP returns the GatewayIP field value if set, zero value otherwise.
func (o *UpdateAzureVpnConnectionModel) GetGatewayIP() string {
	if o == nil || IsNil(o.GatewayIP) {
		var ret string
		return ret
	}
	return *o.GatewayIP
}

// GetGatewayIPOk returns a tuple with the GatewayIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAzureVpnConnectionModel) GetGatewayIPOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayIP) {
		return nil, false
	}
	return o.GatewayIP, true
}

// SetGatewayIP gets a reference to the given string and assigns it to the GatewayIP field.
func (o *UpdateAzureVpnConnectionModel) SetGatewayIP(v string) {
	o.GatewayIP = &v
}

// GetLocalAddresses returns the LocalAddresses field value if set, zero value otherwise.
func (o *UpdateAzureVpnConnectionModel) GetLocalAddresses() []ConnectionSubnet {
	if o == nil || IsNil(o.LocalAddresses) {
		var ret []ConnectionSubnet
		return ret
	}
	return o.LocalAddresses
}

// GetLocalAddressesOk returns a tuple with the LocalAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAzureVpnConnectionModel) GetLocalAddressesOk() ([]ConnectionSubnet, bool) {
	if o == nil || IsNil(o.LocalAddresses) {
		return nil, false
	}
	return o.LocalAddresses, true
}

// SetLocalAddresses gets a reference to the given []ConnectionSubnet and assigns it to the LocalAddresses field.
func (o *UpdateAzureVpnConnectionModel) SetLocalAddresses(v []ConnectionSubnet) {
	o.LocalAddresses = v
}

// GetSharedKey returns the SharedKey field value if set, zero value otherwise.
func (o *UpdateAzureVpnConnectionModel) GetSharedKey() string {
	if o == nil || IsNil(o.SharedKey) {
		var ret string
		return ret
	}
	return *o.SharedKey
}

// GetSharedKeyOk returns a tuple with the SharedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAzureVpnConnectionModel) GetSharedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SharedKey) {
		return nil, false
	}
	return o.SharedKey, true
}

// SetSharedKey gets a reference to the given string and assigns it to the SharedKey field.
func (o *UpdateAzureVpnConnectionModel) SetSharedKey(v string) {
	o.SharedKey = &v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *UpdateAzureVpnConnectionModel) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAzureVpnConnectionModel) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *UpdateAzureVpnConnectionModel) SetDnsServers(v []string) {
	o.DnsServers = v
}

func (o UpdateAzureVpnConnectionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAzureVpnConnectionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewaySku) {
		toSerialize["gatewaySku"] = o.GatewaySku
	}
	if !IsNil(o.GatewayIP) {
		toSerialize["gatewayIP"] = o.GatewayIP
	}
	if !IsNil(o.LocalAddresses) {
		toSerialize["localAddresses"] = o.LocalAddresses
	}
	if !IsNil(o.SharedKey) {
		toSerialize["sharedKey"] = o.SharedKey
	}
	if !IsNil(o.DnsServers) {
		toSerialize["dnsServers"] = o.DnsServers
	}
	return toSerialize, nil
}

type NullableUpdateAzureVpnConnectionModel struct {
	value *UpdateAzureVpnConnectionModel
	isSet bool
}

func (v NullableUpdateAzureVpnConnectionModel) Get() *UpdateAzureVpnConnectionModel {
	return v.value
}

func (v *NullableUpdateAzureVpnConnectionModel) Set(val *UpdateAzureVpnConnectionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAzureVpnConnectionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAzureVpnConnectionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAzureVpnConnectionModel(val *UpdateAzureVpnConnectionModel) *NullableUpdateAzureVpnConnectionModel {
	return &NullableUpdateAzureVpnConnectionModel{value: val, isSet: true}
}

func (v NullableUpdateAzureVpnConnectionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAzureVpnConnectionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
