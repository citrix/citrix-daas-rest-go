/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the AzureVpnConnectionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVpnConnectionModel{}

// AzureVpnConnectionModel struct for AzureVpnConnectionModel
type AzureVpnConnectionModel struct {
	// State of the vpn connection
	State *AzureVpnConnectionState `json:"state,omitempty"`
	// Tenant customer the connection is associated with
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// Name of the azure region where the connection will be created
	Region *string `json:"region,omitempty"`
	// Details of the vda subnet
	VdaSubnet *ConnectionSubnet `json:"vdaSubnet,omitempty"`
	// Details of the subnet the gateway uses to communicate
	GatewaySubnet *ConnectionSubnet `json:"gatewaySubnet,omitempty"`
	// IP address of the on-prem gateway
	LocalGatewayIP *string `json:"localGatewayIP,omitempty"`
	// List of DNS Servers
	DnsServers []string `json:"dnsServers,omitempty"`
	// List of addresses that will be accessible behind the gateway
	LocalAddresses []ConnectionSubnet `json:"localAddresses,omitempty"`
	// Status of the VPN connection
	ConnectionStatus *string `json:"connectionStatus,omitempty"`
	// IP address of the gateway for this connection
	GatewayIps []string `json:"gatewayIps,omitempty"`
	// Number of addresses in use on the VDA subnet
	NumberAddressesInUse *int32 `json:"numberAddressesInUse,omitempty"`
	// ID of the Managed Subscription the Connection is associated with.
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// The pre shared key that was used for the connection (obfuscated)
	SharedKey *string `json:"sharedKey,omitempty"`
	// The SKU type of the gateway
	GatewaySku *string `json:"gatewaySku,omitempty"`
	// Specifies if connection is active-standby or active-active
	ActiveActive *bool `json:"activeActive,omitempty"`
	// The transaction ID associated with the vpn connection
	TransactionId *string `json:"transactionId,omitempty"`
	// Error that occurred while creating vpn connection
	Error *string `json:"error,omitempty"`
	// List of associated catalogs
	Catalogs []string `json:"catalogs,omitempty"`
	// List of associated images
	Images []string `json:"images,omitempty"`
	// List of associated bastions
	Bastions []string `json:"bastions,omitempty"`
	// ID of the connection
	Id *string `json:"id,omitempty"`
	// The type of connection
	Type *OnPremConnectionType `json:"type,omitempty"`
	// Name of the connection
	Name *string `json:"name,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewAzureVpnConnectionModelWithDefaults instantiates a new AzureVpnConnectionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVpnConnectionModelWithDefaults() *AzureVpnConnectionModel {
	this := AzureVpnConnectionModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetState() AzureVpnConnectionState {
	if o == nil || IsNil(o.State) {
		var ret AzureVpnConnectionState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetStateOk() (*AzureVpnConnectionState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given AzureVpnConnectionState and assigns it to the State field.
func (o *AzureVpnConnectionModel) SetState(v AzureVpnConnectionState) {
	o.State = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *AzureVpnConnectionModel) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AzureVpnConnectionModel) SetRegion(v string) {
	o.Region = &v
}

// GetVdaSubnet returns the VdaSubnet field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetVdaSubnet() ConnectionSubnet {
	if o == nil || IsNil(o.VdaSubnet) {
		var ret ConnectionSubnet
		return ret
	}
	return *o.VdaSubnet
}

// GetVdaSubnetOk returns a tuple with the VdaSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetVdaSubnetOk() (*ConnectionSubnet, bool) {
	if o == nil || IsNil(o.VdaSubnet) {
		return nil, false
	}
	return o.VdaSubnet, true
}

// SetVdaSubnet gets a reference to the given ConnectionSubnet and assigns it to the VdaSubnet field.
func (o *AzureVpnConnectionModel) SetVdaSubnet(v ConnectionSubnet) {
	o.VdaSubnet = &v
}

// GetGatewaySubnet returns the GatewaySubnet field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetGatewaySubnet() ConnectionSubnet {
	if o == nil || IsNil(o.GatewaySubnet) {
		var ret ConnectionSubnet
		return ret
	}
	return *o.GatewaySubnet
}

// GetGatewaySubnetOk returns a tuple with the GatewaySubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetGatewaySubnetOk() (*ConnectionSubnet, bool) {
	if o == nil || IsNil(o.GatewaySubnet) {
		return nil, false
	}
	return o.GatewaySubnet, true
}

// SetGatewaySubnet gets a reference to the given ConnectionSubnet and assigns it to the GatewaySubnet field.
func (o *AzureVpnConnectionModel) SetGatewaySubnet(v ConnectionSubnet) {
	o.GatewaySubnet = &v
}

// GetLocalGatewayIP returns the LocalGatewayIP field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetLocalGatewayIP() string {
	if o == nil || IsNil(o.LocalGatewayIP) {
		var ret string
		return ret
	}
	return *o.LocalGatewayIP
}

// GetLocalGatewayIPOk returns a tuple with the LocalGatewayIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetLocalGatewayIPOk() (*string, bool) {
	if o == nil || IsNil(o.LocalGatewayIP) {
		return nil, false
	}
	return o.LocalGatewayIP, true
}

// SetLocalGatewayIP gets a reference to the given string and assigns it to the LocalGatewayIP field.
func (o *AzureVpnConnectionModel) SetLocalGatewayIP(v string) {
	o.LocalGatewayIP = &v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *AzureVpnConnectionModel) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetLocalAddresses returns the LocalAddresses field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetLocalAddresses() []ConnectionSubnet {
	if o == nil || IsNil(o.LocalAddresses) {
		var ret []ConnectionSubnet
		return ret
	}
	return o.LocalAddresses
}

// GetLocalAddressesOk returns a tuple with the LocalAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetLocalAddressesOk() ([]ConnectionSubnet, bool) {
	if o == nil || IsNil(o.LocalAddresses) {
		return nil, false
	}
	return o.LocalAddresses, true
}

// SetLocalAddresses gets a reference to the given []ConnectionSubnet and assigns it to the LocalAddresses field.
func (o *AzureVpnConnectionModel) SetLocalAddresses(v []ConnectionSubnet) {
	o.LocalAddresses = v
}

// GetConnectionStatus returns the ConnectionStatus field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetConnectionStatus() string {
	if o == nil || IsNil(o.ConnectionStatus) {
		var ret string
		return ret
	}
	return *o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetConnectionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionStatus) {
		return nil, false
	}
	return o.ConnectionStatus, true
}

// SetConnectionStatus gets a reference to the given string and assigns it to the ConnectionStatus field.
func (o *AzureVpnConnectionModel) SetConnectionStatus(v string) {
	o.ConnectionStatus = &v
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetGatewayIps() []string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret []string
		return ret
	}
	return o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// SetGatewayIps gets a reference to the given []string and assigns it to the GatewayIps field.
func (o *AzureVpnConnectionModel) SetGatewayIps(v []string) {
	o.GatewayIps = v
}

// GetNumberAddressesInUse returns the NumberAddressesInUse field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetNumberAddressesInUse() int32 {
	if o == nil || IsNil(o.NumberAddressesInUse) {
		var ret int32
		return ret
	}
	return *o.NumberAddressesInUse
}

// GetNumberAddressesInUseOk returns a tuple with the NumberAddressesInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetNumberAddressesInUseOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberAddressesInUse) {
		return nil, false
	}
	return o.NumberAddressesInUse, true
}

// SetNumberAddressesInUse gets a reference to the given int32 and assigns it to the NumberAddressesInUse field.
func (o *AzureVpnConnectionModel) SetNumberAddressesInUse(v int32) {
	o.NumberAddressesInUse = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzureVpnConnectionModel) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSharedKey returns the SharedKey field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetSharedKey() string {
	if o == nil || IsNil(o.SharedKey) {
		var ret string
		return ret
	}
	return *o.SharedKey
}

// GetSharedKeyOk returns a tuple with the SharedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetSharedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SharedKey) {
		return nil, false
	}
	return o.SharedKey, true
}

// SetSharedKey gets a reference to the given string and assigns it to the SharedKey field.
func (o *AzureVpnConnectionModel) SetSharedKey(v string) {
	o.SharedKey = &v
}

// GetGatewaySku returns the GatewaySku field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetGatewaySku() string {
	if o == nil || IsNil(o.GatewaySku) {
		var ret string
		return ret
	}
	return *o.GatewaySku
}

// GetGatewaySkuOk returns a tuple with the GatewaySku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetGatewaySkuOk() (*string, bool) {
	if o == nil || IsNil(o.GatewaySku) {
		return nil, false
	}
	return o.GatewaySku, true
}

// SetGatewaySku gets a reference to the given string and assigns it to the GatewaySku field.
func (o *AzureVpnConnectionModel) SetGatewaySku(v string) {
	o.GatewaySku = &v
}

// GetActiveActive returns the ActiveActive field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetActiveActive() bool {
	if o == nil || IsNil(o.ActiveActive) {
		var ret bool
		return ret
	}
	return *o.ActiveActive
}

// GetActiveActiveOk returns a tuple with the ActiveActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetActiveActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.ActiveActive) {
		return nil, false
	}
	return o.ActiveActive, true
}

// SetActiveActive gets a reference to the given bool and assigns it to the ActiveActive field.
func (o *AzureVpnConnectionModel) SetActiveActive(v bool) {
	o.ActiveActive = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *AzureVpnConnectionModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *AzureVpnConnectionModel) SetError(v string) {
	o.Error = &v
}

// GetCatalogs returns the Catalogs field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetCatalogs() []string {
	if o == nil || IsNil(o.Catalogs) {
		var ret []string
		return ret
	}
	return o.Catalogs
}

// GetCatalogsOk returns a tuple with the Catalogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetCatalogsOk() ([]string, bool) {
	if o == nil || IsNil(o.Catalogs) {
		return nil, false
	}
	return o.Catalogs, true
}

// SetCatalogs gets a reference to the given []string and assigns it to the Catalogs field.
func (o *AzureVpnConnectionModel) SetCatalogs(v []string) {
	o.Catalogs = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetImages() []string {
	if o == nil || IsNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *AzureVpnConnectionModel) SetImages(v []string) {
	o.Images = v
}

// GetBastions returns the Bastions field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetBastions() []string {
	if o == nil || IsNil(o.Bastions) {
		var ret []string
		return ret
	}
	return o.Bastions
}

// GetBastionsOk returns a tuple with the Bastions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetBastionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Bastions) {
		return nil, false
	}
	return o.Bastions, true
}

// SetBastions gets a reference to the given []string and assigns it to the Bastions field.
func (o *AzureVpnConnectionModel) SetBastions(v []string) {
	o.Bastions = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureVpnConnectionModel) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetType() OnPremConnectionType {
	if o == nil || IsNil(o.Type) {
		var ret OnPremConnectionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetTypeOk() (*OnPremConnectionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given OnPremConnectionType and assigns it to the Type field.
func (o *AzureVpnConnectionModel) SetType(v OnPremConnectionType) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureVpnConnectionModel) SetName(v string) {
	o.Name = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *AzureVpnConnectionModel) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *AzureVpnConnectionModel) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVpnConnectionModel) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *AzureVpnConnectionModel) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o AzureVpnConnectionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVpnConnectionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.VdaSubnet) {
		toSerialize["vdaSubnet"] = o.VdaSubnet
	}
	if !IsNil(o.GatewaySubnet) {
		toSerialize["gatewaySubnet"] = o.GatewaySubnet
	}
	if !IsNil(o.LocalGatewayIP) {
		toSerialize["localGatewayIP"] = o.LocalGatewayIP
	}
	if !IsNil(o.DnsServers) {
		toSerialize["dnsServers"] = o.DnsServers
	}
	if !IsNil(o.LocalAddresses) {
		toSerialize["localAddresses"] = o.LocalAddresses
	}
	if !IsNil(o.ConnectionStatus) {
		toSerialize["connectionStatus"] = o.ConnectionStatus
	}
	if !IsNil(o.GatewayIps) {
		toSerialize["gatewayIps"] = o.GatewayIps
	}
	if !IsNil(o.NumberAddressesInUse) {
		toSerialize["numberAddressesInUse"] = o.NumberAddressesInUse
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.SharedKey) {
		toSerialize["sharedKey"] = o.SharedKey
	}
	if !IsNil(o.GatewaySku) {
		toSerialize["gatewaySku"] = o.GatewaySku
	}
	if !IsNil(o.ActiveActive) {
		toSerialize["activeActive"] = o.ActiveActive
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Catalogs) {
		toSerialize["catalogs"] = o.Catalogs
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Bastions) {
		toSerialize["bastions"] = o.Bastions
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableAzureVpnConnectionModel struct {
	value *AzureVpnConnectionModel
	isSet bool
}

func (v NullableAzureVpnConnectionModel) Get() *AzureVpnConnectionModel {
	return v.value
}

func (v *NullableAzureVpnConnectionModel) Set(val *AzureVpnConnectionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVpnConnectionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVpnConnectionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVpnConnectionModel(val *AzureVpnConnectionModel) *NullableAzureVpnConnectionModel {
	return &NullableAzureVpnConnectionModel{value: val, isSet: true}
}

func (v NullableAzureVpnConnectionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVpnConnectionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
