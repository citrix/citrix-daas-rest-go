/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the OnboardingStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnboardingStatusModel{}

// OnboardingStatusModel struct for OnboardingStatusModel
type OnboardingStatusModel struct {
	// Current state of onboarind process
	State *OnboardingState `json:"state,omitempty"`
	// Reason codes that caused onboarding to fail
	FailureReason *OnboardingFailureReason `json:"failureReason,omitempty"`
	// Failure details
	ErrorDetails *string `json:"errorDetails,omitempty"`
}

// NewOnboardingStatusModelWithDefaults instantiates a new OnboardingStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnboardingStatusModelWithDefaults() *OnboardingStatusModel {
	this := OnboardingStatusModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *OnboardingStatusModel) GetState() OnboardingState {
	if o == nil || IsNil(o.State) {
		var ret OnboardingState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStatusModel) GetStateOk() (*OnboardingState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given OnboardingState and assigns it to the State field.
func (o *OnboardingStatusModel) SetState(v OnboardingState) {
	o.State = &v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *OnboardingStatusModel) GetFailureReason() OnboardingFailureReason {
	if o == nil || IsNil(o.FailureReason) {
		var ret OnboardingFailureReason
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStatusModel) GetFailureReasonOk() (*OnboardingFailureReason, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// SetFailureReason gets a reference to the given OnboardingFailureReason and assigns it to the FailureReason field.
func (o *OnboardingStatusModel) SetFailureReason(v OnboardingFailureReason) {
	o.FailureReason = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *OnboardingStatusModel) GetErrorDetails() string {
	if o == nil || IsNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnboardingStatusModel) GetErrorDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDetails) {
		return nil, false
	}
	return o.ErrorDetails, true
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *OnboardingStatusModel) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

func (o OnboardingStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnboardingStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	if !IsNil(o.ErrorDetails) {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	return toSerialize, nil
}

type NullableOnboardingStatusModel struct {
	value *OnboardingStatusModel
	isSet bool
}

func (v NullableOnboardingStatusModel) Get() *OnboardingStatusModel {
	return v.value
}

func (v *NullableOnboardingStatusModel) Set(val *OnboardingStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOnboardingStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOnboardingStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnboardingStatusModel(val *OnboardingStatusModel) *NullableOnboardingStatusModel {
	return &NullableOnboardingStatusModel{value: val, isSet: true}
}

func (v NullableOnboardingStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnboardingStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
