/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ConsumptionStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumptionStatusModel{}

// ConsumptionStatusModel struct for ConsumptionStatusModel
type ConsumptionStatusModel struct {
	MonthlyConsumptionCommitment *float64                            `json:"monthlyConsumptionCommitment,omitempty"`
	MonthlyConsumption           *float64                            `json:"monthlyConsumption,omitempty"`
	TermConsumptionCommitment    *float64                            `json:"termConsumptionCommitment,omitempty"`
	TermConsumption              *float64                            `json:"termConsumption,omitempty"`
	TotalConsumption             *float64                            `json:"totalConsumption,omitempty"`
	NumberOfLicensedUsers        *int32                              `json:"numberOfLicensedUsers,omitempty"`
	ConsumptionSettings          *DataStoreConsumptionThresholdModel `json:"consumptionSettings,omitempty"`
	StaleData                    *bool                               `json:"staleData,omitempty"`
}

// NewConsumptionStatusModelWithDefaults instantiates a new ConsumptionStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumptionStatusModelWithDefaults() *ConsumptionStatusModel {
	this := ConsumptionStatusModel{}
	return &this
}

// GetMonthlyConsumptionCommitment returns the MonthlyConsumptionCommitment field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetMonthlyConsumptionCommitment() float64 {
	if o == nil || IsNil(o.MonthlyConsumptionCommitment) {
		var ret float64
		return ret
	}
	return *o.MonthlyConsumptionCommitment
}

// GetMonthlyConsumptionCommitmentOk returns a tuple with the MonthlyConsumptionCommitment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetMonthlyConsumptionCommitmentOk() (*float64, bool) {
	if o == nil || IsNil(o.MonthlyConsumptionCommitment) {
		return nil, false
	}
	return o.MonthlyConsumptionCommitment, true
}

// SetMonthlyConsumptionCommitment gets a reference to the given float64 and assigns it to the MonthlyConsumptionCommitment field.
func (o *ConsumptionStatusModel) SetMonthlyConsumptionCommitment(v float64) {
	o.MonthlyConsumptionCommitment = &v
}

// GetMonthlyConsumption returns the MonthlyConsumption field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetMonthlyConsumption() float64 {
	if o == nil || IsNil(o.MonthlyConsumption) {
		var ret float64
		return ret
	}
	return *o.MonthlyConsumption
}

// GetMonthlyConsumptionOk returns a tuple with the MonthlyConsumption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetMonthlyConsumptionOk() (*float64, bool) {
	if o == nil || IsNil(o.MonthlyConsumption) {
		return nil, false
	}
	return o.MonthlyConsumption, true
}

// SetMonthlyConsumption gets a reference to the given float64 and assigns it to the MonthlyConsumption field.
func (o *ConsumptionStatusModel) SetMonthlyConsumption(v float64) {
	o.MonthlyConsumption = &v
}

// GetTermConsumptionCommitment returns the TermConsumptionCommitment field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetTermConsumptionCommitment() float64 {
	if o == nil || IsNil(o.TermConsumptionCommitment) {
		var ret float64
		return ret
	}
	return *o.TermConsumptionCommitment
}

// GetTermConsumptionCommitmentOk returns a tuple with the TermConsumptionCommitment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetTermConsumptionCommitmentOk() (*float64, bool) {
	if o == nil || IsNil(o.TermConsumptionCommitment) {
		return nil, false
	}
	return o.TermConsumptionCommitment, true
}

// SetTermConsumptionCommitment gets a reference to the given float64 and assigns it to the TermConsumptionCommitment field.
func (o *ConsumptionStatusModel) SetTermConsumptionCommitment(v float64) {
	o.TermConsumptionCommitment = &v
}

// GetTermConsumption returns the TermConsumption field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetTermConsumption() float64 {
	if o == nil || IsNil(o.TermConsumption) {
		var ret float64
		return ret
	}
	return *o.TermConsumption
}

// GetTermConsumptionOk returns a tuple with the TermConsumption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetTermConsumptionOk() (*float64, bool) {
	if o == nil || IsNil(o.TermConsumption) {
		return nil, false
	}
	return o.TermConsumption, true
}

// SetTermConsumption gets a reference to the given float64 and assigns it to the TermConsumption field.
func (o *ConsumptionStatusModel) SetTermConsumption(v float64) {
	o.TermConsumption = &v
}

// GetTotalConsumption returns the TotalConsumption field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetTotalConsumption() float64 {
	if o == nil || IsNil(o.TotalConsumption) {
		var ret float64
		return ret
	}
	return *o.TotalConsumption
}

// GetTotalConsumptionOk returns a tuple with the TotalConsumption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetTotalConsumptionOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalConsumption) {
		return nil, false
	}
	return o.TotalConsumption, true
}

// SetTotalConsumption gets a reference to the given float64 and assigns it to the TotalConsumption field.
func (o *ConsumptionStatusModel) SetTotalConsumption(v float64) {
	o.TotalConsumption = &v
}

// GetNumberOfLicensedUsers returns the NumberOfLicensedUsers field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetNumberOfLicensedUsers() int32 {
	if o == nil || IsNil(o.NumberOfLicensedUsers) {
		var ret int32
		return ret
	}
	return *o.NumberOfLicensedUsers
}

// GetNumberOfLicensedUsersOk returns a tuple with the NumberOfLicensedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetNumberOfLicensedUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfLicensedUsers) {
		return nil, false
	}
	return o.NumberOfLicensedUsers, true
}

// SetNumberOfLicensedUsers gets a reference to the given int32 and assigns it to the NumberOfLicensedUsers field.
func (o *ConsumptionStatusModel) SetNumberOfLicensedUsers(v int32) {
	o.NumberOfLicensedUsers = &v
}

// GetConsumptionSettings returns the ConsumptionSettings field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetConsumptionSettings() DataStoreConsumptionThresholdModel {
	if o == nil || IsNil(o.ConsumptionSettings) {
		var ret DataStoreConsumptionThresholdModel
		return ret
	}
	return *o.ConsumptionSettings
}

// GetConsumptionSettingsOk returns a tuple with the ConsumptionSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetConsumptionSettingsOk() (*DataStoreConsumptionThresholdModel, bool) {
	if o == nil || IsNil(o.ConsumptionSettings) {
		return nil, false
	}
	return o.ConsumptionSettings, true
}

// SetConsumptionSettings gets a reference to the given DataStoreConsumptionThresholdModel and assigns it to the ConsumptionSettings field.
func (o *ConsumptionStatusModel) SetConsumptionSettings(v DataStoreConsumptionThresholdModel) {
	o.ConsumptionSettings = &v
}

// GetStaleData returns the StaleData field value if set, zero value otherwise.
func (o *ConsumptionStatusModel) GetStaleData() bool {
	if o == nil || IsNil(o.StaleData) {
		var ret bool
		return ret
	}
	return *o.StaleData
}

// GetStaleDataOk returns a tuple with the StaleData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumptionStatusModel) GetStaleDataOk() (*bool, bool) {
	if o == nil || IsNil(o.StaleData) {
		return nil, false
	}
	return o.StaleData, true
}

// SetStaleData gets a reference to the given bool and assigns it to the StaleData field.
func (o *ConsumptionStatusModel) SetStaleData(v bool) {
	o.StaleData = &v
}

func (o ConsumptionStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumptionStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MonthlyConsumptionCommitment) {
		toSerialize["monthlyConsumptionCommitment"] = o.MonthlyConsumptionCommitment
	}
	if !IsNil(o.MonthlyConsumption) {
		toSerialize["monthlyConsumption"] = o.MonthlyConsumption
	}
	if !IsNil(o.TermConsumptionCommitment) {
		toSerialize["termConsumptionCommitment"] = o.TermConsumptionCommitment
	}
	if !IsNil(o.TermConsumption) {
		toSerialize["termConsumption"] = o.TermConsumption
	}
	if !IsNil(o.TotalConsumption) {
		toSerialize["totalConsumption"] = o.TotalConsumption
	}
	if !IsNil(o.NumberOfLicensedUsers) {
		toSerialize["numberOfLicensedUsers"] = o.NumberOfLicensedUsers
	}
	if !IsNil(o.ConsumptionSettings) {
		toSerialize["consumptionSettings"] = o.ConsumptionSettings
	}
	if !IsNil(o.StaleData) {
		toSerialize["staleData"] = o.StaleData
	}
	return toSerialize, nil
}

type NullableConsumptionStatusModel struct {
	value *ConsumptionStatusModel
	isSet bool
}

func (v NullableConsumptionStatusModel) Get() *ConsumptionStatusModel {
	return v.value
}

func (v *NullableConsumptionStatusModel) Set(val *ConsumptionStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumptionStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumptionStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumptionStatusModel(val *ConsumptionStatusModel) *NullableConsumptionStatusModel {
	return &NullableConsumptionStatusModel{value: val, isSet: true}
}

func (v NullableConsumptionStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumptionStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
