/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the DataStoreCustomerPowerResourcesModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataStoreCustomerPowerResourcesModel{}

// DataStoreCustomerPowerResourcesModel struct for DataStoreCustomerPowerResourcesModel
type DataStoreCustomerPowerResourcesModel struct {
	Id        *string                  `json:"id,omitempty"`
	Mode      *PowerMode               `json:"mode,omitempty"`
	Status    *PowerResourcesJobStatus `json:"status,omitempty"`
	Error     *string                  `json:"error,omitempty"`
	CreatedAt *time.Time               `json:"createdAt,omitempty"`
	StartedAt *time.Time               `json:"startedAt,omitempty"`
	EndedAt   *time.Time               `json:"endedAt,omitempty"`
}

// NewDataStoreCustomerPowerResourcesModelWithDefaults instantiates a new DataStoreCustomerPowerResourcesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreCustomerPowerResourcesModelWithDefaults() *DataStoreCustomerPowerResourcesModel {
	this := DataStoreCustomerPowerResourcesModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DataStoreCustomerPowerResourcesModel) SetId(v string) {
	o.Id = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetMode() PowerMode {
	if o == nil || IsNil(o.Mode) {
		var ret PowerMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetModeOk() (*PowerMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// SetMode gets a reference to the given PowerMode and assigns it to the Mode field.
func (o *DataStoreCustomerPowerResourcesModel) SetMode(v PowerMode) {
	o.Mode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetStatus() PowerResourcesJobStatus {
	if o == nil || IsNil(o.Status) {
		var ret PowerResourcesJobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetStatusOk() (*PowerResourcesJobStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given PowerResourcesJobStatus and assigns it to the Status field.
func (o *DataStoreCustomerPowerResourcesModel) SetStatus(v PowerResourcesJobStatus) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *DataStoreCustomerPowerResourcesModel) SetError(v string) {
	o.Error = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *DataStoreCustomerPowerResourcesModel) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *DataStoreCustomerPowerResourcesModel) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *DataStoreCustomerPowerResourcesModel) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreCustomerPowerResourcesModel) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *DataStoreCustomerPowerResourcesModel) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

func (o DataStoreCustomerPowerResourcesModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataStoreCustomerPowerResourcesModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EndedAt) {
		toSerialize["endedAt"] = o.EndedAt
	}
	return toSerialize, nil
}

type NullableDataStoreCustomerPowerResourcesModel struct {
	value *DataStoreCustomerPowerResourcesModel
	isSet bool
}

func (v NullableDataStoreCustomerPowerResourcesModel) Get() *DataStoreCustomerPowerResourcesModel {
	return v.value
}

func (v *NullableDataStoreCustomerPowerResourcesModel) Set(val *DataStoreCustomerPowerResourcesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreCustomerPowerResourcesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreCustomerPowerResourcesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreCustomerPowerResourcesModel(val *DataStoreCustomerPowerResourcesModel) *NullableDataStoreCustomerPowerResourcesModel {
	return &NullableDataStoreCustomerPowerResourcesModel{value: val, isSet: true}
}

func (v NullableDataStoreCustomerPowerResourcesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreCustomerPowerResourcesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
