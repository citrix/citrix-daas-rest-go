/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the BastionAndRdpAccessOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BastionAndRdpAccessOverview{}

// BastionAndRdpAccessOverview struct for BastionAndRdpAccessOverview
type BastionAndRdpAccessOverview struct {
	// Id of the bastion
	Id *string `json:"id,omitempty"`
	// Name of the bastion
	Name *string `json:"name,omitempty"`
	// The current state of the bastion
	State *string `json:"state,omitempty"`
	// Error message if bastion is in failed state
	Error *string `json:"error,omitempty"`
	// The name of the Vnet in which the bastion is created
	VnetName *string `json:"vnetName,omitempty"`
	// The address space of the Vnet in which the bastion is created
	VnetAddressSpace *string `json:"vnetAddressSpace,omitempty"`
	// The Ip Address prefix, if any, to which the bastion rdp access is restricted
	RestrictedIpAddressPrefix *string `json:"restrictedIpAddressPrefix,omitempty"`
	// The transaction ID associated with the bastion
	TransactionId *string `json:"transactionId,omitempty"`
	// A boolean to check if the rdp file has been requested
	HasRdpFileBeenRequested *bool `json:"hasRdpFileBeenRequested,omitempty"`
	// Specifies if it is a bastion or a rdp access
	Type *string `json:"type,omitempty"`
	// Indicates that partner-tenant relationship exists if not null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// DateTime when the import image job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time in minute for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewBastionAndRdpAccessOverviewWithDefaults instantiates a new BastionAndRdpAccessOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBastionAndRdpAccessOverviewWithDefaults() *BastionAndRdpAccessOverview {
	this := BastionAndRdpAccessOverview{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BastionAndRdpAccessOverview) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BastionAndRdpAccessOverview) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *BastionAndRdpAccessOverview) SetState(v string) {
	o.State = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *BastionAndRdpAccessOverview) SetError(v string) {
	o.Error = &v
}

// GetVnetName returns the VnetName field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetVnetName() string {
	if o == nil || IsNil(o.VnetName) {
		var ret string
		return ret
	}
	return *o.VnetName
}

// GetVnetNameOk returns a tuple with the VnetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetVnetNameOk() (*string, bool) {
	if o == nil || IsNil(o.VnetName) {
		return nil, false
	}
	return o.VnetName, true
}

// SetVnetName gets a reference to the given string and assigns it to the VnetName field.
func (o *BastionAndRdpAccessOverview) SetVnetName(v string) {
	o.VnetName = &v
}

// GetVnetAddressSpace returns the VnetAddressSpace field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetVnetAddressSpace() string {
	if o == nil || IsNil(o.VnetAddressSpace) {
		var ret string
		return ret
	}
	return *o.VnetAddressSpace
}

// GetVnetAddressSpaceOk returns a tuple with the VnetAddressSpace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetVnetAddressSpaceOk() (*string, bool) {
	if o == nil || IsNil(o.VnetAddressSpace) {
		return nil, false
	}
	return o.VnetAddressSpace, true
}

// SetVnetAddressSpace gets a reference to the given string and assigns it to the VnetAddressSpace field.
func (o *BastionAndRdpAccessOverview) SetVnetAddressSpace(v string) {
	o.VnetAddressSpace = &v
}

// GetRestrictedIpAddressPrefix returns the RestrictedIpAddressPrefix field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetRestrictedIpAddressPrefix() string {
	if o == nil || IsNil(o.RestrictedIpAddressPrefix) {
		var ret string
		return ret
	}
	return *o.RestrictedIpAddressPrefix
}

// GetRestrictedIpAddressPrefixOk returns a tuple with the RestrictedIpAddressPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetRestrictedIpAddressPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictedIpAddressPrefix) {
		return nil, false
	}
	return o.RestrictedIpAddressPrefix, true
}

// SetRestrictedIpAddressPrefix gets a reference to the given string and assigns it to the RestrictedIpAddressPrefix field.
func (o *BastionAndRdpAccessOverview) SetRestrictedIpAddressPrefix(v string) {
	o.RestrictedIpAddressPrefix = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *BastionAndRdpAccessOverview) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetHasRdpFileBeenRequested returns the HasRdpFileBeenRequested field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetHasRdpFileBeenRequested() bool {
	if o == nil || IsNil(o.HasRdpFileBeenRequested) {
		var ret bool
		return ret
	}
	return *o.HasRdpFileBeenRequested
}

// GetHasRdpFileBeenRequestedOk returns a tuple with the HasRdpFileBeenRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetHasRdpFileBeenRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.HasRdpFileBeenRequested) {
		return nil, false
	}
	return o.HasRdpFileBeenRequested, true
}

// SetHasRdpFileBeenRequested gets a reference to the given bool and assigns it to the HasRdpFileBeenRequested field.
func (o *BastionAndRdpAccessOverview) SetHasRdpFileBeenRequested(v bool) {
	o.HasRdpFileBeenRequested = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BastionAndRdpAccessOverview) SetType(v string) {
	o.Type = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *BastionAndRdpAccessOverview) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *BastionAndRdpAccessOverview) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *BastionAndRdpAccessOverview) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BastionAndRdpAccessOverview) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *BastionAndRdpAccessOverview) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o BastionAndRdpAccessOverview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BastionAndRdpAccessOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.VnetName) {
		toSerialize["vnetName"] = o.VnetName
	}
	if !IsNil(o.VnetAddressSpace) {
		toSerialize["vnetAddressSpace"] = o.VnetAddressSpace
	}
	if !IsNil(o.RestrictedIpAddressPrefix) {
		toSerialize["restrictedIpAddressPrefix"] = o.RestrictedIpAddressPrefix
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.HasRdpFileBeenRequested) {
		toSerialize["hasRdpFileBeenRequested"] = o.HasRdpFileBeenRequested
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableBastionAndRdpAccessOverview struct {
	value *BastionAndRdpAccessOverview
	isSet bool
}

func (v NullableBastionAndRdpAccessOverview) Get() *BastionAndRdpAccessOverview {
	return v.value
}

func (v *NullableBastionAndRdpAccessOverview) Set(val *BastionAndRdpAccessOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableBastionAndRdpAccessOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableBastionAndRdpAccessOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBastionAndRdpAccessOverview(val *BastionAndRdpAccessOverview) *NullableBastionAndRdpAccessOverview {
	return &NullableBastionAndRdpAccessOverview{value: val, isSet: true}
}

func (v NullableBastionAndRdpAccessOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBastionAndRdpAccessOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
