/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// OperationSwitch the model 'OperationSwitch'
type OperationSwitch string

// List of OperationSwitch
const (
	OPERATIONSWITCH_DRY_RUN OperationSwitch = "DryRun"
	OPERATIONSWITCH_CONFIRM OperationSwitch = "Confirm"
)

// All allowed values of OperationSwitch enum
var AllowedOperationSwitchEnumValues = []OperationSwitch{
	"DryRun",
	"Confirm",
}

func (v *OperationSwitch) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = OperationSwitch(value)
	return nil
}

// NewOperationSwitchFromValue returns a pointer to a valid OperationSwitch
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOperationSwitchFromValue(v string) (*OperationSwitch, error) {
	ev := OperationSwitch(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OperationSwitch: valid values are %v", v, AllowedOperationSwitchEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OperationSwitch) IsValid() bool {
	for _, existing := range AllowedOperationSwitchEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OperationSwitch value
func (v OperationSwitch) Ptr() *OperationSwitch {
	return &v
}

type NullableOperationSwitch struct {
	value *OperationSwitch
	isSet bool
}

func (v NullableOperationSwitch) Get() *OperationSwitch {
	return v.value
}

func (v *NullableOperationSwitch) Set(val *OperationSwitch) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationSwitch) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationSwitch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationSwitch(val *OperationSwitch) *NullableOperationSwitch {
	return &NullableOperationSwitch{value: val, isSet: true}
}

func (v NullableOperationSwitch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationSwitch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
