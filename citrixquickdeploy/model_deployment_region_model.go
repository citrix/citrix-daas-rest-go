/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the DeploymentRegionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentRegionModel{}

// DeploymentRegionModel Region where a managed catalog without on-prem connectivity can be hosted
type DeploymentRegionModel struct {
	// ID of the region
	Id *string `json:"id,omitempty"`
	// Display name of the region
	Name *string `json:"name,omitempty"`
	// Indicates if non-domain joined catalogs are supported in this region
	NonDomainJoinedCatalogsSupported *bool `json:"nonDomainJoinedCatalogsSupported,omitempty"`
	// Indicates that the region is the default to use
	IsDefault *bool `json:"isDefault,omitempty"`
	// Inidicates if the regino is hidden from the UI
	IsHidden *bool `json:"isHidden,omitempty"`
}

// NewDeploymentRegionModelWithDefaults instantiates a new DeploymentRegionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentRegionModelWithDefaults() *DeploymentRegionModel {
	this := DeploymentRegionModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeploymentRegionModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeploymentRegionModel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeploymentRegionModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeploymentRegionModel) SetName(v string) {
	o.Name = &v
}

// GetNonDomainJoinedCatalogsSupported returns the NonDomainJoinedCatalogsSupported field value if set, zero value otherwise.
func (o *DeploymentRegionModel) GetNonDomainJoinedCatalogsSupported() bool {
	if o == nil || IsNil(o.NonDomainJoinedCatalogsSupported) {
		var ret bool
		return ret
	}
	return *o.NonDomainJoinedCatalogsSupported
}

// GetNonDomainJoinedCatalogsSupportedOk returns a tuple with the NonDomainJoinedCatalogsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionModel) GetNonDomainJoinedCatalogsSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.NonDomainJoinedCatalogsSupported) {
		return nil, false
	}
	return o.NonDomainJoinedCatalogsSupported, true
}

// SetNonDomainJoinedCatalogsSupported gets a reference to the given bool and assigns it to the NonDomainJoinedCatalogsSupported field.
func (o *DeploymentRegionModel) SetNonDomainJoinedCatalogsSupported(v bool) {
	o.NonDomainJoinedCatalogsSupported = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *DeploymentRegionModel) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionModel) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *DeploymentRegionModel) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *DeploymentRegionModel) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRegionModel) GetIsHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHidden) {
		return nil, false
	}
	return o.IsHidden, true
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *DeploymentRegionModel) SetIsHidden(v bool) {
	o.IsHidden = &v
}

func (o DeploymentRegionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentRegionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NonDomainJoinedCatalogsSupported) {
		toSerialize["nonDomainJoinedCatalogsSupported"] = o.NonDomainJoinedCatalogsSupported
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.IsHidden) {
		toSerialize["isHidden"] = o.IsHidden
	}
	return toSerialize, nil
}

type NullableDeploymentRegionModel struct {
	value *DeploymentRegionModel
	isSet bool
}

func (v NullableDeploymentRegionModel) Get() *DeploymentRegionModel {
	return v.value
}

func (v *NullableDeploymentRegionModel) Set(val *DeploymentRegionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentRegionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentRegionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentRegionModel(val *DeploymentRegionModel) *NullableDeploymentRegionModel {
	return &NullableDeploymentRegionModel{value: val, isSet: true}
}

func (v NullableDeploymentRegionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentRegionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
