/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"fmt"
)

// AzureVmOperation the model 'AzureVmOperation'
type AzureVmOperation string

// List of AzureVmOperation
const (
	AZUREVMOPERATION_REBOOT  AzureVmOperation = "Reboot"
	AZUREVMOPERATION_TURN_ON AzureVmOperation = "TurnOn"
)

// All allowed values of AzureVmOperation enum
var AllowedAzureVmOperationEnumValues = []AzureVmOperation{
	"Reboot",
	"TurnOn",
}

func (v *AzureVmOperation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}

	*v = AzureVmOperation(value)
	return nil
}

// NewAzureVmOperationFromValue returns a pointer to a valid AzureVmOperation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAzureVmOperationFromValue(v string) (*AzureVmOperation, error) {
	ev := AzureVmOperation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AzureVmOperation: valid values are %v", v, AllowedAzureVmOperationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AzureVmOperation) IsValid() bool {
	for _, existing := range AllowedAzureVmOperationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AzureVmOperation value
func (v AzureVmOperation) Ptr() *AzureVmOperation {
	return &v
}

type NullableAzureVmOperation struct {
	value *AzureVmOperation
	isSet bool
}

func (v NullableAzureVmOperation) Get() *AzureVmOperation {
	return v.value
}

func (v *NullableAzureVmOperation) Set(val *AzureVmOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVmOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVmOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVmOperation(val *AzureVmOperation) *NullableAzureVmOperation {
	return &NullableAzureVmOperation{value: val, isSet: true}
}

func (v NullableAzureVmOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVmOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
