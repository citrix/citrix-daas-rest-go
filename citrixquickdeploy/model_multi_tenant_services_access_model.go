/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the MultiTenantServicesAccessModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiTenantServicesAccessModel{}

// MultiTenantServicesAccessModel Multi-tenant services access to DaaS.
type MultiTenantServicesAccessModel struct {
	// Indicate whether Citrix DaaS Standard for Azure is allowed.
	XaCatalogService *bool `json:"xaCatalogService,omitempty"`
	// Indicate whether Citrix DaaS for Amazon WorkSpaces Core is allowed.
	XdQuickCreateService *bool `json:"xdQuickCreateService,omitempty"`
	// Indicate whether Citrix HDX Plus for Windows 365 is allowed.
	XdCloudPcRegistrationService *bool `json:"xdCloudPcRegistrationService,omitempty"`
	// Indicate whether Citrix ITSM Adapter service is allowed.
	Itsm *bool `json:"itsm,omitempty"`
}

// NewMultiTenantServicesAccessModelWithDefaults instantiates a new MultiTenantServicesAccessModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiTenantServicesAccessModelWithDefaults() *MultiTenantServicesAccessModel {
	this := MultiTenantServicesAccessModel{}
	return &this
}

// GetXaCatalogService returns the XaCatalogService field value if set, zero value otherwise.
func (o *MultiTenantServicesAccessModel) GetXaCatalogService() bool {
	if o == nil || IsNil(o.XaCatalogService) {
		var ret bool
		return ret
	}
	return *o.XaCatalogService
}

// GetXaCatalogServiceOk returns a tuple with the XaCatalogService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiTenantServicesAccessModel) GetXaCatalogServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.XaCatalogService) {
		return nil, false
	}
	return o.XaCatalogService, true
}

// SetXaCatalogService gets a reference to the given bool and assigns it to the XaCatalogService field.
func (o *MultiTenantServicesAccessModel) SetXaCatalogService(v bool) {
	o.XaCatalogService = &v
}

// GetXdQuickCreateService returns the XdQuickCreateService field value if set, zero value otherwise.
func (o *MultiTenantServicesAccessModel) GetXdQuickCreateService() bool {
	if o == nil || IsNil(o.XdQuickCreateService) {
		var ret bool
		return ret
	}
	return *o.XdQuickCreateService
}

// GetXdQuickCreateServiceOk returns a tuple with the XdQuickCreateService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiTenantServicesAccessModel) GetXdQuickCreateServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.XdQuickCreateService) {
		return nil, false
	}
	return o.XdQuickCreateService, true
}

// SetXdQuickCreateService gets a reference to the given bool and assigns it to the XdQuickCreateService field.
func (o *MultiTenantServicesAccessModel) SetXdQuickCreateService(v bool) {
	o.XdQuickCreateService = &v
}

// GetXdCloudPcRegistrationService returns the XdCloudPcRegistrationService field value if set, zero value otherwise.
func (o *MultiTenantServicesAccessModel) GetXdCloudPcRegistrationService() bool {
	if o == nil || IsNil(o.XdCloudPcRegistrationService) {
		var ret bool
		return ret
	}
	return *o.XdCloudPcRegistrationService
}

// GetXdCloudPcRegistrationServiceOk returns a tuple with the XdCloudPcRegistrationService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiTenantServicesAccessModel) GetXdCloudPcRegistrationServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.XdCloudPcRegistrationService) {
		return nil, false
	}
	return o.XdCloudPcRegistrationService, true
}

// SetXdCloudPcRegistrationService gets a reference to the given bool and assigns it to the XdCloudPcRegistrationService field.
func (o *MultiTenantServicesAccessModel) SetXdCloudPcRegistrationService(v bool) {
	o.XdCloudPcRegistrationService = &v
}

// GetItsm returns the Itsm field value if set, zero value otherwise.
func (o *MultiTenantServicesAccessModel) GetItsm() bool {
	if o == nil || IsNil(o.Itsm) {
		var ret bool
		return ret
	}
	return *o.Itsm
}

// GetItsmOk returns a tuple with the Itsm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiTenantServicesAccessModel) GetItsmOk() (*bool, bool) {
	if o == nil || IsNil(o.Itsm) {
		return nil, false
	}
	return o.Itsm, true
}

// SetItsm gets a reference to the given bool and assigns it to the Itsm field.
func (o *MultiTenantServicesAccessModel) SetItsm(v bool) {
	o.Itsm = &v
}

func (o MultiTenantServicesAccessModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiTenantServicesAccessModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.XaCatalogService) {
		toSerialize["xaCatalogService"] = o.XaCatalogService
	}
	if !IsNil(o.XdQuickCreateService) {
		toSerialize["xdQuickCreateService"] = o.XdQuickCreateService
	}
	if !IsNil(o.XdCloudPcRegistrationService) {
		toSerialize["xdCloudPcRegistrationService"] = o.XdCloudPcRegistrationService
	}
	if !IsNil(o.Itsm) {
		toSerialize["itsm"] = o.Itsm
	}
	return toSerialize, nil
}

type NullableMultiTenantServicesAccessModel struct {
	value *MultiTenantServicesAccessModel
	isSet bool
}

func (v NullableMultiTenantServicesAccessModel) Get() *MultiTenantServicesAccessModel {
	return v.value
}

func (v *NullableMultiTenantServicesAccessModel) Set(val *MultiTenantServicesAccessModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiTenantServicesAccessModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiTenantServicesAccessModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiTenantServicesAccessModel(val *MultiTenantServicesAccessModel) *NullableMultiTenantServicesAccessModel {
	return &NullableMultiTenantServicesAccessModel{value: val, isSet: true}
}

func (v NullableMultiTenantServicesAccessModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiTenantServicesAccessModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
