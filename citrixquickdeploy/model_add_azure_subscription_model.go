/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the AddAzureSubscriptionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAzureSubscriptionModel{}

// AddAzureSubscriptionModel struct for AddAzureSubscriptionModel
type AddAzureSubscriptionModel struct {
	// ID of the subscription to add
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	CitrixManaged  *bool   `json:"citrixManaged,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspCustomerId *string `json:"cspCustomerId,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null
	CspSiteId *string `json:"cspSiteId,omitempty"`
	// The user that consented to using Citrix managed subscription
	ConsentedBy *string `json:"consentedBy,omitempty"`
	// The expiration date of the user provided secret, if one was given in the headers
	SecretExpirationDate *time.Time `json:"secretExpirationDate,omitempty"`
}

// NewAddAzureSubscriptionModelWithDefaults instantiates a new AddAzureSubscriptionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAzureSubscriptionModelWithDefaults() *AddAzureSubscriptionModel {
	this := AddAzureSubscriptionModel{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AddAzureSubscriptionModel) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetCitrixManaged returns the CitrixManaged field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetCitrixManaged() bool {
	if o == nil || IsNil(o.CitrixManaged) {
		var ret bool
		return ret
	}
	return *o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixManaged) {
		return nil, false
	}
	return o.CitrixManaged, true
}

// SetCitrixManaged gets a reference to the given bool and assigns it to the CitrixManaged field.
func (o *AddAzureSubscriptionModel) SetCitrixManaged(v bool) {
	o.CitrixManaged = &v
}

// GetCspCustomerId returns the CspCustomerId field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetCspCustomerId() string {
	if o == nil || IsNil(o.CspCustomerId) {
		var ret string
		return ret
	}
	return *o.CspCustomerId
}

// GetCspCustomerIdOk returns a tuple with the CspCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetCspCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomerId) {
		return nil, false
	}
	return o.CspCustomerId, true
}

// SetCspCustomerId gets a reference to the given string and assigns it to the CspCustomerId field.
func (o *AddAzureSubscriptionModel) SetCspCustomerId(v string) {
	o.CspCustomerId = &v
}

// GetCspSiteId returns the CspSiteId field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetCspSiteId() string {
	if o == nil || IsNil(o.CspSiteId) {
		var ret string
		return ret
	}
	return *o.CspSiteId
}

// GetCspSiteIdOk returns a tuple with the CspSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetCspSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspSiteId) {
		return nil, false
	}
	return o.CspSiteId, true
}

// SetCspSiteId gets a reference to the given string and assigns it to the CspSiteId field.
func (o *AddAzureSubscriptionModel) SetCspSiteId(v string) {
	o.CspSiteId = &v
}

// GetConsentedBy returns the ConsentedBy field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetConsentedBy() string {
	if o == nil || IsNil(o.ConsentedBy) {
		var ret string
		return ret
	}
	return *o.ConsentedBy
}

// GetConsentedByOk returns a tuple with the ConsentedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetConsentedByOk() (*string, bool) {
	if o == nil || IsNil(o.ConsentedBy) {
		return nil, false
	}
	return o.ConsentedBy, true
}

// SetConsentedBy gets a reference to the given string and assigns it to the ConsentedBy field.
func (o *AddAzureSubscriptionModel) SetConsentedBy(v string) {
	o.ConsentedBy = &v
}

// GetSecretExpirationDate returns the SecretExpirationDate field value if set, zero value otherwise.
func (o *AddAzureSubscriptionModel) GetSecretExpirationDate() time.Time {
	if o == nil || IsNil(o.SecretExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.SecretExpirationDate
}

// GetSecretExpirationDateOk returns a tuple with the SecretExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureSubscriptionModel) GetSecretExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SecretExpirationDate) {
		return nil, false
	}
	return o.SecretExpirationDate, true
}

// SetSecretExpirationDate gets a reference to the given time.Time and assigns it to the SecretExpirationDate field.
func (o *AddAzureSubscriptionModel) SetSecretExpirationDate(v time.Time) {
	o.SecretExpirationDate = &v
}

func (o AddAzureSubscriptionModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAzureSubscriptionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.CitrixManaged) {
		toSerialize["citrixManaged"] = o.CitrixManaged
	}
	if !IsNil(o.CspCustomerId) {
		toSerialize["cspCustomerId"] = o.CspCustomerId
	}
	if !IsNil(o.CspSiteId) {
		toSerialize["cspSiteId"] = o.CspSiteId
	}
	if !IsNil(o.ConsentedBy) {
		toSerialize["consentedBy"] = o.ConsentedBy
	}
	if !IsNil(o.SecretExpirationDate) {
		toSerialize["secretExpirationDate"] = o.SecretExpirationDate
	}
	return toSerialize, nil
}

type NullableAddAzureSubscriptionModel struct {
	value *AddAzureSubscriptionModel
	isSet bool
}

func (v NullableAddAzureSubscriptionModel) Get() *AddAzureSubscriptionModel {
	return v.value
}

func (v *NullableAddAzureSubscriptionModel) Set(val *AddAzureSubscriptionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAzureSubscriptionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAzureSubscriptionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAzureSubscriptionModel(val *AddAzureSubscriptionModel) *NullableAddAzureSubscriptionModel {
	return &NullableAddAzureSubscriptionModel{value: val, isSet: true}
}

func (v NullableAddAzureSubscriptionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAzureSubscriptionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
