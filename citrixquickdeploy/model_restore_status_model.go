/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the RestoreStatusModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreStatusModel{}

// RestoreStatusModel struct for RestoreStatusModel
type RestoreStatusModel struct {
	State                    *RestoreState    `json:"state,omitempty"`
	SubState                 *RestoreSubState `json:"subState,omitempty"`
	Error                    *string          `json:"error,omitempty"`
	TransactionId            *string          `json:"transactionId,omitempty"`
	LastRestoredTime         *time.Time       `json:"lastRestoredTime,omitempty"`
	LastRestoredSnapshotName *string          `json:"lastRestoredSnapshotName,omitempty"`
}

// NewRestoreStatusModelWithDefaults instantiates a new RestoreStatusModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreStatusModelWithDefaults() *RestoreStatusModel {
	this := RestoreStatusModel{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetState() RestoreState {
	if o == nil || IsNil(o.State) {
		var ret RestoreState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetStateOk() (*RestoreState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given RestoreState and assigns it to the State field.
func (o *RestoreStatusModel) SetState(v RestoreState) {
	o.State = &v
}

// GetSubState returns the SubState field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetSubState() RestoreSubState {
	if o == nil || IsNil(o.SubState) {
		var ret RestoreSubState
		return ret
	}
	return *o.SubState
}

// GetSubStateOk returns a tuple with the SubState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetSubStateOk() (*RestoreSubState, bool) {
	if o == nil || IsNil(o.SubState) {
		return nil, false
	}
	return o.SubState, true
}

// SetSubState gets a reference to the given RestoreSubState and assigns it to the SubState field.
func (o *RestoreStatusModel) SetSubState(v RestoreSubState) {
	o.SubState = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *RestoreStatusModel) SetError(v string) {
	o.Error = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *RestoreStatusModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetLastRestoredTime returns the LastRestoredTime field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetLastRestoredTime() time.Time {
	if o == nil || IsNil(o.LastRestoredTime) {
		var ret time.Time
		return ret
	}
	return *o.LastRestoredTime
}

// GetLastRestoredTimeOk returns a tuple with the LastRestoredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetLastRestoredTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastRestoredTime) {
		return nil, false
	}
	return o.LastRestoredTime, true
}

// SetLastRestoredTime gets a reference to the given time.Time and assigns it to the LastRestoredTime field.
func (o *RestoreStatusModel) SetLastRestoredTime(v time.Time) {
	o.LastRestoredTime = &v
}

// GetLastRestoredSnapshotName returns the LastRestoredSnapshotName field value if set, zero value otherwise.
func (o *RestoreStatusModel) GetLastRestoredSnapshotName() string {
	if o == nil || IsNil(o.LastRestoredSnapshotName) {
		var ret string
		return ret
	}
	return *o.LastRestoredSnapshotName
}

// GetLastRestoredSnapshotNameOk returns a tuple with the LastRestoredSnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreStatusModel) GetLastRestoredSnapshotNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastRestoredSnapshotName) {
		return nil, false
	}
	return o.LastRestoredSnapshotName, true
}

// SetLastRestoredSnapshotName gets a reference to the given string and assigns it to the LastRestoredSnapshotName field.
func (o *RestoreStatusModel) SetLastRestoredSnapshotName(v string) {
	o.LastRestoredSnapshotName = &v
}

func (o RestoreStatusModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreStatusModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubState) {
		toSerialize["subState"] = o.SubState
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.LastRestoredTime) {
		toSerialize["lastRestoredTime"] = o.LastRestoredTime
	}
	if !IsNil(o.LastRestoredSnapshotName) {
		toSerialize["lastRestoredSnapshotName"] = o.LastRestoredSnapshotName
	}
	return toSerialize, nil
}

type NullableRestoreStatusModel struct {
	value *RestoreStatusModel
	isSet bool
}

func (v NullableRestoreStatusModel) Get() *RestoreStatusModel {
	return v.value
}

func (v *NullableRestoreStatusModel) Set(val *RestoreStatusModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreStatusModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreStatusModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreStatusModel(val *RestoreStatusModel) *NullableRestoreStatusModel {
	return &NullableRestoreStatusModel{value: val, isSet: true}
}

func (v NullableRestoreStatusModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreStatusModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
