/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the IdentityDirectoryResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityDirectoryResponseModel{}

// IdentityDirectoryResponseModel The universal identity directory object.
type IdentityDirectoryResponseModel struct {
	// Forest of the directory.
	Forest *string `json:"forest,omitempty"`
	// Domain of the directory.
	Domain *string `json:"domain,omitempty"`
	// Tenant of the directory.
	Tenant *string `json:"tenant,omitempty"`
	// Identity provider type of the directory.
	IdentityProvider *IdentityProviderType `json:"identityProvider,omitempty"`
	// Instance of the directory.
	IdpInstanceId *string `json:"idpInstanceId,omitempty"`
	// Nickname of the directory
	IdpNickName *string `json:"idpNickName,omitempty"`
}

// NewIdentityDirectoryResponseModelWithDefaults instantiates a new IdentityDirectoryResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityDirectoryResponseModelWithDefaults() *IdentityDirectoryResponseModel {
	this := IdentityDirectoryResponseModel{}
	return &this
}

// GetForest returns the Forest field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetForest() string {
	if o == nil || IsNil(o.Forest) {
		var ret string
		return ret
	}
	return *o.Forest
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetForestOk() (*string, bool) {
	if o == nil || IsNil(o.Forest) {
		return nil, false
	}
	return o.Forest, true
}

// SetForest gets a reference to the given string and assigns it to the Forest field.
func (o *IdentityDirectoryResponseModel) SetForest(v string) {
	o.Forest = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *IdentityDirectoryResponseModel) SetDomain(v string) {
	o.Domain = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *IdentityDirectoryResponseModel) SetTenant(v string) {
	o.Tenant = &v
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetIdentityProvider() IdentityProviderType {
	if o == nil || IsNil(o.IdentityProvider) {
		var ret IdentityProviderType
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetIdentityProviderOk() (*IdentityProviderType, bool) {
	if o == nil || IsNil(o.IdentityProvider) {
		return nil, false
	}
	return o.IdentityProvider, true
}

// SetIdentityProvider gets a reference to the given IdentityProviderType and assigns it to the IdentityProvider field.
func (o *IdentityDirectoryResponseModel) SetIdentityProvider(v IdentityProviderType) {
	o.IdentityProvider = &v
}

// GetIdpInstanceId returns the IdpInstanceId field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetIdpInstanceId() string {
	if o == nil || IsNil(o.IdpInstanceId) {
		var ret string
		return ret
	}
	return *o.IdpInstanceId
}

// GetIdpInstanceIdOk returns a tuple with the IdpInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetIdpInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdpInstanceId) {
		return nil, false
	}
	return o.IdpInstanceId, true
}

// SetIdpInstanceId gets a reference to the given string and assigns it to the IdpInstanceId field.
func (o *IdentityDirectoryResponseModel) SetIdpInstanceId(v string) {
	o.IdpInstanceId = &v
}

// GetIdpNickName returns the IdpNickName field value if set, zero value otherwise.
func (o *IdentityDirectoryResponseModel) GetIdpNickName() string {
	if o == nil || IsNil(o.IdpNickName) {
		var ret string
		return ret
	}
	return *o.IdpNickName
}

// GetIdpNickNameOk returns a tuple with the IdpNickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityDirectoryResponseModel) GetIdpNickNameOk() (*string, bool) {
	if o == nil || IsNil(o.IdpNickName) {
		return nil, false
	}
	return o.IdpNickName, true
}

// SetIdpNickName gets a reference to the given string and assigns it to the IdpNickName field.
func (o *IdentityDirectoryResponseModel) SetIdpNickName(v string) {
	o.IdpNickName = &v
}

func (o IdentityDirectoryResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityDirectoryResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Forest) {
		toSerialize["forest"] = o.Forest
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.IdentityProvider) {
		toSerialize["identityProvider"] = o.IdentityProvider
	}
	if !IsNil(o.IdpInstanceId) {
		toSerialize["idpInstanceId"] = o.IdpInstanceId
	}
	if !IsNil(o.IdpNickName) {
		toSerialize["idpNickName"] = o.IdpNickName
	}
	return toSerialize, nil
}

type NullableIdentityDirectoryResponseModel struct {
	value *IdentityDirectoryResponseModel
	isSet bool
}

func (v NullableIdentityDirectoryResponseModel) Get() *IdentityDirectoryResponseModel {
	return v.value
}

func (v *NullableIdentityDirectoryResponseModel) Set(val *IdentityDirectoryResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityDirectoryResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityDirectoryResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityDirectoryResponseModel(val *IdentityDirectoryResponseModel) *NullableIdentityDirectoryResponseModel {
	return &NullableIdentityDirectoryResponseModel{value: val, isSet: true}
}

func (v NullableIdentityDirectoryResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityDirectoryResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
