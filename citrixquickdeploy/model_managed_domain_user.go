/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ManagedDomainUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedDomainUser{}

// ManagedDomainUser struct for ManagedDomainUser
type ManagedDomainUser struct {
	Username   *string          `json:"username,omitempty"`
	FirstName  *string          `json:"firstName,omitempty"`
	LastName   *string          `json:"lastName,omitempty"`
	IsAssigned *bool            `json:"isAssigned,omitempty"`
	IsExternal *bool            `json:"isExternal,omitempty"`
	CustomUser *bool            `json:"customUser,omitempty"`
	State      *DomainUserState `json:"state,omitempty"`
}

// NewManagedDomainUserWithDefaults instantiates a new ManagedDomainUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedDomainUserWithDefaults() *ManagedDomainUser {
	this := ManagedDomainUser{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ManagedDomainUser) SetUsername(v string) {
	o.Username = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ManagedDomainUser) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ManagedDomainUser) SetLastName(v string) {
	o.LastName = &v
}

// GetIsAssigned returns the IsAssigned field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetIsAssigned() bool {
	if o == nil || IsNil(o.IsAssigned) {
		var ret bool
		return ret
	}
	return *o.IsAssigned
}

// GetIsAssignedOk returns a tuple with the IsAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetIsAssignedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAssigned) {
		return nil, false
	}
	return o.IsAssigned, true
}

// SetIsAssigned gets a reference to the given bool and assigns it to the IsAssigned field.
func (o *ManagedDomainUser) SetIsAssigned(v bool) {
	o.IsAssigned = &v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetIsExternal() bool {
	if o == nil || IsNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetIsExternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternal) {
		return nil, false
	}
	return o.IsExternal, true
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *ManagedDomainUser) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetCustomUser returns the CustomUser field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetCustomUser() bool {
	if o == nil || IsNil(o.CustomUser) {
		var ret bool
		return ret
	}
	return *o.CustomUser
}

// GetCustomUserOk returns a tuple with the CustomUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetCustomUserOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomUser) {
		return nil, false
	}
	return o.CustomUser, true
}

// SetCustomUser gets a reference to the given bool and assigns it to the CustomUser field.
func (o *ManagedDomainUser) SetCustomUser(v bool) {
	o.CustomUser = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ManagedDomainUser) GetState() DomainUserState {
	if o == nil || IsNil(o.State) {
		var ret DomainUserState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainUser) GetStateOk() (*DomainUserState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given DomainUserState and assigns it to the State field.
func (o *ManagedDomainUser) SetState(v DomainUserState) {
	o.State = &v
}

func (o ManagedDomainUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedDomainUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.IsAssigned) {
		toSerialize["isAssigned"] = o.IsAssigned
	}
	if !IsNil(o.IsExternal) {
		toSerialize["isExternal"] = o.IsExternal
	}
	if !IsNil(o.CustomUser) {
		toSerialize["customUser"] = o.CustomUser
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableManagedDomainUser struct {
	value *ManagedDomainUser
	isSet bool
}

func (v NullableManagedDomainUser) Get() *ManagedDomainUser {
	return v.value
}

func (v *NullableManagedDomainUser) Set(val *ManagedDomainUser) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedDomainUser) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedDomainUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedDomainUser(val *ManagedDomainUser) *NullableManagedDomainUser {
	return &NullableManagedDomainUser{value: val, isSet: true}
}

func (v NullableManagedDomainUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedDomainUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
