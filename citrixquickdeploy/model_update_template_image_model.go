/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the UpdateTemplateImageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTemplateImageModel{}

// UpdateTemplateImageModel struct for UpdateTemplateImageModel
type UpdateTemplateImageModel struct {
	// Updated name of the template
	NewName *string `json:"newName,omitempty"`
	// Customer notes about template image
	NewNotes *string `json:"newNotes,omitempty"`
	// Ip Addresses allowed to RDP flag
	UpdateAllowedIPs *bool `json:"updateAllowedIPs,omitempty"`
	// Ip Addresses allowed to RDP
	AllowedIPs []string `json:"allowedIPs,omitempty"`
}

// NewUpdateTemplateImageModelWithDefaults instantiates a new UpdateTemplateImageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTemplateImageModelWithDefaults() *UpdateTemplateImageModel {
	this := UpdateTemplateImageModel{}
	return &this
}

// GetNewName returns the NewName field value if set, zero value otherwise.
func (o *UpdateTemplateImageModel) GetNewName() string {
	if o == nil || IsNil(o.NewName) {
		var ret string
		return ret
	}
	return *o.NewName
}

// GetNewNameOk returns a tuple with the NewName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTemplateImageModel) GetNewNameOk() (*string, bool) {
	if o == nil || IsNil(o.NewName) {
		return nil, false
	}
	return o.NewName, true
}

// SetNewName gets a reference to the given string and assigns it to the NewName field.
func (o *UpdateTemplateImageModel) SetNewName(v string) {
	o.NewName = &v
}

// GetNewNotes returns the NewNotes field value if set, zero value otherwise.
func (o *UpdateTemplateImageModel) GetNewNotes() string {
	if o == nil || IsNil(o.NewNotes) {
		var ret string
		return ret
	}
	return *o.NewNotes
}

// GetNewNotesOk returns a tuple with the NewNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTemplateImageModel) GetNewNotesOk() (*string, bool) {
	if o == nil || IsNil(o.NewNotes) {
		return nil, false
	}
	return o.NewNotes, true
}

// SetNewNotes gets a reference to the given string and assigns it to the NewNotes field.
func (o *UpdateTemplateImageModel) SetNewNotes(v string) {
	o.NewNotes = &v
}

// GetUpdateAllowedIPs returns the UpdateAllowedIPs field value if set, zero value otherwise.
func (o *UpdateTemplateImageModel) GetUpdateAllowedIPs() bool {
	if o == nil || IsNil(o.UpdateAllowedIPs) {
		var ret bool
		return ret
	}
	return *o.UpdateAllowedIPs
}

// GetUpdateAllowedIPsOk returns a tuple with the UpdateAllowedIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTemplateImageModel) GetUpdateAllowedIPsOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateAllowedIPs) {
		return nil, false
	}
	return o.UpdateAllowedIPs, true
}

// SetUpdateAllowedIPs gets a reference to the given bool and assigns it to the UpdateAllowedIPs field.
func (o *UpdateTemplateImageModel) SetUpdateAllowedIPs(v bool) {
	o.UpdateAllowedIPs = &v
}

// GetAllowedIPs returns the AllowedIPs field value if set, zero value otherwise.
func (o *UpdateTemplateImageModel) GetAllowedIPs() []string {
	if o == nil || IsNil(o.AllowedIPs) {
		var ret []string
		return ret
	}
	return o.AllowedIPs
}

// GetAllowedIPsOk returns a tuple with the AllowedIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTemplateImageModel) GetAllowedIPsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedIPs) {
		return nil, false
	}
	return o.AllowedIPs, true
}

// SetAllowedIPs gets a reference to the given []string and assigns it to the AllowedIPs field.
func (o *UpdateTemplateImageModel) SetAllowedIPs(v []string) {
	o.AllowedIPs = v
}

func (o UpdateTemplateImageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTemplateImageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewName) {
		toSerialize["newName"] = o.NewName
	}
	if !IsNil(o.NewNotes) {
		toSerialize["newNotes"] = o.NewNotes
	}
	if !IsNil(o.UpdateAllowedIPs) {
		toSerialize["updateAllowedIPs"] = o.UpdateAllowedIPs
	}
	if !IsNil(o.AllowedIPs) {
		toSerialize["allowedIPs"] = o.AllowedIPs
	}
	return toSerialize, nil
}

type NullableUpdateTemplateImageModel struct {
	value *UpdateTemplateImageModel
	isSet bool
}

func (v NullableUpdateTemplateImageModel) Get() *UpdateTemplateImageModel {
	return v.value
}

func (v *NullableUpdateTemplateImageModel) Set(val *UpdateTemplateImageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTemplateImageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTemplateImageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTemplateImageModel(val *UpdateTemplateImageModel) *NullableUpdateTemplateImageModel {
	return &NullableUpdateTemplateImageModel{value: val, isSet: true}
}

func (v NullableUpdateTemplateImageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTemplateImageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
