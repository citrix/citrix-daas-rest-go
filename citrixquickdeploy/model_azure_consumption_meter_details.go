/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureConsumptionMeterDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureConsumptionMeterDetails{}

// AzureConsumptionMeterDetails struct for AzureConsumptionMeterDetails
type AzureConsumptionMeterDetails struct {
	// The name of the meter, within the given meter category.
	MeterName *string `json:"meterName,omitempty"`
	// The category of the meter, for example, 'Cloud services', 'Networking', etc..
	MeterCategory *string `json:"meterCategory,omitempty"`
	// The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..
	MeterSubCategory *string `json:"meterSubCategory,omitempty"`
	// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
	Unit *string `json:"unit,omitempty"`
	// The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// The location in which the Azure service is available.
	MeterLocation *string `json:"meterLocation,omitempty"`
}

// NewAzureConsumptionMeterDetailsWithDefaults instantiates a new AzureConsumptionMeterDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureConsumptionMeterDetailsWithDefaults() *AzureConsumptionMeterDetails {
	this := AzureConsumptionMeterDetails{}
	return &this
}

// GetMeterName returns the MeterName field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetMeterName() string {
	if o == nil || IsNil(o.MeterName) {
		var ret string
		return ret
	}
	return *o.MeterName
}

// GetMeterNameOk returns a tuple with the MeterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetMeterNameOk() (*string, bool) {
	if o == nil || IsNil(o.MeterName) {
		return nil, false
	}
	return o.MeterName, true
}

// SetMeterName gets a reference to the given string and assigns it to the MeterName field.
func (o *AzureConsumptionMeterDetails) SetMeterName(v string) {
	o.MeterName = &v
}

// GetMeterCategory returns the MeterCategory field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetMeterCategory() string {
	if o == nil || IsNil(o.MeterCategory) {
		var ret string
		return ret
	}
	return *o.MeterCategory
}

// GetMeterCategoryOk returns a tuple with the MeterCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetMeterCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.MeterCategory) {
		return nil, false
	}
	return o.MeterCategory, true
}

// SetMeterCategory gets a reference to the given string and assigns it to the MeterCategory field.
func (o *AzureConsumptionMeterDetails) SetMeterCategory(v string) {
	o.MeterCategory = &v
}

// GetMeterSubCategory returns the MeterSubCategory field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetMeterSubCategory() string {
	if o == nil || IsNil(o.MeterSubCategory) {
		var ret string
		return ret
	}
	return *o.MeterSubCategory
}

// GetMeterSubCategoryOk returns a tuple with the MeterSubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetMeterSubCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.MeterSubCategory) {
		return nil, false
	}
	return o.MeterSubCategory, true
}

// SetMeterSubCategory gets a reference to the given string and assigns it to the MeterSubCategory field.
func (o *AzureConsumptionMeterDetails) SetMeterSubCategory(v string) {
	o.MeterSubCategory = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AzureConsumptionMeterDetails) SetUnit(v string) {
	o.Unit = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *AzureConsumptionMeterDetails) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetMeterLocation returns the MeterLocation field value if set, zero value otherwise.
func (o *AzureConsumptionMeterDetails) GetMeterLocation() string {
	if o == nil || IsNil(o.MeterLocation) {
		var ret string
		return ret
	}
	return *o.MeterLocation
}

// GetMeterLocationOk returns a tuple with the MeterLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureConsumptionMeterDetails) GetMeterLocationOk() (*string, bool) {
	if o == nil || IsNil(o.MeterLocation) {
		return nil, false
	}
	return o.MeterLocation, true
}

// SetMeterLocation gets a reference to the given string and assigns it to the MeterLocation field.
func (o *AzureConsumptionMeterDetails) SetMeterLocation(v string) {
	o.MeterLocation = &v
}

func (o AzureConsumptionMeterDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureConsumptionMeterDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MeterName) {
		toSerialize["meterName"] = o.MeterName
	}
	if !IsNil(o.MeterCategory) {
		toSerialize["meterCategory"] = o.MeterCategory
	}
	if !IsNil(o.MeterSubCategory) {
		toSerialize["meterSubCategory"] = o.MeterSubCategory
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if !IsNil(o.MeterLocation) {
		toSerialize["meterLocation"] = o.MeterLocation
	}
	return toSerialize, nil
}

type NullableAzureConsumptionMeterDetails struct {
	value *AzureConsumptionMeterDetails
	isSet bool
}

func (v NullableAzureConsumptionMeterDetails) Get() *AzureConsumptionMeterDetails {
	return v.value
}

func (v *NullableAzureConsumptionMeterDetails) Set(val *AzureConsumptionMeterDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureConsumptionMeterDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureConsumptionMeterDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureConsumptionMeterDetails(val *AzureConsumptionMeterDetails) *NullableAzureConsumptionMeterDetails {
	return &NullableAzureConsumptionMeterDetails{value: val, isSet: true}
}

func (v NullableAzureConsumptionMeterDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureConsumptionMeterDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
