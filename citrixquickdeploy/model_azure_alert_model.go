/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureAlertModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureAlertModel{}

// AzureAlertModel struct for AzureAlertModel
type AzureAlertModel struct {
	SchemaId *string `json:"schemaId,omitempty"`
	Data     *Data   `json:"data,omitempty"`
}

// NewAzureAlertModelWithDefaults instantiates a new AzureAlertModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureAlertModelWithDefaults() *AzureAlertModel {
	this := AzureAlertModel{}
	return &this
}

// GetSchemaId returns the SchemaId field value if set, zero value otherwise.
func (o *AzureAlertModel) GetSchemaId() string {
	if o == nil || IsNil(o.SchemaId) {
		var ret string
		return ret
	}
	return *o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAlertModel) GetSchemaIdOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaId) {
		return nil, false
	}
	return o.SchemaId, true
}

// SetSchemaId gets a reference to the given string and assigns it to the SchemaId field.
func (o *AzureAlertModel) SetSchemaId(v string) {
	o.SchemaId = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AzureAlertModel) GetData() Data {
	if o == nil || IsNil(o.Data) {
		var ret Data
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureAlertModel) GetDataOk() (*Data, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// SetData gets a reference to the given Data and assigns it to the Data field.
func (o *AzureAlertModel) SetData(v Data) {
	o.Data = &v
}

func (o AzureAlertModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureAlertModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SchemaId) {
		toSerialize["schemaId"] = o.SchemaId
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAzureAlertModel struct {
	value *AzureAlertModel
	isSet bool
}

func (v NullableAzureAlertModel) Get() *AzureAlertModel {
	return v.value
}

func (v *NullableAzureAlertModel) Set(val *AzureAlertModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureAlertModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureAlertModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureAlertModel(val *AzureAlertModel) *NullableAzureAlertModel {
	return &NullableAzureAlertModel{value: val, isSet: true}
}

func (v NullableAzureAlertModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureAlertModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
