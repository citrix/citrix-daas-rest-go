/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AddCustomerUsageDetailsRetrievalModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCustomerUsageDetailsRetrievalModel{}

// AddCustomerUsageDetailsRetrievalModel struct for AddCustomerUsageDetailsRetrievalModel
type AddCustomerUsageDetailsRetrievalModel struct {
	ReportStartUTC              *string                 `json:"reportStartUTC,omitempty"`
	ReportEndUTC                *string                 `json:"reportEndUTC,omitempty"`
	ReportType                  *UsageDetailsReportType `json:"reportType,omitempty"`
	ForceOverrideIfReportExists *bool                   `json:"forceOverrideIfReportExists,omitempty"`
	SkipSendingEventsToCAS      *bool                   `json:"skipSendingEventsToCAS,omitempty"`
}

// NewAddCustomerUsageDetailsRetrievalModelWithDefaults instantiates a new AddCustomerUsageDetailsRetrievalModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCustomerUsageDetailsRetrievalModelWithDefaults() *AddCustomerUsageDetailsRetrievalModel {
	this := AddCustomerUsageDetailsRetrievalModel{}
	return &this
}

// GetReportStartUTC returns the ReportStartUTC field value if set, zero value otherwise.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportStartUTC() string {
	if o == nil || IsNil(o.ReportStartUTC) {
		var ret string
		return ret
	}
	return *o.ReportStartUTC
}

// GetReportStartUTCOk returns a tuple with the ReportStartUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportStartUTCOk() (*string, bool) {
	if o == nil || IsNil(o.ReportStartUTC) {
		return nil, false
	}
	return o.ReportStartUTC, true
}

// SetReportStartUTC gets a reference to the given string and assigns it to the ReportStartUTC field.
func (o *AddCustomerUsageDetailsRetrievalModel) SetReportStartUTC(v string) {
	o.ReportStartUTC = &v
}

// GetReportEndUTC returns the ReportEndUTC field value if set, zero value otherwise.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportEndUTC() string {
	if o == nil || IsNil(o.ReportEndUTC) {
		var ret string
		return ret
	}
	return *o.ReportEndUTC
}

// GetReportEndUTCOk returns a tuple with the ReportEndUTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportEndUTCOk() (*string, bool) {
	if o == nil || IsNil(o.ReportEndUTC) {
		return nil, false
	}
	return o.ReportEndUTC, true
}

// SetReportEndUTC gets a reference to the given string and assigns it to the ReportEndUTC field.
func (o *AddCustomerUsageDetailsRetrievalModel) SetReportEndUTC(v string) {
	o.ReportEndUTC = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportType() UsageDetailsReportType {
	if o == nil || IsNil(o.ReportType) {
		var ret UsageDetailsReportType
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomerUsageDetailsRetrievalModel) GetReportTypeOk() (*UsageDetailsReportType, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// SetReportType gets a reference to the given UsageDetailsReportType and assigns it to the ReportType field.
func (o *AddCustomerUsageDetailsRetrievalModel) SetReportType(v UsageDetailsReportType) {
	o.ReportType = &v
}

// GetForceOverrideIfReportExists returns the ForceOverrideIfReportExists field value if set, zero value otherwise.
func (o *AddCustomerUsageDetailsRetrievalModel) GetForceOverrideIfReportExists() bool {
	if o == nil || IsNil(o.ForceOverrideIfReportExists) {
		var ret bool
		return ret
	}
	return *o.ForceOverrideIfReportExists
}

// GetForceOverrideIfReportExistsOk returns a tuple with the ForceOverrideIfReportExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomerUsageDetailsRetrievalModel) GetForceOverrideIfReportExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.ForceOverrideIfReportExists) {
		return nil, false
	}
	return o.ForceOverrideIfReportExists, true
}

// SetForceOverrideIfReportExists gets a reference to the given bool and assigns it to the ForceOverrideIfReportExists field.
func (o *AddCustomerUsageDetailsRetrievalModel) SetForceOverrideIfReportExists(v bool) {
	o.ForceOverrideIfReportExists = &v
}

// GetSkipSendingEventsToCAS returns the SkipSendingEventsToCAS field value if set, zero value otherwise.
func (o *AddCustomerUsageDetailsRetrievalModel) GetSkipSendingEventsToCAS() bool {
	if o == nil || IsNil(o.SkipSendingEventsToCAS) {
		var ret bool
		return ret
	}
	return *o.SkipSendingEventsToCAS
}

// GetSkipSendingEventsToCASOk returns a tuple with the SkipSendingEventsToCAS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCustomerUsageDetailsRetrievalModel) GetSkipSendingEventsToCASOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipSendingEventsToCAS) {
		return nil, false
	}
	return o.SkipSendingEventsToCAS, true
}

// SetSkipSendingEventsToCAS gets a reference to the given bool and assigns it to the SkipSendingEventsToCAS field.
func (o *AddCustomerUsageDetailsRetrievalModel) SetSkipSendingEventsToCAS(v bool) {
	o.SkipSendingEventsToCAS = &v
}

func (o AddCustomerUsageDetailsRetrievalModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCustomerUsageDetailsRetrievalModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportStartUTC) {
		toSerialize["reportStartUTC"] = o.ReportStartUTC
	}
	if !IsNil(o.ReportEndUTC) {
		toSerialize["reportEndUTC"] = o.ReportEndUTC
	}
	if !IsNil(o.ReportType) {
		toSerialize["reportType"] = o.ReportType
	}
	if !IsNil(o.ForceOverrideIfReportExists) {
		toSerialize["forceOverrideIfReportExists"] = o.ForceOverrideIfReportExists
	}
	if !IsNil(o.SkipSendingEventsToCAS) {
		toSerialize["skipSendingEventsToCAS"] = o.SkipSendingEventsToCAS
	}
	return toSerialize, nil
}

type NullableAddCustomerUsageDetailsRetrievalModel struct {
	value *AddCustomerUsageDetailsRetrievalModel
	isSet bool
}

func (v NullableAddCustomerUsageDetailsRetrievalModel) Get() *AddCustomerUsageDetailsRetrievalModel {
	return v.value
}

func (v *NullableAddCustomerUsageDetailsRetrievalModel) Set(val *AddCustomerUsageDetailsRetrievalModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCustomerUsageDetailsRetrievalModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCustomerUsageDetailsRetrievalModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCustomerUsageDetailsRetrievalModel(val *AddCustomerUsageDetailsRetrievalModel) *NullableAddCustomerUsageDetailsRetrievalModel {
	return &NullableAddCustomerUsageDetailsRetrievalModel{value: val, isSet: true}
}

func (v NullableAddCustomerUsageDetailsRetrievalModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCustomerUsageDetailsRetrievalModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
