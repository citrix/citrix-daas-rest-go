/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ManagedCapacitySubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCapacitySubscription{}

// ManagedCapacitySubscription struct for ManagedCapacitySubscription
type ManagedCapacitySubscription struct {
	SubscriptionId   string `json:"subscriptionId"`
	SubscriptionName string `json:"subscriptionName"`
}

// NewManagedCapacitySubscriptionWithDefaults instantiates a new ManagedCapacitySubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCapacitySubscriptionWithDefaults() *ManagedCapacitySubscription {
	this := ManagedCapacitySubscription{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *ManagedCapacitySubscription) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *ManagedCapacitySubscription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *ManagedCapacitySubscription) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetSubscriptionName returns the SubscriptionName field value
func (o *ManagedCapacitySubscription) GetSubscriptionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value
// and a boolean to check if the value has been set.
func (o *ManagedCapacitySubscription) GetSubscriptionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionName, true
}

// SetSubscriptionName sets field value
func (o *ManagedCapacitySubscription) SetSubscriptionName(v string) {
	o.SubscriptionName = v
}

func (o ManagedCapacitySubscription) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCapacitySubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["subscriptionName"] = o.SubscriptionName
	return toSerialize, nil
}

type NullableManagedCapacitySubscription struct {
	value *ManagedCapacitySubscription
	isSet bool
}

func (v NullableManagedCapacitySubscription) Get() *ManagedCapacitySubscription {
	return v.value
}

func (v *NullableManagedCapacitySubscription) Set(val *ManagedCapacitySubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCapacitySubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCapacitySubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCapacitySubscription(val *ManagedCapacitySubscription) *NullableManagedCapacitySubscription {
	return &NullableManagedCapacitySubscription{value: val, isSet: true}
}

func (v NullableManagedCapacitySubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCapacitySubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
