/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogApplicationsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogApplicationsModel{}

// CatalogApplicationsModel struct for CatalogApplicationsModel
type CatalogApplicationsModel struct {
	Items        []PublishedApplication `json:"items"`
	Applications []PublishedApplication `json:"applications,omitempty"`
}

// NewCatalogApplicationsModelWithDefaults instantiates a new CatalogApplicationsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogApplicationsModelWithDefaults() *CatalogApplicationsModel {
	this := CatalogApplicationsModel{}
	return &this
}

// GetItems returns the Items field value
func (o *CatalogApplicationsModel) GetItems() []PublishedApplication {
	if o == nil {
		var ret []PublishedApplication
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CatalogApplicationsModel) GetItemsOk() ([]PublishedApplication, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *CatalogApplicationsModel) SetItems(v []PublishedApplication) {
	o.Items = v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *CatalogApplicationsModel) GetApplications() []PublishedApplication {
	if o == nil || IsNil(o.Applications) {
		var ret []PublishedApplication
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogApplicationsModel) GetApplicationsOk() ([]PublishedApplication, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// SetApplications gets a reference to the given []PublishedApplication and assigns it to the Applications field.
func (o *CatalogApplicationsModel) SetApplications(v []PublishedApplication) {
	o.Applications = v
}

func (o CatalogApplicationsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogApplicationsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	return toSerialize, nil
}

type NullableCatalogApplicationsModel struct {
	value *CatalogApplicationsModel
	isSet bool
}

func (v NullableCatalogApplicationsModel) Get() *CatalogApplicationsModel {
	return v.value
}

func (v *NullableCatalogApplicationsModel) Set(val *CatalogApplicationsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogApplicationsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogApplicationsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogApplicationsModel(val *CatalogApplicationsModel) *NullableCatalogApplicationsModel {
	return &NullableCatalogApplicationsModel{value: val, isSet: true}
}

func (v NullableCatalogApplicationsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogApplicationsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
