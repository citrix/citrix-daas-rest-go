/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogBackupScheduleModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogBackupScheduleModel{}

// CatalogBackupScheduleModel struct for CatalogBackupScheduleModel
type CatalogBackupScheduleModel struct {
	Daily  *CatalogBackupScheduleTime        `json:"daily,omitempty"`
	Weekly *CatalogBackupScheduleTimeAndDate `json:"weekly,omitempty"`
}

// NewCatalogBackupScheduleModelWithDefaults instantiates a new CatalogBackupScheduleModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogBackupScheduleModelWithDefaults() *CatalogBackupScheduleModel {
	this := CatalogBackupScheduleModel{}
	return &this
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *CatalogBackupScheduleModel) GetDaily() CatalogBackupScheduleTime {
	if o == nil || IsNil(o.Daily) {
		var ret CatalogBackupScheduleTime
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogBackupScheduleModel) GetDailyOk() (*CatalogBackupScheduleTime, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// SetDaily gets a reference to the given CatalogBackupScheduleTime and assigns it to the Daily field.
func (o *CatalogBackupScheduleModel) SetDaily(v CatalogBackupScheduleTime) {
	o.Daily = &v
}

// GetWeekly returns the Weekly field value if set, zero value otherwise.
func (o *CatalogBackupScheduleModel) GetWeekly() CatalogBackupScheduleTimeAndDate {
	if o == nil || IsNil(o.Weekly) {
		var ret CatalogBackupScheduleTimeAndDate
		return ret
	}
	return *o.Weekly
}

// GetWeeklyOk returns a tuple with the Weekly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogBackupScheduleModel) GetWeeklyOk() (*CatalogBackupScheduleTimeAndDate, bool) {
	if o == nil || IsNil(o.Weekly) {
		return nil, false
	}
	return o.Weekly, true
}

// SetWeekly gets a reference to the given CatalogBackupScheduleTimeAndDate and assigns it to the Weekly field.
func (o *CatalogBackupScheduleModel) SetWeekly(v CatalogBackupScheduleTimeAndDate) {
	o.Weekly = &v
}

func (o CatalogBackupScheduleModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogBackupScheduleModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.Weekly) {
		toSerialize["weekly"] = o.Weekly
	}
	return toSerialize, nil
}

type NullableCatalogBackupScheduleModel struct {
	value *CatalogBackupScheduleModel
	isSet bool
}

func (v NullableCatalogBackupScheduleModel) Get() *CatalogBackupScheduleModel {
	return v.value
}

func (v *NullableCatalogBackupScheduleModel) Set(val *CatalogBackupScheduleModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogBackupScheduleModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogBackupScheduleModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogBackupScheduleModel(val *CatalogBackupScheduleModel) *NullableCatalogBackupScheduleModel {
	return &NullableCatalogBackupScheduleModel{value: val, isSet: true}
}

func (v NullableCatalogBackupScheduleModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogBackupScheduleModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
