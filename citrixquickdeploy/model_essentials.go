/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the Essentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Essentials{}

// Essentials struct for Essentials
type Essentials struct {
	AlertId             *string    `json:"alertId,omitempty"`
	AlertRule           *string    `json:"alertRule,omitempty"`
	Severity            *string    `json:"severity,omitempty"`
	SignalType          *string    `json:"signalType,omitempty"`
	MonitorCondition    *string    `json:"monitorCondition,omitempty"`
	MonitoringService   *string    `json:"monitoringService,omitempty"`
	AlertTargetIDs      []string   `json:"alertTargetIDs,omitempty"`
	OriginAlertId       *string    `json:"originAlertId,omitempty"`
	FiredDateTime       *time.Time `json:"firedDateTime,omitempty"`
	Description         *string    `json:"description,omitempty"`
	EssentialsVersion   *string    `json:"essentialsVersion,omitempty"`
	AlertContextVersion *string    `json:"alertContextVersion,omitempty"`
}

// NewEssentialsWithDefaults instantiates a new Essentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEssentialsWithDefaults() *Essentials {
	this := Essentials{}
	return &this
}

// GetAlertId returns the AlertId field value if set, zero value otherwise.
func (o *Essentials) GetAlertId() string {
	if o == nil || IsNil(o.AlertId) {
		var ret string
		return ret
	}
	return *o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetAlertIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlertId) {
		return nil, false
	}
	return o.AlertId, true
}

// SetAlertId gets a reference to the given string and assigns it to the AlertId field.
func (o *Essentials) SetAlertId(v string) {
	o.AlertId = &v
}

// GetAlertRule returns the AlertRule field value if set, zero value otherwise.
func (o *Essentials) GetAlertRule() string {
	if o == nil || IsNil(o.AlertRule) {
		var ret string
		return ret
	}
	return *o.AlertRule
}

// GetAlertRuleOk returns a tuple with the AlertRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetAlertRuleOk() (*string, bool) {
	if o == nil || IsNil(o.AlertRule) {
		return nil, false
	}
	return o.AlertRule, true
}

// SetAlertRule gets a reference to the given string and assigns it to the AlertRule field.
func (o *Essentials) SetAlertRule(v string) {
	o.AlertRule = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *Essentials) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *Essentials) SetSeverity(v string) {
	o.Severity = &v
}

// GetSignalType returns the SignalType field value if set, zero value otherwise.
func (o *Essentials) GetSignalType() string {
	if o == nil || IsNil(o.SignalType) {
		var ret string
		return ret
	}
	return *o.SignalType
}

// GetSignalTypeOk returns a tuple with the SignalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetSignalTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SignalType) {
		return nil, false
	}
	return o.SignalType, true
}

// SetSignalType gets a reference to the given string and assigns it to the SignalType field.
func (o *Essentials) SetSignalType(v string) {
	o.SignalType = &v
}

// GetMonitorCondition returns the MonitorCondition field value if set, zero value otherwise.
func (o *Essentials) GetMonitorCondition() string {
	if o == nil || IsNil(o.MonitorCondition) {
		var ret string
		return ret
	}
	return *o.MonitorCondition
}

// GetMonitorConditionOk returns a tuple with the MonitorCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetMonitorConditionOk() (*string, bool) {
	if o == nil || IsNil(o.MonitorCondition) {
		return nil, false
	}
	return o.MonitorCondition, true
}

// SetMonitorCondition gets a reference to the given string and assigns it to the MonitorCondition field.
func (o *Essentials) SetMonitorCondition(v string) {
	o.MonitorCondition = &v
}

// GetMonitoringService returns the MonitoringService field value if set, zero value otherwise.
func (o *Essentials) GetMonitoringService() string {
	if o == nil || IsNil(o.MonitoringService) {
		var ret string
		return ret
	}
	return *o.MonitoringService
}

// GetMonitoringServiceOk returns a tuple with the MonitoringService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetMonitoringServiceOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringService) {
		return nil, false
	}
	return o.MonitoringService, true
}

// SetMonitoringService gets a reference to the given string and assigns it to the MonitoringService field.
func (o *Essentials) SetMonitoringService(v string) {
	o.MonitoringService = &v
}

// GetAlertTargetIDs returns the AlertTargetIDs field value if set, zero value otherwise.
func (o *Essentials) GetAlertTargetIDs() []string {
	if o == nil || IsNil(o.AlertTargetIDs) {
		var ret []string
		return ret
	}
	return o.AlertTargetIDs
}

// GetAlertTargetIDsOk returns a tuple with the AlertTargetIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetAlertTargetIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.AlertTargetIDs) {
		return nil, false
	}
	return o.AlertTargetIDs, true
}

// SetAlertTargetIDs gets a reference to the given []string and assigns it to the AlertTargetIDs field.
func (o *Essentials) SetAlertTargetIDs(v []string) {
	o.AlertTargetIDs = v
}

// GetOriginAlertId returns the OriginAlertId field value if set, zero value otherwise.
func (o *Essentials) GetOriginAlertId() string {
	if o == nil || IsNil(o.OriginAlertId) {
		var ret string
		return ret
	}
	return *o.OriginAlertId
}

// GetOriginAlertIdOk returns a tuple with the OriginAlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetOriginAlertIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginAlertId) {
		return nil, false
	}
	return o.OriginAlertId, true
}

// SetOriginAlertId gets a reference to the given string and assigns it to the OriginAlertId field.
func (o *Essentials) SetOriginAlertId(v string) {
	o.OriginAlertId = &v
}

// GetFiredDateTime returns the FiredDateTime field value if set, zero value otherwise.
func (o *Essentials) GetFiredDateTime() time.Time {
	if o == nil || IsNil(o.FiredDateTime) {
		var ret time.Time
		return ret
	}
	return *o.FiredDateTime
}

// GetFiredDateTimeOk returns a tuple with the FiredDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetFiredDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FiredDateTime) {
		return nil, false
	}
	return o.FiredDateTime, true
}

// SetFiredDateTime gets a reference to the given time.Time and assigns it to the FiredDateTime field.
func (o *Essentials) SetFiredDateTime(v time.Time) {
	o.FiredDateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Essentials) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Essentials) SetDescription(v string) {
	o.Description = &v
}

// GetEssentialsVersion returns the EssentialsVersion field value if set, zero value otherwise.
func (o *Essentials) GetEssentialsVersion() string {
	if o == nil || IsNil(o.EssentialsVersion) {
		var ret string
		return ret
	}
	return *o.EssentialsVersion
}

// GetEssentialsVersionOk returns a tuple with the EssentialsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetEssentialsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.EssentialsVersion) {
		return nil, false
	}
	return o.EssentialsVersion, true
}

// SetEssentialsVersion gets a reference to the given string and assigns it to the EssentialsVersion field.
func (o *Essentials) SetEssentialsVersion(v string) {
	o.EssentialsVersion = &v
}

// GetAlertContextVersion returns the AlertContextVersion field value if set, zero value otherwise.
func (o *Essentials) GetAlertContextVersion() string {
	if o == nil || IsNil(o.AlertContextVersion) {
		var ret string
		return ret
	}
	return *o.AlertContextVersion
}

// GetAlertContextVersionOk returns a tuple with the AlertContextVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Essentials) GetAlertContextVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AlertContextVersion) {
		return nil, false
	}
	return o.AlertContextVersion, true
}

// SetAlertContextVersion gets a reference to the given string and assigns it to the AlertContextVersion field.
func (o *Essentials) SetAlertContextVersion(v string) {
	o.AlertContextVersion = &v
}

func (o Essentials) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Essentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertId) {
		toSerialize["alertId"] = o.AlertId
	}
	if !IsNil(o.AlertRule) {
		toSerialize["alertRule"] = o.AlertRule
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.SignalType) {
		toSerialize["signalType"] = o.SignalType
	}
	if !IsNil(o.MonitorCondition) {
		toSerialize["monitorCondition"] = o.MonitorCondition
	}
	if !IsNil(o.MonitoringService) {
		toSerialize["monitoringService"] = o.MonitoringService
	}
	if !IsNil(o.AlertTargetIDs) {
		toSerialize["alertTargetIDs"] = o.AlertTargetIDs
	}
	if !IsNil(o.OriginAlertId) {
		toSerialize["originAlertId"] = o.OriginAlertId
	}
	if !IsNil(o.FiredDateTime) {
		toSerialize["firedDateTime"] = o.FiredDateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EssentialsVersion) {
		toSerialize["essentialsVersion"] = o.EssentialsVersion
	}
	if !IsNil(o.AlertContextVersion) {
		toSerialize["alertContextVersion"] = o.AlertContextVersion
	}
	return toSerialize, nil
}

type NullableEssentials struct {
	value *Essentials
	isSet bool
}

func (v NullableEssentials) Get() *Essentials {
	return v.value
}

func (v *NullableEssentials) Set(val *Essentials) {
	v.value = val
	v.isSet = true
}

func (v NullableEssentials) IsSet() bool {
	return v.isSet
}

func (v *NullableEssentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEssentials(val *Essentials) *NullableEssentials {
	return &NullableEssentials{value: val, isSet: true}
}

func (v NullableEssentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEssentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
