/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogOnPremConnectivityModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogOnPremConnectivityModel{}

// CatalogOnPremConnectivityModel struct for CatalogOnPremConnectivityModel
type CatalogOnPremConnectivityModel struct {
	// ID of the Vnet Peering that will be used for on-prem connections
	VnetPeeringId *string `json:"vnetPeeringId,omitempty"`
	// ID of the VPN Connection that will be used by this catalog
	VpnConnectionId *string `json:"vpnConnectionId,omitempty"`
}

// NewCatalogOnPremConnectivityModelWithDefaults instantiates a new CatalogOnPremConnectivityModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogOnPremConnectivityModelWithDefaults() *CatalogOnPremConnectivityModel {
	this := CatalogOnPremConnectivityModel{}
	return &this
}

// GetVnetPeeringId returns the VnetPeeringId field value if set, zero value otherwise.
func (o *CatalogOnPremConnectivityModel) GetVnetPeeringId() string {
	if o == nil || IsNil(o.VnetPeeringId) {
		var ret string
		return ret
	}
	return *o.VnetPeeringId
}

// GetVnetPeeringIdOk returns a tuple with the VnetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOnPremConnectivityModel) GetVnetPeeringIdOk() (*string, bool) {
	if o == nil || IsNil(o.VnetPeeringId) {
		return nil, false
	}
	return o.VnetPeeringId, true
}

// SetVnetPeeringId gets a reference to the given string and assigns it to the VnetPeeringId field.
func (o *CatalogOnPremConnectivityModel) SetVnetPeeringId(v string) {
	o.VnetPeeringId = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value if set, zero value otherwise.
func (o *CatalogOnPremConnectivityModel) GetVpnConnectionId() string {
	if o == nil || IsNil(o.VpnConnectionId) {
		var ret string
		return ret
	}
	return *o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOnPremConnectivityModel) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VpnConnectionId) {
		return nil, false
	}
	return o.VpnConnectionId, true
}

// SetVpnConnectionId gets a reference to the given string and assigns it to the VpnConnectionId field.
func (o *CatalogOnPremConnectivityModel) SetVpnConnectionId(v string) {
	o.VpnConnectionId = &v
}

func (o CatalogOnPremConnectivityModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogOnPremConnectivityModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VnetPeeringId) {
		toSerialize["vnetPeeringId"] = o.VnetPeeringId
	}
	if !IsNil(o.VpnConnectionId) {
		toSerialize["vpnConnectionId"] = o.VpnConnectionId
	}
	return toSerialize, nil
}

type NullableCatalogOnPremConnectivityModel struct {
	value *CatalogOnPremConnectivityModel
	isSet bool
}

func (v NullableCatalogOnPremConnectivityModel) Get() *CatalogOnPremConnectivityModel {
	return v.value
}

func (v *NullableCatalogOnPremConnectivityModel) Set(val *CatalogOnPremConnectivityModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogOnPremConnectivityModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogOnPremConnectivityModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogOnPremConnectivityModel(val *CatalogOnPremConnectivityModel) *NullableCatalogOnPremConnectivityModel {
	return &NullableCatalogOnPremConnectivityModel{value: val, isSet: true}
}

func (v NullableCatalogOnPremConnectivityModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogOnPremConnectivityModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
