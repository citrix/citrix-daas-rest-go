/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureTokensResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureTokensResponse{}

// AzureTokensResponse struct for AzureTokensResponse
type AzureTokensResponse struct {
	// ID of the apps the tokens are applicable to
	AppId *string `json:"appId,omitempty"`
	// The tokens to the specified resources
	Tokens []AzureToken `json:"tokens,omitempty"`
}

// NewAzureTokensResponseWithDefaults instantiates a new AzureTokensResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureTokensResponseWithDefaults() *AzureTokensResponse {
	this := AzureTokensResponse{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AzureTokensResponse) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTokensResponse) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *AzureTokensResponse) SetAppId(v string) {
	o.AppId = &v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *AzureTokensResponse) GetTokens() []AzureToken {
	if o == nil || IsNil(o.Tokens) {
		var ret []AzureToken
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTokensResponse) GetTokensOk() ([]AzureToken, bool) {
	if o == nil || IsNil(o.Tokens) {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens gets a reference to the given []AzureToken and assigns it to the Tokens field.
func (o *AzureTokensResponse) SetTokens(v []AzureToken) {
	o.Tokens = v
}

func (o AzureTokensResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureTokensResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}
	return toSerialize, nil
}

type NullableAzureTokensResponse struct {
	value *AzureTokensResponse
	isSet bool
}

func (v NullableAzureTokensResponse) Get() *AzureTokensResponse {
	return v.value
}

func (v *NullableAzureTokensResponse) Set(val *AzureTokensResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureTokensResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureTokensResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureTokensResponse(val *AzureTokensResponse) *NullableAzureTokensResponse {
	return &NullableAzureTokensResponse{value: val, isSet: true}
}

func (v NullableAzureTokensResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureTokensResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
