/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureSubnet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSubnet{}

// AzureSubnet struct for AzureSubnet
type AzureSubnet struct {
	// Name of the subnet
	Name string `json:"name"`
	// The address range specified by this subnet
	AddressPrefix string `json:"addressPrefix"`
}

// NewAzureSubnetWithDefaults instantiates a new AzureSubnet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSubnetWithDefaults() *AzureSubnet {
	this := AzureSubnet{}
	return &this
}

// GetName returns the Name field value
func (o *AzureSubnet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureSubnet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureSubnet) SetName(v string) {
	o.Name = v
}

// GetAddressPrefix returns the AddressPrefix field value
func (o *AzureSubnet) GetAddressPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressPrefix
}

// GetAddressPrefixOk returns a tuple with the AddressPrefix field value
// and a boolean to check if the value has been set.
func (o *AzureSubnet) GetAddressPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressPrefix, true
}

// SetAddressPrefix sets field value
func (o *AzureSubnet) SetAddressPrefix(v string) {
	o.AddressPrefix = v
}

func (o AzureSubnet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSubnet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["addressPrefix"] = o.AddressPrefix
	return toSerialize, nil
}

type NullableAzureSubnet struct {
	value *AzureSubnet
	isSet bool
}

func (v NullableAzureSubnet) Get() *AzureSubnet {
	return v.value
}

func (v *NullableAzureSubnet) Set(val *AzureSubnet) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSubnet) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSubnet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSubnet(val *AzureSubnet) *NullableAzureSubnet {
	return &NullableAzureSubnet{value: val, isSet: true}
}

func (v NullableAzureSubnet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSubnet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
