/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the SnapshotNameModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotNameModel{}

// SnapshotNameModel struct for SnapshotNameModel
type SnapshotNameModel struct {
	SnapshotName *string `json:"snapshotName,omitempty" validate:"regexp=^[a-zA-Z0-9_]*$"`
}

// NewSnapshotNameModelWithDefaults instantiates a new SnapshotNameModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotNameModelWithDefaults() *SnapshotNameModel {
	this := SnapshotNameModel{}
	return &this
}

// GetSnapshotName returns the SnapshotName field value if set, zero value otherwise.
func (o *SnapshotNameModel) GetSnapshotName() string {
	if o == nil || IsNil(o.SnapshotName) {
		var ret string
		return ret
	}
	return *o.SnapshotName
}

// GetSnapshotNameOk returns a tuple with the SnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotNameModel) GetSnapshotNameOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotName) {
		return nil, false
	}
	return o.SnapshotName, true
}

// SetSnapshotName gets a reference to the given string and assigns it to the SnapshotName field.
func (o *SnapshotNameModel) SetSnapshotName(v string) {
	o.SnapshotName = &v
}

func (o SnapshotNameModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotNameModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SnapshotName) {
		toSerialize["snapshotName"] = o.SnapshotName
	}
	return toSerialize, nil
}

type NullableSnapshotNameModel struct {
	value *SnapshotNameModel
	isSet bool
}

func (v NullableSnapshotNameModel) Get() *SnapshotNameModel {
	return v.value
}

func (v *NullableSnapshotNameModel) Set(val *SnapshotNameModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotNameModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotNameModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotNameModel(val *SnapshotNameModel) *NullableSnapshotNameModel {
	return &NullableSnapshotNameModel{value: val, isSet: true}
}

func (v NullableSnapshotNameModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotNameModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
