/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ConnectivityModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectivityModel{}

// ConnectivityModel struct for ConnectivityModel
type ConnectivityModel struct {
	ResourceLocationId     string           `json:"resourceLocationId"`
	ResourceLocationName   *string          `json:"resourceLocationName,omitempty"`
	Type                   ConnectivityType `json:"type"`
	NetscalerOnPremisesUrl *string          `json:"netscalerOnPremisesUrl,omitempty"`
}

// NewConnectivityModelWithDefaults instantiates a new ConnectivityModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectivityModelWithDefaults() *ConnectivityModel {
	this := ConnectivityModel{}
	return &this
}

// GetResourceLocationId returns the ResourceLocationId field value
func (o *ConnectivityModel) GetResourceLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceLocationId
}

// GetResourceLocationIdOk returns a tuple with the ResourceLocationId field value
// and a boolean to check if the value has been set.
func (o *ConnectivityModel) GetResourceLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceLocationId, true
}

// SetResourceLocationId sets field value
func (o *ConnectivityModel) SetResourceLocationId(v string) {
	o.ResourceLocationId = v
}

// GetResourceLocationName returns the ResourceLocationName field value if set, zero value otherwise.
func (o *ConnectivityModel) GetResourceLocationName() string {
	if o == nil || IsNil(o.ResourceLocationName) {
		var ret string
		return ret
	}
	return *o.ResourceLocationName
}

// GetResourceLocationNameOk returns a tuple with the ResourceLocationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectivityModel) GetResourceLocationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceLocationName) {
		return nil, false
	}
	return o.ResourceLocationName, true
}

// SetResourceLocationName gets a reference to the given string and assigns it to the ResourceLocationName field.
func (o *ConnectivityModel) SetResourceLocationName(v string) {
	o.ResourceLocationName = &v
}

// GetType returns the Type field value
func (o *ConnectivityModel) GetType() ConnectivityType {
	if o == nil {
		var ret ConnectivityType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ConnectivityModel) GetTypeOk() (*ConnectivityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ConnectivityModel) SetType(v ConnectivityType) {
	o.Type = v
}

// GetNetscalerOnPremisesUrl returns the NetscalerOnPremisesUrl field value if set, zero value otherwise.
func (o *ConnectivityModel) GetNetscalerOnPremisesUrl() string {
	if o == nil || IsNil(o.NetscalerOnPremisesUrl) {
		var ret string
		return ret
	}
	return *o.NetscalerOnPremisesUrl
}

// GetNetscalerOnPremisesUrlOk returns a tuple with the NetscalerOnPremisesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectivityModel) GetNetscalerOnPremisesUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NetscalerOnPremisesUrl) {
		return nil, false
	}
	return o.NetscalerOnPremisesUrl, true
}

// SetNetscalerOnPremisesUrl gets a reference to the given string and assigns it to the NetscalerOnPremisesUrl field.
func (o *ConnectivityModel) SetNetscalerOnPremisesUrl(v string) {
	o.NetscalerOnPremisesUrl = &v
}

func (o ConnectivityModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectivityModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceLocationId"] = o.ResourceLocationId
	if !IsNil(o.ResourceLocationName) {
		toSerialize["resourceLocationName"] = o.ResourceLocationName
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.NetscalerOnPremisesUrl) {
		toSerialize["netscalerOnPremisesUrl"] = o.NetscalerOnPremisesUrl
	}
	return toSerialize, nil
}

type NullableConnectivityModel struct {
	value *ConnectivityModel
	isSet bool
}

func (v NullableConnectivityModel) Get() *ConnectivityModel {
	return v.value
}

func (v *NullableConnectivityModel) Set(val *ConnectivityModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectivityModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectivityModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectivityModel(val *ConnectivityModel) *NullableConnectivityModel {
	return &NullableConnectivityModel{value: val, isSet: true}
}

func (v NullableConnectivityModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectivityModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
