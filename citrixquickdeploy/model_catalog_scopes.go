/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogScopes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogScopes{}

// CatalogScopes Summary view of the catalog scopes
type CatalogScopes struct {
	CatalogId                 *string                    `json:"catalogId,omitempty"`
	CatalogName               *string                    `json:"catalogName,omitempty"`
	Advanced                  *bool                      `json:"advanced,omitempty"`
	DeliveryGroupScopes       []string                   `json:"deliveryGroupScopes,omitempty"`
	DeliveryGroupMetadata     []NameValueStringPairModel `json:"deliveryGroupMetadata,omitempty"`
	MachineCatalogScopes      []string                   `json:"machineCatalogScopes,omitempty"`
	MachineCatalogMetadata    []NameValueStringPairModel `json:"machineCatalogMetadata,omitempty"`
	HostingConnectionScopes   []string                   `json:"hostingConnectionScopes,omitempty"`
	HostingConnectionMetadata []NameValueStringPairModel `json:"hostingConnectionMetadata,omitempty"`
	Error                     *bool                      `json:"error,omitempty"`
	ErrorMessage              *string                    `json:"errorMessage,omitempty"`
}

// NewCatalogScopesWithDefaults instantiates a new CatalogScopes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogScopesWithDefaults() *CatalogScopes {
	this := CatalogScopes{}
	return &this
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *CatalogScopes) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *CatalogScopes) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *CatalogScopes) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *CatalogScopes) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetAdvanced returns the Advanced field value if set, zero value otherwise.
func (o *CatalogScopes) GetAdvanced() bool {
	if o == nil || IsNil(o.Advanced) {
		var ret bool
		return ret
	}
	return *o.Advanced
}

// GetAdvancedOk returns a tuple with the Advanced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetAdvancedOk() (*bool, bool) {
	if o == nil || IsNil(o.Advanced) {
		return nil, false
	}
	return o.Advanced, true
}

// SetAdvanced gets a reference to the given bool and assigns it to the Advanced field.
func (o *CatalogScopes) SetAdvanced(v bool) {
	o.Advanced = &v
}

// GetDeliveryGroupScopes returns the DeliveryGroupScopes field value if set, zero value otherwise.
func (o *CatalogScopes) GetDeliveryGroupScopes() []string {
	if o == nil || IsNil(o.DeliveryGroupScopes) {
		var ret []string
		return ret
	}
	return o.DeliveryGroupScopes
}

// GetDeliveryGroupScopesOk returns a tuple with the DeliveryGroupScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetDeliveryGroupScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.DeliveryGroupScopes) {
		return nil, false
	}
	return o.DeliveryGroupScopes, true
}

// SetDeliveryGroupScopes gets a reference to the given []string and assigns it to the DeliveryGroupScopes field.
func (o *CatalogScopes) SetDeliveryGroupScopes(v []string) {
	o.DeliveryGroupScopes = v
}

// GetDeliveryGroupMetadata returns the DeliveryGroupMetadata field value if set, zero value otherwise.
func (o *CatalogScopes) GetDeliveryGroupMetadata() []NameValueStringPairModel {
	if o == nil || IsNil(o.DeliveryGroupMetadata) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.DeliveryGroupMetadata
}

// GetDeliveryGroupMetadataOk returns a tuple with the DeliveryGroupMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetDeliveryGroupMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.DeliveryGroupMetadata) {
		return nil, false
	}
	return o.DeliveryGroupMetadata, true
}

// SetDeliveryGroupMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the DeliveryGroupMetadata field.
func (o *CatalogScopes) SetDeliveryGroupMetadata(v []NameValueStringPairModel) {
	o.DeliveryGroupMetadata = v
}

// GetMachineCatalogScopes returns the MachineCatalogScopes field value if set, zero value otherwise.
func (o *CatalogScopes) GetMachineCatalogScopes() []string {
	if o == nil || IsNil(o.MachineCatalogScopes) {
		var ret []string
		return ret
	}
	return o.MachineCatalogScopes
}

// GetMachineCatalogScopesOk returns a tuple with the MachineCatalogScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetMachineCatalogScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.MachineCatalogScopes) {
		return nil, false
	}
	return o.MachineCatalogScopes, true
}

// SetMachineCatalogScopes gets a reference to the given []string and assigns it to the MachineCatalogScopes field.
func (o *CatalogScopes) SetMachineCatalogScopes(v []string) {
	o.MachineCatalogScopes = v
}

// GetMachineCatalogMetadata returns the MachineCatalogMetadata field value if set, zero value otherwise.
func (o *CatalogScopes) GetMachineCatalogMetadata() []NameValueStringPairModel {
	if o == nil || IsNil(o.MachineCatalogMetadata) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.MachineCatalogMetadata
}

// GetMachineCatalogMetadataOk returns a tuple with the MachineCatalogMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetMachineCatalogMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.MachineCatalogMetadata) {
		return nil, false
	}
	return o.MachineCatalogMetadata, true
}

// SetMachineCatalogMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the MachineCatalogMetadata field.
func (o *CatalogScopes) SetMachineCatalogMetadata(v []NameValueStringPairModel) {
	o.MachineCatalogMetadata = v
}

// GetHostingConnectionScopes returns the HostingConnectionScopes field value if set, zero value otherwise.
func (o *CatalogScopes) GetHostingConnectionScopes() []string {
	if o == nil || IsNil(o.HostingConnectionScopes) {
		var ret []string
		return ret
	}
	return o.HostingConnectionScopes
}

// GetHostingConnectionScopesOk returns a tuple with the HostingConnectionScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetHostingConnectionScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.HostingConnectionScopes) {
		return nil, false
	}
	return o.HostingConnectionScopes, true
}

// SetHostingConnectionScopes gets a reference to the given []string and assigns it to the HostingConnectionScopes field.
func (o *CatalogScopes) SetHostingConnectionScopes(v []string) {
	o.HostingConnectionScopes = v
}

// GetHostingConnectionMetadata returns the HostingConnectionMetadata field value if set, zero value otherwise.
func (o *CatalogScopes) GetHostingConnectionMetadata() []NameValueStringPairModel {
	if o == nil || IsNil(o.HostingConnectionMetadata) {
		var ret []NameValueStringPairModel
		return ret
	}
	return o.HostingConnectionMetadata
}

// GetHostingConnectionMetadataOk returns a tuple with the HostingConnectionMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetHostingConnectionMetadataOk() ([]NameValueStringPairModel, bool) {
	if o == nil || IsNil(o.HostingConnectionMetadata) {
		return nil, false
	}
	return o.HostingConnectionMetadata, true
}

// SetHostingConnectionMetadata gets a reference to the given []NameValueStringPairModel and assigns it to the HostingConnectionMetadata field.
func (o *CatalogScopes) SetHostingConnectionMetadata(v []NameValueStringPairModel) {
	o.HostingConnectionMetadata = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CatalogScopes) GetError() bool {
	if o == nil || IsNil(o.Error) {
		var ret bool
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetErrorOk() (*bool, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// SetError gets a reference to the given bool and assigns it to the Error field.
func (o *CatalogScopes) SetError(v bool) {
	o.Error = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *CatalogScopes) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScopes) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *CatalogScopes) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o CatalogScopes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogScopes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogId) {
		toSerialize["catalogId"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalogName"] = o.CatalogName
	}
	if !IsNil(o.Advanced) {
		toSerialize["advanced"] = o.Advanced
	}
	if !IsNil(o.DeliveryGroupScopes) {
		toSerialize["deliveryGroupScopes"] = o.DeliveryGroupScopes
	}
	if !IsNil(o.DeliveryGroupMetadata) {
		toSerialize["deliveryGroupMetadata"] = o.DeliveryGroupMetadata
	}
	if !IsNil(o.MachineCatalogScopes) {
		toSerialize["machineCatalogScopes"] = o.MachineCatalogScopes
	}
	if !IsNil(o.MachineCatalogMetadata) {
		toSerialize["machineCatalogMetadata"] = o.MachineCatalogMetadata
	}
	if !IsNil(o.HostingConnectionScopes) {
		toSerialize["hostingConnectionScopes"] = o.HostingConnectionScopes
	}
	if !IsNil(o.HostingConnectionMetadata) {
		toSerialize["hostingConnectionMetadata"] = o.HostingConnectionMetadata
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableCatalogScopes struct {
	value *CatalogScopes
	isSet bool
}

func (v NullableCatalogScopes) Get() *CatalogScopes {
	return v.value
}

func (v *NullableCatalogScopes) Set(val *CatalogScopes) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogScopes) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogScopes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogScopes(val *CatalogScopes) *NullableCatalogScopes {
	return &NullableCatalogScopes{value: val, isSet: true}
}

func (v NullableCatalogScopes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogScopes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
