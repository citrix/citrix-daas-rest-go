/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the CatalogConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogConfiguration{}

// CatalogConfiguration Summary view of the catalog for INTERNAL use
type CatalogConfiguration struct {
	// Unique identifier of the catalog
	Id string `json:"id"`
	// User configured name
	Name string `json:"name"`
	// Quantity of sessions supported per-machine.
	SessionSupport *SessionSupport `json:"sessionSupport,omitempty"`
	// Indicates the manner in which machines are allocated to users
	AllocationType *CatalogAllocationType `json:"allocationType,omitempty"`
	// Indicates if catalogs that use statically allocated machines will have the disk contents persisted after shutdown
	PersistStaticAllocatedVmDisks *bool `json:"persistStaticAllocatedVmDisks,omitempty"`
	// The offeringId for the catalog to be used in Cloud Library operations
	OfferingId string `json:"offeringId"`
	// The Application offeringId for the catalog to be used in Cloud Library operations
	OfferingIdApp string `json:"offeringIdApp"`
	// The Desktop offeringId for the catalog to be used in Cloud Library operations
	OfferingIdDesktop string `json:"offeringIdDesktop"`
	// The Delivery Group Id
	DeliveryGroupId string `json:"deliveryGroupId"`
	// Indicates if this is an advanced object
	Advanced bool `json:"advanced"`
	// Status of the catalog
	State CatalogOverallState `json:"state"`
	// Sub Status of the catalog
	SubState *CatalogOverallSubState `json:"subState,omitempty"`
	Warnings []CatalogWarning        `json:"warnings,omitempty"`
	// Current status of the catalog
	StatusMessage *string `json:"statusMessage,omitempty"`
	// The string to displayed in UI for extra information
	ExtraInfo *string `json:"extraInfo,omitempty"`
	// The transaction id of the catalog deployment
	TransactionId *string `json:"transactionId,omitempty"`
	// ID of the Vnet Peering associated with the catalog
	VnetPeeringId *string `json:"vnetPeeringId,omitempty"`
	// Name of the Vnet Peering associated with the catalog
	VnetPeeringName *string `json:"vnetPeeringName,omitempty"`
	// ID of the Vpn Connection associated with the catalog
	VpnConnectionId *string `json:"vpnConnectionId,omitempty"`
	// Name of the Vpn Connection associated with the catalog
	VpnConnectionName *string `json:"vpnConnectionName,omitempty"`
	// Id of the Subscription that catalog VMs will be deployed to
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// Name of the Subscription that catalog VMs will be deployed to
	SubscriptionName string `json:"subscriptionName"`
	// Name of the resource group used for this catalog
	ResourceGroup string `json:"resourceGroup"`
	// The resource group for the VDAs in Azure
	VdaResourceGroup *string `json:"vdaResourceGroup,omitempty"`
	// The resource groups for the VDAs in Azure
	VdaProvisioningSchemeId *string `json:"vdaProvisioningSchemeId,omitempty"`
	// The resource groups for the VDAs in Azure
	AreMcsVdaResourceGroupsUsed *bool `json:"areMcsVdaResourceGroupsUsed,omitempty"`
	// ID of the Resource Location associated with the catalog
	ResourceLocationId *string `json:"resourceLocationId,omitempty"`
	// Azure region where VMs are deployed for this catalog
	Region string `json:"region"`
	// Name of the vnet assigned to the catalog
	VNetName string `json:"vNetName"`
	// The subnet that is associated with the catalog's VNet
	Subnet *string `json:"subnet,omitempty"`
	// The flag to indicate if the catalog is joined with customer domain
	DomainJoined *bool `json:"domainJoined,omitempty"`
	// Name of the domain that the catalog's VMs will join
	DomainName *string `json:"domainName,omitempty"`
	// OU of the domain we are joining
	DomainOU *string `json:"domainOU,omitempty"`
	// Name of the service account that will perform domain join opperations
	DomainServiceAccount *string `json:"domainServiceAccount,omitempty"`
	// Type of the VM machines used to create VDAs
	VmTypeInstanceType *string `json:"vmTypeInstanceType,omitempty"`
	// ID of the image that is used by the catalog
	ImageId *string `json:"imageId,omitempty"`
	// Name of the template image that we are using for this catalog
	TemplateImageName *string `json:"templateImageName,omitempty"`
	// Os type of the template image that we are using for this catalog
	TemplateImageOs *string `json:"templateImageOs,omitempty"`
	// Indicates that partner-tenant relationship exists if not null
	CitrixManaged *bool `json:"citrixManaged,omitempty"`
	// Indicates that partner-tenant relationship exists if not null
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// Maximum number of machines assigned to the catalog
	TotalMachinesInCatalog *int32 `json:"totalMachinesInCatalog,omitempty"`
	// Indicates whether or not write back cache is enabled for the VMs created from this provisioning scheme.
	WriteBackCacheConfiguration *WbcConfig `json:"writeBackCacheConfiguration,omitempty"`
	// Percentage complete the current task being performed on the catalog is at
	TaskCompletionPercentage *int32 `json:"taskCompletionPercentage,omitempty"`
	// Last time when the catalog was modified
	LastModifiedTime *time.Time `json:"lastModifiedTime,omitempty"`
	// Last backup time for the catalog's VDAs
	LastBackupTime *time.Time `json:"lastBackupTime,omitempty"`
	// Indicates if this is a remote pc catalog
	IsRemotePcCatalog *bool `json:"isRemotePcCatalog,omitempty"`
	// Indicates if the machines in the catalog will be Azure AD joined
	IsAzureAdJoined *bool `json:"isAzureAdJoined,omitempty"`
	// Indicates if the catalog is for Secure Browser service
	IsSecureBrowserCatalog *bool `json:"isSecureBrowserCatalog,omitempty"`
	// List of OUs for remote pc
	OrganizationalUnits []RemotePCEnrollmentScopeResponseModel `json:"organizationalUnits,omitempty"`
	// Indicates whether machines in catalog support hibernation
	SupportsHibernation *bool `json:"supportsHibernation,omitempty"`
}

// NewCatalogConfigurationWithDefaults instantiates a new CatalogConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogConfigurationWithDefaults() *CatalogConfiguration {
	this := CatalogConfiguration{}
	return &this
}

// GetId returns the Id field value
func (o *CatalogConfiguration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CatalogConfiguration) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CatalogConfiguration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogConfiguration) SetName(v string) {
	o.Name = v
}

// GetSessionSupport returns the SessionSupport field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetSessionSupport() SessionSupport {
	if o == nil || IsNil(o.SessionSupport) {
		var ret SessionSupport
		return ret
	}
	return *o.SessionSupport
}

// GetSessionSupportOk returns a tuple with the SessionSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSessionSupportOk() (*SessionSupport, bool) {
	if o == nil || IsNil(o.SessionSupport) {
		return nil, false
	}
	return o.SessionSupport, true
}

// SetSessionSupport gets a reference to the given SessionSupport and assigns it to the SessionSupport field.
func (o *CatalogConfiguration) SetSessionSupport(v SessionSupport) {
	o.SessionSupport = &v
}

// GetAllocationType returns the AllocationType field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetAllocationType() CatalogAllocationType {
	if o == nil || IsNil(o.AllocationType) {
		var ret CatalogAllocationType
		return ret
	}
	return *o.AllocationType
}

// GetAllocationTypeOk returns a tuple with the AllocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetAllocationTypeOk() (*CatalogAllocationType, bool) {
	if o == nil || IsNil(o.AllocationType) {
		return nil, false
	}
	return o.AllocationType, true
}

// SetAllocationType gets a reference to the given CatalogAllocationType and assigns it to the AllocationType field.
func (o *CatalogConfiguration) SetAllocationType(v CatalogAllocationType) {
	o.AllocationType = &v
}

// GetPersistStaticAllocatedVmDisks returns the PersistStaticAllocatedVmDisks field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetPersistStaticAllocatedVmDisks() bool {
	if o == nil || IsNil(o.PersistStaticAllocatedVmDisks) {
		var ret bool
		return ret
	}
	return *o.PersistStaticAllocatedVmDisks
}

// GetPersistStaticAllocatedVmDisksOk returns a tuple with the PersistStaticAllocatedVmDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetPersistStaticAllocatedVmDisksOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistStaticAllocatedVmDisks) {
		return nil, false
	}
	return o.PersistStaticAllocatedVmDisks, true
}

// SetPersistStaticAllocatedVmDisks gets a reference to the given bool and assigns it to the PersistStaticAllocatedVmDisks field.
func (o *CatalogConfiguration) SetPersistStaticAllocatedVmDisks(v bool) {
	o.PersistStaticAllocatedVmDisks = &v
}

// GetOfferingId returns the OfferingId field value
func (o *CatalogConfiguration) GetOfferingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferingId
}

// GetOfferingIdOk returns a tuple with the OfferingId field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetOfferingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferingId, true
}

// SetOfferingId sets field value
func (o *CatalogConfiguration) SetOfferingId(v string) {
	o.OfferingId = v
}

// GetOfferingIdApp returns the OfferingIdApp field value
func (o *CatalogConfiguration) GetOfferingIdApp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferingIdApp
}

// GetOfferingIdAppOk returns a tuple with the OfferingIdApp field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetOfferingIdAppOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferingIdApp, true
}

// SetOfferingIdApp sets field value
func (o *CatalogConfiguration) SetOfferingIdApp(v string) {
	o.OfferingIdApp = v
}

// GetOfferingIdDesktop returns the OfferingIdDesktop field value
func (o *CatalogConfiguration) GetOfferingIdDesktop() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferingIdDesktop
}

// GetOfferingIdDesktopOk returns a tuple with the OfferingIdDesktop field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetOfferingIdDesktopOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferingIdDesktop, true
}

// SetOfferingIdDesktop sets field value
func (o *CatalogConfiguration) SetOfferingIdDesktop(v string) {
	o.OfferingIdDesktop = v
}

// GetDeliveryGroupId returns the DeliveryGroupId field value
func (o *CatalogConfiguration) GetDeliveryGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeliveryGroupId
}

// GetDeliveryGroupIdOk returns a tuple with the DeliveryGroupId field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetDeliveryGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryGroupId, true
}

// SetDeliveryGroupId sets field value
func (o *CatalogConfiguration) SetDeliveryGroupId(v string) {
	o.DeliveryGroupId = v
}

// GetAdvanced returns the Advanced field value
func (o *CatalogConfiguration) GetAdvanced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Advanced
}

// GetAdvancedOk returns a tuple with the Advanced field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetAdvancedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Advanced, true
}

// SetAdvanced sets field value
func (o *CatalogConfiguration) SetAdvanced(v bool) {
	o.Advanced = v
}

// GetState returns the State field value
func (o *CatalogConfiguration) GetState() CatalogOverallState {
	if o == nil {
		var ret CatalogOverallState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetStateOk() (*CatalogOverallState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CatalogConfiguration) SetState(v CatalogOverallState) {
	o.State = v
}

// GetSubState returns the SubState field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetSubState() CatalogOverallSubState {
	if o == nil || IsNil(o.SubState) {
		var ret CatalogOverallSubState
		return ret
	}
	return *o.SubState
}

// GetSubStateOk returns a tuple with the SubState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSubStateOk() (*CatalogOverallSubState, bool) {
	if o == nil || IsNil(o.SubState) {
		return nil, false
	}
	return o.SubState, true
}

// SetSubState gets a reference to the given CatalogOverallSubState and assigns it to the SubState field.
func (o *CatalogConfiguration) SetSubState(v CatalogOverallSubState) {
	o.SubState = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetWarnings() []CatalogWarning {
	if o == nil || IsNil(o.Warnings) {
		var ret []CatalogWarning
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetWarningsOk() ([]CatalogWarning, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// SetWarnings gets a reference to the given []CatalogWarning and assigns it to the Warnings field.
func (o *CatalogConfiguration) SetWarnings(v []CatalogWarning) {
	o.Warnings = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *CatalogConfiguration) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetExtraInfo returns the ExtraInfo field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetExtraInfo() string {
	if o == nil || IsNil(o.ExtraInfo) {
		var ret string
		return ret
	}
	return *o.ExtraInfo
}

// GetExtraInfoOk returns a tuple with the ExtraInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetExtraInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraInfo) {
		return nil, false
	}
	return o.ExtraInfo, true
}

// SetExtraInfo gets a reference to the given string and assigns it to the ExtraInfo field.
func (o *CatalogConfiguration) SetExtraInfo(v string) {
	o.ExtraInfo = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *CatalogConfiguration) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetVnetPeeringId returns the VnetPeeringId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVnetPeeringId() string {
	if o == nil || IsNil(o.VnetPeeringId) {
		var ret string
		return ret
	}
	return *o.VnetPeeringId
}

// GetVnetPeeringIdOk returns a tuple with the VnetPeeringId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVnetPeeringIdOk() (*string, bool) {
	if o == nil || IsNil(o.VnetPeeringId) {
		return nil, false
	}
	return o.VnetPeeringId, true
}

// SetVnetPeeringId gets a reference to the given string and assigns it to the VnetPeeringId field.
func (o *CatalogConfiguration) SetVnetPeeringId(v string) {
	o.VnetPeeringId = &v
}

// GetVnetPeeringName returns the VnetPeeringName field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVnetPeeringName() string {
	if o == nil || IsNil(o.VnetPeeringName) {
		var ret string
		return ret
	}
	return *o.VnetPeeringName
}

// GetVnetPeeringNameOk returns a tuple with the VnetPeeringName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVnetPeeringNameOk() (*string, bool) {
	if o == nil || IsNil(o.VnetPeeringName) {
		return nil, false
	}
	return o.VnetPeeringName, true
}

// SetVnetPeeringName gets a reference to the given string and assigns it to the VnetPeeringName field.
func (o *CatalogConfiguration) SetVnetPeeringName(v string) {
	o.VnetPeeringName = &v
}

// GetVpnConnectionId returns the VpnConnectionId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVpnConnectionId() string {
	if o == nil || IsNil(o.VpnConnectionId) {
		var ret string
		return ret
	}
	return *o.VpnConnectionId
}

// GetVpnConnectionIdOk returns a tuple with the VpnConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVpnConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VpnConnectionId) {
		return nil, false
	}
	return o.VpnConnectionId, true
}

// SetVpnConnectionId gets a reference to the given string and assigns it to the VpnConnectionId field.
func (o *CatalogConfiguration) SetVpnConnectionId(v string) {
	o.VpnConnectionId = &v
}

// GetVpnConnectionName returns the VpnConnectionName field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVpnConnectionName() string {
	if o == nil || IsNil(o.VpnConnectionName) {
		var ret string
		return ret
	}
	return *o.VpnConnectionName
}

// GetVpnConnectionNameOk returns a tuple with the VpnConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVpnConnectionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VpnConnectionName) {
		return nil, false
	}
	return o.VpnConnectionName, true
}

// SetVpnConnectionName gets a reference to the given string and assigns it to the VpnConnectionName field.
func (o *CatalogConfiguration) SetVpnConnectionName(v string) {
	o.VpnConnectionName = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *CatalogConfiguration) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionName returns the SubscriptionName field value
func (o *CatalogConfiguration) GetSubscriptionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSubscriptionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionName, true
}

// SetSubscriptionName sets field value
func (o *CatalogConfiguration) SetSubscriptionName(v string) {
	o.SubscriptionName = v
}

// GetResourceGroup returns the ResourceGroup field value
func (o *CatalogConfiguration) GetResourceGroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetResourceGroupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceGroup, true
}

// SetResourceGroup sets field value
func (o *CatalogConfiguration) SetResourceGroup(v string) {
	o.ResourceGroup = v
}

// GetVdaResourceGroup returns the VdaResourceGroup field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVdaResourceGroup() string {
	if o == nil || IsNil(o.VdaResourceGroup) {
		var ret string
		return ret
	}
	return *o.VdaResourceGroup
}

// GetVdaResourceGroupOk returns a tuple with the VdaResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVdaResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.VdaResourceGroup) {
		return nil, false
	}
	return o.VdaResourceGroup, true
}

// SetVdaResourceGroup gets a reference to the given string and assigns it to the VdaResourceGroup field.
func (o *CatalogConfiguration) SetVdaResourceGroup(v string) {
	o.VdaResourceGroup = &v
}

// GetVdaProvisioningSchemeId returns the VdaProvisioningSchemeId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVdaProvisioningSchemeId() string {
	if o == nil || IsNil(o.VdaProvisioningSchemeId) {
		var ret string
		return ret
	}
	return *o.VdaProvisioningSchemeId
}

// GetVdaProvisioningSchemeIdOk returns a tuple with the VdaProvisioningSchemeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVdaProvisioningSchemeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VdaProvisioningSchemeId) {
		return nil, false
	}
	return o.VdaProvisioningSchemeId, true
}

// SetVdaProvisioningSchemeId gets a reference to the given string and assigns it to the VdaProvisioningSchemeId field.
func (o *CatalogConfiguration) SetVdaProvisioningSchemeId(v string) {
	o.VdaProvisioningSchemeId = &v
}

// GetAreMcsVdaResourceGroupsUsed returns the AreMcsVdaResourceGroupsUsed field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetAreMcsVdaResourceGroupsUsed() bool {
	if o == nil || IsNil(o.AreMcsVdaResourceGroupsUsed) {
		var ret bool
		return ret
	}
	return *o.AreMcsVdaResourceGroupsUsed
}

// GetAreMcsVdaResourceGroupsUsedOk returns a tuple with the AreMcsVdaResourceGroupsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetAreMcsVdaResourceGroupsUsedOk() (*bool, bool) {
	if o == nil || IsNil(o.AreMcsVdaResourceGroupsUsed) {
		return nil, false
	}
	return o.AreMcsVdaResourceGroupsUsed, true
}

// SetAreMcsVdaResourceGroupsUsed gets a reference to the given bool and assigns it to the AreMcsVdaResourceGroupsUsed field.
func (o *CatalogConfiguration) SetAreMcsVdaResourceGroupsUsed(v bool) {
	o.AreMcsVdaResourceGroupsUsed = &v
}

// GetResourceLocationId returns the ResourceLocationId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetResourceLocationId() string {
	if o == nil || IsNil(o.ResourceLocationId) {
		var ret string
		return ret
	}
	return *o.ResourceLocationId
}

// GetResourceLocationIdOk returns a tuple with the ResourceLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetResourceLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceLocationId) {
		return nil, false
	}
	return o.ResourceLocationId, true
}

// SetResourceLocationId gets a reference to the given string and assigns it to the ResourceLocationId field.
func (o *CatalogConfiguration) SetResourceLocationId(v string) {
	o.ResourceLocationId = &v
}

// GetRegion returns the Region field value
func (o *CatalogConfiguration) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CatalogConfiguration) SetRegion(v string) {
	o.Region = v
}

// GetVNetName returns the VNetName field value
func (o *CatalogConfiguration) GetVNetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VNetName
}

// GetVNetNameOk returns a tuple with the VNetName field value
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVNetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VNetName, true
}

// SetVNetName sets field value
func (o *CatalogConfiguration) SetVNetName(v string) {
	o.VNetName = v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetSubnet() string {
	if o == nil || IsNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSubnetOk() (*string, bool) {
	if o == nil || IsNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *CatalogConfiguration) SetSubnet(v string) {
	o.Subnet = &v
}

// GetDomainJoined returns the DomainJoined field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetDomainJoined() bool {
	if o == nil || IsNil(o.DomainJoined) {
		var ret bool
		return ret
	}
	return *o.DomainJoined
}

// GetDomainJoinedOk returns a tuple with the DomainJoined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetDomainJoinedOk() (*bool, bool) {
	if o == nil || IsNil(o.DomainJoined) {
		return nil, false
	}
	return o.DomainJoined, true
}

// SetDomainJoined gets a reference to the given bool and assigns it to the DomainJoined field.
func (o *CatalogConfiguration) SetDomainJoined(v bool) {
	o.DomainJoined = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *CatalogConfiguration) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainOU returns the DomainOU field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetDomainOU() string {
	if o == nil || IsNil(o.DomainOU) {
		var ret string
		return ret
	}
	return *o.DomainOU
}

// GetDomainOUOk returns a tuple with the DomainOU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetDomainOUOk() (*string, bool) {
	if o == nil || IsNil(o.DomainOU) {
		return nil, false
	}
	return o.DomainOU, true
}

// SetDomainOU gets a reference to the given string and assigns it to the DomainOU field.
func (o *CatalogConfiguration) SetDomainOU(v string) {
	o.DomainOU = &v
}

// GetDomainServiceAccount returns the DomainServiceAccount field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetDomainServiceAccount() string {
	if o == nil || IsNil(o.DomainServiceAccount) {
		var ret string
		return ret
	}
	return *o.DomainServiceAccount
}

// GetDomainServiceAccountOk returns a tuple with the DomainServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetDomainServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.DomainServiceAccount) {
		return nil, false
	}
	return o.DomainServiceAccount, true
}

// SetDomainServiceAccount gets a reference to the given string and assigns it to the DomainServiceAccount field.
func (o *CatalogConfiguration) SetDomainServiceAccount(v string) {
	o.DomainServiceAccount = &v
}

// GetVmTypeInstanceType returns the VmTypeInstanceType field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetVmTypeInstanceType() string {
	if o == nil || IsNil(o.VmTypeInstanceType) {
		var ret string
		return ret
	}
	return *o.VmTypeInstanceType
}

// GetVmTypeInstanceTypeOk returns a tuple with the VmTypeInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetVmTypeInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VmTypeInstanceType) {
		return nil, false
	}
	return o.VmTypeInstanceType, true
}

// SetVmTypeInstanceType gets a reference to the given string and assigns it to the VmTypeInstanceType field.
func (o *CatalogConfiguration) SetVmTypeInstanceType(v string) {
	o.VmTypeInstanceType = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *CatalogConfiguration) SetImageId(v string) {
	o.ImageId = &v
}

// GetTemplateImageName returns the TemplateImageName field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetTemplateImageName() string {
	if o == nil || IsNil(o.TemplateImageName) {
		var ret string
		return ret
	}
	return *o.TemplateImageName
}

// GetTemplateImageNameOk returns a tuple with the TemplateImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetTemplateImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateImageName) {
		return nil, false
	}
	return o.TemplateImageName, true
}

// SetTemplateImageName gets a reference to the given string and assigns it to the TemplateImageName field.
func (o *CatalogConfiguration) SetTemplateImageName(v string) {
	o.TemplateImageName = &v
}

// GetTemplateImageOs returns the TemplateImageOs field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetTemplateImageOs() string {
	if o == nil || IsNil(o.TemplateImageOs) {
		var ret string
		return ret
	}
	return *o.TemplateImageOs
}

// GetTemplateImageOsOk returns a tuple with the TemplateImageOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetTemplateImageOsOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateImageOs) {
		return nil, false
	}
	return o.TemplateImageOs, true
}

// SetTemplateImageOs gets a reference to the given string and assigns it to the TemplateImageOs field.
func (o *CatalogConfiguration) SetTemplateImageOs(v string) {
	o.TemplateImageOs = &v
}

// GetCitrixManaged returns the CitrixManaged field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetCitrixManaged() bool {
	if o == nil || IsNil(o.CitrixManaged) {
		var ret bool
		return ret
	}
	return *o.CitrixManaged
}

// GetCitrixManagedOk returns a tuple with the CitrixManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetCitrixManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.CitrixManaged) {
		return nil, false
	}
	return o.CitrixManaged, true
}

// SetCitrixManaged gets a reference to the given bool and assigns it to the CitrixManaged field.
func (o *CatalogConfiguration) SetCitrixManaged(v bool) {
	o.CitrixManaged = &v
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *CatalogConfiguration) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetTotalMachinesInCatalog returns the TotalMachinesInCatalog field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetTotalMachinesInCatalog() int32 {
	if o == nil || IsNil(o.TotalMachinesInCatalog) {
		var ret int32
		return ret
	}
	return *o.TotalMachinesInCatalog
}

// GetTotalMachinesInCatalogOk returns a tuple with the TotalMachinesInCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetTotalMachinesInCatalogOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalMachinesInCatalog) {
		return nil, false
	}
	return o.TotalMachinesInCatalog, true
}

// SetTotalMachinesInCatalog gets a reference to the given int32 and assigns it to the TotalMachinesInCatalog field.
func (o *CatalogConfiguration) SetTotalMachinesInCatalog(v int32) {
	o.TotalMachinesInCatalog = &v
}

// GetWriteBackCacheConfiguration returns the WriteBackCacheConfiguration field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetWriteBackCacheConfiguration() WbcConfig {
	if o == nil || IsNil(o.WriteBackCacheConfiguration) {
		var ret WbcConfig
		return ret
	}
	return *o.WriteBackCacheConfiguration
}

// GetWriteBackCacheConfigurationOk returns a tuple with the WriteBackCacheConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetWriteBackCacheConfigurationOk() (*WbcConfig, bool) {
	if o == nil || IsNil(o.WriteBackCacheConfiguration) {
		return nil, false
	}
	return o.WriteBackCacheConfiguration, true
}

// SetWriteBackCacheConfiguration gets a reference to the given WbcConfig and assigns it to the WriteBackCacheConfiguration field.
func (o *CatalogConfiguration) SetWriteBackCacheConfiguration(v WbcConfig) {
	o.WriteBackCacheConfiguration = &v
}

// GetTaskCompletionPercentage returns the TaskCompletionPercentage field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetTaskCompletionPercentage() int32 {
	if o == nil || IsNil(o.TaskCompletionPercentage) {
		var ret int32
		return ret
	}
	return *o.TaskCompletionPercentage
}

// GetTaskCompletionPercentageOk returns a tuple with the TaskCompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetTaskCompletionPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskCompletionPercentage) {
		return nil, false
	}
	return o.TaskCompletionPercentage, true
}

// SetTaskCompletionPercentage gets a reference to the given int32 and assigns it to the TaskCompletionPercentage field.
func (o *CatalogConfiguration) SetTaskCompletionPercentage(v int32) {
	o.TaskCompletionPercentage = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetLastModifiedTime() time.Time {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *CatalogConfiguration) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetLastBackupTime returns the LastBackupTime field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetLastBackupTime() time.Time {
	if o == nil || IsNil(o.LastBackupTime) {
		var ret time.Time
		return ret
	}
	return *o.LastBackupTime
}

// GetLastBackupTimeOk returns a tuple with the LastBackupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetLastBackupTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastBackupTime) {
		return nil, false
	}
	return o.LastBackupTime, true
}

// SetLastBackupTime gets a reference to the given time.Time and assigns it to the LastBackupTime field.
func (o *CatalogConfiguration) SetLastBackupTime(v time.Time) {
	o.LastBackupTime = &v
}

// GetIsRemotePcCatalog returns the IsRemotePcCatalog field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetIsRemotePcCatalog() bool {
	if o == nil || IsNil(o.IsRemotePcCatalog) {
		var ret bool
		return ret
	}
	return *o.IsRemotePcCatalog
}

// GetIsRemotePcCatalogOk returns a tuple with the IsRemotePcCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetIsRemotePcCatalogOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRemotePcCatalog) {
		return nil, false
	}
	return o.IsRemotePcCatalog, true
}

// SetIsRemotePcCatalog gets a reference to the given bool and assigns it to the IsRemotePcCatalog field.
func (o *CatalogConfiguration) SetIsRemotePcCatalog(v bool) {
	o.IsRemotePcCatalog = &v
}

// GetIsAzureAdJoined returns the IsAzureAdJoined field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetIsAzureAdJoined() bool {
	if o == nil || IsNil(o.IsAzureAdJoined) {
		var ret bool
		return ret
	}
	return *o.IsAzureAdJoined
}

// GetIsAzureAdJoinedOk returns a tuple with the IsAzureAdJoined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetIsAzureAdJoinedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAzureAdJoined) {
		return nil, false
	}
	return o.IsAzureAdJoined, true
}

// SetIsAzureAdJoined gets a reference to the given bool and assigns it to the IsAzureAdJoined field.
func (o *CatalogConfiguration) SetIsAzureAdJoined(v bool) {
	o.IsAzureAdJoined = &v
}

// GetIsSecureBrowserCatalog returns the IsSecureBrowserCatalog field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetIsSecureBrowserCatalog() bool {
	if o == nil || IsNil(o.IsSecureBrowserCatalog) {
		var ret bool
		return ret
	}
	return *o.IsSecureBrowserCatalog
}

// GetIsSecureBrowserCatalogOk returns a tuple with the IsSecureBrowserCatalog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetIsSecureBrowserCatalogOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecureBrowserCatalog) {
		return nil, false
	}
	return o.IsSecureBrowserCatalog, true
}

// SetIsSecureBrowserCatalog gets a reference to the given bool and assigns it to the IsSecureBrowserCatalog field.
func (o *CatalogConfiguration) SetIsSecureBrowserCatalog(v bool) {
	o.IsSecureBrowserCatalog = &v
}

// GetOrganizationalUnits returns the OrganizationalUnits field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetOrganizationalUnits() []RemotePCEnrollmentScopeResponseModel {
	if o == nil || IsNil(o.OrganizationalUnits) {
		var ret []RemotePCEnrollmentScopeResponseModel
		return ret
	}
	return o.OrganizationalUnits
}

// GetOrganizationalUnitsOk returns a tuple with the OrganizationalUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetOrganizationalUnitsOk() ([]RemotePCEnrollmentScopeResponseModel, bool) {
	if o == nil || IsNil(o.OrganizationalUnits) {
		return nil, false
	}
	return o.OrganizationalUnits, true
}

// SetOrganizationalUnits gets a reference to the given []RemotePCEnrollmentScopeResponseModel and assigns it to the OrganizationalUnits field.
func (o *CatalogConfiguration) SetOrganizationalUnits(v []RemotePCEnrollmentScopeResponseModel) {
	o.OrganizationalUnits = v
}

// GetSupportsHibernation returns the SupportsHibernation field value if set, zero value otherwise.
func (o *CatalogConfiguration) GetSupportsHibernation() bool {
	if o == nil || IsNil(o.SupportsHibernation) {
		var ret bool
		return ret
	}
	return *o.SupportsHibernation
}

// GetSupportsHibernationOk returns a tuple with the SupportsHibernation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogConfiguration) GetSupportsHibernationOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsHibernation) {
		return nil, false
	}
	return o.SupportsHibernation, true
}

// SetSupportsHibernation gets a reference to the given bool and assigns it to the SupportsHibernation field.
func (o *CatalogConfiguration) SetSupportsHibernation(v bool) {
	o.SupportsHibernation = &v
}

func (o CatalogConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.SessionSupport) {
		toSerialize["sessionSupport"] = o.SessionSupport
	}
	if !IsNil(o.AllocationType) {
		toSerialize["allocationType"] = o.AllocationType
	}
	if !IsNil(o.PersistStaticAllocatedVmDisks) {
		toSerialize["persistStaticAllocatedVmDisks"] = o.PersistStaticAllocatedVmDisks
	}
	toSerialize["offeringId"] = o.OfferingId
	toSerialize["offeringIdApp"] = o.OfferingIdApp
	toSerialize["offeringIdDesktop"] = o.OfferingIdDesktop
	toSerialize["deliveryGroupId"] = o.DeliveryGroupId
	toSerialize["advanced"] = o.Advanced
	toSerialize["state"] = o.State
	if !IsNil(o.SubState) {
		toSerialize["subState"] = o.SubState
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.ExtraInfo) {
		toSerialize["extraInfo"] = o.ExtraInfo
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.VnetPeeringId) {
		toSerialize["vnetPeeringId"] = o.VnetPeeringId
	}
	if !IsNil(o.VnetPeeringName) {
		toSerialize["vnetPeeringName"] = o.VnetPeeringName
	}
	if !IsNil(o.VpnConnectionId) {
		toSerialize["vpnConnectionId"] = o.VpnConnectionId
	}
	if !IsNil(o.VpnConnectionName) {
		toSerialize["vpnConnectionName"] = o.VpnConnectionName
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	toSerialize["subscriptionName"] = o.SubscriptionName
	toSerialize["resourceGroup"] = o.ResourceGroup
	if !IsNil(o.VdaResourceGroup) {
		toSerialize["vdaResourceGroup"] = o.VdaResourceGroup
	}
	if !IsNil(o.VdaProvisioningSchemeId) {
		toSerialize["vdaProvisioningSchemeId"] = o.VdaProvisioningSchemeId
	}
	if !IsNil(o.AreMcsVdaResourceGroupsUsed) {
		toSerialize["areMcsVdaResourceGroupsUsed"] = o.AreMcsVdaResourceGroupsUsed
	}
	if !IsNil(o.ResourceLocationId) {
		toSerialize["resourceLocationId"] = o.ResourceLocationId
	}
	toSerialize["region"] = o.Region
	toSerialize["vNetName"] = o.VNetName
	if !IsNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !IsNil(o.DomainJoined) {
		toSerialize["domainJoined"] = o.DomainJoined
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.DomainOU) {
		toSerialize["domainOU"] = o.DomainOU
	}
	if !IsNil(o.DomainServiceAccount) {
		toSerialize["domainServiceAccount"] = o.DomainServiceAccount
	}
	if !IsNil(o.VmTypeInstanceType) {
		toSerialize["vmTypeInstanceType"] = o.VmTypeInstanceType
	}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !IsNil(o.TemplateImageName) {
		toSerialize["templateImageName"] = o.TemplateImageName
	}
	if !IsNil(o.TemplateImageOs) {
		toSerialize["templateImageOs"] = o.TemplateImageOs
	}
	if !IsNil(o.CitrixManaged) {
		toSerialize["citrixManaged"] = o.CitrixManaged
	}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.TotalMachinesInCatalog) {
		toSerialize["totalMachinesInCatalog"] = o.TotalMachinesInCatalog
	}
	if !IsNil(o.WriteBackCacheConfiguration) {
		toSerialize["writeBackCacheConfiguration"] = o.WriteBackCacheConfiguration
	}
	if !IsNil(o.TaskCompletionPercentage) {
		toSerialize["taskCompletionPercentage"] = o.TaskCompletionPercentage
	}
	if !IsNil(o.LastModifiedTime) {
		toSerialize["lastModifiedTime"] = o.LastModifiedTime
	}
	if !IsNil(o.LastBackupTime) {
		toSerialize["lastBackupTime"] = o.LastBackupTime
	}
	if !IsNil(o.IsRemotePcCatalog) {
		toSerialize["isRemotePcCatalog"] = o.IsRemotePcCatalog
	}
	if !IsNil(o.IsAzureAdJoined) {
		toSerialize["isAzureAdJoined"] = o.IsAzureAdJoined
	}
	if !IsNil(o.IsSecureBrowserCatalog) {
		toSerialize["isSecureBrowserCatalog"] = o.IsSecureBrowserCatalog
	}
	if !IsNil(o.OrganizationalUnits) {
		toSerialize["organizationalUnits"] = o.OrganizationalUnits
	}
	if !IsNil(o.SupportsHibernation) {
		toSerialize["supportsHibernation"] = o.SupportsHibernation
	}
	return toSerialize, nil
}

type NullableCatalogConfiguration struct {
	value *CatalogConfiguration
	isSet bool
}

func (v NullableCatalogConfiguration) Get() *CatalogConfiguration {
	return v.value
}

func (v *NullableCatalogConfiguration) Set(val *CatalogConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogConfiguration(val *CatalogConfiguration) *NullableCatalogConfiguration {
	return &NullableCatalogConfiguration{value: val, isSet: true}
}

func (v NullableCatalogConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
