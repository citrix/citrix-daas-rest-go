/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AzureResourceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureResourceGroup{}

// AzureResourceGroup struct for AzureResourceGroup
type AzureResourceGroup struct {
	// ID of the subscription the Resource Group is associated with
	SubscriptionId string `json:"subscriptionId"`
	// Name of the Resource Group
	Name string `json:"name"`
	// Region where resources within this group are located
	Location string  `json:"location"`
	Id       *string `json:"id,omitempty"`
}

// NewAzureResourceGroupWithDefaults instantiates a new AzureResourceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureResourceGroupWithDefaults() *AzureResourceGroup {
	this := AzureResourceGroup{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *AzureResourceGroup) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *AzureResourceGroup) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *AzureResourceGroup) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetName returns the Name field value
func (o *AzureResourceGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AzureResourceGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AzureResourceGroup) SetName(v string) {
	o.Name = v
}

// GetLocation returns the Location field value
func (o *AzureResourceGroup) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *AzureResourceGroup) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *AzureResourceGroup) SetLocation(v string) {
	o.Location = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureResourceGroup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureResourceGroup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureResourceGroup) SetId(v string) {
	o.Id = &v
}

func (o AzureResourceGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureResourceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["name"] = o.Name
	toSerialize["location"] = o.Location
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableAzureResourceGroup struct {
	value *AzureResourceGroup
	isSet bool
}

func (v NullableAzureResourceGroup) Get() *AzureResourceGroup {
	return v.value
}

func (v *NullableAzureResourceGroup) Set(val *AzureResourceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureResourceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureResourceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureResourceGroup(val *AzureResourceGroup) *NullableAzureResourceGroup {
	return &NullableAzureResourceGroup{value: val, isSet: true}
}

func (v NullableAzureResourceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureResourceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
