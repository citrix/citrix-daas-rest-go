/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AddAzureVpnConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAzureVpnConnection{}

// AddAzureVpnConnection struct for AddAzureVpnConnection
type AddAzureVpnConnection struct {
	// Tenant customer the connection is associated with
	CspCustomer *string `json:"cspCustomer,omitempty"`
	// Sku type to provision
	GatewaySku *string `json:"gatewaySku,omitempty"`
	// Generation of VPN gateway
	GatewayGeneration *string `json:"gatewayGeneration,omitempty"`
	// Name to assign the connection
	Name string `json:"name" validate:"regexp=^[\\\\p{L}0-9-_.\\\\(\\\\)]*$"`
	// Name of the azure region where the connection will be created
	Region string `json:"region"`
	// Details of the vda subnet
	VdaSubnet ConnectionSubnet `json:"vdaSubnet"`
	// Details of the subnet the gateway uses to communicate
	GatewaySubnet ConnectionSubnet `json:"gatewaySubnet"`
	// IP address of the gateway to connect to
	GatewayIP string `json:"gatewayIP"`
	// List of DNS Servers
	DnsServers []string `json:"dnsServers,omitempty"`
	// List of addresses that will be accessible behind the gateway
	LocalAddresses []ConnectionSubnet `json:"localAddresses,omitempty"`
	// Pre-shared key that will be used to configure the IPSec tunnel
	SharedKey *string `json:"sharedKey,omitempty"`
	// ID of the Managed Azure Subscription to create the connection in.
	ManagedSubscriptionId *string `json:"managedSubscriptionId,omitempty"`
	// Routes to be added to the vnet
	Routes []AzureRoute `json:"routes,omitempty"`
}

// NewAddAzureVpnConnectionWithDefaults instantiates a new AddAzureVpnConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAzureVpnConnectionWithDefaults() *AddAzureVpnConnection {
	this := AddAzureVpnConnection{}
	return &this
}

// GetCspCustomer returns the CspCustomer field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetCspCustomer() string {
	if o == nil || IsNil(o.CspCustomer) {
		var ret string
		return ret
	}
	return *o.CspCustomer
}

// GetCspCustomerOk returns a tuple with the CspCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetCspCustomerOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomer) {
		return nil, false
	}
	return o.CspCustomer, true
}

// SetCspCustomer gets a reference to the given string and assigns it to the CspCustomer field.
func (o *AddAzureVpnConnection) SetCspCustomer(v string) {
	o.CspCustomer = &v
}

// GetGatewaySku returns the GatewaySku field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetGatewaySku() string {
	if o == nil || IsNil(o.GatewaySku) {
		var ret string
		return ret
	}
	return *o.GatewaySku
}

// GetGatewaySkuOk returns a tuple with the GatewaySku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetGatewaySkuOk() (*string, bool) {
	if o == nil || IsNil(o.GatewaySku) {
		return nil, false
	}
	return o.GatewaySku, true
}

// SetGatewaySku gets a reference to the given string and assigns it to the GatewaySku field.
func (o *AddAzureVpnConnection) SetGatewaySku(v string) {
	o.GatewaySku = &v
}

// GetGatewayGeneration returns the GatewayGeneration field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetGatewayGeneration() string {
	if o == nil || IsNil(o.GatewayGeneration) {
		var ret string
		return ret
	}
	return *o.GatewayGeneration
}

// GetGatewayGenerationOk returns a tuple with the GatewayGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetGatewayGenerationOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayGeneration) {
		return nil, false
	}
	return o.GatewayGeneration, true
}

// SetGatewayGeneration gets a reference to the given string and assigns it to the GatewayGeneration field.
func (o *AddAzureVpnConnection) SetGatewayGeneration(v string) {
	o.GatewayGeneration = &v
}

// GetName returns the Name field value
func (o *AddAzureVpnConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddAzureVpnConnection) SetName(v string) {
	o.Name = v
}

// GetRegion returns the Region field value
func (o *AddAzureVpnConnection) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AddAzureVpnConnection) SetRegion(v string) {
	o.Region = v
}

// GetVdaSubnet returns the VdaSubnet field value
func (o *AddAzureVpnConnection) GetVdaSubnet() ConnectionSubnet {
	if o == nil {
		var ret ConnectionSubnet
		return ret
	}

	return o.VdaSubnet
}

// GetVdaSubnetOk returns a tuple with the VdaSubnet field value
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetVdaSubnetOk() (*ConnectionSubnet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VdaSubnet, true
}

// SetVdaSubnet sets field value
func (o *AddAzureVpnConnection) SetVdaSubnet(v ConnectionSubnet) {
	o.VdaSubnet = v
}

// GetGatewaySubnet returns the GatewaySubnet field value
func (o *AddAzureVpnConnection) GetGatewaySubnet() ConnectionSubnet {
	if o == nil {
		var ret ConnectionSubnet
		return ret
	}

	return o.GatewaySubnet
}

// GetGatewaySubnetOk returns a tuple with the GatewaySubnet field value
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetGatewaySubnetOk() (*ConnectionSubnet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewaySubnet, true
}

// SetGatewaySubnet sets field value
func (o *AddAzureVpnConnection) SetGatewaySubnet(v ConnectionSubnet) {
	o.GatewaySubnet = v
}

// GetGatewayIP returns the GatewayIP field value
func (o *AddAzureVpnConnection) GetGatewayIP() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GatewayIP
}

// GetGatewayIPOk returns a tuple with the GatewayIP field value
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetGatewayIPOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayIP, true
}

// SetGatewayIP sets field value
func (o *AddAzureVpnConnection) SetGatewayIP(v string) {
	o.GatewayIP = v
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetDnsServers() []string {
	if o == nil || IsNil(o.DnsServers) {
		var ret []string
		return ret
	}
	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetDnsServersOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsServers) {
		return nil, false
	}
	return o.DnsServers, true
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *AddAzureVpnConnection) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetLocalAddresses returns the LocalAddresses field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetLocalAddresses() []ConnectionSubnet {
	if o == nil || IsNil(o.LocalAddresses) {
		var ret []ConnectionSubnet
		return ret
	}
	return o.LocalAddresses
}

// GetLocalAddressesOk returns a tuple with the LocalAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetLocalAddressesOk() ([]ConnectionSubnet, bool) {
	if o == nil || IsNil(o.LocalAddresses) {
		return nil, false
	}
	return o.LocalAddresses, true
}

// SetLocalAddresses gets a reference to the given []ConnectionSubnet and assigns it to the LocalAddresses field.
func (o *AddAzureVpnConnection) SetLocalAddresses(v []ConnectionSubnet) {
	o.LocalAddresses = v
}

// GetSharedKey returns the SharedKey field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetSharedKey() string {
	if o == nil || IsNil(o.SharedKey) {
		var ret string
		return ret
	}
	return *o.SharedKey
}

// GetSharedKeyOk returns a tuple with the SharedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetSharedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SharedKey) {
		return nil, false
	}
	return o.SharedKey, true
}

// SetSharedKey gets a reference to the given string and assigns it to the SharedKey field.
func (o *AddAzureVpnConnection) SetSharedKey(v string) {
	o.SharedKey = &v
}

// GetManagedSubscriptionId returns the ManagedSubscriptionId field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetManagedSubscriptionId() string {
	if o == nil || IsNil(o.ManagedSubscriptionId) {
		var ret string
		return ret
	}
	return *o.ManagedSubscriptionId
}

// GetManagedSubscriptionIdOk returns a tuple with the ManagedSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetManagedSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedSubscriptionId) {
		return nil, false
	}
	return o.ManagedSubscriptionId, true
}

// SetManagedSubscriptionId gets a reference to the given string and assigns it to the ManagedSubscriptionId field.
func (o *AddAzureVpnConnection) SetManagedSubscriptionId(v string) {
	o.ManagedSubscriptionId = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *AddAzureVpnConnection) GetRoutes() []AzureRoute {
	if o == nil || IsNil(o.Routes) {
		var ret []AzureRoute
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAzureVpnConnection) GetRoutesOk() ([]AzureRoute, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// SetRoutes gets a reference to the given []AzureRoute and assigns it to the Routes field.
func (o *AddAzureVpnConnection) SetRoutes(v []AzureRoute) {
	o.Routes = v
}

func (o AddAzureVpnConnection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAzureVpnConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CspCustomer) {
		toSerialize["cspCustomer"] = o.CspCustomer
	}
	if !IsNil(o.GatewaySku) {
		toSerialize["gatewaySku"] = o.GatewaySku
	}
	if !IsNil(o.GatewayGeneration) {
		toSerialize["gatewayGeneration"] = o.GatewayGeneration
	}
	toSerialize["name"] = o.Name
	toSerialize["region"] = o.Region
	toSerialize["vdaSubnet"] = o.VdaSubnet
	toSerialize["gatewaySubnet"] = o.GatewaySubnet
	toSerialize["gatewayIP"] = o.GatewayIP
	if !IsNil(o.DnsServers) {
		toSerialize["dnsServers"] = o.DnsServers
	}
	if !IsNil(o.LocalAddresses) {
		toSerialize["localAddresses"] = o.LocalAddresses
	}
	if !IsNil(o.SharedKey) {
		toSerialize["sharedKey"] = o.SharedKey
	}
	if !IsNil(o.ManagedSubscriptionId) {
		toSerialize["managedSubscriptionId"] = o.ManagedSubscriptionId
	}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	return toSerialize, nil
}

type NullableAddAzureVpnConnection struct {
	value *AddAzureVpnConnection
	isSet bool
}

func (v NullableAddAzureVpnConnection) Get() *AddAzureVpnConnection {
	return v.value
}

func (v *NullableAddAzureVpnConnection) Set(val *AddAzureVpnConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAzureVpnConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAzureVpnConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAzureVpnConnection(val *AddAzureVpnConnection) *NullableAddAzureVpnConnection {
	return &NullableAddAzureVpnConnection{value: val, isSet: true}
}

func (v NullableAddAzureVpnConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAzureVpnConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
