/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the RemoveAzureADUserModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveAzureADUserModel{}

// RemoveAzureADUserModel struct for RemoveAzureADUserModel
type RemoveAzureADUserModel struct {
	// Email of the account to remove.
	Email *string `json:"email,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null.
	CspCustomerId *string `json:"cspCustomerId,omitempty"`
	// Name of tenant customer ID if partner-tenant relationship exists otherwise null.
	CspSiteId *string `json:"cspSiteId,omitempty"`
}

// NewRemoveAzureADUserModelWithDefaults instantiates a new RemoveAzureADUserModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveAzureADUserModelWithDefaults() *RemoveAzureADUserModel {
	this := RemoveAzureADUserModel{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *RemoveAzureADUserModel) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveAzureADUserModel) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *RemoveAzureADUserModel) SetEmail(v string) {
	o.Email = &v
}

// GetCspCustomerId returns the CspCustomerId field value if set, zero value otherwise.
func (o *RemoveAzureADUserModel) GetCspCustomerId() string {
	if o == nil || IsNil(o.CspCustomerId) {
		var ret string
		return ret
	}
	return *o.CspCustomerId
}

// GetCspCustomerIdOk returns a tuple with the CspCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveAzureADUserModel) GetCspCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspCustomerId) {
		return nil, false
	}
	return o.CspCustomerId, true
}

// SetCspCustomerId gets a reference to the given string and assigns it to the CspCustomerId field.
func (o *RemoveAzureADUserModel) SetCspCustomerId(v string) {
	o.CspCustomerId = &v
}

// GetCspSiteId returns the CspSiteId field value if set, zero value otherwise.
func (o *RemoveAzureADUserModel) GetCspSiteId() string {
	if o == nil || IsNil(o.CspSiteId) {
		var ret string
		return ret
	}
	return *o.CspSiteId
}

// GetCspSiteIdOk returns a tuple with the CspSiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveAzureADUserModel) GetCspSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.CspSiteId) {
		return nil, false
	}
	return o.CspSiteId, true
}

// SetCspSiteId gets a reference to the given string and assigns it to the CspSiteId field.
func (o *RemoveAzureADUserModel) SetCspSiteId(v string) {
	o.CspSiteId = &v
}

func (o RemoveAzureADUserModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveAzureADUserModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CspCustomerId) {
		toSerialize["cspCustomerId"] = o.CspCustomerId
	}
	if !IsNil(o.CspSiteId) {
		toSerialize["cspSiteId"] = o.CspSiteId
	}
	return toSerialize, nil
}

type NullableRemoveAzureADUserModel struct {
	value *RemoveAzureADUserModel
	isSet bool
}

func (v NullableRemoveAzureADUserModel) Get() *RemoveAzureADUserModel {
	return v.value
}

func (v *NullableRemoveAzureADUserModel) Set(val *RemoveAzureADUserModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveAzureADUserModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveAzureADUserModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveAzureADUserModel(val *RemoveAzureADUserModel) *NullableRemoveAzureADUserModel {
	return &NullableRemoveAzureADUserModel{value: val, isSet: true}
}

func (v NullableRemoveAzureADUserModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveAzureADUserModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
