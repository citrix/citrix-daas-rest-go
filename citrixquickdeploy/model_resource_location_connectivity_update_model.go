/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ResourceLocationConnectivityUpdateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceLocationConnectivityUpdateModel{}

// ResourceLocationConnectivityUpdateModel struct for ResourceLocationConnectivityUpdateModel
type ResourceLocationConnectivityUpdateModel struct {
	Type *ConnectivityType `json:"type,omitempty"`
}

// NewResourceLocationConnectivityUpdateModelWithDefaults instantiates a new ResourceLocationConnectivityUpdateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceLocationConnectivityUpdateModelWithDefaults() *ResourceLocationConnectivityUpdateModel {
	this := ResourceLocationConnectivityUpdateModel{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResourceLocationConnectivityUpdateModel) GetType() ConnectivityType {
	if o == nil || IsNil(o.Type) {
		var ret ConnectivityType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceLocationConnectivityUpdateModel) GetTypeOk() (*ConnectivityType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// SetType gets a reference to the given ConnectivityType and assigns it to the Type field.
func (o *ResourceLocationConnectivityUpdateModel) SetType(v ConnectivityType) {
	o.Type = &v
}

func (o ResourceLocationConnectivityUpdateModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceLocationConnectivityUpdateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableResourceLocationConnectivityUpdateModel struct {
	value *ResourceLocationConnectivityUpdateModel
	isSet bool
}

func (v NullableResourceLocationConnectivityUpdateModel) Get() *ResourceLocationConnectivityUpdateModel {
	return v.value
}

func (v *NullableResourceLocationConnectivityUpdateModel) Set(val *ResourceLocationConnectivityUpdateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceLocationConnectivityUpdateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceLocationConnectivityUpdateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceLocationConnectivityUpdateModel(val *ResourceLocationConnectivityUpdateModel) *NullableResourceLocationConnectivityUpdateModel {
	return &NullableResourceLocationConnectivityUpdateModel{value: val, isSet: true}
}

func (v NullableResourceLocationConnectivityUpdateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceLocationConnectivityUpdateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
