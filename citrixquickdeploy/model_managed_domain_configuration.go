/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the ManagedDomainConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedDomainConfiguration{}

// ManagedDomainConfiguration struct for ManagedDomainConfiguration
type ManagedDomainConfiguration struct {
	DomainName  *string             `json:"domainName,omitempty"`
	DomainUsers []ManagedDomainUser `json:"domainUsers,omitempty"`
}

// NewManagedDomainConfigurationWithDefaults instantiates a new ManagedDomainConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedDomainConfigurationWithDefaults() *ManagedDomainConfiguration {
	this := ManagedDomainConfiguration{}
	return &this
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *ManagedDomainConfiguration) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainConfiguration) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *ManagedDomainConfiguration) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainUsers returns the DomainUsers field value if set, zero value otherwise.
func (o *ManagedDomainConfiguration) GetDomainUsers() []ManagedDomainUser {
	if o == nil || IsNil(o.DomainUsers) {
		var ret []ManagedDomainUser
		return ret
	}
	return o.DomainUsers
}

// GetDomainUsersOk returns a tuple with the DomainUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedDomainConfiguration) GetDomainUsersOk() ([]ManagedDomainUser, bool) {
	if o == nil || IsNil(o.DomainUsers) {
		return nil, false
	}
	return o.DomainUsers, true
}

// SetDomainUsers gets a reference to the given []ManagedDomainUser and assigns it to the DomainUsers field.
func (o *ManagedDomainConfiguration) SetDomainUsers(v []ManagedDomainUser) {
	o.DomainUsers = v
}

func (o ManagedDomainConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedDomainConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.DomainUsers) {
		toSerialize["domainUsers"] = o.DomainUsers
	}
	return toSerialize, nil
}

type NullableManagedDomainConfiguration struct {
	value *ManagedDomainConfiguration
	isSet bool
}

func (v NullableManagedDomainConfiguration) Get() *ManagedDomainConfiguration {
	return v.value
}

func (v *NullableManagedDomainConfiguration) Set(val *ManagedDomainConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedDomainConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedDomainConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedDomainConfiguration(val *ManagedDomainConfiguration) *NullableManagedDomainConfiguration {
	return &NullableManagedDomainConfiguration{value: val, isSet: true}
}

func (v NullableManagedDomainConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedDomainConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
