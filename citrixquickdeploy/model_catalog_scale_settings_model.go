/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the CatalogScaleSettingsModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogScaleSettingsModel{}

// CatalogScaleSettingsModel struct for CatalogScaleSettingsModel
type CatalogScaleSettingsModel struct {
	// Max number of concurrent settings for the catalog
	MaxUsers *int32 `json:"maxUsers,omitempty"`
	// Min number of active VMs for the catalog
	MinInstances *int32 `json:"minInstances,omitempty"`
	// Number of VMs that will be provisioned for  this catalog
	MaxInstances *int32 `json:"maxInstances,omitempty"`
	// Number of VMs the admin would like the catalog changed to
	PendingMaxInstances *int32 `json:"pendingMaxInstances,omitempty"`
	// Days of the week that are included in peak days
	Weekdays *map[string]bool `json:"weekdays,omitempty"`
	// Days of the week that are included in peak days
	WeekdaysString *string `json:"weekdaysString,omitempty"`
	// Hour of day when peak usage begins
	PeakStartTime *int32 `json:"peakStartTime,omitempty"`
	// Hour of day when peak usage ends
	PeakEndTime *int32 `json:"peakEndTime,omitempty"`
	// Display of the peak usage timezone
	PeakTimeZone *string `json:"peakTimeZone,omitempty"`
	// ID of the peak usage Timezone
	PeakTimeZoneId *string `json:"peakTimeZoneId,omitempty"`
	// Min number of insances that should be running durring peak hours
	PeakMinInstances *int32 `json:"peakMinInstances,omitempty"`
	// Percentage of buffer capacity during peak hours
	BufferCapacity *int32 `json:"bufferCapacity,omitempty"`
	// Percentage of buffer capacity during off-peak hours
	OffPeakBufferCapacity *int32 `json:"offPeakBufferCapacity,omitempty"`
	// The service account to use for modifying max instances
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Password of the service account used to modify max instances
	ServiceAccountPassword *string `json:"serviceAccountPassword,omitempty"`
	// Indicates if the smart scale settings are enabled or disabled
	IsSmartScaleDisabled *bool `json:"isSmartScaleDisabled,omitempty"`
	// During Peak Hours, the time before an action is taken on disconnected session
	PeakDisconnectedSessionTimeout *int32 `json:"peakDisconnectedSessionTimeout,omitempty"`
	// During peak hours, the action to be taken on disconnected session
	PeakDisconnectedSessionAction *SessionChangeHostingAction `json:"peakDisconnectedSessionAction,omitempty"`
	// During Off Peak Hours, the time before an action is taken on disconnected session
	OffPeakDisconnectedSessionTimeout *int32 `json:"offPeakDisconnectedSessionTimeout,omitempty"`
	// During off peak hours, the action to be taken on disconnected session
	OffPeakDisconnectedSessionAction *SessionChangeHostingAction `json:"offPeakDisconnectedSessionAction,omitempty"`
	// The number of minutes before the second action (Shutdown) should be performed after a user session disconnects during peak hours. Used when peak disconnection action is Suspend
	PeakExtendedDisconnectTimeoutMinutes *int32 `json:"peakExtendedDisconnectTimeoutMinutes,omitempty"`
	// The number of minutes before the second action (Shutdown) should be performed after a user session disconnects outside peak hours. Used when off peak disconnect action is Suspend
	OffPeakExtendedDisconnectTimeoutMinutes *int32 `json:"offPeakExtendedDisconnectTimeoutMinutes,omitempty"`
	// Amount of time to delay powering off machines with no active sessions
	PowerOffDelay *int32 `json:"powerOffDelay,omitempty"`
}

// NewCatalogScaleSettingsModelWithDefaults instantiates a new CatalogScaleSettingsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogScaleSettingsModelWithDefaults() *CatalogScaleSettingsModel {
	this := CatalogScaleSettingsModel{}
	return &this
}

// GetMaxUsers returns the MaxUsers field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetMaxUsers() int32 {
	if o == nil || IsNil(o.MaxUsers) {
		var ret int32
		return ret
	}
	return *o.MaxUsers
}

// GetMaxUsersOk returns a tuple with the MaxUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetMaxUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxUsers) {
		return nil, false
	}
	return o.MaxUsers, true
}

// SetMaxUsers gets a reference to the given int32 and assigns it to the MaxUsers field.
func (o *CatalogScaleSettingsModel) SetMaxUsers(v int32) {
	o.MaxUsers = &v
}

// GetMinInstances returns the MinInstances field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetMinInstances() int32 {
	if o == nil || IsNil(o.MinInstances) {
		var ret int32
		return ret
	}
	return *o.MinInstances
}

// GetMinInstancesOk returns a tuple with the MinInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetMinInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.MinInstances) {
		return nil, false
	}
	return o.MinInstances, true
}

// SetMinInstances gets a reference to the given int32 and assigns it to the MinInstances field.
func (o *CatalogScaleSettingsModel) SetMinInstances(v int32) {
	o.MinInstances = &v
}

// GetMaxInstances returns the MaxInstances field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetMaxInstances() int32 {
	if o == nil || IsNil(o.MaxInstances) {
		var ret int32
		return ret
	}
	return *o.MaxInstances
}

// GetMaxInstancesOk returns a tuple with the MaxInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetMaxInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxInstances) {
		return nil, false
	}
	return o.MaxInstances, true
}

// SetMaxInstances gets a reference to the given int32 and assigns it to the MaxInstances field.
func (o *CatalogScaleSettingsModel) SetMaxInstances(v int32) {
	o.MaxInstances = &v
}

// GetPendingMaxInstances returns the PendingMaxInstances field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPendingMaxInstances() int32 {
	if o == nil || IsNil(o.PendingMaxInstances) {
		var ret int32
		return ret
	}
	return *o.PendingMaxInstances
}

// GetPendingMaxInstancesOk returns a tuple with the PendingMaxInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPendingMaxInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.PendingMaxInstances) {
		return nil, false
	}
	return o.PendingMaxInstances, true
}

// SetPendingMaxInstances gets a reference to the given int32 and assigns it to the PendingMaxInstances field.
func (o *CatalogScaleSettingsModel) SetPendingMaxInstances(v int32) {
	o.PendingMaxInstances = &v
}

// GetWeekdays returns the Weekdays field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetWeekdays() map[string]bool {
	if o == nil || IsNil(o.Weekdays) {
		var ret map[string]bool
		return ret
	}
	return *o.Weekdays
}

// GetWeekdaysOk returns a tuple with the Weekdays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetWeekdaysOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.Weekdays) {
		return nil, false
	}
	return o.Weekdays, true
}

// SetWeekdays gets a reference to the given map[string]bool and assigns it to the Weekdays field.
func (o *CatalogScaleSettingsModel) SetWeekdays(v map[string]bool) {
	o.Weekdays = &v
}

// GetWeekdaysString returns the WeekdaysString field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetWeekdaysString() string {
	if o == nil || IsNil(o.WeekdaysString) {
		var ret string
		return ret
	}
	return *o.WeekdaysString
}

// GetWeekdaysStringOk returns a tuple with the WeekdaysString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetWeekdaysStringOk() (*string, bool) {
	if o == nil || IsNil(o.WeekdaysString) {
		return nil, false
	}
	return o.WeekdaysString, true
}

// SetWeekdaysString gets a reference to the given string and assigns it to the WeekdaysString field.
func (o *CatalogScaleSettingsModel) SetWeekdaysString(v string) {
	o.WeekdaysString = &v
}

// GetPeakStartTime returns the PeakStartTime field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakStartTime() int32 {
	if o == nil || IsNil(o.PeakStartTime) {
		var ret int32
		return ret
	}
	return *o.PeakStartTime
}

// GetPeakStartTimeOk returns a tuple with the PeakStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakStartTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakStartTime) {
		return nil, false
	}
	return o.PeakStartTime, true
}

// SetPeakStartTime gets a reference to the given int32 and assigns it to the PeakStartTime field.
func (o *CatalogScaleSettingsModel) SetPeakStartTime(v int32) {
	o.PeakStartTime = &v
}

// GetPeakEndTime returns the PeakEndTime field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakEndTime() int32 {
	if o == nil || IsNil(o.PeakEndTime) {
		var ret int32
		return ret
	}
	return *o.PeakEndTime
}

// GetPeakEndTimeOk returns a tuple with the PeakEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakEndTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakEndTime) {
		return nil, false
	}
	return o.PeakEndTime, true
}

// SetPeakEndTime gets a reference to the given int32 and assigns it to the PeakEndTime field.
func (o *CatalogScaleSettingsModel) SetPeakEndTime(v int32) {
	o.PeakEndTime = &v
}

// GetPeakTimeZone returns the PeakTimeZone field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakTimeZone() string {
	if o == nil || IsNil(o.PeakTimeZone) {
		var ret string
		return ret
	}
	return *o.PeakTimeZone
}

// GetPeakTimeZoneOk returns a tuple with the PeakTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.PeakTimeZone) {
		return nil, false
	}
	return o.PeakTimeZone, true
}

// SetPeakTimeZone gets a reference to the given string and assigns it to the PeakTimeZone field.
func (o *CatalogScaleSettingsModel) SetPeakTimeZone(v string) {
	o.PeakTimeZone = &v
}

// GetPeakTimeZoneId returns the PeakTimeZoneId field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakTimeZoneId() string {
	if o == nil || IsNil(o.PeakTimeZoneId) {
		var ret string
		return ret
	}
	return *o.PeakTimeZoneId
}

// GetPeakTimeZoneIdOk returns a tuple with the PeakTimeZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakTimeZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeakTimeZoneId) {
		return nil, false
	}
	return o.PeakTimeZoneId, true
}

// SetPeakTimeZoneId gets a reference to the given string and assigns it to the PeakTimeZoneId field.
func (o *CatalogScaleSettingsModel) SetPeakTimeZoneId(v string) {
	o.PeakTimeZoneId = &v
}

// GetPeakMinInstances returns the PeakMinInstances field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakMinInstances() int32 {
	if o == nil || IsNil(o.PeakMinInstances) {
		var ret int32
		return ret
	}
	return *o.PeakMinInstances
}

// GetPeakMinInstancesOk returns a tuple with the PeakMinInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakMinInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakMinInstances) {
		return nil, false
	}
	return o.PeakMinInstances, true
}

// SetPeakMinInstances gets a reference to the given int32 and assigns it to the PeakMinInstances field.
func (o *CatalogScaleSettingsModel) SetPeakMinInstances(v int32) {
	o.PeakMinInstances = &v
}

// GetBufferCapacity returns the BufferCapacity field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetBufferCapacity() int32 {
	if o == nil || IsNil(o.BufferCapacity) {
		var ret int32
		return ret
	}
	return *o.BufferCapacity
}

// GetBufferCapacityOk returns a tuple with the BufferCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetBufferCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.BufferCapacity) {
		return nil, false
	}
	return o.BufferCapacity, true
}

// SetBufferCapacity gets a reference to the given int32 and assigns it to the BufferCapacity field.
func (o *CatalogScaleSettingsModel) SetBufferCapacity(v int32) {
	o.BufferCapacity = &v
}

// GetOffPeakBufferCapacity returns the OffPeakBufferCapacity field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetOffPeakBufferCapacity() int32 {
	if o == nil || IsNil(o.OffPeakBufferCapacity) {
		var ret int32
		return ret
	}
	return *o.OffPeakBufferCapacity
}

// GetOffPeakBufferCapacityOk returns a tuple with the OffPeakBufferCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetOffPeakBufferCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakBufferCapacity) {
		return nil, false
	}
	return o.OffPeakBufferCapacity, true
}

// SetOffPeakBufferCapacity gets a reference to the given int32 and assigns it to the OffPeakBufferCapacity field.
func (o *CatalogScaleSettingsModel) SetOffPeakBufferCapacity(v int32) {
	o.OffPeakBufferCapacity = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetServiceAccount() string {
	if o == nil || IsNil(o.ServiceAccount) {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccount) {
		return nil, false
	}
	return o.ServiceAccount, true
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *CatalogScaleSettingsModel) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

// GetServiceAccountPassword returns the ServiceAccountPassword field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetServiceAccountPassword() string {
	if o == nil || IsNil(o.ServiceAccountPassword) {
		var ret string
		return ret
	}
	return *o.ServiceAccountPassword
}

// GetServiceAccountPasswordOk returns a tuple with the ServiceAccountPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetServiceAccountPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountPassword) {
		return nil, false
	}
	return o.ServiceAccountPassword, true
}

// SetServiceAccountPassword gets a reference to the given string and assigns it to the ServiceAccountPassword field.
func (o *CatalogScaleSettingsModel) SetServiceAccountPassword(v string) {
	o.ServiceAccountPassword = &v
}

// GetIsSmartScaleDisabled returns the IsSmartScaleDisabled field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetIsSmartScaleDisabled() bool {
	if o == nil || IsNil(o.IsSmartScaleDisabled) {
		var ret bool
		return ret
	}
	return *o.IsSmartScaleDisabled
}

// GetIsSmartScaleDisabledOk returns a tuple with the IsSmartScaleDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetIsSmartScaleDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSmartScaleDisabled) {
		return nil, false
	}
	return o.IsSmartScaleDisabled, true
}

// SetIsSmartScaleDisabled gets a reference to the given bool and assigns it to the IsSmartScaleDisabled field.
func (o *CatalogScaleSettingsModel) SetIsSmartScaleDisabled(v bool) {
	o.IsSmartScaleDisabled = &v
}

// GetPeakDisconnectedSessionTimeout returns the PeakDisconnectedSessionTimeout field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakDisconnectedSessionTimeout() int32 {
	if o == nil || IsNil(o.PeakDisconnectedSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.PeakDisconnectedSessionTimeout
}

// GetPeakDisconnectedSessionTimeoutOk returns a tuple with the PeakDisconnectedSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakDisconnectedSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakDisconnectedSessionTimeout) {
		return nil, false
	}
	return o.PeakDisconnectedSessionTimeout, true
}

// SetPeakDisconnectedSessionTimeout gets a reference to the given int32 and assigns it to the PeakDisconnectedSessionTimeout field.
func (o *CatalogScaleSettingsModel) SetPeakDisconnectedSessionTimeout(v int32) {
	o.PeakDisconnectedSessionTimeout = &v
}

// GetPeakDisconnectedSessionAction returns the PeakDisconnectedSessionAction field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakDisconnectedSessionAction() SessionChangeHostingAction {
	if o == nil || IsNil(o.PeakDisconnectedSessionAction) {
		var ret SessionChangeHostingAction
		return ret
	}
	return *o.PeakDisconnectedSessionAction
}

// GetPeakDisconnectedSessionActionOk returns a tuple with the PeakDisconnectedSessionAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakDisconnectedSessionActionOk() (*SessionChangeHostingAction, bool) {
	if o == nil || IsNil(o.PeakDisconnectedSessionAction) {
		return nil, false
	}
	return o.PeakDisconnectedSessionAction, true
}

// SetPeakDisconnectedSessionAction gets a reference to the given SessionChangeHostingAction and assigns it to the PeakDisconnectedSessionAction field.
func (o *CatalogScaleSettingsModel) SetPeakDisconnectedSessionAction(v SessionChangeHostingAction) {
	o.PeakDisconnectedSessionAction = &v
}

// GetOffPeakDisconnectedSessionTimeout returns the OffPeakDisconnectedSessionTimeout field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetOffPeakDisconnectedSessionTimeout() int32 {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionTimeout) {
		var ret int32
		return ret
	}
	return *o.OffPeakDisconnectedSessionTimeout
}

// GetOffPeakDisconnectedSessionTimeoutOk returns a tuple with the OffPeakDisconnectedSessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetOffPeakDisconnectedSessionTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionTimeout) {
		return nil, false
	}
	return o.OffPeakDisconnectedSessionTimeout, true
}

// SetOffPeakDisconnectedSessionTimeout gets a reference to the given int32 and assigns it to the OffPeakDisconnectedSessionTimeout field.
func (o *CatalogScaleSettingsModel) SetOffPeakDisconnectedSessionTimeout(v int32) {
	o.OffPeakDisconnectedSessionTimeout = &v
}

// GetOffPeakDisconnectedSessionAction returns the OffPeakDisconnectedSessionAction field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetOffPeakDisconnectedSessionAction() SessionChangeHostingAction {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionAction) {
		var ret SessionChangeHostingAction
		return ret
	}
	return *o.OffPeakDisconnectedSessionAction
}

// GetOffPeakDisconnectedSessionActionOk returns a tuple with the OffPeakDisconnectedSessionAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetOffPeakDisconnectedSessionActionOk() (*SessionChangeHostingAction, bool) {
	if o == nil || IsNil(o.OffPeakDisconnectedSessionAction) {
		return nil, false
	}
	return o.OffPeakDisconnectedSessionAction, true
}

// SetOffPeakDisconnectedSessionAction gets a reference to the given SessionChangeHostingAction and assigns it to the OffPeakDisconnectedSessionAction field.
func (o *CatalogScaleSettingsModel) SetOffPeakDisconnectedSessionAction(v SessionChangeHostingAction) {
	o.OffPeakDisconnectedSessionAction = &v
}

// GetPeakExtendedDisconnectTimeoutMinutes returns the PeakExtendedDisconnectTimeoutMinutes field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPeakExtendedDisconnectTimeoutMinutes() int32 {
	if o == nil || IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		var ret int32
		return ret
	}
	return *o.PeakExtendedDisconnectTimeoutMinutes
}

// GetPeakExtendedDisconnectTimeoutMinutesOk returns a tuple with the PeakExtendedDisconnectTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPeakExtendedDisconnectTimeoutMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		return nil, false
	}
	return o.PeakExtendedDisconnectTimeoutMinutes, true
}

// SetPeakExtendedDisconnectTimeoutMinutes gets a reference to the given int32 and assigns it to the PeakExtendedDisconnectTimeoutMinutes field.
func (o *CatalogScaleSettingsModel) SetPeakExtendedDisconnectTimeoutMinutes(v int32) {
	o.PeakExtendedDisconnectTimeoutMinutes = &v
}

// GetOffPeakExtendedDisconnectTimeoutMinutes returns the OffPeakExtendedDisconnectTimeoutMinutes field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetOffPeakExtendedDisconnectTimeoutMinutes() int32 {
	if o == nil || IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		var ret int32
		return ret
	}
	return *o.OffPeakExtendedDisconnectTimeoutMinutes
}

// GetOffPeakExtendedDisconnectTimeoutMinutesOk returns a tuple with the OffPeakExtendedDisconnectTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetOffPeakExtendedDisconnectTimeoutMinutesOk() (*int32, bool) {
	if o == nil || IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		return nil, false
	}
	return o.OffPeakExtendedDisconnectTimeoutMinutes, true
}

// SetOffPeakExtendedDisconnectTimeoutMinutes gets a reference to the given int32 and assigns it to the OffPeakExtendedDisconnectTimeoutMinutes field.
func (o *CatalogScaleSettingsModel) SetOffPeakExtendedDisconnectTimeoutMinutes(v int32) {
	o.OffPeakExtendedDisconnectTimeoutMinutes = &v
}

// GetPowerOffDelay returns the PowerOffDelay field value if set, zero value otherwise.
func (o *CatalogScaleSettingsModel) GetPowerOffDelay() int32 {
	if o == nil || IsNil(o.PowerOffDelay) {
		var ret int32
		return ret
	}
	return *o.PowerOffDelay
}

// GetPowerOffDelayOk returns a tuple with the PowerOffDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogScaleSettingsModel) GetPowerOffDelayOk() (*int32, bool) {
	if o == nil || IsNil(o.PowerOffDelay) {
		return nil, false
	}
	return o.PowerOffDelay, true
}

// SetPowerOffDelay gets a reference to the given int32 and assigns it to the PowerOffDelay field.
func (o *CatalogScaleSettingsModel) SetPowerOffDelay(v int32) {
	o.PowerOffDelay = &v
}

func (o CatalogScaleSettingsModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogScaleSettingsModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxUsers) {
		toSerialize["maxUsers"] = o.MaxUsers
	}
	if !IsNil(o.MinInstances) {
		toSerialize["minInstances"] = o.MinInstances
	}
	if !IsNil(o.MaxInstances) {
		toSerialize["maxInstances"] = o.MaxInstances
	}
	if !IsNil(o.PendingMaxInstances) {
		toSerialize["pendingMaxInstances"] = o.PendingMaxInstances
	}
	if !IsNil(o.Weekdays) {
		toSerialize["weekdays"] = o.Weekdays
	}
	if !IsNil(o.WeekdaysString) {
		toSerialize["weekdaysString"] = o.WeekdaysString
	}
	if !IsNil(o.PeakStartTime) {
		toSerialize["peakStartTime"] = o.PeakStartTime
	}
	if !IsNil(o.PeakEndTime) {
		toSerialize["peakEndTime"] = o.PeakEndTime
	}
	if !IsNil(o.PeakTimeZone) {
		toSerialize["peakTimeZone"] = o.PeakTimeZone
	}
	if !IsNil(o.PeakTimeZoneId) {
		toSerialize["peakTimeZoneId"] = o.PeakTimeZoneId
	}
	if !IsNil(o.PeakMinInstances) {
		toSerialize["peakMinInstances"] = o.PeakMinInstances
	}
	if !IsNil(o.BufferCapacity) {
		toSerialize["bufferCapacity"] = o.BufferCapacity
	}
	if !IsNil(o.OffPeakBufferCapacity) {
		toSerialize["offPeakBufferCapacity"] = o.OffPeakBufferCapacity
	}
	if !IsNil(o.ServiceAccount) {
		toSerialize["serviceAccount"] = o.ServiceAccount
	}
	if !IsNil(o.ServiceAccountPassword) {
		toSerialize["serviceAccountPassword"] = o.ServiceAccountPassword
	}
	if !IsNil(o.IsSmartScaleDisabled) {
		toSerialize["isSmartScaleDisabled"] = o.IsSmartScaleDisabled
	}
	if !IsNil(o.PeakDisconnectedSessionTimeout) {
		toSerialize["peakDisconnectedSessionTimeout"] = o.PeakDisconnectedSessionTimeout
	}
	if !IsNil(o.PeakDisconnectedSessionAction) {
		toSerialize["peakDisconnectedSessionAction"] = o.PeakDisconnectedSessionAction
	}
	if !IsNil(o.OffPeakDisconnectedSessionTimeout) {
		toSerialize["offPeakDisconnectedSessionTimeout"] = o.OffPeakDisconnectedSessionTimeout
	}
	if !IsNil(o.OffPeakDisconnectedSessionAction) {
		toSerialize["offPeakDisconnectedSessionAction"] = o.OffPeakDisconnectedSessionAction
	}
	if !IsNil(o.PeakExtendedDisconnectTimeoutMinutes) {
		toSerialize["peakExtendedDisconnectTimeoutMinutes"] = o.PeakExtendedDisconnectTimeoutMinutes
	}
	if !IsNil(o.OffPeakExtendedDisconnectTimeoutMinutes) {
		toSerialize["offPeakExtendedDisconnectTimeoutMinutes"] = o.OffPeakExtendedDisconnectTimeoutMinutes
	}
	if !IsNil(o.PowerOffDelay) {
		toSerialize["powerOffDelay"] = o.PowerOffDelay
	}
	return toSerialize, nil
}

type NullableCatalogScaleSettingsModel struct {
	value *CatalogScaleSettingsModel
	isSet bool
}

func (v NullableCatalogScaleSettingsModel) Get() *CatalogScaleSettingsModel {
	return v.value
}

func (v *NullableCatalogScaleSettingsModel) Set(val *CatalogScaleSettingsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogScaleSettingsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogScaleSettingsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogScaleSettingsModel(val *CatalogScaleSettingsModel) *NullableCatalogScaleSettingsModel {
	return &NullableCatalogScaleSettingsModel{value: val, isSet: true}
}

func (v NullableCatalogScaleSettingsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogScaleSettingsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
