/*
Citrix Virtual App & Desktop Catalog Service 148.0.26750.34636

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
	"time"
)

// checks if the DataStoreAzureSubscriptionUpdateCredentialsJobModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataStoreAzureSubscriptionUpdateCredentialsJobModel{}

// DataStoreAzureSubscriptionUpdateCredentialsJobModel struct for DataStoreAzureSubscriptionUpdateCredentialsJobModel
type DataStoreAzureSubscriptionUpdateCredentialsJobModel struct {
	// ID of the transaction associated with the update.
	TransactionId *string `json:"transactionId,omitempty"`
	// State of the update job.
	State *UpdateAzureSubscriptionCredentialJobState `json:"state,omitempty"`
	// List of catalog IDs that failed to update.
	FailedCatalogIds []string `json:"failedCatalogIds,omitempty"`
	// ID of the transaction associated with the update.
	PreviousKeySecretId *string `json:"previousKeySecretId,omitempty"`
	// The datetime when the job started
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// Estimated total time for the job to finish
	EstimatedTimeInMinute *int32 `json:"estimatedTimeInMinute,omitempty"`
}

// NewDataStoreAzureSubscriptionUpdateCredentialsJobModelWithDefaults instantiates a new DataStoreAzureSubscriptionUpdateCredentialsJobModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataStoreAzureSubscriptionUpdateCredentialsJobModelWithDefaults() *DataStoreAzureSubscriptionUpdateCredentialsJobModel {
	this := DataStoreAzureSubscriptionUpdateCredentialsJobModel{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetState() UpdateAzureSubscriptionCredentialJobState {
	if o == nil || IsNil(o.State) {
		var ret UpdateAzureSubscriptionCredentialJobState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetStateOk() (*UpdateAzureSubscriptionCredentialJobState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given UpdateAzureSubscriptionCredentialJobState and assigns it to the State field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetState(v UpdateAzureSubscriptionCredentialJobState) {
	o.State = &v
}

// GetFailedCatalogIds returns the FailedCatalogIds field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetFailedCatalogIds() []string {
	if o == nil || IsNil(o.FailedCatalogIds) {
		var ret []string
		return ret
	}
	return o.FailedCatalogIds
}

// GetFailedCatalogIdsOk returns a tuple with the FailedCatalogIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetFailedCatalogIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FailedCatalogIds) {
		return nil, false
	}
	return o.FailedCatalogIds, true
}

// SetFailedCatalogIds gets a reference to the given []string and assigns it to the FailedCatalogIds field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetFailedCatalogIds(v []string) {
	o.FailedCatalogIds = v
}

// GetPreviousKeySecretId returns the PreviousKeySecretId field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetPreviousKeySecretId() string {
	if o == nil || IsNil(o.PreviousKeySecretId) {
		var ret string
		return ret
	}
	return *o.PreviousKeySecretId
}

// GetPreviousKeySecretIdOk returns a tuple with the PreviousKeySecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetPreviousKeySecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousKeySecretId) {
		return nil, false
	}
	return o.PreviousKeySecretId, true
}

// SetPreviousKeySecretId gets a reference to the given string and assigns it to the PreviousKeySecretId field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetPreviousKeySecretId(v string) {
	o.PreviousKeySecretId = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetEstimatedTimeInMinute returns the EstimatedTimeInMinute field value if set, zero value otherwise.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetEstimatedTimeInMinute() int32 {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		var ret int32
		return ret
	}
	return *o.EstimatedTimeInMinute
}

// GetEstimatedTimeInMinuteOk returns a tuple with the EstimatedTimeInMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) GetEstimatedTimeInMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedTimeInMinute) {
		return nil, false
	}
	return o.EstimatedTimeInMinute, true
}

// SetEstimatedTimeInMinute gets a reference to the given int32 and assigns it to the EstimatedTimeInMinute field.
func (o *DataStoreAzureSubscriptionUpdateCredentialsJobModel) SetEstimatedTimeInMinute(v int32) {
	o.EstimatedTimeInMinute = &v
}

func (o DataStoreAzureSubscriptionUpdateCredentialsJobModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataStoreAzureSubscriptionUpdateCredentialsJobModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.FailedCatalogIds) {
		toSerialize["failedCatalogIds"] = o.FailedCatalogIds
	}
	if !IsNil(o.PreviousKeySecretId) {
		toSerialize["previousKeySecretId"] = o.PreviousKeySecretId
	}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.EstimatedTimeInMinute) {
		toSerialize["estimatedTimeInMinute"] = o.EstimatedTimeInMinute
	}
	return toSerialize, nil
}

type NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel struct {
	value *DataStoreAzureSubscriptionUpdateCredentialsJobModel
	isSet bool
}

func (v NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) Get() *DataStoreAzureSubscriptionUpdateCredentialsJobModel {
	return v.value
}

func (v *NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) Set(val *DataStoreAzureSubscriptionUpdateCredentialsJobModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataStoreAzureSubscriptionUpdateCredentialsJobModel(val *DataStoreAzureSubscriptionUpdateCredentialsJobModel) *NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel {
	return &NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel{value: val, isSet: true}
}

func (v NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataStoreAzureSubscriptionUpdateCredentialsJobModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
