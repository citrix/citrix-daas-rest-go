/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the AddRemoteBrowserIsolationWebAppModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddRemoteBrowserIsolationWebAppModel{}

// AddRemoteBrowserIsolationWebAppModel struct for AddRemoteBrowserIsolationWebAppModel
type AddRemoteBrowserIsolationWebAppModel struct {
	// The friendly name displayed to the admin in the UI
	FriendlyName *string `json:"friendlyName,omitempty"`
	// The target URL of the published app
	DestinationUrl *string `json:"destinationUrl,omitempty"`
	// Which web browser was used for the launch
	WebBrowser *string `json:"webBrowser,omitempty"`
	// Indicates that an app uses shared passcode
	PasscodeBased *bool `json:"passcodeBased,omitempty"`
	// Indicates that an app requires user authentication
	Authenticated *bool `json:"authenticated,omitempty"`
	// The password of an app
	Password *string `json:"password,omitempty"`
	// The hash of the Secure Browser app icon
	IconHash *string `json:"iconHash,omitempty"`
}

// NewAddRemoteBrowserIsolationWebAppModelWithDefaults instantiates a new AddRemoteBrowserIsolationWebAppModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRemoteBrowserIsolationWebAppModelWithDefaults() *AddRemoteBrowserIsolationWebAppModel {
	this := AddRemoteBrowserIsolationWebAppModel{}
	var webBrowser string = "ChromeLnx"
	this.WebBrowser = &webBrowser
	return &this
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetDestinationUrl() string {
	if o == nil || IsNil(o.DestinationUrl) {
		var ret string
		return ret
	}
	return *o.DestinationUrl
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetDestinationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationUrl) {
		return nil, false
	}
	return o.DestinationUrl, true
}

// SetDestinationUrl gets a reference to the given string and assigns it to the DestinationUrl field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetDestinationUrl(v string) {
	o.DestinationUrl = &v
}

// GetWebBrowser returns the WebBrowser field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetWebBrowser() string {
	if o == nil || IsNil(o.WebBrowser) {
		var ret string
		return ret
	}
	return *o.WebBrowser
}

// GetWebBrowserOk returns a tuple with the WebBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetWebBrowserOk() (*string, bool) {
	if o == nil || IsNil(o.WebBrowser) {
		return nil, false
	}
	return o.WebBrowser, true
}

// SetWebBrowser gets a reference to the given string and assigns it to the WebBrowser field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetWebBrowser(v string) {
	o.WebBrowser = &v
}

// GetPasscodeBased returns the PasscodeBased field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetPasscodeBased() bool {
	if o == nil || IsNil(o.PasscodeBased) {
		var ret bool
		return ret
	}
	return *o.PasscodeBased
}

// GetPasscodeBasedOk returns a tuple with the PasscodeBased field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetPasscodeBasedOk() (*bool, bool) {
	if o == nil || IsNil(o.PasscodeBased) {
		return nil, false
	}
	return o.PasscodeBased, true
}

// SetPasscodeBased gets a reference to the given bool and assigns it to the PasscodeBased field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetPasscodeBased(v bool) {
	o.PasscodeBased = &v
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetAuthenticated() bool {
	if o == nil || IsNil(o.Authenticated) {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticated) {
		return nil, false
	}
	return o.Authenticated, true
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetPassword(v string) {
	o.Password = &v
}

// GetIconHash returns the IconHash field value if set, zero value otherwise.
func (o *AddRemoteBrowserIsolationWebAppModel) GetIconHash() string {
	if o == nil || IsNil(o.IconHash) {
		var ret string
		return ret
	}
	return *o.IconHash
}

// GetIconHashOk returns a tuple with the IconHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddRemoteBrowserIsolationWebAppModel) GetIconHashOk() (*string, bool) {
	if o == nil || IsNil(o.IconHash) {
		return nil, false
	}
	return o.IconHash, true
}

// SetIconHash gets a reference to the given string and assigns it to the IconHash field.
func (o *AddRemoteBrowserIsolationWebAppModel) SetIconHash(v string) {
	o.IconHash = &v
}

func (o AddRemoteBrowserIsolationWebAppModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddRemoteBrowserIsolationWebAppModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FriendlyName) {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if !IsNil(o.DestinationUrl) {
		toSerialize["destinationUrl"] = o.DestinationUrl
	}
	if !IsNil(o.WebBrowser) {
		toSerialize["webBrowser"] = o.WebBrowser
	}
	if !IsNil(o.PasscodeBased) {
		toSerialize["passcodeBased"] = o.PasscodeBased
	}
	if !IsNil(o.Authenticated) {
		toSerialize["authenticated"] = o.Authenticated
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.IconHash) {
		toSerialize["iconHash"] = o.IconHash
	}
	return toSerialize, nil
}

type NullableAddRemoteBrowserIsolationWebAppModel struct {
	value *AddRemoteBrowserIsolationWebAppModel
	isSet bool
}

func (v NullableAddRemoteBrowserIsolationWebAppModel) Get() *AddRemoteBrowserIsolationWebAppModel {
	return v.value
}

func (v *NullableAddRemoteBrowserIsolationWebAppModel) Set(val *AddRemoteBrowserIsolationWebAppModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRemoteBrowserIsolationWebAppModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRemoteBrowserIsolationWebAppModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRemoteBrowserIsolationWebAppModel(val *AddRemoteBrowserIsolationWebAppModel) *NullableAddRemoteBrowserIsolationWebAppModel {
	return &NullableAddRemoteBrowserIsolationWebAppModel{value: val, isSet: true}
}

func (v NullableAddRemoteBrowserIsolationWebAppModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRemoteBrowserIsolationWebAppModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
