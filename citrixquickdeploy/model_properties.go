/*
Citrix Virtual App & Desktop Catalog Service 147.0.26651.57932

Catalog Service

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package citrixquickdeploy

import (
	"encoding/json"
)

// checks if the Properties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Properties{}

// Properties struct for Properties
type Properties struct {
	ResponseBody     *string `json:"responseBody,omitempty"`
	StatusCode       *string `json:"statusCode,omitempty"`
	ServiceRequestId *string `json:"serviceRequestId,omitempty"`
}

// NewPropertiesWithDefaults instantiates a new Properties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertiesWithDefaults() *Properties {
	this := Properties{}
	return &this
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *Properties) GetResponseBody() string {
	if o == nil || IsNil(o.ResponseBody) {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Properties) GetResponseBodyOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseBody) {
		return nil, false
	}
	return o.ResponseBody, true
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *Properties) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *Properties) GetStatusCode() string {
	if o == nil || IsNil(o.StatusCode) {
		var ret string
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Properties) GetStatusCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// SetStatusCode gets a reference to the given string and assigns it to the StatusCode field.
func (o *Properties) SetStatusCode(v string) {
	o.StatusCode = &v
}

// GetServiceRequestId returns the ServiceRequestId field value if set, zero value otherwise.
func (o *Properties) GetServiceRequestId() string {
	if o == nil || IsNil(o.ServiceRequestId) {
		var ret string
		return ret
	}
	return *o.ServiceRequestId
}

// GetServiceRequestIdOk returns a tuple with the ServiceRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Properties) GetServiceRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceRequestId) {
		return nil, false
	}
	return o.ServiceRequestId, true
}

// SetServiceRequestId gets a reference to the given string and assigns it to the ServiceRequestId field.
func (o *Properties) SetServiceRequestId(v string) {
	o.ServiceRequestId = &v
}

func (o Properties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Properties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResponseBody) {
		toSerialize["responseBody"] = o.ResponseBody
	}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.ServiceRequestId) {
		toSerialize["serviceRequestId"] = o.ServiceRequestId
	}
	return toSerialize, nil
}

type NullableProperties struct {
	value *Properties
	isSet bool
}

func (v NullableProperties) Get() *Properties {
	return v.value
}

func (v *NullableProperties) Set(val *Properties) {
	v.value = val
	v.isSet = true
}

func (v NullableProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProperties(val *Properties) *NullableProperties {
	return &NullableProperties{value: val, isSet: true}
}

func (v NullableProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
